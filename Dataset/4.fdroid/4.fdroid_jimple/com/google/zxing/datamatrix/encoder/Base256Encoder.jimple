com.google.zxing.datamatrix.encoder.Base256Encoder extends java.lang.Object implements com.google.zxing.datamatrix.encoder.Encoder
    void <init>()
    {
        com.google.zxing.datamatrix.encoder.Base256Encoder r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.Base256Encoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static char randomize255State(char, int)
    {
        char $c0;
        int $i1;

        $c0 := @parameter0: char;

        $i1 := @parameter1: int;

        $i1 = $i1 * 149;

        $i1 = $i1 % 255;

        $i1 = $i1 + 1;

        $i1 = $c0 + $i1;

        if $i1 > 255 goto label1;

        $c0 = (char) $i1;

        return $c0;

     label1:
        $i1 = $i1 + -256;

        $c0 = (char) $i1;

        return $c0;
    }
    public void encode(com.google.zxing.datamatrix.encoder.EncoderContext)
    {
        com.google.zxing.datamatrix.encoder.Base256Encoder r0;
        com.google.zxing.datamatrix.encoder.EncoderContext $r1;
        java.lang.StringBuilder r2;
        int i0, i1, $i3;
        boolean $z0, $z1;
        char $c2;
        java.lang.String $r3;
        com.google.zxing.datamatrix.encoder.SymbolInfo $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: com.google.zxing.datamatrix.encoder.Base256Encoder;

        $r1 := @parameter0: com.google.zxing.datamatrix.encoder.EncoderContext;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(0);

     label01:
        $z0 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: boolean hasMoreCharacters()>();

        if $z0 == 0 goto label02;

        $c2 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: char getCurrentChar()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        i1 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        i1 = i1 + 1;

        $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos> = i1;

        $r3 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: java.lang.String getMessage()>();

        i1 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        i0 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.Base256Encoder: int getEncodingMode()>();

        i1 = staticinvoke <com.google.zxing.datamatrix.encoder.HighLevelEncoder: int lookAheadTest(java.lang.CharSequence,int,int)>($r3, i1, i0);

        i0 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.Base256Encoder: int getEncodingMode()>();

        if i1 == i0 goto label01;

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void signalEncoderChange(int)>(i1);

     label02:
        i1 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        i1 = i1 + -1;

        i0 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int getCodewordCount()>();

        i0 = i0 + i1;

        i0 = i0 + 1;

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void updateSymbolInfo(int)>(i0);

        $r4 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: com.google.zxing.datamatrix.encoder.SymbolInfo getSymbolInfo()>();

        $i3 = virtualinvoke $r4.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getDataCapacity()>();

        i0 = $i3 - i0;

        if i0 <= 0 goto label07;

        $z0 = 1;

     label03:
        $z1 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: boolean hasMoreCharacters()>();

        if $z1 != 0 goto label04;

        if $z0 == 0 goto label05;

     label04:
        if i1 > 249 goto label08;

        $c2 = (char) i1;

        virtualinvoke r2.<java.lang.StringBuilder: void setCharAt(int,char)>(0, $c2);

     label05:
        i1 = 0;

        i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

     label06:
        if i1 >= i0 goto label10;

        $c2 = virtualinvoke r2.<java.lang.StringBuilder: char charAt(int)>(i1);

        $i3 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int getCodewordCount()>();

        $i3 = $i3 + 1;

        $c2 = staticinvoke <com.google.zxing.datamatrix.encoder.Base256Encoder: char randomize255State(char,int)>($c2, $i3);

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodeword(char)>($c2);

        i1 = i1 + 1;

        goto label06;

     label07:
        $z0 = 0;

        goto label03;

     label08:
        if i1 <= 249 goto label09;

        if i1 > 1555 goto label09;

        i0 = i1 / 250;

        i0 = i0 + 249;

        $c2 = (char) i0;

        virtualinvoke r2.<java.lang.StringBuilder: void setCharAt(int,char)>(0, $c2);

        i1 = i1 % 250;

        $c2 = (char) i1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(1, $c2);

        goto label05;

     label09:
        $r5 = new java.lang.IllegalStateException;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message length not in valid ranges: ");

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label10:
        return;
    }
    public int getEncodingMode()
    {
        com.google.zxing.datamatrix.encoder.Base256Encoder r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.Base256Encoder;

        return 5;
    }
