com.google.zxing.datamatrix.encoder.C40Encoder extends java.lang.Object implements com.google.zxing.datamatrix.encoder.Encoder
    void <init>()
    {
        com.google.zxing.datamatrix.encoder.C40Encoder r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.C40Encoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private int backtrackOneCharacter(com.google.zxing.datamatrix.encoder.EncoderContext, java.lang.StringBuilder, java.lang.StringBuilder, int)
    {
        com.google.zxing.datamatrix.encoder.C40Encoder r0;
        com.google.zxing.datamatrix.encoder.EncoderContext $r1;
        java.lang.StringBuilder $r2, $r3;
        int $i0, $i1;
        char $c2;

        r0 := @this: com.google.zxing.datamatrix.encoder.C40Encoder;

        $r1 := @parameter0: com.google.zxing.datamatrix.encoder.EncoderContext;

        $r2 := @parameter1: java.lang.StringBuilder;

        $r3 := @parameter2: java.lang.StringBuilder;

        $i0 := @parameter3: int;

        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i0 = $i1 - $i0;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>($i0, $i1);

        $i0 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        $i0 = $i0 + -1;

        $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos> = $i0;

        $c2 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: char getCurrentChar()>();

        $i0 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.C40Encoder: int encodeChar(char,java.lang.StringBuilder)>($c2, $r3);

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void resetSymbolInfo()>();

        return $i0;
    }
    private static java.lang.String encodeToCodewords(java.lang.CharSequence, int)
    {
        java.lang.CharSequence $r0;
        int $i0, $i3;
        char c1, c2, $c4;
        java.lang.String $r1;
        char[] $r2;

        $r0 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        c1 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $i3 = $i0 + 1;

        c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i3);

        $i0 = $i0 + 2;

        $c4 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i0);

        $i0 = c1 * 1600;

        $i3 = c2 * 40;

        $i0 = $i0 + $i3;

        $i0 = $i0 + $c4;

        $i0 = $i0 + 1;

        $i3 = $i0 / 256;

        c1 = (char) $i3;

        $i0 = $i0 % 256;

        c2 = (char) $i0;

        $r1 = new java.lang.String;

        $r2 = newarray (char)[2];

        $r2[0] = c1;

        $r2[1] = c2;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r2);

        return $r1;
    }
    static void writeNextTriplet(com.google.zxing.datamatrix.encoder.EncoderContext, java.lang.StringBuilder)
    {
        com.google.zxing.datamatrix.encoder.EncoderContext $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @parameter0: com.google.zxing.datamatrix.encoder.EncoderContext;

        $r1 := @parameter1: java.lang.StringBuilder;

        $r2 = staticinvoke <com.google.zxing.datamatrix.encoder.C40Encoder: java.lang.String encodeToCodewords(java.lang.CharSequence,int)>($r1, 0);

        virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodewords(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, 3);

        return;
    }
    public void encode(com.google.zxing.datamatrix.encoder.EncoderContext)
    {
        com.google.zxing.datamatrix.encoder.C40Encoder r0;
        com.google.zxing.datamatrix.encoder.EncoderContext $r1;
        int i0, $i2, $i3, $i4;
        java.lang.StringBuilder r2, r3;
        boolean $z0;
        char $c1;
        com.google.zxing.datamatrix.encoder.SymbolInfo $r4;
        java.lang.String $r5;

        r0 := @this: com.google.zxing.datamatrix.encoder.C40Encoder;

        $r1 := @parameter0: com.google.zxing.datamatrix.encoder.EncoderContext;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

     label1:
        $z0 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: boolean hasMoreCharacters()>();

        if $z0 == 0 goto label7;

        $c1 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: char getCurrentChar()>();

        $i2 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        $i2 = $i2 + 1;

        $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos> = $i2;

        $i3 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.C40Encoder: int encodeChar(char,java.lang.StringBuilder)>($c1, r2);

        $i2 = $i3;

        i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        i0 = i0 / 3;

        i0 = i0 * 2;

        $i4 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int getCodewordCount()>();

        i0 = $i4 + i0;

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void updateSymbolInfo(int)>(i0);

        $r4 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: com.google.zxing.datamatrix.encoder.SymbolInfo getSymbolInfo()>();

        $i4 = virtualinvoke $r4.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getDataCapacity()>();

        i0 = $i4 - i0;

        $z0 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: boolean hasMoreCharacters()>();

        if $z0 != 0 goto label6;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $i4 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        $i4 = $i4 % 3;

        if $i4 != 2 goto label3;

        if i0 < 2 goto label2;

        if i0 <= 2 goto label3;

     label2:
        $i2 = specialinvoke r0.<com.google.zxing.datamatrix.encoder.C40Encoder: int backtrackOneCharacter(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder,java.lang.StringBuilder,int)>($r1, r2, r3, $i3);

     label3:
        $i3 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        $i3 = $i3 % 3;

        if $i3 != 1 goto label7;

        if $i2 > 3 goto label4;

        if i0 != 1 goto label5;

     label4:
        if $i2 <= 3 goto label7;

     label5:
        $i2 = specialinvoke r0.<com.google.zxing.datamatrix.encoder.C40Encoder: int backtrackOneCharacter(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder,java.lang.StringBuilder,int)>($r1, r2, r3, $i2);

        goto label3;

     label6:
        $i2 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        $i2 = $i2 % 3;

        if $i2 != 0 goto label1;

        $r5 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: java.lang.String getMessage()>();

        $i2 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        $i3 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.C40Encoder: int getEncodingMode()>();

        $i2 = staticinvoke <com.google.zxing.datamatrix.encoder.HighLevelEncoder: int lookAheadTest(java.lang.CharSequence,int,int)>($r5, $i2, $i3);

        $i3 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.C40Encoder: int getEncodingMode()>();

        if $i2 == $i3 goto label1;

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void signalEncoderChange(int)>($i2);

     label7:
        virtualinvoke r0.<com.google.zxing.datamatrix.encoder.C40Encoder: void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder)>($r1, r2);

        return;
    }
    int encodeChar(char, java.lang.StringBuilder)
    {
        com.google.zxing.datamatrix.encoder.C40Encoder r0;
        char $c0;
        java.lang.StringBuilder $r1;
        int $i1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;

        r0 := @this: com.google.zxing.datamatrix.encoder.C40Encoder;

        $c0 := @parameter0: char;

        $r1 := @parameter1: java.lang.StringBuilder;

        if $c0 != 32 goto label1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(3);

        return 1;

     label1:
        if $c0 < 48 goto label2;

        if $c0 > 57 goto label2;

        $i1 = $c0 + -48;

        $i1 = $i1 + 4;

        $c0 = (char) $i1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        return 1;

     label2:
        if $c0 < 65 goto label3;

        if $c0 > 90 goto label3;

        $i1 = $c0 + -65;

        $i1 = $i1 + 14;

        $c0 = (char) $i1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        return 1;

     label3:
        if $c0 < 0 goto label4;

        if $c0 > 31 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        return 2;

     label4:
        if $c0 < 33 goto label5;

        if $c0 > 47 goto label5;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(1);

        $i1 = $c0 + -33;

        $c0 = (char) $i1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        return 2;

     label5:
        if $c0 < 58 goto label6;

        if $c0 > 64 goto label6;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(1);

        $i1 = $c0 + -58;

        $i1 = $i1 + 15;

        $c0 = (char) $i1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        return 2;

     label6:
        if $c0 < 91 goto label7;

        if $c0 > 95 goto label7;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(1);

        $i1 = $c0 + -91;

        $i1 = $i1 + 22;

        $c0 = (char) $i1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        return 2;

     label7:
        if $c0 < 96 goto label8;

        if $c0 > 127 goto label8;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(2);

        $i1 = $c0 + -96;

        $c0 = (char) $i1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        return 2;

     label8:
        if $c0 < 128 goto label9;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0001\u001e");

        $i1 = $c0 + -128;

        $c0 = (char) $i1;

        $i1 = virtualinvoke r0.<com.google.zxing.datamatrix.encoder.C40Encoder: int encodeChar(char,java.lang.StringBuilder)>($c0, $r1);

        $i1 = 2 + $i1;

        return $i1;

     label9:
        $r2 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal character: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;
    }
    public int getEncodingMode()
    {
        com.google.zxing.datamatrix.encoder.C40Encoder r0;

        r0 := @this: com.google.zxing.datamatrix.encoder.C40Encoder;

        return 1;
    }
    void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext, java.lang.StringBuilder)
    {
        com.google.zxing.datamatrix.encoder.C40Encoder r0;
        com.google.zxing.datamatrix.encoder.EncoderContext $r1;
        java.lang.StringBuilder $r2;
        int i0, i1, $i2;
        com.google.zxing.datamatrix.encoder.SymbolInfo $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.google.zxing.datamatrix.encoder.C40Encoder;

        $r1 := @parameter0: com.google.zxing.datamatrix.encoder.EncoderContext;

        $r2 := @parameter1: java.lang.StringBuilder;

        i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        i1 = i1 / 3;

        i0 = i1 * 2;

        i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        i1 = i1 % 3;

        $i2 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int getCodewordCount()>();

        i0 = $i2 + i0;

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void updateSymbolInfo(int)>(i0);

        $r3 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: com.google.zxing.datamatrix.encoder.SymbolInfo getSymbolInfo()>();

        $i2 = virtualinvoke $r3.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getDataCapacity()>();

        i0 = $i2 - i0;

        if i1 != 2 goto label04;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(0);

     label01:
        i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if i1 < 3 goto label02;

        staticinvoke <com.google.zxing.datamatrix.encoder.C40Encoder: void writeNextTriplet(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder)>($r1, $r2);

        goto label01;

     label02:
        $z0 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: boolean hasMoreCharacters()>();

        if $z0 == 0 goto label03;

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodeword(char)>(254);

     label03:
        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void signalEncoderChange(int)>(0);

        return;

     label04:
        if i0 != 1 goto label08;

        if i1 != 1 goto label08;

     label05:
        i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if i1 < 3 goto label06;

        staticinvoke <com.google.zxing.datamatrix.encoder.C40Encoder: void writeNextTriplet(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder)>($r1, $r2);

        goto label05;

     label06:
        $z0 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: boolean hasMoreCharacters()>();

        if $z0 == 0 goto label07;

        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodeword(char)>(254);

     label07:
        i1 = $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos>;

        i1 = i1 + -1;

        $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: int pos> = i1;

        goto label03;

     label08:
        if i1 != 0 goto label12;

     label09:
        i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if i1 < 3 goto label10;

        staticinvoke <com.google.zxing.datamatrix.encoder.C40Encoder: void writeNextTriplet(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder)>($r1, $r2);

        goto label09;

     label10:
        if i0 > 0 goto label11;

        $z0 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: boolean hasMoreCharacters()>();

        if $z0 == 0 goto label03;

     label11:
        virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.EncoderContext: void writeCodeword(char)>(254);

        goto label03;

     label12:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unexpected case. Please report!");

        throw $r4;
    }
