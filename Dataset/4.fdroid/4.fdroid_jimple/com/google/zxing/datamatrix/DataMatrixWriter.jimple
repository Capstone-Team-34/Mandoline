com.google.zxing.datamatrix.DataMatrixWriter extends java.lang.Object implements com.google.zxing.Writer
    public void <init>()
    {
        com.google.zxing.datamatrix.DataMatrixWriter r0;

        r0 := @this: com.google.zxing.datamatrix.DataMatrixWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static com.google.zxing.common.BitMatrix convertByteMatrixToBitMatrix(com.google.zxing.qrcode.encoder.ByteMatrix)
    {
        com.google.zxing.qrcode.encoder.ByteMatrix $r0;
        com.google.zxing.common.BitMatrix r1;
        int $i0, $i1, i2, i3;
        byte $b4;

        $r0 := @parameter0: com.google.zxing.qrcode.encoder.ByteMatrix;

        $i0 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getWidth()>();

        $i1 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: int getHeight()>();

        r1 = new com.google.zxing.common.BitMatrix;

        specialinvoke r1.<com.google.zxing.common.BitMatrix: void <init>(int,int)>($i0, $i1);

        virtualinvoke r1.<com.google.zxing.common.BitMatrix: void clear()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label5;

        i3 = 0;

     label2:
        if i3 >= $i1 goto label4;

        $b4 = virtualinvoke $r0.<com.google.zxing.qrcode.encoder.ByteMatrix: byte get(int,int)>(i2, i3);

        if $b4 != 1 goto label3;

        virtualinvoke r1.<com.google.zxing.common.BitMatrix: void set(int,int)>(i2, i3);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return r1;
    }
    private static com.google.zxing.common.BitMatrix encodeLowLevel(com.google.zxing.datamatrix.encoder.DefaultPlacement, com.google.zxing.datamatrix.encoder.SymbolInfo)
    {
        com.google.zxing.datamatrix.encoder.DefaultPlacement $r0;
        com.google.zxing.datamatrix.encoder.SymbolInfo $r1;
        com.google.zxing.qrcode.encoder.ByteMatrix r2;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7;
        boolean $z0;
        com.google.zxing.common.BitMatrix $r3;

        $r0 := @parameter0: com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $r1 := @parameter1: com.google.zxing.datamatrix.encoder.SymbolInfo;

        $i0 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolDataWidth()>();

        $i1 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolDataHeight()>();

        r2 = new com.google.zxing.qrcode.encoder.ByteMatrix;

        $i2 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolWidth()>();

        $i3 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolHeight()>();

        specialinvoke r2.<com.google.zxing.qrcode.encoder.ByteMatrix: void <init>(int,int)>($i2, $i3);

        $i2 = 0;

        $i3 = 0;

     label01:
        if $i3 >= $i1 goto label16;

        $i4 = $r1.<com.google.zxing.datamatrix.encoder.SymbolInfo: int matrixHeight>;

        $i4 = $i3 % $i4;

        if $i4 != 0 goto label06;

        $i4 = 0;

        i5 = 0;

     label02:
        $i6 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolWidth()>();

        if i5 >= $i6 goto label05;

        $i6 = i5 % 2;

        if $i6 != 0 goto label04;

        $z0 = 1;

     label03:
        virtualinvoke r2.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i4, $i2, $z0);

        $i4 = $i4 + 1;

        i5 = i5 + 1;

        goto label02;

     label04:
        $z0 = 0;

        goto label03;

     label05:
        $i2 = $i2 + 1;

     label06:
        $i4 = 0;

        i5 = 0;

     label07:
        if i5 >= $i0 goto label12;

        $i6 = $r1.<com.google.zxing.datamatrix.encoder.SymbolInfo: int matrixWidth>;

        $i6 = i5 % $i6;

        if $i6 != 0 goto label08;

        virtualinvoke r2.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i4, $i2, 1);

        $i4 = $i4 + 1;

     label08:
        $z0 = virtualinvoke $r0.<com.google.zxing.datamatrix.encoder.DefaultPlacement: boolean getBit(int,int)>(i5, $i3);

        virtualinvoke r2.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i4, $i2, $z0);

        $i4 = $i4 + 1;

        $i6 = $r1.<com.google.zxing.datamatrix.encoder.SymbolInfo: int matrixWidth>;

        $i6 = i5 % $i6;

        $i7 = $r1.<com.google.zxing.datamatrix.encoder.SymbolInfo: int matrixWidth>;

        $i7 = $i7 + -1;

        if $i6 != $i7 goto label10;

        $i6 = $i3 % 2;

        if $i6 != 0 goto label11;

        $z0 = 1;

     label09:
        virtualinvoke r2.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i4, $i2, $z0);

        $i4 = $i4 + 1;

     label10:
        i5 = i5 + 1;

        goto label07;

     label11:
        $z0 = 0;

        goto label09;

     label12:
        $i2 = $i2 + 1;

        $i4 = $r1.<com.google.zxing.datamatrix.encoder.SymbolInfo: int matrixHeight>;

        $i4 = $i3 % $i4;

        i5 = $r1.<com.google.zxing.datamatrix.encoder.SymbolInfo: int matrixHeight>;

        i5 = i5 + -1;

        if $i4 != i5 goto label15;

        $i4 = 0;

        i5 = 0;

     label13:
        $i6 = virtualinvoke $r1.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolWidth()>();

        if i5 >= $i6 goto label14;

        virtualinvoke r2.<com.google.zxing.qrcode.encoder.ByteMatrix: void set(int,int,boolean)>($i4, $i2, 1);

        $i4 = $i4 + 1;

        i5 = i5 + 1;

        goto label13;

     label14:
        $i2 = $i2 + 1;

     label15:
        $i3 = $i3 + 1;

        goto label01;

     label16:
        $r3 = staticinvoke <com.google.zxing.datamatrix.DataMatrixWriter: com.google.zxing.common.BitMatrix convertByteMatrixToBitMatrix(com.google.zxing.qrcode.encoder.ByteMatrix)>(r2);

        return $r3;
    }
    public com.google.zxing.common.BitMatrix encode(java.lang.String, com.google.zxing.BarcodeFormat, int, int, java.util.Map)
    {
        com.google.zxing.datamatrix.DataMatrixWriter r0;
        java.lang.String $r1;
        com.google.zxing.BarcodeFormat $r2, $r6;
        int $i0, $i1;
        java.util.Map r3;
        com.google.zxing.datamatrix.encoder.DefaultPlacement r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r7;
        com.google.zxing.datamatrix.encoder.SymbolShapeHint r8, r13;
        com.google.zxing.Dimension r9, r10, r14;
        com.google.zxing.EncodeHintType $r11;
        java.lang.Object $r12;
        com.google.zxing.datamatrix.encoder.SymbolInfo $r15;
        com.google.zxing.common.BitMatrix $r16;

        r0 := @this: com.google.zxing.datamatrix.DataMatrixWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.zxing.BarcodeFormat;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        r3 := @parameter4: java.util.Map;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Found empty contents");

        throw $r5;

     label1:
        $r6 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat DATA_MATRIX>;

        if $r2 == $r6 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can only encode DATA_MATRIX, but got ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label2:
        if $i0 < 0 goto label3;

        if $i1 >= 0 goto label4;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested dimensions are too small: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(120);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label4:
        r8 = <com.google.zxing.datamatrix.encoder.SymbolShapeHint: com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_NONE>;

        r9 = null;

        r10 = null;

        if r3 == null goto label7;

        $r11 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType DATA_MATRIX_SHAPE>;

        $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        r13 = (com.google.zxing.datamatrix.encoder.SymbolShapeHint) $r12;

        if r13 == null goto label5;

        r8 = r13;

     label5:
        $r11 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType MIN_SIZE>;

        $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        r14 = (com.google.zxing.Dimension) $r12;

        if r14 == null goto label6;

        r9 = r14;

     label6:
        $r11 = <com.google.zxing.EncodeHintType: com.google.zxing.EncodeHintType MAX_SIZE>;

        $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        r14 = (com.google.zxing.Dimension) $r12;

        if r14 == null goto label7;

        r10 = r14;

     label7:
        $r1 = staticinvoke <com.google.zxing.datamatrix.encoder.HighLevelEncoder: java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension)>($r1, r8, r9, r10);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r15 = staticinvoke <com.google.zxing.datamatrix.encoder.SymbolInfo: com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension,boolean)>($i0, r8, r9, r10, 1);

        $r1 = staticinvoke <com.google.zxing.datamatrix.encoder.ErrorCorrection: java.lang.String encodeECC200(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolInfo)>($r1, $r15);

        r4 = new com.google.zxing.datamatrix.encoder.DefaultPlacement;

        $i0 = virtualinvoke $r15.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolDataWidth()>();

        $i1 = virtualinvoke $r15.<com.google.zxing.datamatrix.encoder.SymbolInfo: int getSymbolDataHeight()>();

        specialinvoke r4.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void <init>(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        virtualinvoke r4.<com.google.zxing.datamatrix.encoder.DefaultPlacement: void place()>();

        $r16 = staticinvoke <com.google.zxing.datamatrix.DataMatrixWriter: com.google.zxing.common.BitMatrix encodeLowLevel(com.google.zxing.datamatrix.encoder.DefaultPlacement,com.google.zxing.datamatrix.encoder.SymbolInfo)>(r4, $r15);

        return $r16;
    }
