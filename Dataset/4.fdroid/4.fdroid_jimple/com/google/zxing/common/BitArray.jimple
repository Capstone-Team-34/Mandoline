com.google.zxing.common.BitArray extends java.lang.Object implements java.lang.Cloneable
private int[] bits
private int size
    public void <init>()
    {
        com.google.zxing.common.BitArray r0;
        int[] $r1;

        r0 := @this: com.google.zxing.common.BitArray;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.zxing.common.BitArray: int size> = 0;

        $r1 = newarray (int)[1];

        r0.<com.google.zxing.common.BitArray: int[] bits> = $r1;

        return;
    }
    void <init>(int[], int)
    {
        com.google.zxing.common.BitArray r0;
        int[] $r1;
        int $i0;

        r0 := @this: com.google.zxing.common.BitArray;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.zxing.common.BitArray: int[] bits> = $r1;

        r0.<com.google.zxing.common.BitArray: int size> = $i0;

        return;
    }
    private void ensureCapacity(int)
    {
        com.google.zxing.common.BitArray r0;
        int $i0, $i1;
        int[] $r1, $r2, $r3;

        r0 := @this: com.google.zxing.common.BitArray;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.zxing.common.BitArray: int[] bits>;

        $i1 = lengthof $r1;

        $i1 = $i1 * 32;

        if $i0 <= $i1 goto label1;

        $r1 = staticinvoke <com.google.zxing.common.BitArray: int[] makeArray(int)>($i0);

        $r2 = r0.<com.google.zxing.common.BitArray: int[] bits>;

        $r3 = r0.<com.google.zxing.common.BitArray: int[] bits>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        r0.<com.google.zxing.common.BitArray: int[] bits> = $r1;

     label1:
        return;
    }
    private static int[] makeArray(int)
    {
        int $i0;
        int[] $r0;

        $i0 := @parameter0: int;

        $i0 = $i0 + 31;

        $i0 = $i0 / 32;

        $r0 = newarray (int)[$i0];

        return $r0;
    }
    public void appendBit(boolean)
    {
        com.google.zxing.common.BitArray r0;
        boolean $z0;
        int $i0, $i1, $i2;
        int[] $r1;

        r0 := @this: com.google.zxing.common.BitArray;

        $z0 := @parameter0: boolean;

        $i0 = r0.<com.google.zxing.common.BitArray: int size>;

        $i0 = $i0 + 1;

        specialinvoke r0.<com.google.zxing.common.BitArray: void ensureCapacity(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.zxing.common.BitArray: int[] bits>;

        $i0 = r0.<com.google.zxing.common.BitArray: int size>;

        $i0 = $i0 / 32;

        $i1 = $r1[$i0];

        $i2 = r0.<com.google.zxing.common.BitArray: int size>;

        $i2 = $i2 & 31;

        $i2 = 1 << $i2;

        $i1 = $i1 | $i2;

        $r1[$i0] = $i1;

     label1:
        $i0 = r0.<com.google.zxing.common.BitArray: int size>;

        $i0 = $i0 + 1;

        r0.<com.google.zxing.common.BitArray: int size> = $i0;

        return;
    }
    public void appendBitArray(com.google.zxing.common.BitArray)
    {
        com.google.zxing.common.BitArray r0, $r1;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.google.zxing.common.BitArray;

        $r1 := @parameter0: com.google.zxing.common.BitArray;

        i0 = $r1.<com.google.zxing.common.BitArray: int size>;

        $i1 = r0.<com.google.zxing.common.BitArray: int size>;

        $i1 = $i1 + i0;

        specialinvoke r0.<com.google.zxing.common.BitArray: void ensureCapacity(int)>($i1);

        $i1 = 0;

     label1:
        if $i1 >= i0 goto label2;

        $z0 = virtualinvoke $r1.<com.google.zxing.common.BitArray: boolean get(int)>($i1);

        virtualinvoke r0.<com.google.zxing.common.BitArray: void appendBit(boolean)>($z0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    public void appendBits(int, int)
    {
        com.google.zxing.common.BitArray r0;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        r0 := @this: com.google.zxing.common.BitArray;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i1 < 0 goto label1;

        if $i1 <= 32 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Num bits must be between 0 and 32");

        throw $r1;

     label2:
        $i2 = r0.<com.google.zxing.common.BitArray: int size>;

        $i2 = $i2 + $i1;

        specialinvoke r0.<com.google.zxing.common.BitArray: void ensureCapacity(int)>($i2);

     label3:
        if $i1 <= 0 goto label6;

        $i2 = $i1 + -1;

        $i2 = $i0 >> $i2;

        $i2 = $i2 & 1;

        if $i2 != 1 goto label5;

        $z0 = 1;

     label4:
        virtualinvoke r0.<com.google.zxing.common.BitArray: void appendBit(boolean)>($z0);

        $i1 = $i1 + -1;

        goto label3;

     label5:
        $z0 = 0;

        goto label4;

     label6:
        return;
    }
    public com.google.zxing.common.BitArray clone()
    {
        com.google.zxing.common.BitArray r0, $r1;
        int $i0;
        java.lang.Object $r2;
        int[] $r3;

        r0 := @this: com.google.zxing.common.BitArray;

        $r1 = new com.google.zxing.common.BitArray;

        $r3 = r0.<com.google.zxing.common.BitArray: int[] bits>;

        $r2 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (int[]) $r2;

        $i0 = r0.<com.google.zxing.common.BitArray: int size>;

        specialinvoke $r1.<com.google.zxing.common.BitArray: void <init>(int[],int)>($r3, $i0);

        return $r1;
    }
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.google.zxing.common.BitArray r0;

        r0 := @this: com.google.zxing.common.BitArray;

        r0 = virtualinvoke r0.<com.google.zxing.common.BitArray: com.google.zxing.common.BitArray clone()>();

        return r0;
    }
    public boolean equals(java.lang.Object)
    {
        com.google.zxing.common.BitArray r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;
        int[] $r3, $r4;

        r0 := @this: com.google.zxing.common.BitArray;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof com.google.zxing.common.BitArray;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (com.google.zxing.common.BitArray) $r1;

        $i0 = r0.<com.google.zxing.common.BitArray: int size>;

        $i1 = r2.<com.google.zxing.common.BitArray: int size>;

        if $i0 != $i1 goto label2;

        $r3 = r0.<com.google.zxing.common.BitArray: int[] bits>;

        $r4 = r2.<com.google.zxing.common.BitArray: int[] bits>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r3, $r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public boolean get(int)
    {
        com.google.zxing.common.BitArray r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: com.google.zxing.common.BitArray;

        $i0 := @parameter0: int;

        $r1 = r0.<com.google.zxing.common.BitArray: int[] bits>;

        $i1 = $i0 / 32;

        $i1 = $r1[$i1];

        $i0 = $i0 & 31;

        $i0 = 1 << $i0;

        $i0 = $i1 & $i0;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public int getSize()
    {
        com.google.zxing.common.BitArray r0;
        int i0;

        r0 := @this: com.google.zxing.common.BitArray;

        i0 = r0.<com.google.zxing.common.BitArray: int size>;

        return i0;
    }
    public int getSizeInBytes()
    {
        com.google.zxing.common.BitArray r0;
        int $i0;

        r0 := @this: com.google.zxing.common.BitArray;

        $i0 = r0.<com.google.zxing.common.BitArray: int size>;

        $i0 = $i0 + 7;

        $i0 = $i0 / 8;

        return $i0;
    }
    public int hashCode()
    {
        com.google.zxing.common.BitArray r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: com.google.zxing.common.BitArray;

        $i0 = r0.<com.google.zxing.common.BitArray: int size>;

        $i1 = $i0 * 31;

        $r1 = r0.<com.google.zxing.common.BitArray: int[] bits>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r1);

        $i0 = $i1 + $i0;

        return $i0;
    }
    public void toBytes(int, byte[], int, int)
    {
        com.google.zxing.common.BitArray r0;
        byte[] $r1;
        int $i0, $i1, $i2, i3, i4, i5, $i6;
        boolean $z0;
        byte $b7;

        r0 := @this: com.google.zxing.common.BitArray;

        $i2 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        i3 = 0;

     label1:
        if i3 >= $i1 goto label5;

        i4 = 0;

        i5 = 0;

     label2:
        if i5 >= 8 goto label4;

        $z0 = virtualinvoke r0.<com.google.zxing.common.BitArray: boolean get(int)>($i2);

        if $z0 == 0 goto label3;

        $i6 = 7 - i5;

        $i6 = 1 << $i6;

        i4 = i4 | $i6;

     label3:
        $i2 = $i2 + 1;

        i5 = i5 + 1;

        goto label2;

     label4:
        i5 = $i0 + i3;

        $b7 = (byte) i4;

        $r1[i5] = $b7;

        i3 = i3 + 1;

        goto label1;

     label5:
        return;
    }
    public java.lang.String toString()
    {
        com.google.zxing.common.BitArray r0;
        java.lang.StringBuilder r1;
        int $i0, $i1;
        boolean $z0;
        char $c2;
        java.lang.String $r2;

        r0 := @this: com.google.zxing.common.BitArray;

        r1 = new java.lang.StringBuilder;

        $i0 = r0.<com.google.zxing.common.BitArray: int size>;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = r0.<com.google.zxing.common.BitArray: int size>;

        if $i0 >= $i1 goto label5;

        $i1 = $i0 & 7;

        if $i1 != 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label2:
        $z0 = virtualinvoke r0.<com.google.zxing.common.BitArray: boolean get(int)>($i0);

        if $z0 == 0 goto label4;

        $c2 = 88;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $i0 = $i0 + 1;

        goto label1;

     label4:
        $c2 = 46;

        goto label3;

     label5:
        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public void xor(com.google.zxing.common.BitArray)
    {
        com.google.zxing.common.BitArray r0, $r1;
        int[] $r2, $r4;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.google.zxing.common.BitArray;

        $r1 := @parameter0: com.google.zxing.common.BitArray;

        $r2 = r0.<com.google.zxing.common.BitArray: int[] bits>;

        $i0 = lengthof $r2;

        $r2 = $r1.<com.google.zxing.common.BitArray: int[] bits>;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Sizes don\'t match");

        throw $r3;

     label1:
        $i0 = 0;

     label2:
        $r2 = r0.<com.google.zxing.common.BitArray: int[] bits>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label3;

        $r2 = r0.<com.google.zxing.common.BitArray: int[] bits>;

        $i1 = $r2[$i0];

        $r4 = $r1.<com.google.zxing.common.BitArray: int[] bits>;

        $i2 = $r4[$i0];

        $i1 = $i1 ^ $i2;

        $r2[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }
