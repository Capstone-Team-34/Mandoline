fi.iki.elonen.NanoHTTPD$DefaultAsyncRunner extends java.lang.Object implements fi.iki.elonen.NanoHTTPD$AsyncRunner
private long requestCount
    public void <init>()
    {
        fi.iki.elonen.NanoHTTPD$DefaultAsyncRunner r0;

        r0 := @this: fi.iki.elonen.NanoHTTPD$DefaultAsyncRunner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void exec(java.lang.Runnable)
    {
        fi.iki.elonen.NanoHTTPD$DefaultAsyncRunner r0;
        java.lang.Runnable $r1;
        java.lang.Thread r2;
        long $l0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: fi.iki.elonen.NanoHTTPD$DefaultAsyncRunner;

        $r1 := @parameter0: java.lang.Runnable;

        $l0 = r0.<fi.iki.elonen.NanoHTTPD$DefaultAsyncRunner: long requestCount>;

        $l0 = $l0 + 1L;

        r0.<fi.iki.elonen.NanoHTTPD$DefaultAsyncRunner: long requestCount> = $l0;

        r2 = new java.lang.Thread;

        specialinvoke r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);

        virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>(1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NanoHttpd Request Processor (#");

        $l0 = r0.<fi.iki.elonen.NanoHTTPD$DefaultAsyncRunner: long requestCount>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.Thread: void setName(java.lang.String)>($r4);

        virtualinvoke r2.<java.lang.Thread: void start()>();

        return;
    }
