fi.iki.elonen.NanoHTTPD$Method extends java.lang.Enum
private static final fi.iki.elonen.NanoHTTPD$Method[] $VALUES
public static final enum fi.iki.elonen.NanoHTTPD$Method DELETE
public static final enum fi.iki.elonen.NanoHTTPD$Method GET
public static final enum fi.iki.elonen.NanoHTTPD$Method HEAD
public static final enum fi.iki.elonen.NanoHTTPD$Method OPTIONS
public static final enum fi.iki.elonen.NanoHTTPD$Method POST
public static final enum fi.iki.elonen.NanoHTTPD$Method PUT
    static void <clinit>()
    {
        fi.iki.elonen.NanoHTTPD$Method $r0;
        fi.iki.elonen.NanoHTTPD$Method[] $r1;

        $r0 = new fi.iki.elonen.NanoHTTPD$Method;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Method: void <init>(java.lang.String,int)>("GET", 0);

        <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method GET> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Method;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Method: void <init>(java.lang.String,int)>("PUT", 1);

        <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method PUT> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Method;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Method: void <init>(java.lang.String,int)>("POST", 2);

        <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method POST> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Method;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Method: void <init>(java.lang.String,int)>("DELETE", 3);

        <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method DELETE> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Method;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Method: void <init>(java.lang.String,int)>("HEAD", 4);

        <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method HEAD> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Method;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Method: void <init>(java.lang.String,int)>("OPTIONS", 5);

        <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method OPTIONS> = $r0;

        $r1 = newarray (fi.iki.elonen.NanoHTTPD$Method)[6];

        $r0 = <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method GET>;

        $r1[0] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method PUT>;

        $r1[1] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method POST>;

        $r1[2] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method DELETE>;

        $r1[3] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method HEAD>;

        $r1[4] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method OPTIONS>;

        $r1[5] = $r0;

        <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        fi.iki.elonen.NanoHTTPD$Method r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: fi.iki.elonen.NanoHTTPD$Method;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }
    static fi.iki.elonen.NanoHTTPD$Method lookup(java.lang.String)
    {
        java.lang.String $r0, $r3;
        int i0, i1;
        fi.iki.elonen.NanoHTTPD$Method[] $r1;
        fi.iki.elonen.NanoHTTPD$Method r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method[] values()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r1[i1];

        $r3 = virtualinvoke r2.<fi.iki.elonen.NanoHTTPD$Method: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }
    public static fi.iki.elonen.NanoHTTPD$Method valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        fi.iki.elonen.NanoHTTPD$Method $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lfi/iki/elonen/NanoHTTPD$Method;", $r0);

        $r2 = (fi.iki.elonen.NanoHTTPD$Method) $r1;

        return $r2;
    }
    public static fi.iki.elonen.NanoHTTPD$Method[] values()
    {
        java.lang.Object $r0;
        fi.iki.elonen.NanoHTTPD$Method[] $r1;

        $r1 = <fi.iki.elonen.NanoHTTPD$Method: fi.iki.elonen.NanoHTTPD$Method[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (fi.iki.elonen.NanoHTTPD$Method[]) $r0;

        return $r1;
    }
