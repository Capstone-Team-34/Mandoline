fi.iki.elonen.NanoHTTPD$Response$Status extends java.lang.Enum implements fi.iki.elonen.NanoHTTPD$Response$IStatus
private static final fi.iki.elonen.NanoHTTPD$Response$Status[] $VALUES
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status ACCEPTED
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status BAD_REQUEST
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status CREATED
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status FORBIDDEN
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status INTERNAL_ERROR
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status METHOD_NOT_ALLOWED
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status NOT_FOUND
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status NOT_MODIFIED
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status NO_CONTENT
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status OK
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status PARTIAL_CONTENT
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status RANGE_NOT_SATISFIABLE
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status REDIRECT
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status SWITCH_PROTOCOL
public static final enum fi.iki.elonen.NanoHTTPD$Response$Status UNAUTHORIZED
private final java.lang.String description
private final int requestStatus
    static void <clinit>()
    {
        fi.iki.elonen.NanoHTTPD$Response$Status $r0;
        fi.iki.elonen.NanoHTTPD$Response$Status[] $r1;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("SWITCH_PROTOCOL", 0, 101, "Switching Protocols");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status SWITCH_PROTOCOL> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("OK", 1, 200, "OK");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status OK> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("CREATED", 2, 201, "Created");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status CREATED> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("ACCEPTED", 3, 202, "Accepted");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status ACCEPTED> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("NO_CONTENT", 4, 204, "No Content");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status NO_CONTENT> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("PARTIAL_CONTENT", 5, 206, "Partial Content");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status PARTIAL_CONTENT> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("REDIRECT", 6, 301, "Moved Permanently");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status REDIRECT> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("NOT_MODIFIED", 7, 304, "Not Modified");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status NOT_MODIFIED> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("BAD_REQUEST", 8, 400, "Bad Request");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status BAD_REQUEST> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("UNAUTHORIZED", 9, 401, "Unauthorized");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status UNAUTHORIZED> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("FORBIDDEN", 10, 403, "Forbidden");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status FORBIDDEN> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("NOT_FOUND", 11, 404, "Not Found");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status NOT_FOUND> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("METHOD_NOT_ALLOWED", 12, 405, "Method Not Allowed");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status METHOD_NOT_ALLOWED> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("RANGE_NOT_SATISFIABLE", 13, 416, "Requested Range Not Satisfiable");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status RANGE_NOT_SATISFIABLE> = $r0;

        $r0 = new fi.iki.elonen.NanoHTTPD$Response$Status;

        specialinvoke $r0.<fi.iki.elonen.NanoHTTPD$Response$Status: void <init>(java.lang.String,int,int,java.lang.String)>("INTERNAL_ERROR", 14, 500, "Internal Server Error");

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status INTERNAL_ERROR> = $r0;

        $r1 = newarray (fi.iki.elonen.NanoHTTPD$Response$Status)[15];

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status SWITCH_PROTOCOL>;

        $r1[0] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status OK>;

        $r1[1] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status CREATED>;

        $r1[2] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status ACCEPTED>;

        $r1[3] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status NO_CONTENT>;

        $r1[4] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status PARTIAL_CONTENT>;

        $r1[5] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status REDIRECT>;

        $r1[6] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status NOT_MODIFIED>;

        $r1[7] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status BAD_REQUEST>;

        $r1[8] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status UNAUTHORIZED>;

        $r1[9] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status FORBIDDEN>;

        $r1[10] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status NOT_FOUND>;

        $r1[11] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status METHOD_NOT_ALLOWED>;

        $r1[12] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status RANGE_NOT_SATISFIABLE>;

        $r1[13] = $r0;

        $r0 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status INTERNAL_ERROR>;

        $r1[14] = $r0;

        <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int, int, java.lang.String)
    {
        fi.iki.elonen.NanoHTTPD$Response$Status r0;
        java.lang.String $r1, $r2;
        int $i0, $i1;

        r0 := @this: fi.iki.elonen.NanoHTTPD$Response$Status;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<fi.iki.elonen.NanoHTTPD$Response$Status: int requestStatus> = $i1;

        r0.<fi.iki.elonen.NanoHTTPD$Response$Status: java.lang.String description> = $r2;

        return;
    }
    public static fi.iki.elonen.NanoHTTPD$Response$Status valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        fi.iki.elonen.NanoHTTPD$Response$Status $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lfi/iki/elonen/NanoHTTPD$Response$Status;", $r0);

        $r2 = (fi.iki.elonen.NanoHTTPD$Response$Status) $r1;

        return $r2;
    }
    public static fi.iki.elonen.NanoHTTPD$Response$Status[] values()
    {
        java.lang.Object $r0;
        fi.iki.elonen.NanoHTTPD$Response$Status[] $r1;

        $r1 = <fi.iki.elonen.NanoHTTPD$Response$Status: fi.iki.elonen.NanoHTTPD$Response$Status[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (fi.iki.elonen.NanoHTTPD$Response$Status[]) $r0;

        return $r1;
    }
    public java.lang.String getDescription()
    {
        fi.iki.elonen.NanoHTTPD$Response$Status r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: fi.iki.elonen.NanoHTTPD$Response$Status;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = r0.<fi.iki.elonen.NanoHTTPD$Response$Status: int requestStatus>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = r0.<fi.iki.elonen.NanoHTTPD$Response$Status: java.lang.String description>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public int getRequestStatus()
    {
        fi.iki.elonen.NanoHTTPD$Response$Status r0;
        int i0;

        r0 := @this: fi.iki.elonen.NanoHTTPD$Response$Status;

        i0 = r0.<fi.iki.elonen.NanoHTTPD$Response$Status: int requestStatus>;

        return i0;
    }
