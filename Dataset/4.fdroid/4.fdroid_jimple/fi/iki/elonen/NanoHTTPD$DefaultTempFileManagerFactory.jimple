fi.iki.elonen.NanoHTTPD$DefaultTempFileManagerFactory extends java.lang.Object implements fi.iki.elonen.NanoHTTPD$TempFileManagerFactory
final fi.iki.elonen.NanoHTTPD this$0
    private void <init>(fi.iki.elonen.NanoHTTPD)
    {
        fi.iki.elonen.NanoHTTPD$DefaultTempFileManagerFactory r0;
        fi.iki.elonen.NanoHTTPD $r1;

        r0 := @this: fi.iki.elonen.NanoHTTPD$DefaultTempFileManagerFactory;

        $r1 := @parameter0: fi.iki.elonen.NanoHTTPD;

        r0.<fi.iki.elonen.NanoHTTPD$DefaultTempFileManagerFactory: fi.iki.elonen.NanoHTTPD this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(fi.iki.elonen.NanoHTTPD, fi.iki.elonen.NanoHTTPD$1)
    {
        fi.iki.elonen.NanoHTTPD$DefaultTempFileManagerFactory r0;
        fi.iki.elonen.NanoHTTPD $r1;
        fi.iki.elonen.NanoHTTPD$1 $r2;

        r0 := @this: fi.iki.elonen.NanoHTTPD$DefaultTempFileManagerFactory;

        $r1 := @parameter0: fi.iki.elonen.NanoHTTPD;

        $r2 := @parameter1: fi.iki.elonen.NanoHTTPD$1;

        specialinvoke r0.<fi.iki.elonen.NanoHTTPD$DefaultTempFileManagerFactory: void <init>(fi.iki.elonen.NanoHTTPD)>($r1);

        return;
    }
    public fi.iki.elonen.NanoHTTPD$TempFileManager create()
    {
        fi.iki.elonen.NanoHTTPD$DefaultTempFileManagerFactory r0;
        fi.iki.elonen.NanoHTTPD$DefaultTempFileManager $r1;

        r0 := @this: fi.iki.elonen.NanoHTTPD$DefaultTempFileManagerFactory;

        $r1 = new fi.iki.elonen.NanoHTTPD$DefaultTempFileManager;

        specialinvoke $r1.<fi.iki.elonen.NanoHTTPD$DefaultTempFileManager: void <init>()>();

        return $r1;
    }
