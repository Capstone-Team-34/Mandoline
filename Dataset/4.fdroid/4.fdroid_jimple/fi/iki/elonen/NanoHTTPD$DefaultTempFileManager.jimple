fi.iki.elonen.NanoHTTPD$DefaultTempFileManager extends java.lang.Object implements fi.iki.elonen.NanoHTTPD$TempFileManager
private final java.util.List tempFiles
private final java.lang.String tmpdir
    public void <init>()
    {
        fi.iki.elonen.NanoHTTPD$DefaultTempFileManager r0;
        java.lang.String $r1;
        java.util.ArrayList $r2;

        r0 := @this: fi.iki.elonen.NanoHTTPD$DefaultTempFileManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");

        r0.<fi.iki.elonen.NanoHTTPD$DefaultTempFileManager: java.lang.String tmpdir> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<fi.iki.elonen.NanoHTTPD$DefaultTempFileManager: java.util.List tempFiles> = $r2;

        return;
    }
    public void clear()
    {
        fi.iki.elonen.NanoHTTPD$DefaultTempFileManager r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        fi.iki.elonen.NanoHTTPD$TempFile r4;
        java.lang.Exception $r5;

        r0 := @this: fi.iki.elonen.NanoHTTPD$DefaultTempFileManager;

        $r1 = r0.<fi.iki.elonen.NanoHTTPD$DefaultTempFileManager: java.util.List tempFiles>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (fi.iki.elonen.NanoHTTPD$TempFile) $r3;

     label2:
        interfaceinvoke r4.<fi.iki.elonen.NanoHTTPD$TempFile: void delete()>();

     label3:
        goto label1;

     label4:
        $r5 := @caughtexception;

        goto label1;

     label5:
        $r1 = r0.<fi.iki.elonen.NanoHTTPD$DefaultTempFileManager: java.util.List tempFiles>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }
    public fi.iki.elonen.NanoHTTPD$TempFile createTempFile() throws java.lang.Exception
    {
        fi.iki.elonen.NanoHTTPD$DefaultTempFileManager r0;
        fi.iki.elonen.NanoHTTPD$DefaultTempFile r1;
        java.lang.String $r2;
        java.util.List $r3;

        r0 := @this: fi.iki.elonen.NanoHTTPD$DefaultTempFileManager;

        r1 = new fi.iki.elonen.NanoHTTPD$DefaultTempFile;

        $r2 = r0.<fi.iki.elonen.NanoHTTPD$DefaultTempFileManager: java.lang.String tmpdir>;

        specialinvoke r1.<fi.iki.elonen.NanoHTTPD$DefaultTempFile: void <init>(java.lang.String)>($r2);

        $r3 = r0.<fi.iki.elonen.NanoHTTPD$DefaultTempFileManager: java.util.List tempFiles>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r1;
    }
