org.fdroid.fdroid.localrepo.SwapService$1 extends android.os.AsyncTask
final org.fdroid.fdroid.localrepo.SwapService this$0
final java.lang.String val$address
    void <init>(org.fdroid.fdroid.localrepo.SwapService, java.lang.String)
    {
        org.fdroid.fdroid.localrepo.SwapService$1 r0;
        org.fdroid.fdroid.localrepo.SwapService $r1;
        java.lang.String $r2;

        r0 := @this: org.fdroid.fdroid.localrepo.SwapService$1;

        $r1 := @parameter0: org.fdroid.fdroid.localrepo.SwapService;

        $r2 := @parameter1: java.lang.String;

        r0.<org.fdroid.fdroid.localrepo.SwapService$1: org.fdroid.fdroid.localrepo.SwapService this$0> = $r1;

        r0.<org.fdroid.fdroid.localrepo.SwapService$1: java.lang.String val$address> = $r2;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }
    private void notifyOfErrorOnUiThread()
    {
        org.fdroid.fdroid.localrepo.SwapService$1 r0;

        r0 := @this: org.fdroid.fdroid.localrepo.SwapService$1;

        return;
    }
    private void populatePostParams(java.lang.String, org.apache.http.client.methods.HttpPost) throws java.io.UnsupportedEncodingException
    {
        org.fdroid.fdroid.localrepo.SwapService$1 r0;
        java.lang.String $r1;
        org.apache.http.client.methods.HttpPost $r2;
        org.apache.http.client.entity.UrlEncodedFormEntity r3;
        java.util.ArrayList r4;
        org.apache.http.message.BasicNameValuePair $r5;

        r0 := @this: org.fdroid.fdroid.localrepo.SwapService$1;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.http.client.methods.HttpPost;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        $r5 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r5.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("repo", $r1);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        r3 = new org.apache.http.client.entity.UrlEncodedFormEntity;

        specialinvoke r3.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List)>(r4);

        virtualinvoke $r2.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>(r3);

        return;
    }
    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        org.fdroid.fdroid.localrepo.SwapService$1 r0;
        java.lang.Void $r1;
        java.lang.Object[] $r2;
        java.lang.Void[] $r3;

        r0 := @this: org.fdroid.fdroid.localrepo.SwapService$1;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.Void[]) $r2;

        $r1 = virtualinvoke r0.<org.fdroid.fdroid.localrepo.SwapService$1: java.lang.Void doInBackground(java.lang.Void[])>($r3);

        return $r1;
    }
    protected transient java.lang.Void doInBackground(java.lang.Void[])
    {
        org.fdroid.fdroid.localrepo.SwapService$1 r0;
        java.lang.Void[] $r1;
        java.io.IOException r2;
        org.apache.http.HttpHost r3;
        org.apache.http.client.methods.HttpPost r4;
        java.lang.String $r5, $r11, $r12;
        android.net.Uri $r6, $r8;
        org.fdroid.fdroid.data.Repo $r7;
        org.fdroid.fdroid.localrepo.SwapService $r9;
        android.net.http.AndroidHttpClient $r10;
        int $i0;
        java.lang.StringBuilder $r13;
        java.lang.Throwable $r14;

        r0 := @this: org.fdroid.fdroid.localrepo.SwapService$1;

        $r1 := @parameter0: java.lang.Void[];

        $r5 = r0.<org.fdroid.fdroid.localrepo.SwapService$1: java.lang.String val$address>;

        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r5);

        $r7 = <org.fdroid.fdroid.FDroidApp: org.fdroid.fdroid.data.Repo repo>;

        $r8 = staticinvoke <org.fdroid.fdroid.Utils: android.net.Uri getLocalRepoUri(org.fdroid.fdroid.data.Repo)>($r7);

        $r5 = virtualinvoke $r8.<android.net.Uri: java.lang.String toString()>();

        $r9 = r0.<org.fdroid.fdroid.localrepo.SwapService$1: org.fdroid.fdroid.localrepo.SwapService this$0>;

        $r10 = staticinvoke <android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String,android.content.Context)>("F-Droid", $r9);

        r4 = new org.apache.http.client.methods.HttpPost;

        specialinvoke r4.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>("/request-swap");

        r3 = new org.apache.http.HttpHost;

        $r11 = virtualinvoke $r6.<android.net.Uri: java.lang.String getHost()>();

        $i0 = virtualinvoke $r6.<android.net.Uri: int getPort()>();

        $r12 = virtualinvoke $r6.<android.net.Uri: java.lang.String getScheme()>();

        specialinvoke r3.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r11, $i0, $r12);

     label01:
        $r13 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Asking server at ");

     label03:
        $r11 = r0.<org.fdroid.fdroid.localrepo.SwapService$1: java.lang.String val$address>;

     label04:
        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to swap with us in return (by POSTing to \"/request-swap\" with repo \"");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\")...");

        $r11 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapManager", $r11);

        specialinvoke r0.<org.fdroid.fdroid.localrepo.SwapService$1: void populatePostParams(java.lang.String,org.apache.http.client.methods.HttpPost)>($r5, r4);

        virtualinvoke $r10.<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>(r3, r4);

     label05:
        virtualinvoke $r10.<android.net.http.AndroidHttpClient: void close()>();

     label06:
        return null;

     label07:
        r2 := @caughtexception;

     label08:
        specialinvoke r0.<org.fdroid.fdroid.localrepo.SwapService$1: void notifyOfErrorOnUiThread()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SwapManager", "Error while asking server to swap with us", r2);

     label09:
        virtualinvoke $r10.<android.net.http.AndroidHttpClient: void close()>();

        goto label06;

     label10:
        $r14 := @caughtexception;

        virtualinvoke $r10.<android.net.http.AndroidHttpClient: void close()>();

        throw $r14;

        catch java.io.IOException from label02 to label03 with label07;
        catch java.io.IOException from label04 to label05 with label07;
        catch java.lang.Throwable from label01 to label05 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }
