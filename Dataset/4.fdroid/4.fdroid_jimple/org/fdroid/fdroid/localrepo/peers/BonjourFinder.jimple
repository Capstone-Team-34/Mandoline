org.fdroid.fdroid.localrepo.peers.BonjourFinder extends org.fdroid.fdroid.localrepo.peers.PeerFinder implements javax.jmdns.ServiceListener
public static final java.lang.String HTTPS_SERVICE_TYPE
public static final java.lang.String HTTP_SERVICE_TYPE
private static final java.lang.String TAG
private javax.jmdns.JmDNS jmdns
private android.net.wifi.WifiManager$MulticastLock mMulticastLock
private android.net.wifi.WifiManager wifiManager
    public void <init>(android.content.Context)
    {
        org.fdroid.fdroid.localrepo.peers.BonjourFinder r0;
        android.content.Context $r1;

        r0 := @this: org.fdroid.fdroid.localrepo.peers.BonjourFinder;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.peers.PeerFinder: void <init>(android.content.Context)>($r1);

        return;
    }
    static javax.jmdns.JmDNS access$000(org.fdroid.fdroid.localrepo.peers.BonjourFinder)
    {
        org.fdroid.fdroid.localrepo.peers.BonjourFinder $r0;
        javax.jmdns.JmDNS r1;

        $r0 := @parameter0: org.fdroid.fdroid.localrepo.peers.BonjourFinder;

        r1 = $r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: javax.jmdns.JmDNS jmdns>;

        return r1;
    }
    static javax.jmdns.JmDNS access$002(org.fdroid.fdroid.localrepo.peers.BonjourFinder, javax.jmdns.JmDNS)
    {
        org.fdroid.fdroid.localrepo.peers.BonjourFinder $r0;
        javax.jmdns.JmDNS $r1;

        $r0 := @parameter0: org.fdroid.fdroid.localrepo.peers.BonjourFinder;

        $r1 := @parameter1: javax.jmdns.JmDNS;

        $r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: javax.jmdns.JmDNS jmdns> = $r1;

        return $r1;
    }
    static void access$100(org.fdroid.fdroid.localrepo.peers.BonjourFinder)
    {
        org.fdroid.fdroid.localrepo.peers.BonjourFinder $r0;

        $r0 := @parameter0: org.fdroid.fdroid.localrepo.peers.BonjourFinder;

        specialinvoke $r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: void listServices()>();

        return;
    }
    static void access$200(org.fdroid.fdroid.localrepo.peers.BonjourFinder, javax.jmdns.ServiceInfo[])
    {
        org.fdroid.fdroid.localrepo.peers.BonjourFinder $r0;
        javax.jmdns.ServiceInfo[] $r1;

        $r0 := @parameter0: org.fdroid.fdroid.localrepo.peers.BonjourFinder;

        $r1 := @parameter1: javax.jmdns.ServiceInfo[];

        specialinvoke $r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: void addFDroidServices(javax.jmdns.ServiceInfo[])>($r1);

        return;
    }
    private void addFDroidService(javax.jmdns.ServiceInfo)
    {
        org.fdroid.fdroid.localrepo.peers.BonjourFinder r0;
        javax.jmdns.ServiceInfo $r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;
        org.fdroid.fdroid.data.Repo $r4;
        java.lang.StringBuilder $r5;
        org.fdroid.fdroid.localrepo.peers.BonjourPeer $r6;

        r0 := @this: org.fdroid.fdroid.localrepo.peers.BonjourFinder;

        $r1 := @parameter0: javax.jmdns.ServiceInfo;

        $r2 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: java.lang.String getPropertyString(java.lang.String)>("type");

        $r3 = virtualinvoke $r1.<javax.jmdns.ServiceInfo: java.lang.String getPropertyString(java.lang.String)>("fingerprint");

        if $r2 == null goto label3;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("fdroidrepo");

        if $z0 == 0 goto label3;

        $z0 = 1;

     label1:
        $r4 = <org.fdroid.fdroid.FDroidApp: org.fdroid.fdroid.data.Repo repo>;

        if $r4 == null goto label4;

        if $r3 == null goto label4;

        $r4 = <org.fdroid.fdroid.FDroidApp: org.fdroid.fdroid.data.Repo repo>;

        $r2 = $r4.<org.fdroid.fdroid.data.Repo: java.lang.String fingerprint>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z1 == 0 goto label4;

        $z1 = 1;

     label2:
        if $z0 == 0 goto label5;

        if $z1 != 0 goto label5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found F-Droid swap Bonjour service:\n");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("BonjourFinder", $r3);

        $r6 = new org.fdroid.fdroid.localrepo.peers.BonjourPeer;

        specialinvoke $r6.<org.fdroid.fdroid.localrepo.peers.BonjourPeer: void <init>(javax.jmdns.ServiceInfo)>($r1);

        virtualinvoke r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: void foundPeer(org.fdroid.fdroid.localrepo.peers.Peer)>($r6);

        return;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $z1 = 0;

        goto label2;

     label5:
        if $z1 == 0 goto label6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring Bonjour service because it belongs to this device:\n");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("BonjourFinder", $r3);

        return;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring Bonjour service because it doesn\'t look like an F-Droid swap repo:\n");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("BonjourFinder", $r3);

        return;
    }
    private void addFDroidServices(javax.jmdns.ServiceInfo[])
    {
        org.fdroid.fdroid.localrepo.peers.BonjourFinder r0;
        javax.jmdns.ServiceInfo[] $r1;
        javax.jmdns.ServiceInfo r2;
        int i0, i1;

        r0 := @this: org.fdroid.fdroid.localrepo.peers.BonjourFinder;

        $r1 := @parameter0: javax.jmdns.ServiceInfo[];

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = $r1[i1];

        specialinvoke r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: void addFDroidService(javax.jmdns.ServiceInfo)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    private void listServices()
    {
        org.fdroid.fdroid.localrepo.peers.BonjourFinder r0;
        javax.jmdns.JmDNS r1;
        org.fdroid.fdroid.localrepo.peers.BonjourFinder$2 $r2;
        java.lang.Void[] $r3;

        r0 := @this: org.fdroid.fdroid.localrepo.peers.BonjourFinder;

        r1 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: javax.jmdns.JmDNS jmdns>;

        $r2 = new org.fdroid.fdroid.localrepo.peers.BonjourFinder$2;

        specialinvoke $r2.<org.fdroid.fdroid.localrepo.peers.BonjourFinder$2: void <init>(org.fdroid.fdroid.localrepo.peers.BonjourFinder,javax.jmdns.JmDNS)>(r0, r1);

        $r3 = newarray (java.lang.Void)[0];

        virtualinvoke $r2.<org.fdroid.fdroid.localrepo.peers.BonjourFinder$2: android.os.AsyncTask execute(java.lang.Object[])>($r3);

        return;
    }
    public void cancel()
    {
        org.fdroid.fdroid.localrepo.peers.BonjourFinder r0;
        android.net.wifi.WifiManager$MulticastLock $r1;
        javax.jmdns.JmDNS $r2;

        r0 := @this: org.fdroid.fdroid.localrepo.peers.BonjourFinder;

        $r1 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: android.net.wifi.WifiManager$MulticastLock mMulticastLock>;

        if $r1 == null goto label1;

        $r1 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: android.net.wifi.WifiManager$MulticastLock mMulticastLock>;

        virtualinvoke $r1.<android.net.wifi.WifiManager$MulticastLock: void release()>();

     label1:
        r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: boolean isScanning> = 0;

        $r2 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: javax.jmdns.JmDNS jmdns>;

        if $r2 != null goto label2;

        return;

     label2:
        $r2 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: javax.jmdns.JmDNS jmdns>;

        virtualinvoke $r2.<javax.jmdns.JmDNS: void removeServiceListener(java.lang.String,javax.jmdns.ServiceListener)>("_http._tcp.local.", r0);

        $r2 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: javax.jmdns.JmDNS jmdns>;

        virtualinvoke $r2.<javax.jmdns.JmDNS: void removeServiceListener(java.lang.String,javax.jmdns.ServiceListener)>("_https._tcp.local.", r0);

        r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: javax.jmdns.JmDNS jmdns> = null;

        return;
    }
    public void scan()
    {
        org.fdroid.fdroid.localrepo.peers.BonjourFinder r0;
        android.net.wifi.WifiManager $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        android.net.wifi.WifiManager$MulticastLock $r5;
        boolean $z0;
        org.fdroid.fdroid.localrepo.peers.BonjourFinder$1 $r6;
        java.lang.Void[] $r7;

        r0 := @this: org.fdroid.fdroid.localrepo.peers.BonjourFinder;

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("BonjourFinder", "Requested Bonjour (mDNS) scan for peers.");

        $r1 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: android.net.wifi.WifiManager wifiManager>;

        if $r1 != null goto label1;

        $r2 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: android.content.Context context>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r1 = (android.net.wifi.WifiManager) $r3;

        r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: android.net.wifi.WifiManager wifiManager> = $r1;

        $r1 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: android.net.wifi.WifiManager wifiManager>;

        $r2 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: android.content.Context context>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r1.<android.net.wifi.WifiManager: android.net.wifi.WifiManager$MulticastLock createMulticastLock(java.lang.String)>($r4);

        r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: android.net.wifi.WifiManager$MulticastLock mMulticastLock> = $r5;

        $r5 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: android.net.wifi.WifiManager$MulticastLock mMulticastLock>;

        virtualinvoke $r5.<android.net.wifi.WifiManager$MulticastLock: void setReferenceCounted(boolean)>(0);

     label1:
        $z0 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: boolean isScanning>;

        if $z0 == 0 goto label2;

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("BonjourFinder", "Requested Bonjour scan, but already scanning. But we will still try to explicitly scan for services.");

        return;

     label2:
        r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: boolean isScanning> = 1;

        $r5 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: android.net.wifi.WifiManager$MulticastLock mMulticastLock>;

        virtualinvoke $r5.<android.net.wifi.WifiManager$MulticastLock: void acquire()>();

        $r6 = new org.fdroid.fdroid.localrepo.peers.BonjourFinder$1;

        specialinvoke $r6.<org.fdroid.fdroid.localrepo.peers.BonjourFinder$1: void <init>(org.fdroid.fdroid.localrepo.peers.BonjourFinder)>(r0);

        $r7 = newarray (java.lang.Void)[0];

        virtualinvoke $r6.<org.fdroid.fdroid.localrepo.peers.BonjourFinder$1: android.os.AsyncTask execute(java.lang.Object[])>($r7);

        return;
    }
    public void serviceAdded(javax.jmdns.ServiceEvent)
    {
        org.fdroid.fdroid.localrepo.peers.BonjourFinder r0;
        javax.jmdns.ServiceEvent $r1;
        javax.jmdns.JmDNS r2;
        javax.jmdns.ServiceInfo $r3;
        org.fdroid.fdroid.localrepo.peers.BonjourFinder$3 $r4;
        java.lang.Void[] $r5;

        r0 := @this: org.fdroid.fdroid.localrepo.peers.BonjourFinder;

        $r1 := @parameter0: javax.jmdns.ServiceEvent;

        $r3 = virtualinvoke $r1.<javax.jmdns.ServiceEvent: javax.jmdns.ServiceInfo getInfo()>();

        specialinvoke r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: void addFDroidService(javax.jmdns.ServiceInfo)>($r3);

        r2 = r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: javax.jmdns.JmDNS jmdns>;

        $r4 = new org.fdroid.fdroid.localrepo.peers.BonjourFinder$3;

        specialinvoke $r4.<org.fdroid.fdroid.localrepo.peers.BonjourFinder$3: void <init>(org.fdroid.fdroid.localrepo.peers.BonjourFinder,javax.jmdns.JmDNS,javax.jmdns.ServiceEvent)>(r0, r2, $r1);

        $r5 = newarray (java.lang.Void)[0];

        virtualinvoke $r4.<org.fdroid.fdroid.localrepo.peers.BonjourFinder$3: android.os.AsyncTask execute(java.lang.Object[])>($r5);

        return;
    }
    public void serviceRemoved(javax.jmdns.ServiceEvent)
    {
        org.fdroid.fdroid.localrepo.peers.BonjourFinder r0;
        javax.jmdns.ServiceEvent $r1;

        r0 := @this: org.fdroid.fdroid.localrepo.peers.BonjourFinder;

        $r1 := @parameter0: javax.jmdns.ServiceEvent;

        return;
    }
    public void serviceResolved(javax.jmdns.ServiceEvent)
    {
        org.fdroid.fdroid.localrepo.peers.BonjourFinder r0;
        javax.jmdns.ServiceEvent $r1;
        javax.jmdns.ServiceInfo $r2;

        r0 := @this: org.fdroid.fdroid.localrepo.peers.BonjourFinder;

        $r1 := @parameter0: javax.jmdns.ServiceEvent;

        $r2 = virtualinvoke $r1.<javax.jmdns.ServiceEvent: javax.jmdns.ServiceInfo getInfo()>();

        specialinvoke r0.<org.fdroid.fdroid.localrepo.peers.BonjourFinder: void addFDroidService(javax.jmdns.ServiceInfo)>($r2);

        return;
    }
