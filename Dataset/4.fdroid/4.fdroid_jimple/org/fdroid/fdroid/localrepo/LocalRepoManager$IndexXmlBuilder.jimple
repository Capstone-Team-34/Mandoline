org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder extends java.lang.Object
private final java.util.Map apps
private final android.content.Context context
private final java.text.DateFormat dateToStr
private final org.xmlpull.v1.XmlSerializer serializer
    public void <init>(android.content.Context, java.util.Map) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder r0;
        android.content.Context $r1;
        java.util.Map r2;
        java.util.Locale $r3;
        java.text.SimpleDateFormat $r4;
        org.xmlpull.v1.XmlPullParserFactory $r5;
        org.xmlpull.v1.XmlSerializer $r6;

        r0 := @this: org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder;

        $r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.text.SimpleDateFormat;

        $r3 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd", $r3);

        r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: java.text.DateFormat dateToStr> = $r4;

        r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: android.content.Context context> = $r1;

        r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: java.util.Map apps> = r2;

        $r5 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r6 = virtualinvoke $r5.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlSerializer newSerializer()>();

        r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer> = $r6;

        return;
    }
    private void tag(java.lang.String, long) throws java.io.IOException
    {
        org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder r0;
        java.lang.String $r1, $r2;
        long $l0;

        r0 := @this: org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
    private void tag(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder r0;
        java.lang.String $r1, $r2;
        org.xmlpull.v1.XmlSerializer $r3;

        r0 := @this: org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        $r3 = interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", $r1);

        $r3 = interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r2);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", $r1);

        return;
    }
    private void tag(java.lang.String, java.util.Date) throws java.io.IOException
    {
        org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder r0;
        java.lang.String $r1, $r3;
        java.util.Date $r2;
        java.text.DateFormat $r4;

        r0 := @this: org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Date;

        $r4 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: java.text.DateFormat dateToStr>;

        $r3 = virtualinvoke $r4.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r2);

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>($r1, $r3);

        return;
    }
    private void tagApplication(org.fdroid.fdroid.data.App) throws java.io.IOException
    {
        org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder r0;
        org.fdroid.fdroid.data.App $r1;
        java.lang.String $r2;
        org.xmlpull.v1.XmlSerializer $r3;
        java.util.Date $r4;
        java.lang.StringBuilder $r5;
        org.fdroid.fdroid.Preferences $r6;
        org.fdroid.fdroid.data.Apk $r7;
        int $i0;
        long $l1;

        r0 := @this: org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder;

        $r1 := @parameter0: org.fdroid.fdroid.data.App;

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "application");

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        $r2 = $r1.<org.fdroid.fdroid.data.App: java.lang.String packageName>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "id", $r2);

        $r2 = $r1.<org.fdroid.fdroid.data.App: java.lang.String packageName>;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("id", $r2);

        $r4 = $r1.<org.fdroid.fdroid.data.App: java.util.Date added>;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.util.Date)>("added", $r4);

        $r4 = $r1.<org.fdroid.fdroid.data.App: java.util.Date lastUpdated>;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.util.Date)>("lastupdated", $r4);

        $r2 = $r1.<org.fdroid.fdroid.data.App: java.lang.String name>;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("name", $r2);

        $r2 = $r1.<org.fdroid.fdroid.data.App: java.lang.String summary>;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("summary", $r2);

        $r2 = $r1.<org.fdroid.fdroid.data.App: java.lang.String icon>;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("icon", $r2);

        $r2 = $r1.<org.fdroid.fdroid.data.App: java.lang.String description>;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("desc", $r2);

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("license", "Unknown");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LocalRepo,");

        $r6 = staticinvoke <org.fdroid.fdroid.Preferences: org.fdroid.fdroid.Preferences get()>();

        $r2 = virtualinvoke $r6.<org.fdroid.fdroid.Preferences: java.lang.String getLocalRepoName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("categories", $r2);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LocalRepo,");

        $r6 = staticinvoke <org.fdroid.fdroid.Preferences: org.fdroid.fdroid.Preferences get()>();

        $r2 = virtualinvoke $r6.<org.fdroid.fdroid.Preferences: java.lang.String getLocalRepoName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("category", $r2);

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("web", "web");

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("source", "source");

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("tracker", "tracker");

        $r7 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $r2 = $r7.<org.fdroid.fdroid.data.Apk: java.lang.String version>;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("marketversion", $r2);

        $r7 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $i0 = $r7.<org.fdroid.fdroid.data.Apk: int vercode>;

        $l1 = (long) $i0;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,long)>("marketvercode", $l1);

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tagPackage(org.fdroid.fdroid.data.App)>($r1);

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "application");

        return;
    }
    private void tagFdroid() throws java.io.IOException, org.fdroid.fdroid.localrepo.LocalRepoKeyStore$InitException
    {
        org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.Map$Entry r6;
        org.fdroid.fdroid.data.App $r7;

        r0 := @this: org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder;

        $r1 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "fdroid");

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tagRepo()>();

        $r2 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: java.util.Map apps>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (org.fdroid.fdroid.data.App) $r5;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tagApplication(org.fdroid.fdroid.data.App)>($r7);

        goto label1;

     label2:
        $r1 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "fdroid");

        return;
    }
    private void tagFeatures(org.fdroid.fdroid.data.App) throws java.io.IOException
    {
        org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder r0;
        org.fdroid.fdroid.data.App $r1;
        java.lang.String $r2;
        org.xmlpull.v1.XmlSerializer $r3;
        org.fdroid.fdroid.data.Apk $r4;
        org.fdroid.fdroid.Utils$CommaSeparatedList $r5;

        r0 := @this: org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder;

        $r1 := @parameter0: org.fdroid.fdroid.data.App;

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "features");

        $r4 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $r5 = $r4.<org.fdroid.fdroid.data.Apk: org.fdroid.fdroid.Utils$CommaSeparatedList features>;

        if $r5 == null goto label1;

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        $r4 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $r5 = $r4.<org.fdroid.fdroid.data.Apk: org.fdroid.fdroid.Utils$CommaSeparatedList features>;

        $r2 = staticinvoke <org.fdroid.fdroid.Utils$CommaSeparatedList: java.lang.String str(org.fdroid.fdroid.Utils$CommaSeparatedList)>($r5);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r2);

     label1:
        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "features");

        return;
    }
    private void tagHash(org.fdroid.fdroid.data.App) throws java.io.IOException
    {
        org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder r0;
        org.fdroid.fdroid.data.App $r1;
        java.lang.String $r2;
        org.xmlpull.v1.XmlSerializer $r3;
        org.fdroid.fdroid.data.Apk $r4;
        java.util.Locale $r5;

        r0 := @this: org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder;

        $r1 := @parameter0: org.fdroid.fdroid.data.App;

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "hash");

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        $r4 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $r2 = $r4.<org.fdroid.fdroid.data.Apk: java.lang.String hashType>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "type", $r2);

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        $r4 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $r2 = $r4.<org.fdroid.fdroid.data.Apk: java.lang.String hash>;

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r2);

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "hash");

        return;
    }
    private void tagPackage(org.fdroid.fdroid.data.App) throws java.io.IOException
    {
        org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder r0;
        org.fdroid.fdroid.data.App $r1;
        org.xmlpull.v1.XmlSerializer $r2;
        org.fdroid.fdroid.data.Apk $r3;
        java.lang.String $r4;
        int $i0;
        long $l1;
        java.util.Locale $r5;
        org.fdroid.fdroid.data.SanitizedFile $r6;
        java.util.Date $r7;

        r0 := @this: org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder;

        $r1 := @parameter0: org.fdroid.fdroid.data.App;

        $r2 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "package");

        $r3 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $r4 = $r3.<org.fdroid.fdroid.data.Apk: java.lang.String version>;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("version", $r4);

        $r3 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $i0 = $r3.<org.fdroid.fdroid.data.Apk: int vercode>;

        $l1 = (long) $i0;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,long)>("versioncode", $l1);

        $r3 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $r4 = $r3.<org.fdroid.fdroid.data.Apk: java.lang.String apkName>;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("apkname", $r4);

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tagHash(org.fdroid.fdroid.data.App)>($r1);

        $r3 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $r4 = $r3.<org.fdroid.fdroid.data.Apk: java.lang.String sig>;

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("sig", $r4);

        $r3 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $r6 = $r3.<org.fdroid.fdroid.data.Apk: org.fdroid.fdroid.data.SanitizedFile installedFile>;

        $l1 = virtualinvoke $r6.<org.fdroid.fdroid.data.SanitizedFile: long length()>();

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,long)>("size", $l1);

        $r3 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $i0 = $r3.<org.fdroid.fdroid.data.Apk: int minSdkVersion>;

        $l1 = (long) $i0;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,long)>("sdkver", $l1);

        $r3 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $i0 = $r3.<org.fdroid.fdroid.data.Apk: int maxSdkVersion>;

        $l1 = (long) $i0;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,long)>("maxsdkver", $l1);

        $r3 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $r7 = $r3.<org.fdroid.fdroid.data.Apk: java.util.Date added>;

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.util.Date)>("added", $r7);

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tagFeatures(org.fdroid.fdroid.data.App)>($r1);

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tagPermissions(org.fdroid.fdroid.data.App)>($r1);

        $r2 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "package");

        return;
    }
    private void tagPermissions(org.fdroid.fdroid.data.App) throws java.io.IOException
    {
        org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder r0;
        org.fdroid.fdroid.data.App $r1;
        java.lang.StringBuilder r2;
        org.xmlpull.v1.XmlSerializer $r3;
        org.fdroid.fdroid.data.Apk $r4;
        org.fdroid.fdroid.Utils$CommaSeparatedList $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.String r8;
        int $i0;

        r0 := @this: org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder;

        $r1 := @parameter0: org.fdroid.fdroid.data.App;

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "permissions");

        $r4 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $r5 = $r4.<org.fdroid.fdroid.data.Apk: org.fdroid.fdroid.Utils$CommaSeparatedList permissions>;

        if $r5 == null goto label3;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = $r1.<org.fdroid.fdroid.data.App: org.fdroid.fdroid.data.Apk installedApk>;

        $r5 = $r4.<org.fdroid.fdroid.data.Apk: org.fdroid.fdroid.Utils$CommaSeparatedList permissions>;

        $r6 = virtualinvoke $r5.<org.fdroid.fdroid.Utils$CommaSeparatedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("android.permission.", "");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label1;

     label2:
        r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z0 != 0 goto label3;

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        $i0 = virtualinvoke r8.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r8);

     label3:
        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "permissions");

        return;
    }
    private void tagRepo() throws java.io.IOException, org.fdroid.fdroid.localrepo.LocalRepoKeyStore$InitException
    {
        org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder r0;
        long l0;
        android.content.Context $r1;
        android.content.SharedPreferences $r2;
        java.lang.String $r3;
        java.lang.Float $r4;
        int $i1;
        org.xmlpull.v1.XmlSerializer $r5;
        java.lang.StringBuilder $r6;
        org.fdroid.fdroid.Preferences $r7;
        org.fdroid.fdroid.localrepo.LocalRepoKeyStore $r8;
        java.security.cert.Certificate $r9;

        r0 := @this: org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder;

        $r1 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: android.content.Context context>;

        $r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r1);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("max_repo_age_days", "14");

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r3);

        $i1 = virtualinvoke $r4.<java.lang.Float: int intValue()>();

        $r5 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "repo");

        $r5 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "icon", "blah.png");

        $r5 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "maxage", $r3);

        $r5 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <org.fdroid.fdroid.Preferences: org.fdroid.fdroid.Preferences get()>();

        $r3 = virtualinvoke $r7.<org.fdroid.fdroid.Preferences: java.lang.String getLocalRepoName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        $r3 = <org.fdroid.fdroid.FDroidApp: java.lang.String ipAddressString>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "name", $r3);

        $r5 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        $r1 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: android.content.Context context>;

        $r8 = staticinvoke <org.fdroid.fdroid.localrepo.LocalRepoKeyStore: org.fdroid.fdroid.localrepo.LocalRepoKeyStore get(android.content.Context)>($r1);

        $r9 = virtualinvoke $r8.<org.fdroid.fdroid.localrepo.LocalRepoKeyStore: java.security.cert.Certificate getCertificate()>();

        $r3 = staticinvoke <org.fdroid.fdroid.Hasher: java.lang.String hex(java.security.cert.Certificate)>($r9);

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "pubkey", $r3);

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l0 = l0 / 1000L;

        $r5 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "timestamp", $r3);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A local FDroid repo generated from apps installed on ");

        $r7 = staticinvoke <org.fdroid.fdroid.Preferences: org.fdroid.fdroid.Preferences get()>();

        $r3 = virtualinvoke $r7.<org.fdroid.fdroid.Preferences: java.lang.String getLocalRepoName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tag(java.lang.String,java.lang.String)>("description", $r3);

        $r5 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "repo");

        return;
    }
    public void build(java.io.File) throws java.io.IOException, org.fdroid.fdroid.localrepo.LocalRepoKeyStore$InitException
    {
        org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder r0;
        java.io.File $r1;
        java.io.FileWriter r2;
        org.xmlpull.v1.XmlSerializer $r3;

        r0 := @this: org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder;

        $r1 := @parameter0: java.io.File;

        r2 = new java.io.FileWriter;

        specialinvoke r2.<java.io.FileWriter: void <init>(java.io.File)>($r1);

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>(r2);

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, null);

        specialinvoke r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: void tagFdroid()>();

        $r3 = r0.<org.fdroid.fdroid.localrepo.LocalRepoManager$IndexXmlBuilder: org.xmlpull.v1.XmlSerializer serializer>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r2.<java.io.Writer: void close()>();

        return;
    }
