org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom extends java.security.SecureRandomSpi
private static final java.lang.String TAG
private static final java.io.File URANDOM_FILE
private static final java.lang.Object sLock
private static java.io.DataInputStream sUrandomIn
private static java.io.OutputStream sUrandomOut
private boolean mSeeded
    static void <clinit>()
    {
        java.io.File $r0;
        java.lang.Object $r1;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("/dev/urandom");

        <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.File URANDOM_FILE> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.lang.Object sLock> = $r1;

        return;
    }
    public void <init>()
    {
        org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom r0;

        r0 := @this: org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom;

        specialinvoke r0.<java.security.SecureRandomSpi: void <init>()>();

        return;
    }
    private java.io.DataInputStream getUrandomInputStream()
    {
        org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom r0;
        java.io.IOException r1;
        java.lang.Object $r2;
        java.io.DataInputStream $r3;
        java.io.FileInputStream $r4;
        java.io.File $r5;
        java.lang.SecurityException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.lang.Throwable $r9;

        r0 := @this: org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom;

        $r2 = <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.lang.Object sLock>;

        entermonitor $r2;

     label01:
        $r3 = <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.DataInputStream sUrandomIn>;

     label02:
        if $r3 != null goto label06;

     label03:
        $r3 = new java.io.DataInputStream;

        $r4 = new java.io.FileInputStream;

        $r5 = <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.File URANDOM_FILE>;

     label04:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

        specialinvoke $r3.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r4);

     label05:
        <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.DataInputStream sUrandomIn> = $r3;

     label06:
        $r3 = <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.DataInputStream sUrandomIn>;

        exitmonitor $r2;

     label07:
        return $r3;

     label08:
        r1 := @caughtexception;

        $r6 = new java.lang.SecurityException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to open ");

        $r5 = <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.File URANDOM_FILE>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for reading");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String,java.lang.Throwable)>($r8, r1);

        throw $r6;

     label09:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label10:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.io.IOException from label04 to label05 with label08;
        catch java.lang.Throwable from label03 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label10 with label09;
    }
    private java.io.OutputStream getUrandomOutputStream() throws java.io.IOException
    {
        org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom r0;
        java.lang.Object $r1;
        java.io.File $r2;
        java.io.OutputStream $r3;
        java.io.FileOutputStream $r4;
        java.lang.Throwable $r5;

        r0 := @this: org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom;

        $r1 = <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.lang.Object sLock>;

        entermonitor $r1;

     label1:
        $r3 = <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.OutputStream sUrandomOut>;

        if $r3 != null goto label2;

        $r4 = new java.io.FileOutputStream;

        $r2 = <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.File URANDOM_FILE>;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

        <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.OutputStream sUrandomOut> = $r4;

     label2:
        $r3 = <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.OutputStream sUrandomOut>;

        exitmonitor $r1;

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
    protected byte[] engineGenerateSeed(int)
    {
        org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom r0;
        int $i0;
        byte[] r1;

        r0 := @this: org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom;

        $i0 := @parameter0: int;

        r1 = newarray (byte)[$i0];

        virtualinvoke r0.<org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: void engineNextBytes(byte[])>(r1);

        return r1;
    }
    protected void engineNextBytes(byte[])
    {
        org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom r0;
        byte[] $r1, $r3;
        java.io.IOException r2;
        boolean $z0;
        java.lang.Object $r4;
        java.io.DataInputStream $r5;
        java.lang.Throwable $r6, $r11;
        java.lang.SecurityException $r7;
        java.lang.StringBuilder $r8;
        java.io.File $r9;
        java.lang.String $r10;

        r0 := @this: org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom;

        $r1 := @parameter0: byte[];

        $z0 = r0.<org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: boolean mSeeded>;

        if $z0 != 0 goto label01;

        $r3 = staticinvoke <org.fdroid.fdroid.compat.PRNGFixes: byte[] access$000()>();

        virtualinvoke r0.<org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: void engineSetSeed(byte[])>($r3);

     label01:
        $r4 = <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.lang.Object sLock>;

        entermonitor $r4;

     label02:
        $r5 = specialinvoke r0.<org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.DataInputStream getUrandomInputStream()>();

        exitmonitor $r4;

     label03:
        entermonitor $r5;

     label04:
        virtualinvoke $r5.<java.io.DataInputStream: void readFully(byte[])>($r1);

        exitmonitor $r5;

     label05:
        return;

     label06:
        $r6 := @caughtexception;

     label07:
        exitmonitor $r4;

     label08:
        throw $r6;

     label09:
        r2 := @caughtexception;

        $r7 = new java.lang.SecurityException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read from ");

        $r9 = <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.File URANDOM_FILE>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r2);

        throw $r7;

     label10:
        $r11 := @caughtexception;

     label11:
        exitmonitor $r5;

     label12:
        throw $r11;

     label13:
        nop;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.io.IOException from label08 to label09 with label09;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.io.IOException from label12 to label13 with label09;
    }
    protected void engineSetSeed(byte[])
    {
        org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom r0;
        byte[] $r1;
        java.io.IOException r2;
        java.lang.Object $r3;
        java.io.OutputStream $r4;
        java.lang.Throwable $r5, $r9;
        java.lang.StringBuilder $r6;
        java.io.File $r7;
        java.lang.String $r8;

        r0 := @this: org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom;

        $r1 := @parameter0: byte[];

     label01:
        $r3 = <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.lang.Object sLock>;

        entermonitor $r3;

     label02:
        $r4 = specialinvoke r0.<org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.OutputStream getUrandomOutputStream()>();

        exitmonitor $r3;

     label03:
        virtualinvoke $r4.<java.io.OutputStream: void write(byte[])>($r1);

        virtualinvoke $r4.<java.io.OutputStream: void flush()>();

     label04:
        r0.<org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: boolean mSeeded> = 1;

        return;

     label05:
        $r5 := @caughtexception;

     label06:
        exitmonitor $r3;

     label07:
        throw $r5;

     label08:
        r2 := @caughtexception;

     label09:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to mix seed into ");

        $r7 = <org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: java.io.File URANDOM_FILE>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PRNGFixes", $r8);

     label10:
        r0.<org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: boolean mSeeded> = 1;

        return;

     label11:
        $r9 := @caughtexception;

        r0.<org.fdroid.fdroid.compat.PRNGFixes$LinuxPRNGSecureRandom: boolean mSeeded> = 1;

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.io.IOException from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.io.IOException from label07 to label08 with label08;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
