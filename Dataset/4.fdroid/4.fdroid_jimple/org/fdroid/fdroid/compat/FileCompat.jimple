org.fdroid.fdroid.compat.FileCompat extends org.fdroid.fdroid.compat.Compatibility
private static final java.lang.String TAG
    public void <init>()
    {
        org.fdroid.fdroid.compat.FileCompat r0;

        r0 := @this: org.fdroid.fdroid.compat.FileCompat;

        specialinvoke r0.<org.fdroid.fdroid.compat.Compatibility: void <init>()>();

        return;
    }
    public static boolean setExecutable(org.fdroid.fdroid.data.SanitizedFile, boolean, boolean)
    {
        org.fdroid.fdroid.data.SanitizedFile $r0;
        boolean $z0, $z1, $z2;
        java.lang.String r1;

        $r0 := @parameter0: org.fdroid.fdroid.data.SanitizedFile;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 = staticinvoke <org.fdroid.fdroid.compat.FileCompat: boolean hasApi(int)>(9);

        if $z2 == 0 goto label1;

        $z0 = virtualinvoke $r0.<org.fdroid.fdroid.data.SanitizedFile: boolean setExecutable(boolean,boolean)>($z0, $z1);

        return $z0;

     label1:
        if $z0 == 0 goto label4;

        if $z1 == 0 goto label3;

        r1 = "0700";

     label2:
        $z0 = staticinvoke <org.fdroid.fdroid.compat.FileCompat: boolean setMode(org.fdroid.fdroid.data.SanitizedFile,java.lang.String)>($r0, r1);

        return $z0;

     label3:
        r1 = "0711";

        goto label2;

     label4:
        if $z1 == 0 goto label5;

        r1 = "0600";

        goto label2;

     label5:
        r1 = "0600";

        goto label2;
    }
    private static boolean setMode(org.fdroid.fdroid.data.SanitizedFile, java.lang.String)
    {
        org.fdroid.fdroid.data.SanitizedFile $r0;
        java.lang.String $r1;
        java.lang.String[] r2;
        java.io.IOException r3;
        java.lang.StringBuilder $r4;
        java.lang.Runtime $r5;
        java.lang.Process $r6;
        java.io.InputStream $r7;

        $r0 := @parameter0: org.fdroid.fdroid.data.SanitizedFile;

        $r1 := @parameter1: java.lang.String;

        r2 = newarray (java.lang.String)[3];

        r2[0] = "/system/bin/chmod";

        r2[1] = $r1;

        $r1 = virtualinvoke $r0.<org.fdroid.fdroid.data.SanitizedFile: java.lang.String getAbsolutePath()>();

        r2[2] = $r1;

        $r4 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Executing following command: ");

     label2:
        $r1 = r2[0];

     label3:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label4:
        $r1 = r2[1];

     label5:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label6:
        $r1 = r2[2];

     label7:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("FileCompat", $r1);

        $r5 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r6 = virtualinvoke $r5.<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>(r2);

        $r7 = virtualinvoke $r6.<java.lang.Process: java.io.InputStream getInputStream()>();

        staticinvoke <org.fdroid.fdroid.Utils: void consumeStream(java.io.InputStream)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.Process: java.io.InputStream getErrorStream()>();

        staticinvoke <org.fdroid.fdroid.Utils: void consumeStream(java.io.InputStream)>($r7);

     label8:
        return 1;

     label9:
        r3 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label3 to label4 with label9;
        catch java.io.IOException from label5 to label6 with label9;
        catch java.io.IOException from label7 to label8 with label9;
    }
    public static boolean setReadable(org.fdroid.fdroid.data.SanitizedFile, boolean, boolean)
    {
        org.fdroid.fdroid.data.SanitizedFile $r0;
        boolean $z0, $z1, $z2;
        java.lang.String r1;

        $r0 := @parameter0: org.fdroid.fdroid.data.SanitizedFile;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 = staticinvoke <org.fdroid.fdroid.compat.FileCompat: boolean hasApi(int)>(9);

        if $z2 == 0 goto label1;

        $z0 = virtualinvoke $r0.<org.fdroid.fdroid.data.SanitizedFile: boolean setReadable(boolean,boolean)>($z0, $z1);

        return $z0;

     label1:
        if $z0 == 0 goto label4;

        if $z1 == 0 goto label3;

        r1 = "0600";

     label2:
        $z0 = staticinvoke <org.fdroid.fdroid.compat.FileCompat: boolean setMode(org.fdroid.fdroid.data.SanitizedFile,java.lang.String)>($r0, r1);

        return $z0;

     label3:
        r1 = "0644";

        goto label2;

     label4:
        r1 = "0000";

        goto label2;
    }
    public static boolean symlink(org.fdroid.fdroid.data.SanitizedFile, org.fdroid.fdroid.data.SanitizedFile)
    {
        org.fdroid.fdroid.data.SanitizedFile $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: org.fdroid.fdroid.data.SanitizedFile;

        $r1 := @parameter1: org.fdroid.fdroid.data.SanitizedFile;

        $z0 = staticinvoke <org.fdroid.fdroid.compat.FileCompat: boolean hasApi(int)>(21);

        if $z0 == 0 goto label2;

        staticinvoke <org.fdroid.fdroid.compat.FileCompat: void symlinkOs(org.fdroid.fdroid.data.SanitizedFile,org.fdroid.fdroid.data.SanitizedFile)>($r0, $r1);

     label1:
        $z0 = virtualinvoke $r1.<org.fdroid.fdroid.data.SanitizedFile: boolean exists()>();

        return $z0;

     label2:
        $z0 = staticinvoke <org.fdroid.fdroid.compat.FileCompat: boolean hasApi(int)>(15);

        if $z0 == 0 goto label3;

        staticinvoke <org.fdroid.fdroid.compat.FileCompat: void symlinkLibcore(org.fdroid.fdroid.data.SanitizedFile,org.fdroid.fdroid.data.SanitizedFile)>($r0, $r1);

        goto label1;

     label3:
        staticinvoke <org.fdroid.fdroid.compat.FileCompat: void symlinkRuntime(org.fdroid.fdroid.data.SanitizedFile,org.fdroid.fdroid.data.SanitizedFile)>($r0, $r1);

        goto label1;
    }
    protected static void symlinkLibcore(org.fdroid.fdroid.data.SanitizedFile, org.fdroid.fdroid.data.SanitizedFile)
    {
        org.fdroid.fdroid.data.SanitizedFile $r0, $r1;
        java.lang.Exception r2;
        java.lang.Class $r3;
        java.lang.reflect.Field $r4;
        java.lang.Object $r5;
        java.lang.Class[] $r6;
        java.lang.reflect.Method $r7;
        java.lang.Object[] $r8;
        java.lang.String $r9;
        java.lang.StringBuilder $r10;

        $r0 := @parameter0: org.fdroid.fdroid.data.SanitizedFile;

        $r1 := @parameter1: org.fdroid.fdroid.data.SanitizedFile;

     label1:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("libcore.io.Libcore");

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("os");

        $r5 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r3 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = newarray (java.lang.Class)[2];

        $r6[0] = class "Ljava/lang/String;";

        $r6[1] = class "Ljava/lang/String;";

        $r7 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("symlink", $r6);

        $r8 = newarray (java.lang.Object)[2];

        $r9 = virtualinvoke $r0.<org.fdroid.fdroid.data.SanitizedFile: java.lang.String getAbsolutePath()>();

        $r8[0] = $r9;

        $r9 = virtualinvoke $r1.<org.fdroid.fdroid.data.SanitizedFile: java.lang.String getAbsolutePath()>();

        $r8[1] = $r9;

        virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, $r8);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not symlink ");

        $r9 = virtualinvoke $r0.<org.fdroid.fdroid.data.SanitizedFile: java.lang.String getAbsolutePath()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r9 = virtualinvoke $r1.<org.fdroid.fdroid.data.SanitizedFile: java.lang.String getAbsolutePath()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FileCompat", $r9, r2);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    protected static void symlinkOs(org.fdroid.fdroid.data.SanitizedFile, org.fdroid.fdroid.data.SanitizedFile)
    {
        org.fdroid.fdroid.data.SanitizedFile $r0, $r1;
        org.fdroid.fdroid.compat.FileCompat$Symlink21 $r2;

        $r0 := @parameter0: org.fdroid.fdroid.data.SanitizedFile;

        $r1 := @parameter1: org.fdroid.fdroid.data.SanitizedFile;

        $r2 = new org.fdroid.fdroid.compat.FileCompat$Symlink21;

        specialinvoke $r2.<org.fdroid.fdroid.compat.FileCompat$Symlink21: void <init>(org.fdroid.fdroid.compat.FileCompat$1)>(null);

        virtualinvoke $r2.<org.fdroid.fdroid.compat.FileCompat$Symlink21: void symlink(org.fdroid.fdroid.data.SanitizedFile,org.fdroid.fdroid.data.SanitizedFile)>($r0, $r1);

        return;
    }
    protected static void symlinkRuntime(org.fdroid.fdroid.data.SanitizedFile, org.fdroid.fdroid.data.SanitizedFile)
    {
        org.fdroid.fdroid.data.SanitizedFile $r0, $r1;
        java.lang.String[] r2;
        java.lang.String $r3;
        java.lang.StringBuilder $r4;
        java.lang.Runtime $r5;
        java.lang.Process $r6;
        java.io.InputStream $r7;
        java.io.IOException $r8;

        $r0 := @parameter0: org.fdroid.fdroid.data.SanitizedFile;

        $r1 := @parameter1: org.fdroid.fdroid.data.SanitizedFile;

        r2 = newarray (java.lang.String)[3];

        r2[0] = "/system/bin/ln";

        $r3 = virtualinvoke $r0.<org.fdroid.fdroid.data.SanitizedFile: java.lang.String getAbsolutePath()>();

        r2[1] = $r3;

        $r3 = virtualinvoke $r1.<org.fdroid.fdroid.data.SanitizedFile: java.lang.String getAbsolutePath()>();

        r2[2] = $r3;

        $r4 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Executing command: ");

     label2:
        $r3 = r2[0];

     label3:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label4:
        $r3 = r2[1];

     label5:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label6:
        $r3 = r2[2];

     label7:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("FileCompat", $r3);

        $r5 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r6 = virtualinvoke $r5.<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>(r2);

        $r7 = virtualinvoke $r6.<java.lang.Process: java.io.InputStream getInputStream()>();

        staticinvoke <org.fdroid.fdroid.Utils: void consumeStream(java.io.InputStream)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.Process: java.io.InputStream getErrorStream()>();

        staticinvoke <org.fdroid.fdroid.Utils: void consumeStream(java.io.InputStream)>($r7);

     label8:
        return;

     label9:
        $r8 := @caughtexception;

        return;

        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label3 to label4 with label9;
        catch java.io.IOException from label5 to label6 with label9;
        catch java.io.IOException from label7 to label8 with label9;
    }
