org.fdroid.fdroid.net.DownloaderFactory extends java.lang.Object
private static final java.lang.String TAG
    public void <init>()
    {
        org.fdroid.fdroid.net.DownloaderFactory r0;

        r0 := @this: org.fdroid.fdroid.net.DownloaderFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static boolean canUseDownloadManager(android.content.Context, java.net.URL)
    {
        android.content.Context $r0;
        java.net.URL $r1;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.net.URL;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 14 goto label1;

        return 0;

     label1:
        $z0 = staticinvoke <org.fdroid.fdroid.net.DownloaderFactory: boolean isOnionAddress(java.net.URL)>($r1);

        if $z0 != 0 goto label2;

        $z0 = staticinvoke <org.fdroid.fdroid.net.DownloaderFactory: boolean isBluetoothAddress(java.net.URL)>($r1);

        if $z0 != 0 goto label2;

        $z0 = staticinvoke <org.fdroid.fdroid.net.DownloaderFactory: boolean hasDownloadManager(android.content.Context)>($r0);

        return $z0;

     label2:
        return 0;
    }
    public static org.fdroid.fdroid.net.Downloader create(android.content.Context, java.lang.String) throws java.io.IOException
    {
        android.content.Context $r0;
        java.lang.String $r1;
        org.fdroid.fdroid.net.Downloader $r2;
        java.net.URL $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r3 = new java.net.URL;

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r2 = staticinvoke <org.fdroid.fdroid.net.DownloaderFactory: org.fdroid.fdroid.net.Downloader create(android.content.Context,java.net.URL)>($r0, $r3);

        return $r2;
    }
    public static org.fdroid.fdroid.net.Downloader create(android.content.Context, java.lang.String, java.io.File) throws java.io.IOException
    {
        android.content.Context $r0;
        java.lang.String $r1;
        java.io.File $r2;
        org.fdroid.fdroid.net.Downloader $r3;
        java.net.URL $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.io.File;

        $r4 = new java.net.URL;

        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r3 = staticinvoke <org.fdroid.fdroid.net.DownloaderFactory: org.fdroid.fdroid.net.Downloader create(android.content.Context,java.net.URL,java.io.File)>($r0, $r4, $r2);

        return $r3;
    }
    public static org.fdroid.fdroid.net.Downloader create(android.content.Context, java.net.URL) throws java.io.IOException
    {
        android.content.Context $r0;
        java.net.URL $r1;
        java.io.File $r2;
        org.fdroid.fdroid.net.Downloader $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.net.URL;

        $r2 = virtualinvoke $r0.<android.content.Context: java.io.File getCacheDir()>();

        $r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("dl-", "", $r2);

        virtualinvoke $r2.<java.io.File: void deleteOnExit()>();

        $r3 = staticinvoke <org.fdroid.fdroid.net.DownloaderFactory: org.fdroid.fdroid.net.Downloader create(android.content.Context,java.net.URL,java.io.File)>($r0, $r1, $r2);

        return $r3;
    }
    public static org.fdroid.fdroid.net.Downloader create(android.content.Context, java.net.URL, java.io.File) throws java.io.IOException
    {
        android.content.Context $r0;
        java.net.URL $r1;
        java.io.File $r2;
        org.fdroid.fdroid.net.Downloader $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.net.URL;

        $r2 := @parameter2: java.io.File;

        $r3 = staticinvoke <org.fdroid.fdroid.net.DownloaderFactory: org.fdroid.fdroid.net.Downloader create(android.content.Context,java.net.URL,java.io.File,org.fdroid.fdroid.data.Credentials)>($r0, $r1, $r2, null);

        return $r3;
    }
    public static org.fdroid.fdroid.net.Downloader create(android.content.Context, java.net.URL, java.io.File, org.fdroid.fdroid.data.Credentials) throws java.io.IOException
    {
        android.content.Context $r0;
        java.net.URL $r1;
        java.io.File $r2;
        org.fdroid.fdroid.data.Credentials $r3;
        boolean $z0;
        java.lang.String $r4;
        org.fdroid.fdroid.net.BluetoothDownloader $r5;
        org.fdroid.fdroid.net.TorHttpDownloader $r6;
        org.fdroid.fdroid.net.LocalFileDownloader $r7;
        org.fdroid.fdroid.net.HttpDownloader $r8;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.net.URL;

        $r2 := @parameter2: java.io.File;

        $r3 := @parameter3: org.fdroid.fdroid.data.Credentials;

        $z0 = staticinvoke <org.fdroid.fdroid.net.DownloaderFactory: boolean isBluetoothAddress(java.net.URL)>($r1);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke $r1.<java.net.URL: java.lang.String getHost()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", ":");

        $r5 = new org.fdroid.fdroid.net.BluetoothDownloader;

        specialinvoke $r5.<org.fdroid.fdroid.net.BluetoothDownloader: void <init>(android.content.Context,java.lang.String,java.net.URL,java.io.File)>($r0, $r4, $r1, $r2);

        return $r5;

     label1:
        $z0 = staticinvoke <org.fdroid.fdroid.net.DownloaderFactory: boolean isOnionAddress(java.net.URL)>($r1);

        if $z0 == 0 goto label2;

        $r6 = new org.fdroid.fdroid.net.TorHttpDownloader;

        specialinvoke $r6.<org.fdroid.fdroid.net.TorHttpDownloader: void <init>(android.content.Context,java.net.URL,java.io.File)>($r0, $r1, $r2);

        return $r6;

     label2:
        $z0 = staticinvoke <org.fdroid.fdroid.net.DownloaderFactory: boolean isLocalFile(java.net.URL)>($r1);

        if $z0 == 0 goto label3;

        $r7 = new org.fdroid.fdroid.net.LocalFileDownloader;

        specialinvoke $r7.<org.fdroid.fdroid.net.LocalFileDownloader: void <init>(android.content.Context,java.net.URL,java.io.File)>($r0, $r1, $r2);

        return $r7;

     label3:
        $r8 = new org.fdroid.fdroid.net.HttpDownloader;

        specialinvoke $r8.<org.fdroid.fdroid.net.HttpDownloader: void <init>(android.content.Context,java.net.URL,java.io.File,org.fdroid.fdroid.data.Credentials)>($r0, $r1, $r2, $r3);

        return $r8;
    }
    public static org.fdroid.fdroid.net.AsyncDownloader createAsync(android.content.Context, java.lang.String, java.io.File, java.lang.String, java.lang.String, org.fdroid.fdroid.data.Credentials, org.fdroid.fdroid.net.AsyncDownloader$Listener) throws java.io.IOException
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3, $r4;
        java.io.File $r2;
        org.fdroid.fdroid.data.Credentials $r5;
        org.fdroid.fdroid.net.AsyncDownloader$Listener $r6;
        java.net.URL $r7;
        org.fdroid.fdroid.net.AsyncDownloader $r8;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.io.File;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: org.fdroid.fdroid.data.Credentials;

        $r6 := @parameter6: org.fdroid.fdroid.net.AsyncDownloader$Listener;

        $r7 = new java.net.URL;

        specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r8 = staticinvoke <org.fdroid.fdroid.net.DownloaderFactory: org.fdroid.fdroid.net.AsyncDownloader createAsync(android.content.Context,java.net.URL,java.io.File,java.lang.String,java.lang.String,org.fdroid.fdroid.data.Credentials,org.fdroid.fdroid.net.AsyncDownloader$Listener)>($r0, $r7, $r2, $r3, $r4, $r5, $r6);

        return $r8;
    }
    public static org.fdroid.fdroid.net.AsyncDownloader createAsync(android.content.Context, java.net.URL, java.io.File, java.lang.String, java.lang.String, org.fdroid.fdroid.data.Credentials, org.fdroid.fdroid.net.AsyncDownloader$Listener) throws java.io.IOException
    {
        android.content.Context $r0;
        java.net.URL $r1;
        java.io.File $r2;
        java.lang.String $r3, $r4;
        org.fdroid.fdroid.data.Credentials $r5;
        org.fdroid.fdroid.net.AsyncDownloader$Listener $r6;
        org.fdroid.fdroid.net.Downloader $r7;
        org.fdroid.fdroid.net.AsyncDownloadWrapper $r8;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.net.URL;

        $r2 := @parameter2: java.io.File;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: org.fdroid.fdroid.data.Credentials;

        $r6 := @parameter6: org.fdroid.fdroid.net.AsyncDownloader$Listener;

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("DownloaderFactory", "Using AsyncDownloadWrapper");

        $r8 = new org.fdroid.fdroid.net.AsyncDownloadWrapper;

        $r7 = staticinvoke <org.fdroid.fdroid.net.DownloaderFactory: org.fdroid.fdroid.net.Downloader create(android.content.Context,java.net.URL,java.io.File,org.fdroid.fdroid.data.Credentials)>($r0, $r1, $r2, $r5);

        specialinvoke $r8.<org.fdroid.fdroid.net.AsyncDownloadWrapper: void <init>(org.fdroid.fdroid.net.Downloader,org.fdroid.fdroid.net.AsyncDownloader$Listener)>($r7, $r6);

        return $r8;
    }
    private static boolean hasDownloadManager(android.content.Context)
    {
        android.content.Context $r0;
        android.app.DownloadManager$Query r1;
        java.lang.Object $r2;
        android.app.DownloadManager r3;
        android.database.Cursor $r4;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("download");

        r3 = (android.app.DownloadManager) $r2;

        if r3 != null goto label1;

        return 0;

     label1:
        r1 = new android.app.DownloadManager$Query;

        specialinvoke r1.<android.app.DownloadManager$Query: void <init>()>();

        $r4 = virtualinvoke r3.<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager$Query)>(r1);

        if $r4 == null goto label2;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return 1;

     label2:
        return 0;
    }
    private static boolean isBluetoothAddress(java.net.URL)
    {
        java.net.URL $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.net.URL;

        $r1 = "bluetooth";

        $r2 = virtualinvoke $r0.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        return $z0;
    }
    static boolean isLocalFile(java.net.URL)
    {
        java.net.URL $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.net.URL;

        $r1 = "file";

        $r2 = virtualinvoke $r0.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        return $z0;
    }
    static boolean isOnionAddress(java.net.URL)
    {
        java.net.URL $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: java.net.URL;

        $r1 = virtualinvoke $r0.<java.net.URL: java.lang.String getHost()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".onion");

        return $z0;
    }
