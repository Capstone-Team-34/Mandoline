org.fdroid.fdroid.net.bluetooth.BluetoothServer extends java.lang.Thread
private static final java.lang.String TAG
private final java.util.List clients
private boolean isRunning
private android.bluetooth.BluetoothServerSocket serverSocket
private final org.fdroid.fdroid.localrepo.type.BluetoothSwap swap
private final java.io.File webRoot
    public void <init>(org.fdroid.fdroid.localrepo.type.BluetoothSwap, java.io.File)
    {
        org.fdroid.fdroid.net.bluetooth.BluetoothServer r0;
        org.fdroid.fdroid.localrepo.type.BluetoothSwap $r1;
        java.io.File $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.fdroid.fdroid.net.bluetooth.BluetoothServer;

        $r1 := @parameter0: org.fdroid.fdroid.localrepo.type.BluetoothSwap;

        $r2 := @parameter1: java.io.File;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: java.util.List clients> = $r3;

        r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: java.io.File webRoot> = $r2;

        r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: org.fdroid.fdroid.localrepo.type.BluetoothSwap swap> = $r1;

        virtualinvoke r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: void start()>();

        return;
    }
    public void close()
    {
        org.fdroid.fdroid.net.bluetooth.BluetoothServer r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.fdroid.fdroid.net.bluetooth.BluetoothServer$ClientConnection r4;
        android.bluetooth.BluetoothServerSocket $r5;

        r0 := @this: org.fdroid.fdroid.net.bluetooth.BluetoothServer;

        $r1 = r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: java.util.List clients>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.fdroid.fdroid.net.bluetooth.BluetoothServer$ClientConnection) $r3;

        virtualinvoke r4.<org.fdroid.fdroid.net.bluetooth.BluetoothServer$ClientConnection: void interrupt()>();

        goto label1;

     label2:
        virtualinvoke r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: void interrupt()>();

        $r5 = r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: android.bluetooth.BluetoothServerSocket serverSocket>;

        if $r5 == null goto label3;

        $r5 = r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: android.bluetooth.BluetoothServerSocket serverSocket>;

        staticinvoke <org.fdroid.fdroid.Utils: void closeQuietly(java.io.Closeable)>($r5);

     label3:
        return;
    }
    public boolean isRunning()
    {
        org.fdroid.fdroid.net.bluetooth.BluetoothServer r0;
        boolean z0;

        r0 := @this: org.fdroid.fdroid.net.bluetooth.BluetoothServer;

        z0 = r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: boolean isRunning>;

        return z0;
    }
    public void run()
    {
        org.fdroid.fdroid.net.bluetooth.BluetoothServer r0;
        org.fdroid.fdroid.net.bluetooth.BluetoothServer$ClientConnection r1;
        android.bluetooth.BluetoothAdapter $r2;
        java.util.UUID $r3;
        android.bluetooth.BluetoothServerSocket $r4;
        boolean $z0;
        java.io.IOException r5, r8;
        org.fdroid.fdroid.localrepo.type.BluetoothSwap $r6;
        android.bluetooth.BluetoothSocket $r7;
        java.io.File $r9;
        java.util.List $r10;

        r0 := @this: org.fdroid.fdroid.net.bluetooth.BluetoothServer;

        r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: boolean isRunning> = 1;

        $r2 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

     label01:
        $r3 = staticinvoke <org.fdroid.fdroid.net.bluetooth.BluetoothConstants: java.util.UUID fdroidUuid()>();

        $r4 = virtualinvoke $r2.<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String,java.util.UUID)>("FDroid App Swap", $r3);

     label02:
        r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: android.bluetooth.BluetoothServerSocket serverSocket> = $r4;

     label03:
        $z0 = virtualinvoke r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: boolean isInterrupted()>();

        if $z0 == 0 goto label06;

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("BluetoothServer", "Server stopped so will terminate loop looking for client connections.");

     label04:
        r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: boolean isRunning> = 0;

        return;

     label05:
        r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothServer", "Error starting Bluetooth server socket, will stop the server now", r5);

        $r6 = r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: org.fdroid.fdroid.localrepo.type.BluetoothSwap swap>;

        virtualinvoke $r6.<org.fdroid.fdroid.localrepo.type.BluetoothSwap: void stop()>();

        r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: boolean isRunning> = 0;

        return;

     label06:
        $r4 = r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: android.bluetooth.BluetoothServerSocket serverSocket>;

     label07:
        $r7 = virtualinvoke $r4.<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept()>();

     label08:
        if $r7 == null goto label03;

     label09:
        $z0 = virtualinvoke r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: boolean isInterrupted()>();

     label10:
        if $z0 == 0 goto label14;

     label11:
        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("BluetoothServer", "Server stopped after socket accepted from client, but before initiating connection.");

     label12:
        goto label04;

     label13:
        r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothServer", "Error receiving client connection over Bluetooth server socket, will continue listening for other clients", r8);

        goto label03;

     label14:
        r1 = new org.fdroid.fdroid.net.bluetooth.BluetoothServer$ClientConnection;

        $r9 = r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: java.io.File webRoot>;

     label15:
        specialinvoke r1.<org.fdroid.fdroid.net.bluetooth.BluetoothServer$ClientConnection: void <init>(android.bluetooth.BluetoothSocket,java.io.File)>($r7, $r9);

        virtualinvoke r1.<org.fdroid.fdroid.net.bluetooth.BluetoothServer$ClientConnection: void start()>();

     label16:
        $r10 = r0.<org.fdroid.fdroid.net.bluetooth.BluetoothServer: java.util.List clients>;

     label17:
        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r1);

     label18:
        goto label03;

        catch java.io.IOException from label01 to label02 with label05;
        catch java.io.IOException from label07 to label08 with label13;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label15 to label16 with label13;
        catch java.io.IOException from label17 to label18 with label13;
    }
