org.fdroid.fdroid.Hasher extends java.lang.Object
private byte[] array
private java.security.MessageDigest digest
private java.io.File file
private java.lang.String hashCache
    public void <init>(java.lang.String, java.io.File) throws java.security.NoSuchAlgorithmException
    {
        org.fdroid.fdroid.Hasher r0;
        java.lang.String $r1;
        java.io.File $r2;

        r0 := @this: org.fdroid.fdroid.Hasher;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<org.fdroid.fdroid.Hasher: void init(java.lang.String)>($r1);

        r0.<org.fdroid.fdroid.Hasher: java.io.File file> = $r2;

        return;
    }
    public void <init>(java.lang.String, byte[]) throws java.security.NoSuchAlgorithmException
    {
        org.fdroid.fdroid.Hasher r0;
        java.lang.String $r1;
        byte[] $r2;

        r0 := @this: org.fdroid.fdroid.Hasher;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<org.fdroid.fdroid.Hasher: void init(java.lang.String)>($r1);

        r0.<org.fdroid.fdroid.Hasher: byte[] array> = $r2;

        return;
    }
    public static java.lang.String hex(java.security.cert.Certificate)
    {
        java.security.cert.Certificate $r0;
        java.security.cert.CertificateEncodingException r1;
        byte[] $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.security.cert.Certificate;

     label1:
        $r2 = virtualinvoke $r0.<java.security.cert.Certificate: byte[] getEncoded()>();

     label2:
        $r3 = staticinvoke <org.fdroid.fdroid.Hasher: java.lang.String hex(byte[])>($r2);

        return $r3;

     label3:
        r1 := @caughtexception;

        $r2 = newarray (byte)[0];

        goto label2;

        catch java.security.cert.CertificateEncodingException from label1 to label2 with label3;
    }
    private static java.lang.String hex(byte[])
    {
        byte[] $r0, r1;
        byte b0, $b4;
        int $i1, $i2, i3;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $i1 = lengthof $r0;

        $i1 = $i1 * 2;

        r1 = newarray (byte)[$i1];

        $i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label6;

        b0 = $r0[$i1];

        $i2 = b0 >> 4;

        i3 = $i2 & 15;

        $i2 = $i1 * 2;

        if i3 < 10 goto label4;

        i3 = i3 + 97;

        i3 = i3 + -10;

     label2:
        $b4 = (byte) i3;

        r1[$i2] = $b4;

        i3 = b0 & 15;

        $i2 = $i1 * 2;

        $i2 = $i2 + 1;

        if i3 < 10 goto label5;

        i3 = i3 + 97;

        i3 = i3 + -10;

     label3:
        b0 = (byte) i3;

        r1[$i2] = b0;

        $i1 = $i1 + 1;

        goto label1;

     label4:
        i3 = i3 + 48;

        goto label2;

     label5:
        i3 = i3 + 48;

        goto label3;

     label6:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>(r1);

        return $r2;
    }
    private void init(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        org.fdroid.fdroid.Hasher r0;
        java.lang.String $r1;
        java.lang.Exception r2;
        java.security.MessageDigest $r3;
        java.security.NoSuchAlgorithmException $r4;

        r0 := @this: org.fdroid.fdroid.Hasher;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1);

        r0.<org.fdroid.fdroid.Hasher: java.security.MessageDigest digest> = $r3;

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r4 = new java.security.NoSuchAlgorithmException;

        specialinvoke $r4.<java.security.NoSuchAlgorithmException: void <init>(java.lang.Throwable)>(r2);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public static byte[] unhex(java.lang.String)
    {
        java.lang.String $r0;
        byte[] r1;
        int $i0, $i1, i3, $i5;
        char $c2;
        byte $b4, $b6;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        r1 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label7;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if 48 > $c2 goto label4;

        if $c2 > 57 goto label4;

        i3 = $c2 + -48;

     label2:
        $i1 = $i0 / 2;

        $b4 = r1[$i1];

        $i5 = $i0 % 2;

        if $i5 != 0 goto label3;

        i3 = i3 << 4;

     label3:
        $b6 = (byte) i3;

        i3 = $b4 + $b6;

        $b4 = (byte) i3;

        r1[$i1] = $b4;

        $i0 = $i0 + 1;

        goto label1;

     label4:
        if 97 > $c2 goto label5;

        if $c2 > 102 goto label5;

        $i1 = $c2 + -97;

        i3 = $i1 + 10;

        goto label2;

     label5:
        if 65 > $c2 goto label6;

        if $c2 > 70 goto label6;

        $i1 = $c2 + -65;

        i3 = $i1 + 10;

        goto label2;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad hex digit");

        throw $r2;

     label7:
        return r1;
    }
    public java.lang.String getHash()
    {
        org.fdroid.fdroid.Hasher r0;
        byte[] r1;
        java.io.BufferedInputStream r2, r5;
        java.lang.String $r3;
        java.io.File $r4;
        java.io.FileInputStream $r6;
        int $i0;
        java.security.MessageDigest $r7;
        java.lang.Exception r8, r10;
        java.lang.Throwable $r9;

        r0 := @this: org.fdroid.fdroid.Hasher;

        $r3 = r0.<org.fdroid.fdroid.Hasher: java.lang.String hashCache>;

        if $r3 == null goto label01;

        $r3 = r0.<org.fdroid.fdroid.Hasher: java.lang.String hashCache>;

        return $r3;

     label01:
        $r4 = r0.<org.fdroid.fdroid.Hasher: java.io.File file>;

        if $r4 == null goto label15;

        r1 = newarray (byte)[1024];

        r5 = null;

     label02:
        r2 = new java.io.BufferedInputStream;

        $r6 = new java.io.FileInputStream;

     label03:
        $r4 = r0.<org.fdroid.fdroid.Hasher: java.io.File file>;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r4);

        specialinvoke r2.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r6);

     label04:
        $i0 = virtualinvoke r2.<java.io.InputStream: int read(byte[])>(r1);

     label05:
        if $i0 <= 0 goto label11;

     label06:
        $r7 = r0.<org.fdroid.fdroid.Hasher: java.security.MessageDigest digest>;

        virtualinvoke $r7.<java.security.MessageDigest: void update(byte[],int,int)>(r1, 0, $i0);

     label07:
        goto label04;

     label08:
        r8 := @caughtexception;

        r5 = r2;

     label09:
        r0.<org.fdroid.fdroid.Hasher: java.lang.String hashCache> = "";

        $r3 = r0.<org.fdroid.fdroid.Hasher: java.lang.String hashCache>;

     label10:
        staticinvoke <org.fdroid.fdroid.Utils: void closeQuietly(java.io.Closeable)>(r5);

        return $r3;

     label11:
        staticinvoke <org.fdroid.fdroid.Utils: void closeQuietly(java.io.Closeable)>(r2);

     label12:
        $r7 = r0.<org.fdroid.fdroid.Hasher: java.security.MessageDigest digest>;

        r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>();

        $r3 = staticinvoke <org.fdroid.fdroid.Hasher: java.lang.String hex(byte[])>(r1);

        r0.<org.fdroid.fdroid.Hasher: java.lang.String hashCache> = $r3;

        $r3 = r0.<org.fdroid.fdroid.Hasher: java.lang.String hashCache>;

        return $r3;

     label13:
        $r9 := @caughtexception;

     label14:
        staticinvoke <org.fdroid.fdroid.Utils: void closeQuietly(java.io.Closeable)>(r5);

        throw $r9;

     label15:
        $r7 = r0.<org.fdroid.fdroid.Hasher: java.security.MessageDigest digest>;

        r1 = r0.<org.fdroid.fdroid.Hasher: byte[] array>;

        virtualinvoke $r7.<java.security.MessageDigest: void update(byte[])>(r1);

        goto label12;

     label16:
        $r9 := @caughtexception;

        r5 = r2;

        goto label14;

     label17:
        r10 := @caughtexception;

        goto label09;

        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Throwable from label02 to label04 with label13;
        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label09 to label10 with label13;
    }
    public boolean match(java.lang.String)
    {
        org.fdroid.fdroid.Hasher r0;
        java.lang.String $r1, $r2;
        java.util.Locale $r3;
        boolean $z0;

        r0 := @this: org.fdroid.fdroid.Hasher;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.fdroid.fdroid.Hasher: java.lang.String hashCache>;

        if $r2 != null goto label2;

        virtualinvoke r0.<org.fdroid.fdroid.Hasher: java.lang.String getHash()>();

     label2:
        $r2 = r0.<org.fdroid.fdroid.Hasher: java.lang.String hashCache>;

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }
