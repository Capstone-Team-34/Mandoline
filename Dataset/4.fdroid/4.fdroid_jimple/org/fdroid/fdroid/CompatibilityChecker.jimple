org.fdroid.fdroid.CompatibilityChecker extends org.fdroid.fdroid.compat.Compatibility
private static final java.lang.String TAG
private final android.content.Context context
private final java.lang.String[] cpuAbis
private final java.lang.String cpuAbisDesc
private final java.util.Set features
private final boolean ignoreTouchscreen
    public void <init>(android.content.Context)
    {
        org.fdroid.fdroid.CompatibilityChecker r0;
        android.content.Context $r1, $r5;
        java.lang.String r2;
        java.lang.StringBuilder r3;
        android.content.pm.FeatureInfo r4;
        android.content.SharedPreferences $r6;
        boolean $z0;
        android.content.pm.PackageManager $r7;
        java.util.HashSet $r8;
        android.content.pm.FeatureInfo[] $r9;
        int i0, i1;
        java.util.Set $r10;
        java.lang.String[] $r11;

        r0 := @this: org.fdroid.fdroid.CompatibilityChecker;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<org.fdroid.fdroid.compat.Compatibility: void <init>()>();

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<org.fdroid.fdroid.CompatibilityChecker: android.content.Context context> = $r5;

        $r6 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r1);

        $z0 = interfaceinvoke $r6.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("ignoreTouchscreen", 0);

        r0.<org.fdroid.fdroid.CompatibilityChecker: boolean ignoreTouchscreen> = $z0;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        r0.<org.fdroid.fdroid.CompatibilityChecker: java.util.Set features> = $r8;

        if $r7 == null goto label2;

        $r9 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>();

        if $r9 == null goto label2;

        $r9 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>();

        i0 = lengthof $r9;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = $r9[i1];

        $r10 = r0.<org.fdroid.fdroid.CompatibilityChecker: java.util.Set features>;

        r2 = r4.<android.content.pm.FeatureInfo: java.lang.String name>;

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r11 = staticinvoke <org.fdroid.fdroid.compat.SupportedArchitectures: java.lang.String[] getAbis()>();

        r0.<org.fdroid.fdroid.CompatibilityChecker: java.lang.String[] cpuAbis> = $r11;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $z0 = 1;

        $r11 = r0.<org.fdroid.fdroid.CompatibilityChecker: java.lang.String[] cpuAbis>;

        i0 = lengthof $r11;

        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        r2 = $r11[i1];

        if $z0 == 0 goto label5;

        $z0 = 0;

     label4:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        i1 = i1 + 1;

        goto label3;

     label5:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label4;

     label6:
        r2 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.fdroid.fdroid.CompatibilityChecker: java.lang.String cpuAbisDesc> = r2;

        return;
    }
    private boolean compatibleApi(org.fdroid.fdroid.Utils$CommaSeparatedList)
    {
        org.fdroid.fdroid.CompatibilityChecker r0;
        org.fdroid.fdroid.Utils$CommaSeparatedList $r1;
        java.lang.String[] r2;
        java.lang.String r3;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.fdroid.fdroid.CompatibilityChecker;

        $r1 := @parameter0: org.fdroid.fdroid.Utils$CommaSeparatedList;

        if $r1 != null goto label1;

        return 1;

     label1:
        r2 = r0.<org.fdroid.fdroid.CompatibilityChecker: java.lang.String[] cpuAbis>;

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = virtualinvoke $r1.<org.fdroid.fdroid.Utils$CommaSeparatedList: boolean contains(java.lang.String)>(r3);

        if $z0 != 0 goto label4;

        i1 = i1 + 1;

        goto label2;

     label3:
        return 0;

     label4:
        return 1;
    }
    public java.util.List getIncompatibleReasons(org.fdroid.fdroid.data.Apk)
    {
        org.fdroid.fdroid.CompatibilityChecker r0;
        org.fdroid.fdroid.data.Apk $r1;
        java.util.ArrayList r2;
        int $i0;
        boolean $z0;
        android.content.Context $r3;
        java.lang.Object[] $r4;
        java.lang.String $r5, $r9;
        org.fdroid.fdroid.Utils$CommaSeparatedList $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        java.util.Set $r10;
        java.lang.String[] $r11;
        java.lang.StringBuilder $r12;

        r0 := @this: org.fdroid.fdroid.CompatibilityChecker;

        $r1 := @parameter0: org.fdroid.fdroid.data.Apk;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $i0 = $r1.<org.fdroid.fdroid.data.Apk: int minSdkVersion>;

        $z0 = staticinvoke <org.fdroid.fdroid.CompatibilityChecker: boolean hasApi(int)>($i0);

        if $z0 != 0 goto label4;

        $r3 = r0.<org.fdroid.fdroid.CompatibilityChecker: android.content.Context context>;

        $r4 = newarray (java.lang.Object)[1];

        $i0 = $r1.<org.fdroid.fdroid.data.Apk: int minSdkVersion>;

        $r5 = staticinvoke <org.fdroid.fdroid.Utils: java.lang.String getAndroidVersionName(int)>($i0);

        $r4[0] = $r5;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131165370, $r4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        $r6 = $r1.<org.fdroid.fdroid.data.Apk: org.fdroid.fdroid.Utils$CommaSeparatedList features>;

        if $r6 == null goto label5;

        $r6 = $r1.<org.fdroid.fdroid.data.Apk: org.fdroid.fdroid.Utils$CommaSeparatedList features>;

        $r7 = virtualinvoke $r6.<org.fdroid.fdroid.Utils$CommaSeparatedList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r8;

        $z0 = r0.<org.fdroid.fdroid.CompatibilityChecker: boolean ignoreTouchscreen>;

        if $z0 == 0 goto label3;

        $r9 = "android.hardware.touchscreen";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

     label3:
        $r10 = r0.<org.fdroid.fdroid.CompatibilityChecker: java.util.Set features>;

        $z0 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        $r11 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r2, $r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r9 = $r1.<org.fdroid.fdroid.data.Apk: java.lang.String packageName>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vercode ");

        $i0 = $r1.<org.fdroid.fdroid.data.Apk: int vercode>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is incompatible based on lack of ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("Compatibility", $r5);

        goto label2;

     label4:
        $i0 = $r1.<org.fdroid.fdroid.data.Apk: int maxSdkVersion>;

        $z0 = staticinvoke <org.fdroid.fdroid.CompatibilityChecker: boolean upToApi(int)>($i0);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.fdroid.fdroid.CompatibilityChecker: android.content.Context context>;

        $r4 = newarray (java.lang.Object)[1];

        $i0 = $r1.<org.fdroid.fdroid.data.Apk: int maxSdkVersion>;

        $r5 = staticinvoke <org.fdroid.fdroid.Utils: java.lang.String getAndroidVersionName(int)>($i0);

        $r4[0] = $r5;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131165506, $r4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label5:
        $r6 = $r1.<org.fdroid.fdroid.data.Apk: org.fdroid.fdroid.Utils$CommaSeparatedList nativecode>;

        $z0 = specialinvoke r0.<org.fdroid.fdroid.CompatibilityChecker: boolean compatibleApi(org.fdroid.fdroid.Utils$CommaSeparatedList)>($r6);

        if $z0 != 0 goto label8;

        $r6 = $r1.<org.fdroid.fdroid.data.Apk: org.fdroid.fdroid.Utils$CommaSeparatedList nativecode>;

        $r7 = virtualinvoke $r6.<org.fdroid.fdroid.Utils$CommaSeparatedList: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r8;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label6;

     label7:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r5 = $r1.<org.fdroid.fdroid.data.Apk: java.lang.String packageName>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vercode ");

        $i0 = $r1.<org.fdroid.fdroid.data.Apk: int vercode>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" only supports ");

        $r6 = $r1.<org.fdroid.fdroid.data.Apk: org.fdroid.fdroid.Utils$CommaSeparatedList nativecode>;

        $r5 = staticinvoke <org.fdroid.fdroid.Utils$CommaSeparatedList: java.lang.String str(org.fdroid.fdroid.Utils$CommaSeparatedList)>($r6);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while your architectures are ");

        $r5 = r0.<org.fdroid.fdroid.CompatibilityChecker: java.lang.String cpuAbisDesc>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("Compatibility", $r5);

     label8:
        return r2;
    }
