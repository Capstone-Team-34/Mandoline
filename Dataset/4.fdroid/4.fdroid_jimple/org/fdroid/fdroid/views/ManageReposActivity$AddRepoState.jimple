org.fdroid.fdroid.views.ManageReposActivity$AddRepoState extends java.lang.Enum
private static final org.fdroid.fdroid.views.ManageReposActivity$AddRepoState[] $VALUES
public static final enum org.fdroid.fdroid.views.ManageReposActivity$AddRepoState DOESNT_EXIST
public static final enum org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_DISABLED
public static final enum org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_ENABLED
public static final enum org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_FINGERPRINT_MATCH
public static final enum org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_FINGERPRINT_MISMATCH
public static final enum org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_UPGRADABLE_TO_SIGNED
public static final enum org.fdroid.fdroid.views.ManageReposActivity$AddRepoState INVALID_URL
public static final enum org.fdroid.fdroid.views.ManageReposActivity$AddRepoState IS_SWAP
    static void <clinit>()
    {
        org.fdroid.fdroid.views.ManageReposActivity$AddRepoState $r0;
        org.fdroid.fdroid.views.ManageReposActivity$AddRepoState[] $r1;

        $r0 = new org.fdroid.fdroid.views.ManageReposActivity$AddRepoState;

        specialinvoke $r0.<org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: void <init>(java.lang.String,int)>("DOESNT_EXIST", 0);

        <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState DOESNT_EXIST> = $r0;

        $r0 = new org.fdroid.fdroid.views.ManageReposActivity$AddRepoState;

        specialinvoke $r0.<org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: void <init>(java.lang.String,int)>("EXISTS_FINGERPRINT_MISMATCH", 1);

        <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_FINGERPRINT_MISMATCH> = $r0;

        $r0 = new org.fdroid.fdroid.views.ManageReposActivity$AddRepoState;

        specialinvoke $r0.<org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: void <init>(java.lang.String,int)>("EXISTS_FINGERPRINT_MATCH", 2);

        <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_FINGERPRINT_MATCH> = $r0;

        $r0 = new org.fdroid.fdroid.views.ManageReposActivity$AddRepoState;

        specialinvoke $r0.<org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: void <init>(java.lang.String,int)>("EXISTS_DISABLED", 3);

        <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_DISABLED> = $r0;

        $r0 = new org.fdroid.fdroid.views.ManageReposActivity$AddRepoState;

        specialinvoke $r0.<org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: void <init>(java.lang.String,int)>("EXISTS_ENABLED", 4);

        <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_ENABLED> = $r0;

        $r0 = new org.fdroid.fdroid.views.ManageReposActivity$AddRepoState;

        specialinvoke $r0.<org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: void <init>(java.lang.String,int)>("EXISTS_UPGRADABLE_TO_SIGNED", 5);

        <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_UPGRADABLE_TO_SIGNED> = $r0;

        $r0 = new org.fdroid.fdroid.views.ManageReposActivity$AddRepoState;

        specialinvoke $r0.<org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: void <init>(java.lang.String,int)>("INVALID_URL", 6);

        <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState INVALID_URL> = $r0;

        $r0 = new org.fdroid.fdroid.views.ManageReposActivity$AddRepoState;

        specialinvoke $r0.<org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: void <init>(java.lang.String,int)>("IS_SWAP", 7);

        <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState IS_SWAP> = $r0;

        $r1 = newarray (org.fdroid.fdroid.views.ManageReposActivity$AddRepoState)[8];

        $r0 = <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState DOESNT_EXIST>;

        $r1[0] = $r0;

        $r0 = <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_FINGERPRINT_MISMATCH>;

        $r1[1] = $r0;

        $r0 = <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_FINGERPRINT_MATCH>;

        $r1[2] = $r0;

        $r0 = <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_DISABLED>;

        $r1[3] = $r0;

        $r0 = <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_ENABLED>;

        $r1[4] = $r0;

        $r0 = <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState EXISTS_UPGRADABLE_TO_SIGNED>;

        $r1[5] = $r0;

        $r0 = <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState INVALID_URL>;

        $r1[6] = $r0;

        $r0 = <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState IS_SWAP>;

        $r1[7] = $r0;

        <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        org.fdroid.fdroid.views.ManageReposActivity$AddRepoState r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }
    public static org.fdroid.fdroid.views.ManageReposActivity$AddRepoState valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.fdroid.fdroid.views.ManageReposActivity$AddRepoState $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/fdroid/fdroid/views/ManageReposActivity$AddRepoState;", $r0);

        $r2 = (org.fdroid.fdroid.views.ManageReposActivity$AddRepoState) $r1;

        return $r2;
    }
    public static org.fdroid.fdroid.views.ManageReposActivity$AddRepoState[] values()
    {
        java.lang.Object $r0;
        org.fdroid.fdroid.views.ManageReposActivity$AddRepoState[] $r1;

        $r1 = <org.fdroid.fdroid.views.ManageReposActivity$AddRepoState: org.fdroid.fdroid.views.ManageReposActivity$AddRepoState[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.fdroid.fdroid.views.ManageReposActivity$AddRepoState[]) $r0;

        return $r1;
    }
