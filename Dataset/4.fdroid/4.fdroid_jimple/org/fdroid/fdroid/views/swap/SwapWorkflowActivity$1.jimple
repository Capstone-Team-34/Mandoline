org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1 extends java.lang.Object implements android.content.ServiceConnection
final org.fdroid.fdroid.views.swap.SwapWorkflowActivity this$0
    void <init>(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1 r0;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity $r1;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1;

        $r1 := @parameter0: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1: org.fdroid.fdroid.views.swap.SwapWorkflowActivity this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1 r0;
        android.content.ComponentName $r1;
        org.fdroid.fdroid.localrepo.SwapService $r2;
        android.os.IBinder $r3;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity $r4;
        org.fdroid.fdroid.localrepo.SwapService$Binder $r5;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1;

        $r1 := @parameter0: android.content.ComponentName;

        $r3 := @parameter1: android.os.IBinder;

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "Swap service connected. Will hold onto it so we can talk to it regularly.");

        $r4 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1: org.fdroid.fdroid.views.swap.SwapWorkflowActivity this$0>;

        $r5 = (org.fdroid.fdroid.localrepo.SwapService$Binder) $r3;

        $r2 = virtualinvoke $r5.<org.fdroid.fdroid.localrepo.SwapService$Binder: org.fdroid.fdroid.localrepo.SwapService getService()>();

        staticinvoke <org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService access$002(org.fdroid.fdroid.views.swap.SwapWorkflowActivity,org.fdroid.fdroid.localrepo.SwapService)>($r4, $r2);

        $r4 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1: org.fdroid.fdroid.views.swap.SwapWorkflowActivity this$0>;

        staticinvoke <org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void access$100(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)>($r4);

        return;
    }
    public void onServiceDisconnected(android.content.ComponentName)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1 r0;
        android.content.ComponentName $r1;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity $r2;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1;

        $r1 := @parameter0: android.content.ComponentName;

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "Swap service disconnected");

        $r2 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1: org.fdroid.fdroid.views.swap.SwapWorkflowActivity this$0>;

        staticinvoke <org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService access$002(org.fdroid.fdroid.views.swap.SwapWorkflowActivity,org.fdroid.fdroid.localrepo.SwapService)>($r2, null);

        return;
    }
