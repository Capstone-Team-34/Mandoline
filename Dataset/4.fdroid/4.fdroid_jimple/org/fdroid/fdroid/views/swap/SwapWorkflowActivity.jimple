org.fdroid.fdroid.views.swap.SwapWorkflowActivity extends android.support.v7.app.AppCompatActivity
private static final int CONNECT_TO_SWAP
public static final java.lang.String EXTRA_CONFIRM
public static final java.lang.String EXTRA_PREVENT_FURTHER_SWAP_REQUESTS
public static final java.lang.String EXTRA_SWAP_INTENT_HANDLED
private static final int REQUEST_BLUETOOTH_DISCOVERABLE
private static final int REQUEST_BLUETOOTH_ENABLE_FOR_SEND
private static final int REQUEST_BLUETOOTH_ENABLE_FOR_SWAP
private static final java.lang.String TAG
private org.fdroid.fdroid.data.NewRepoConfig confirmSwapConfig
private android.view.ViewGroup container
private org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView currentView
private boolean hasPreparedLocalRepo
private org.fdroid.fdroid.localrepo.SwapService service
private final android.content.ServiceConnection serviceConnection
private android.support.v7.widget.Toolbar toolbar
private org.fdroid.fdroid.views.swap.SwapWorkflowActivity$PrepareSwapRepo updateSwappableAppsTask
    public void <init>()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1 $r1;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void <init>()>();

        $r1 = new org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1;

        specialinvoke $r1.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$1: void <init>(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)>(r0);

        r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.content.ServiceConnection serviceConnection> = $r1;

        return;
    }
    static org.fdroid.fdroid.localrepo.SwapService access$000(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity $r0;
        org.fdroid.fdroid.localrepo.SwapService r1;

        $r0 := @parameter0: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        r1 = $r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service>;

        return r1;
    }
    static org.fdroid.fdroid.localrepo.SwapService access$002(org.fdroid.fdroid.views.swap.SwapWorkflowActivity, org.fdroid.fdroid.localrepo.SwapService)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity $r0;
        org.fdroid.fdroid.localrepo.SwapService $r1;

        $r0 := @parameter0: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 := @parameter1: org.fdroid.fdroid.localrepo.SwapService;

        $r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service> = $r1;

        return $r1;
    }
    static void access$100(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity $r0;

        $r0 := @parameter0: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        specialinvoke $r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showRelevantView()>();

        return;
    }
    static void access$200(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity $r0;

        $r0 := @parameter0: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        specialinvoke $r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void promptToSetupWifiAP()>();

        return;
    }
    static void access$300(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity $r0;

        $r0 := @parameter0: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        specialinvoke $r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void onToolbarCancel()>();

        return;
    }
    static void access$400(org.fdroid.fdroid.views.swap.SwapWorkflowActivity, java.io.File, java.lang.String)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity $r0;
        java.io.File $r1;
        java.lang.String $r2;

        $r0 := @parameter0: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 := @parameter1: java.io.File;

        $r2 := @parameter2: java.lang.String;

        specialinvoke $r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void handleDownloadComplete(java.io.File,java.lang.String)>($r1, $r2);

        return;
    }
    static void access$500(org.fdroid.fdroid.views.swap.SwapWorkflowActivity, boolean)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity $r0;
        boolean $z0;

        $r0 := @parameter0: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showRelevantView(boolean)>($z0);

        return;
    }
    private boolean attemptToShowNfc()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.data.Repo $r1;
        android.net.Uri $r2;
        boolean $z0, $z1;
        org.fdroid.fdroid.Preferences $r3;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 = <org.fdroid.fdroid.FDroidApp: org.fdroid.fdroid.data.Repo repo>;

        $r2 = staticinvoke <org.fdroid.fdroid.Utils: android.net.Uri getSharingUri(org.fdroid.fdroid.data.Repo)>($r1);

        $z0 = staticinvoke <org.fdroid.fdroid.NfcHelper: boolean setPushMessage(android.app.Activity,android.net.Uri)>(r0, $r2);

        $r3 = staticinvoke <org.fdroid.fdroid.Preferences: org.fdroid.fdroid.Preferences get()>();

        $z1 = virtualinvoke $r3.<org.fdroid.fdroid.Preferences: boolean showNfcDuringSwap()>();

        if $z1 == 0 goto label1;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView inflateInnerView(int)>(2130903109);

        return 1;

     label1:
        return 0;
    }
    private void checkIncomingIntent()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        android.content.Intent $r1;
        boolean $z0;
        org.fdroid.fdroid.data.NewRepoConfig $r2;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.content.Intent getIntent()>();

        $z0 = virtualinvoke $r1.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("EXTRA_CONFIRM", 0);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r1.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("swapIntentHandled", 0);

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("swapIntentHandled", 1);

        $r2 = new org.fdroid.fdroid.data.NewRepoConfig;

        specialinvoke $r2.<org.fdroid.fdroid.data.NewRepoConfig: void <init>(android.content.Context,android.content.Intent)>(r0, $r1);

        r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.data.NewRepoConfig confirmSwapConfig> = $r2;

     label1:
        return;
    }
    private void ensureBluetoothDiscoverableThenStart()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        android.content.Intent r1;
        android.bluetooth.BluetoothAdapter $r2;
        int $i0;
        org.fdroid.fdroid.localrepo.SwapService $r3;
        java.lang.IllegalStateException $r4;
        org.fdroid.fdroid.localrepo.type.SwapType $r5;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "Ensuring Bluetooth is in discoverable mode.");

        $r2 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        $i0 = virtualinvoke $r2.<android.bluetooth.BluetoothAdapter: int getScanMode()>();

        if $i0 == 23 goto label1;

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "Not currently in discoverable mode, so prompting user to enable.");

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.adapter.action.REQUEST_DISCOVERABLE");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.adapter.extra.DISCOVERABLE_DURATION", 3600);

        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void startActivityForResult(android.content.Intent,int)>(r1, 3);

     label1:
        $r3 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service>;

        if $r3 != null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t start Bluetooth swap because service is null for some strange reason.");

        throw $r4;

     label2:
        $r3 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service>;

        $r5 = virtualinvoke $r3.<org.fdroid.fdroid.localrepo.SwapService: org.fdroid.fdroid.localrepo.type.SwapType getBluetoothSwap()>();

        virtualinvoke $r5.<org.fdroid.fdroid.localrepo.type.SwapType: void startInBackground()>();

        return;
    }
    private void handleDownloadComplete(java.io.File, java.lang.String)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        java.io.File $r1;
        java.lang.String $r2;
        org.fdroid.fdroid.installer.Installer $r3;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$9 $r4;
        org.fdroid.fdroid.installer.Installer$AndroidNotCompatibleException $r5;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $r4 = new org.fdroid.fdroid.views.swap.SwapWorkflowActivity$9;

     label1:
        specialinvoke $r4.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$9: void <init>(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)>(r0);

        $r3 = staticinvoke <org.fdroid.fdroid.installer.Installer: org.fdroid.fdroid.installer.Installer getActivityInstaller(android.app.Activity,org.fdroid.fdroid.installer.Installer$InstallerCallback)>(r0, $r4);

        virtualinvoke $r3.<org.fdroid.fdroid.installer.Installer: void installPackage(java.io.File,java.lang.String)>($r1, $r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch org.fdroid.fdroid.installer.Installer$AndroidNotCompatibleException from label1 to label2 with label3;
    }
    private org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView inflateInnerView(int)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        int $i0;
        android.view.ViewGroup $r1;
        java.lang.Object $r2;
        android.view.LayoutInflater $r3;
        android.view.View $r4;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView $r5;
        org.fdroid.fdroid.localrepo.SwapService $r6;
        java.lang.IllegalStateException $r7;
        android.support.v7.widget.Toolbar $r8;
        android.content.res.Resources $r9;
        java.lang.String $r10;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$5 $r11;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $i0 := @parameter0: int;

        $r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.view.ViewGroup container>;

        virtualinvoke $r1.<android.view.ViewGroup: void removeAllViews()>();

        $r2 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r3 = (android.view.LayoutInflater) $r2;

        $r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.view.ViewGroup container>;

        $r4 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r1, 0);

        $r5 = (org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView) $r4;

        r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView currentView> = $r5;

        $r5 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView currentView>;

        $i0 = interfaceinvoke $r5.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView: int getStep()>();

        if $i0 == 9 goto label2;

        $r6 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service>;

        if $r6 != null goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("We are not in the STEP_INITIAL_LOADING state, but the service is not ready.");

        throw $r7;

     label1:
        $r6 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service>;

        $r5 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView currentView>;

        $i0 = interfaceinvoke $r5.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView: int getStep()>();

        virtualinvoke $r6.<org.fdroid.fdroid.localrepo.SwapService: org.fdroid.fdroid.localrepo.SwapService setStep(int)>($i0);

     label2:
        $r8 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.support.v7.widget.Toolbar toolbar>;

        $r9 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.content.res.Resources getResources()>();

        $r5 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView currentView>;

        $i0 = interfaceinvoke $r5.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView: int getToolbarColour()>();

        $i0 = virtualinvoke $r9.<android.content.res.Resources: int getColor(int)>($i0);

        virtualinvoke $r8.<android.support.v7.widget.Toolbar: void setBackgroundColor(int)>($i0);

        $r8 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.support.v7.widget.Toolbar toolbar>;

        $r5 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView currentView>;

        $r10 = interfaceinvoke $r5.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView: java.lang.String getToolbarTitle()>();

        virtualinvoke $r8.<android.support.v7.widget.Toolbar: void setTitle(java.lang.CharSequence)>($r10);

        $r8 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.support.v7.widget.Toolbar toolbar>;

        virtualinvoke $r8.<android.support.v7.widget.Toolbar: void setNavigationIcon(int)>(2130837573);

        $r8 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.support.v7.widget.Toolbar toolbar>;

        $r11 = new org.fdroid.fdroid.views.swap.SwapWorkflowActivity$5;

        specialinvoke $r11.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$5: void <init>(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)>(r0);

        virtualinvoke $r8.<android.support.v7.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)>($r11);

        $r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.view.ViewGroup container>;

        virtualinvoke $r1.<android.view.ViewGroup: void addView(android.view.View)>($r4);

        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void supportInvalidateOptionsMenu()>();

        $r5 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView currentView>;

        return $r5;
    }
    private void onToolbarCancel()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.localrepo.SwapService $r1;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        virtualinvoke $r1.<org.fdroid.fdroid.localrepo.SwapService: void disableAllSwapping()>();

        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void finish()>();

        return;
    }
    private void prepareInitialRepo()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$PrepareInitialSwapRepo $r1;
        java.lang.Void[] $r2;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "Preparing initial repo with only F-Droid, until we have allowed the user to configure their own repo.");

        $r1 = new org.fdroid.fdroid.views.swap.SwapWorkflowActivity$PrepareInitialSwapRepo;

        specialinvoke $r1.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$PrepareInitialSwapRepo: void <init>(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)>(r0);

        $r2 = newarray (java.lang.Void)[0];

        virtualinvoke $r1.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$PrepareInitialSwapRepo: android.os.AsyncTask execute(java.lang.Object[])>($r2);

        return;
    }
    private void promptToSetupWifiAP()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        java.lang.Object $r1;
        android.net.wifi.WifiManager r2;
        cc.mvdan.accesspoint.WifiApControl $r3;
        boolean $z0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: java.lang.Object getSystemService(java.lang.String)>("wifi");

        r2 = (android.net.wifi.WifiManager) $r1;

        $r3 = staticinvoke <cc.mvdan.accesspoint.WifiApControl: cc.mvdan.accesspoint.WifiApControl getInstance(android.content.Context)>(r0);

        virtualinvoke r2.<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>(0);

        $z0 = virtualinvoke $r3.<cc.mvdan.accesspoint.WifiApControl: boolean enable()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "Could not enable WiFi AP.");

        return;

     label1:
        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "WiFi AP enabled.");

        return;
    }
    private void sendFDroidApk()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        android.app.Application $r1;
        org.fdroid.fdroid.FDroidApp $r2;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.app.Application getApplication()>();

        $r2 = (org.fdroid.fdroid.FDroidApp) $r1;

        virtualinvoke $r2.<org.fdroid.fdroid.FDroidApp: void sendViaBluetooth(android.app.Activity,int,java.lang.String)>(r0, -1, "org.fdroid.fdroid");

        return;
    }
    private void showConfirmSwap(org.fdroid.fdroid.data.NewRepoConfig)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.data.NewRepoConfig $r1;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView $r2;
        org.fdroid.fdroid.views.swap.ConfirmReceive $r3;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 := @parameter0: org.fdroid.fdroid.data.NewRepoConfig;

        $r2 = specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView inflateInnerView(int)>(2130903105);

        $r3 = (org.fdroid.fdroid.views.swap.ConfirmReceive) $r2;

        virtualinvoke $r3.<org.fdroid.fdroid.views.swap.ConfirmReceive: void setup(org.fdroid.fdroid.data.NewRepoConfig)>($r1);

        return;
    }
    private void showInitialLoading()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView inflateInnerView(int)>(2130903107);

        return;
    }
    private void showJoinWifi()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView inflateInnerView(int)>(2130903108);

        return;
    }
    private void showNfc()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        boolean $z0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $z0 = specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: boolean attemptToShowNfc()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showWifiQr()>();

     label1:
        return;
    }
    private void showRelevantView()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showRelevantView(boolean)>(0);

        return;
    }
    private void showRelevantView(boolean)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        boolean $z0;
        org.fdroid.fdroid.localrepo.SwapService $r1;
        org.fdroid.fdroid.data.NewRepoConfig $r2;
        android.view.ViewGroup $r3;
        int $i0, $i1;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView $r4;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $z0 := @parameter0: boolean;

        $r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service>;

        if $r1 != null goto label01;

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showInitialLoading()>();

        return;

     label01:
        $r2 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.data.NewRepoConfig confirmSwapConfig>;

        if $r2 == null goto label02;

        $r2 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.data.NewRepoConfig confirmSwapConfig>;

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showConfirmSwap(org.fdroid.fdroid.data.NewRepoConfig)>($r2);

        r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.data.NewRepoConfig confirmSwapConfig> = null;

        return;

     label02:
        if $z0 != 0 goto label03;

        $r3 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.view.ViewGroup container>;

        $i0 = virtualinvoke $r3.<android.view.ViewGroup: int getVisibility()>();

        if $i0 == 8 goto label12;

        $r4 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView currentView>;

        if $r4 == null goto label03;

        $r4 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView currentView>;

        $i0 = interfaceinvoke $r4.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView: int getStep()>();

        $r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service>;

        $i1 = virtualinvoke $r1.<org.fdroid.fdroid.localrepo.SwapService: int getStep()>();

        if $i0 == $i1 goto label12;

     label03:
        $r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service>;

        $i0 = virtualinvoke $r1.<org.fdroid.fdroid.localrepo.SwapService: int getStep()>();

        lookupswitch($i0)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label08;
            case 4: goto label07;
            case 5: goto label09;
            case 6: goto label11;
            case 7: goto label10;
            default: goto label04;
        };

     label04:
        return;

     label05:
        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showIntro()>();

        return;

     label06:
        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showSelectApps()>();

        return;

     label07:
        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showNfc()>();

        return;

     label08:
        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showJoinWifi()>();

        return;

     label09:
        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showWifiQr()>();

        return;

     label10:
        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showSwapConnected()>();

        return;

     label11:
        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView inflateInnerView(int)>(2130903104);

     label12:
        return;
    }
    private void startSwappingWithPeer()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.localrepo.SwapService $r1;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        virtualinvoke $r1.<org.fdroid.fdroid.localrepo.SwapService: void connectToPeer()>();

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView inflateInnerView(int)>(2130903106);

        return;
    }
    public void denySwap()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showIntro()>();

        return;
    }
    public org.fdroid.fdroid.localrepo.SwapService getService()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.localrepo.SwapService $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to access swap service before it was initialized.");

        throw $r2;

     label1:
        $r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service>;

        return $r1;
    }
    public org.fdroid.fdroid.localrepo.SwapService getState()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.localrepo.SwapService r1;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service>;

        return r1;
    }
    public void initiateQrScan()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        com.google.zxing.integration.android.IntentIntegrator r1;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        r1 = new com.google.zxing.integration.android.IntentIntegrator;

        specialinvoke r1.<com.google.zxing.integration.android.IntentIntegrator: void <init>(android.app.Activity)>(r0);

        virtualinvoke r1.<com.google.zxing.integration.android.IntentIntegrator: android.app.AlertDialog initiateScan()>();

        return;
    }
    public void install(org.fdroid.fdroid.data.App)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.data.App $r1;
        org.fdroid.fdroid.net.ApkDownloader r2;
        int $i0;
        org.fdroid.fdroid.data.Apk $r3;
        java.lang.String $r4;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$8 $r5;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 := @parameter0: org.fdroid.fdroid.data.App;

        $r4 = $r1.<org.fdroid.fdroid.data.App: java.lang.String packageName>;

        $i0 = $r1.<org.fdroid.fdroid.data.App: int suggestedVercode>;

        $r3 = staticinvoke <org.fdroid.fdroid.data.ApkProvider$Helper: org.fdroid.fdroid.data.Apk find(android.content.Context,java.lang.String,int)>(r0, $r4, $i0);

        r2 = new org.fdroid.fdroid.net.ApkDownloader;

        $r4 = $r3.<org.fdroid.fdroid.data.Apk: java.lang.String repoAddress>;

        specialinvoke r2.<org.fdroid.fdroid.net.ApkDownloader: void <init>(android.content.Context,org.fdroid.fdroid.data.App,org.fdroid.fdroid.data.Apk,java.lang.String)>(r0, $r1, $r3, $r4);

        $r5 = new org.fdroid.fdroid.views.swap.SwapWorkflowActivity$8;

        specialinvoke $r5.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$8: void <init>(org.fdroid.fdroid.views.swap.SwapWorkflowActivity,org.fdroid.fdroid.net.ApkDownloader,org.fdroid.fdroid.data.App)>(r0, r2, $r1);

        virtualinvoke r2.<org.fdroid.fdroid.net.ApkDownloader: void setProgressListener(org.fdroid.fdroid.ProgressListener)>($r5);

        virtualinvoke r2.<org.fdroid.fdroid.net.ApkDownloader: boolean download()>();

        return;
    }
    public void onActivityResult(int, int, android.content.Intent)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        int $i0, $i1;
        android.content.Intent $r1;
        org.fdroid.fdroid.data.NewRepoConfig r2;
        com.google.zxing.integration.android.IntentResult $r3;
        java.lang.String $r4;
        boolean $z0;
        android.widget.Toast $r5;
        org.fdroid.fdroid.localrepo.SwapService $r6;
        org.fdroid.fdroid.localrepo.type.SwapType $r7;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.content.Intent;

        $r3 = staticinvoke <com.google.zxing.integration.android.IntentIntegrator: com.google.zxing.integration.android.IntentResult parseActivityResult(int,int,android.content.Intent)>($i0, $i1, $r1);

        if $r3 == null goto label2;

        $r4 = virtualinvoke $r3.<com.google.zxing.integration.android.IntentResult: java.lang.String getContents()>();

        if $r4 == null goto label8;

        r2 = new org.fdroid.fdroid.data.NewRepoConfig;

        $r4 = virtualinvoke $r3.<com.google.zxing.integration.android.IntentResult: java.lang.String getContents()>();

        specialinvoke r2.<org.fdroid.fdroid.data.NewRepoConfig: void <init>(android.content.Context,java.lang.String)>(r0, $r4);

        $z0 = virtualinvoke r2.<org.fdroid.fdroid.data.NewRepoConfig: boolean isValidRepo()>();

        if $z0 == 0 goto label1;

        r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.data.NewRepoConfig confirmSwapConfig> = r2;

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showRelevantView()>();

        return;

     label1:
        $r5 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>(r0, 2131165451, 0);

        virtualinvoke $r5.<android.widget.Toast: void show()>();

        return;

     label2:
        if $i0 != 1 goto label3;

        if $i1 != -1 goto label3;

        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void finish()>();

        return;

     label3:
        if $i0 != 2 goto label5;

        if $i1 != -1 goto label4;

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "User enabled Bluetooth, will make sure we are discoverable.");

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void ensureBluetoothDiscoverableThenStart()>();

        return;

     label4:
        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "User chose not to enable Bluetooth, so doing nothing (i.e. sticking with wifi).");

        return;

     label5:
        if $i0 != 3 goto label7;

        if $i1 == 0 goto label6;

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "User made Bluetooth discoverable, will proceed to start bluetooth server.");

        $r6 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getState()>();

        $r7 = virtualinvoke $r6.<org.fdroid.fdroid.localrepo.SwapService: org.fdroid.fdroid.localrepo.type.SwapType getBluetoothSwap()>();

        virtualinvoke $r7.<org.fdroid.fdroid.localrepo.type.SwapType: void startInBackground()>();

        return;

     label6:
        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "User chose not to make Bluetooth discoverable, so doing nothing (i.e. sticking with wifi).");

        return;

     label7:
        if $i0 != 4 goto label8;

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void sendFDroidApk()>();

     label8:
        return;
    }
    public void onAppsSelected()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$PrepareSwapRepo $r1;
        boolean $z0;
        org.fdroid.fdroid.localrepo.SwapService $r2;
        java.util.Set $r3;
        java.lang.Void[] $r4;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$PrepareSwapRepo updateSwappableAppsTask>;

        if $r1 != null goto label1;

        $z0 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: boolean hasPreparedLocalRepo>;

        if $z0 != 0 goto label1;

        $r1 = new org.fdroid.fdroid.views.swap.SwapWorkflowActivity$PrepareSwapRepo;

        $r2 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        $r3 = virtualinvoke $r2.<org.fdroid.fdroid.localrepo.SwapService: java.util.Set getAppsToSwap()>();

        specialinvoke $r1.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$PrepareSwapRepo: void <init>(org.fdroid.fdroid.views.swap.SwapWorkflowActivity,java.util.Set)>(r0, $r3);

        r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$PrepareSwapRepo updateSwappableAppsTask> = $r1;

        $r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$PrepareSwapRepo updateSwappableAppsTask>;

        $r4 = newarray (java.lang.Void)[0];

        virtualinvoke $r1.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$PrepareSwapRepo: android.os.AsyncTask execute(java.lang.Object[])>($r4);

        $r2 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        virtualinvoke $r2.<org.fdroid.fdroid.localrepo.SwapService: org.fdroid.fdroid.localrepo.SwapService setStep(int)>(6);

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView inflateInnerView(int)>(2130903106);

        return;

     label1:
        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void onLocalRepoPrepared()>();

        return;
    }
    public void onBackPressed()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView $r1;
        int $i0;
        org.fdroid.fdroid.localrepo.SwapService $r2;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView currentView>;

        $i0 = interfaceinvoke $r1.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView: int getStep()>();

        if $i0 != 1 goto label2;

        $r2 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service>;

        if $r2 == null goto label1;

        $r2 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService service>;

        virtualinvoke $r2.<org.fdroid.fdroid.localrepo.SwapService: void disableAllSwapping()>();

     label1:
        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void finish()>();

        return;

     label2:
        $r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView currentView>;

        $i0 = interfaceinvoke $r1.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView: int getPreviousStep()>();

        $r2 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        virtualinvoke $r2.<org.fdroid.fdroid.localrepo.SwapService: org.fdroid.fdroid.localrepo.SwapService setStep(int)>($i0);

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showRelevantView()>();

        return;
    }
    protected void onCreate(android.os.Bundle)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        android.os.Bundle $r1;
        android.content.Intent r2;
        android.content.ServiceConnection $r3;
        boolean $z0;
        android.view.View $r4;
        android.support.v7.widget.Toolbar $r5;
        android.content.Context $r6;
        android.view.ViewGroup $r7;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$SwapDebug $r8;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)>($r1);

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lorg/fdroid/fdroid/localrepo/SwapService;");

        $r3 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.content.ServiceConnection serviceConnection>;

        $z0 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r2, $r3, 1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.content.ComponentName startService(android.content.Intent)>(r2);

     label1:
        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void setContentView(int)>(2130903102);

        $r4 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.view.View findViewById(int)>(2131624139);

        $r5 = (android.support.v7.widget.Toolbar) $r4;

        r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.support.v7.widget.Toolbar toolbar> = $r5;

        $r5 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.support.v7.widget.Toolbar toolbar>;

        $r6 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.content.Context getApplicationContext()>();

        virtualinvoke $r5.<android.support.v7.widget.Toolbar: void setTitleTextAppearance(android.content.Context,int)>($r6, 2131296458);

        $r5 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.support.v7.widget.Toolbar toolbar>;

        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void setSupportActionBar(android.support.v7.widget.Toolbar)>($r5);

        $r4 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.view.View findViewById(int)>(2131624140);

        $r7 = (android.view.ViewGroup) $r4;

        r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.view.ViewGroup container> = $r7;

        $r8 = new org.fdroid.fdroid.views.swap.SwapWorkflowActivity$SwapDebug;

        specialinvoke $r8.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$SwapDebug: void <init>(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)>(r0);

        virtualinvoke $r8.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$SwapDebug: void logStatus()>();

        return;
    }
    protected void onDestroy()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        android.content.ServiceConnection $r1;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.content.ServiceConnection serviceConnection>;

        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void unbindService(android.content.ServiceConnection)>($r1);

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onDestroy()>();

        return;
    }
    public void onLocalRepoPrepared()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.localrepo.SwapService $r1;
        boolean $z0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$PrepareSwapRepo updateSwappableAppsTask> = null;

        r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: boolean hasPreparedLocalRepo> = 1;

        $r1 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        $z0 = virtualinvoke $r1.<org.fdroid.fdroid.localrepo.SwapService: boolean isConnectingWithPeer()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void startSwappingWithPeer()>();

        return;

     label1:
        $z0 = specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: boolean attemptToShowNfc()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showWifiQr()>();

     label2:
        return;
    }
    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        android.view.Menu $r1;
        boolean $z0, $z1;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView $r2;
        android.view.MenuInflater $r3;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 := @parameter0: android.view.Menu;

        interfaceinvoke $r1.<android.view.Menu: void clear()>();

        $z0 = specialinvoke r0.<android.support.v7.app.AppCompatActivity: boolean onPrepareOptionsMenu(android.view.Menu)>($r1);

        $r2 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView currentView>;

        if $r2 == null goto label3;

        $r2 = r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView currentView>;

        $r3 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: android.view.MenuInflater getMenuInflater()>();

        $z1 = interfaceinvoke $r2.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView: boolean buildMenu(android.view.Menu,android.view.MenuInflater)>($r1, $r3);

        if $z1 == 0 goto label3;

        $z1 = 1;

     label1:
        if $z0 != 0 goto label2;

        if $z1 == 0 goto label4;

     label2:
        return 1;

     label3:
        $z1 = 0;

        goto label1;

     label4:
        return 0;
    }
    protected void onResume()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onResume()>();

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void checkIncomingIntent()>();

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showRelevantView()>();

        return;
    }
    public void promptToSelectWifiNetwork()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        android.support.v7.app.AlertDialog$Builder $r1;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$4 $r2;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$3 $r3;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$2 $r4;
        android.support.v7.app.AlertDialog $r5;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 = new android.support.v7.app.AlertDialog$Builder;

        specialinvoke $r1.<android.support.v7.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r1 = virtualinvoke $r1.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setTitle(int)>(2131165438);

        $r1 = virtualinvoke $r1.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setMessage(int)>(2131165439);

        $r2 = new org.fdroid.fdroid.views.swap.SwapWorkflowActivity$4;

        specialinvoke $r2.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$4: void <init>(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)>(r0);

        $r1 = virtualinvoke $r1.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>(2131165207, $r2);

        $r3 = new org.fdroid.fdroid.views.swap.SwapWorkflowActivity$3;

        specialinvoke $r3.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$3: void <init>(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)>(r0);

        $r1 = virtualinvoke $r1.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2131165513, $r3);

        $r4 = new org.fdroid.fdroid.views.swap.SwapWorkflowActivity$2;

        specialinvoke $r4.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$2: void <init>(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)>(r0);

        $r1 = virtualinvoke $r1.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131165514, $r4);

        $r5 = virtualinvoke $r1.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog create()>();

        virtualinvoke $r5.<android.support.v7.app.AlertDialog: void show()>();

        return;
    }
    public void sendFDroid()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        android.content.Intent r1;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$7 $r2;
        android.bluetooth.BluetoothAdapter $r3;
        int $i0;
        android.support.v7.app.AlertDialog$Builder $r4;
        android.support.v7.app.AlertDialog $r5;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r3 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        if $r3 == null goto label2;

        $i0 = virtualinvoke $r3.<android.bluetooth.BluetoothAdapter: int getState()>();

        if $i0 == 12 goto label1;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.adapter.action.REQUEST_DISCOVERABLE");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.adapter.extra.DISCOVERABLE_DURATION", 120);

        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void startActivityForResult(android.content.Intent,int)>(r1, 4);

        return;

     label1:
        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void sendFDroidApk()>();

        return;

     label2:
        $r4 = new android.support.v7.app.AlertDialog$Builder;

        specialinvoke $r4.<android.support.v7.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r4 = virtualinvoke $r4.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setTitle(int)>(2131165286);

        $r4 = virtualinvoke $r4.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setMessage(int)>(2131165430);

        $r2 = new org.fdroid.fdroid.views.swap.SwapWorkflowActivity$7;

        specialinvoke $r2.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$7: void <init>(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)>(r0);

        $r4 = virtualinvoke $r4.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131165207, $r2);

        $r5 = virtualinvoke $r4.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog create()>();

        virtualinvoke $r5.<android.support.v7.app.AlertDialog: void show()>();

        return;
    }
    public void showIntro()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.localrepo.SwapService $r1;
        boolean $z0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        virtualinvoke $r1.<org.fdroid.fdroid.localrepo.SwapService: void swapWith(org.fdroid.fdroid.localrepo.peers.Peer)>(null);

        $r1 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        $z0 = virtualinvoke $r1.<org.fdroid.fdroid.localrepo.SwapService: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void prepareInitialRepo()>();

     label1:
        $r1 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        virtualinvoke $r1.<org.fdroid.fdroid.localrepo.SwapService: void scanForPeers()>();

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView inflateInnerView(int)>(2130903104);

        return;
    }
    public void showSelectApps()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView inflateInnerView(int)>(2130903111);

        return;
    }
    public void showSwapConnected()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView inflateInnerView(int)>(2130903112);

        return;
    }
    public void showWifiQr()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.views.swap.SwapWorkflowActivity$InnerView inflateInnerView(int)>(2130903113);

        return;
    }
    public void startBluetoothSwap()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        android.content.Intent r1;
        android.bluetooth.BluetoothAdapter $r2;
        boolean $z0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "Initiating Bluetooth swap, will ensure the Bluetooth devices is enabled and discoverable before starting server.");

        $r2 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<android.bluetooth.BluetoothAdapter: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "Bluetooth enabled, will check if device is discoverable with device.");

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void ensureBluetoothDiscoverableThenStart()>();

        return;

     label1:
        staticinvoke <org.fdroid.fdroid.Utils: void debugLog(java.lang.String,java.lang.String)>("SwapWorkflowActivity", "Bluetooth disabled, asking user to enable it.");

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(java.lang.String)>("android.bluetooth.adapter.action.REQUEST_ENABLE");

        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void startActivityForResult(android.content.Intent,int)>(r1, 2);

     label2:
        return;
    }
    public void startQrWorkflow()
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity$6 $r1;
        org.fdroid.fdroid.localrepo.SwapService $r2;
        boolean $z0;
        android.support.v7.app.AlertDialog$Builder $r3;
        android.support.v7.app.AlertDialog $r4;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r2 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        $z0 = virtualinvoke $r2.<org.fdroid.fdroid.localrepo.SwapService: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        $r3 = new android.support.v7.app.AlertDialog$Builder;

        specialinvoke $r3.<android.support.v7.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r3 = virtualinvoke $r3.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setTitle(int)>(2131165446);

        $r3 = virtualinvoke $r3.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setMessage(int)>(2131165447);

        $r3 = virtualinvoke $r3.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setCancelable(boolean)>(1);

        $r1 = new org.fdroid.fdroid.views.swap.SwapWorkflowActivity$6;

        specialinvoke $r1.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity$6: void <init>(org.fdroid.fdroid.views.swap.SwapWorkflowActivity)>(r0);

        $r3 = virtualinvoke $r3.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(17039370, $r1);

        $r4 = virtualinvoke $r3.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog create()>();

        virtualinvoke $r4.<android.support.v7.app.AlertDialog: void show()>();

        return;

     label1:
        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showSelectApps()>();

        return;
    }
    public void swapWith(org.fdroid.fdroid.data.NewRepoConfig)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.data.NewRepoConfig $r1;
        org.fdroid.fdroid.localrepo.peers.WifiPeer $r2;
        org.fdroid.fdroid.localrepo.SwapService $r3;
        int $i0;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 := @parameter0: org.fdroid.fdroid.data.NewRepoConfig;

        $r2 = virtualinvoke $r1.<org.fdroid.fdroid.data.NewRepoConfig: org.fdroid.fdroid.localrepo.peers.WifiPeer toPeer()>();

        $r3 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        $i0 = virtualinvoke $r3.<org.fdroid.fdroid.localrepo.SwapService: int getStep()>();

        if $i0 == 1 goto label1;

        $r3 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        $i0 = virtualinvoke $r3.<org.fdroid.fdroid.localrepo.SwapService: int getStep()>();

        if $i0 != 8 goto label2;

     label1:
        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void swapWith(org.fdroid.fdroid.localrepo.peers.Peer)>($r2);

        return;

     label2:
        $r3 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        $r2 = virtualinvoke $r1.<org.fdroid.fdroid.data.NewRepoConfig: org.fdroid.fdroid.localrepo.peers.WifiPeer toPeer()>();

        virtualinvoke $r3.<org.fdroid.fdroid.localrepo.SwapService: void swapWith(org.fdroid.fdroid.localrepo.peers.Peer)>($r2);

        specialinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void startSwappingWithPeer()>();

        return;
    }
    public void swapWith(org.fdroid.fdroid.localrepo.peers.Peer)
    {
        org.fdroid.fdroid.views.swap.SwapWorkflowActivity r0;
        org.fdroid.fdroid.localrepo.peers.Peer $r1;
        org.fdroid.fdroid.localrepo.SwapService $r2;

        r0 := @this: org.fdroid.fdroid.views.swap.SwapWorkflowActivity;

        $r1 := @parameter0: org.fdroid.fdroid.localrepo.peers.Peer;

        $r2 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        virtualinvoke $r2.<org.fdroid.fdroid.localrepo.SwapService: void stopScanningForPeers()>();

        $r2 = virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: org.fdroid.fdroid.localrepo.SwapService getService()>();

        virtualinvoke $r2.<org.fdroid.fdroid.localrepo.SwapService: void swapWith(org.fdroid.fdroid.localrepo.peers.Peer)>($r1);

        virtualinvoke r0.<org.fdroid.fdroid.views.swap.SwapWorkflowActivity: void showSelectApps()>();

        return;
    }
