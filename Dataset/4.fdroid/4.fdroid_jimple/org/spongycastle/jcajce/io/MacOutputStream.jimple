org.spongycastle.jcajce.io.MacOutputStream extends java.io.OutputStream
private javax.crypto.Mac mac
    public void <init>(javax.crypto.Mac)
    {
        org.spongycastle.jcajce.io.MacOutputStream r0;
        javax.crypto.Mac $r1;

        r0 := @this: org.spongycastle.jcajce.io.MacOutputStream;

        $r1 := @parameter0: javax.crypto.Mac;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.spongycastle.jcajce.io.MacOutputStream: javax.crypto.Mac mac> = $r1;

        return;
    }
    public byte[] getMac()
    {
        org.spongycastle.jcajce.io.MacOutputStream r0;
        byte[] $r1;
        javax.crypto.Mac $r2;

        r0 := @this: org.spongycastle.jcajce.io.MacOutputStream;

        $r2 = r0.<org.spongycastle.jcajce.io.MacOutputStream: javax.crypto.Mac mac>;

        $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal()>();

        return $r1;
    }
    public void write(int) throws java.io.IOException
    {
        org.spongycastle.jcajce.io.MacOutputStream r0;
        int $i0;
        javax.crypto.Mac $r1;
        byte $b1;

        r0 := @this: org.spongycastle.jcajce.io.MacOutputStream;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.jcajce.io.MacOutputStream: javax.crypto.Mac mac>;

        $b1 = (byte) $i0;

        virtualinvoke $r1.<javax.crypto.Mac: void update(byte)>($b1);

        return;
    }
    public void write(byte[], int, int) throws java.io.IOException
    {
        org.spongycastle.jcajce.io.MacOutputStream r0;
        byte[] $r1;
        int $i0, $i1;
        javax.crypto.Mac $r2;

        r0 := @this: org.spongycastle.jcajce.io.MacOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<org.spongycastle.jcajce.io.MacOutputStream: javax.crypto.Mac mac>;

        virtualinvoke $r2.<javax.crypto.Mac: void update(byte[],int,int)>($r1, $i0, $i1);

        return;
    }
