org.spongycastle.jcajce.io.CipherOutputStream extends java.io.FilterOutputStream
private final javax.crypto.Cipher cipher
private final byte[] oneByte
    public void <init>(java.io.OutputStream, javax.crypto.Cipher)
    {
        org.spongycastle.jcajce.io.CipherOutputStream r0;
        java.io.OutputStream $r1;
        javax.crypto.Cipher $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.jcajce.io.CipherOutputStream;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: javax.crypto.Cipher;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r1);

        $r3 = newarray (byte)[1];

        r0.<org.spongycastle.jcajce.io.CipherOutputStream: byte[] oneByte> = $r3;

        r0.<org.spongycastle.jcajce.io.CipherOutputStream: javax.crypto.Cipher cipher> = $r2;

        return;
    }
    public void close() throws java.io.IOException
    {
        org.spongycastle.jcajce.io.CipherOutputStream r0;
        java.lang.Object r1;
        javax.crypto.Cipher $r2;
        byte[] $r3;
        java.io.OutputStream $r4;
        java.security.GeneralSecurityException r5;
        java.lang.Exception r6;
        java.lang.StringBuilder $r7, $r11;
        java.lang.String $r8;
        java.io.IOException r9;
        org.spongycastle.crypto.io.InvalidCipherTextIOException $r10;
        java.lang.Throwable $r12;

        r0 := @this: org.spongycastle.jcajce.io.CipherOutputStream;

        r1 = null;

     label01:
        $r2 = r0.<org.spongycastle.jcajce.io.CipherOutputStream: javax.crypto.Cipher cipher>;

     label02:
        $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal()>();

     label03:
        if $r3 == null goto label06;

     label04:
        $r4 = r0.<org.spongycastle.jcajce.io.CipherOutputStream: java.io.OutputStream out>;

     label05:
        virtualinvoke $r4.<java.io.OutputStream: void write(byte[])>($r3);

     label06:
        virtualinvoke r0.<org.spongycastle.jcajce.io.CipherOutputStream: void flush()>();

     label07:
        $r4 = r0.<org.spongycastle.jcajce.io.CipherOutputStream: java.io.OutputStream out>;

     label08:
        virtualinvoke $r4.<java.io.OutputStream: void close()>();

     label09:
        if r1 == null goto label13;

        $r12 = (java.lang.Throwable) r1;

        throw $r12;

     label10:
        r5 := @caughtexception;

        $r10 = new org.spongycastle.crypto.io.InvalidCipherTextIOException;

        r1 = $r10;

        specialinvoke $r10.<org.spongycastle.crypto.io.InvalidCipherTextIOException: void <init>(java.lang.String,java.lang.Throwable)>("Error during cipher finalisation", r5);

        goto label06;

     label11:
        r6 := @caughtexception;

        r9 = new java.io.IOException;

        r1 = r9;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error closing stream: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.io.IOException: void <init>(java.lang.String)>($r8);

        goto label06;

     label12:
        r9 := @caughtexception;

        if r1 != null goto label09;

        r1 = r9;

        goto label09;

     label13:
        return;

        catch java.security.GeneralSecurityException from label02 to label03 with label10;
        catch java.security.GeneralSecurityException from label05 to label06 with label10;
        catch java.lang.Exception from label01 to label03 with label11;
        catch java.lang.Exception from label04 to label06 with label11;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.io.IOException from label08 to label09 with label12;
    }
    public void flush() throws java.io.IOException
    {
        org.spongycastle.jcajce.io.CipherOutputStream r0;
        java.io.OutputStream $r1;

        r0 := @this: org.spongycastle.jcajce.io.CipherOutputStream;

        $r1 = r0.<org.spongycastle.jcajce.io.CipherOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }
    public void write(int) throws java.io.IOException
    {
        org.spongycastle.jcajce.io.CipherOutputStream r0;
        int $i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: org.spongycastle.jcajce.io.CipherOutputStream;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.jcajce.io.CipherOutputStream: byte[] oneByte>;

        $b1 = (byte) $i0;

        $r1[0] = $b1;

        $r1 = r0.<org.spongycastle.jcajce.io.CipherOutputStream: byte[] oneByte>;

        virtualinvoke r0.<org.spongycastle.jcajce.io.CipherOutputStream: void write(byte[],int,int)>($r1, 0, 1);

        return;
    }
    public void write(byte[], int, int) throws java.io.IOException
    {
        org.spongycastle.jcajce.io.CipherOutputStream r0;
        byte[] $r1;
        int $i0, $i1;
        javax.crypto.Cipher $r2;
        java.io.OutputStream $r3;

        r0 := @this: org.spongycastle.jcajce.io.CipherOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<org.spongycastle.jcajce.io.CipherOutputStream: javax.crypto.Cipher cipher>;

        $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r1, $i0, $i1);

        if $r1 == null goto label1;

        $r3 = r0.<org.spongycastle.jcajce.io.CipherOutputStream: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r1);

     label1:
        return;
    }
