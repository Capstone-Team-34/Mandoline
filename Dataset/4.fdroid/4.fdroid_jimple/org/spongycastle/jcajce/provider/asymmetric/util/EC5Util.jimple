org.spongycastle.jcajce.provider.asymmetric.util.EC5Util extends java.lang.Object
private static java.util.Map customCurves
    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Enumeration $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.String r3;
        org.spongycastle.asn1.x9.X9ECParameters $r4;
        java.util.Map $r5;
        org.spongycastle.math.ec.ECCurve $r6, $r7;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.util.Map customCurves> = $r0;

        $r1 = staticinvoke <org.spongycastle.crypto.ec.CustomNamedCurves: java.util.Enumeration getNames()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (java.lang.String) $r2;

        $r4 = staticinvoke <org.spongycastle.asn1.x9.ECNamedCurveTable: org.spongycastle.asn1.x9.X9ECParameters getByName(java.lang.String)>(r3);

        if $r4 == null goto label1;

        $r5 = <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.util.Map customCurves>;

        $r6 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r4 = staticinvoke <org.spongycastle.crypto.ec.CustomNamedCurves: org.spongycastle.asn1.x9.X9ECParameters getByName(java.lang.String)>(r3);

        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return;
    }
    public void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.util.EC5Util r0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.util.EC5Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve, byte[])
    {
        org.spongycastle.math.ec.ECCurve $r0;
        byte[] $r1;
        org.spongycastle.math.field.FiniteField $r2;
        java.security.spec.ECField $r3;
        org.spongycastle.math.ec.ECFieldElement $r4;
        java.math.BigInteger $r5, $r6;
        java.security.spec.EllipticCurve $r7;

        $r0 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r1 := @parameter1: byte[];

        $r2 = virtualinvoke $r0.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.field.FiniteField getField()>();

        $r3 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECField convertField(org.spongycastle.math.field.FiniteField)>($r2);

        $r4 = virtualinvoke $r0.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r4 = virtualinvoke $r0.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getB()>();

        $r6 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r7 = new java.security.spec.EllipticCurve;

        specialinvoke $r7.<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>($r3, $r5, $r6, null);

        return $r7;
    }
    public static org.spongycastle.math.ec.ECCurve convertCurve(java.security.spec.EllipticCurve)
    {
        java.security.spec.EllipticCurve $r0;
        org.spongycastle.math.ec.ECCurve$Fp r1;
        java.security.spec.ECField $r2;
        java.math.BigInteger $r3, $r4, $r6;
        boolean $z0;
        java.security.spec.ECFieldFp r5;
        java.util.Map $r7;
        java.lang.Object $r8;
        org.spongycastle.math.ec.ECCurve $r9;
        java.security.spec.ECFieldF2m r10;
        int $i0, $i1, $i2, $i3;
        int[] $r11;
        org.spongycastle.math.ec.ECCurve$F2m $r12;

        $r0 := @parameter0: java.security.spec.EllipticCurve;

        $r2 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.security.spec.ECField getField()>();

        $r3 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.math.BigInteger getA()>();

        $r4 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.math.BigInteger getB()>();

        $z0 = $r2 instanceof java.security.spec.ECFieldFp;

        if $z0 == 0 goto label2;

        r1 = new org.spongycastle.math.ec.ECCurve$Fp;

        r5 = (java.security.spec.ECFieldFp) $r2;

        $r6 = virtualinvoke r5.<java.security.spec.ECFieldFp: java.math.BigInteger getP()>();

        specialinvoke r1.<org.spongycastle.math.ec.ECCurve$Fp: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r6, $r3, $r4);

        $r7 = <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.util.Map customCurves>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.util.Map customCurves>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r9 = (org.spongycastle.math.ec.ECCurve) $r8;

        return $r9;

     label1:
        return r1;

     label2:
        r10 = (java.security.spec.ECFieldF2m) $r2;

        $i0 = virtualinvoke r10.<java.security.spec.ECFieldF2m: int getM()>();

        $r11 = virtualinvoke r10.<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>();

        $r11 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.ECUtil: int[] convertMidTerms(int[])>($r11);

        $r12 = new org.spongycastle.math.ec.ECCurve$F2m;

        $i1 = $r11[0];

        $i2 = $r11[1];

        $i3 = $r11[2];

        specialinvoke $r12.<org.spongycastle.math.ec.ECCurve$F2m: void <init>(int,int,int,int,java.math.BigInteger,java.math.BigInteger)>($i0, $i1, $i2, $i3, $r3, $r4);

        return $r12;
    }
    public static java.security.spec.ECField convertField(org.spongycastle.math.field.FiniteField)
    {
        org.spongycastle.math.field.FiniteField r0;
        boolean $z0;
        java.security.spec.ECFieldFp $r1;
        java.math.BigInteger $r2;
        org.spongycastle.math.field.PolynomialExtensionField r3;
        org.spongycastle.math.field.Polynomial $r4;
        int[] $r5;
        int $i0;
        java.security.spec.ECFieldF2m $r6;

        r0 := @parameter0: org.spongycastle.math.field.FiniteField;

        $z0 = staticinvoke <org.spongycastle.math.ec.ECAlgorithms: boolean isFpField(org.spongycastle.math.field.FiniteField)>(r0);

        if $z0 == 0 goto label1;

        $r1 = new java.security.spec.ECFieldFp;

        $r2 = interfaceinvoke r0.<org.spongycastle.math.field.FiniteField: java.math.BigInteger getCharacteristic()>();

        specialinvoke $r1.<java.security.spec.ECFieldFp: void <init>(java.math.BigInteger)>($r2);

        return $r1;

     label1:
        r3 = (org.spongycastle.math.field.PolynomialExtensionField) r0;

        $r4 = interfaceinvoke r3.<org.spongycastle.math.field.PolynomialExtensionField: org.spongycastle.math.field.Polynomial getMinimalPolynomial()>();

        $r5 = interfaceinvoke $r4.<org.spongycastle.math.field.Polynomial: int[] getExponentsPresent()>();

        $i0 = lengthof $r5;

        $i0 = $i0 + -1;

        $r5 = staticinvoke <org.spongycastle.util.Arrays: int[] copyOfRange(int[],int,int)>($r5, 1, $i0);

        $r5 = staticinvoke <org.spongycastle.util.Arrays: int[] reverse(int[])>($r5);

        $r6 = new java.security.spec.ECFieldF2m;

        $i0 = interfaceinvoke $r4.<org.spongycastle.math.field.Polynomial: int getDegree()>();

        specialinvoke $r6.<java.security.spec.ECFieldF2m: void <init>(int,int[])>($i0, $r5);

        return $r6;
    }
    public static org.spongycastle.math.ec.ECPoint convertPoint(java.security.spec.ECParameterSpec, java.security.spec.ECPoint, boolean)
    {
        java.security.spec.ECParameterSpec $r0;
        java.security.spec.ECPoint $r1;
        boolean $z0;
        java.security.spec.EllipticCurve $r2;
        org.spongycastle.math.ec.ECCurve $r3;
        org.spongycastle.math.ec.ECPoint $r4;

        $r0 := @parameter0: java.security.spec.ECParameterSpec;

        $r1 := @parameter1: java.security.spec.ECPoint;

        $z0 := @parameter2: boolean;

        $r2 = virtualinvoke $r0.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r3 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.math.ec.ECCurve convertCurve(java.security.spec.EllipticCurve)>($r2);

        $r4 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.math.ec.ECPoint convertPoint(org.spongycastle.math.ec.ECCurve,java.security.spec.ECPoint,boolean)>($r3, $r1, $z0);

        return $r4;
    }
    public static org.spongycastle.math.ec.ECPoint convertPoint(org.spongycastle.math.ec.ECCurve, java.security.spec.ECPoint, boolean)
    {
        org.spongycastle.math.ec.ECCurve $r0;
        java.security.spec.ECPoint $r1;
        boolean $z0;
        java.math.BigInteger $r2, $r3;
        org.spongycastle.math.ec.ECPoint $r4;

        $r0 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r1 := @parameter1: java.security.spec.ECPoint;

        $z0 := @parameter2: boolean;

        $r2 = virtualinvoke $r1.<java.security.spec.ECPoint: java.math.BigInteger getAffineX()>();

        $r3 = virtualinvoke $r1.<java.security.spec.ECPoint: java.math.BigInteger getAffineY()>();

        $r4 = virtualinvoke $r0.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint createPoint(java.math.BigInteger,java.math.BigInteger)>($r2, $r3);

        return $r4;
    }
    public static java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve, org.spongycastle.jce.spec.ECParameterSpec)
    {
        java.security.spec.EllipticCurve $r0;
        org.spongycastle.jce.spec.ECParameterSpec $r1;
        boolean $z0;
        org.spongycastle.jce.spec.ECNamedCurveSpec $r2;
        org.spongycastle.jce.spec.ECNamedCurveParameterSpec $r3;
        java.lang.String $r4;
        java.security.spec.ECPoint $r5;
        org.spongycastle.math.ec.ECPoint $r6;
        org.spongycastle.math.ec.ECFieldElement $r7;
        java.math.BigInteger $r8, $r9;
        java.security.spec.ECParameterSpec $r10;
        int $i0;

        $r0 := @parameter0: java.security.spec.EllipticCurve;

        $r1 := @parameter1: org.spongycastle.jce.spec.ECParameterSpec;

        $z0 = $r1 instanceof org.spongycastle.jce.spec.ECNamedCurveParameterSpec;

        if $z0 == 0 goto label1;

        $r2 = new org.spongycastle.jce.spec.ECNamedCurveSpec;

        $r3 = (org.spongycastle.jce.spec.ECNamedCurveParameterSpec) $r1;

        $r4 = virtualinvoke $r3.<org.spongycastle.jce.spec.ECNamedCurveParameterSpec: java.lang.String getName()>();

        $r5 = new java.security.spec.ECPoint;

        $r6 = virtualinvoke $r1.<org.spongycastle.jce.spec.ECParameterSpec: org.spongycastle.math.ec.ECPoint getG()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r8 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r6 = virtualinvoke $r1.<org.spongycastle.jce.spec.ECParameterSpec: org.spongycastle.math.ec.ECPoint getG()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r9 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r5.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r8, $r9);

        $r8 = virtualinvoke $r1.<org.spongycastle.jce.spec.ECParameterSpec: java.math.BigInteger getN()>();

        $r9 = virtualinvoke $r1.<org.spongycastle.jce.spec.ECParameterSpec: java.math.BigInteger getH()>();

        specialinvoke $r2.<org.spongycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>($r4, $r0, $r5, $r8, $r9);

        return $r2;

     label1:
        $r10 = new java.security.spec.ECParameterSpec;

        $r5 = new java.security.spec.ECPoint;

        $r6 = virtualinvoke $r1.<org.spongycastle.jce.spec.ECParameterSpec: org.spongycastle.math.ec.ECPoint getG()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r8 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r6 = virtualinvoke $r1.<org.spongycastle.jce.spec.ECParameterSpec: org.spongycastle.math.ec.ECPoint getG()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r9 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r5.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r8, $r9);

        $r8 = virtualinvoke $r1.<org.spongycastle.jce.spec.ECParameterSpec: java.math.BigInteger getN()>();

        $r9 = virtualinvoke $r1.<org.spongycastle.jce.spec.ECParameterSpec: java.math.BigInteger getH()>();

        $i0 = virtualinvoke $r9.<java.math.BigInteger: int intValue()>();

        specialinvoke $r10.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r0, $r5, $r8, $i0);

        return $r10;
    }
    public static org.spongycastle.jce.spec.ECParameterSpec convertSpec(java.security.spec.ECParameterSpec, boolean)
    {
        java.security.spec.ECParameterSpec $r0;
        boolean $z0;
        java.security.spec.EllipticCurve $r1;
        org.spongycastle.math.ec.ECCurve $r2;
        org.spongycastle.jce.spec.ECParameterSpec $r3;
        java.security.spec.ECPoint $r4;
        org.spongycastle.math.ec.ECPoint $r5;
        java.math.BigInteger $r6, $r7;
        int $i0;
        long $l1;
        byte[] $r8;

        $r0 := @parameter0: java.security.spec.ECParameterSpec;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r2 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.math.ec.ECCurve convertCurve(java.security.spec.EllipticCurve)>($r1);

        $r3 = new org.spongycastle.jce.spec.ECParameterSpec;

        $r4 = virtualinvoke $r0.<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()>();

        $r5 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.math.ec.ECPoint convertPoint(org.spongycastle.math.ec.ECCurve,java.security.spec.ECPoint,boolean)>($r2, $r4, $z0);

        $r6 = virtualinvoke $r0.<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()>();

        $i0 = virtualinvoke $r0.<java.security.spec.ECParameterSpec: int getCofactor()>();

        $l1 = (long) $i0;

        $r7 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        $r1 = virtualinvoke $r0.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r8 = virtualinvoke $r1.<java.security.spec.EllipticCurve: byte[] getSeed()>();

        specialinvoke $r3.<org.spongycastle.jce.spec.ECParameterSpec: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r2, $r5, $r6, $r7, $r8);

        return $r3;
    }
    public static java.security.spec.ECParameterSpec convertToSpec(org.spongycastle.asn1.x9.X962Parameters, org.spongycastle.math.ec.ECCurve)
    {
        org.spongycastle.asn1.x9.X962Parameters $r0;
        org.spongycastle.math.ec.ECCurve $r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier r3;
        org.spongycastle.asn1.x9.X9ECParameters $r4;
        byte[] $r5;
        java.security.spec.EllipticCurve $r6;
        org.spongycastle.jce.spec.ECNamedCurveSpec r7;
        java.lang.String $r8;
        java.security.spec.ECPoint $r9;
        org.spongycastle.math.ec.ECPoint $r10;
        org.spongycastle.math.ec.ECFieldElement $r11;
        java.math.BigInteger $r12, $r13;
        java.security.spec.ECParameterSpec r14;
        int $i0;

        $r0 := @parameter0: org.spongycastle.asn1.x9.X962Parameters;

        $r1 := @parameter1: org.spongycastle.math.ec.ECCurve;

        $z0 = virtualinvoke $r0.<org.spongycastle.asn1.x9.X962Parameters: boolean isNamedCurve()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.x9.X962Parameters: org.spongycastle.asn1.ASN1Primitive getParameters()>();

        r3 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r2;

        $r4 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.ECUtil: org.spongycastle.asn1.x9.X9ECParameters getNamedCurveByOid(org.spongycastle.asn1.ASN1ObjectIdentifier)>(r3);

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: byte[] getSeed()>();

        $r6 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r1, $r5);

        r7 = new org.spongycastle.jce.spec.ECNamedCurveSpec;

        $r8 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.ECUtil: java.lang.String getCurveName(org.spongycastle.asn1.ASN1ObjectIdentifier)>(r3);

        $r9 = new java.security.spec.ECPoint;

        $r10 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r11 = virtualinvoke $r10.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r12 = virtualinvoke $r11.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r10 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r11 = virtualinvoke $r10.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r13 = virtualinvoke $r11.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r9.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r12, $r13);

        $r12 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r13 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        specialinvoke r7.<org.spongycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>($r8, $r6, $r9, $r12, $r13);

        return r7;

     label1:
        $z0 = virtualinvoke $r0.<org.spongycastle.asn1.x9.X962Parameters: boolean isImplicitlyCA()>();

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.x9.X962Parameters: org.spongycastle.asn1.ASN1Primitive getParameters()>();

        $r4 = staticinvoke <org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9ECParameters getInstance(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: byte[] getSeed()>();

        $r6 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r1, $r5);

        $r12 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        if $r12 == null goto label3;

        r14 = new java.security.spec.ECParameterSpec;

        $r9 = new java.security.spec.ECPoint;

        $r10 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r11 = virtualinvoke $r10.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r12 = virtualinvoke $r11.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r10 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r11 = virtualinvoke $r10.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r13 = virtualinvoke $r11.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r9.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r12, $r13);

        $r12 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r13 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        $i0 = virtualinvoke $r13.<java.math.BigInteger: int intValue()>();

        specialinvoke r14.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r6, $r9, $r12, $i0);

        return r14;

     label3:
        r14 = new java.security.spec.ECParameterSpec;

        $r9 = new java.security.spec.ECPoint;

        $r10 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r11 = virtualinvoke $r10.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r12 = virtualinvoke $r11.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r10 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r11 = virtualinvoke $r10.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r13 = virtualinvoke $r11.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r9.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r12, $r13);

        $r12 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        specialinvoke r14.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r6, $r9, $r12, 1);

        return r14;
    }
    public static java.security.spec.ECParameterSpec convertToSpec(org.spongycastle.asn1.x9.X9ECParameters)
    {
        org.spongycastle.asn1.x9.X9ECParameters $r0;
        java.security.spec.ECParameterSpec $r1;
        org.spongycastle.math.ec.ECCurve $r2;
        java.security.spec.EllipticCurve $r3;
        java.security.spec.ECPoint $r4;
        org.spongycastle.math.ec.ECPoint $r5;
        org.spongycastle.math.ec.ECFieldElement $r6;
        java.math.BigInteger $r7, $r8;
        int $i0;

        $r0 := @parameter0: org.spongycastle.asn1.x9.X9ECParameters;

        $r1 = new java.security.spec.ECParameterSpec;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r3 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r2, null);

        $r4 = new java.security.spec.ECPoint;

        $r5 = virtualinvoke $r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r5 = virtualinvoke $r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r8 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r4.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r7, $r8);

        $r7 = virtualinvoke $r0.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r8 = virtualinvoke $r0.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        $i0 = virtualinvoke $r8.<java.math.BigInteger: int intValue()>();

        specialinvoke $r1.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r3, $r4, $r7, $i0);

        return $r1;
    }
    public static org.spongycastle.math.ec.ECCurve getCurve(org.spongycastle.jcajce.provider.config.ProviderConfiguration, org.spongycastle.asn1.x9.X962Parameters)
    {
        org.spongycastle.jcajce.provider.config.ProviderConfiguration $r0;
        org.spongycastle.asn1.x9.X962Parameters $r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        org.spongycastle.asn1.x9.X9ECParameters $r4;
        org.spongycastle.math.ec.ECCurve $r5;
        org.spongycastle.jce.spec.ECParameterSpec $r6;

        $r0 := @parameter0: org.spongycastle.jcajce.provider.config.ProviderConfiguration;

        $r1 := @parameter1: org.spongycastle.asn1.x9.X962Parameters;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.x9.X962Parameters: boolean isNamedCurve()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x9.X962Parameters: org.spongycastle.asn1.ASN1Primitive getParameters()>();

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>($r2);

        $r4 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.ECUtil: org.spongycastle.asn1.x9.X9ECParameters getNamedCurveByOid(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r3);

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        return $r5;

     label1:
        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.x9.X962Parameters: boolean isImplicitlyCA()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r0.<org.spongycastle.jcajce.provider.config.ProviderConfiguration: org.spongycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        $r5 = virtualinvoke $r6.<org.spongycastle.jce.spec.ECParameterSpec: org.spongycastle.math.ec.ECCurve getCurve()>();

        return $r5;

     label2:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x9.X962Parameters: org.spongycastle.asn1.ASN1Primitive getParameters()>();

        $r4 = staticinvoke <org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9ECParameters getInstance(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        return $r5;
    }
