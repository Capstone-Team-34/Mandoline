org.spongycastle.jcajce.provider.asymmetric.DSA$Mappings extends org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider
    public void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.DSA$Mappings r0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.DSA$Mappings;

        specialinvoke r0.<org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider: void <init>()>();

        return;
    }
    public void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider)
    {
        org.spongycastle.jcajce.provider.asymmetric.DSA$Mappings r0;
        org.spongycastle.jcajce.provider.config.ConfigurableProvider $r1;
        org.spongycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        int i0, $i1;
        org.spongycastle.asn1.ASN1ObjectIdentifier[] $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.DSA$Mappings;

        $r1 := @parameter0: org.spongycastle.jcajce.provider.config.ConfigurableProvider;

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("AlgorithmParameters.DSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("AlgorithmParameterGenerator.DSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.AlgorithmParameterGeneratorSpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("KeyPairGenerator.DSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("KeyFactory.DSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Signature.DSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$stdDSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Signature.NONEWITHDSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$noneDSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Signature.RAWDSA", "NONEWITHDSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Signature.DETDSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Signature.SHA1WITHDETDSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Signature.SHA224WITHDETDSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA224");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Signature.SHA256WITHDETDSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA256");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Signature.SHA384WITHDETDSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA384");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Signature.SHA512WITHDETDSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA512");

        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dsa_with_sha224>;

        virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.DSA$Mappings: void addSignatureAlgorithm(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1, "SHA224", "DSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa224", $r3);

        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dsa_with_sha256>;

        virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.DSA$Mappings: void addSignatureAlgorithm(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1, "SHA256", "DSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa256", $r3);

        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dsa_with_sha384>;

        virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.DSA$Mappings: void addSignatureAlgorithm(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1, "SHA384", "DSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa384", $r3);

        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dsa_with_sha512>;

        virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.DSA$Mappings: void addSignatureAlgorithm(org.spongycastle.jcajce.provider.config.ConfigurableProvider,java.lang.String,java.lang.String,java.lang.String,org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1, "SHA512", "DSA", "org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$dsa512", $r3);

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Signature.SHA/DSA", "DSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Signature.SHA1withDSA", "DSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Signature.SHA1WITHDSA", "DSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Signature.1.3.14.3.2.26with1.2.840.10040.4.1", "DSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Signature.1.3.14.3.2.26with1.2.840.10040.4.3", "DSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Signature.DSAwithSHA1", "DSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Signature.DSAWITHSHA1", "DSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Signature.SHA1WithDSA", "DSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Signature.DSAWithSHA1", "DSA");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Signature.1.2.840.10040.4.3", "DSA");

        r2 = new org.spongycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi;

        specialinvoke r2.<org.spongycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi: void <init>()>();

        i0 = 0;

     label1:
        $r4 = <org.spongycastle.jcajce.provider.asymmetric.dsa.DSAUtil: org.spongycastle.asn1.ASN1ObjectIdentifier[] dsaOids>;

        $i1 = lengthof $r4;

        if i0 == $i1 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alg.Alias.Signature.");

        $r4 = <org.spongycastle.jcajce.provider.asymmetric.dsa.DSAUtil: org.spongycastle.asn1.ASN1ObjectIdentifier[] dsaOids>;

        $r3 = $r4[i0];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>($r6, "DSA");

        $r4 = <org.spongycastle.jcajce.provider.asymmetric.dsa.DSAUtil: org.spongycastle.asn1.ASN1ObjectIdentifier[] dsaOids>;

        $r3 = $r4[i0];

        virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.DSA$Mappings: void registerOid(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String,org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter)>($r1, $r3, "DSA", r2);

        $r4 = <org.spongycastle.jcajce.provider.asymmetric.dsa.DSAUtil: org.spongycastle.asn1.ASN1ObjectIdentifier[] dsaOids>;

        $r3 = $r4[i0];

        virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.DSA$Mappings: void registerOidAlgorithmParameters(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>($r1, $r3, "DSA");

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
