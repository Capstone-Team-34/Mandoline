org.spongycastle.jcajce.provider.asymmetric.DH$Mappings extends org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider
    public void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.DH$Mappings r0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.DH$Mappings;

        specialinvoke r0.<org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider: void <init>()>();

        return;
    }
    public void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider)
    {
        org.spongycastle.jcajce.provider.asymmetric.DH$Mappings r0;
        org.spongycastle.jcajce.provider.config.ConfigurableProvider $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi $r3;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.DH$Mappings;

        $r1 := @parameter0: org.spongycastle.jcajce.provider.config.ConfigurableProvider;

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("KeyPairGenerator.DH", "org.spongycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.KeyPairGenerator.DIFFIEHELLMAN", "DH");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("KeyAgreement.DH", "org.spongycastle.jcajce.provider.asymmetric.dh.KeyAgreementSpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.KeyAgreement.DIFFIEHELLMAN", "DH");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("KeyFactory.DH", "org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.KeyFactory.DIFFIEHELLMAN", "DH");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("AlgorithmParameters.DH", "org.spongycastle.jcajce.provider.asymmetric.dh.AlgorithmParametersSpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.AlgorithmParameters.DIFFIEHELLMAN", "DH");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.AlgorithmParameterGenerator.DIFFIEHELLMAN", "DH");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("AlgorithmParameterGenerator.DH", "org.spongycastle.jcajce.provider.asymmetric.dh.AlgorithmParameterGeneratorSpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Cipher.DHIES", "org.spongycastle.jcajce.provider.asymmetric.dh.IESCipher$IES");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Cipher.DHIESwithAES", "org.spongycastle.jcajce.provider.asymmetric.dh.IESCipher$IESwithAES");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Cipher.DHIESWITHAES", "org.spongycastle.jcajce.provider.asymmetric.dh.IESCipher$IESwithAES");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Cipher.DHIESWITHDESEDE", "org.spongycastle.jcajce.provider.asymmetric.dh.IESCipher$IESwithDESede");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Cipher.OLDDHIES", "org.spongycastle.jcajce.provider.asymmetric.dh.IESCipher$OldIES");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Cipher.OLDDHIESwithAES", "org.spongycastle.jcajce.provider.asymmetric.dh.IESCipher$OldIESwithAES");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Cipher.OLDDHIESWITHAES", "org.spongycastle.jcajce.provider.asymmetric.dh.IESCipher$OldIESwithAES");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Cipher.OLDDHIESWITHDESEDE", "org.spongycastle.jcajce.provider.asymmetric.dh.IESCipher$OldIESwithDESede");

        $r2 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dhKeyAgreement>;

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi;

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi: void <init>()>();

        virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.DH$Mappings: void registerOid(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String,org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter)>($r1, $r2, "DH", $r3);

        $r2 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dhpublicnumber>;

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi;

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi: void <init>()>();

        virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.DH$Mappings: void registerOid(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String,org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter)>($r1, $r2, "DH", $r3);

        return;
    }
