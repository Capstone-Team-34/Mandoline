org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA384 extends org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner
    public void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA384 r0;
        org.spongycastle.crypto.digests.SHA384Digest $r1, $r4;
        org.spongycastle.crypto.signers.DSASigner $r2;
        org.spongycastle.crypto.signers.HMacDSAKCalculator $r3;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner$detDSA384;

        $r1 = new org.spongycastle.crypto.digests.SHA384Digest;

        specialinvoke $r1.<org.spongycastle.crypto.digests.SHA384Digest: void <init>()>();

        $r2 = new org.spongycastle.crypto.signers.DSASigner;

        $r3 = new org.spongycastle.crypto.signers.HMacDSAKCalculator;

        $r4 = new org.spongycastle.crypto.digests.SHA384Digest;

        specialinvoke $r4.<org.spongycastle.crypto.digests.SHA384Digest: void <init>()>();

        specialinvoke $r3.<org.spongycastle.crypto.signers.HMacDSAKCalculator: void <init>(org.spongycastle.crypto.Digest)>($r4);

        specialinvoke $r2.<org.spongycastle.crypto.signers.DSASigner: void <init>(org.spongycastle.crypto.signers.DSAKCalculator)>($r3);

        specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.dsa.DSASigner: void <init>(org.spongycastle.crypto.Digest,org.spongycastle.crypto.DSA)>($r1, $r2);

        return;
    }
