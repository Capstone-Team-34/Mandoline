org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath extends java.security.cert.CertPath
static final java.util.List certPathEncodings
private java.util.List certificates
private final org.spongycastle.jcajce.util.JcaJceHelper helper
    static void <clinit>()
    {
        java.util.ArrayList r0;
        java.util.List $r1;

        r0 = new java.util.ArrayList;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>("PkiPath");

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>("PEM");

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>("PKCS7");

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r0);

        <org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certPathEncodings> = $r1;

        return;
    }
    void <init>(java.io.InputStream, java.lang.String) throws java.security.cert.CertificateException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.lang.String $r1;
        org.spongycastle.asn1.ASN1InputStream r2;
        java.io.BufferedInputStream r3;
        java.io.InputStream r4;
        org.spongycastle.jcajce.util.BCJcaJceHelper $r5;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive $r6;
        java.security.cert.CertificateException $r7;
        java.io.IOException r8;
        java.lang.StringBuilder $r9;
        org.spongycastle.asn1.ASN1Sequence r10;
        java.util.Enumeration $r11;
        java.util.ArrayList $r12;
        org.spongycastle.jcajce.util.JcaJceHelper $r13;
        java.security.cert.CertificateFactory $r14;
        java.lang.Object $r15;
        org.spongycastle.asn1.ASN1Encodable r16;
        byte[] $r17;
        java.util.List $r18;
        java.io.ByteArrayInputStream $r19;
        java.security.cert.Certificate $r20;
        java.security.NoSuchProviderException r21;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        r4 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.security.cert.CertPath: void <init>(java.lang.String)>("X.509");

        $r5 = new org.spongycastle.jcajce.util.BCJcaJceHelper;

        specialinvoke $r5.<org.spongycastle.jcajce.util.BCJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r5;

     label01:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PkiPath");

     label02:
        if $z0 == 0 goto label25;

        r2 = new org.spongycastle.asn1.ASN1InputStream;

     label03:
        specialinvoke r2.<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>(r4);

        $r6 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

     label04:
        $z0 = $r6 instanceof org.spongycastle.asn1.ASN1Sequence;

        if $z0 != 0 goto label09;

        $r7 = new java.security.cert.CertificateException;

     label05:
        specialinvoke $r7.<java.security.cert.CertificateException: void <init>(java.lang.String)>("input stream does not contain a ASN1 SEQUENCE while reading PkiPath encoded data to load CertPath");

     label06:
        throw $r7;

     label07:
        r8 := @caughtexception;

     label08:
        $r7 = new java.security.cert.CertificateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException throw while decoding CertPath:\n");

        $r1 = virtualinvoke r8.<java.io.IOException: java.lang.String toString()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label09:
        r10 = (org.spongycastle.asn1.ASN1Sequence) $r6;

     label10:
        $r11 = virtualinvoke r10.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label11:
        $r12 = new java.util.ArrayList;

     label12:
        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

     label13:
        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates> = $r12;

        $r13 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label14:
        $r14 = interfaceinvoke $r13.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.cert.CertificateFactory createCertificateFactory(java.lang.String)>("X.509");

     label15:
        $z0 = interfaceinvoke $r11.<java.util.Enumeration: boolean hasMoreElements()>();

     label16:
        if $z0 == 0 goto label40;

     label17:
        $r15 = interfaceinvoke $r11.<java.util.Enumeration: java.lang.Object nextElement()>();

     label18:
        r16 = (org.spongycastle.asn1.ASN1Encodable) $r15;

     label19:
        $r6 = interfaceinvoke r16.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r17 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded(java.lang.String)>("DER");

     label20:
        $r18 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $r19 = new java.io.ByteArrayInputStream;

     label21:
        specialinvoke $r19.<java.io.ByteArrayInputStream: void <init>(byte[])>($r17);

        $r20 = virtualinvoke $r14.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r19);

        interfaceinvoke $r18.<java.util.List: void add(int,java.lang.Object)>(0, $r20);

     label22:
        goto label15;

     label23:
        r21 := @caughtexception;

     label24:
        $r7 = new java.security.cert.CertificateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BouncyCastle provider not found while trying to get a CertificateFactory:\n");

        $r1 = virtualinvoke r21.<java.security.NoSuchProviderException: java.lang.String toString()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label25:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PKCS7");

     label26:
        if $z0 != 0 goto label29;

     label27:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PEM");

     label28:
        if $z0 == 0 goto label41;

     label29:
        r3 = new java.io.BufferedInputStream;

     label30:
        specialinvoke r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r4);

     label31:
        $r12 = new java.util.ArrayList;

     label32:
        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

     label33:
        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates> = $r12;

        $r13 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label34:
        $r14 = interfaceinvoke $r13.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.cert.CertificateFactory createCertificateFactory(java.lang.String)>("X.509");

     label35:
        $r20 = virtualinvoke $r14.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>(r3);

     label36:
        if $r20 == null goto label40;

        $r18 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

     label37:
        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r20);

     label38:
        goto label35;

     label39:
        r8 := @caughtexception;

        goto label08;

     label40:
        $r18 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $r18 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List sortCerts(java.util.List)>($r18);

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates> = $r18;

        return;

     label41:
        $r7 = new java.security.cert.CertificateException;

        $r9 = new java.lang.StringBuilder;

     label42:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported encoding: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r1);

     label43:
        throw $r7;

     label44:
        r21 := @caughtexception;

        goto label24;

        catch java.io.IOException from label01 to label02 with label07;
        catch java.io.IOException from label03 to label04 with label07;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.security.NoSuchProviderException from label01 to label02 with label23;
        catch java.security.NoSuchProviderException from label03 to label04 with label23;
        catch java.security.NoSuchProviderException from label05 to label06 with label23;
        catch java.io.IOException from label10 to label11 with label07;
        catch java.io.IOException from label12 to label13 with label07;
        catch java.io.IOException from label14 to label16 with label07;
        catch java.io.IOException from label17 to label18 with label07;
        catch java.io.IOException from label19 to label20 with label07;
        catch java.io.IOException from label21 to label22 with label07;
        catch java.security.NoSuchProviderException from label10 to label11 with label23;
        catch java.security.NoSuchProviderException from label12 to label13 with label23;
        catch java.security.NoSuchProviderException from label14 to label16 with label23;
        catch java.security.NoSuchProviderException from label17 to label18 with label23;
        catch java.security.NoSuchProviderException from label19 to label20 with label23;
        catch java.security.NoSuchProviderException from label21 to label22 with label23;
        catch java.io.IOException from label25 to label26 with label07;
        catch java.io.IOException from label27 to label28 with label07;
        catch java.io.IOException from label30 to label31 with label07;
        catch java.security.NoSuchProviderException from label25 to label26 with label23;
        catch java.security.NoSuchProviderException from label27 to label28 with label23;
        catch java.security.NoSuchProviderException from label30 to label31 with label23;
        catch java.io.IOException from label32 to label33 with label39;
        catch java.io.IOException from label34 to label36 with label39;
        catch java.io.IOException from label37 to label38 with label39;
        catch java.security.NoSuchProviderException from label32 to label33 with label44;
        catch java.security.NoSuchProviderException from label34 to label36 with label44;
        catch java.security.NoSuchProviderException from label37 to label38 with label44;
        catch java.io.IOException from label42 to label43 with label07;
        catch java.security.NoSuchProviderException from label42 to label43 with label23;
    }
    void <init>(java.util.List)
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.util.List $r1;
        org.spongycastle.jcajce.util.BCJcaJceHelper $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        $r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.security.cert.CertPath: void <init>(java.lang.String)>("X.509");

        $r2 = new org.spongycastle.jcajce.util.BCJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.BCJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        $r1 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List sortCerts(java.util.List)>($r3);

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates> = $r1;

        return;
    }
    private java.util.List sortCerts(java.util.List)
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.util.ArrayList r1, r2;
        java.util.List r3;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        java.security.cert.X509Certificate $r5, r8;
        javax.security.auth.x500.X500Principal $r6, $r7;
        boolean z0, $z1;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        r3 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 >= 2 goto label01;

        return r3;

     label01:
        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.security.cert.X509Certificate) $r4;

        $r6 = virtualinvoke $r5.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        z0 = 1;

        $i0 = 1;

     label02:
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 == $i1 goto label04;

        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (java.security.cert.X509Certificate) $r4;

        $r7 = virtualinvoke $r5.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $z1 = virtualinvoke $r6.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label03;

        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (java.security.cert.X509Certificate) $r4;

        $r6 = virtualinvoke $r5.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $i0 = $i0 + 1;

        goto label02;

     label03:
        z0 = 0;

     label04:
        if z0 != 0 goto label18;

        r2 = new java.util.ArrayList;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>($i0);

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r3);

        $i0 = 0;

     label05:
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 >= $i1 goto label10;

        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (java.security.cert.X509Certificate) $r4;

        z0 = 0;

        $r6 = virtualinvoke $r5.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $i1 = 0;

     label06:
        $i2 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i1 == $i2 goto label07;

        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i1);

        r8 = (java.security.cert.X509Certificate) $r4;

        $r7 = virtualinvoke r8.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $z1 = virtualinvoke $r7.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label09;

        z0 = 1;

     label07:
        if z0 != 0 goto label08;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>($i0);

     label08:
        $i0 = $i0 + 1;

        goto label05;

     label09:
        $i1 = $i1 + 1;

        goto label06;

     label10:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 <= 1 goto label11;

        return r1;

     label11:
        $i0 = 0;

     label12:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 == $i1 goto label16;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (java.security.cert.X509Certificate) $r4;

        $r6 = virtualinvoke $r5.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $i1 = 0;

     label13:
        $i2 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i1 >= $i2 goto label14;

        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (java.security.cert.X509Certificate) $r4;

        $r7 = virtualinvoke $r5.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        z0 = virtualinvoke $r6.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r7);

        if z0 == 0 goto label15;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>($i1);

     label14:
        $i0 = $i0 + 1;

        goto label12;

     label15:
        $i1 = $i1 + 1;

        goto label13;

     label16:
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label17;

        return r1;

     label17:
        return r2;

     label18:
        return r3;
    }
    private org.spongycastle.asn1.ASN1Primitive toASN1Object(java.security.cert.X509Certificate) throws java.security.cert.CertificateEncodingException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.security.cert.X509Certificate $r1;
        java.lang.Exception r2;
        org.spongycastle.asn1.ASN1InputStream $r3;
        byte[] $r4;
        org.spongycastle.asn1.ASN1Primitive $r5;
        java.security.cert.CertificateEncodingException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r3 = new org.spongycastle.asn1.ASN1InputStream;

     label1:
        $r4 = virtualinvoke $r1.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        specialinvoke $r3.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r4);

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

     label2:
        return $r5;

     label3:
        r2 := @caughtexception;

        $r6 = new java.security.cert.CertificateEncodingException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while encoding certificate: ");

        $r8 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>($r8);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private byte[] toDEREncoded(org.spongycastle.asn1.ASN1Encodable) throws java.security.cert.CertificateEncodingException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        java.io.IOException r2;
        org.spongycastle.asn1.ASN1Primitive $r3;
        byte[] $r4;
        java.security.cert.CertificateEncodingException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Encodable;

     label1:
        $r3 = interfaceinvoke $r1.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r4;

     label3:
        r2 := @caughtexception;

        $r5 = new java.security.cert.CertificateEncodingException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>($r7);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public java.util.List getCertificates()
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.util.List $r1;
        java.util.ArrayList $r2;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        $r2 = new java.util.ArrayList;

        $r1 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r1;
    }
    public byte[] getEncoded() throws java.security.cert.CertificateEncodingException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.String r3;
        byte[] $r4;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        $r1 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.Iterator getEncodings()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: byte[] getEncoded(java.lang.String)>(r3);

        return $r4;

     label1:
        return null;
    }
    public byte[] getEncoded(java.lang.String) throws java.security.cert.CertificateEncodingException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.lang.String $r1;
        org.spongycastle.asn1.pkcs.SignedData r2;
        org.spongycastle.asn1.pkcs.ContentInfo r3;
        org.spongycastle.asn1.DERSet $r4, $r19, $r20;
        java.io.ByteArrayOutputStream r5;
        java.lang.Exception r6;
        org.spongycastle.util.io.pem.PemWriter r7;
        boolean $z0;
        org.spongycastle.asn1.ASN1EncodableVector r8;
        java.util.List $r9, $r10;
        int $i0, $i1;
        java.util.ListIterator $r11;
        java.lang.Object $r12;
        java.security.cert.X509Certificate $r13;
        org.spongycastle.asn1.ASN1Primitive $r14;
        org.spongycastle.asn1.DERSequence $r15;
        byte[] $r16;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r17;
        org.spongycastle.asn1.ASN1Integer $r18;
        java.io.OutputStreamWriter $r21;
        org.spongycastle.util.io.pem.PemObject $r22;
        java.security.cert.CertificateEncodingException $r23;
        java.lang.StringBuilder $r24;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PkiPath");

        if $z0 == 0 goto label03;

        r8 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r8.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r9 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $r10 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        $r11 = interfaceinvoke $r9.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label01:
        $z0 = interfaceinvoke $r11.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label02;

        $r12 = interfaceinvoke $r11.<java.util.ListIterator: java.lang.Object previous()>();

        $r13 = (java.security.cert.X509Certificate) $r12;

        $r14 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: org.spongycastle.asn1.ASN1Primitive toASN1Object(java.security.cert.X509Certificate)>($r13);

        virtualinvoke r8.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r14);

        goto label01;

     label02:
        $r15 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r15.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r8);

        $r16 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: byte[] toDEREncoded(org.spongycastle.asn1.ASN1Encodable)>($r15);

        return $r16;

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PKCS7");

        if $z0 == 0 goto label06;

        r3 = new org.spongycastle.asn1.pkcs.ContentInfo;

        $r17 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier data>;

        specialinvoke r3.<org.spongycastle.asn1.pkcs.ContentInfo: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r17, null);

        r8 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r8.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $i0 = 0;

     label04:
        $r9 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i0 == $i1 goto label05;

        $r9 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i0);

        $r13 = (java.security.cert.X509Certificate) $r12;

        $r14 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: org.spongycastle.asn1.ASN1Primitive toASN1Object(java.security.cert.X509Certificate)>($r13);

        virtualinvoke r8.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r14);

        $i0 = $i0 + 1;

        goto label04;

     label05:
        r2 = new org.spongycastle.asn1.pkcs.SignedData;

        $r18 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r18.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(1L);

        $r19 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r19.<org.spongycastle.asn1.DERSet: void <init>()>();

        $r20 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r20.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r8);

        $r4 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r4.<org.spongycastle.asn1.DERSet: void <init>()>();

        specialinvoke r2.<org.spongycastle.asn1.pkcs.SignedData: void <init>(org.spongycastle.asn1.ASN1Integer,org.spongycastle.asn1.ASN1Set,org.spongycastle.asn1.pkcs.ContentInfo,org.spongycastle.asn1.ASN1Set,org.spongycastle.asn1.ASN1Set,org.spongycastle.asn1.ASN1Set)>($r18, $r19, r3, $r20, null, $r4);

        r3 = new org.spongycastle.asn1.pkcs.ContentInfo;

        $r17 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier signedData>;

        specialinvoke r3.<org.spongycastle.asn1.pkcs.ContentInfo: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r17, r2);

        $r16 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: byte[] toDEREncoded(org.spongycastle.asn1.ASN1Encodable)>(r3);

        return $r16;

     label06:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PEM");

        if $z0 == 0 goto label14;

        r5 = new java.io.ByteArrayOutputStream;

        specialinvoke r5.<java.io.ByteArrayOutputStream: void <init>()>();

        r7 = new org.spongycastle.util.io.pem.PemWriter;

        $r21 = new java.io.OutputStreamWriter;

        specialinvoke $r21.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r5);

        specialinvoke r7.<org.spongycastle.util.io.pem.PemWriter: void <init>(java.io.Writer)>($r21);

        $i0 = 0;

     label07:
        $r9 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

     label08:
        if $i0 == $i1 goto label11;

        $r22 = new org.spongycastle.util.io.pem.PemObject;

     label09:
        $r9 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certificates>;

        $r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i0);

        $r13 = (java.security.cert.X509Certificate) $r12;

        $r16 = virtualinvoke $r13.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        specialinvoke $r22.<org.spongycastle.util.io.pem.PemObject: void <init>(java.lang.String,byte[])>("CERTIFICATE", $r16);

        virtualinvoke r7.<org.spongycastle.util.io.pem.PemWriter: void writeObject(org.spongycastle.util.io.pem.PemObjectGenerator)>($r22);

     label10:
        $i0 = $i0 + 1;

        goto label07;

     label11:
        virtualinvoke r7.<org.spongycastle.util.io.pem.PemWriter: void close()>();

     label12:
        $r16 = virtualinvoke r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r16;

     label13:
        r6 := @caughtexception;

        $r23 = new java.security.cert.CertificateEncodingException;

        specialinvoke $r23.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>("can\'t encode certificate for PEM encoded path");

        throw $r23;

     label14:
        $r23 = new java.security.cert.CertificateEncodingException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported encoding: ");

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>($r1);

        throw $r23;

        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }
    public java.util.Iterator getEncodings()
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath r0;
        java.util.Iterator $r1;
        java.util.List $r2;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        $r2 = <org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certPathEncodings>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r1;
    }
