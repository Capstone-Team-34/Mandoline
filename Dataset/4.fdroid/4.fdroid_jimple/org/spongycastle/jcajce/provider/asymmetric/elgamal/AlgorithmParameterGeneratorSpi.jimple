org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi extends org.spongycastle.jcajce.provider.asymmetric.util.BaseAlgorithmParameterGeneratorSpi
private int l
protected java.security.SecureRandom random
protected int strength
    public void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi r0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi;

        specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.util.BaseAlgorithmParameterGeneratorSpi: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi: int strength> = 1024;

        r0.<org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi: int l> = 0;

        return;
    }
    protected java.security.AlgorithmParameters engineGenerateParameters()
    {
        org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi r0;
        java.lang.Exception r1;
        org.spongycastle.crypto.generators.ElGamalParametersGenerator r2;
        int $i0;
        java.security.SecureRandom $r3;
        org.spongycastle.crypto.params.ElGamalParameters $r4;
        java.security.AlgorithmParameters $r5;
        javax.crypto.spec.DHParameterSpec $r6;
        java.math.BigInteger $r7, $r8;
        java.lang.RuntimeException $r9;
        java.lang.String $r10;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi;

        r2 = new org.spongycastle.crypto.generators.ElGamalParametersGenerator;

        specialinvoke r2.<org.spongycastle.crypto.generators.ElGamalParametersGenerator: void <init>()>();

        $r3 = r0.<org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi: java.security.SecureRandom random>;

        if $r3 == null goto label6;

        $i0 = r0.<org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi: int strength>;

        $r3 = r0.<org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi: java.security.SecureRandom random>;

        virtualinvoke r2.<org.spongycastle.crypto.generators.ElGamalParametersGenerator: void init(int,int,java.security.SecureRandom)>($i0, 20, $r3);

     label1:
        $r4 = virtualinvoke r2.<org.spongycastle.crypto.generators.ElGamalParametersGenerator: org.spongycastle.crypto.params.ElGamalParameters generateParameters()>();

     label2:
        $r5 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi: java.security.AlgorithmParameters createParametersInstance(java.lang.String)>("ElGamal");

     label3:
        $r6 = new javax.crypto.spec.DHParameterSpec;

     label4:
        $r7 = virtualinvoke $r4.<org.spongycastle.crypto.params.ElGamalParameters: java.math.BigInteger getP()>();

        $r8 = virtualinvoke $r4.<org.spongycastle.crypto.params.ElGamalParameters: java.math.BigInteger getG()>();

        $i0 = r0.<org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi: int l>;

        specialinvoke $r6.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r7, $r8, $i0);

        virtualinvoke $r5.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>($r6);

     label5:
        return $r5;

     label6:
        $i0 = r0.<org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi: int strength>;

        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        virtualinvoke r2.<org.spongycastle.crypto.generators.ElGamalParametersGenerator: void init(int,int,java.security.SecureRandom)>($i0, 20, $r3);

        goto label1;

     label7:
        r1 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        $r10 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r9;

        catch java.lang.Exception from label2 to label3 with label7;
        catch java.lang.Exception from label4 to label5 with label7;
    }
    protected void engineInit(int, java.security.SecureRandom)
    {
        org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi r0;
        int $i0;
        java.security.SecureRandom $r1;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.security.SecureRandom;

        r0.<org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi: int strength> = $i0;

        r0.<org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi: java.security.SecureRandom random> = $r1;

        return;
    }
    protected void engineInit(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException
    {
        org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi r0;
        java.security.spec.AlgorithmParameterSpec $r1;
        java.security.SecureRandom $r2;
        boolean $z0;
        java.security.InvalidAlgorithmParameterException $r3;
        javax.crypto.spec.DHGenParameterSpec r4;
        int $i0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi;

        $r1 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $r2 := @parameter1: java.security.SecureRandom;

        $z0 = $r1 instanceof javax.crypto.spec.DHGenParameterSpec;

        if $z0 != 0 goto label1;

        $r3 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r3.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("DH parameter generator requires a DHGenParameterSpec for initialisation");

        throw $r3;

     label1:
        r4 = (javax.crypto.spec.DHGenParameterSpec) $r1;

        $i0 = virtualinvoke r4.<javax.crypto.spec.DHGenParameterSpec: int getPrimeSize()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi: int strength> = $i0;

        $i0 = virtualinvoke r4.<javax.crypto.spec.DHGenParameterSpec: int getExponentSize()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi: int l> = $i0;

        r0.<org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi: java.security.SecureRandom random> = $r2;

        return;
    }
