org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey extends java.lang.Object implements javax.crypto.interfaces.DHPrivateKey org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier
static final long serialVersionUID
private transient org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier
private transient javax.crypto.spec.DHParameterSpec dhSpec
private transient org.spongycastle.asn1.pkcs.PrivateKeyInfo info
private java.math.BigInteger x
    protected void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r1;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r1.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r1;

        return;
    }
    void <init>(javax.crypto.interfaces.DHPrivateKey)
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        javax.crypto.interfaces.DHPrivateKey $r1;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r2;
        java.math.BigInteger $r3;
        javax.crypto.spec.DHParameterSpec $r4;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        $r1 := @parameter0: javax.crypto.interfaces.DHPrivateKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r2.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r2;

        $r3 = interfaceinvoke $r1.<javax.crypto.interfaces.DHPrivateKey: java.math.BigInteger getX()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: java.math.BigInteger x> = $r3;

        $r4 = interfaceinvoke $r1.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec> = $r4;

        return;
    }
    void <init>(javax.crypto.spec.DHPrivateKeySpec)
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        javax.crypto.spec.DHPrivateKeySpec $r1;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r2;
        java.math.BigInteger $r3, $r5;
        javax.crypto.spec.DHParameterSpec $r4;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        $r1 := @parameter0: javax.crypto.spec.DHPrivateKeySpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r2.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r2;

        $r3 = virtualinvoke $r1.<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getX()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: java.math.BigInteger x> = $r3;

        $r4 = new javax.crypto.spec.DHParameterSpec;

        $r3 = virtualinvoke $r1.<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getP()>();

        $r5 = virtualinvoke $r1.<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getG()>();

        specialinvoke $r4.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r5);

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec> = $r4;

        return;
    }
    public void <init>(org.spongycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r1;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.spongycastle.asn1.ASN1Encodable $r4;
        org.spongycastle.asn1.ASN1Sequence $r5;
        org.spongycastle.asn1.ASN1Integer r6;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r7, $r9;
        java.math.BigInteger $r8, $r12, $r13;
        boolean $z0;
        org.spongycastle.asn1.pkcs.DHParameter $r10;
        javax.crypto.spec.DHParameterSpec $r11;
        int $i0;
        org.spongycastle.asn1.x9.DomainParameters $r14;
        java.lang.IllegalArgumentException $r15;
        java.lang.StringBuilder $r16;
        java.lang.String $r17;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        $r1 := @parameter0: org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r2.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r2;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithm()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r5 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r4);

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.ASN1Encodable parsePrivateKey()>();

        r6 = (org.spongycastle.asn1.ASN1Integer) $r4;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithm()>();

        $r7 = virtualinvoke $r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: org.spongycastle.asn1.pkcs.PrivateKeyInfo info> = $r1;

        $r8 = virtualinvoke r6.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: java.math.BigInteger x> = $r8;

        $r9 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dhKeyAgreement>;

        $z0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label2;

        $r10 = staticinvoke <org.spongycastle.asn1.pkcs.DHParameter: org.spongycastle.asn1.pkcs.DHParameter getInstance(java.lang.Object)>($r5);

        $r8 = virtualinvoke $r10.<org.spongycastle.asn1.pkcs.DHParameter: java.math.BigInteger getL()>();

        if $r8 == null goto label1;

        $r11 = new javax.crypto.spec.DHParameterSpec;

        $r8 = virtualinvoke $r10.<org.spongycastle.asn1.pkcs.DHParameter: java.math.BigInteger getP()>();

        $r12 = virtualinvoke $r10.<org.spongycastle.asn1.pkcs.DHParameter: java.math.BigInteger getG()>();

        $r13 = virtualinvoke $r10.<org.spongycastle.asn1.pkcs.DHParameter: java.math.BigInteger getL()>();

        $i0 = virtualinvoke $r13.<java.math.BigInteger: int intValue()>();

        specialinvoke $r11.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r8, $r12, $i0);

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec> = $r11;

        return;

     label1:
        $r11 = new javax.crypto.spec.DHParameterSpec;

        $r8 = virtualinvoke $r10.<org.spongycastle.asn1.pkcs.DHParameter: java.math.BigInteger getP()>();

        $r12 = virtualinvoke $r10.<org.spongycastle.asn1.pkcs.DHParameter: java.math.BigInteger getG()>();

        specialinvoke $r11.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r8, $r12);

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec> = $r11;

        return;

     label2:
        $r9 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dhpublicnumber>;

        $z0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label3;

        $r14 = staticinvoke <org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.x9.DomainParameters getInstance(java.lang.Object)>($r5);

        $r11 = new javax.crypto.spec.DHParameterSpec;

        $r8 = virtualinvoke $r14.<org.spongycastle.asn1.x9.DomainParameters: java.math.BigInteger getP()>();

        $r12 = virtualinvoke $r14.<org.spongycastle.asn1.x9.DomainParameters: java.math.BigInteger getG()>();

        specialinvoke $r11.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r8, $r12);

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec> = $r11;

        return;

     label3:
        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown algorithm type: ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r15;
    }
    void <init>(org.spongycastle.crypto.params.DHPrivateKeyParameters)
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        org.spongycastle.crypto.params.DHPrivateKeyParameters $r1;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r2;
        java.math.BigInteger $r3, $r6;
        javax.crypto.spec.DHParameterSpec $r4;
        org.spongycastle.crypto.params.DHParameters $r5;
        int $i0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        $r1 := @parameter0: org.spongycastle.crypto.params.DHPrivateKeyParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r2.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r2;

        $r3 = virtualinvoke $r1.<org.spongycastle.crypto.params.DHPrivateKeyParameters: java.math.BigInteger getX()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: java.math.BigInteger x> = $r3;

        $r4 = new javax.crypto.spec.DHParameterSpec;

        $r5 = virtualinvoke $r1.<org.spongycastle.crypto.params.DHPrivateKeyParameters: org.spongycastle.crypto.params.DHParameters getParameters()>();

        $r3 = virtualinvoke $r5.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger getP()>();

        $r5 = virtualinvoke $r1.<org.spongycastle.crypto.params.DHPrivateKeyParameters: org.spongycastle.crypto.params.DHParameters getParameters()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger getG()>();

        $r5 = virtualinvoke $r1.<org.spongycastle.crypto.params.DHPrivateKeyParameters: org.spongycastle.crypto.params.DHParameters getParameters()>();

        $i0 = virtualinvoke $r5.<org.spongycastle.crypto.params.DHParameters: int getL()>();

        specialinvoke $r4.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r3, $r6, $i0);

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec> = $r4;

        return;
    }
    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        java.io.ObjectInputStream $r1;
        javax.crypto.spec.DHParameterSpec $r2;
        java.lang.Object $r3;
        java.math.BigInteger $r4, $r5;
        int $i0;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r6;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        $r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke $r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = new javax.crypto.spec.DHParameterSpec;

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r4 = (java.math.BigInteger) $r3;

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r5 = (java.math.BigInteger) $r3;

        $i0 = virtualinvoke $r1.<java.io.ObjectInputStream: int readInt()>();

        specialinvoke $r2.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r4, $r5, $i0);

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec> = $r2;

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: org.spongycastle.asn1.pkcs.PrivateKeyInfo info> = null;

        $r6 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r6.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r6;

        return;
    }
    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        java.io.ObjectOutputStream $r1;
        javax.crypto.spec.DHParameterSpec $r2;
        java.math.BigInteger $r3;
        int $i0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec>;

        $r3 = virtualinvoke $r2.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);

        $r2 = r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec>;

        $r3 = virtualinvoke $r2.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);

        $r2 = r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec>;

        $i0 = virtualinvoke $r2.<javax.crypto.spec.DHParameterSpec: int getL()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        java.lang.Object $r1;
        boolean $z0;
        javax.crypto.interfaces.DHPrivateKey r2;
        java.math.BigInteger $r3, $r4;
        javax.crypto.spec.DHParameterSpec $r5;
        int $i0, $i1;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof javax.crypto.interfaces.DHPrivateKey;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (javax.crypto.interfaces.DHPrivateKey) $r1;

        $r3 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: java.math.BigInteger getX()>();

        $r4 = interfaceinvoke r2.<javax.crypto.interfaces.DHPrivateKey: java.math.BigInteger getX()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r3 = virtualinvoke $r5.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        $r5 = interfaceinvoke r2.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r4 = virtualinvoke $r5.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r3 = virtualinvoke $r5.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r5 = interfaceinvoke r2.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r4 = virtualinvoke $r5.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $i0 = virtualinvoke $r5.<javax.crypto.spec.DHParameterSpec: int getL()>();

        $r5 = interfaceinvoke r2.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $i1 = virtualinvoke $r5.<javax.crypto.spec.DHParameterSpec: int getL()>();

        if $i0 != $i1 goto label2;

        return 1;

     label2:
        return 0;
    }
    public java.lang.String getAlgorithm()
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        return "DH";
    }
    public org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r3;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier>;

        $r2 = virtualinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        return $r2;
    }
    public java.util.Enumeration getBagAttributeKeys()
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        java.util.Enumeration $r1;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r2;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        $r2 = r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier>;

        $r1 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: java.util.Enumeration getBagAttributeKeys()>();

        return $r1;
    }
    public byte[] getEncoded()
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        java.lang.Exception r1;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo r2;
        byte[] $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;
        org.spongycastle.asn1.pkcs.DHParameter $r6;
        javax.crypto.spec.DHParameterSpec $r7;
        java.math.BigInteger $r8, $r9;
        int $i0;
        org.spongycastle.asn1.ASN1Primitive $r10;
        org.spongycastle.asn1.ASN1Integer $r11;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

     label01:
        r2 = r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: org.spongycastle.asn1.pkcs.PrivateKeyInfo info>;

     label02:
        if r2 == null goto label05;

     label03:
        r2 = r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: org.spongycastle.asn1.pkcs.PrivateKeyInfo info>;

        $r3 = virtualinvoke r2.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: byte[] getEncoded(java.lang.String)>("DER");

     label04:
        return $r3;

     label05:
        r2 = new org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        $r4 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r5 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dhKeyAgreement>;

        $r6 = new org.spongycastle.asn1.pkcs.DHParameter;

     label06:
        $r7 = r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec>;

        $r8 = virtualinvoke $r7.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r7 = r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec>;

        $r9 = virtualinvoke $r7.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        $r7 = r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec>;

        $i0 = virtualinvoke $r7.<javax.crypto.spec.DHParameterSpec: int getL()>();

        specialinvoke $r6.<org.spongycastle.asn1.pkcs.DHParameter: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r8, $r9, $i0);

        $r10 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.DHParameter: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        specialinvoke $r4.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r5, $r10);

     label07:
        $r11 = new org.spongycastle.asn1.ASN1Integer;

     label08:
        $r8 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: java.math.BigInteger getX()>();

        specialinvoke $r11.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r8);

        specialinvoke r2.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r11);

        $r3 = virtualinvoke r2.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: byte[] getEncoded(java.lang.String)>("DER");

     label09:
        return $r3;

     label10:
        r1 := @caughtexception;

        return null;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }
    public java.lang.String getFormat()
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        return "PKCS#8";
    }
    public javax.crypto.spec.DHParameterSpec getParams()
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        javax.crypto.spec.DHParameterSpec r1;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        r1 = r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec dhSpec>;

        return r1;
    }
    public java.math.BigInteger getX()
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        r1 = r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: java.math.BigInteger x>;

        return r1;
    }
    public int hashCode()
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        java.math.BigInteger $r1;
        int $i0, $i1;
        javax.crypto.spec.DHParameterSpec $r2;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        $r1 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: java.math.BigInteger getX()>();

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $r2 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r1 = virtualinvoke $r2.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $i0 = $i0 ^ $i1;

        $r2 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r1 = virtualinvoke $r2.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $i0 = $i0 ^ $i1;

        $r2 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $i1 = virtualinvoke $r2.<javax.crypto.spec.DHParameterSpec: int getL()>();

        $i0 = $i0 ^ $i1;

        return $i0;
    }
    public void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r3;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1Encodable;

        $r3 = r0.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier>;

        virtualinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, $r2);

        return;
    }
