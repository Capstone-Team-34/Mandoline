org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA256 extends org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi
    public void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA256 r0;
        org.spongycastle.crypto.digests.SHA256Digest $r1, $r4;
        org.spongycastle.crypto.signers.ECDSASigner $r2;
        org.spongycastle.crypto.signers.HMacDSAKCalculator $r3;
        org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder $r5;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA256;

        $r1 = new org.spongycastle.crypto.digests.SHA256Digest;

        specialinvoke $r1.<org.spongycastle.crypto.digests.SHA256Digest: void <init>()>();

        $r2 = new org.spongycastle.crypto.signers.ECDSASigner;

        $r3 = new org.spongycastle.crypto.signers.HMacDSAKCalculator;

        $r4 = new org.spongycastle.crypto.digests.SHA256Digest;

        specialinvoke $r4.<org.spongycastle.crypto.digests.SHA256Digest: void <init>()>();

        specialinvoke $r3.<org.spongycastle.crypto.signers.HMacDSAKCalculator: void <init>(org.spongycastle.crypto.Digest)>($r4);

        specialinvoke $r2.<org.spongycastle.crypto.signers.ECDSASigner: void <init>(org.spongycastle.crypto.signers.DSAKCalculator)>($r3);

        $r5 = new org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder;

        specialinvoke $r5.<org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder: void <init>(org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$1)>(null);

        specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi: void <init>(org.spongycastle.crypto.Digest,org.spongycastle.crypto.DSA,org.spongycastle.jcajce.provider.asymmetric.util.DSAEncoder)>($r1, $r2, $r5);

        return;
    }
