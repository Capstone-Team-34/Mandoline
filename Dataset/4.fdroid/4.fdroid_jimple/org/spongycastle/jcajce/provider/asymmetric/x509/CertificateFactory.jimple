org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory extends java.security.cert.CertificateFactorySpi
private static final org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil PEM_CERT_PARSER
private static final org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil PEM_CRL_PARSER
private final org.spongycastle.jcajce.util.JcaJceHelper bcHelper
private java.io.InputStream currentCrlStream
private java.io.InputStream currentStream
private org.spongycastle.asn1.ASN1Set sCrlData
private int sCrlDataObjectCount
private org.spongycastle.asn1.ASN1Set sData
private int sDataObjectCount
    static void <clinit>()
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil $r0;

        $r0 = new org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil;

        specialinvoke $r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil: void <init>(java.lang.String)>("CERTIFICATE");

        <org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil PEM_CERT_PARSER> = $r0;

        $r0 = new org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil;

        specialinvoke $r0.<org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil: void <init>(java.lang.String)>("CRL");

        <org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil PEM_CRL_PARSER> = $r0;

        return;
    }
    public void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        org.spongycastle.jcajce.util.BCJcaJceHelper $r1;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        specialinvoke r0.<java.security.cert.CertificateFactorySpi: void <init>()>();

        $r1 = new org.spongycastle.jcajce.util.BCJcaJceHelper;

        specialinvoke $r1.<org.spongycastle.jcajce.util.BCJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.jcajce.util.JcaJceHelper bcHelper> = $r1;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sData> = null;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sDataObjectCount> = 0;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.io.InputStream currentStream> = null;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sCrlData> = null;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sCrlDataObjectCount> = 0;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.io.InputStream currentCrlStream> = null;

        return;
    }
    private java.security.cert.CRL getCRL() throws java.security.cert.CRLException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        int $i0, $i1;
        org.spongycastle.asn1.ASN1Set $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.x509.CertificateList $r3;
        java.security.cert.CRL $r4;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sCrlData>;

        if $r1 == null goto label1;

        $i0 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sCrlDataObjectCount>;

        $r1 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sCrlData>;

        $i1 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Set: int size()>();

        if $i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r1 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sCrlData>;

        $i1 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sCrlDataObjectCount>;

        $i0 = $i1 + 1;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sCrlDataObjectCount> = $i0;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i1);

        $r3 = staticinvoke <org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.CertificateList getInstance(java.lang.Object)>($r2);

        $r4 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.CRL createCRL(org.spongycastle.asn1.x509.CertificateList)>($r3);

        return $r4;
    }
    private java.security.cert.Certificate getCertificate() throws java.security.cert.CertificateParsingException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        org.spongycastle.asn1.ASN1Set $r1;
        int $i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        boolean $z0;
        org.spongycastle.jcajce.provider.asymmetric.x509.X509CertificateObject $r3;
        org.spongycastle.jcajce.util.JcaJceHelper $r4;
        org.spongycastle.asn1.x509.Certificate $r5;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sData>;

        if $r1 == null goto label2;

     label1:
        $i0 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sDataObjectCount>;

        $r1 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sData>;

        $i1 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Set: int size()>();

        if $i0 >= $i1 goto label2;

        $r1 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sData>;

        $i0 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sDataObjectCount>;

        $i1 = $i0 + 1;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sDataObjectCount> = $i1;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $z0 = $r2 instanceof org.spongycastle.asn1.ASN1Sequence;

        if $z0 == 0 goto label1;

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.x509.X509CertificateObject;

        $r4 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.jcajce.util.JcaJceHelper bcHelper>;

        $r5 = staticinvoke <org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Certificate getInstance(java.lang.Object)>($r2);

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void <init>(org.spongycastle.jcajce.util.JcaJceHelper,org.spongycastle.asn1.x509.Certificate)>($r4, $r5);

        return $r3;

     label2:
        return null;
    }
    private java.security.cert.CRL readDERCRL(org.spongycastle.asn1.ASN1InputStream) throws java.io.IOException, java.security.cert.CRLException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        org.spongycastle.asn1.ASN1InputStream $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        org.spongycastle.asn1.ASN1Sequence r3;
        int $i0;
        org.spongycastle.asn1.ASN1Encodable $r4;
        boolean $z0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;
        org.spongycastle.asn1.ASN1TaggedObject $r6;
        org.spongycastle.asn1.pkcs.SignedData $r7;
        org.spongycastle.asn1.ASN1Set $r8;
        java.security.cert.CRL $r9;
        org.spongycastle.asn1.x509.CertificateList $r10;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1InputStream;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        r3 = (org.spongycastle.asn1.ASN1Sequence) $r2;

        $i0 = virtualinvoke r3.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 <= 1 goto label1;

        $r4 = virtualinvoke r3.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $z0 = $r4 instanceof org.spongycastle.asn1.ASN1ObjectIdentifier;

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r3.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r5 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier signedData>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r3.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r6 = (org.spongycastle.asn1.ASN1TaggedObject) $r4;

        r3 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r6, 1);

        $r7 = staticinvoke <org.spongycastle.asn1.pkcs.SignedData: org.spongycastle.asn1.pkcs.SignedData getInstance(java.lang.Object)>(r3);

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.pkcs.SignedData: org.spongycastle.asn1.ASN1Set getCRLs()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sCrlData> = $r8;

        $r9 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.CRL getCRL()>();

        return $r9;

     label1:
        $r10 = staticinvoke <org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.CertificateList getInstance(java.lang.Object)>(r3);

        $r9 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.CRL createCRL(org.spongycastle.asn1.x509.CertificateList)>($r10);

        return $r9;
    }
    private java.security.cert.Certificate readDERCertificate(org.spongycastle.asn1.ASN1InputStream) throws java.io.IOException, java.security.cert.CertificateParsingException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        org.spongycastle.asn1.ASN1InputStream $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        org.spongycastle.asn1.ASN1Sequence r3;
        int $i0;
        org.spongycastle.asn1.ASN1Encodable $r4;
        boolean $z0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;
        org.spongycastle.asn1.ASN1TaggedObject $r6;
        org.spongycastle.asn1.pkcs.SignedData $r7;
        org.spongycastle.asn1.ASN1Set $r8;
        java.security.cert.Certificate $r9;
        org.spongycastle.jcajce.provider.asymmetric.x509.X509CertificateObject $r10;
        org.spongycastle.jcajce.util.JcaJceHelper $r11;
        org.spongycastle.asn1.x509.Certificate $r12;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1InputStream;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        r3 = (org.spongycastle.asn1.ASN1Sequence) $r2;

        $i0 = virtualinvoke r3.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 <= 1 goto label1;

        $r4 = virtualinvoke r3.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $z0 = $r4 instanceof org.spongycastle.asn1.ASN1ObjectIdentifier;

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r3.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r5 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier signedData>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r3.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r6 = (org.spongycastle.asn1.ASN1TaggedObject) $r4;

        r3 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r6, 1);

        $r7 = staticinvoke <org.spongycastle.asn1.pkcs.SignedData: org.spongycastle.asn1.pkcs.SignedData getInstance(java.lang.Object)>(r3);

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.pkcs.SignedData: org.spongycastle.asn1.ASN1Set getCertificates()>();

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sData> = $r8;

        $r9 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.Certificate getCertificate()>();

        return $r9;

     label1:
        $r10 = new org.spongycastle.jcajce.provider.asymmetric.x509.X509CertificateObject;

        $r11 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.jcajce.util.JcaJceHelper bcHelper>;

        $r12 = staticinvoke <org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Certificate getInstance(java.lang.Object)>(r3);

        specialinvoke $r10.<org.spongycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void <init>(org.spongycastle.jcajce.util.JcaJceHelper,org.spongycastle.asn1.x509.Certificate)>($r11, $r12);

        return $r10;
    }
    private java.security.cert.CRL readPEMCRL(java.io.InputStream) throws java.io.IOException, java.security.cert.CRLException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        java.io.InputStream $r1;
        org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil $r2;
        org.spongycastle.asn1.ASN1Sequence $r3;
        org.spongycastle.asn1.x509.CertificateList $r4;
        java.security.cert.CRL $r5;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = <org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil PEM_CRL_PARSER>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil: org.spongycastle.asn1.ASN1Sequence readPEMObject(java.io.InputStream)>($r1);

        if $r3 == null goto label1;

        $r4 = staticinvoke <org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.CertificateList getInstance(java.lang.Object)>($r3);

        $r5 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.CRL createCRL(org.spongycastle.asn1.x509.CertificateList)>($r4);

        return $r5;

     label1:
        return null;
    }
    private java.security.cert.Certificate readPEMCertificate(java.io.InputStream) throws java.io.IOException, java.security.cert.CertificateParsingException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        java.io.InputStream $r1;
        org.spongycastle.jcajce.util.JcaJceHelper $r2;
        org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil $r3;
        org.spongycastle.asn1.ASN1Sequence $r4;
        org.spongycastle.jcajce.provider.asymmetric.x509.X509CertificateObject $r5;
        org.spongycastle.asn1.x509.Certificate $r6;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 := @parameter0: java.io.InputStream;

        $r3 = <org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil PEM_CERT_PARSER>;

        $r4 = virtualinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.x509.PEMUtil: org.spongycastle.asn1.ASN1Sequence readPEMObject(java.io.InputStream)>($r1);

        if $r4 == null goto label1;

        $r5 = new org.spongycastle.jcajce.provider.asymmetric.x509.X509CertificateObject;

        $r2 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.jcajce.util.JcaJceHelper bcHelper>;

        $r6 = staticinvoke <org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Certificate getInstance(java.lang.Object)>($r4);

        specialinvoke $r5.<org.spongycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void <init>(org.spongycastle.jcajce.util.JcaJceHelper,org.spongycastle.asn1.x509.Certificate)>($r2, $r6);

        return $r5;

     label1:
        return null;
    }
    protected java.security.cert.CRL createCRL(org.spongycastle.asn1.x509.CertificateList) throws java.security.cert.CRLException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        org.spongycastle.asn1.x509.CertificateList $r1;
        org.spongycastle.jcajce.provider.asymmetric.x509.X509CRLObject $r2;
        org.spongycastle.jcajce.util.JcaJceHelper $r3;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 := @parameter0: org.spongycastle.asn1.x509.CertificateList;

        $r2 = new org.spongycastle.jcajce.provider.asymmetric.x509.X509CRLObject;

        $r3 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.jcajce.util.JcaJceHelper bcHelper>;

        specialinvoke $r2.<org.spongycastle.jcajce.provider.asymmetric.x509.X509CRLObject: void <init>(org.spongycastle.jcajce.util.JcaJceHelper,org.spongycastle.asn1.x509.CertificateList)>($r3, $r1);

        return $r2;
    }
    public java.security.cert.CRL engineGenerateCRL(java.io.InputStream) throws java.security.cert.CRLException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        java.io.InputStream $r1, $r3;
        java.io.PushbackInputStream r2;
        org.spongycastle.asn1.ASN1Set $r4;
        int $i0, $i1;
        java.security.cert.CRL $r5;
        java.security.cert.CRLException r6;
        org.spongycastle.asn1.ASN1InputStream $r7;
        java.lang.Exception r8;
        java.lang.String $r9;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 := @parameter0: java.io.InputStream;

        $r3 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.io.InputStream currentCrlStream>;

        if $r3 != null goto label08;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.io.InputStream currentCrlStream> = $r1;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sCrlData> = null;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sCrlDataObjectCount> = 0;

     label01:
        $r4 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sCrlData>;

     label02:
        if $r4 == null goto label12;

     label03:
        $i0 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sCrlDataObjectCount>;

        $r4 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sCrlData>;

     label04:
        $i1 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Set: int size()>();

     label05:
        if $i0 == $i1 goto label09;

     label06:
        $r5 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.CRL getCRL()>();

     label07:
        return $r5;

     label08:
        $r3 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.io.InputStream currentCrlStream>;

        if $r3 == $r1 goto label01;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.io.InputStream currentCrlStream> = $r1;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sCrlData> = null;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sCrlDataObjectCount> = 0;

        goto label01;

     label09:
        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sCrlData> = null;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sCrlDataObjectCount> = 0;

     label10:
        return null;

     label11:
        r6 := @caughtexception;

        throw r6;

     label12:
        r2 = new java.io.PushbackInputStream;

     label13:
        specialinvoke r2.<java.io.PushbackInputStream: void <init>(java.io.InputStream)>($r1);

        $i0 = virtualinvoke r2.<java.io.PushbackInputStream: int read()>();

     label14:
        if $i0 == -1 goto label23;

     label15:
        virtualinvoke r2.<java.io.PushbackInputStream: void unread(int)>($i0);

     label16:
        if $i0 == 48 goto label19;

     label17:
        $r5 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.CRL readPEMCRL(java.io.InputStream)>(r2);

     label18:
        return $r5;

     label19:
        $r7 = new org.spongycastle.asn1.ASN1InputStream;

     label20:
        specialinvoke $r7.<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream,boolean)>(r2, 1);

        $r5 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.CRL readDERCRL(org.spongycastle.asn1.ASN1InputStream)>($r7);

     label21:
        return $r5;

     label22:
        r8 := @caughtexception;

        r6 = new java.security.cert.CRLException;

        $r9 = virtualinvoke r8.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke r6.<java.security.cert.CRLException: void <init>(java.lang.String)>($r9);

        throw r6;

     label23:
        return null;

        catch java.security.cert.CRLException from label04 to label05 with label11;
        catch java.security.cert.CRLException from label06 to label07 with label11;
        catch java.lang.Exception from label01 to label02 with label22;
        catch java.lang.Exception from label03 to label05 with label22;
        catch java.lang.Exception from label06 to label07 with label22;
        catch java.lang.Exception from label09 to label10 with label22;
        catch java.security.cert.CRLException from label13 to label14 with label11;
        catch java.security.cert.CRLException from label15 to label16 with label11;
        catch java.security.cert.CRLException from label17 to label18 with label11;
        catch java.security.cert.CRLException from label20 to label21 with label11;
        catch java.lang.Exception from label13 to label14 with label22;
        catch java.lang.Exception from label15 to label16 with label22;
        catch java.lang.Exception from label17 to label18 with label22;
        catch java.lang.Exception from label20 to label21 with label22;
    }
    public java.util.Collection engineGenerateCRLs(java.io.InputStream) throws java.security.cert.CRLException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        java.io.InputStream $r1;
        java.util.ArrayList r2;
        java.security.cert.CRL $r3;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 := @parameter0: java.io.InputStream;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label1:
        $r3 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.CRL engineGenerateCRL(java.io.InputStream)>($r1);

        if $r3 == null goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return r2;
    }
    public java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream) throws java.security.cert.CertificateException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        java.io.InputStream $r1;
        java.security.cert.CertPath $r2;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream,java.lang.String)>($r1, "PkiPath");

        return $r2;
    }
    public java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream, java.lang.String) throws java.security.cert.CertificateException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        java.io.InputStream $r1;
        java.lang.String $r2;
        org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath $r3;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: void <init>(java.io.InputStream,java.lang.String)>($r1, $r2);

        return $r3;
    }
    public java.security.cert.CertPath engineGenerateCertPath(java.util.List) throws java.security.cert.CertificateException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.security.cert.CertificateException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath $r7;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 := @parameter0: java.util.List;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        if $r3 == null goto label1;

        $z0 = $r3 instanceof java.security.cert.X509Certificate;

        if $z0 != 0 goto label1;

        $r4 = new java.security.cert.CertificateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("list contains non X509Certificate object while creating CertPath\n");

        $r6 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.security.cert.CertificateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        $r7 = new org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath;

        specialinvoke $r7.<org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: void <init>(java.util.List)>($r1);

        return $r7;
    }
    public java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream) throws java.security.cert.CertificateException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        java.io.InputStream $r1, $r4;
        java.lang.Exception r2;
        java.io.PushbackInputStream r3;
        org.spongycastle.asn1.ASN1Set $r5;
        int $i0, $i1;
        java.security.cert.Certificate $r6;
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory$ExCertificateException $r7;
        org.spongycastle.asn1.ASN1InputStream $r8;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 := @parameter0: java.io.InputStream;

        $r4 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.io.InputStream currentStream>;

        if $r4 != null goto label07;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.io.InputStream currentStream> = $r1;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sData> = null;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sDataObjectCount> = 0;

     label01:
        $r5 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sData>;

     label02:
        if $r5 == null goto label11;

     label03:
        $i0 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sDataObjectCount>;

        $r5 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sData>;

        $i1 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1Set: int size()>();

     label04:
        if $i0 == $i1 goto label08;

     label05:
        $r6 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.Certificate getCertificate()>();

     label06:
        return $r6;

     label07:
        $r4 = r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.io.InputStream currentStream>;

        if $r4 == $r1 goto label01;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.io.InputStream currentStream> = $r1;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sData> = null;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sDataObjectCount> = 0;

        goto label01;

     label08:
        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: org.spongycastle.asn1.ASN1Set sData> = null;

        r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: int sDataObjectCount> = 0;

     label09:
        return null;

     label10:
        r2 := @caughtexception;

        $r7 = new org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory$ExCertificateException;

        specialinvoke $r7.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory$ExCertificateException: void <init>(org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory,java.lang.Throwable)>(r0, r2);

        throw $r7;

     label11:
        r3 = new java.io.PushbackInputStream;

     label12:
        specialinvoke r3.<java.io.PushbackInputStream: void <init>(java.io.InputStream)>($r1);

        $i0 = virtualinvoke r3.<java.io.PushbackInputStream: int read()>();

     label13:
        if $i0 == -1 goto label21;

     label14:
        virtualinvoke r3.<java.io.PushbackInputStream: void unread(int)>($i0);

     label15:
        if $i0 == 48 goto label18;

     label16:
        $r6 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.Certificate readPEMCertificate(java.io.InputStream)>(r3);

     label17:
        return $r6;

     label18:
        $r8 = new org.spongycastle.asn1.ASN1InputStream;

     label19:
        specialinvoke $r8.<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>(r3);

        $r6 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.Certificate readDERCertificate(org.spongycastle.asn1.ASN1InputStream)>($r8);

     label20:
        return $r6;

     label21:
        return null;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label12 to label13 with label10;
        catch java.lang.Exception from label14 to label15 with label10;
        catch java.lang.Exception from label16 to label17 with label10;
        catch java.lang.Exception from label19 to label20 with label10;
    }
    public java.util.Collection engineGenerateCertificates(java.io.InputStream) throws java.security.cert.CertificateException
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        java.io.InputStream $r1;
        java.util.ArrayList r2;
        java.security.cert.Certificate $r3;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r1 := @parameter0: java.io.InputStream;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label1:
        $r3 = virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory: java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream)>($r1);

        if $r3 == null goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return r2;
    }
    public java.util.Iterator engineGetCertPathEncodings()
    {
        org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory r0;
        java.util.Iterator $r1;
        java.util.List $r2;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.x509.CertificateFactory;

        $r2 = <org.spongycastle.jcajce.provider.asymmetric.x509.PKIXCertPath: java.util.List certPathEncodings>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r1;
    }
