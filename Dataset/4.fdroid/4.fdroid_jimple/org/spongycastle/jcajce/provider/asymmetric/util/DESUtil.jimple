org.spongycastle.jcajce.provider.asymmetric.util.DESUtil extends java.lang.Object
private static final java.util.Set des
    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.util.Set $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        java.lang.String $r3;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <org.spongycastle.jcajce.provider.asymmetric.util.DESUtil: java.util.Set des> = $r0;

        $r1 = <org.spongycastle.jcajce.provider.asymmetric.util.DESUtil: java.util.Set des>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("DES");

        $r1 = <org.spongycastle.jcajce.provider.asymmetric.util.DESUtil: java.util.Set des>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("DESEDE");

        $r1 = <org.spongycastle.jcajce.provider.asymmetric.util.DESUtil: java.util.Set des>;

        $r2 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier desCBC>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r1 = <org.spongycastle.jcajce.provider.asymmetric.util.DESUtil: java.util.Set des>;

        $r2 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier des_EDE3_CBC>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r1 = <org.spongycastle.jcajce.provider.asymmetric.util.DESUtil: java.util.Set des>;

        $r2 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier des_EDE3_CBC>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r1 = <org.spongycastle.jcajce.provider.asymmetric.util.DESUtil: java.util.Set des>;

        $r2 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_alg_CMS3DESwrap>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        return;
    }
    public void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.util.DESUtil r0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.util.DESUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static boolean isDES(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Set $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.spongycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>($r0);

        $r1 = <org.spongycastle.jcajce.provider.asymmetric.util.DESUtil: java.util.Set des>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r0);

        return $z0;
    }
    public static void setOddParity(byte[])
    {
        byte[] $r0;
        byte b0;
        int i1, $i2, $i3, $i4;

        $r0 := @parameter0: byte[];

        i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if i1 >= $i2 goto label2;

        b0 = $r0[i1];

        $i2 = b0 & 254;

        $i3 = b0 >> 1;

        $i4 = b0 >> 2;

        $i3 = $i3 ^ $i4;

        $i4 = b0 >> 3;

        $i3 = $i3 ^ $i4;

        $i4 = b0 >> 4;

        $i3 = $i3 ^ $i4;

        $i4 = b0 >> 5;

        $i3 = $i3 ^ $i4;

        $i4 = b0 >> 6;

        $i3 = $i3 ^ $i4;

        $i4 = b0 >> 7;

        $i3 = $i3 ^ $i4;

        $i3 = $i3 ^ 1;

        $i3 = $i3 & 1;

        $i2 = $i2 | $i3;

        b0 = (byte) $i2;

        $r0[i1] = b0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
