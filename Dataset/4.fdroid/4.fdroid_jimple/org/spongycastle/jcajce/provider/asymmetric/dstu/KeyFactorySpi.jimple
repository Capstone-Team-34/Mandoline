org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi extends org.spongycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi
    public void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi r0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi;

        specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: void <init>()>();

        return;
    }
    protected java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi r0;
        java.security.PrivateKey $r1;
        java.security.spec.KeySpec r2;
        boolean $z0;
        org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey $r3;
        org.spongycastle.jce.spec.ECPrivateKeySpec r4;
        java.security.spec.ECPrivateKeySpec r5;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi;

        r2 := @parameter0: java.security.spec.KeySpec;

        $z0 = r2 instanceof org.spongycastle.jce.spec.ECPrivateKeySpec;

        if $z0 == 0 goto label1;

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey;

        r4 = (org.spongycastle.jce.spec.ECPrivateKeySpec) r2;

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(org.spongycastle.jce.spec.ECPrivateKeySpec)>(r4);

        return $r3;

     label1:
        $z0 = r2 instanceof java.security.spec.ECPrivateKeySpec;

        if $z0 == 0 goto label2;

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey;

        r5 = (java.security.spec.ECPrivateKeySpec) r2;

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(java.security.spec.ECPrivateKeySpec)>(r5);

        return $r3;

     label2:
        $r1 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)>(r2);

        return $r1;
    }
    protected java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi r0;
        java.security.PublicKey $r1;
        java.security.spec.KeySpec r2;
        boolean $z0;
        org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey $r3;
        org.spongycastle.jce.spec.ECPublicKeySpec r4;
        java.security.spec.ECPublicKeySpec r5;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi;

        r2 := @parameter0: java.security.spec.KeySpec;

        $z0 = r2 instanceof org.spongycastle.jce.spec.ECPublicKeySpec;

        if $z0 == 0 goto label1;

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey;

        r4 = (org.spongycastle.jce.spec.ECPublicKeySpec) r2;

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: void <init>(org.spongycastle.jce.spec.ECPublicKeySpec)>(r4);

        return $r3;

     label1:
        $z0 = r2 instanceof java.security.spec.ECPublicKeySpec;

        if $z0 == 0 goto label2;

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey;

        r5 = (java.security.spec.ECPublicKeySpec) r2;

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: void <init>(java.security.spec.ECPublicKeySpec)>(r5);

        return $r3;

     label2:
        $r1 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)>(r2);

        return $r1;
    }
    protected java.security.spec.KeySpec engineGetKeySpec(java.security.Key, java.lang.Class) throws java.security.spec.InvalidKeySpecException
    {
        org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi r0;
        java.security.Key $r1;
        java.lang.Class $r2;
        boolean $z0;
        java.security.interfaces.ECPublicKey r3;
        java.security.spec.ECParameterSpec $r4;
        java.security.spec.ECPublicKeySpec $r5;
        java.security.spec.ECPoint $r6;
        org.spongycastle.jcajce.provider.config.ProviderConfiguration $r7;
        org.spongycastle.jce.spec.ECParameterSpec $r8;
        org.spongycastle.math.ec.ECCurve $r9;
        byte[] $r10;
        java.security.spec.EllipticCurve $r11;
        java.security.interfaces.ECPrivateKey r12;
        java.security.spec.ECPrivateKeySpec $r13;
        java.math.BigInteger $r14;
        org.spongycastle.jce.spec.ECPublicKeySpec $r15;
        org.spongycastle.math.ec.ECPoint $r16;
        org.spongycastle.jce.spec.ECPrivateKeySpec $r17;
        java.security.spec.KeySpec $r18;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi;

        $r1 := @parameter0: java.security.Key;

        $r2 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/security/spec/ECPublicKeySpec;");

        if $z0 == 0 goto label2;

        $z0 = $r1 instanceof java.security.interfaces.ECPublicKey;

        if $z0 == 0 goto label2;

        r3 = (java.security.interfaces.ECPublicKey) $r1;

        $r4 = interfaceinvoke r3.<java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()>();

        if $r4 == null goto label1;

        $r5 = new java.security.spec.ECPublicKeySpec;

        $r6 = interfaceinvoke r3.<java.security.interfaces.ECPublicKey: java.security.spec.ECPoint getW()>();

        $r4 = interfaceinvoke r3.<java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()>();

        specialinvoke $r5.<java.security.spec.ECPublicKeySpec: void <init>(java.security.spec.ECPoint,java.security.spec.ECParameterSpec)>($r6, $r4);

        return $r5;

     label1:
        $r7 = <org.spongycastle.jce.provider.BouncyCastleProvider: org.spongycastle.jcajce.provider.config.ProviderConfiguration CONFIGURATION>;

        $r8 = interfaceinvoke $r7.<org.spongycastle.jcajce.provider.config.ProviderConfiguration: org.spongycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        $r5 = new java.security.spec.ECPublicKeySpec;

        $r6 = interfaceinvoke r3.<java.security.interfaces.ECPublicKey: java.security.spec.ECPoint getW()>();

        $r9 = virtualinvoke $r8.<org.spongycastle.jce.spec.ECParameterSpec: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r10 = virtualinvoke $r8.<org.spongycastle.jce.spec.ECParameterSpec: byte[] getSeed()>();

        $r11 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r9, $r10);

        $r4 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.spongycastle.jce.spec.ECParameterSpec)>($r11, $r8);

        specialinvoke $r5.<java.security.spec.ECPublicKeySpec: void <init>(java.security.spec.ECPoint,java.security.spec.ECParameterSpec)>($r6, $r4);

        return $r5;

     label2:
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/security/spec/ECPrivateKeySpec;");

        if $z0 == 0 goto label4;

        $z0 = $r1 instanceof java.security.interfaces.ECPrivateKey;

        if $z0 == 0 goto label4;

        r12 = (java.security.interfaces.ECPrivateKey) $r1;

        $r4 = interfaceinvoke r12.<java.security.interfaces.ECPrivateKey: java.security.spec.ECParameterSpec getParams()>();

        if $r4 == null goto label3;

        $r13 = new java.security.spec.ECPrivateKeySpec;

        $r14 = interfaceinvoke r12.<java.security.interfaces.ECPrivateKey: java.math.BigInteger getS()>();

        $r4 = interfaceinvoke r12.<java.security.interfaces.ECPrivateKey: java.security.spec.ECParameterSpec getParams()>();

        specialinvoke $r13.<java.security.spec.ECPrivateKeySpec: void <init>(java.math.BigInteger,java.security.spec.ECParameterSpec)>($r14, $r4);

        return $r13;

     label3:
        $r7 = <org.spongycastle.jce.provider.BouncyCastleProvider: org.spongycastle.jcajce.provider.config.ProviderConfiguration CONFIGURATION>;

        $r8 = interfaceinvoke $r7.<org.spongycastle.jcajce.provider.config.ProviderConfiguration: org.spongycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        $r13 = new java.security.spec.ECPrivateKeySpec;

        $r14 = interfaceinvoke r12.<java.security.interfaces.ECPrivateKey: java.math.BigInteger getS()>();

        $r9 = virtualinvoke $r8.<org.spongycastle.jce.spec.ECParameterSpec: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r10 = virtualinvoke $r8.<org.spongycastle.jce.spec.ECParameterSpec: byte[] getSeed()>();

        $r11 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r9, $r10);

        $r4 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.spongycastle.jce.spec.ECParameterSpec)>($r11, $r8);

        specialinvoke $r13.<java.security.spec.ECPrivateKeySpec: void <init>(java.math.BigInteger,java.security.spec.ECParameterSpec)>($r14, $r4);

        return $r13;

     label4:
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Lorg/spongycastle/jce/spec/ECPublicKeySpec;");

        if $z0 == 0 goto label6;

        $z0 = $r1 instanceof java.security.interfaces.ECPublicKey;

        if $z0 == 0 goto label6;

        r3 = (java.security.interfaces.ECPublicKey) $r1;

        $r4 = interfaceinvoke r3.<java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()>();

        if $r4 == null goto label5;

        $r15 = new org.spongycastle.jce.spec.ECPublicKeySpec;

        $r4 = interfaceinvoke r3.<java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()>();

        $r6 = interfaceinvoke r3.<java.security.interfaces.ECPublicKey: java.security.spec.ECPoint getW()>();

        $r16 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.math.ec.ECPoint convertPoint(java.security.spec.ECParameterSpec,java.security.spec.ECPoint,boolean)>($r4, $r6, 0);

        $r4 = interfaceinvoke r3.<java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()>();

        $r8 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.jce.spec.ECParameterSpec convertSpec(java.security.spec.ECParameterSpec,boolean)>($r4, 0);

        specialinvoke $r15.<org.spongycastle.jce.spec.ECPublicKeySpec: void <init>(org.spongycastle.math.ec.ECPoint,org.spongycastle.jce.spec.ECParameterSpec)>($r16, $r8);

        return $r15;

     label5:
        $r7 = <org.spongycastle.jce.provider.BouncyCastleProvider: org.spongycastle.jcajce.provider.config.ProviderConfiguration CONFIGURATION>;

        $r8 = interfaceinvoke $r7.<org.spongycastle.jcajce.provider.config.ProviderConfiguration: org.spongycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        $r15 = new org.spongycastle.jce.spec.ECPublicKeySpec;

        $r4 = interfaceinvoke r3.<java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()>();

        $r6 = interfaceinvoke r3.<java.security.interfaces.ECPublicKey: java.security.spec.ECPoint getW()>();

        $r16 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.math.ec.ECPoint convertPoint(java.security.spec.ECParameterSpec,java.security.spec.ECPoint,boolean)>($r4, $r6, 0);

        specialinvoke $r15.<org.spongycastle.jce.spec.ECPublicKeySpec: void <init>(org.spongycastle.math.ec.ECPoint,org.spongycastle.jce.spec.ECParameterSpec)>($r16, $r8);

        return $r15;

     label6:
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Lorg/spongycastle/jce/spec/ECPrivateKeySpec;");

        if $z0 == 0 goto label8;

        $z0 = $r1 instanceof java.security.interfaces.ECPrivateKey;

        if $z0 == 0 goto label8;

        r12 = (java.security.interfaces.ECPrivateKey) $r1;

        $r4 = interfaceinvoke r12.<java.security.interfaces.ECPrivateKey: java.security.spec.ECParameterSpec getParams()>();

        if $r4 == null goto label7;

        $r17 = new org.spongycastle.jce.spec.ECPrivateKeySpec;

        $r14 = interfaceinvoke r12.<java.security.interfaces.ECPrivateKey: java.math.BigInteger getS()>();

        $r4 = interfaceinvoke r12.<java.security.interfaces.ECPrivateKey: java.security.spec.ECParameterSpec getParams()>();

        $r8 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.jce.spec.ECParameterSpec convertSpec(java.security.spec.ECParameterSpec,boolean)>($r4, 0);

        specialinvoke $r17.<org.spongycastle.jce.spec.ECPrivateKeySpec: void <init>(java.math.BigInteger,org.spongycastle.jce.spec.ECParameterSpec)>($r14, $r8);

        return $r17;

     label7:
        $r7 = <org.spongycastle.jce.provider.BouncyCastleProvider: org.spongycastle.jcajce.provider.config.ProviderConfiguration CONFIGURATION>;

        $r8 = interfaceinvoke $r7.<org.spongycastle.jcajce.provider.config.ProviderConfiguration: org.spongycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        $r17 = new org.spongycastle.jce.spec.ECPrivateKeySpec;

        $r14 = interfaceinvoke r12.<java.security.interfaces.ECPrivateKey: java.math.BigInteger getS()>();

        specialinvoke $r17.<org.spongycastle.jce.spec.ECPrivateKeySpec: void <init>(java.math.BigInteger,org.spongycastle.jce.spec.ECParameterSpec)>($r14, $r8);

        return $r17;

     label8:
        $r18 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)>($r1, $r2);

        return $r18;
    }
    protected java.security.Key engineTranslateKey(java.security.Key) throws java.security.InvalidKeyException
    {
        org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi r0;
        java.security.Key $r1;
        java.security.InvalidKeyException $r2;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi;

        $r1 := @parameter0: java.security.Key;

        $r2 = new java.security.InvalidKeyException;

        specialinvoke $r2.<java.security.InvalidKeyException: void <init>(java.lang.String)>("key type unknown");

        throw $r2;
    }
    public java.security.PrivateKey generatePrivate(org.spongycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi r0;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3, $r4;
        boolean $z0;
        org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey $r5;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi;

        $r1 := @parameter0: org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r4 = <org.spongycastle.asn1.ua.UAObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dstu4145le>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r4 = <org.spongycastle.asn1.ua.UAObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dstu4145be>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

     label1:
        $r5 = new org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey;

        specialinvoke $r5.<org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(org.spongycastle.asn1.pkcs.PrivateKeyInfo)>($r1);

        return $r5;

     label2:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("algorithm identifier ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in key not recognised");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r6;
    }
    public java.security.PublicKey generatePublic(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3, $r4;
        boolean $z0;
        org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey $r5;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi;

        $r1 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r4 = <org.spongycastle.asn1.ua.UAObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dstu4145le>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r4 = <org.spongycastle.asn1.ua.UAObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dstu4145be>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

     label1:
        $r5 = new org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey;

        specialinvoke $r5.<org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r1);

        return $r5;

     label2:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("algorithm identifier ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in key not recognised");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r6;
    }
