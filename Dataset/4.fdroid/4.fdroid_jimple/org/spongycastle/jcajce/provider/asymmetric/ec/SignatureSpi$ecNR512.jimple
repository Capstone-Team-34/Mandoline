org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR512 extends org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi
    public void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR512 r0;
        org.spongycastle.crypto.digests.SHA512Digest $r1;
        org.spongycastle.crypto.signers.ECNRSigner $r2;
        org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder $r3;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR512;

        $r1 = new org.spongycastle.crypto.digests.SHA512Digest;

        specialinvoke $r1.<org.spongycastle.crypto.digests.SHA512Digest: void <init>()>();

        $r2 = new org.spongycastle.crypto.signers.ECNRSigner;

        specialinvoke $r2.<org.spongycastle.crypto.signers.ECNRSigner: void <init>()>();

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder;

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder: void <init>(org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$1)>(null);

        specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi: void <init>(org.spongycastle.crypto.Digest,org.spongycastle.crypto.DSA,org.spongycastle.jcajce.provider.asymmetric.util.DSAEncoder)>($r1, $r2, $r3);

        return;
    }
