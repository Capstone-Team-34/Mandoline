org.spongycastle.jcajce.provider.asymmetric.ElGamal$Mappings extends org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider
    public void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.ElGamal$Mappings r0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.ElGamal$Mappings;

        specialinvoke r0.<org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider: void <init>()>();

        return;
    }
    public void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider)
    {
        org.spongycastle.jcajce.provider.asymmetric.ElGamal$Mappings r0;
        org.spongycastle.jcajce.provider.config.ConfigurableProvider $r1;
        org.spongycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.ElGamal$Mappings;

        $r1 := @parameter0: org.spongycastle.jcajce.provider.config.ConfigurableProvider;

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("AlgorithmParameterGenerator.ELGAMAL", "org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("AlgorithmParameterGenerator.ElGamal", "org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParameterGeneratorSpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("AlgorithmParameters.ELGAMAL", "org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("AlgorithmParameters.ElGamal", "org.spongycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Cipher.ELGAMAL", "org.spongycastle.jcajce.provider.asymmetric.elgamal.CipherSpi$NoPadding");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Cipher.ElGamal", "org.spongycastle.jcajce.provider.asymmetric.elgamal.CipherSpi$NoPadding");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Cipher.ELGAMAL/ECB/PKCS1PADDING", "ELGAMAL/PKCS1");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Cipher.ELGAMAL/NONE/PKCS1PADDING", "ELGAMAL/PKCS1");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Alg.Alias.Cipher.ELGAMAL/NONE/NOPADDING", "ELGAMAL");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Cipher.ELGAMAL/PKCS1", "org.spongycastle.jcajce.provider.asymmetric.elgamal.CipherSpi$PKCS1v1_5Padding");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("KeyFactory.ELGAMAL", "org.spongycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("KeyFactory.ElGamal", "org.spongycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("KeyPairGenerator.ELGAMAL", "org.spongycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("KeyPairGenerator.ElGamal", "org.spongycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi");

        r2 = new org.spongycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi;

        specialinvoke r2.<org.spongycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi: void <init>()>();

        $r3 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier elGamalAlgorithm>;

        virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.ElGamal$Mappings: void registerOid(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String,org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter)>($r1, $r3, "ELGAMAL", r2);

        $r3 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier elGamalAlgorithm>;

        virtualinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.ElGamal$Mappings: void registerOidAlgorithmParameters(org.spongycastle.jcajce.provider.config.ConfigurableProvider,org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>($r1, $r3, "ELGAMAL");

        return;
    }
