org.spongycastle.jcajce.provider.asymmetric.dh.IESCipher$OldIESwithCipher extends org.spongycastle.jcajce.provider.asymmetric.dh.IESCipher
    public void <init>(org.spongycastle.crypto.BlockCipher)
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.IESCipher$OldIESwithCipher r0;
        org.spongycastle.crypto.BlockCipher $r1;
        org.spongycastle.crypto.engines.OldIESEngine $r2;
        org.spongycastle.crypto.agreement.DHBasicAgreement $r3;
        org.spongycastle.crypto.generators.KDF2BytesGenerator $r4;
        org.spongycastle.crypto.digests.SHA1Digest $r5;
        org.spongycastle.crypto.macs.HMac $r6;
        org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher $r7;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.IESCipher$OldIESwithCipher;

        $r1 := @parameter0: org.spongycastle.crypto.BlockCipher;

        $r2 = new org.spongycastle.crypto.engines.OldIESEngine;

        $r3 = new org.spongycastle.crypto.agreement.DHBasicAgreement;

        specialinvoke $r3.<org.spongycastle.crypto.agreement.DHBasicAgreement: void <init>()>();

        $r4 = new org.spongycastle.crypto.generators.KDF2BytesGenerator;

        $r5 = new org.spongycastle.crypto.digests.SHA1Digest;

        specialinvoke $r5.<org.spongycastle.crypto.digests.SHA1Digest: void <init>()>();

        specialinvoke $r4.<org.spongycastle.crypto.generators.KDF2BytesGenerator: void <init>(org.spongycastle.crypto.Digest)>($r5);

        $r6 = new org.spongycastle.crypto.macs.HMac;

        $r5 = new org.spongycastle.crypto.digests.SHA1Digest;

        specialinvoke $r5.<org.spongycastle.crypto.digests.SHA1Digest: void <init>()>();

        specialinvoke $r6.<org.spongycastle.crypto.macs.HMac: void <init>(org.spongycastle.crypto.Digest)>($r5);

        $r7 = new org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher;

        specialinvoke $r7.<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>($r1);

        specialinvoke $r2.<org.spongycastle.crypto.engines.OldIESEngine: void <init>(org.spongycastle.crypto.BasicAgreement,org.spongycastle.crypto.DerivationFunction,org.spongycastle.crypto.Mac,org.spongycastle.crypto.BufferedBlockCipher)>($r3, $r4, $r6, $r7);

        specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.dh.IESCipher: void <init>(org.spongycastle.crypto.engines.OldIESEngine)>($r2);

        return;
    }
