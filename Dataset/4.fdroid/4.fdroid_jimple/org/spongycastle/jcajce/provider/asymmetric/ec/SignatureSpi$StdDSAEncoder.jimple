org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder extends java.lang.Object implements org.spongycastle.jcajce.provider.asymmetric.util.DSAEncoder
    private void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder r0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$1)
    {
        org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder r0;
        org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$1 $r1;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder;

        $r1 := @parameter0: org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$1;

        specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder: void <init>()>();

        return;
    }
    public java.math.BigInteger[] decode(byte[]) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder r0;
        byte[] $r1;
        java.math.BigInteger[] r2;
        org.spongycastle.asn1.ASN1Primitive $r3;
        org.spongycastle.asn1.ASN1Sequence r4;
        org.spongycastle.asn1.ASN1Encodable $r5;
        org.spongycastle.asn1.ASN1Integer $r6;
        java.math.BigInteger $r7;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder;

        $r1 := @parameter0: byte[];

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r1);

        r4 = (org.spongycastle.asn1.ASN1Sequence) $r3;

        r2 = newarray (java.math.BigInteger)[2];

        $r5 = virtualinvoke r4.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r6 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r2[0] = $r7;

        $r5 = virtualinvoke r4.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r6 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r2[1] = $r7;

        return r2;
    }
    public byte[] encode(java.math.BigInteger, java.math.BigInteger) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder r0;
        java.math.BigInteger $r1, $r2;
        org.spongycastle.asn1.ASN1EncodableVector r3;
        byte[] $r4;
        org.spongycastle.asn1.ASN1Integer $r5;
        org.spongycastle.asn1.DERSequence $r6;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        r3 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r3.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r5 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r5.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r1);

        virtualinvoke r3.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $r5 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r5.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r2);

        virtualinvoke r3.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $r6 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r6.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r3);

        $r4 = virtualinvoke $r6.<org.spongycastle.asn1.DERSequence: byte[] getEncoded(java.lang.String)>("DER");

        return $r4;
    }
