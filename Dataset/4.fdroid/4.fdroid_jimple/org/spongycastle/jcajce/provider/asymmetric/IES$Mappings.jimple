org.spongycastle.jcajce.provider.asymmetric.IES$Mappings extends org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider
    public void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.IES$Mappings r0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.IES$Mappings;

        specialinvoke r0.<org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider: void <init>()>();

        return;
    }
    public void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider)
    {
        org.spongycastle.jcajce.provider.asymmetric.IES$Mappings r0;
        org.spongycastle.jcajce.provider.config.ConfigurableProvider $r1;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.IES$Mappings;

        $r1 := @parameter0: org.spongycastle.jcajce.provider.config.ConfigurableProvider;

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("AlgorithmParameters.IES", "org.spongycastle.jcajce.provider.asymmetric.ies.AlgorithmParametersSpi");

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Cipher.IES", "org.spongycastle.jcajce.provider.asymmetric.ies.CipherSpi$IES");

        return;
    }
