org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi extends org.spongycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi
    public void <init>()
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi r0;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi;

        specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: void <init>()>();

        return;
    }
    protected java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi r0;
        java.security.PrivateKey $r1;
        java.security.spec.KeySpec r2;
        boolean $z0;
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey $r3;
        javax.crypto.spec.DHPrivateKeySpec r4;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi;

        r2 := @parameter0: java.security.spec.KeySpec;

        $z0 = r2 instanceof javax.crypto.spec.DHPrivateKeySpec;

        if $z0 == 0 goto label1;

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        r4 = (javax.crypto.spec.DHPrivateKeySpec) r2;

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: void <init>(javax.crypto.spec.DHPrivateKeySpec)>(r4);

        return $r3;

     label1:
        $r1 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)>(r2);

        return $r1;
    }
    protected java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi r0;
        java.security.PublicKey $r1;
        java.security.spec.KeySpec r2;
        boolean $z0;
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey $r3;
        javax.crypto.spec.DHPublicKeySpec r4;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi;

        r2 := @parameter0: java.security.spec.KeySpec;

        $z0 = r2 instanceof javax.crypto.spec.DHPublicKeySpec;

        if $z0 == 0 goto label1;

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey;

        r4 = (javax.crypto.spec.DHPublicKeySpec) r2;

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(javax.crypto.spec.DHPublicKeySpec)>(r4);

        return $r3;

     label1:
        $r1 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)>(r2);

        return $r1;
    }
    protected java.security.spec.KeySpec engineGetKeySpec(java.security.Key, java.lang.Class) throws java.security.spec.InvalidKeySpecException
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi r0;
        java.security.Key $r1;
        java.lang.Class $r2;
        boolean $z0;
        javax.crypto.interfaces.DHPrivateKey r3;
        javax.crypto.spec.DHPrivateKeySpec $r4;
        java.math.BigInteger $r5, $r7, $r8;
        javax.crypto.spec.DHParameterSpec $r6;
        javax.crypto.interfaces.DHPublicKey r9;
        javax.crypto.spec.DHPublicKeySpec $r10;
        java.security.spec.KeySpec $r11;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi;

        $r1 := @parameter0: java.security.Key;

        $r2 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljavax/crypto/spec/DHPrivateKeySpec;");

        if $z0 == 0 goto label1;

        $z0 = $r1 instanceof javax.crypto.interfaces.DHPrivateKey;

        if $z0 == 0 goto label1;

        r3 = (javax.crypto.interfaces.DHPrivateKey) $r1;

        $r4 = new javax.crypto.spec.DHPrivateKeySpec;

        $r5 = interfaceinvoke r3.<javax.crypto.interfaces.DHPrivateKey: java.math.BigInteger getX()>();

        $r6 = interfaceinvoke r3.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r7 = virtualinvoke $r6.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r6 = interfaceinvoke r3.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r8 = virtualinvoke $r6.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        specialinvoke $r4.<javax.crypto.spec.DHPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r7, $r8);

        return $r4;

     label1:
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljavax/crypto/spec/DHPublicKeySpec;");

        if $z0 == 0 goto label2;

        $z0 = $r1 instanceof javax.crypto.interfaces.DHPublicKey;

        if $z0 == 0 goto label2;

        r9 = (javax.crypto.interfaces.DHPublicKey) $r1;

        $r10 = new javax.crypto.spec.DHPublicKeySpec;

        $r5 = interfaceinvoke r9.<javax.crypto.interfaces.DHPublicKey: java.math.BigInteger getY()>();

        $r6 = interfaceinvoke r9.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r7 = virtualinvoke $r6.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r6 = interfaceinvoke r9.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r8 = virtualinvoke $r6.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        specialinvoke $r10.<javax.crypto.spec.DHPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r7, $r8);

        return $r10;

     label2:
        $r11 = specialinvoke r0.<org.spongycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi: java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)>($r1, $r2);

        return $r11;
    }
    protected java.security.Key engineTranslateKey(java.security.Key) throws java.security.InvalidKeyException
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi r0;
        java.security.Key r1;
        boolean $z0;
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey $r2;
        javax.crypto.interfaces.DHPublicKey r3;
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey $r4;
        javax.crypto.interfaces.DHPrivateKey r5;
        java.security.InvalidKeyException $r6;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi;

        r1 := @parameter0: java.security.Key;

        $z0 = r1 instanceof javax.crypto.interfaces.DHPublicKey;

        if $z0 == 0 goto label1;

        $r2 = new org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey;

        r3 = (javax.crypto.interfaces.DHPublicKey) r1;

        specialinvoke $r2.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(javax.crypto.interfaces.DHPublicKey)>(r3);

        return $r2;

     label1:
        $z0 = r1 instanceof javax.crypto.interfaces.DHPrivateKey;

        if $z0 == 0 goto label2;

        $r4 = new org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        r5 = (javax.crypto.interfaces.DHPrivateKey) r1;

        specialinvoke $r4.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: void <init>(javax.crypto.interfaces.DHPrivateKey)>(r5);

        return $r4;

     label2:
        $r6 = new java.security.InvalidKeyException;

        specialinvoke $r6.<java.security.InvalidKeyException: void <init>(java.lang.String)>("key type unknown");

        throw $r6;
    }
    public java.security.PrivateKey generatePrivate(org.spongycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi r0;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3, $r4;
        boolean $z0;
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey $r5;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi;

        $r1 := @parameter0: org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r4 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dhKeyAgreement>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r5 = new org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        specialinvoke $r5.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: void <init>(org.spongycastle.asn1.pkcs.PrivateKeyInfo)>($r1);

        return $r5;

     label1:
        $r4 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dhpublicnumber>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = new org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey;

        specialinvoke $r5.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: void <init>(org.spongycastle.asn1.pkcs.PrivateKeyInfo)>($r1);

        return $r5;

     label2:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("algorithm identifier ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in key not recognised");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r6;
    }
    public java.security.PublicKey generatePublic(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3, $r4;
        boolean $z0;
        org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey $r5;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        r0 := @this: org.spongycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi;

        $r1 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r4 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dhKeyAgreement>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r5 = new org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey;

        specialinvoke $r5.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r1);

        return $r5;

     label1:
        $r4 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dhpublicnumber>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = new org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey;

        specialinvoke $r5.<org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r1);

        return $r5;

     label2:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("algorithm identifier ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in key not recognised");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r6;
    }
