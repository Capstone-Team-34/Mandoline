org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry extends java.lang.Object
java.lang.String alias
java.security.cert.Certificate[] certChain
java.util.Date date
java.lang.Object obj
final org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0
int type
    void <init>(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi, java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) throws java.lang.Exception
    {
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r0;
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi $r1;
        java.lang.String $r2;
        java.security.Key $r3;
        char[] $r4;
        java.security.cert.Certificate[] $r5;
        byte[] r6;
        int i0, $i2;
        java.io.ByteArrayOutputStream r7;
        javax.crypto.CipherOutputStream r8;
        java.util.Date $r9;
        java.security.SecureRandom $r10;
        long $l1;
        java.io.DataOutputStream r11;
        javax.crypto.Cipher $r12;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        $r1 := @parameter0: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.security.Key;

        $r4 := @parameter3: char[];

        $r5 := @parameter4: java.security.cert.Certificate[];

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r9 = new java.util.Date;

        specialinvoke $r9.<java.util.Date: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.util.Date date> = $r9;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int type> = 4;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.String alias> = $r2;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.security.cert.Certificate[] certChain> = $r5;

        r6 = newarray (byte)[20];

        $r10 = $r1.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.SecureRandom random>;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r10.<java.security.SecureRandom: void setSeed(long)>($l1);

        $r10 = $r1.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.SecureRandom random>;

        virtualinvoke $r10.<java.security.SecureRandom: void nextBytes(byte[])>(r6);

        $r10 = $r1.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.SecureRandom random>;

        i0 = virtualinvoke $r10.<java.security.SecureRandom: int nextInt()>();

        i0 = i0 & 1023;

        i0 = i0 + 1024;

        r7 = new java.io.ByteArrayOutputStream;

        specialinvoke r7.<java.io.ByteArrayOutputStream: void <init>()>();

        r11 = new java.io.DataOutputStream;

        specialinvoke r11.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r7);

        $i2 = lengthof r6;

        virtualinvoke r11.<java.io.DataOutputStream: void writeInt(int)>($i2);

        virtualinvoke r11.<java.io.DataOutputStream: void write(byte[])>(r6);

        virtualinvoke r11.<java.io.DataOutputStream: void writeInt(int)>(i0);

        $r12 = virtualinvoke $r1.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: javax.crypto.Cipher makePBECipher(java.lang.String,int,char[],byte[],int)>("PBEWithSHAAnd3-KeyTripleDES-CBC", 1, $r4, r6, i0);

        r8 = new javax.crypto.CipherOutputStream;

        specialinvoke r8.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r11, $r12);

        r11 = new java.io.DataOutputStream;

        specialinvoke r11.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r8);

        staticinvoke <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void access$000(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.security.Key,java.io.DataOutputStream)>($r1, $r3, r11);

        virtualinvoke r11.<java.io.DataOutputStream: void close()>();

        r6 = virtualinvoke r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object obj> = r6;

        return;
    }
    void <init>(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi, java.lang.String, java.security.cert.Certificate)
    {
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r0;
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi $r1;
        java.lang.String $r2;
        java.security.cert.Certificate $r3;
        java.util.Date $r4;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        $r1 := @parameter0: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.security.cert.Certificate;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.util.Date date> = $r4;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int type> = 1;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.String alias> = $r2;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object obj> = $r3;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.security.cert.Certificate[] certChain> = null;

        return;
    }
    void <init>(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi, java.lang.String, java.util.Date, int, java.lang.Object)
    {
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r0;
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi $r1;
        java.lang.String $r2;
        java.util.Date $r3, $r5;
        int $i0;
        java.lang.Object $r4;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        $r1 := @parameter0: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Date;

        $i0 := @parameter3: int;

        $r4 := @parameter4: java.lang.Object;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.Date;

        specialinvoke $r5.<java.util.Date: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.util.Date date> = $r5;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.String alias> = $r2;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.util.Date date> = $r3;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int type> = $i0;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object obj> = $r4;

        return;
    }
    void <init>(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi, java.lang.String, java.util.Date, int, java.lang.Object, java.security.cert.Certificate[])
    {
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r0;
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi $r1;
        java.lang.String $r2;
        java.util.Date $r3, $r6;
        int $i0;
        java.lang.Object $r4;
        java.security.cert.Certificate[] $r5;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        $r1 := @parameter0: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Date;

        $i0 := @parameter3: int;

        $r4 := @parameter4: java.lang.Object;

        $r5 := @parameter5: java.security.cert.Certificate[];

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new java.util.Date;

        specialinvoke $r6.<java.util.Date: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.util.Date date> = $r6;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.String alias> = $r2;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.util.Date date> = $r3;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int type> = $i0;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object obj> = $r4;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.security.cert.Certificate[] certChain> = $r5;

        return;
    }
    void <init>(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi, java.lang.String, byte[], java.security.cert.Certificate[])
    {
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r0;
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi $r1;
        java.lang.String $r2;
        byte[] $r3;
        java.security.cert.Certificate[] $r4;
        java.util.Date $r5;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        $r1 := @parameter0: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: byte[];

        $r4 := @parameter3: java.security.cert.Certificate[];

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.Date;

        specialinvoke $r5.<java.util.Date: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.util.Date date> = $r5;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int type> = 3;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.String alias> = $r2;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object obj> = $r3;

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.security.cert.Certificate[] certChain> = $r4;

        return;
    }
    java.lang.String getAlias()
    {
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r0;
        java.lang.String r1;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        r1 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.String alias>;

        return r1;
    }
    java.security.cert.Certificate[] getCertificateChain()
    {
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r0;
        java.security.cert.Certificate[] r1;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        r1 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.security.cert.Certificate[] certChain>;

        return r1;
    }
    java.util.Date getDate()
    {
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r0;
        java.util.Date r1;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        r1 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.util.Date date>;

        return r1;
    }
    java.lang.Object getObject()
    {
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r0;
        java.lang.Object r1;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        r1 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object obj>;

        return r1;
    }
    java.lang.Object getObject(char[]) throws java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException
    {
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r0;
        char[] $r1;
        java.io.ByteArrayInputStream r2;
        java.io.ByteArrayOutputStream r3;
        javax.crypto.CipherOutputStream r4;
        java.io.DataInputStream r5;
        java.lang.Exception r6, r7, r15, r18, r19, r20;
        int $i0, $i1;
        java.lang.Object $r8;
        boolean $z0;
        byte[] $r9;
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi $r10;
        javax.crypto.Cipher $r11;
        javax.crypto.CipherInputStream r12;
        java.security.Key $r13;
        java.io.DataOutputStream r14;
        java.security.UnrecoverableKeyException $r16;
        java.lang.RuntimeException $r17;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        $r1 := @parameter0: char[];

        if $r1 == null goto label01;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label02;

     label01:
        $r8 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object obj>;

        $z0 = $r8 instanceof java.security.Key;

        if $z0 == 0 goto label02;

        $r8 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object obj>;

        return $r8;

     label02:
        $i0 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int type>;

        if $i0 != 4 goto label49;

        r2 = new java.io.ByteArrayInputStream;

        $r8 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object obj>;

        $r9 = (byte[]) $r8;

        specialinvoke r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9);

        r5 = new java.io.DataInputStream;

        specialinvoke r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2);

     label03:
        $i0 = virtualinvoke r5.<java.io.DataInputStream: int readInt()>();

        $r9 = newarray (byte)[$i0];

        virtualinvoke r5.<java.io.DataInputStream: void readFully(byte[])>($r9);

        $i0 = virtualinvoke r5.<java.io.DataInputStream: int readInt()>();

        $r10 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0>;

        $r11 = virtualinvoke $r10.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: javax.crypto.Cipher makePBECipher(java.lang.String,int,char[],byte[],int)>("PBEWithSHAAnd3-KeyTripleDES-CBC", 2, $r1, $r9, $i0);

     label04:
        r12 = new javax.crypto.CipherInputStream;

     label05:
        specialinvoke r12.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r5, $r11);

     label06:
        $r10 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0>;

     label07:
        r5 = new java.io.DataInputStream;

     label08:
        specialinvoke r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r12);

        $r13 = staticinvoke <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.Key access$100(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.io.DataInputStream)>($r10, r5);

     label09:
        return $r13;

     label10:
        r6 := @caughtexception;

        r2 = new java.io.ByteArrayInputStream;

     label11:
        $r8 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object obj>;

        $r9 = (byte[]) $r8;

     label12:
        specialinvoke r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9);

     label13:
        r5 = new java.io.DataInputStream;

     label14:
        specialinvoke r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2);

     label15:
        $i0 = virtualinvoke r5.<java.io.DataInputStream: int readInt()>();

        $r9 = newarray (byte)[$i0];

        virtualinvoke r5.<java.io.DataInputStream: void readFully(byte[])>($r9);

        $i1 = virtualinvoke r5.<java.io.DataInputStream: int readInt()>();

     label16:
        $i0 = $i1;

     label17:
        $r10 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0>;

        $r11 = virtualinvoke $r10.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: javax.crypto.Cipher makePBECipher(java.lang.String,int,char[],byte[],int)>("BrokenPBEWithSHAAnd3-KeyTripleDES-CBC", 2, $r1, $r9, $i1);

     label18:
        r12 = new javax.crypto.CipherInputStream;

     label19:
        specialinvoke r12.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r5, $r11);

     label20:
        $r10 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0>;

     label21:
        r5 = new java.io.DataInputStream;

     label22:
        specialinvoke r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r12);

        $r13 = staticinvoke <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.Key access$100(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.io.DataInputStream)>($r10, r5);

     label23:
        if $r13 == null goto label47;

        r3 = new java.io.ByteArrayOutputStream;

     label24:
        specialinvoke r3.<java.io.ByteArrayOutputStream: void <init>()>();

     label25:
        r14 = new java.io.DataOutputStream;

     label26:
        specialinvoke r14.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r3);

        $i1 = lengthof $r9;

        virtualinvoke r14.<java.io.DataOutputStream: void writeInt(int)>($i1);

        virtualinvoke r14.<java.io.DataOutputStream: void write(byte[])>($r9);

        virtualinvoke r14.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $r10 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0>;

        $r11 = virtualinvoke $r10.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: javax.crypto.Cipher makePBECipher(java.lang.String,int,char[],byte[],int)>("PBEWithSHAAnd3-KeyTripleDES-CBC", 1, $r1, $r9, $i0);

     label27:
        r4 = new javax.crypto.CipherOutputStream;

     label28:
        specialinvoke r4.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r14, $r11);

     label29:
        r14 = new java.io.DataOutputStream;

     label30:
        specialinvoke r14.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r4);

        $r10 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0>;

        staticinvoke <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void access$000(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.security.Key,java.io.DataOutputStream)>($r10, $r13, r14);

        virtualinvoke r14.<java.io.DataOutputStream: void close()>();

        $r9 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object obj> = $r9;

     label31:
        return $r13;

     label32:
        r15 := @caughtexception;

     label33:
        $r16 = new java.security.UnrecoverableKeyException;

        specialinvoke $r16.<java.security.UnrecoverableKeyException: void <init>(java.lang.String)>("no match");

        throw $r16;

     label34:
        r7 := @caughtexception;

        r2 = new java.io.ByteArrayInputStream;

     label35:
        $r8 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object obj>;

        $r9 = (byte[]) $r8;

     label36:
        specialinvoke r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9);

     label37:
        r5 = new java.io.DataInputStream;

     label38:
        specialinvoke r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2);

     label39:
        $i0 = virtualinvoke r5.<java.io.DataInputStream: int readInt()>();

        $r9 = newarray (byte)[$i0];

        virtualinvoke r5.<java.io.DataInputStream: void readFully(byte[])>($r9);

        $i1 = virtualinvoke r5.<java.io.DataInputStream: int readInt()>();

     label40:
        $i0 = $i1;

     label41:
        $r10 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0>;

        $r11 = virtualinvoke $r10.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: javax.crypto.Cipher makePBECipher(java.lang.String,int,char[],byte[],int)>("OldPBEWithSHAAnd3-KeyTripleDES-CBC", 2, $r1, $r9, $i1);

     label42:
        r12 = new javax.crypto.CipherInputStream;

     label43:
        specialinvoke r12.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r5, $r11);

        $r10 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi this$0>;

     label44:
        r5 = new java.io.DataInputStream;

     label45:
        specialinvoke r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r12);

        $r13 = staticinvoke <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: java.security.Key access$100(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.io.DataInputStream)>($r10, r5);

     label46:
        goto label23;

     label47:
        $r16 = new java.security.UnrecoverableKeyException;

     label48:
        specialinvoke $r16.<java.security.UnrecoverableKeyException: void <init>(java.lang.String)>("no match");

        throw $r16;

     label49:
        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>("forget something!");

        throw $r17;

     label50:
        r18 := @caughtexception;

        goto label33;

     label51:
        r19 := @caughtexception;

        goto label33;

     label52:
        r20 := @caughtexception;

        goto label33;

        catch java.lang.Exception from label03 to label04 with label32;
        catch java.lang.Exception from label05 to label06 with label32;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label11 to label12 with label32;
        catch java.lang.Exception from label12 to label13 with label32;
        catch java.lang.Exception from label14 to label15 with label50;
        catch java.lang.Exception from label15 to label16 with label51;
        catch java.lang.Exception from label17 to label18 with label51;
        catch java.lang.Exception from label19 to label20 with label51;
        catch java.lang.Exception from label20 to label21 with label34;
        catch java.lang.Exception from label22 to label23 with label34;
        catch java.lang.Exception from label24 to label25 with label32;
        catch java.lang.Exception from label26 to label27 with label32;
        catch java.lang.Exception from label28 to label29 with label32;
        catch java.lang.Exception from label30 to label31 with label32;
        catch java.lang.Exception from label35 to label36 with label51;
        catch java.lang.Exception from label36 to label37 with label51;
        catch java.lang.Exception from label38 to label39 with label52;
        catch java.lang.Exception from label39 to label40 with label32;
        catch java.lang.Exception from label41 to label42 with label32;
        catch java.lang.Exception from label43 to label44 with label32;
        catch java.lang.Exception from label45 to label46 with label32;
        catch java.lang.Exception from label48 to label49 with label32;
    }
    int getType()
    {
        org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry r0;
        int i0;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry;

        i0 = r0.<org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: int type>;

        return i0;
    }
