org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi extends java.security.KeyStoreSpi implements org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers org.spongycastle.asn1.x509.X509ObjectIdentifiers org.spongycastle.jce.interfaces.BCKeyStore
static final int CERTIFICATE
static final int KEY
static final int KEY_PRIVATE
static final int KEY_PUBLIC
static final int KEY_SECRET
private static final int MIN_ITERATIONS
static final int NULL
private static final int SALT_SIZE
static final int SEALED
static final int SECRET
private static final org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefaultSecretKeyProvider keySizeProvider
private org.spongycastle.asn1.ASN1ObjectIdentifier certAlgorithm
private java.security.cert.CertificateFactory certFact
private org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs
private java.util.Hashtable chainCerts
private final org.spongycastle.jcajce.util.JcaJceHelper helper
private org.spongycastle.asn1.ASN1ObjectIdentifier keyAlgorithm
private java.util.Hashtable keyCerts
private org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys
private java.util.Hashtable localIds
protected java.security.SecureRandom random
    static void <clinit>()
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefaultSecretKeyProvider $r0;

        $r0 = new org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefaultSecretKeyProvider;

        specialinvoke $r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefaultSecretKeyProvider: void <init>()>();

        <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefaultSecretKeyProvider keySizeProvider> = $r0;

        return;
    }
    public void <init>(java.security.Provider, org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.security.Provider $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2, $r3;
        java.lang.Exception r4;
        org.spongycastle.jcajce.util.BCJcaJceHelper $r5;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r6;
        java.util.Hashtable $r7;
        java.security.SecureRandom $r8;
        java.security.cert.CertificateFactory $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.security.Provider;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 := @parameter2: org.spongycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke r0.<java.security.KeyStoreSpi: void <init>()>();

        $r5 = new org.spongycastle.jcajce.util.BCJcaJceHelper;

        specialinvoke $r5.<org.spongycastle.jcajce.util.BCJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r5;

        $r6 = new org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable;

        specialinvoke $r6.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void <init>(org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$1)>(null);

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys> = $r6;

        $r7 = new java.util.Hashtable;

        specialinvoke $r7.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable localIds> = $r7;

        $r6 = new org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable;

        specialinvoke $r6.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void <init>(org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$1)>(null);

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs> = $r6;

        $r7 = new java.util.Hashtable;

        specialinvoke $r7.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable chainCerts> = $r7;

        $r7 = new java.util.Hashtable;

        specialinvoke $r7.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable keyCerts> = $r7;

        $r8 = new java.security.SecureRandom;

        specialinvoke $r8.<java.security.SecureRandom: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.SecureRandom random> = $r8;

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier keyAlgorithm> = $r2;

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier certAlgorithm> = $r3;

        if $r1 == null goto label3;

     label1:
        $r9 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.security.Provider)>("X.509", $r1);

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.cert.CertificateFactory certFact> = $r9;

     label2:
        return;

     label3:
        $r9 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.cert.CertificateFactory certFact> = $r9;

     label4:
        return;

     label5:
        r4 := @caughtexception;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t create cert factory - ");

        $r12 = virtualinvoke r4.<java.lang.Exception: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    static org.spongycastle.asn1.x509.SubjectKeyIdentifier access$100(org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi, java.security.PublicKey)
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi $r0;
        java.security.PublicKey $r1;
        org.spongycastle.asn1.x509.SubjectKeyIdentifier $r2;

        $r0 := @parameter0: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter1: java.security.PublicKey;

        $r2 = specialinvoke $r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)>($r1);

        return $r2;
    }
    private byte[] calculatePbeMac(org.spongycastle.asn1.ASN1ObjectIdentifier, byte[], int, char[], boolean, byte[]) throws java.lang.Exception
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        byte[] $r2, $r4;
        int $i0;
        char[] $r3;
        boolean $z0;
        javax.crypto.spec.PBEParameterSpec r5;
        org.spongycastle.jcajce.util.JcaJceHelper $r6;
        java.lang.String $r7;
        javax.crypto.Mac $r8;
        org.spongycastle.jcajce.PKCS12Key $r9;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $r3 := @parameter3: char[];

        $z0 := @parameter4: boolean;

        $r4 := @parameter5: byte[];

        r5 = new javax.crypto.spec.PBEParameterSpec;

        specialinvoke r5.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, $i0);

        $r6 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        $r7 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r8 = interfaceinvoke $r6.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.Mac createMac(java.lang.String)>($r7);

        $r9 = new org.spongycastle.jcajce.PKCS12Key;

        specialinvoke $r9.<org.spongycastle.jcajce.PKCS12Key: void <init>(char[],boolean)>($r3, $z0);

        virtualinvoke $r8.<javax.crypto.Mac: void init(java.security.Key,java.security.spec.AlgorithmParameterSpec)>($r9, r5);

        virtualinvoke $r8.<javax.crypto.Mac: void update(byte[])>($r4);

        $r2 = virtualinvoke $r8.<javax.crypto.Mac: byte[] doFinal()>();

        return $r2;
    }
    private javax.crypto.Cipher createCipher(int, char[], org.spongycastle.asn1.x509.AlgorithmIdentifier) throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException, java.security.NoSuchProviderException
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        int $i0, $i1, $i2;
        char[] $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.pkcs.PBES2Parameters $r4;
        org.spongycastle.asn1.pkcs.KeyDerivationFunc $r5;
        org.spongycastle.asn1.pkcs.PBKDF2Params $r6;
        org.spongycastle.asn1.pkcs.EncryptionScheme $r7;
        org.spongycastle.jcajce.util.JcaJceHelper $r8;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r9;
        java.lang.String $r10;
        javax.crypto.SecretKeyFactory $r11;
        boolean $z0;
        javax.crypto.spec.PBEKeySpec $r12;
        byte[] $r13;
        java.math.BigInteger $r14;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefaultSecretKeyProvider $r15;
        javax.crypto.SecretKey $r16;
        javax.crypto.Cipher $r17;
        javax.crypto.spec.IvParameterSpec $r18;
        org.spongycastle.asn1.ASN1OctetString $r19;
        org.spongycastle.jcajce.spec.PBKDF2KeySpec $r20;
        org.spongycastle.asn1.cryptopro.GOST28147Parameters $r21;
        org.spongycastle.jcajce.spec.GOST28147ParameterSpec $r22;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $i0 := @parameter0: int;

        $r1 := @parameter1: char[];

        $r2 := @parameter2: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r4 = staticinvoke <org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.PBES2Parameters getInstance(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.KeyDerivationFunc getKeyDerivationFunc()>();

        $r3 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.KeyDerivationFunc: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r6 = staticinvoke <org.spongycastle.asn1.pkcs.PBKDF2Params: org.spongycastle.asn1.pkcs.PBKDF2Params getInstance(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.EncryptionScheme getEncryptionScheme()>();

        $r2 = staticinvoke <org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)>($r7);

        $r8 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.KeyDerivationFunc getKeyDerivationFunc()>();

        $r9 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.KeyDerivationFunc: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r10 = virtualinvoke $r9.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r11 = interfaceinvoke $r8.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.SecretKeyFactory createSecretKeyFactory(java.lang.String)>($r10);

        $z0 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.PBKDF2Params: boolean isDefaultPrf()>();

        if $z0 == 0 goto label2;

        $r12 = new javax.crypto.spec.PBEKeySpec;

        $r13 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.PBKDF2Params: byte[] getSalt()>();

        $r14 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.PBKDF2Params: java.math.BigInteger getIterationCount()>();

        $i1 = virtualinvoke $r14.<java.math.BigInteger: int intValue()>();

        $r15 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefaultSecretKeyProvider keySizeProvider>;

        $i2 = virtualinvoke $r15.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefaultSecretKeyProvider: int getKeySize(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r2);

        specialinvoke $r12.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r13, $i1, $i2);

        $r16 = virtualinvoke $r11.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r12);

     label1:
        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.EncryptionScheme getEncryptionScheme()>();

        $r9 = virtualinvoke $r7.<org.spongycastle.asn1.pkcs.EncryptionScheme: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r10 = virtualinvoke $r9.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r10);

        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.EncryptionScheme getEncryptionScheme()>();

        staticinvoke <org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)>($r7);

        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.EncryptionScheme getEncryptionScheme()>();

        $r3 = virtualinvoke $r7.<org.spongycastle.asn1.pkcs.EncryptionScheme: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $z0 = $r3 instanceof org.spongycastle.asn1.ASN1OctetString;

        if $z0 == 0 goto label3;

        $r18 = new javax.crypto.spec.IvParameterSpec;

        $r19 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r3);

        $r13 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r18.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13);

        virtualinvoke $r17.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r16, $r18);

        return $r17;

     label2:
        $r20 = new org.spongycastle.jcajce.spec.PBKDF2KeySpec;

        $r13 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.PBKDF2Params: byte[] getSalt()>();

        $r14 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.PBKDF2Params: java.math.BigInteger getIterationCount()>();

        $i1 = virtualinvoke $r14.<java.math.BigInteger: int intValue()>();

        $r15 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefaultSecretKeyProvider keySizeProvider>;

        $i2 = virtualinvoke $r15.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$DefaultSecretKeyProvider: int getKeySize(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r2);

        $r2 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.PBKDF2Params: org.spongycastle.asn1.x509.AlgorithmIdentifier getPrf()>();

        specialinvoke $r20.<org.spongycastle.jcajce.spec.PBKDF2KeySpec: void <init>(char[],byte[],int,int,org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r1, $r13, $i1, $i2, $r2);

        $r16 = virtualinvoke $r11.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r20);

        goto label1;

     label3:
        $r21 = staticinvoke <org.spongycastle.asn1.cryptopro.GOST28147Parameters: org.spongycastle.asn1.cryptopro.GOST28147Parameters getInstance(java.lang.Object)>($r3);

        $r22 = new org.spongycastle.jcajce.spec.GOST28147ParameterSpec;

        $r9 = virtualinvoke $r21.<org.spongycastle.asn1.cryptopro.GOST28147Parameters: org.spongycastle.asn1.ASN1ObjectIdentifier getEncryptionParamSet()>();

        $r13 = virtualinvoke $r21.<org.spongycastle.asn1.cryptopro.GOST28147Parameters: byte[] getIV()>();

        specialinvoke $r22.<org.spongycastle.jcajce.spec.GOST28147ParameterSpec: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[])>($r9, $r13);

        virtualinvoke $r17.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r16, $r22);

        return $r17;
    }
    private org.spongycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.security.PublicKey $r1;
        java.lang.Exception r2;
        byte[] $r3;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r4;
        org.spongycastle.asn1.x509.SubjectKeyIdentifier $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.security.PublicKey;

     label1:
        $r3 = interfaceinvoke $r1.<java.security.PublicKey: byte[] getEncoded()>();

        $r4 = staticinvoke <org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r3);

     label2:
        $r5 = new org.spongycastle.asn1.x509.SubjectKeyIdentifier;

     label3:
        $r3 = staticinvoke <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: byte[] getDigest(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r4);

        specialinvoke $r5.<org.spongycastle.asn1.x509.SubjectKeyIdentifier: void <init>(byte[])>($r3);

     label4:
        return $r5;

     label5:
        r2 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("error creating key");

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    private void doStore(java.io.OutputStream, char[], boolean) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.io.OutputStream $r1;
        char[] $r2;
        boolean $z0, $z1, $z2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r3, $r54;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r4, $r40;
        byte[] r5, $r49;
        org.spongycastle.asn1.ASN1EncodableVector r9, r14, r33, $r57;
        java.util.Hashtable r11, $r43;
        org.spongycastle.asn1.BEROctetString r15, $r46, $r65;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r18;
        java.util.Enumeration $r19, $r32;
        java.security.SecureRandom $r20;
        java.lang.Object $r21;
        java.lang.String r22, $r24;
        java.security.PrivateKey r23;
        org.spongycastle.asn1.ASN1Primitive $r25;
        org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier r26;
        org.spongycastle.asn1.ASN1Encodable $r27;
        org.spongycastle.asn1.DERBMPString r28, $r56;
        java.security.cert.Certificate $r29;
        java.security.PublicKey $r30;
        org.spongycastle.asn1.x509.SubjectKeyIdentifier $r31;
        org.spongycastle.asn1.pkcs.CertBag r36, $r62;
        java.security.cert.CertificateEncodingException r38, r41, r45;
        java.lang.StringBuilder $r39, $r63;
        java.util.Set $r42;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId r44;
        org.spongycastle.asn1.pkcs.ContentInfo[] $r47;
        org.spongycastle.asn1.ASN1OctetString $r48;
        org.spongycastle.asn1.DERNull $r50;
        java.lang.Exception r51;
        java.lang.NullPointerException $r52;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r53;
        org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo $r55;
        org.spongycastle.asn1.DERSet $r58;
        org.spongycastle.asn1.DERSequence $r59;
        org.spongycastle.asn1.pkcs.SafeBag $r60;
        org.spongycastle.asn1.DEROctetString $r61;
        java.io.IOException $r64;
        org.spongycastle.asn1.pkcs.EncryptedData $r66;
        org.spongycastle.asn1.pkcs.ContentInfo $r67;
        org.spongycastle.asn1.pkcs.AuthenticatedSafe $r68;
        java.io.ByteArrayOutputStream $r69;
        org.spongycastle.asn1.DEROutputStream $r70;
        org.spongycastle.asn1.x509.DigestInfo $r71;
        org.spongycastle.asn1.pkcs.MacData $r72;
        org.spongycastle.asn1.pkcs.Pfx $r73;
        org.spongycastle.asn1.BEROutputStream $r74;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: char[];

        $z0 := @parameter2: boolean;

        if $r2 != null goto label001;

        $r52 = new java.lang.NullPointerException;

        specialinvoke $r52.<java.lang.NullPointerException: void <init>(java.lang.String)>("No password supplied for PKCS#12 KeyStore.");

        throw $r52;

     label001:
        r14 = new org.spongycastle.asn1.ASN1EncodableVector;

        r9 = r14;

        specialinvoke r14.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r18 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r19 = virtualinvoke $r18.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.util.Enumeration keys()>();

     label002:
        $z1 = interfaceinvoke $r19.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label009;

        r5 = newarray (byte)[20];

        $r20 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.SecureRandom random>;

        virtualinvoke $r20.<java.security.SecureRandom: void nextBytes(byte[])>(r5);

        $r21 = interfaceinvoke $r19.<java.util.Enumeration: java.lang.Object nextElement()>();

        r22 = (java.lang.String) $r21;

        $r18 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r21 = virtualinvoke $r18.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>(r22);

        r23 = (java.security.PrivateKey) $r21;

        $r53 = new org.spongycastle.asn1.pkcs.PKCS12PBEParams;

        specialinvoke $r53.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: void <init>(byte[],int)>(r5, 1024);

        $r4 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier keyAlgorithm>;

        $r24 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        r5 = virtualinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: byte[] wrapKey(java.lang.String,java.security.Key,org.spongycastle.asn1.pkcs.PKCS12PBEParams,char[])>($r24, r23, $r53, $r2);

        $r54 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r4 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier keyAlgorithm>;

        $r25 = virtualinvoke $r53.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        specialinvoke $r54.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r25);

        $r55 = new org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo;

        specialinvoke $r55.<org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r54, r5);

        $z1 = 0;

        r33 = new org.spongycastle.asn1.ASN1EncodableVector;

        r14 = r33;

        specialinvoke r33.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $z2 = r23 instanceof org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier;

        if $z2 == 0 goto label007;

        r26 = (org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier) r23;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName>;

        $r27 = interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

        r28 = (org.spongycastle.asn1.DERBMPString) $r27;

        if r28 == null goto label003;

        $r24 = virtualinvoke r28.<org.spongycastle.asn1.DERBMPString: java.lang.String getString()>();

        $z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r22);

        if $z2 != 0 goto label004;

     label003:
        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName>;

        $r56 = new org.spongycastle.asn1.DERBMPString;

        specialinvoke $r56.<org.spongycastle.asn1.DERBMPString: void <init>(java.lang.String)>(r22);

        interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r56);

     label004:
        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_localKeyId>;

        $r27 = interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

        if $r27 != null goto label005;

        $r29 = virtualinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.cert.Certificate engineGetCertificate(java.lang.String)>(r22);

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_localKeyId>;

        $r30 = virtualinvoke $r29.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r31 = specialinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)>($r30);

        interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r31);

     label005:
        $r32 = interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: java.util.Enumeration getBagAttributeKeys()>();

     label006:
        $z2 = interfaceinvoke $r32.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 == 0 goto label007;

        $r21 = interfaceinvoke $r32.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r21;

        $r57 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r58 = new org.spongycastle.asn1.DERSet;

        $r27 = interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

        specialinvoke $r58.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r27);

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r58);

        $z1 = 1;

        $r59 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r59.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r57);

        virtualinvoke r14.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r59);

        goto label006;

     label007:
        if $z1 != 0 goto label008;

        $r57 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r29 = virtualinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.cert.Certificate engineGetCertificate(java.lang.String)>(r22);

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_localKeyId>;

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r58 = new org.spongycastle.asn1.DERSet;

        $r30 = virtualinvoke $r29.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r31 = specialinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)>($r30);

        specialinvoke $r58.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r31);

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r58);

        $r59 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r59.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r57);

        virtualinvoke r14.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r59);

        $r57 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName>;

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r58 = new org.spongycastle.asn1.DERSet;

        $r56 = new org.spongycastle.asn1.DERBMPString;

        specialinvoke $r56.<org.spongycastle.asn1.DERBMPString: void <init>(java.lang.String)>(r22);

        specialinvoke $r58.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r56);

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r58);

        $r59 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r59.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r57);

        virtualinvoke r14.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r59);

     label008:
        $r60 = new org.spongycastle.asn1.pkcs.SafeBag;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs8ShroudedKeyBag>;

        $r25 = virtualinvoke $r55.<org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r58 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r58.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r14);

        specialinvoke $r60.<org.spongycastle.asn1.pkcs.SafeBag: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable,org.spongycastle.asn1.ASN1Set)>($r4, $r25, $r58);

        virtualinvoke r9.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r60);

        goto label002;

     label009:
        $r59 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r59.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r9);

        r5 = virtualinvoke $r59.<org.spongycastle.asn1.DERSequence: byte[] getEncoded(java.lang.String)>("DER");

        $r46 = new org.spongycastle.asn1.BEROctetString;

        r15 = $r46;

        specialinvoke $r46.<org.spongycastle.asn1.BEROctetString: void <init>(byte[])>(r5);

        r5 = newarray (byte)[20];

        $r20 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.SecureRandom random>;

        virtualinvoke $r20.<java.security.SecureRandom: void nextBytes(byte[])>(r5);

        r14 = new org.spongycastle.asn1.ASN1EncodableVector;

        r9 = r14;

        specialinvoke r14.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r53 = new org.spongycastle.asn1.pkcs.PKCS12PBEParams;

        specialinvoke $r53.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: void <init>(byte[],int)>(r5, 1024);

        $r54 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        r3 = $r54;

        $r4 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier certAlgorithm>;

        $r25 = virtualinvoke $r53.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        specialinvoke $r54.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r25);

        $r43 = new java.util.Hashtable;

        r11 = $r43;

        specialinvoke $r43.<java.util.Hashtable: void <init>()>();

        $r18 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r19 = virtualinvoke $r18.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.util.Enumeration keys()>();

     label010:
        $z1 = interfaceinvoke $r19.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label062;

     label011:
        $r21 = interfaceinvoke $r19.<java.util.Enumeration: java.lang.Object nextElement()>();

     label012:
        r22 = (java.lang.String) $r21;

     label013:
        $r29 = virtualinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.cert.Certificate engineGetCertificate(java.lang.String)>(r22);

     label014:
        $z1 = 0;

        $r62 = new org.spongycastle.asn1.pkcs.CertBag;

        r36 = $r62;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier x509Certificate>;

        $r61 = new org.spongycastle.asn1.DEROctetString;

     label015:
        r5 = virtualinvoke $r29.<java.security.cert.Certificate: byte[] getEncoded()>();

        specialinvoke $r61.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>(r5);

        specialinvoke $r62.<org.spongycastle.asn1.pkcs.CertBag: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r61);

     label016:
        r33 = new org.spongycastle.asn1.ASN1EncodableVector;

        r14 = r33;

     label017:
        specialinvoke r33.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

     label018:
        $z2 = $r29 instanceof org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier;

        if $z2 == 0 goto label040;

        r26 = (org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier) $r29;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName>;

     label019:
        $r27 = interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

     label020:
        r28 = (org.spongycastle.asn1.DERBMPString) $r27;

        if r28 == null goto label023;

     label021:
        $r24 = virtualinvoke r28.<org.spongycastle.asn1.DERBMPString: java.lang.String getString()>();

        $z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r22);

     label022:
        if $z2 != 0 goto label025;

     label023:
        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName>;

        $r56 = new org.spongycastle.asn1.DERBMPString;

     label024:
        specialinvoke $r56.<org.spongycastle.asn1.DERBMPString: void <init>(java.lang.String)>(r22);

        interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r56);

     label025:
        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_localKeyId>;

     label026:
        $r27 = interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

     label027:
        if $r27 != null goto label029;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_localKeyId>;

     label028:
        $r30 = virtualinvoke $r29.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r31 = specialinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)>($r30);

        interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r31);

     label029:
        $r32 = interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: java.util.Enumeration getBagAttributeKeys()>();

     label030:
        $z2 = interfaceinvoke $r32.<java.util.Enumeration: boolean hasMoreElements()>();

     label031:
        if $z2 == 0 goto label040;

     label032:
        $r21 = interfaceinvoke $r32.<java.util.Enumeration: java.lang.Object nextElement()>();

     label033:
        $r4 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r21;

        $r57 = new org.spongycastle.asn1.ASN1EncodableVector;

     label034:
        specialinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

     label035:
        $r58 = new org.spongycastle.asn1.DERSet;

     label036:
        $r27 = interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

        specialinvoke $r58.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r27);

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r58);

     label037:
        $r59 = new org.spongycastle.asn1.DERSequence;

     label038:
        specialinvoke $r59.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r57);

        virtualinvoke r14.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r59);

     label039:
        $z1 = 1;

        goto label030;

     label040:
        if $z1 != 0 goto label056;

        $r57 = new org.spongycastle.asn1.ASN1EncodableVector;

     label041:
        specialinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

     label042:
        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_localKeyId>;

     label043:
        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

     label044:
        $r58 = new org.spongycastle.asn1.DERSet;

     label045:
        $r30 = virtualinvoke $r29.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r31 = specialinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)>($r30);

        specialinvoke $r58.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r31);

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r58);

     label046:
        $r59 = new org.spongycastle.asn1.DERSequence;

     label047:
        specialinvoke $r59.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r57);

        virtualinvoke r14.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r59);

     label048:
        $r57 = new org.spongycastle.asn1.ASN1EncodableVector;

     label049:
        specialinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

     label050:
        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName>;

     label051:
        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

     label052:
        $r58 = new org.spongycastle.asn1.DERSet;

        $r56 = new org.spongycastle.asn1.DERBMPString;

     label053:
        specialinvoke $r56.<org.spongycastle.asn1.DERBMPString: void <init>(java.lang.String)>(r22);

        specialinvoke $r58.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r56);

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r58);

     label054:
        $r59 = new org.spongycastle.asn1.DERSequence;

     label055:
        specialinvoke $r59.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r57);

        virtualinvoke r14.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r59);

     label056:
        $r60 = new org.spongycastle.asn1.pkcs.SafeBag;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier certBag>;

     label057:
        $r25 = virtualinvoke r36.<org.spongycastle.asn1.pkcs.CertBag: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

     label058:
        $r58 = new org.spongycastle.asn1.DERSet;

     label059:
        specialinvoke $r58.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r14);

        specialinvoke $r60.<org.spongycastle.asn1.pkcs.SafeBag: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable,org.spongycastle.asn1.ASN1Set)>($r4, $r25, $r58);

        virtualinvoke r9.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r60);

        virtualinvoke r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r29);

     label060:
        goto label010;

     label061:
        r38 := @caughtexception;

        $r64 = new java.io.IOException;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error encoding certificate: ");

        r22 = virtualinvoke r38.<java.security.cert.CertificateEncodingException: java.lang.String toString()>();

        $r39 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        r22 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r64.<java.io.IOException: void <init>(java.lang.String)>(r22);

        throw $r64;

     label062:
        $r18 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        $r19 = virtualinvoke $r18.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.util.Enumeration keys()>();

     label063:
        $z1 = interfaceinvoke $r19.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label107;

     label064:
        $r21 = interfaceinvoke $r19.<java.util.Enumeration: java.lang.Object nextElement()>();

     label065:
        r22 = (java.lang.String) $r21;

        $r18 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

     label066:
        $r21 = virtualinvoke $r18.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>(r22);

     label067:
        $r29 = (java.security.cert.Certificate) $r21;

        $z1 = 0;

        $r18 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

     label068:
        $r21 = virtualinvoke $r18.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>(r22);

     label069:
        if $r21 != null goto label063;

        $r62 = new org.spongycastle.asn1.pkcs.CertBag;

        r36 = $r62;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier x509Certificate>;

        $r61 = new org.spongycastle.asn1.DEROctetString;

     label070:
        r5 = virtualinvoke $r29.<java.security.cert.Certificate: byte[] getEncoded()>();

        specialinvoke $r61.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>(r5);

        specialinvoke $r62.<org.spongycastle.asn1.pkcs.CertBag: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r61);

     label071:
        r33 = new org.spongycastle.asn1.ASN1EncodableVector;

        r14 = r33;

     label072:
        specialinvoke r33.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

     label073:
        $z2 = $r29 instanceof org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier;

        if $z2 == 0 goto label093;

        r26 = (org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier) $r29;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName>;

     label074:
        $r27 = interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

     label075:
        r28 = (org.spongycastle.asn1.DERBMPString) $r27;

        if r28 == null goto label078;

     label076:
        $r24 = virtualinvoke r28.<org.spongycastle.asn1.DERBMPString: java.lang.String getString()>();

        $z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r22);

     label077:
        if $z2 != 0 goto label080;

     label078:
        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName>;

        $r56 = new org.spongycastle.asn1.DERBMPString;

     label079:
        specialinvoke $r56.<org.spongycastle.asn1.DERBMPString: void <init>(java.lang.String)>(r22);

        interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r56);

     label080:
        $r32 = interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: java.util.Enumeration getBagAttributeKeys()>();

     label081:
        $z2 = interfaceinvoke $r32.<java.util.Enumeration: boolean hasMoreElements()>();

     label082:
        if $z2 == 0 goto label093;

     label083:
        $r21 = interfaceinvoke $r32.<java.util.Enumeration: java.lang.Object nextElement()>();

     label084:
        $r4 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r21;

        $r40 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_localKeyId>;

     label085:
        $z2 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r40);

     label086:
        if $z2 != 0 goto label081;

        $r57 = new org.spongycastle.asn1.ASN1EncodableVector;

     label087:
        specialinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

     label088:
        $r58 = new org.spongycastle.asn1.DERSet;

     label089:
        $r27 = interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

        specialinvoke $r58.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r27);

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r58);

     label090:
        $r59 = new org.spongycastle.asn1.DERSequence;

     label091:
        specialinvoke $r59.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r57);

        virtualinvoke r14.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r59);

     label092:
        $z1 = 1;

        goto label081;

     label093:
        if $z1 != 0 goto label101;

        $r57 = new org.spongycastle.asn1.ASN1EncodableVector;

     label094:
        specialinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

     label095:
        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName>;

     label096:
        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

     label097:
        $r58 = new org.spongycastle.asn1.DERSet;

        $r56 = new org.spongycastle.asn1.DERBMPString;

     label098:
        specialinvoke $r56.<org.spongycastle.asn1.DERBMPString: void <init>(java.lang.String)>(r22);

        specialinvoke $r58.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r56);

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r58);

     label099:
        $r59 = new org.spongycastle.asn1.DERSequence;

     label100:
        specialinvoke $r59.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r57);

        virtualinvoke r14.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r59);

     label101:
        $r60 = new org.spongycastle.asn1.pkcs.SafeBag;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier certBag>;

     label102:
        $r25 = virtualinvoke r36.<org.spongycastle.asn1.pkcs.CertBag: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

     label103:
        $r58 = new org.spongycastle.asn1.DERSet;

     label104:
        specialinvoke $r58.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r14);

        specialinvoke $r60.<org.spongycastle.asn1.pkcs.SafeBag: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable,org.spongycastle.asn1.ASN1Set)>($r4, $r25, $r58);

        virtualinvoke r9.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r60);

        virtualinvoke r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r29);

     label105:
        goto label063;

     label106:
        r41 := @caughtexception;

        $r64 = new java.io.IOException;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error encoding certificate: ");

        r22 = virtualinvoke r41.<java.security.cert.CertificateEncodingException: java.lang.String toString()>();

        $r39 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        r22 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r64.<java.io.IOException: void <init>(java.lang.String)>(r22);

        throw $r64;

     label107:
        $r42 = specialinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Set getUsedCertificateSet()>();

        $r43 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable chainCerts>;

        $r19 = virtualinvoke $r43.<java.util.Hashtable: java.util.Enumeration keys()>();

     label108:
        $z1 = interfaceinvoke $r19.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label140;

     label109:
        $r21 = interfaceinvoke $r19.<java.util.Enumeration: java.lang.Object nextElement()>();

     label110:
        r44 = (org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId) $r21;

        $r43 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable chainCerts>;

     label111:
        $r21 = virtualinvoke $r43.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r44);

     label112:
        $r29 = (java.security.cert.Certificate) $r21;

     label113:
        $z1 = interfaceinvoke $r42.<java.util.Set: boolean contains(java.lang.Object)>($r29);

     label114:
        if $z1 == 0 goto label108;

     label115:
        $r21 = virtualinvoke r11.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r29);

     label116:
        if $r21 != null goto label108;

        $r62 = new org.spongycastle.asn1.pkcs.CertBag;

        r36 = $r62;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier x509Certificate>;

        $r61 = new org.spongycastle.asn1.DEROctetString;

     label117:
        r5 = virtualinvoke $r29.<java.security.cert.Certificate: byte[] getEncoded()>();

        specialinvoke $r61.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>(r5);

        specialinvoke $r62.<org.spongycastle.asn1.pkcs.CertBag: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r61);

     label118:
        r33 = new org.spongycastle.asn1.ASN1EncodableVector;

        r14 = r33;

     label119:
        specialinvoke r33.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

     label120:
        $z1 = $r29 instanceof org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier;

        if $z1 == 0 goto label135;

        r26 = (org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier) $r29;

     label121:
        $r32 = interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: java.util.Enumeration getBagAttributeKeys()>();

     label122:
        $z1 = interfaceinvoke $r32.<java.util.Enumeration: boolean hasMoreElements()>();

     label123:
        if $z1 == 0 goto label135;

     label124:
        $r21 = interfaceinvoke $r32.<java.util.Enumeration: java.lang.Object nextElement()>();

     label125:
        $r4 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r21;

        $r40 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_localKeyId>;

     label126:
        $z1 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r40);

     label127:
        if $z1 != 0 goto label122;

        $r57 = new org.spongycastle.asn1.ASN1EncodableVector;

     label128:
        specialinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

     label129:
        $r58 = new org.spongycastle.asn1.DERSet;

     label130:
        $r27 = interfaceinvoke r26.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

        specialinvoke $r58.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r27);

        virtualinvoke $r57.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r58);

     label131:
        $r59 = new org.spongycastle.asn1.DERSequence;

     label132:
        specialinvoke $r59.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r57);

        virtualinvoke r14.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r59);

     label133:
        goto label122;

     label134:
        r45 := @caughtexception;

        $r64 = new java.io.IOException;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error encoding certificate: ");

        r22 = virtualinvoke r45.<java.security.cert.CertificateEncodingException: java.lang.String toString()>();

        $r39 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        r22 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r64.<java.io.IOException: void <init>(java.lang.String)>(r22);

        throw $r64;

     label135:
        $r60 = new org.spongycastle.asn1.pkcs.SafeBag;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier certBag>;

     label136:
        $r25 = virtualinvoke r36.<org.spongycastle.asn1.pkcs.CertBag: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

     label137:
        $r58 = new org.spongycastle.asn1.DERSet;

     label138:
        specialinvoke $r58.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r14);

        specialinvoke $r60.<org.spongycastle.asn1.pkcs.SafeBag: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable,org.spongycastle.asn1.ASN1Set)>($r4, $r25, $r58);

        virtualinvoke r9.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r60);

     label139:
        goto label108;

     label140:
        $r59 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r59.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r9);

        r5 = virtualinvoke $r59.<org.spongycastle.asn1.DERSequence: byte[] getEncoded(java.lang.String)>("DER");

        r5 = virtualinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: byte[] cryptData(boolean,org.spongycastle.asn1.x509.AlgorithmIdentifier,char[],boolean,byte[])>(1, r3, $r2, 0, r5);

        $r66 = new org.spongycastle.asn1.pkcs.EncryptedData;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier data>;

        $r65 = new org.spongycastle.asn1.BEROctetString;

        specialinvoke $r65.<org.spongycastle.asn1.BEROctetString: void <init>(byte[])>(r5);

        specialinvoke $r66.<org.spongycastle.asn1.pkcs.EncryptedData: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, r3, $r65);

        $r47 = newarray (org.spongycastle.asn1.pkcs.ContentInfo)[2];

        $r67 = new org.spongycastle.asn1.pkcs.ContentInfo;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier data>;

        specialinvoke $r67.<org.spongycastle.asn1.pkcs.ContentInfo: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, r15);

        $r47[0] = $r67;

        $r67 = new org.spongycastle.asn1.pkcs.ContentInfo;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier encryptedData>;

        $r25 = virtualinvoke $r66.<org.spongycastle.asn1.pkcs.EncryptedData: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        specialinvoke $r67.<org.spongycastle.asn1.pkcs.ContentInfo: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r25);

        $r47[1] = $r67;

        $r68 = new org.spongycastle.asn1.pkcs.AuthenticatedSafe;

        specialinvoke $r68.<org.spongycastle.asn1.pkcs.AuthenticatedSafe: void <init>(org.spongycastle.asn1.pkcs.ContentInfo[])>($r47);

        $r69 = new java.io.ByteArrayOutputStream;

        specialinvoke $r69.<java.io.ByteArrayOutputStream: void <init>()>();

        if $z0 == 0 goto label151;

        $r70 = new org.spongycastle.asn1.DEROutputStream;

        $r21 = $r70;

        specialinvoke $r70.<org.spongycastle.asn1.DEROutputStream: void <init>(java.io.OutputStream)>($r69);

     label141:
        $r70 = (org.spongycastle.asn1.DEROutputStream) $r21;

        virtualinvoke $r70.<org.spongycastle.asn1.DEROutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>($r68);

        r5 = virtualinvoke $r69.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r67 = new org.spongycastle.asn1.pkcs.ContentInfo;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier data>;

        $r46 = new org.spongycastle.asn1.BEROctetString;

        specialinvoke $r46.<org.spongycastle.asn1.BEROctetString: void <init>(byte[])>(r5);

        specialinvoke $r67.<org.spongycastle.asn1.pkcs.ContentInfo: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r46);

        r5 = newarray (byte)[20];

        $r20 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.SecureRandom random>;

        virtualinvoke $r20.<java.security.SecureRandom: void nextBytes(byte[])>(r5);

        $r27 = virtualinvoke $r67.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1Encodable getContent()>();

        $r48 = (org.spongycastle.asn1.ASN1OctetString) $r27;

        $r49 = virtualinvoke $r48.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier id_SHA1>;

     label142:
        $r49 = specialinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: byte[] calculatePbeMac(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[],int,char[],boolean,byte[])>($r4, r5, 1024, $r2, 0, $r49);

     label143:
        $r54 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r4 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier id_SHA1>;

        $r50 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

     label144:
        specialinvoke $r54.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r50);

     label145:
        $r71 = new org.spongycastle.asn1.x509.DigestInfo;

     label146:
        specialinvoke $r71.<org.spongycastle.asn1.x509.DigestInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r54, $r49);

     label147:
        $r72 = new org.spongycastle.asn1.pkcs.MacData;

     label148:
        specialinvoke $r72.<org.spongycastle.asn1.pkcs.MacData: void <init>(org.spongycastle.asn1.x509.DigestInfo,byte[],int)>($r71, r5, 1024);

     label149:
        $r73 = new org.spongycastle.asn1.pkcs.Pfx;

        specialinvoke $r73.<org.spongycastle.asn1.pkcs.Pfx: void <init>(org.spongycastle.asn1.pkcs.ContentInfo,org.spongycastle.asn1.pkcs.MacData)>($r67, $r72);

        if $z0 == 0 goto label153;

        $r70 = new org.spongycastle.asn1.DEROutputStream;

        $r21 = $r70;

        specialinvoke $r70.<org.spongycastle.asn1.DEROutputStream: void <init>(java.io.OutputStream)>($r1);

     label150:
        $r70 = (org.spongycastle.asn1.DEROutputStream) $r21;

        virtualinvoke $r70.<org.spongycastle.asn1.DEROutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>($r73);

        return;

     label151:
        $r74 = new org.spongycastle.asn1.BEROutputStream;

        $r21 = $r74;

        specialinvoke $r74.<org.spongycastle.asn1.BEROutputStream: void <init>(java.io.OutputStream)>($r69);

        goto label141;

     label152:
        r51 := @caughtexception;

        $r64 = new java.io.IOException;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error constructing MAC: ");

        r22 = virtualinvoke r51.<java.lang.Exception: java.lang.String toString()>();

        $r39 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        r22 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r64.<java.io.IOException: void <init>(java.lang.String)>(r22);

        throw $r64;

     label153:
        $r74 = new org.spongycastle.asn1.BEROutputStream;

        $r21 = $r74;

        specialinvoke $r74.<org.spongycastle.asn1.BEROutputStream: void <init>(java.io.OutputStream)>($r1);

        goto label150;

        catch java.security.cert.CertificateEncodingException from label011 to label012 with label061;
        catch java.security.cert.CertificateEncodingException from label013 to label014 with label061;
        catch java.security.cert.CertificateEncodingException from label015 to label016 with label061;
        catch java.security.cert.CertificateEncodingException from label017 to label018 with label061;
        catch java.security.cert.CertificateEncodingException from label019 to label020 with label061;
        catch java.security.cert.CertificateEncodingException from label021 to label022 with label061;
        catch java.security.cert.CertificateEncodingException from label024 to label025 with label061;
        catch java.security.cert.CertificateEncodingException from label026 to label027 with label061;
        catch java.security.cert.CertificateEncodingException from label028 to label031 with label061;
        catch java.security.cert.CertificateEncodingException from label032 to label033 with label061;
        catch java.security.cert.CertificateEncodingException from label034 to label035 with label061;
        catch java.security.cert.CertificateEncodingException from label036 to label037 with label061;
        catch java.security.cert.CertificateEncodingException from label038 to label039 with label061;
        catch java.security.cert.CertificateEncodingException from label041 to label042 with label061;
        catch java.security.cert.CertificateEncodingException from label043 to label044 with label061;
        catch java.security.cert.CertificateEncodingException from label045 to label046 with label061;
        catch java.security.cert.CertificateEncodingException from label047 to label048 with label061;
        catch java.security.cert.CertificateEncodingException from label049 to label050 with label061;
        catch java.security.cert.CertificateEncodingException from label051 to label052 with label061;
        catch java.security.cert.CertificateEncodingException from label053 to label054 with label061;
        catch java.security.cert.CertificateEncodingException from label055 to label056 with label061;
        catch java.security.cert.CertificateEncodingException from label057 to label058 with label061;
        catch java.security.cert.CertificateEncodingException from label059 to label060 with label061;
        catch java.security.cert.CertificateEncodingException from label064 to label065 with label106;
        catch java.security.cert.CertificateEncodingException from label066 to label067 with label106;
        catch java.security.cert.CertificateEncodingException from label068 to label069 with label106;
        catch java.security.cert.CertificateEncodingException from label070 to label071 with label106;
        catch java.security.cert.CertificateEncodingException from label072 to label073 with label106;
        catch java.security.cert.CertificateEncodingException from label074 to label075 with label106;
        catch java.security.cert.CertificateEncodingException from label076 to label077 with label106;
        catch java.security.cert.CertificateEncodingException from label079 to label082 with label106;
        catch java.security.cert.CertificateEncodingException from label083 to label084 with label106;
        catch java.security.cert.CertificateEncodingException from label085 to label086 with label106;
        catch java.security.cert.CertificateEncodingException from label087 to label088 with label106;
        catch java.security.cert.CertificateEncodingException from label089 to label090 with label106;
        catch java.security.cert.CertificateEncodingException from label091 to label092 with label106;
        catch java.security.cert.CertificateEncodingException from label094 to label095 with label106;
        catch java.security.cert.CertificateEncodingException from label096 to label097 with label106;
        catch java.security.cert.CertificateEncodingException from label098 to label099 with label106;
        catch java.security.cert.CertificateEncodingException from label100 to label101 with label106;
        catch java.security.cert.CertificateEncodingException from label102 to label103 with label106;
        catch java.security.cert.CertificateEncodingException from label104 to label105 with label106;
        catch java.security.cert.CertificateEncodingException from label109 to label110 with label134;
        catch java.security.cert.CertificateEncodingException from label111 to label112 with label134;
        catch java.security.cert.CertificateEncodingException from label113 to label114 with label134;
        catch java.security.cert.CertificateEncodingException from label115 to label116 with label134;
        catch java.security.cert.CertificateEncodingException from label117 to label118 with label134;
        catch java.security.cert.CertificateEncodingException from label119 to label120 with label134;
        catch java.security.cert.CertificateEncodingException from label121 to label123 with label134;
        catch java.security.cert.CertificateEncodingException from label124 to label125 with label134;
        catch java.security.cert.CertificateEncodingException from label126 to label127 with label134;
        catch java.security.cert.CertificateEncodingException from label128 to label129 with label134;
        catch java.security.cert.CertificateEncodingException from label130 to label131 with label134;
        catch java.security.cert.CertificateEncodingException from label132 to label133 with label134;
        catch java.security.cert.CertificateEncodingException from label136 to label137 with label134;
        catch java.security.cert.CertificateEncodingException from label138 to label139 with label134;
        catch java.lang.Exception from label142 to label143 with label152;
        catch java.lang.Exception from label144 to label145 with label152;
        catch java.lang.Exception from label146 to label147 with label152;
        catch java.lang.Exception from label148 to label149 with label152;
    }
    private static byte[] getDigest(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)
    {
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r0;
        org.spongycastle.crypto.digests.SHA1Digest r1;
        byte[] r2, $r4;
        int $i0;
        org.spongycastle.asn1.DERBitString $r3;

        $r0 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        r1 = new org.spongycastle.crypto.digests.SHA1Digest;

        specialinvoke r1.<org.spongycastle.crypto.digests.SHA1Digest: void <init>()>();

        $i0 = interfaceinvoke r1.<org.spongycastle.crypto.Digest: int getDigestSize()>();

        r2 = newarray (byte)[$i0];

        $r3 = virtualinvoke $r0.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.DERBitString getPublicKeyData()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        $i0 = lengthof $r4;

        interfaceinvoke r1.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>($r4, 0, $i0);

        interfaceinvoke r1.<org.spongycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

        return r2;
    }
    private java.util.Set getUsedCertificateSet()
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.util.HashSet r1;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r2;
        java.util.Enumeration $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String r5;
        java.security.cert.Certificate[] $r6;
        int i0, $i1;
        java.security.cert.Certificate $r7;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)>(r5);

        i0 = 0;

     label2:
        $i1 = lengthof $r6;

        if i0 == $i1 goto label1;

        $r7 = $r6[i0];

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r7);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.util.Enumeration keys()>();

     label4:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = (java.lang.String) $r4;

        $r7 = virtualinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.cert.Certificate engineGetCertificate(java.lang.String)>(r5);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r7);

        goto label4;

     label5:
        return r1;
    }
    protected byte[] cryptData(boolean, org.spongycastle.asn1.x509.AlgorithmIdentifier, char[], boolean, byte[]) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        boolean $z0, $z1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        char[] $r2;
        byte[] $r3, $r11;
        javax.crypto.spec.PBEParameterSpec r4;
        org.spongycastle.jcajce.PKCS12Key r5;
        javax.crypto.spec.PBEKeySpec r6;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r7, $r8;
        int i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r9;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r10;
        java.math.BigInteger $r12;
        org.spongycastle.jcajce.util.JcaJceHelper $r13;
        java.lang.String $r14;
        javax.crypto.Cipher $r15;
        java.lang.Exception r16, r19;
        java.io.IOException $r17;
        java.lang.StringBuilder $r18;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter2: char[];

        $z1 := @parameter3: boolean;

        $r3 := @parameter4: byte[];

        $r7 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        if $z0 == 0 goto label06;

        i0 = 1;

     label01:
        $r8 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_12PbeIds>;

        $z0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean on(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r8);

        if $z0 == 0 goto label08;

        $r9 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r10 = staticinvoke <org.spongycastle.asn1.pkcs.PKCS12PBEParams: org.spongycastle.asn1.pkcs.PKCS12PBEParams getInstance(java.lang.Object)>($r9);

        r6 = new javax.crypto.spec.PBEKeySpec;

        specialinvoke r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r2);

        r4 = new javax.crypto.spec.PBEParameterSpec;

     label02:
        $r11 = virtualinvoke $r10.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: byte[] getIV()>();

        $r12 = virtualinvoke $r10.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: java.math.BigInteger getIterations()>();

        $i1 = virtualinvoke $r12.<java.math.BigInteger: int intValue()>();

        specialinvoke r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r11, $i1);

     label03:
        r5 = new org.spongycastle.jcajce.PKCS12Key;

     label04:
        specialinvoke r5.<org.spongycastle.jcajce.PKCS12Key: void <init>(char[],boolean)>($r2, $z1);

        $r13 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        $r14 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r15 = interfaceinvoke $r13.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.Cipher createCipher(java.lang.String)>($r14);

        virtualinvoke $r15.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, r5, r4);

        $r3 = virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

     label05:
        return $r3;

     label06:
        i0 = 2;

        goto label01;

     label07:
        r16 := @caughtexception;

        $r17 = new java.io.IOException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception decrypting data - ");

        $r14 = virtualinvoke r16.<java.lang.Exception: java.lang.String toString()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r17;

     label08:
        $r8 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_PBES2>;

        $z0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label12;

     label09:
        $r15 = specialinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: javax.crypto.Cipher createCipher(int,char[],org.spongycastle.asn1.x509.AlgorithmIdentifier)>(i0, $r2, $r1);

        $r3 = virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

     label10:
        return $r3;

     label11:
        r19 := @caughtexception;

        $r17 = new java.io.IOException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception decrypting data - ");

        $r14 = virtualinvoke r19.<java.lang.Exception: java.lang.String toString()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r17;

     label12:
        $r17 = new java.io.IOException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown PBE algorithm: ");

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r14 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r17;

        catch java.lang.Exception from label02 to label03 with label07;
        catch java.lang.Exception from label04 to label05 with label07;
        catch java.lang.Exception from label09 to label10 with label11;
    }
    public java.util.Enumeration engineAliases()
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.util.Hashtable r1;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r2;
        java.util.Enumeration $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String r5;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        r1 = new java.util.Hashtable;

        specialinvoke r1.<java.util.Hashtable: void <init>()>();

        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, "cert");

        goto label1;

     label2:
        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.util.Enumeration keys()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = (java.lang.String) $r4;

        $r4 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        if $r4 != null goto label3;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, "key");

        goto label3;

     label4:
        $r3 = virtualinvoke r1.<java.util.Hashtable: java.util.Enumeration keys()>();

        return $r3;
    }
    public boolean engineContainsAlias(java.lang.String)
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.lang.String $r1;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r2;
        java.lang.Object $r3;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>($r1);

        if $r3 != null goto label1;

        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>($r1);

        if $r3 == null goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public void engineDeleteEntry(java.lang.String) throws java.security.KeyStoreException
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.lang.String $r1;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r2;
        java.lang.Object $r3;
        java.security.Key r4;
        java.security.cert.Certificate r5;
        java.util.Hashtable $r6;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId $r7;
        java.security.PublicKey $r8;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object remove(java.lang.String)>($r1);

        r4 = (java.security.Key) $r3;

        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object remove(java.lang.String)>($r1);

        r5 = (java.security.cert.Certificate) $r3;

        if r5 == null goto label1;

        $r6 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable chainCerts>;

        $r7 = new org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId;

        $r8 = virtualinvoke r5.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        specialinvoke $r7.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId: void <init>(org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi,java.security.PublicKey)>(r0, $r8);

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r7);

     label1:
        if r4 == null goto label3;

        $r6 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable localIds>;

        $r3 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        if $r1 == null goto label2;

        $r6 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable keyCerts>;

        $r3 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r1);

        r5 = (java.security.cert.Certificate) $r3;

     label2:
        if r5 == null goto label3;

        $r6 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable chainCerts>;

        $r7 = new org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId;

        $r8 = virtualinvoke r5.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        specialinvoke $r7.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId: void <init>(org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi,java.security.PublicKey)>(r0, $r8);

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>($r7);

     label3:
        return;
    }
    public java.security.cert.Certificate engineGetCertificate(java.lang.String)
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.lang.String $r1, r7;
        java.lang.IllegalArgumentException $r2;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r3;
        java.lang.Object $r4;
        java.security.cert.Certificate r5;
        java.util.Hashtable $r6;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null alias passed to getCertificate.");

        throw $r2;

     label1:
        $r3 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        $r4 = virtualinvoke $r3.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>($r1);

        r5 = (java.security.cert.Certificate) $r4;

        if r5 != null goto label3;

        $r6 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable localIds>;

        $r4 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        r7 = (java.lang.String) $r4;

        if r7 == null goto label2;

        $r6 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable keyCerts>;

        $r4 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r7);

        r5 = (java.security.cert.Certificate) $r4;

        return r5;

     label2:
        $r6 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable keyCerts>;

        $r4 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (java.security.cert.Certificate) $r4;

     label3:
        return r5;
    }
    public java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.security.cert.Certificate $r1, r6;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r2;
        java.util.Enumeration $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String r7;
        java.util.Hashtable $r8;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.security.cert.Certificate;

        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.util.Enumeration elements()>();

        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        $r4 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.security.cert.Certificate) $r5;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (java.lang.String) $r5;

        $z0 = virtualinvoke r6.<java.security.cert.Certificate: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return r7;

     label2:
        $r8 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable keyCerts>;

        $r3 = virtualinvoke $r8.<java.util.Hashtable: java.util.Enumeration elements()>();

        $r8 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable keyCerts>;

        $r4 = virtualinvoke $r8.<java.util.Hashtable: java.util.Enumeration keys()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.security.cert.Certificate) $r5;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (java.lang.String) $r5;

        $z0 = virtualinvoke r6.<java.security.cert.Certificate: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        return r7;

     label4:
        return null;
    }
    public java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.lang.String $r1;
        java.util.Vector r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        java.security.cert.Certificate $r4;
        java.lang.Object r5, r7, $r19;
        java.security.cert.X509Certificate r6, r20;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r8;
        byte[] $r9;
        org.spongycastle.asn1.ASN1InputStream r10;
        org.spongycastle.asn1.ASN1Primitive $r11;
        org.spongycastle.asn1.ASN1OctetString $r12;
        org.spongycastle.asn1.x509.AuthorityKeyIdentifier $r13;
        java.util.Hashtable $r14;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId $r15;
        java.security.Principal $r16, $r17;
        java.util.Enumeration $r18;
        java.security.PublicKey $r21;
        java.io.IOException r22;
        java.lang.RuntimeException $r23;
        int $i0, $i1;
        java.security.cert.Certificate[] r24;
        java.lang.Exception $r25;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label01;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null alias passed to getCertificateChain.");

        throw $r3;

     label01:
        $z0 = virtualinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: boolean engineIsKeyEntry(java.lang.String)>($r1);

        if $z0 != 0 goto label02;

        return null;

     label02:
        $r4 = virtualinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.cert.Certificate engineGetCertificate(java.lang.String)>($r1);

        r5 = $r4;

        if $r4 == null goto label22;

        r2 = new java.util.Vector;

        specialinvoke r2.<java.util.Vector: void <init>()>();

     label03:
        if r5 == null goto label20;

        r6 = (java.security.cert.X509Certificate) r5;

        r7 = null;

        $r8 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier authorityKeyIdentifier>;

        $r1 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r9 = virtualinvoke r6.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r1);

        if $r9 == null goto label12;

        r10 = new org.spongycastle.asn1.ASN1InputStream;

     label04:
        specialinvoke r10.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r9);

        $r11 = virtualinvoke r10.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

     label05:
        $r12 = (org.spongycastle.asn1.ASN1OctetString) $r11;

     label06:
        $r9 = virtualinvoke $r12.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

     label07:
        r10 = new org.spongycastle.asn1.ASN1InputStream;

     label08:
        specialinvoke r10.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r9);

        $r11 = virtualinvoke r10.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r13 = staticinvoke <org.spongycastle.asn1.x509.AuthorityKeyIdentifier: org.spongycastle.asn1.x509.AuthorityKeyIdentifier getInstance(java.lang.Object)>($r11);

        $r9 = virtualinvoke $r13.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: byte[] getKeyIdentifier()>();

     label09:
        if $r9 == null goto label12;

        $r14 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable chainCerts>;

        $r15 = new org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId;

     label10:
        $r9 = virtualinvoke $r13.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: byte[] getKeyIdentifier()>();

        specialinvoke $r15.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId: void <init>(org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi,byte[])>(r0, $r9);

        r7 = virtualinvoke $r14.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r15);

     label11:
        r7 = (java.security.cert.Certificate) r7;

     label12:
        if r7 != null goto label16;

        $r16 = virtualinvoke r6.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $r17 = virtualinvoke r6.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $z0 = interfaceinvoke $r16.<java.security.Principal: boolean equals(java.lang.Object)>($r17);

        if $z0 != 0 goto label16;

        $r14 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable chainCerts>;

        $r18 = virtualinvoke $r14.<java.util.Hashtable: java.util.Enumeration keys()>();

     label13:
        $z0 = interfaceinvoke $r18.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label16;

        $r14 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable chainCerts>;

        $r19 = interfaceinvoke $r18.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r19 = virtualinvoke $r14.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r19);

        r20 = (java.security.cert.X509Certificate) $r19;

        $r17 = virtualinvoke r20.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $z0 = interfaceinvoke $r17.<java.security.Principal: boolean equals(java.lang.Object)>($r16);

        if $z0 == 0 goto label13;

     label14:
        $r21 = virtualinvoke r20.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        virtualinvoke r6.<java.security.cert.X509Certificate: void verify(java.security.PublicKey)>($r21);

     label15:
        r7 = r20;

     label16:
        $z0 = virtualinvoke r2.<java.util.Vector: boolean contains(java.lang.Object)>(r5);

        if $z0 == 0 goto label18;

        r5 = null;

        goto label03;

     label17:
        r22 := @caughtexception;

        $r23 = new java.lang.RuntimeException;

        $r1 = virtualinvoke r22.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r23;

     label18:
        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>(r5);

        if r7 == r5 goto label19;

        r5 = r7;

        goto label03;

     label19:
        r5 = null;

        goto label03;

     label20:
        $i0 = virtualinvoke r2.<java.util.Vector: int size()>();

        r24 = newarray (java.security.cert.Certificate)[$i0];

        $i0 = 0;

     label21:
        $i1 = lengthof r24;

        if $i0 == $i1 goto label24;

        r5 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r4 = (java.security.cert.Certificate) r5;

        r24[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label21;

     label22:
        return null;

     label23:
        $r25 := @caughtexception;

        goto label13;

     label24:
        return r24;

        catch java.io.IOException from label04 to label05 with label17;
        catch java.io.IOException from label06 to label07 with label17;
        catch java.io.IOException from label08 to label09 with label17;
        catch java.io.IOException from label10 to label11 with label17;
        catch java.lang.Exception from label14 to label15 with label23;
    }
    public java.util.Date engineGetCreationDate(java.lang.String)
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.lang.String $r1;
        java.lang.NullPointerException $r2;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r3;
        java.lang.Object $r4;
        java.util.Date $r5;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r2;

     label1:
        $r3 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r4 = virtualinvoke $r3.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>($r1);

        if $r4 != null goto label2;

        $r3 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        $r4 = virtualinvoke $r3.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>($r1);

        if $r4 != null goto label2;

        return null;

     label2:
        $r5 = new java.util.Date;

        specialinvoke $r5.<java.util.Date: void <init>()>();

        return $r5;
    }
    public java.security.Key engineGetKey(java.lang.String, char[]) throws java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.lang.String $r1;
        char[] $r2;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r5;
        java.security.Key $r6;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: char[];

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null alias passed to getKey.");

        throw $r4;

     label1:
        $r5 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r3 = virtualinvoke $r5.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>($r1);

        $r6 = (java.security.Key) $r3;

        return $r6;
    }
    public boolean engineIsCertificateEntry(java.lang.String)
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.lang.String $r1;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r2;
        java.lang.Object $r3;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>($r1);

        if $r3 == null goto label1;

        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>($r1);

        if $r3 != null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean engineIsKeyEntry(java.lang.String)
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r3;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r2 = virtualinvoke $r3.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>($r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public void engineLoad(java.io.InputStream, char[]) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.io.InputStream $r1;
        char[] $r2;
        java.io.BufferedInputStream r3;
        java.io.ByteArrayInputStream r4;
        java.util.Vector r5;
        org.spongycastle.asn1.ASN1InputStream r6;
        java.lang.NullPointerException $r7;
        int $i0, $i1, $i2;
        java.io.IOException $r8;
        org.spongycastle.asn1.ASN1Primitive $r9, $r40;
        org.spongycastle.asn1.ASN1Sequence r10, r39;
        org.spongycastle.asn1.pkcs.Pfx $r11;
        org.spongycastle.asn1.pkcs.ContentInfo $r12;
        boolean z0, z1, $z2;
        org.spongycastle.asn1.pkcs.MacData $r13;
        org.spongycastle.asn1.x509.DigestInfo $r14;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r15;
        byte[] $r16, $r20, $r22, $r23;
        java.math.BigInteger $r17;
        org.spongycastle.asn1.ASN1Encodable $r18;
        org.spongycastle.asn1.ASN1OctetString $r19;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r21, $r29;
        java.lang.Exception r24, r50;
        java.lang.StringBuilder $r25;
        java.lang.String $r26, $r42;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r27, $r54;
        java.util.Hashtable $r28;
        org.spongycastle.asn1.pkcs.AuthenticatedSafe $r30;
        org.spongycastle.asn1.pkcs.ContentInfo[] $r31;
        org.spongycastle.asn1.pkcs.SafeBag $r32;
        org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo $r33;
        java.security.PrivateKey $r34;
        org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier r35;
        org.spongycastle.asn1.ASN1Set $r36;
        java.util.Enumeration $r37;
        java.lang.Object $r38;
        org.spongycastle.asn1.DERBMPString r41;
        java.io.PrintStream $r43;
        org.spongycastle.asn1.pkcs.EncryptedData $r44;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r45;
        org.spongycastle.asn1.pkcs.CertBag $r46;
        java.lang.RuntimeException $r47;
        java.security.cert.CertificateFactory $r48;
        java.security.cert.Certificate $r49;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId $r51;
        java.security.PublicKey $r52;
        org.spongycastle.asn1.x509.SubjectKeyIdentifier $r53;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: char[];

        if $r1 != null goto label01;

        return;

     label01:
        if $r2 != null goto label02;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("No password supplied for PKCS#12 KeyStore.");

        throw $r7;

     label02:
        r3 = new java.io.BufferedInputStream;

        specialinvoke r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        virtualinvoke r3.<java.io.BufferedInputStream: void mark(int)>(10);

        $i0 = virtualinvoke r3.<java.io.BufferedInputStream: int read()>();

        if $i0 == 48 goto label03;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("stream does not represent a PKCS12 key store");

        throw $r8;

     label03:
        virtualinvoke r3.<java.io.BufferedInputStream: void reset()>();

        r6 = new org.spongycastle.asn1.ASN1InputStream;

        specialinvoke r6.<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>(r3);

        $r9 = virtualinvoke r6.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        r10 = (org.spongycastle.asn1.ASN1Sequence) $r9;

        $r11 = staticinvoke <org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.Pfx getInstance(java.lang.Object)>(r10);

        $r12 = virtualinvoke $r11.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.ContentInfo getAuthSafe()>();

        r5 = new java.util.Vector;

        specialinvoke r5.<java.util.Vector: void <init>()>();

        z0 = 0;

        z1 = 0;

        $r13 = virtualinvoke $r11.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData getMacData()>();

        if $r13 == null goto label15;

        $r13 = virtualinvoke $r11.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData getMacData()>();

        $r14 = virtualinvoke $r13.<org.spongycastle.asn1.pkcs.MacData: org.spongycastle.asn1.x509.DigestInfo getMac()>();

        $r15 = virtualinvoke $r14.<org.spongycastle.asn1.x509.DigestInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r16 = virtualinvoke $r13.<org.spongycastle.asn1.pkcs.MacData: byte[] getSalt()>();

        $r17 = virtualinvoke $r13.<org.spongycastle.asn1.pkcs.MacData: java.math.BigInteger getIterationCount()>();

        $i0 = virtualinvoke $r17.<java.math.BigInteger: int intValue()>();

        $r18 = virtualinvoke $r12.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1Encodable getContent()>();

        $r19 = (org.spongycastle.asn1.ASN1OctetString) $r18;

        $r20 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

     label04:
        $r21 = virtualinvoke $r15.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r22 = specialinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: byte[] calculatePbeMac(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[],int,char[],boolean,byte[])>($r21, $r16, $i0, $r2, 0, $r20);

        $r23 = virtualinvoke $r14.<org.spongycastle.asn1.x509.DigestInfo: byte[] getDigest()>();

        $z2 = staticinvoke <org.spongycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>($r22, $r23);

     label05:
        if $z2 != 0 goto label15;

     label06:
        $i1 = lengthof $r2;

     label07:
        if $i1 <= 0 goto label10;

        $r8 = new java.io.IOException;

     label08:
        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("PKCS12 key store mac invalid - wrong password or corrupted file.");

        throw $r8;

     label09:
        $r8 := @caughtexception;

        throw $r8;

     label10:
        $r21 = virtualinvoke $r15.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r16 = specialinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: byte[] calculatePbeMac(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[],int,char[],boolean,byte[])>($r21, $r16, $i0, $r2, 1, $r20);

        z1 = staticinvoke <org.spongycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>($r16, $r23);

     label11:
        if z1 != 0 goto label14;

        $r8 = new java.io.IOException;

     label12:
        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("PKCS12 key store mac invalid - wrong password or corrupted file.");

        throw $r8;

     label13:
        r24 := @caughtexception;

        $r8 = new java.io.IOException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error constructing MAC: ");

        $r26 = virtualinvoke r24.<java.lang.Exception: java.lang.String toString()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r26);

        throw $r8;

     label14:
        z1 = 1;

     label15:
        $r27 = new org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable;

        specialinvoke $r27.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void <init>(org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$1)>(null);

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys> = $r27;

        $r28 = new java.util.Hashtable;

        specialinvoke $r28.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable localIds> = $r28;

        $r21 = virtualinvoke $r12.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier data>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label48;

        r6 = new org.spongycastle.asn1.ASN1InputStream;

        $r18 = virtualinvoke $r12.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1Encodable getContent()>();

        $r19 = (org.spongycastle.asn1.ASN1OctetString) $r18;

        $r23 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke r6.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r23);

        $r9 = virtualinvoke r6.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r30 = staticinvoke <org.spongycastle.asn1.pkcs.AuthenticatedSafe: org.spongycastle.asn1.pkcs.AuthenticatedSafe getInstance(java.lang.Object)>($r9);

        $r31 = virtualinvoke $r30.<org.spongycastle.asn1.pkcs.AuthenticatedSafe: org.spongycastle.asn1.pkcs.ContentInfo[] getContentInfo()>();

        $i0 = 0;

     label16:
        $i1 = lengthof $r31;

        if $i0 == $i1 goto label48;

        $r12 = $r31[$i0];

        $r21 = virtualinvoke $r12.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier data>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label28;

        r6 = new org.spongycastle.asn1.ASN1InputStream;

        $r12 = $r31[$i0];

        $r18 = virtualinvoke $r12.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1Encodable getContent()>();

        $r19 = (org.spongycastle.asn1.ASN1OctetString) $r18;

        $r23 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke r6.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r23);

        $r9 = virtualinvoke r6.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        r10 = (org.spongycastle.asn1.ASN1Sequence) $r9;

        $i1 = 0;

     label17:
        $i2 = virtualinvoke r10.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i1 == $i2 goto label47;

        $r18 = virtualinvoke r10.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i1);

        $r32 = staticinvoke <org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.pkcs.SafeBag getInstance(java.lang.Object)>($r18);

        $r21 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1ObjectIdentifier getBagId()>();

        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs8ShroudedKeyBag>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label26;

        $r18 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1Encodable getBagValue()>();

        $r33 = staticinvoke <org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo: org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo getInstance(java.lang.Object)>($r18);

        $r15 = virtualinvoke $r33.<org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getEncryptionAlgorithm()>();

        $r23 = virtualinvoke $r33.<org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo: byte[] getEncryptedData()>();

        $r34 = virtualinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.PrivateKey unwrapKey(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[],char[],boolean)>($r15, $r23, $r2, z1);

        r35 = (org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier) $r34;

        $r26 = null;

        $r19 = null;

        $r36 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1Set getBagAttributes()>();

        if $r36 == null goto label22;

        $r36 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1Set getBagAttributes()>();

        $r37 = virtualinvoke $r36.<org.spongycastle.asn1.ASN1Set: java.util.Enumeration getObjects()>();

     label18:
        $z2 = interfaceinvoke $r37.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 == 0 goto label22;

        $r38 = interfaceinvoke $r37.<java.util.Enumeration: java.lang.Object nextElement()>();

        r39 = (org.spongycastle.asn1.ASN1Sequence) $r38;

        $r18 = virtualinvoke r39.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r21 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r18;

        $r18 = virtualinvoke r39.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r36 = (org.spongycastle.asn1.ASN1Set) $r18;

        $r9 = null;

        $i2 = virtualinvoke $r36.<org.spongycastle.asn1.ASN1Set: int size()>();

        if $i2 <= 0 goto label20;

        $r18 = virtualinvoke $r36.<org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r9 = (org.spongycastle.asn1.ASN1Primitive) $r18;

        $r18 = interfaceinvoke r35.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r21);

        if $r18 == null goto label19;

        $r40 = interfaceinvoke $r18.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $z2 = virtualinvoke $r40.<org.spongycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>($r9);

        if $z2 != 0 goto label20;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("attempt to add existing attribute with different value");

        throw $r8;

     label19:
        interfaceinvoke r35.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r21, $r9);

     label20:
        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label21;

        r41 = (org.spongycastle.asn1.DERBMPString) $r9;

        $r42 = virtualinvoke r41.<org.spongycastle.asn1.DERBMPString: java.lang.String getString()>();

        $r26 = $r42;

        $r27 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        virtualinvoke $r27.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void put(java.lang.String,java.lang.Object)>($r42, $r34);

        goto label18;

     label21:
        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_localKeyId>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label18;

        $r19 = (org.spongycastle.asn1.ASN1OctetString) $r9;

        goto label18;

     label22:
        if $r19 == null goto label25;

        $r42 = new java.lang.String;

        $r23 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r23 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[])>($r23);

        specialinvoke $r42.<java.lang.String: void <init>(byte[])>($r23);

        if $r26 != null goto label24;

        $r27 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        virtualinvoke $r27.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void put(java.lang.String,java.lang.Object)>($r42, $r34);

     label23:
        $i1 = $i1 + 1;

        goto label17;

     label24:
        $r28 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable localIds>;

        virtualinvoke $r28.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r42);

        goto label23;

     label25:
        z0 = 1;

        $r27 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        virtualinvoke $r27.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void put(java.lang.String,java.lang.Object)>("unmarked", $r34);

        goto label23;

     label26:
        $r21 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1ObjectIdentifier getBagId()>();

        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier certBag>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label27;

        virtualinvoke r5.<java.util.Vector: void addElement(java.lang.Object)>($r32);

        goto label23;

     label27:
        $r43 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("extra in data ");

        $r21 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1ObjectIdentifier getBagId()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r26);

        $r43 = <java.lang.System: java.io.PrintStream out>;

        $r26 = staticinvoke <org.spongycastle.asn1.util.ASN1Dump: java.lang.String dumpAsString(java.lang.Object)>($r32);

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r26);

        goto label23;

     label28:
        $r12 = $r31[$i0];

        $r21 = virtualinvoke $r12.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier encryptedData>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label46;

        $r12 = $r31[$i0];

        $r18 = virtualinvoke $r12.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1Encodable getContent()>();

        $r44 = staticinvoke <org.spongycastle.asn1.pkcs.EncryptedData: org.spongycastle.asn1.pkcs.EncryptedData getInstance(java.lang.Object)>($r18);

        $r15 = virtualinvoke $r44.<org.spongycastle.asn1.pkcs.EncryptedData: org.spongycastle.asn1.x509.AlgorithmIdentifier getEncryptionAlgorithm()>();

        $r19 = virtualinvoke $r44.<org.spongycastle.asn1.pkcs.EncryptedData: org.spongycastle.asn1.ASN1OctetString getContent()>();

        $r23 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r23 = virtualinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: byte[] cryptData(boolean,org.spongycastle.asn1.x509.AlgorithmIdentifier,char[],boolean,byte[])>(0, $r15, $r2, z1, $r23);

        $r9 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r23);

        r10 = (org.spongycastle.asn1.ASN1Sequence) $r9;

        $i1 = 0;

     label29:
        $i2 = virtualinvoke r10.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i1 == $i2 goto label47;

        $r18 = virtualinvoke r10.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i1);

        $r32 = staticinvoke <org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.pkcs.SafeBag getInstance(java.lang.Object)>($r18);

        $r21 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1ObjectIdentifier getBagId()>();

        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier certBag>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label31;

        virtualinvoke r5.<java.util.Vector: void addElement(java.lang.Object)>($r32);

     label30:
        $i1 = $i1 + 1;

        goto label29;

     label31:
        $r21 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1ObjectIdentifier getBagId()>();

        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs8ShroudedKeyBag>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label38;

        $r18 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1Encodable getBagValue()>();

        $r33 = staticinvoke <org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo: org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo getInstance(java.lang.Object)>($r18);

        $r15 = virtualinvoke $r33.<org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getEncryptionAlgorithm()>();

        $r23 = virtualinvoke $r33.<org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo: byte[] getEncryptedData()>();

        $r34 = virtualinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.PrivateKey unwrapKey(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[],char[],boolean)>($r15, $r23, $r2, z1);

        r35 = (org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier) $r34;

        $r26 = null;

        $r19 = null;

        $r36 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1Set getBagAttributes()>();

        $r37 = virtualinvoke $r36.<org.spongycastle.asn1.ASN1Set: java.util.Enumeration getObjects()>();

     label32:
        $z2 = interfaceinvoke $r37.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 == 0 goto label36;

        $r38 = interfaceinvoke $r37.<java.util.Enumeration: java.lang.Object nextElement()>();

        r39 = (org.spongycastle.asn1.ASN1Sequence) $r38;

        $r18 = virtualinvoke r39.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r21 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r18;

        $r18 = virtualinvoke r39.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r36 = (org.spongycastle.asn1.ASN1Set) $r18;

        $r9 = null;

        $i2 = virtualinvoke $r36.<org.spongycastle.asn1.ASN1Set: int size()>();

        if $i2 <= 0 goto label34;

        $r18 = virtualinvoke $r36.<org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r9 = (org.spongycastle.asn1.ASN1Primitive) $r18;

        $r18 = interfaceinvoke r35.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r21);

        if $r18 == null goto label33;

        $r40 = interfaceinvoke $r18.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $z2 = virtualinvoke $r40.<org.spongycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>($r9);

        if $z2 != 0 goto label34;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("attempt to add existing attribute with different value");

        throw $r8;

     label33:
        interfaceinvoke r35.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r21, $r9);

     label34:
        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label35;

        r41 = (org.spongycastle.asn1.DERBMPString) $r9;

        $r42 = virtualinvoke r41.<org.spongycastle.asn1.DERBMPString: java.lang.String getString()>();

        $r26 = $r42;

        $r27 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        virtualinvoke $r27.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void put(java.lang.String,java.lang.Object)>($r42, $r34);

        goto label32;

     label35:
        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_localKeyId>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label32;

        $r19 = (org.spongycastle.asn1.ASN1OctetString) $r9;

        goto label32;

     label36:
        $r42 = new java.lang.String;

        $r23 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r23 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[])>($r23);

        specialinvoke $r42.<java.lang.String: void <init>(byte[])>($r23);

        if $r26 != null goto label37;

        $r27 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        virtualinvoke $r27.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void put(java.lang.String,java.lang.Object)>($r42, $r34);

        goto label30;

     label37:
        $r28 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable localIds>;

        virtualinvoke $r28.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r42);

        goto label30;

     label38:
        $r21 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1ObjectIdentifier getBagId()>();

        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier keyBag>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label45;

        $r18 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1Encodable getBagValue()>();

        $r45 = staticinvoke <org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)>($r18);

        $r34 = staticinvoke <org.spongycastle.jce.provider.BouncyCastleProvider: java.security.PrivateKey getPrivateKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo)>($r45);

        r35 = (org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier) $r34;

        $r26 = null;

        $r19 = null;

        $r36 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1Set getBagAttributes()>();

        $r37 = virtualinvoke $r36.<org.spongycastle.asn1.ASN1Set: java.util.Enumeration getObjects()>();

     label39:
        $z2 = interfaceinvoke $r37.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 == 0 goto label43;

        $r38 = interfaceinvoke $r37.<java.util.Enumeration: java.lang.Object nextElement()>();

        r39 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r38);

        $r18 = virtualinvoke r39.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r21 = staticinvoke <org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>($r18);

        $r18 = virtualinvoke r39.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r36 = staticinvoke <org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Set getInstance(java.lang.Object)>($r18);

        $i2 = virtualinvoke $r36.<org.spongycastle.asn1.ASN1Set: int size()>();

        if $i2 <= 0 goto label39;

        $r18 = virtualinvoke $r36.<org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r9 = (org.spongycastle.asn1.ASN1Primitive) $r18;

        $r18 = interfaceinvoke r35.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r21);

        if $r18 == null goto label40;

        $r40 = interfaceinvoke $r18.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $z2 = virtualinvoke $r40.<org.spongycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>($r9);

        if $z2 != 0 goto label41;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("attempt to add existing attribute with different value");

        throw $r8;

     label40:
        interfaceinvoke r35.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r21, $r9);

     label41:
        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label42;

        r41 = (org.spongycastle.asn1.DERBMPString) $r9;

        $r42 = virtualinvoke r41.<org.spongycastle.asn1.DERBMPString: java.lang.String getString()>();

        $r26 = $r42;

        $r27 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        virtualinvoke $r27.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void put(java.lang.String,java.lang.Object)>($r42, $r34);

        goto label39;

     label42:
        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_localKeyId>;

        $z2 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if $z2 == 0 goto label39;

        $r19 = (org.spongycastle.asn1.ASN1OctetString) $r9;

        goto label39;

     label43:
        $r42 = new java.lang.String;

        $r23 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r23 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[])>($r23);

        specialinvoke $r42.<java.lang.String: void <init>(byte[])>($r23);

        if $r26 != null goto label44;

        $r27 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        virtualinvoke $r27.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void put(java.lang.String,java.lang.Object)>($r42, $r34);

        goto label30;

     label44:
        $r28 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable localIds>;

        virtualinvoke $r28.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r42);

        goto label30;

     label45:
        $r43 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("extra in encryptedData ");

        $r21 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1ObjectIdentifier getBagId()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r26);

        $r43 = <java.lang.System: java.io.PrintStream out>;

        $r26 = staticinvoke <org.spongycastle.asn1.util.ASN1Dump: java.lang.String dumpAsString(java.lang.Object)>($r32);

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r26);

        goto label30;

     label46:
        $r43 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("extra ");

        $r12 = $r31[$i0];

        $r21 = virtualinvoke $r12.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

        $r26 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r26);

        $r43 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("extra ");

        $r12 = $r31[$i0];

        $r18 = virtualinvoke $r12.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1Encodable getContent()>();

        $r26 = staticinvoke <org.spongycastle.asn1.util.ASN1Dump: java.lang.String dumpAsString(java.lang.Object)>($r18);

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r26);

     label47:
        $i0 = $i0 + 1;

        goto label16;

     label48:
        $r27 = new org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable;

        specialinvoke $r27.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void <init>(org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$1)>(null);

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs> = $r27;

        $r28 = new java.util.Hashtable;

        specialinvoke $r28.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable chainCerts> = $r28;

        $r28 = new java.util.Hashtable;

        specialinvoke $r28.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable keyCerts> = $r28;

        $i0 = 0;

     label49:
        $i1 = virtualinvoke r5.<java.util.Vector: int size()>();

        if $i0 == $i1 goto label62;

        $r38 = virtualinvoke r5.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r32 = (org.spongycastle.asn1.pkcs.SafeBag) $r38;

        $r18 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1Encodable getBagValue()>();

        $r46 = staticinvoke <org.spongycastle.asn1.pkcs.CertBag: org.spongycastle.asn1.pkcs.CertBag getInstance(java.lang.Object)>($r18);

        $r21 = virtualinvoke $r46.<org.spongycastle.asn1.pkcs.CertBag: org.spongycastle.asn1.ASN1ObjectIdentifier getCertId()>();

        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier x509Certificate>;

        z1 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if z1 != 0 goto label50;

        $r47 = new java.lang.RuntimeException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported certificate type: ");

        $r21 = virtualinvoke $r46.<org.spongycastle.asn1.pkcs.CertBag: org.spongycastle.asn1.ASN1ObjectIdentifier getCertId()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<java.lang.RuntimeException: void <init>(java.lang.String)>($r26);

        throw $r47;

     label50:
        r4 = new java.io.ByteArrayInputStream;

     label51:
        $r18 = virtualinvoke $r46.<org.spongycastle.asn1.pkcs.CertBag: org.spongycastle.asn1.ASN1Encodable getCertValue()>();

        $r19 = (org.spongycastle.asn1.ASN1OctetString) $r18;

        $r23 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r23);

        $r48 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.cert.CertificateFactory certFact>;

        $r49 = virtualinvoke $r48.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>(r4);

     label52:
        $r19 = null;

        $r26 = null;

        $r36 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1Set getBagAttributes()>();

        if $r36 == null goto label58;

        $r36 = virtualinvoke $r32.<org.spongycastle.asn1.pkcs.SafeBag: org.spongycastle.asn1.ASN1Set getBagAttributes()>();

        $r37 = virtualinvoke $r36.<org.spongycastle.asn1.ASN1Set: java.util.Enumeration getObjects()>();

     label53:
        z1 = interfaceinvoke $r37.<java.util.Enumeration: boolean hasMoreElements()>();

        if z1 == 0 goto label58;

        $r38 = interfaceinvoke $r37.<java.util.Enumeration: java.lang.Object nextElement()>();

        r10 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r38);

        $r18 = virtualinvoke r10.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r21 = staticinvoke <org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>($r18);

        $r18 = virtualinvoke r10.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r36 = staticinvoke <org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Set getInstance(java.lang.Object)>($r18);

        $i1 = virtualinvoke $r36.<org.spongycastle.asn1.ASN1Set: int size()>();

        if $i1 <= 0 goto label53;

        $r18 = virtualinvoke $r36.<org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r9 = (org.spongycastle.asn1.ASN1Primitive) $r18;

        z1 = $r49 instanceof org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier;

        if z1 == 0 goto label56;

        r35 = (org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier) $r49;

        $r18 = interfaceinvoke r35.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r21);

        if $r18 == null goto label55;

        $r40 = interfaceinvoke $r18.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        z1 = virtualinvoke $r40.<org.spongycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>($r9);

        if z1 != 0 goto label56;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("attempt to add existing attribute with different value");

        throw $r8;

     label54:
        r50 := @caughtexception;

        $r47 = new java.lang.RuntimeException;

        $r26 = virtualinvoke r50.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r47.<java.lang.RuntimeException: void <init>(java.lang.String)>($r26);

        throw $r47;

     label55:
        interfaceinvoke r35.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r21, $r9);

     label56:
        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName>;

        z1 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if z1 == 0 goto label57;

        r41 = (org.spongycastle.asn1.DERBMPString) $r9;

        $r26 = virtualinvoke r41.<org.spongycastle.asn1.DERBMPString: java.lang.String getString()>();

        goto label53;

     label57:
        $r29 = <org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_localKeyId>;

        z1 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r29);

        if z1 == 0 goto label53;

        $r19 = (org.spongycastle.asn1.ASN1OctetString) $r9;

        goto label53;

     label58:
        $r28 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable chainCerts>;

        $r51 = new org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId;

        $r52 = virtualinvoke $r49.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        specialinvoke $r51.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId: void <init>(org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi,java.security.PublicKey)>(r0, $r52);

        virtualinvoke $r28.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r51, $r49);

        if z0 == 0 goto label60;

        $r28 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable keyCerts>;

        z1 = virtualinvoke $r28.<java.util.Hashtable: boolean isEmpty()>();

        if z1 == 0 goto label59;

        $r26 = new java.lang.String;

        $r52 = virtualinvoke $r49.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r53 = specialinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)>($r52);

        $r23 = virtualinvoke $r53.<org.spongycastle.asn1.x509.SubjectKeyIdentifier: byte[] getKeyIdentifier()>();

        $r23 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[])>($r23);

        specialinvoke $r26.<java.lang.String: void <init>(byte[])>($r23);

        $r28 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable keyCerts>;

        virtualinvoke $r28.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r49);

        $r27 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r54 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r38 = virtualinvoke $r54.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object remove(java.lang.String)>("unmarked");

        virtualinvoke $r27.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void put(java.lang.String,java.lang.Object)>($r26, $r38);

     label59:
        $i0 = $i0 + 1;

        goto label49;

     label60:
        if $r19 == null goto label61;

        $r42 = new java.lang.String;

        $r23 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r23 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[])>($r23);

        specialinvoke $r42.<java.lang.String: void <init>(byte[])>($r23);

        $r28 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable keyCerts>;

        virtualinvoke $r28.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r42, $r49);

     label61:
        if $r26 == null goto label59;

        $r27 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        virtualinvoke $r27.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void put(java.lang.String,java.lang.Object)>($r26, $r49);

        goto label59;

     label62:
        return;

        catch java.io.IOException from label04 to label05 with label09;
        catch java.io.IOException from label08 to label09 with label09;
        catch java.lang.Exception from label04 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Exception from label08 to label09 with label13;
        catch java.io.IOException from label10 to label11 with label09;
        catch java.io.IOException from label12 to label13 with label09;
        catch java.lang.Exception from label10 to label11 with label13;
        catch java.lang.Exception from label12 to label13 with label13;
        catch java.lang.Exception from label51 to label52 with label54;
    }
    public void engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate) throws java.security.KeyStoreException
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.lang.String $r1;
        java.security.cert.Certificate $r2;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r3;
        java.lang.Object $r4;
        java.security.KeyStoreException $r5;
        java.lang.StringBuilder $r6;
        java.util.Hashtable $r7;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId $r8;
        java.security.PublicKey $r9;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.cert.Certificate;

        $r3 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r4 = virtualinvoke $r3.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>($r1);

        if $r4 == null goto label1;

        $r5 = new java.security.KeyStoreException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is a key entry with the name ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.security.KeyStoreException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label1:
        $r3 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        virtualinvoke $r3.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void put(java.lang.String,java.lang.Object)>($r1, $r2);

        $r7 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable chainCerts>;

        $r8 = new org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId;

        $r9 = virtualinvoke $r2.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        specialinvoke $r8.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId: void <init>(org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi,java.security.PublicKey)>(r0, $r9);

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r2);

        return;
    }
    public void engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) throws java.security.KeyStoreException
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.lang.String $r1;
        java.security.Key $r2;
        char[] $r3;
        java.security.cert.Certificate[] $r4;
        boolean $z0;
        java.security.KeyStoreException $r5;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r6;
        java.lang.Object $r7;
        java.security.cert.Certificate $r8;
        int i0, $i1;
        java.util.Hashtable $r9;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId $r10;
        java.security.PublicKey $r11;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.Key;

        $r3 := @parameter2: char[];

        $r4 := @parameter3: java.security.cert.Certificate[];

        $z0 = $r2 instanceof java.security.PrivateKey;

        if $z0 != 0 goto label1;

        $r5 = new java.security.KeyStoreException;

        specialinvoke $r5.<java.security.KeyStoreException: void <init>(java.lang.String)>("PKCS12 does not support non-PrivateKeys");

        throw $r5;

     label1:
        $z0 = $r2 instanceof java.security.PrivateKey;

        if $z0 == 0 goto label2;

        if $r4 != null goto label2;

        $r5 = new java.security.KeyStoreException;

        specialinvoke $r5.<java.security.KeyStoreException: void <init>(java.lang.String)>("no certificate chain for private key");

        throw $r5;

     label2:
        $r6 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r7 = virtualinvoke $r6.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.lang.Object get(java.lang.String)>($r1);

        if $r7 == null goto label3;

        virtualinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: void engineDeleteEntry(java.lang.String)>($r1);

     label3:
        $r6 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        virtualinvoke $r6.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void put(java.lang.String,java.lang.Object)>($r1, $r2);

        if $r4 == null goto label5;

        $r6 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        $r8 = $r4[0];

        virtualinvoke $r6.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: void put(java.lang.String,java.lang.Object)>($r1, $r8);

        i0 = 0;

     label4:
        $i1 = lengthof $r4;

        if i0 == $i1 goto label5;

        $r9 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.util.Hashtable chainCerts>;

        $r10 = new org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId;

        $r8 = $r4[i0];

        $r11 = virtualinvoke $r8.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        specialinvoke $r10.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId: void <init>(org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi,java.security.PublicKey)>(r0, $r11);

        $r8 = $r4[i0];

        virtualinvoke $r9.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r8);

        i0 = i0 + 1;

        goto label4;

     label5:
        return;
    }
    public void engineSetKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[]) throws java.security.KeyStoreException
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.lang.String $r1;
        byte[] $r2;
        java.security.cert.Certificate[] $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: java.security.cert.Certificate[];

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("operation not supported");

        throw $r4;
    }
    public int engineSize()
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.util.Hashtable r1;
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable $r2;
        java.util.Enumeration $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String r5;
        int $i0;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        r1 = new java.util.Hashtable;

        specialinvoke r1.<java.util.Hashtable: void <init>()>();

        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable certs>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, "cert");

        goto label1;

     label2:
        $r2 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable keys>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$IgnoresCaseHashtable: java.util.Enumeration keys()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = (java.lang.String) $r4;

        $r4 = virtualinvoke r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        if $r4 != null goto label3;

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, "key");

        goto label3;

     label4:
        $i0 = virtualinvoke r1.<java.util.Hashtable: int size()>();

        return $i0;
    }
    public void engineStore(java.io.OutputStream, char[]) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.io.OutputStream $r1;
        char[] $r2;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: char[];

        specialinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: void doStore(java.io.OutputStream,char[],boolean)>($r1, $r2, 0);

        return;
    }
    public void engineStore(java.security.KeyStore$LoadStoreParameter) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.security.KeyStore$LoadStoreParameter $r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r5;
        org.spongycastle.jcajce.PKCS12StoreParameter r6;
        java.security.KeyStore$ProtectionParameter $r7;
        char[] r8;
        java.io.OutputStream $r9;
        org.spongycastle.jce.provider.JDKPKCS12StoreParameter $r10;
        java.security.KeyStore$PasswordProtection r11;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.security.KeyStore$LoadStoreParameter;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'param\' arg cannot be null");

        throw $r2;

     label1:
        $z0 = $r1 instanceof org.spongycastle.jcajce.PKCS12StoreParameter;

        if $z0 != 0 goto label2;

        $z0 = $r1 instanceof org.spongycastle.jce.provider.JDKPKCS12StoreParameter;

        if $z0 != 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No support for \'param\' of type ");

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label2:
        $z0 = $r1 instanceof org.spongycastle.jcajce.PKCS12StoreParameter;

        if $z0 == 0 goto label5;

        r6 = (org.spongycastle.jcajce.PKCS12StoreParameter) $r1;

     label3:
        $r7 = interfaceinvoke $r1.<java.security.KeyStore$LoadStoreParameter: java.security.KeyStore$ProtectionParameter getProtectionParameter()>();

        if $r7 != null goto label6;

        r8 = null;

     label4:
        $r9 = virtualinvoke r6.<org.spongycastle.jcajce.PKCS12StoreParameter: java.io.OutputStream getOutputStream()>();

        $z0 = virtualinvoke r6.<org.spongycastle.jcajce.PKCS12StoreParameter: boolean isForDEREncoding()>();

        specialinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: void doStore(java.io.OutputStream,char[],boolean)>($r9, r8, $z0);

        return;

     label5:
        r6 = new org.spongycastle.jcajce.PKCS12StoreParameter;

        $r10 = (org.spongycastle.jce.provider.JDKPKCS12StoreParameter) $r1;

        $r9 = virtualinvoke $r10.<org.spongycastle.jce.provider.JDKPKCS12StoreParameter: java.io.OutputStream getOutputStream()>();

        $r7 = interfaceinvoke $r1.<java.security.KeyStore$LoadStoreParameter: java.security.KeyStore$ProtectionParameter getProtectionParameter()>();

        $r10 = (org.spongycastle.jce.provider.JDKPKCS12StoreParameter) $r1;

        $z0 = virtualinvoke $r10.<org.spongycastle.jce.provider.JDKPKCS12StoreParameter: boolean isUseDEREncoding()>();

        specialinvoke r6.<org.spongycastle.jcajce.PKCS12StoreParameter: void <init>(java.io.OutputStream,java.security.KeyStore$ProtectionParameter,boolean)>($r9, $r7, $z0);

        goto label3;

     label6:
        $z0 = $r7 instanceof java.security.KeyStore$PasswordProtection;

        if $z0 == 0 goto label7;

        r11 = (java.security.KeyStore$PasswordProtection) $r7;

        r8 = virtualinvoke r11.<java.security.KeyStore$PasswordProtection: char[] getPassword()>();

        goto label4;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No support for protection parameter of type ");

        $r4 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;
    }
    public void setRandom(java.security.SecureRandom)
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.security.SecureRandom $r1;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.security.SecureRandom;

        r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: java.security.SecureRandom random> = $r1;

        return;
    }
    protected java.security.PrivateKey unwrapKey(org.spongycastle.asn1.x509.AlgorithmIdentifier, byte[], char[], boolean) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        byte[] $r2, $r11;
        char[] $r3;
        boolean $z0, $z1;
        javax.crypto.spec.PBEParameterSpec r4;
        java.lang.Exception r5;
        org.spongycastle.jcajce.PKCS12Key r6;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r7, $r8;
        org.spongycastle.asn1.ASN1Encodable $r9;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r10;
        java.math.BigInteger $r12;
        int $i0;
        org.spongycastle.jcajce.util.JcaJceHelper $r13;
        java.lang.String $r14;
        javax.crypto.Cipher $r15;
        java.security.Key $r16;
        java.security.PrivateKey $r17;
        java.io.IOException $r18;
        java.lang.StringBuilder $r19;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: char[];

        $z0 := @parameter3: boolean;

        $r7 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r8 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_12PbeIds>;

     label01:
        $z1 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean on(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r8);

     label02:
        if $z1 == 0 goto label09;

     label03:
        $r9 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r10 = staticinvoke <org.spongycastle.asn1.pkcs.PKCS12PBEParams: org.spongycastle.asn1.pkcs.PKCS12PBEParams getInstance(java.lang.Object)>($r9);

     label04:
        r4 = new javax.crypto.spec.PBEParameterSpec;

     label05:
        $r11 = virtualinvoke $r10.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: byte[] getIV()>();

        $r12 = virtualinvoke $r10.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: java.math.BigInteger getIterations()>();

        $i0 = virtualinvoke $r12.<java.math.BigInteger: int intValue()>();

        specialinvoke r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r11, $i0);

        $r13 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        $r14 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r15 = interfaceinvoke $r13.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.Cipher createCipher(java.lang.String)>($r14);

     label06:
        r6 = new org.spongycastle.jcajce.PKCS12Key;

     label07:
        specialinvoke r6.<org.spongycastle.jcajce.PKCS12Key: void <init>(char[],boolean)>($r3, $z0);

        virtualinvoke $r15.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(4, r6, r4);

        $r16 = virtualinvoke $r15.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>($r2, "", 2);

        $r17 = (java.security.PrivateKey) $r16;

     label08:
        return $r17;

     label09:
        $r8 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_PBES2>;

     label10:
        $z0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r8);

     label11:
        if $z0 == 0 goto label15;

     label12:
        $r15 = specialinvoke r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: javax.crypto.Cipher createCipher(int,char[],org.spongycastle.asn1.x509.AlgorithmIdentifier)>(4, $r3, $r1);

        $r16 = virtualinvoke $r15.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>($r2, "", 2);

        $r17 = (java.security.PrivateKey) $r16;

     label13:
        return $r17;

     label14:
        r5 := @caughtexception;

        $r18 = new java.io.IOException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception unwrapping private key - ");

        $r14 = virtualinvoke r5.<java.lang.Exception: java.lang.String toString()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r18;

     label15:
        $r18 = new java.io.IOException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception unwrapping private key - cannot recognise: ");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r14 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r18;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
    }
    protected byte[] wrapKey(java.lang.String, java.security.Key, org.spongycastle.asn1.pkcs.PKCS12PBEParams, char[]) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi r0;
        java.lang.String $r1;
        java.security.Key $r2;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r3;
        char[] $r4;
        javax.crypto.spec.PBEParameterSpec r5;
        java.lang.Exception r6;
        javax.crypto.spec.PBEKeySpec r7;
        org.spongycastle.jcajce.util.JcaJceHelper $r8;
        javax.crypto.SecretKeyFactory $r9;
        byte[] $r10;
        java.math.BigInteger $r11;
        int $i0;
        javax.crypto.Cipher $r12;
        javax.crypto.SecretKey $r13;
        java.io.IOException $r14;
        java.lang.StringBuilder $r15;

        r0 := @this: org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.Key;

        $r3 := @parameter2: org.spongycastle.asn1.pkcs.PKCS12PBEParams;

        $r4 := @parameter3: char[];

        r7 = new javax.crypto.spec.PBEKeySpec;

        specialinvoke r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r4);

     label1:
        $r8 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        $r9 = interfaceinvoke $r8.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.SecretKeyFactory createSecretKeyFactory(java.lang.String)>($r1);

     label2:
        r5 = new javax.crypto.spec.PBEParameterSpec;

     label3:
        $r10 = virtualinvoke $r3.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: byte[] getIV()>();

        $r11 = virtualinvoke $r3.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: java.math.BigInteger getIterations()>();

        $i0 = virtualinvoke $r11.<java.math.BigInteger: int intValue()>();

        specialinvoke r5.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r10, $i0);

        $r8 = r0.<org.spongycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        $r12 = interfaceinvoke $r8.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.Cipher createCipher(java.lang.String)>($r1);

        $r13 = virtualinvoke $r9.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r7);

        virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(3, $r13, r5);

        $r10 = virtualinvoke $r12.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>($r2);

     label4:
        return $r10;

     label5:
        r6 := @caughtexception;

        $r14 = new java.io.IOException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception encrypting data - ");

        $r1 = virtualinvoke r6.<java.lang.Exception: java.lang.String toString()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r1);

        throw $r14;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
