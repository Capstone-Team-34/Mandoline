org.spongycastle.jcajce.provider.symmetric.util.BaseBlockCipher$1 extends java.security.InvalidKeyException
final org.spongycastle.jcajce.provider.symmetric.util.BaseBlockCipher this$0
final java.lang.Exception val$e
    void <init>(org.spongycastle.jcajce.provider.symmetric.util.BaseBlockCipher, java.lang.String, java.lang.Exception)
    {
        org.spongycastle.jcajce.provider.symmetric.util.BaseBlockCipher$1 r0;
        org.spongycastle.jcajce.provider.symmetric.util.BaseBlockCipher $r1;
        java.lang.String $r2;
        java.lang.Exception $r3;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.util.BaseBlockCipher$1;

        $r1 := @parameter0: org.spongycastle.jcajce.provider.symmetric.util.BaseBlockCipher;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Exception;

        r0.<org.spongycastle.jcajce.provider.symmetric.util.BaseBlockCipher$1: org.spongycastle.jcajce.provider.symmetric.util.BaseBlockCipher this$0> = $r1;

        r0.<org.spongycastle.jcajce.provider.symmetric.util.BaseBlockCipher$1: java.lang.Exception val$e> = $r3;

        specialinvoke r0.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r2);

        return;
    }
    public java.lang.Throwable getCause()
    {
        org.spongycastle.jcajce.provider.symmetric.util.BaseBlockCipher$1 r0;
        java.lang.Exception r1;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.util.BaseBlockCipher$1;

        r1 = r0.<org.spongycastle.jcajce.provider.symmetric.util.BaseBlockCipher$1: java.lang.Exception val$e>;

        return r1;
    }
