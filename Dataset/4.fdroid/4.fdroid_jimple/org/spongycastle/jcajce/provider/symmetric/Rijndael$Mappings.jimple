org.spongycastle.jcajce.provider.symmetric.Rijndael$Mappings extends org.spongycastle.jcajce.provider.util.AlgorithmProvider
private static final java.lang.String PREFIX
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lorg/spongycastle/jcajce/provider/symmetric/Rijndael;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <org.spongycastle.jcajce.provider.symmetric.Rijndael$Mappings: java.lang.String PREFIX> = $r0;

        return;
    }
    public void <init>()
    {
        org.spongycastle.jcajce.provider.symmetric.Rijndael$Mappings r0;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.Rijndael$Mappings;

        specialinvoke r0.<org.spongycastle.jcajce.provider.util.AlgorithmProvider: void <init>()>();

        return;
    }
    public void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider)
    {
        org.spongycastle.jcajce.provider.symmetric.Rijndael$Mappings r0;
        org.spongycastle.jcajce.provider.config.ConfigurableProvider $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.Rijndael$Mappings;

        $r1 := @parameter0: org.spongycastle.jcajce.provider.config.ConfigurableProvider;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = <org.spongycastle.jcajce.provider.symmetric.Rijndael$Mappings: java.lang.String PREFIX>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$ECB");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("Cipher.RIJNDAEL", $r3);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = <org.spongycastle.jcajce.provider.symmetric.Rijndael$Mappings: java.lang.String PREFIX>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$KeyGen");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("KeyGenerator.RIJNDAEL", $r3);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = <org.spongycastle.jcajce.provider.symmetric.Rijndael$Mappings: java.lang.String PREFIX>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$AlgParams");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.spongycastle.jcajce.provider.config.ConfigurableProvider: void addAlgorithm(java.lang.String,java.lang.String)>("AlgorithmParameters.RIJNDAEL", $r3);

        return;
    }
