org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams extends org.spongycastle.jcajce.provider.symmetric.util.BaseAlgorithmParameters
private byte[] iv
    public void <init>()
    {
        org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams r0;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams;

        specialinvoke r0.<org.spongycastle.jcajce.provider.symmetric.util.BaseAlgorithmParameters: void <init>()>();

        return;
    }
    protected byte[] engineGetEncoded() throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams;

        $r1 = virtualinvoke r0.<org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams: byte[] engineGetEncoded(java.lang.String)>("ASN.1");

        return $r1;
    }
    protected byte[] engineGetEncoded(java.lang.String) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams r0;
        java.lang.String $r1;
        boolean $z0;
        org.spongycastle.asn1.misc.IDEACBCPar $r2;
        byte[] $r3, $r4, $r5;
        int $i0;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams: boolean isASN1FormatString(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r2 = new org.spongycastle.asn1.misc.IDEACBCPar;

        $r3 = virtualinvoke r0.<org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams: byte[] engineGetEncoded(java.lang.String)>("RAW");

        specialinvoke $r2.<org.spongycastle.asn1.misc.IDEACBCPar: void <init>(byte[])>($r3);

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.misc.IDEACBCPar: byte[] getEncoded()>();

        return $r3;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("RAW");

        if $z0 == 0 goto label2;

        $r3 = r0.<org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams: byte[] iv>;

        $i0 = lengthof $r3;

        $r3 = newarray (byte)[$i0];

        $r4 = r0.<org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams: byte[] iv>;

        $r5 = r0.<org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams: byte[] iv>;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, 0, $i0);

        return $r3;

     label2:
        return null;
    }
    protected void engineInit(java.security.spec.AlgorithmParameterSpec) throws java.security.spec.InvalidParameterSpecException
    {
        org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams r0;
        byte[] $r1;
        java.security.spec.AlgorithmParameterSpec $r2;
        boolean $z0;
        java.security.spec.InvalidParameterSpecException $r3;
        javax.crypto.spec.IvParameterSpec $r4;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams;

        $r2 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $z0 = $r2 instanceof javax.crypto.spec.IvParameterSpec;

        if $z0 != 0 goto label1;

        $r3 = new java.security.spec.InvalidParameterSpecException;

        specialinvoke $r3.<java.security.spec.InvalidParameterSpecException: void <init>(java.lang.String)>("IvParameterSpec required to initialise a IV parameters algorithm parameters object");

        throw $r3;

     label1:
        $r4 = (javax.crypto.spec.IvParameterSpec) $r2;

        $r1 = virtualinvoke $r4.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        r0.<org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams: byte[] iv> = $r1;

        return;
    }
    protected void engineInit(byte[]) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams r0;
        byte[] $r1, $r2, $r3;
        int $i0;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $r2 = newarray (byte)[$i0];

        r0.<org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams: byte[] iv> = $r2;

        $r2 = r0.<org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams: byte[] iv>;

        $r3 = r0.<org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams: byte[] iv>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }
    protected void engineInit(byte[], java.lang.String) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams r0;
        byte[] $r1;
        java.lang.String $r2;
        org.spongycastle.asn1.ASN1InputStream r3;
        org.spongycastle.asn1.misc.IDEACBCPar r4;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive $r5;
        org.spongycastle.asn1.ASN1Sequence $r6;
        java.io.IOException $r7;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("RAW");

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams: void engineInit(byte[])>($r1);

        return;

     label1:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ASN.1");

        if $z0 == 0 goto label2;

        r3 = new org.spongycastle.asn1.ASN1InputStream;

        specialinvoke r3.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r1);

        r4 = new org.spongycastle.asn1.misc.IDEACBCPar;

        $r5 = virtualinvoke r3.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r6 = (org.spongycastle.asn1.ASN1Sequence) $r5;

        specialinvoke r4.<org.spongycastle.asn1.misc.IDEACBCPar: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r6);

        $r1 = virtualinvoke r4.<org.spongycastle.asn1.misc.IDEACBCPar: byte[] getIV()>();

        virtualinvoke r0.<org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams: void engineInit(byte[])>($r1);

        return;

     label2:
        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Unknown parameters format in IV parameters object");

        throw $r7;
    }
    protected java.lang.String engineToString()
    {
        org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams r0;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams;

        return "IDEA Parameters";
    }
    protected java.security.spec.AlgorithmParameterSpec localEngineGetParameterSpec(java.lang.Class) throws java.security.spec.InvalidParameterSpecException
    {
        org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams r0;
        java.lang.Class $r1;
        javax.crypto.spec.IvParameterSpec $r2;
        byte[] $r3;
        java.security.spec.InvalidParameterSpecException $r4;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams;

        $r1 := @parameter0: java.lang.Class;

        if $r1 != class "Ljavax/crypto/spec/IvParameterSpec;" goto label1;

        $r2 = new javax.crypto.spec.IvParameterSpec;

        $r3 = r0.<org.spongycastle.jcajce.provider.symmetric.IDEA$AlgParams: byte[] iv>;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

        return $r2;

     label1:
        $r4 = new java.security.spec.InvalidParameterSpecException;

        specialinvoke $r4.<java.security.spec.InvalidParameterSpecException: void <init>(java.lang.String)>("unknown parameter spec passed to IV parameters object.");

        throw $r4;
    }
