org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters extends org.spongycastle.jcajce.provider.symmetric.util.BaseAlgorithmParameters
private byte[] iv
    public void <init>()
    {
        org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters r0;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters;

        specialinvoke r0.<org.spongycastle.jcajce.provider.symmetric.util.BaseAlgorithmParameters: void <init>()>();

        return;
    }
    protected byte[] engineGetEncoded() throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters;

        $r1 = virtualinvoke r0.<org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters: byte[] engineGetEncoded(java.lang.String)>("ASN.1");

        return $r1;
    }
    protected byte[] engineGetEncoded(java.lang.String) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters r0;
        java.lang.String $r1;
        boolean $z0;
        org.spongycastle.asn1.DEROctetString $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters: boolean isASN1FormatString(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r2 = new org.spongycastle.asn1.DEROctetString;

        $r3 = virtualinvoke r0.<org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters: byte[] engineGetEncoded(java.lang.String)>("RAW");

        specialinvoke $r2.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r3);

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.DEROctetString: byte[] getEncoded()>();

        return $r3;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("RAW");

        if $z0 == 0 goto label2;

        $r3 = r0.<org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters: byte[] iv>;

        $r3 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r3);

        return $r3;

     label2:
        return null;
    }
    protected void engineInit(java.security.spec.AlgorithmParameterSpec) throws java.security.spec.InvalidParameterSpecException
    {
        org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters r0;
        byte[] $r1;
        java.security.spec.AlgorithmParameterSpec $r2;
        boolean $z0;
        java.security.spec.InvalidParameterSpecException $r3;
        javax.crypto.spec.IvParameterSpec $r4;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters;

        $r2 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $z0 = $r2 instanceof javax.crypto.spec.IvParameterSpec;

        if $z0 != 0 goto label1;

        $r3 = new java.security.spec.InvalidParameterSpecException;

        specialinvoke $r3.<java.security.spec.InvalidParameterSpecException: void <init>(java.lang.String)>("IvParameterSpec required to initialise a IV parameters algorithm parameters object");

        throw $r3;

     label1:
        $r4 = (javax.crypto.spec.IvParameterSpec) $r2;

        $r1 = virtualinvoke $r4.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        r0.<org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters: byte[] iv> = $r1;

        return;
    }
    protected void engineInit(byte[]) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters r0;
        byte[] $r1;
        int $i0;
        byte $b1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        org.spongycastle.asn1.ASN1OctetString r3;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $i0 = $i0 % 8;

        if $i0 == 0 goto label1;

        $b1 = $r1[0];

        if $b1 != 4 goto label1;

        $b1 = $r1[1];

        $i0 = lengthof $r1;

        $i0 = $i0 + -2;

        if $b1 != $i0 goto label1;

        $r2 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r1);

        r3 = (org.spongycastle.asn1.ASN1OctetString) $r2;

        $r1 = virtualinvoke r3.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

     label1:
        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        r0.<org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters: byte[] iv> = $r1;

        return;
    }
    protected void engineInit(byte[], java.lang.String) throws java.io.IOException
    {
        org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters r0;
        byte[] $r1;
        java.lang.String $r2;
        java.lang.Exception r3;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive $r4;
        org.spongycastle.asn1.ASN1OctetString r5;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters: boolean isASN1FormatString(java.lang.String)>($r2);

        if $z0 == 0 goto label4;

     label1:
        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r1);

        r5 = (org.spongycastle.asn1.ASN1OctetString) $r4;

        $r1 = virtualinvoke r5.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        virtualinvoke r0.<org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters: void engineInit(byte[])>($r1);

     label2:
        return;

     label3:
        r3 := @caughtexception;

        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception decoding: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r6;

     label4:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("RAW");

        if $z0 == 0 goto label5;

        virtualinvoke r0.<org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters: void engineInit(byte[])>($r1);

        return;

     label5:
        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Unknown parameters format in IV parameters object");

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    protected java.lang.String engineToString()
    {
        org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters r0;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters;

        return "IV Parameters";
    }
    protected java.security.spec.AlgorithmParameterSpec localEngineGetParameterSpec(java.lang.Class) throws java.security.spec.InvalidParameterSpecException
    {
        org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters r0;
        java.lang.Class $r1;
        javax.crypto.spec.IvParameterSpec $r2;
        byte[] $r3;
        java.security.spec.InvalidParameterSpecException $r4;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters;

        $r1 := @parameter0: java.lang.Class;

        if $r1 != class "Ljavax/crypto/spec/IvParameterSpec;" goto label1;

        $r2 = new javax.crypto.spec.IvParameterSpec;

        $r3 = r0.<org.spongycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters: byte[] iv>;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

        return $r2;

     label1:
        $r4 = new java.security.spec.InvalidParameterSpecException;

        specialinvoke $r4.<java.security.spec.InvalidParameterSpecException: void <init>(java.lang.String)>("unknown parameter spec passed to IV parameters object.");

        throw $r4;
    }
