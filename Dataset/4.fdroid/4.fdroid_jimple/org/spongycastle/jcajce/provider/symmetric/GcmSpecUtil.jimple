org.spongycastle.jcajce.provider.symmetric.GcmSpecUtil extends java.lang.Object
static final java.lang.Class gcmSpecClass
    static void <clinit>()
    {
        java.lang.Class $r0;

        $r0 = staticinvoke <org.spongycastle.jcajce.provider.symmetric.GcmSpecUtil: java.lang.Class lookup(java.lang.String)>("javax.crypto.spec.GCMParameterSpec");

        <org.spongycastle.jcajce.provider.symmetric.GcmSpecUtil: java.lang.Class gcmSpecClass> = $r0;

        return;
    }
    void <init>()
    {
        org.spongycastle.jcajce.provider.symmetric.GcmSpecUtil r0;

        r0 := @this: org.spongycastle.jcajce.provider.symmetric.GcmSpecUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static org.spongycastle.asn1.cms.GCMParameters extractGcmParameters(java.security.spec.AlgorithmParameterSpec) throws java.security.spec.InvalidParameterSpecException
    {
        java.security.spec.AlgorithmParameterSpec $r0;
        java.lang.Exception r1;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r4, $r5;
        org.spongycastle.asn1.cms.GCMParameters $r6;
        java.lang.Object[] $r7;
        java.lang.Object $r8;
        byte[] $r9;
        java.lang.Integer $r10;
        int $i0;
        java.security.spec.InvalidParameterSpecException $r11;

        $r0 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $r2 = <org.spongycastle.jcajce.provider.symmetric.GcmSpecUtil: java.lang.Class gcmSpecClass>;

     label01:
        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getTLen", $r3);

     label02:
        $r2 = <org.spongycastle.jcajce.provider.symmetric.GcmSpecUtil: java.lang.Class gcmSpecClass>;

     label03:
        $r3 = newarray (java.lang.Class)[0];

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getIV", $r3);

     label04:
        $r6 = new org.spongycastle.asn1.cms.GCMParameters;

     label05:
        $r7 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r7);

        $r9 = (byte[]) $r8;

     label06:
        $r7 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r7);

        $r10 = (java.lang.Integer) $r8;

        $i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

     label07:
        $i0 = $i0 / 8;

     label08:
        specialinvoke $r6.<org.spongycastle.asn1.cms.GCMParameters: void <init>(byte[],int)>($r9, $i0);

     label09:
        return $r6;

     label10:
        r1 := @caughtexception;

        $r11 = new java.security.spec.InvalidParameterSpecException;

        specialinvoke $r11.<java.security.spec.InvalidParameterSpecException: void <init>(java.lang.String)>("Cannot process GCMParameterSpec");

        throw $r11;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }
    static java.security.spec.AlgorithmParameterSpec extractGcmSpec(org.spongycastle.asn1.ASN1Primitive) throws java.security.spec.InvalidParameterSpecException
    {
        org.spongycastle.asn1.ASN1Primitive $r0;
        org.spongycastle.asn1.cms.GCMParameters $r1;
        java.lang.Class $r2, $r4;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r5;
        java.lang.Object[] $r6;
        int $i0;
        java.lang.Integer $r7;
        byte[] $r8;
        java.lang.Object $r9;
        java.security.spec.AlgorithmParameterSpec $r10;
        java.lang.NoSuchMethodException r11;
        java.security.spec.InvalidParameterSpecException $r12;
        java.lang.Exception r13;
        java.lang.StringBuilder $r14;
        java.lang.String $r15;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1Primitive;

     label01:
        $r1 = staticinvoke <org.spongycastle.asn1.cms.GCMParameters: org.spongycastle.asn1.cms.GCMParameters getInstance(java.lang.Object)>($r0);

     label02:
        $r2 = <org.spongycastle.jcajce.provider.symmetric.GcmSpecUtil: java.lang.Class gcmSpecClass>;

     label03:
        $r3 = newarray (java.lang.Class)[2];

     label04:
        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

     label05:
        $r3[0] = $r4;

        $r3[1] = class "[B";

     label06:
        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label07:
        $r6 = newarray (java.lang.Object)[2];

     label08:
        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.cms.GCMParameters: int getIcvLen()>();

     label09:
        $i0 = $i0 * 8;

     label10:
        $r7 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>($i0);

     label11:
        $r6[0] = $r7;

     label12:
        $r8 = virtualinvoke $r1.<org.spongycastle.asn1.cms.GCMParameters: byte[] getNonce()>();

     label13:
        $r6[1] = $r8;

     label14:
        $r9 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

     label15:
        $r10 = (java.security.spec.AlgorithmParameterSpec) $r9;

     label16:
        return $r10;

     label17:
        r11 := @caughtexception;

        $r12 = new java.security.spec.InvalidParameterSpecException;

        specialinvoke $r12.<java.security.spec.InvalidParameterSpecException: void <init>(java.lang.String)>("No constructor found!");

        throw $r12;

     label18:
        r13 := @caughtexception;

        $r12 = new java.security.spec.InvalidParameterSpecException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Construction failed: ");

        $r15 = virtualinvoke r13.<java.lang.Exception: java.lang.String getMessage()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.security.spec.InvalidParameterSpecException: void <init>(java.lang.String)>($r15);

        throw $r12;

        catch java.lang.NoSuchMethodException from label01 to label02 with label17;
        catch java.lang.NoSuchMethodException from label06 to label07 with label17;
        catch java.lang.NoSuchMethodException from label08 to label09 with label17;
        catch java.lang.NoSuchMethodException from label10 to label11 with label17;
        catch java.lang.NoSuchMethodException from label12 to label13 with label17;
        catch java.lang.NoSuchMethodException from label14 to label15 with label17;
        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label05 to label09 with label18;
        catch java.lang.Exception from label10 to label16 with label18;
    }
    static boolean gcmSpecExists()
    {
        java.lang.Class $r0;

        $r0 = <org.spongycastle.jcajce.provider.symmetric.GcmSpecUtil: java.lang.Class gcmSpecClass>;

        if $r0 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    static boolean isGcmSpec(java.lang.Class)
    {
        java.lang.Class $r0, $r1;

        $r0 := @parameter0: java.lang.Class;

        $r1 = <org.spongycastle.jcajce.provider.symmetric.GcmSpecUtil: java.lang.Class gcmSpecClass>;

        if $r1 != $r0 goto label1;

        return 1;

     label1:
        return 0;
    }
    static boolean isGcmSpec(java.security.spec.AlgorithmParameterSpec)
    {
        java.security.spec.AlgorithmParameterSpec $r0;
        boolean $z0;
        java.lang.Class $r1;

        $r0 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $r1 = <org.spongycastle.jcajce.provider.symmetric.GcmSpecUtil: java.lang.Class gcmSpecClass>;

        if $r1 == null goto label1;

        $r1 = <org.spongycastle.jcajce.provider.symmetric.GcmSpecUtil: java.lang.Class gcmSpecClass>;

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isInstance(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private static java.lang.Class lookup(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Exception r1;
        java.lang.Class $r2;
        java.lang.ClassLoader $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = class "Lorg/spongycastle/jcajce/provider/symmetric/GcmSpecUtil;";

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = virtualinvoke $r3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r0);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
