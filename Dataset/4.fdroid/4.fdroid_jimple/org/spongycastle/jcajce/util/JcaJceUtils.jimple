org.spongycastle.jcajce.util.JcaJceUtils extends java.lang.Object
    private void <init>()
    {
        org.spongycastle.jcajce.util.JcaJceUtils r0;

        r0 := @this: org.spongycastle.jcajce.util.JcaJceUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static org.spongycastle.asn1.ASN1Encodable extractParameters(java.security.AlgorithmParameters) throws java.io.IOException
    {
        java.security.AlgorithmParameters $r0;
        java.lang.Exception r1;
        byte[] $r2;
        org.spongycastle.asn1.ASN1Primitive $r3;

        $r0 := @parameter0: java.security.AlgorithmParameters;

     label1:
        $r2 = virtualinvoke $r0.<java.security.AlgorithmParameters: byte[] getEncoded(java.lang.String)>("ASN.1");

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r2);

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        $r2 = virtualinvoke $r0.<java.security.AlgorithmParameters: byte[] getEncoded()>();

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r2);

        return $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public static java.lang.String getDigestAlgName(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.asn1.ASN1ObjectIdentifier $r0, $r1;
        boolean $z0;
        java.lang.String $r2;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r1 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier md5>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label01;

        return "MD5";

     label01:
        $r1 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier idSHA1>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label02;

        return "SHA1";

     label02:
        $r1 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_sha224>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label03;

        return "SHA224";

     label03:
        $r1 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_sha256>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label04;

        return "SHA256";

     label04:
        $r1 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_sha384>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label05;

        return "SHA384";

     label05:
        $r1 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_sha512>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label06;

        return "SHA512";

     label06:
        $r1 = <org.spongycastle.asn1.teletrust.TeleTrusTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier ripemd128>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label07;

        return "RIPEMD128";

     label07:
        $r1 = <org.spongycastle.asn1.teletrust.TeleTrusTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier ripemd160>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label08;

        return "RIPEMD160";

     label08:
        $r1 = <org.spongycastle.asn1.teletrust.TeleTrusTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier ripemd256>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label09;

        return "RIPEMD256";

     label09:
        $r1 = <org.spongycastle.asn1.cryptopro.CryptoProObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier gostR3411>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label10;

        return "GOST3411";

     label10:
        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        return $r2;
    }
    public static void loadParameters(java.security.AlgorithmParameters, org.spongycastle.asn1.ASN1Encodable) throws java.io.IOException
    {
        java.security.AlgorithmParameters $r0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        java.lang.Exception r2;
        org.spongycastle.asn1.ASN1Primitive $r3;
        byte[] $r4;

        $r0 := @parameter0: java.security.AlgorithmParameters;

        $r1 := @parameter1: org.spongycastle.asn1.ASN1Encodable;

     label1:
        $r3 = interfaceinvoke $r1.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded()>();

        virtualinvoke $r0.<java.security.AlgorithmParameters: void init(byte[],java.lang.String)>($r4, "ASN.1");

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r3 = interfaceinvoke $r1.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded()>();

        virtualinvoke $r0.<java.security.AlgorithmParameters: void init(byte[])>($r4);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
