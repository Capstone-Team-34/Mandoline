org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask extends java.lang.Object implements java.util.concurrent.Callable
private org.spongycastle.pqc.math.ntru.polynomial.ModularResultant modRes1
private org.spongycastle.pqc.math.ntru.polynomial.ModularResultant modRes2
final org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial this$0
    private void <init>(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial, org.spongycastle.pqc.math.ntru.polynomial.ModularResultant, org.spongycastle.pqc.math.ntru.polynomial.ModularResultant)
    {
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask r0;
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial $r1;
        org.spongycastle.pqc.math.ntru.polynomial.ModularResultant $r2, $r3;

        r0 := @this: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask;

        $r1 := @parameter0: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial;

        $r2 := @parameter1: org.spongycastle.pqc.math.ntru.polynomial.ModularResultant;

        $r3 := @parameter2: org.spongycastle.pqc.math.ntru.polynomial.ModularResultant;

        r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask: org.spongycastle.pqc.math.ntru.polynomial.ModularResultant modRes1> = $r2;

        r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask: org.spongycastle.pqc.math.ntru.polynomial.ModularResultant modRes2> = $r3;

        return;
    }
    void <init>(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial, org.spongycastle.pqc.math.ntru.polynomial.ModularResultant, org.spongycastle.pqc.math.ntru.polynomial.ModularResultant, org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$1)
    {
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask r0;
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial $r1;
        org.spongycastle.pqc.math.ntru.polynomial.ModularResultant $r2, $r3;
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$1 $r4;

        r0 := @this: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask;

        $r1 := @parameter0: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial;

        $r2 := @parameter1: org.spongycastle.pqc.math.ntru.polynomial.ModularResultant;

        $r3 := @parameter2: org.spongycastle.pqc.math.ntru.polynomial.ModularResultant;

        $r4 := @parameter3: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$1;

        specialinvoke r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask: void <init>(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial,org.spongycastle.pqc.math.ntru.polynomial.ModularResultant,org.spongycastle.pqc.math.ntru.polynomial.ModularResultant)>($r1, $r2, $r3);

        return;
    }
    public volatile java.lang.Object call() throws java.lang.Exception
    {
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask r0;
        org.spongycastle.pqc.math.ntru.polynomial.ModularResultant $r1;

        r0 := @this: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask;

        $r1 = virtualinvoke r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask: org.spongycastle.pqc.math.ntru.polynomial.ModularResultant call()>();

        return $r1;
    }
    public org.spongycastle.pqc.math.ntru.polynomial.ModularResultant call()
    {
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask r0;
        org.spongycastle.pqc.math.ntru.polynomial.ModularResultant $r1, $r2;

        r0 := @this: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask;

        $r2 = r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask: org.spongycastle.pqc.math.ntru.polynomial.ModularResultant modRes1>;

        $r1 = r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$CombineTask: org.spongycastle.pqc.math.ntru.polynomial.ModularResultant modRes2>;

        $r1 = staticinvoke <org.spongycastle.pqc.math.ntru.polynomial.ModularResultant: org.spongycastle.pqc.math.ntru.polynomial.ModularResultant combineRho(org.spongycastle.pqc.math.ntru.polynomial.ModularResultant,org.spongycastle.pqc.math.ntru.polynomial.ModularResultant)>($r2, $r1);

        return $r1;
    }
