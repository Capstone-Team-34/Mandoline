org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask extends java.lang.Object implements java.util.concurrent.Callable
private int modulus
final org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial this$0
    private void <init>(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial, int)
    {
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask r0;
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial $r1;
        int $i0;

        r0 := @this: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask;

        $r1 := @parameter0: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial;

        $i0 := @parameter1: int;

        r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask: int modulus> = $i0;

        return;
    }
    void <init>(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial, int, org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$1)
    {
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask r0;
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial $r1;
        int $i0;
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$1 $r2;

        r0 := @this: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask;

        $r1 := @parameter0: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$1;

        specialinvoke r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask: void <init>(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial,int)>($r1, $i0);

        return;
    }
    public volatile java.lang.Object call() throws java.lang.Exception
    {
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask r0;
        org.spongycastle.pqc.math.ntru.polynomial.ModularResultant $r1;

        r0 := @this: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask;

        $r1 = virtualinvoke r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask: org.spongycastle.pqc.math.ntru.polynomial.ModularResultant call()>();

        return $r1;
    }
    public org.spongycastle.pqc.math.ntru.polynomial.ModularResultant call()
    {
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask r0;
        int $i0;
        org.spongycastle.pqc.math.ntru.polynomial.ModularResultant $r1;
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial $r2;

        r0 := @this: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask;

        $r2 = r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial this$0>;

        $i0 = r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial$ModResultantTask: int modulus>;

        $r1 = virtualinvoke $r2.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial: org.spongycastle.pqc.math.ntru.polynomial.ModularResultant resultant(int)>($i0);

        return $r1;
    }
