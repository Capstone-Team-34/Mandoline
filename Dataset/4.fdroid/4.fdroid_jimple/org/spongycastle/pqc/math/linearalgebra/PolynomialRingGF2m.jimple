org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m extends java.lang.Object
private org.spongycastle.pqc.math.linearalgebra.GF2mField field
private org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM p
protected org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqMatrix
protected org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqRootMatrix
    public void <init>(org.spongycastle.pqc.math.linearalgebra.GF2mField, org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)
    {
        org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m r0;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r1;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2mField;

        $r2 := @parameter1: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.GF2mField field> = $r1;

        r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM p> = $r2;

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: void computeSquaringMatrix()>();

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: void computeSquareRootMatrix()>();

        return;
    }
    private void computeSquareRootMatrix()
    {
        org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m r0;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] r1, $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r2;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r3, $r5, $r7;
        int $i0, i1, $i2, $i3;
        boolean z0;
        java.lang.ArithmeticException $r6;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM p>;

        $i0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: int getDegree()>();

        r1 = newarray (org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)[$i0];

        i1 = $i0 + -1;

     label01:
        if i1 < 0 goto label02;

        $r3 = new org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqMatrix>;

        $r5 = $r4[i1];

        specialinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: void <init>(org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)>($r5);

        r1[i1] = $r3;

        i1 = i1 + -1;

        goto label01;

     label02:
        $r4 = newarray (org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)[$i0];

        r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqRootMatrix> = $r4;

        i1 = $i0 + -1;

     label03:
        if i1 < 0 goto label04;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqRootMatrix>;

        $r3 = new org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.GF2mField field>;

        specialinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2mField,int)>($r2, i1);

        $r4[i1] = $r3;

        i1 = i1 + -1;

        goto label03;

     label04:
        i1 = 0;

     label05:
        if i1 >= $i0 goto label13;

        $r3 = r1[i1];

        $i2 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: int getCoefficient(int)>(i1);

        if $i2 != 0 goto label09;

        z0 = 0;

        $i2 = i1 + 1;

     label06:
        if $i2 >= $i0 goto label08;

        $r3 = r1[$i2];

        $i3 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: int getCoefficient(int)>(i1);

        if $i3 == 0 goto label07;

        z0 = 1;

        staticinvoke <org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: void swapColumns(org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[],int,int)>(r1, i1, $i2);

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqRootMatrix>;

        staticinvoke <org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: void swapColumns(org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[],int,int)>($r4, i1, $i2);

        $i2 = $i0;

     label07:
        $i2 = $i2 + 1;

        goto label06;

     label08:
        if z0 != 0 goto label09;

        $r6 = new java.lang.ArithmeticException;

        specialinvoke $r6.<java.lang.ArithmeticException: void <init>(java.lang.String)>("Squaring matrix is not invertible.");

        throw $r6;

     label09:
        $r3 = r1[i1];

        $i2 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: int getCoefficient(int)>(i1);

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.GF2mField field>;

        $i2 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2mField: int inverse(int)>($i2);

        $r3 = r1[i1];

        virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: void multThisWithElement(int)>($i2);

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqRootMatrix>;

        $r3 = $r4[i1];

        virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: void multThisWithElement(int)>($i2);

        $i2 = 0;

     label10:
        if $i2 >= $i0 goto label12;

        if $i2 == i1 goto label11;

        $r3 = r1[$i2];

        $i3 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: int getCoefficient(int)>(i1);

        if $i3 == 0 goto label11;

        $r3 = r1[i1];

        $r3 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM multWithElement(int)>($i3);

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqRootMatrix>;

        $r5 = $r4[i1];

        $r5 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM multWithElement(int)>($i3);

        $r7 = r1[$i2];

        virtualinvoke $r7.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: void addToThis(org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)>($r3);

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqRootMatrix>;

        $r3 = $r4[$i2];

        virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: void addToThis(org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)>($r5);

     label11:
        $i2 = $i2 + 1;

        goto label10;

     label12:
        i1 = i1 + 1;

        goto label05;

     label13:
        return;
    }
    private void computeSquaringMatrix()
    {
        org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m r0;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM r1, $r5;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r2;
        int $i0, i1, $i2;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] $r3;
        int[] r4;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m;

        r1 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM p>;

        $i0 = virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: int getDegree()>();

        $r3 = newarray (org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)[$i0];

        r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqMatrix> = $r3;

        i1 = 0;

     label1:
        $i2 = $i0 >> 1;

        if i1 >= $i2 goto label2;

        $i2 = i1 << 1;

        $i2 = $i2 + 1;

        r4 = newarray (int)[$i2];

        $i2 = i1 << 1;

        r4[$i2] = 1;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqMatrix>;

        r1 = new org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.GF2mField field>;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2mField,int[])>($r2, r4);

        $r3[i1] = r1;

        i1 = i1 + 1;

        goto label1;

     label2:
        i1 = $i0 >> 1;

     label3:
        if i1 >= $i0 goto label4;

        $i2 = i1 << 1;

        $i2 = $i2 + 1;

        r4 = newarray (int)[$i2];

        $i2 = i1 << 1;

        r4[$i2] = 1;

        r1 = new org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.GF2mField field>;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2mField,int[])>($r2, r4);

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqMatrix>;

        $r5 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM p>;

        r1 = virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM mod(org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)>($r5);

        $r3[i1] = r1;

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }
    private static void swapColumns(org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[], int, int)
    {
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] $r0;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM r1, $r2;

        $r0 := @parameter0: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r1 = $r0[$i0];

        $r2 = $r0[$i1];

        $r0[$i0] = $r2;

        $r0[$i1] = r1;

        return;
    }
    public org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getSquareRootMatrix()
    {
        org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m r0;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m;

        r1 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqRootMatrix>;

        return r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getSquaringMatrix()
    {
        org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m r0;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m;

        r1 = r0.<org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2m: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] sqMatrix>;

        return r1;
    }
