org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial extends java.lang.Object
private org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff
private int size
    private void <init>(int)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size> = $i0;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        $r1 = newarray (org.spongycastle.pqc.math.linearalgebra.GF2nElement)[$i0];

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff> = $r1;

        return;
    }
    public void <init>(int, org.spongycastle.pqc.math.linearalgebra.GF2nElement)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r1, $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r2;
        java.lang.Object $r3;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.spongycastle.pqc.math.linearalgebra.GF2nElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size> = $i0;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        $r2 = newarray (org.spongycastle.pqc.math.linearalgebra.GF2nElement)[$i0];

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff> = $r2;

        $i0 = 0;

     label1:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        if $i0 >= $i1 goto label2;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r3 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: java.lang.Object clone()>();

        $r4 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r3;

        $r2[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
    public void <init>(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial, org.spongycastle.pqc.math.linearalgebra.GF2nField)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r2;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r3;
        boolean $z0;
        java.lang.Object[] $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r5;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement $r6;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r7;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement $r8;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $r2 := @parameter1: org.spongycastle.pqc.math.linearalgebra.GF2nField;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int getDegree()>();

        $i0 = $i0 + 1;

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size> = $i0;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        $r3 = newarray (org.spongycastle.pqc.math.linearalgebra.GF2nElement)[$i0];

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff> = $r3;

        $z0 = $r2 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nONBField;

        if $z0 == 0 goto label4;

        $i0 = 0;

     label1:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        if $i0 >= $i1 goto label9;

        $z0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean testBit(int)>($i0);

        if $z0 == 0 goto label3;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r5 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBField) $r2;

        $r6 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement ONE(org.spongycastle.pqc.math.linearalgebra.GF2nONBField)>($r5);

        $r4[$i0] = $r6;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r5 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBField) $r2;

        $r6 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement ZERO(org.spongycastle.pqc.math.linearalgebra.GF2nONBField)>($r5);

        $r4[$i0] = $r6;

        goto label2;

     label4:
        $z0 = $r2 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField;

        if $z0 == 0 goto label8;

        $i0 = 0;

     label5:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        if $i0 >= $i1 goto label9;

        $z0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean testBit(int)>($i0);

        if $z0 == 0 goto label7;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r7 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r2;

        $r8 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement ONE(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField)>($r7);

        $r4[$i0] = $r8;

     label6:
        $i0 = $i0 + 1;

        goto label5;

     label7:
        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r7 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r2;

        $r8 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement ZERO(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField)>($r7);

        $r4[$i0] = $r8;

        goto label6;

     label8:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("PolynomialGF2n(Bitstring, GF2nField): B1 must be an instance of GF2nONBField or GF2nPolynomialField!");

        throw $r9;

     label9:
        return;
    }
    public void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0, $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r2, $r4;
        java.lang.Object $r3;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r5;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        $r2 = newarray (org.spongycastle.pqc.math.linearalgebra.GF2nElement)[$i0];

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff> = $r2;

        $i0 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size> = $i0;

        $i0 = 0;

     label1:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        if $i0 >= $i1 goto label2;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r4 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r5 = $r4[$i0];

        $r3 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: java.lang.Object clone()>();

        $r5 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r3;

        $r2[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
    public final org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial add(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0, $r1, r2;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r3, $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r5, $r6;
        org.spongycastle.pqc.math.linearalgebra.GFElement $r7;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        $i1 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        if $i0 < $i1 goto label3;

        r2 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        specialinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        if $i0 >= $i1 goto label2;

        $r3 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r5 = $r4[$i0];

        $r4 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r6 = $r4[$i0];

        $r7 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: org.spongycastle.pqc.math.linearalgebra.GFElement add(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r6);

        $r5 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r7;

        $r3[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $i1 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        if $i0 >= $i1 goto label6;

        $r3 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r5 = $r4[$i0];

        $r3[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        r2 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        specialinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void <init>(int)>($i0);

        $i0 = 0;

     label4:
        $i1 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        if $i0 >= $i1 goto label5;

        $r3 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r5 = $r4[$i0];

        $r4 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r6 = $r4[$i0];

        $r7 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: org.spongycastle.pqc.math.linearalgebra.GFElement add(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r6);

        $r5 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r7;

        $r3[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label4;

     label5:
        $i1 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        if $i0 >= $i1 goto label6;

        $r3 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r4 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r5 = $r4[$i0];

        $r3[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label5;

     label6:
        return r2;
    }
    public final void assignZeroToElements()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0;
        int i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        i0 = 0;

     label1:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        if i0 >= $i1 goto label2;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r2 = $r1[i0];

        virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void assignZero()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public final org.spongycastle.pqc.math.linearalgebra.GF2nElement at(int)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public final org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial[] divide(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException, java.lang.ArithmeticException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0, $r1, r3, $r7;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial[] r2;
        int $i0, $i1, $i2;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r5, $r8;
        org.spongycastle.pqc.math.linearalgebra.GFElement $r6;
        java.lang.Object $r9;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        r2 = newarray (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)[2];

        r3 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        specialinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>(r0);

        virtualinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void shrink()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int getDegree()>();

        $r4 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r5 = $r4[$i0];

        $r6 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: org.spongycastle.pqc.math.linearalgebra.GFElement invert()>();

        $r5 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r6;

        $i1 = virtualinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int getDegree()>();

        if $i1 >= $i0 goto label1;

        $r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        specialinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>(r0);

        r2[0] = $r1;

        $r1 = r2[0];

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void assignZeroToElements()>();

        $r1 = r2[0];

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void shrink()>();

        $r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        specialinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>(r0);

        r2[1] = $r1;

        r0 = r2[1];

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void shrink()>();

        return r2;

     label1:
        $r7 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        specialinvoke $r7.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>(r0);

        r2[0] = $r7;

        r0 = r2[0];

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void assignZeroToElements()>();

        $i1 = virtualinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int getDegree()>();

        $i1 = $i1 - $i0;

     label2:
        if $i1 < 0 goto label3;

        $r4 = r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $i2 = virtualinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int getDegree()>();

        $r8 = $r4[$i2];

        $r6 = virtualinvoke $r8.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: org.spongycastle.pqc.math.linearalgebra.GFElement multiply(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r5);

        $r8 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r6;

        r0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial scalarMultiply(org.spongycastle.pqc.math.linearalgebra.GF2nElement)>($r8);

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void shiftThisLeft(int)>($i1);

        r0 = virtualinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial add(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>(r0);

        r3 = r0;

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void shrink()>();

        $r7 = r2[0];

        $r4 = $r7.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r9 = virtualinvoke $r8.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: java.lang.Object clone()>();

        $r8 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r9;

        $r4[$i1] = $r8;

        $i1 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int getDegree()>();

        $i1 = $i1 - $i0;

        goto label2;

     label3:
        r2[1] = r3;

        r0 = r2[0];

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void shrink()>();

        return r2;
    }
    public final void enlarge(int)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0;
        int $i0, $i1;
        java.lang.Object[] r1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r4;
        boolean $z0;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r5;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement $r6;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r7;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement $r8;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 := @parameter0: int;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        if $i0 > $i1 goto label1;

        return;

     label1:
        r1 = newarray (org.spongycastle.pqc.math.linearalgebra.GF2nElement)[$i0];

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i1);

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r3 = $r2[0];

        $r4 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: org.spongycastle.pqc.math.linearalgebra.GF2nField getField()>();

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r3 = $r2[0];

        $z0 = $r3 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        if $z0 == 0 goto label3;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

     label2:
        if $i1 >= $i0 goto label5;

        $r5 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r4;

        $r6 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement ZERO(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField)>($r5);

        r1[$i1] = $r6;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r3 = $r2[0];

        $z0 = $r3 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        if $z0 == 0 goto label5;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

     label4:
        if $i1 >= $i0 goto label5;

        $r7 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBField) $r4;

        $r8 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement ZERO(org.spongycastle.pqc.math.linearalgebra.GF2nONBField)>($r7);

        r1[$i1] = $r8;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size> = $i0;

        $r2 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement[]) r1;

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff> = $r2;

        return;
    }
    public final boolean equals(java.lang.Object)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r4, $r5;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label4;

        $z0 = $r1 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial) $r1;

        $i0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int getDegree()>();

        $i1 = virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int getDegree()>();

        if $i0 != $i1 goto label4;

        $i0 = 0;

     label2:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        if $i0 >= $i1 goto label3;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r4 = $r3[$i0];

        $r3 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r5 = $r3[$i0];

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return 1;

     label4:
        return 0;
    }
    public final org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial gcd(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException, java.lang.ArithmeticException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0, $r1, r3;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement r2;
        boolean $z0;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r4;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GFElement $r5;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        r3 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        specialinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>(r0);

        r0 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>($r1);

        virtualinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void shrink()>();

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void shrink()>();

     label1:
        $z0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: boolean isZero()>();

        if $z0 != 0 goto label2;

        $r1 = virtualinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial remainder(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>(r0);

        r3 = r0;

        r0 = $r1;

        goto label1;

     label2:
        $r4 = r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $i0 = virtualinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int getDegree()>();

        r2 = $r4[$i0];

        $r5 = virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: org.spongycastle.pqc.math.linearalgebra.GFElement invert()>();

        r2 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r5;

        r0 = virtualinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial scalarMultiply(org.spongycastle.pqc.math.linearalgebra.GF2nElement)>(r2);

        return r0;
    }
    public final int getDegree()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0;
        boolean $z0;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r2 = $r1[$i0];

        $z0 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: boolean isZero()>();

        if $z0 != 0 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return -1;
    }
    public int hashCode()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int getDegree()>();

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    public final boolean isZero()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0;
        boolean $z0;
        int i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        i0 = 0;

     label1:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        if i0 >= $i1 goto label3;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r2 = $r1[i0];

        if $r2 == null goto label2;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r2 = $r1[i0];

        $z0 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: boolean isZero()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 1;
    }
    public final org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial multiply(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0, $r1, r2;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r4, $r6;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r5, $r7, $r9;
        org.spongycastle.pqc.math.linearalgebra.GFElement $r8;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        $i1 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        if $i0 == $i1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("PolynomialGF2n.multiply: this and b must have the same size!");

        throw $r3;

     label1:
        r2 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 = $i0 << 1;

        $i0 = $i0 + -1;

        specialinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void <init>(int)>($i0);

        $i0 = 0;

     label2:
        $i1 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        if $i0 >= $i1 goto label7;

        $i1 = 0;

     label3:
        $i2 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        if $i1 >= $i2 goto label6;

        $r4 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $i2 = $i0 + $i1;

        $r5 = $r4[$i2];

        if $r5 != null goto label5;

        $r4 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $i2 = $i0 + $i1;

        $r6 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r5 = $r6[$i0];

        $r6 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r7 = $r6[$i1];

        $r8 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: org.spongycastle.pqc.math.linearalgebra.GFElement multiply(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r7);

        $r5 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r8;

        $r4[$i2] = $r5;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        $r4 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $i2 = $i0 + $i1;

        $r6 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $i3 = $i0 + $i1;

        $r5 = $r6[$i3];

        $r6 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r7 = $r6[$i0];

        $r6 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r9 = $r6[$i1];

        $r8 = virtualinvoke $r7.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: org.spongycastle.pqc.math.linearalgebra.GFElement multiply(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r9);

        $r8 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: org.spongycastle.pqc.math.linearalgebra.GFElement add(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r8);

        $r5 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r8;

        $r4[$i2] = $r5;

        goto label4;

     label6:
        $i0 = $i0 + 1;

        goto label2;

     label7:
        return r2;
    }
    public final org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial multiplyAndReduce(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial, org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException, java.lang.ArithmeticException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0, $r1, $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r2 := @parameter1: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        r0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial multiply(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>($r1);

        r0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial reduce(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>($r2);

        return r0;
    }
    public final org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial quotient(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException, java.lang.ArithmeticException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0, $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial[] $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r2 = newarray (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)[2];

        $r2 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial[] divide(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>($r1);

        r0 = $r2[0];

        return r0;
    }
    public final org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial reduce(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException, java.lang.ArithmeticException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0, $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        r0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial remainder(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>($r1);

        return r0;
    }
    public final org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial remainder(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial) throws java.lang.RuntimeException, java.lang.ArithmeticException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0, $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial[] $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r2 = newarray (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)[2];

        $r2 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial[] divide(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>($r1);

        r0 = $r2[1];

        return r0;
    }
    public final org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial scalarMultiply(org.spongycastle.pqc.math.linearalgebra.GF2nElement) throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0, r2;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r1, $r5;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r3, $r4;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GFElement $r6;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nElement;

        r2 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        specialinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size()>();

        if $i0 >= $i1 goto label2;

        $r3 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r5 = $r4[$i0];

        $r6 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: org.spongycastle.pqc.math.linearalgebra.GFElement multiply(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r1);

        $r5 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r6;

        $r3[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r2;
    }
    public final void set(int, org.spongycastle.pqc.math.linearalgebra.GF2nElement)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r4;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.spongycastle.pqc.math.linearalgebra.GF2nElement;

        $z0 = $r1 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        if $z0 != 0 goto label1;

        $z0 = $r1 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("PolynomialGF2n.set f must be an instance of either GF2nPolynomialElement or GF2nONBElement!");

        throw $r3;

     label1:
        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r2 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: java.lang.Object clone()>();

        $r1 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r2;

        $r4[$i0] = $r1;

        return;
    }
    public final org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial shiftLeft(int)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0, r1;
        int $i0, $i1, $i2;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r2, $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r3;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 := @parameter0: int;

        if $i0 > 0 goto label1;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial)>(r0);

        return r1;

     label1:
        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        $i1 = $i1 + $i0;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r3 = $r2[0];

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void <init>(int,org.spongycastle.pqc.math.linearalgebra.GF2nElement)>($i1, $r3);

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void assignZeroToElements()>();

        $i1 = 0;

     label2:
        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        if $i1 >= $i2 goto label3;

        $r2 = r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $i2 = $i1 + $i0;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r3 = $r4[$i1];

        $r2[$i2] = $r3;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return r1;
    }
    public final void shiftThisLeft(int)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0;
        int $i0, i1, $i2;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] $r1, $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3;
        boolean $z0;
        java.lang.Object[] $r5;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r6;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement $r7;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r8;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement $r9;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 := @parameter0: int;

        if $i0 <= 0 goto label6;

        i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r2 = $r1[0];

        $r3 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: org.spongycastle.pqc.math.linearalgebra.GF2nField getField()>();

        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        $i2 = $i2 + $i0;

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: void enlarge(int)>($i2);

        i1 = i1 + -1;

     label1:
        if i1 < 0 goto label2;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $i2 = i1 + $i0;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r2 = $r4[i1];

        $r1[$i2] = $r2;

        i1 = i1 + -1;

        goto label1;

     label2:
        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r2 = $r1[0];

        $z0 = $r2 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        if $z0 == 0 goto label4;

        $i0 = $i0 + -1;

     label3:
        if $i0 < 0 goto label6;

        $r5 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r6 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r3;

        $r7 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement ZERO(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField)>($r6);

        $r5[$i0] = $r7;

        $i0 = $i0 + -1;

        goto label3;

     label4:
        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r2 = $r1[0];

        $z0 = $r2 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        if $z0 == 0 goto label6;

        $i0 = $i0 + -1;

     label5:
        if $i0 < 0 goto label6;

        $r5 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r8 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBField) $r3;

        $r9 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement ZERO(org.spongycastle.pqc.math.linearalgebra.GF2nONBField)>($r8);

        $r5[$i0] = $r9;

        $i0 = $i0 + -1;

        goto label5;

     label6:
        return;
    }
    public final void shrink()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement[] r1, $r3;
        boolean $z0;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        $i0 = $i0 + -1;

     label1:
        r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        $r2 = r1[$i0];

        $z0 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: boolean isZero()>();

        if $z0 == 0 goto label2;

        if $i0 <= 0 goto label2;

        $i0 = $i0 + -1;

        goto label1;

     label2:
        $i0 = $i0 + 1;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        if $i0 >= $i1 goto label3;

        r1 = newarray (org.spongycastle.pqc.math.linearalgebra.GF2nElement)[$i0];

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i0);

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: org.spongycastle.pqc.math.linearalgebra.GF2nElement[] coeff> = r1;

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size> = $i0;

     label3:
        return;
    }
    public final int size()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial;

        i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomial: int size>;

        return i0;
    }
