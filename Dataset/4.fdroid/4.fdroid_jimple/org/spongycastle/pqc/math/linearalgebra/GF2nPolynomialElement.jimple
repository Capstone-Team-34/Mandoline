org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement extends org.spongycastle.pqc.math.linearalgebra.GF2nElement
private static final int[] bitMask
private org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial
    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[33];

        $r0[0] = 1;

        $r0[1] = 2;

        $r0[2] = 4;

        $r0[3] = 8;

        $r0[4] = 16;

        $r0[5] = 32;

        $r0[6] = 64;

        $r0[7] = 128;

        $r0[8] = 256;

        $r0[9] = 512;

        $r0[10] = 1024;

        $r0[11] = 2048;

        $r0[12] = 4096;

        $r0[13] = 8192;

        $r0[14] = 16384;

        $r0[15] = 32768;

        $r0[16] = 65536;

        $r0[17] = 131072;

        $r0[18] = 262144;

        $r0[19] = 524288;

        $r0[20] = 1048576;

        $r0[21] = 2097152;

        $r0[22] = 4194304;

        $r0[23] = 8388608;

        $r0[24] = 16777216;

        $r0[25] = 33554432;

        $r0[26] = 67108864;

        $r0[27] = 134217728;

        $r0[28] = 268435456;

        $r0[29] = 536870912;

        $r0[30] = 1073741824;

        $r0[31] = -2147483648;

        $r0[32] = 0;

        <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int[] bitMask> = $r0;

        return;
    }
    public void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r2, $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3;
        int $i0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void <init>()>();

        $r3 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField> = $r3;

        $i0 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree> = $i0;

        $r4 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $r2 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        specialinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r2);

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial> = $r4;

        return;
    }
    public void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField, java.util.Random)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r1;
        java.util.Random $r2;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r4;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField;

        $r2 := @parameter1: java.util.Random;

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void <init>()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField> = $r1;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $i0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int getDegree()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree> = $i0;

        $r4 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        specialinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(int)>($i0);

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial> = $r4;

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void randomize(java.util.Random)>($r2);

        return;
    }
    public void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField, org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r2, $r4;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField;

        $r2 := @parameter1: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void <init>()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField> = $r1;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $i0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int getDegree()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree> = $i0;

        $r4 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        specialinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r2);

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial> = $r4;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void expandN(int)>($i0);

        return;
    }
    public void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField, byte[])
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r1;
        byte[] $r2;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r4;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField;

        $r2 := @parameter1: byte[];

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void <init>()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField> = $r1;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $i0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int getDegree()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree> = $i0;

        $r4 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        specialinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(int,byte[])>($i0, $r2);

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial> = $r4;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void expandN(int)>($i0);

        return;
    }
    public void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField, int[])
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r1;
        int[] $r2;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r4;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField;

        $r2 := @parameter1: int[];

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void <init>()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField> = $r1;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $i0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int getDegree()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree> = $i0;

        $r4 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        specialinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(int,int[])>($i0, $r2);

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial> = $r4;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i0 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField: int mDegree>;

        virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void expandN(int)>($i0);

        return;
    }
    public static org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement ONE(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial r1;
        int[] $r2;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement $r3;

        $r0 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $i0 = virtualinvoke $r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField: int getDegree()>();

        $r2 = newarray (int)[1];

        $r2[0] = 1;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(int,int[])>($i0, $r2);

        $r3 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField,org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r0, r1);

        return $r3;
    }
    public static org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement ZERO(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial r1;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement $r2;

        $r0 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $i0 = virtualinvoke $r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField: int getDegree()>();

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(int)>($i0);

        $r2 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField,org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r0, r1);

        return $r2;
    }
    private org.spongycastle.pqc.math.linearalgebra.GF2Polynomial getGF2Polynomial()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1, $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        specialinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r2);

        return $r1;
    }
    private org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement halfTrace() throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, r1;
        int $i0, $i1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>()>();

        throw $r2;

     label1:
        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r0);

        $i0 = 1;

     label2:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i1 = $i1 + -1;

        $i1 = $i1 >> 1;

        if $i0 > $i1 goto label3;

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThis()>();

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThis()>();

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void addToThis(org.spongycastle.pqc.math.linearalgebra.GFElement)>(r0);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return r1;
    }
    private void randomize(java.util.Random)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        java.util.Random $r1;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 := @parameter0: java.util.Random;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void expandN(int)>($i0);

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void randomize(java.util.Random)>($r1);

        return;
    }
    private void reducePentanomialBitwise(int[])
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        int[] $r1;
        int i0, i1, i2, $i3, $i4;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r2;
        boolean $z0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 := @parameter0: int[];

        i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        i1 = $r1[2];

        i0 = i0 - i1;

        i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        i2 = $r1[1];

        i1 = i1 - i2;

        i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i3 = $r1[0];

        i2 = i2 - $i3;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i3 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: int getLength()>();

        $i3 = $i3 + -1;

     label1:
        $i4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        if $i3 < $i4 goto label3;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $z0 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean testBit(int)>($i3);

        if $z0 == 0 goto label2;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void xorBit(int)>($i3);

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i4 = $i3 - i0;

        virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void xorBit(int)>($i4);

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i4 = $i3 - i1;

        virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void xorBit(int)>($i4);

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i4 = $i3 - i2;

        virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void xorBit(int)>($i4);

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i4 = $i3 - $i4;

        virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void xorBit(int)>($i4);

     label2:
        $i3 = $i3 + -1;

        goto label1;

     label3:
        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void expandN(int)>(i0);

        return;
    }
    private void reduceThis()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1, $r7;
        int $i0, $i1, $i2;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r3;
        boolean $z0;
        java.lang.RuntimeException r4, r6;
        int[] $r5;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: int getLength()>();

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        if $i0 <= $i1 goto label13;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r3 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r2;

        $z0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField: boolean isTrinomial()>();

        if $z0 == 0 goto label06;

     label01:
        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r3 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r2;

        $i0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField: int getTc()>();

     label02:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i1 = $i1 - $i0;

        if $i1 <= 32 goto label03;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i1 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: int getLength()>();

        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i2 = $i2 << 1;

        if $i1 <= $i2 goto label05;

     label03:
        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void reduceTrinomialBitwise(int)>($i0);

        return;

     label04:
        r4 := @caughtexception;

        r4 = new java.lang.RuntimeException;

        specialinvoke r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("GF2nPolynomialElement.reduce: the field polynomial is not a trinomial");

        throw r4;

     label05:
        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceTrinomial(int,int)>($i1, $i0);

        return;

     label06:
        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r3 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r2;

        $z0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField: boolean isPentanomial()>();

        if $z0 == 0 goto label12;

     label07:
        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r3 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r2;

        $r5 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField: int[] getPc()>();

     label08:
        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i1 = $r5[2];

        $i0 = $i0 - $i1;

        if $i0 <= 32 goto label09;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: int getLength()>();

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i1 = $i1 << 1;

        if $i0 <= $i1 goto label11;

     label09:
        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void reducePentanomialBitwise(int[])>($r5);

        return;

     label10:
        r6 := @caughtexception;

        r4 = new java.lang.RuntimeException;

        specialinvoke r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("GF2nPolynomialElement.reduce: the field polynomial is not a pentanomial");

        throw r4;

     label11:
        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reducePentanomial(int,int[])>($i0, $r5);

        return;

     label12:
        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r7 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2nField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial getFieldPolynomial()>();

        $r1 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial remainder(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r7);

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial> = $r1;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void expandN(int)>($i0);

        return;

     label13:
        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: int getLength()>();

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        if $i0 >= $i1 goto label14;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void expandN(int)>($i0);

     label14:
        return;

        catch java.lang.RuntimeException from label01 to label02 with label04;
        catch java.lang.RuntimeException from label07 to label08 with label10;
    }
    private void reduceTrinomialBitwise(int)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        int $i0, $i1, $i2;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1;
        boolean $z0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $i0 := @parameter0: int;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i0 = $i1 - $i0;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i1 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: int getLength()>();

        $i1 = $i1 + -1;

     label1:
        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        if $i1 < $i2 goto label3;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $z0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean testBit(int)>($i1);

        if $z0 == 0 goto label2;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void xorBit(int)>($i1);

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i2 = $i1 - $i0;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void xorBit(int)>($i2);

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i2 = $i1 - $i2;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void xorBit(int)>($i2);

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void expandN(int)>($i0);

        return;
    }
    public org.spongycastle.pqc.math.linearalgebra.GFElement add(org.spongycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, r2;
        org.spongycastle.pqc.math.linearalgebra.GFElement $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GFElement;

        r2 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r0);

        virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void addToThis(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r1);

        return r2;
    }
    public void addToThis(org.spongycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, $r4;
        boolean $z0;
        org.spongycastle.pqc.math.linearalgebra.GFElement $r1;
        java.lang.RuntimeException $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3, $r5;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r6, $r7;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GFElement;

        $z0 = $r1 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>()>();

        throw $r2;

     label1:
        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r4 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement) $r1;

        $r5 = $r4.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $z0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nField: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>()>();

        throw $r2;

     label2:
        $r6 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        r0 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement) $r1;

        $r7 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r6.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void addToThis(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r7);

        return;
    }
    void assignOne()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void assignOne()>();

        return;
    }
    void assignZero()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void assignZero()>();

        return;
    }
    public java.lang.Object clone()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r0);

        return $r1;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3, $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r5, $r6;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label3;

        $z0 = $r1 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement) $r1;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r4 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        if $r3 == $r4 goto label2;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r5 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial getFieldPolynomial()>();

        $r3 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r6 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial getFieldPolynomial()>();

        $z0 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label3;

     label2:
        $r5 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $r6 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $z0 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean equals(java.lang.Object)>($r6);

        return $z0;

     label3:
        return 0;
    }
    public int hashCode()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r1;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int hashCode()>();

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i1 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nElement increase()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r0);

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void increaseThis()>();

        return r1;
    }
    public void increaseThis()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void increaseThis()>();

        return;
    }
    public org.spongycastle.pqc.math.linearalgebra.GFElement invert() throws java.lang.ArithmeticException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        r0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement invertMAIA()>();

        return r0;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement invertEEA() throws java.lang.ArithmeticException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, $r8;
        boolean $z0;
        java.lang.ArithmeticException $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial r2, r3, $r4, r5, $r7;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r6;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r9;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $z0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: boolean isZero()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.ArithmeticException;

        specialinvoke $r1.<java.lang.ArithmeticException: void <init>()>();

        throw $r1;

     label1:
        r2 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i0 = $i0 + 32;

        specialinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(int,java.lang.String)>($i0, "ONE");

        virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

        r3 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i0 = $i0 + 32;

        specialinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(int)>($i0);

        virtualinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

        $r4 = specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial getGF2Polynomial()>();

        r5 = $r4;

        $r6 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r7 = virtualinvoke $r6.<org.spongycastle.pqc.math.linearalgebra.GF2nField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial getFieldPolynomial()>();

        virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

     label2:
        $z0 = virtualinvoke r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean isOne()>();

        if $z0 != 0 goto label4;

        virtualinvoke r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

        virtualinvoke $r7.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

        $i0 = virtualinvoke r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: int getLength()>();

        $i1 = virtualinvoke $r7.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: int getLength()>();

        $i0 = $i0 - $i1;

        if $i0 >= 0 goto label3;

        $r4 = r5;

        r5 = $r7;

        $r7 = $r4;

        $r4 = r2;

        r2 = r3;

        r3 = $r4;

        $i0 = neg $i0;

        virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

     label3:
        virtualinvoke r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void shiftLeftAddThis(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial,int)>($r7, $i0);

        virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void shiftLeftAddThis(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial,int)>(r3, $i0);

        goto label2;

     label4:
        virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

        $r8 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r6 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r9 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r6;

        specialinvoke $r8.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField,org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r9, r2);

        return $r8;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement invertMAIA() throws java.lang.ArithmeticException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, $r8;
        boolean $z0;
        java.lang.ArithmeticException $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial r2, r3, $r4, $r6, $r7;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r5;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r9;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $z0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: boolean isZero()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.ArithmeticException;

        specialinvoke $r1.<java.lang.ArithmeticException: void <init>()>();

        throw $r1;

     label1:
        r2 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        specialinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(int,java.lang.String)>($i0, "ONE");

        r3 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        specialinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(int)>($i0);

        $r4 = specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial getGF2Polynomial()>();

        $r5 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r6 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2nField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial getFieldPolynomial()>();

     label2:
        $z0 = virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean testBit(int)>(0);

        if $z0 != 0 goto label4;

        virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void shiftRightThis()>();

        $z0 = virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean testBit(int)>(0);

        if $z0 != 0 goto label3;

        virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void shiftRightThis()>();

        goto label2;

     label3:
        $r5 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r7 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2nField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial getFieldPolynomial()>();

        virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void addToThis(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r7);

        virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void shiftRightThis()>();

        goto label2;

     label4:
        $z0 = virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean isOne()>();

        if $z0 == 0 goto label5;

        $r8 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r5 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r9 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r5;

        specialinvoke $r8.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField,org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r9, r2);

        return $r8;

     label5:
        virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

        virtualinvoke $r6.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

        $i0 = virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: int getLength()>();

        $i1 = virtualinvoke $r6.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: int getLength()>();

        if $i0 >= $i1 goto label6;

        $r7 = $r4;

        $r4 = $r6;

        $r6 = $r7;

        $r7 = r2;

        r2 = r3;

        r3 = $r7;

     label6:
        virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void addToThis(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r6);

        virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void addToThis(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>(r3);

        goto label2;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement invertSquare() throws java.lang.ArithmeticException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, r1, r2;
        int i0, $i1, $i2, i3;
        boolean $z0;
        java.lang.ArithmeticException $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r5;
        int[] $r6;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $z0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: boolean isZero()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.ArithmeticException;

        specialinvoke $r3.<java.lang.ArithmeticException: void <init>()>();

        throw $r3;

     label1:
        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        i0 = virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int getDegree()>();

        i0 = i0 + -1;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r0);

        $r5 = r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i1 = $i1 << 1;

        $i1 = $i1 + 32;

        virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void expandN(int)>($i1);

        $r5 = r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

        $i1 = 1;

        $i2 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.IntegerFunctions: int floorLog(int)>(i0);

        $i2 = $i2 + -1;

     label2:
        if $i2 < 0 goto label6;

        r2 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r1);

        i3 = 1;

     label3:
        if i3 > $i1 goto label4;

        virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThisPreCalc()>();

        i3 = i3 + 1;

        goto label3;

     label4:
        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void multiplyThisBy(org.spongycastle.pqc.math.linearalgebra.GFElement)>(r2);

        $i1 = $i1 << 1;

        $r6 = <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int[] bitMask>;

        i3 = $r6[$i2];

        i3 = i3 & i0;

        if i3 == 0 goto label5;

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThisPreCalc()>();

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void multiplyThisBy(org.spongycastle.pqc.math.linearalgebra.GFElement)>(r0);

        $i1 = $i1 + 1;

     label5:
        $i2 = $i2 + -1;

        goto label2;

     label6:
        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThisPreCalc()>();

        return r1;
    }
    public boolean isOne()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        boolean $z0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $z0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean isOne()>();

        return $z0;
    }
    public boolean isZero()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        boolean $z0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $z0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean isZero()>();

        return $z0;
    }
    public org.spongycastle.pqc.math.linearalgebra.GFElement multiply(org.spongycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, r2;
        org.spongycastle.pqc.math.linearalgebra.GFElement $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GFElement;

        r2 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r0);

        virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void multiplyThisBy(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r1);

        return r2;
    }
    public void multiplyThisBy(org.spongycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, $r4;
        org.spongycastle.pqc.math.linearalgebra.GFElement r1;
        boolean $z0;
        java.lang.RuntimeException $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3, $r5;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r6, $r7;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GFElement;

        $z0 = r1 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>()>();

        throw $r2;

     label1:
        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r4 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement) r1;

        $r5 = $r4.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $z0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nField: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>()>();

        throw $r2;

     label2:
        $z0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThis()>();

        return;

     label3:
        $r6 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $r4 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement) r1;

        $r7 = $r4.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $r6 = virtualinvoke $r6.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial multiply(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r7);

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial> = $r6;

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void reduceThis()>();

        return;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement power(int)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, r1, $r2;
        int $i0, $i1, $i2;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r5;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $i0 := @parameter0: int;

        if $i0 != 1 goto label1;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r0);

        return r1;

     label1:
        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r4 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r3;

        $r2 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement ONE(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField)>($r4);

        if $i0 == 0 goto label4;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r0);

        $r5 = r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i1 = r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i1 = $i1 << 1;

        $i1 = $i1 + 32;

        virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void expandN(int)>($i1);

        $r5 = r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

        $i1 = 0;

     label2:
        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        if $i1 >= $i2 goto label4;

        $i2 = 1 << $i1;

        $i2 = $i2 & $i0;

        if $i2 == 0 goto label3;

        virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void multiplyThisBy(org.spongycastle.pqc.math.linearalgebra.GFElement)>(r1);

     label3:
        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nElement square()>();

        $i1 = $i1 + 1;

        goto label2;

     label4:
        return $r2;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation() throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, r1, $r5, r7;
        boolean $z0;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r3;
        int $i0, $i1;
        java.util.Random $r4;
        java.lang.Object $r6;
        org.spongycastle.pqc.math.linearalgebra.GFElement $r8;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r9;
        java.lang.RuntimeException $r10;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $z0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: boolean isZero()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r3 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r2;

        r0 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement ZERO(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField)>($r3);

        return r0;

     label1:
        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i0 = $i0 & 1;

        if $i0 != 1 goto label2;

        r0 = specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement halfTrace()>();

        return r0;

     label2:
        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r3 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r2;

        $r4 = new java.util.Random;

        specialinvoke $r4.<java.util.Random: void <init>()>();

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField,java.util.Random)>($r3, $r4);

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r3 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r2;

        $r5 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement ZERO(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField)>($r3);

        $r6 = virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: java.lang.Object clone()>();

        r7 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement) $r6;

        $i0 = 1;

     label3:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        if $i0 >= $i1 goto label4;

        virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThis()>();

        virtualinvoke r7.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThis()>();

        $r8 = virtualinvoke r7.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GFElement multiply(org.spongycastle.pqc.math.linearalgebra.GFElement)>(r0);

        virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void addToThis(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r8);

        virtualinvoke r7.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void addToThis(org.spongycastle.pqc.math.linearalgebra.GFElement)>(r1);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $z0 = virtualinvoke r7.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: boolean isZero()>();

        if $z0 != 0 goto label2;

        $r9 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nElement square()>();

        $r8 = virtualinvoke $r9.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: org.spongycastle.pqc.math.linearalgebra.GFElement add(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r5);

        $z0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label5;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>()>();

        throw $r10;

     label5:
        return $r5;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nElement square()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        r0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement squarePreCalc()>();

        return r0;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement squareBitwise()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r0);

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThisBitwise()>();

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void reduceThis()>();

        return r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement squareMatrix()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r0);

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThisMatrix()>();

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void reduceThis()>();

        return r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement squarePreCalc()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r0);

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThisPreCalc()>();

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void reduceThis()>();

        return r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nElement squareRoot()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r0);

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareRootThis()>();

        return r1;
    }
    public void squareRootThis()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i1 = $i1 << 1;

        $i1 = $i1 + 32;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void expandN(int)>($i1);

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void reduceN()>();

        $i1 = 0;

     label1:
        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $i0 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int getDegree()>();

        $i0 = $i0 + -1;

        if $i1 >= $i0 goto label2;

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThis()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    public void squareThis()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThisPreCalc()>();

        return;
    }
    public void squareThisBitwise()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void squareThisBitwise()>();

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void reduceThis()>();

        return;
    }
    public void squareThisMatrix()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial r1, $r2, $r6;
        boolean $z0;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial[] $r5;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        if $i0 >= $i1 goto label3;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r4 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) $r3;

        $r5 = $r4.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial[] squaringMatrix>;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        $i1 = $i1 - $i0;

        $i1 = $i1 + -1;

        $r6 = $r5[$i1];

        $z0 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean vectorMult(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r6);

        if $z0 == 0 goto label2;

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void setBit(int)>($i0);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial> = r1;

        return;
    }
    public void squareThisPreCalc()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void squareThisPreCalc()>();

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void reduceThis()>();

        return;
    }
    boolean testBit(int)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        int $i0;
        boolean $z0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $z0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean testBit(int)>($i0);

        return $z0;
    }
    public boolean testRightmostBit()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        boolean $z0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $z0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean testBit(int)>(0);

        return $z0;
    }
    public byte[] toByteArray()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        byte[] $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $r1 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: byte[] toByteArray()>();

        return $r1;
    }
    public java.math.BigInteger toFlexiBigInt()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        java.math.BigInteger $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $r1 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: java.math.BigInteger toFlexiBigInt()>();

        return $r1;
    }
    public java.lang.String toString()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        java.lang.String $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $r1 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: java.lang.String toString(int)>(16);

        return $r1;
    }
    public java.lang.String toString(int)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0;
        int $i0;
        java.lang.String $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        $i0 := @parameter0: int;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial polynomial>;

        $r1 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: java.lang.String toString(int)>($i0);

        return $r1;
    }
    public int trace()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement r0, r1;
        boolean $z0;
        int i0, $i1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement)>(r0);

        i0 = 1;

     label1:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: int mDegree>;

        if i0 >= $i1 goto label2;

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void squareThis()>();

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void addToThis(org.spongycastle.pqc.math.linearalgebra.GFElement)>(r0);

        i0 = i0 + 1;

        goto label1;

     label2:
        $z0 = virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: boolean isOne()>();

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }
