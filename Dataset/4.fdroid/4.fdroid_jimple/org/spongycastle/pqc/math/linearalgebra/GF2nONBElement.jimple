org.spongycastle.pqc.math.linearalgebra.GF2nONBElement extends org.spongycastle.pqc.math.linearalgebra.GF2nElement
private static final int MAXLONG
private static final long[] mBitmask
private static final int[] mIBY64
private static final long[] mMaxmask
private int mBit
private int mLength
private long[] mPol
    static void <clinit>()
    {
        long[] $r0;
        int[] $r1;

        $r0 = newarray (long)[64];

        $r0[0] = 1L;

        $r0[1] = 2L;

        $r0[2] = 4L;

        $r0[3] = 8L;

        $r0[4] = 16L;

        $r0[5] = 32L;

        $r0[6] = 64L;

        $r0[7] = 128L;

        $r0[8] = 256L;

        $r0[9] = 512L;

        $r0[10] = 1024L;

        $r0[11] = 2048L;

        $r0[12] = 4096L;

        $r0[13] = 8192L;

        $r0[14] = 16384L;

        $r0[15] = 32768L;

        $r0[16] = 65536L;

        $r0[17] = 131072L;

        $r0[18] = 262144L;

        $r0[19] = 524288L;

        $r0[20] = 1048576L;

        $r0[21] = 2097152L;

        $r0[22] = 4194304L;

        $r0[23] = 8388608L;

        $r0[24] = 16777216L;

        $r0[25] = 33554432L;

        $r0[26] = 67108864L;

        $r0[27] = 134217728L;

        $r0[28] = 268435456L;

        $r0[29] = 536870912L;

        $r0[30] = 1073741824L;

        $r0[31] = 2147483648L;

        $r0[32] = 4294967296L;

        $r0[33] = 8589934592L;

        $r0[34] = 17179869184L;

        $r0[35] = 34359738368L;

        $r0[36] = 68719476736L;

        $r0[37] = 137438953472L;

        $r0[38] = 274877906944L;

        $r0[39] = 549755813888L;

        $r0[40] = 1099511627776L;

        $r0[41] = 2199023255552L;

        $r0[42] = 4398046511104L;

        $r0[43] = 8796093022208L;

        $r0[44] = 17592186044416L;

        $r0[45] = 35184372088832L;

        $r0[46] = 70368744177664L;

        $r0[47] = 140737488355328L;

        $r0[48] = 281474976710656L;

        $r0[49] = 562949953421312L;

        $r0[50] = 1125899906842624L;

        $r0[51] = 2251799813685248L;

        $r0[52] = 4503599627370496L;

        $r0[53] = 9007199254740992L;

        $r0[54] = 18014398509481984L;

        $r0[55] = 36028797018963968L;

        $r0[56] = 72057594037927936L;

        $r0[57] = 144115188075855872L;

        $r0[58] = 288230376151711744L;

        $r0[59] = 576460752303423488L;

        $r0[60] = 1152921504606846976L;

        $r0[61] = 2305843009213693952L;

        $r0[62] = 4611686018427387904L;

        $r0[63] = -9223372036854775808L;

        <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask> = $r0;

        $r0 = newarray (long)[64];

        $r0[0] = 1L;

        $r0[1] = 3L;

        $r0[2] = 7L;

        $r0[3] = 15L;

        $r0[4] = 31L;

        $r0[5] = 63L;

        $r0[6] = 127L;

        $r0[7] = 255L;

        $r0[8] = 511L;

        $r0[9] = 1023L;

        $r0[10] = 2047L;

        $r0[11] = 4095L;

        $r0[12] = 8191L;

        $r0[13] = 16383L;

        $r0[14] = 32767L;

        $r0[15] = 65535L;

        $r0[16] = 131071L;

        $r0[17] = 262143L;

        $r0[18] = 524287L;

        $r0[19] = 1048575L;

        $r0[20] = 2097151L;

        $r0[21] = 4194303L;

        $r0[22] = 8388607L;

        $r0[23] = 16777215L;

        $r0[24] = 33554431L;

        $r0[25] = 67108863L;

        $r0[26] = 134217727L;

        $r0[27] = 268435455L;

        $r0[28] = 536870911L;

        $r0[29] = 1073741823L;

        $r0[30] = 2147483647L;

        $r0[31] = 4294967295L;

        $r0[32] = 8589934591L;

        $r0[33] = 17179869183L;

        $r0[34] = 34359738367L;

        $r0[35] = 68719476735L;

        $r0[36] = 137438953471L;

        $r0[37] = 274877906943L;

        $r0[38] = 549755813887L;

        $r0[39] = 1099511627775L;

        $r0[40] = 2199023255551L;

        $r0[41] = 4398046511103L;

        $r0[42] = 8796093022207L;

        $r0[43] = 17592186044415L;

        $r0[44] = 35184372088831L;

        $r0[45] = 70368744177663L;

        $r0[46] = 140737488355327L;

        $r0[47] = 281474976710655L;

        $r0[48] = 562949953421311L;

        $r0[49] = 1125899906842623L;

        $r0[50] = 2251799813685247L;

        $r0[51] = 4503599627370495L;

        $r0[52] = 9007199254740991L;

        $r0[53] = 18014398509481983L;

        $r0[54] = 36028797018963967L;

        $r0[55] = 72057594037927935L;

        $r0[56] = 144115188075855871L;

        $r0[57] = 288230376151711743L;

        $r0[58] = 576460752303423487L;

        $r0[59] = 1152921504606846975L;

        $r0[60] = 2305843009213693951L;

        $r0[61] = 4611686018427387903L;

        $r0[62] = 9223372036854775807L;

        $r0[63] = -1L;

        <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mMaxmask> = $r0;

        $r1 = newarray (int)[384];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = 0;

        $r1[5] = 0;

        $r1[6] = 0;

        $r1[7] = 0;

        $r1[8] = 0;

        $r1[9] = 0;

        $r1[10] = 0;

        $r1[11] = 0;

        $r1[12] = 0;

        $r1[13] = 0;

        $r1[14] = 0;

        $r1[15] = 0;

        $r1[16] = 0;

        $r1[17] = 0;

        $r1[18] = 0;

        $r1[19] = 0;

        $r1[20] = 0;

        $r1[21] = 0;

        $r1[22] = 0;

        $r1[23] = 0;

        $r1[24] = 0;

        $r1[25] = 0;

        $r1[26] = 0;

        $r1[27] = 0;

        $r1[28] = 0;

        $r1[29] = 0;

        $r1[30] = 0;

        $r1[31] = 0;

        $r1[32] = 0;

        $r1[33] = 0;

        $r1[34] = 0;

        $r1[35] = 0;

        $r1[36] = 0;

        $r1[37] = 0;

        $r1[38] = 0;

        $r1[39] = 0;

        $r1[40] = 0;

        $r1[41] = 0;

        $r1[42] = 0;

        $r1[43] = 0;

        $r1[44] = 0;

        $r1[45] = 0;

        $r1[46] = 0;

        $r1[47] = 0;

        $r1[48] = 0;

        $r1[49] = 0;

        $r1[50] = 0;

        $r1[51] = 0;

        $r1[52] = 0;

        $r1[53] = 0;

        $r1[54] = 0;

        $r1[55] = 0;

        $r1[56] = 0;

        $r1[57] = 0;

        $r1[58] = 0;

        $r1[59] = 0;

        $r1[60] = 0;

        $r1[61] = 0;

        $r1[62] = 0;

        $r1[63] = 0;

        $r1[64] = 1;

        $r1[65] = 1;

        $r1[66] = 1;

        $r1[67] = 1;

        $r1[68] = 1;

        $r1[69] = 1;

        $r1[70] = 1;

        $r1[71] = 1;

        $r1[72] = 1;

        $r1[73] = 1;

        $r1[74] = 1;

        $r1[75] = 1;

        $r1[76] = 1;

        $r1[77] = 1;

        $r1[78] = 1;

        $r1[79] = 1;

        $r1[80] = 1;

        $r1[81] = 1;

        $r1[82] = 1;

        $r1[83] = 1;

        $r1[84] = 1;

        $r1[85] = 1;

        $r1[86] = 1;

        $r1[87] = 1;

        $r1[88] = 1;

        $r1[89] = 1;

        $r1[90] = 1;

        $r1[91] = 1;

        $r1[92] = 1;

        $r1[93] = 1;

        $r1[94] = 1;

        $r1[95] = 1;

        $r1[96] = 1;

        $r1[97] = 1;

        $r1[98] = 1;

        $r1[99] = 1;

        $r1[100] = 1;

        $r1[101] = 1;

        $r1[102] = 1;

        $r1[103] = 1;

        $r1[104] = 1;

        $r1[105] = 1;

        $r1[106] = 1;

        $r1[107] = 1;

        $r1[108] = 1;

        $r1[109] = 1;

        $r1[110] = 1;

        $r1[111] = 1;

        $r1[112] = 1;

        $r1[113] = 1;

        $r1[114] = 1;

        $r1[115] = 1;

        $r1[116] = 1;

        $r1[117] = 1;

        $r1[118] = 1;

        $r1[119] = 1;

        $r1[120] = 1;

        $r1[121] = 1;

        $r1[122] = 1;

        $r1[123] = 1;

        $r1[124] = 1;

        $r1[125] = 1;

        $r1[126] = 1;

        $r1[127] = 1;

        $r1[128] = 2;

        $r1[129] = 2;

        $r1[130] = 2;

        $r1[131] = 2;

        $r1[132] = 2;

        $r1[133] = 2;

        $r1[134] = 2;

        $r1[135] = 2;

        $r1[136] = 2;

        $r1[137] = 2;

        $r1[138] = 2;

        $r1[139] = 2;

        $r1[140] = 2;

        $r1[141] = 2;

        $r1[142] = 2;

        $r1[143] = 2;

        $r1[144] = 2;

        $r1[145] = 2;

        $r1[146] = 2;

        $r1[147] = 2;

        $r1[148] = 2;

        $r1[149] = 2;

        $r1[150] = 2;

        $r1[151] = 2;

        $r1[152] = 2;

        $r1[153] = 2;

        $r1[154] = 2;

        $r1[155] = 2;

        $r1[156] = 2;

        $r1[157] = 2;

        $r1[158] = 2;

        $r1[159] = 2;

        $r1[160] = 2;

        $r1[161] = 2;

        $r1[162] = 2;

        $r1[163] = 2;

        $r1[164] = 2;

        $r1[165] = 2;

        $r1[166] = 2;

        $r1[167] = 2;

        $r1[168] = 2;

        $r1[169] = 2;

        $r1[170] = 2;

        $r1[171] = 2;

        $r1[172] = 2;

        $r1[173] = 2;

        $r1[174] = 2;

        $r1[175] = 2;

        $r1[176] = 2;

        $r1[177] = 2;

        $r1[178] = 2;

        $r1[179] = 2;

        $r1[180] = 2;

        $r1[181] = 2;

        $r1[182] = 2;

        $r1[183] = 2;

        $r1[184] = 2;

        $r1[185] = 2;

        $r1[186] = 2;

        $r1[187] = 2;

        $r1[188] = 2;

        $r1[189] = 2;

        $r1[190] = 2;

        $r1[191] = 2;

        $r1[192] = 3;

        $r1[193] = 3;

        $r1[194] = 3;

        $r1[195] = 3;

        $r1[196] = 3;

        $r1[197] = 3;

        $r1[198] = 3;

        $r1[199] = 3;

        $r1[200] = 3;

        $r1[201] = 3;

        $r1[202] = 3;

        $r1[203] = 3;

        $r1[204] = 3;

        $r1[205] = 3;

        $r1[206] = 3;

        $r1[207] = 3;

        $r1[208] = 3;

        $r1[209] = 3;

        $r1[210] = 3;

        $r1[211] = 3;

        $r1[212] = 3;

        $r1[213] = 3;

        $r1[214] = 3;

        $r1[215] = 3;

        $r1[216] = 3;

        $r1[217] = 3;

        $r1[218] = 3;

        $r1[219] = 3;

        $r1[220] = 3;

        $r1[221] = 3;

        $r1[222] = 3;

        $r1[223] = 3;

        $r1[224] = 3;

        $r1[225] = 3;

        $r1[226] = 3;

        $r1[227] = 3;

        $r1[228] = 3;

        $r1[229] = 3;

        $r1[230] = 3;

        $r1[231] = 3;

        $r1[232] = 3;

        $r1[233] = 3;

        $r1[234] = 3;

        $r1[235] = 3;

        $r1[236] = 3;

        $r1[237] = 3;

        $r1[238] = 3;

        $r1[239] = 3;

        $r1[240] = 3;

        $r1[241] = 3;

        $r1[242] = 3;

        $r1[243] = 3;

        $r1[244] = 3;

        $r1[245] = 3;

        $r1[246] = 3;

        $r1[247] = 3;

        $r1[248] = 3;

        $r1[249] = 3;

        $r1[250] = 3;

        $r1[251] = 3;

        $r1[252] = 3;

        $r1[253] = 3;

        $r1[254] = 3;

        $r1[255] = 3;

        $r1[256] = 4;

        $r1[257] = 4;

        $r1[258] = 4;

        $r1[259] = 4;

        $r1[260] = 4;

        $r1[261] = 4;

        $r1[262] = 4;

        $r1[263] = 4;

        $r1[264] = 4;

        $r1[265] = 4;

        $r1[266] = 4;

        $r1[267] = 4;

        $r1[268] = 4;

        $r1[269] = 4;

        $r1[270] = 4;

        $r1[271] = 4;

        $r1[272] = 4;

        $r1[273] = 4;

        $r1[274] = 4;

        $r1[275] = 4;

        $r1[276] = 4;

        $r1[277] = 4;

        $r1[278] = 4;

        $r1[279] = 4;

        $r1[280] = 4;

        $r1[281] = 4;

        $r1[282] = 4;

        $r1[283] = 4;

        $r1[284] = 4;

        $r1[285] = 4;

        $r1[286] = 4;

        $r1[287] = 4;

        $r1[288] = 4;

        $r1[289] = 4;

        $r1[290] = 4;

        $r1[291] = 4;

        $r1[292] = 4;

        $r1[293] = 4;

        $r1[294] = 4;

        $r1[295] = 4;

        $r1[296] = 4;

        $r1[297] = 4;

        $r1[298] = 4;

        $r1[299] = 4;

        $r1[300] = 4;

        $r1[301] = 4;

        $r1[302] = 4;

        $r1[303] = 4;

        $r1[304] = 4;

        $r1[305] = 4;

        $r1[306] = 4;

        $r1[307] = 4;

        $r1[308] = 4;

        $r1[309] = 4;

        $r1[310] = 4;

        $r1[311] = 4;

        $r1[312] = 4;

        $r1[313] = 4;

        $r1[314] = 4;

        $r1[315] = 4;

        $r1[316] = 4;

        $r1[317] = 4;

        $r1[318] = 4;

        $r1[319] = 4;

        $r1[320] = 5;

        $r1[321] = 5;

        $r1[322] = 5;

        $r1[323] = 5;

        $r1[324] = 5;

        $r1[325] = 5;

        $r1[326] = 5;

        $r1[327] = 5;

        $r1[328] = 5;

        $r1[329] = 5;

        $r1[330] = 5;

        $r1[331] = 5;

        $r1[332] = 5;

        $r1[333] = 5;

        $r1[334] = 5;

        $r1[335] = 5;

        $r1[336] = 5;

        $r1[337] = 5;

        $r1[338] = 5;

        $r1[339] = 5;

        $r1[340] = 5;

        $r1[341] = 5;

        $r1[342] = 5;

        $r1[343] = 5;

        $r1[344] = 5;

        $r1[345] = 5;

        $r1[346] = 5;

        $r1[347] = 5;

        $r1[348] = 5;

        $r1[349] = 5;

        $r1[350] = 5;

        $r1[351] = 5;

        $r1[352] = 5;

        $r1[353] = 5;

        $r1[354] = 5;

        $r1[355] = 5;

        $r1[356] = 5;

        $r1[357] = 5;

        $r1[358] = 5;

        $r1[359] = 5;

        $r1[360] = 5;

        $r1[361] = 5;

        $r1[362] = 5;

        $r1[363] = 5;

        $r1[364] = 5;

        $r1[365] = 5;

        $r1[366] = 5;

        $r1[367] = 5;

        $r1[368] = 5;

        $r1[369] = 5;

        $r1[370] = 5;

        $r1[371] = 5;

        $r1[372] = 5;

        $r1[373] = 5;

        $r1[374] = 5;

        $r1[375] = 5;

        $r1[376] = 5;

        $r1[377] = 5;

        $r1[378] = 5;

        $r1[379] = 5;

        $r1[380] = 5;

        $r1[381] = 5;

        $r1[382] = 5;

        $r1[383] = 5;

        <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int[] mIBY64> = $r1;

        return;
    }
    public void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBElement)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r2;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r3;
        long[] $r4;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void <init>()>();

        $r2 = $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField> = $r2;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $i0 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int getDegree()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree> = $i0;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r3 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBField) $r2;

        $i0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int getONBLength()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength> = $i0;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r3 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBField) $r2;

        $i0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int getONBBit()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit> = $i0;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        $r4 = newarray (long)[$i0];

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol> = $r4;

        $r4 = specialinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] getElement()>();

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void assign(long[])>($r4);

        return;
    }
    public void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBField, java.math.BigInteger)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r1;
        java.math.BigInteger $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3;
        int $i0;
        long[] $r4;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nONBField;

        $r2 := @parameter1: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void <init>()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField> = $r1;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $i0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int getDegree()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree> = $i0;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int getONBLength()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength> = $i0;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int getONBBit()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit> = $i0;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        $r4 = newarray (long)[$i0];

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol> = $r4;

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void assign(java.math.BigInteger)>($r2);

        return;
    }
    public void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBField, java.util.Random)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r1;
        java.util.Random $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3;
        int $i0, $i1;
        long[] $r4, $r5;
        long $l2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nONBField;

        $r2 := @parameter1: java.util.Random;

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void <init>()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField> = $r1;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $i0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int getDegree()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree> = $i0;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int getONBLength()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength> = $i0;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int getONBBit()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit> = $i0;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        $r4 = newarray (long)[$i0];

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol> = $r4;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        if $i0 <= 1 goto label3;

        $i0 = 0;

     label1:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        $i1 = $i1 + -1;

        if $i0 >= $i1 goto label2;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $l2 = virtualinvoke $r2.<java.util.Random: long nextLong()>();

        $r4[$i0] = $l2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $l2 = virtualinvoke $r2.<java.util.Random: long nextLong()>();

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        $i0 = $i0 + -1;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit>;

        $i1 = 64 - $i1;

        $l2 = $l2 >>> $i1;

        $r4[$i0] = $l2;

        return;

     label3:
        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $l2 = virtualinvoke $r2.<java.util.Random: long nextLong()>();

        $r4[0] = $l2;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $r5 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $l2 = $r5[0];

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit>;

        $i0 = 64 - $i0;

        $l2 = $l2 >>> $i0;

        $r4[0] = $l2;

        return;
    }
    public void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBField, byte[])
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r1;
        byte[] $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3;
        int $i0;
        long[] $r4;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nONBField;

        $r2 := @parameter1: byte[];

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void <init>()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField> = $r1;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $i0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int getDegree()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree> = $i0;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int getONBLength()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength> = $i0;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int getONBBit()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit> = $i0;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        $r4 = newarray (long)[$i0];

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol> = $r4;

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void assign(byte[])>($r2);

        return;
    }
    private void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBField, long[])
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r1;
        long[] $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3;
        int $i0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nONBField;

        $r2 := @parameter1: long[];

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void <init>()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField> = $r1;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $i0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int getDegree()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree> = $i0;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int getONBLength()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength> = $i0;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int getONBBit()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit> = $i0;

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol> = $r2;

        return;
    }
    public static org.spongycastle.pqc.math.linearalgebra.GF2nONBElement ONE(org.spongycastle.pqc.math.linearalgebra.GF2nONBField)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r0;
        long[] r1, $r2;
        int $i0, i1, $i2;
        long $l3;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement $r3;

        $r0 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nONBField;

        $i0 = virtualinvoke $r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int getONBLength()>();

        r1 = newarray (long)[$i0];

        i1 = 0;

     label1:
        $i2 = $i0 + -1;

        if i1 >= $i2 goto label2;

        r1[i1] = -1L;

        i1 = i1 + 1;

        goto label1;

     label2:
        $i0 = $i0 + -1;

        $r2 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mMaxmask>;

        i1 = virtualinvoke $r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int getONBBit()>();

        i1 = i1 + -1;

        $l3 = $r2[i1];

        r1[$i0] = $l3;

        $r3 = new org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        specialinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBField,long[])>($r0, r1);

        return $r3;
    }
    public static org.spongycastle.pqc.math.linearalgebra.GF2nONBElement ZERO(org.spongycastle.pqc.math.linearalgebra.GF2nONBField)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r0;
        long[] r1;
        int $i0;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement $r2;

        $r0 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nONBField;

        $i0 = virtualinvoke $r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int getONBLength()>();

        r1 = newarray (long)[$i0];

        $r2 = new org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        specialinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBField,long[])>($r0, r1);

        return $r2;
    }
    private void assign(java.math.BigInteger)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        java.math.BigInteger $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 = virtualinvoke $r1.<java.math.BigInteger: byte[] toByteArray()>();

        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void assign(byte[])>($r2);

        return;
    }
    private void assign(byte[])
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        byte[] $r1;
        int $i0, $i1, $i3;
        long[] $r2;
        long $l2, $l5;
        byte $b4;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 := @parameter0: byte[];

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        $r2 = newarray (long)[$i1];

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol> = $r2;

        $i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label2;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $i0 = $i1 >>> 3;

        $l2 = $r2[$i0];

        $i3 = lengthof $r1;

        $i3 = $i3 + -1;

        $i3 = $i3 - $i1;

        $b4 = $r1[$i3];

        $l5 = (long) $b4;

        $l5 = $l5 & 255L;

        $i3 = $i1 & 7;

        $i3 = $i3 << 3;

        $l5 = $l5 << $i3;

        $l2 = $l2 | $l5;

        $r2[$i0] = $l2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    private void assign(long[])
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        long[] $r1, $r2;
        int $i0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 := @parameter0: long[];

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }
    private long[] getElement()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        long[] r1, $r2, $r3;
        int $i0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $i0 = lengthof r1;

        r1 = newarray (long)[$i0];

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i0);

        return r1;
    }
    private long[] getElementReverseOrder()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        long[] r1, $r2;
        boolean $z0;
        int $i0, $i1, $i3;
        long $l2, $l4;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $i0 = lengthof r1;

        r1 = newarray (long)[$i0];

        $i0 = 0;

     label1:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree>;

        if $i0 >= $i1 goto label3;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree>;

        $i1 = $i1 - $i0;

        $i1 = $i1 + -1;

        $z0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: boolean testBit(int)>($i1);

        if $z0 == 0 goto label2;

        $i1 = $i0 >>> 6;

        $l2 = r1[$i1];

        $r2 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $i3 = $i0 & 63;

        $l4 = $r2[$i3];

        $l2 = $l2 | $l4;

        r1[$i1] = $l2;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.GFElement add(org.spongycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, r2;
        org.spongycastle.pqc.math.linearalgebra.GFElement $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GFElement;

        r2 = new org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        specialinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBElement)>(r0);

        virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void addToThis(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r1);

        return r2;
    }
    public void addToThis(org.spongycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, $r4;
        org.spongycastle.pqc.math.linearalgebra.GFElement $r1;
        long $l0, $l3;
        boolean $z0;
        java.lang.RuntimeException $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r3, $r5;
        int i1, $i2;
        long[] $r6, $r7;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GFElement;

        $z0 = $r1 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>()>();

        throw $r2;

     label1:
        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r4 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBElement) $r1;

        $r5 = $r4.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $z0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2nField: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>()>();

        throw $r2;

     label2:
        i1 = 0;

     label3:
        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        if i1 >= $i2 goto label4;

        $r6 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $l3 = $r6[i1];

        $r4 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBElement) $r1;

        $r7 = $r4.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $l0 = $r7[i1];

        $l0 = $l3 ^ $l0;

        $r6[i1] = $l0;

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }
    void assignOne()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        long[] $r1, $r2;
        int i0, $i1;
        long $l2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        i0 = 0;

     label1:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        $i1 = $i1 + -1;

        if i0 >= $i1 goto label2;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $r1[i0] = -1L;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        i0 = i0 + -1;

        $r1 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mMaxmask>;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit>;

        $i1 = $i1 + -1;

        $l2 = $r1[$i1];

        $r2[i0] = $l2;

        return;
    }
    void assignZero()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        int $i0;
        long[] $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        $r1 = newarray (long)[$i0];

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol> = $r1;

        return;
    }
    public java.lang.Object clone()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        specialinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBElement)>(r0);

        return $r1;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, r2;
        java.lang.Object $r1;
        long $l0, $l1;
        boolean $z0;
        int i2, $i3;
        long[] $r3;
        byte $b4;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label4;

        $z0 = $r1 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBElement) $r1;

        i2 = 0;

     label2:
        $i3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        if i2 >= $i3 goto label3;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $l0 = $r3[i2];

        $r3 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $l1 = $r3[i2];

        $b4 = $l0 cmp $l1;

        if $b4 != 0 goto label4;

        i2 = i2 + 1;

        goto label2;

     label3:
        return 1;

     label4:
        return 0;
    }
    public int hashCode()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        int $i0;
        long[] $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nElement increase()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBElement)>(r0);

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void increaseThis()>();

        return r1;
    }
    public void increaseThis()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r3;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r3 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBField) $r2;

        $r1 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement ONE(org.spongycastle.pqc.math.linearalgebra.GF2nONBField)>($r3);

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void addToThis(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r1);

        return;
    }
    public org.spongycastle.pqc.math.linearalgebra.GFElement invert() throws java.lang.ArithmeticException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBElement)>(r0);

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void invertThis()>();

        return r1;
    }
    public void invertThis() throws java.lang.ArithmeticException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, r1;
        boolean $z0;
        java.lang.ArithmeticException $r2;
        int i0, $i1, i5;
        long $l2, $l3;
        long[] $r3;
        byte $b4;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r5;
        java.lang.Object $r6;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement r7;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $z0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: boolean isZero()>();

        if $z0 == 0 goto label1;

        $r2 = new java.lang.ArithmeticException;

        specialinvoke $r2.<java.lang.ArithmeticException: void <init>()>();

        throw $r2;

     label1:
        i0 = 31;

        $z0 = 0;

     label2:
        if $z0 != 0 goto label4;

        if i0 < 0 goto label4;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree>;

        $i1 = $i1 + -1;

        $l2 = (long) $i1;

        $r3 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l3 = $r3[i0];

        $l2 = $l2 & $l3;

        $b4 = $l2 cmp 0L;

        if $b4 == 0 goto label3;

        $z0 = 1;

     label3:
        i0 = i0 + -1;

        goto label2;

     label4:
        $i1 = i0 + 1;

        $r4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r5 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBField) $r4;

        staticinvoke <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement ZERO(org.spongycastle.pqc.math.linearalgebra.GF2nONBField)>($r5);

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBElement)>(r0);

        i0 = 1;

        $i1 = $i1 + -1;

     label5:
        if $i1 < 0 goto label9;

        $r6 = virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: java.lang.Object clone()>();

        r7 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r6;

        i5 = 1;

     label6:
        if i5 > i0 goto label7;

        virtualinvoke r7.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void squareThis()>();

        i5 = i5 + 1;

        goto label6;

     label7:
        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void multiplyThisBy(org.spongycastle.pqc.math.linearalgebra.GFElement)>(r7);

        i0 = i0 << 1;

        i5 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree>;

        i5 = i5 + -1;

        $l2 = (long) i5;

        $r3 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l3 = $r3[$i1];

        $l2 = $l2 & $l3;

        $b4 = $l2 cmp 0L;

        if $b4 == 0 goto label8;

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void squareThis()>();

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void multiplyThisBy(org.spongycastle.pqc.math.linearalgebra.GFElement)>(r0);

        i0 = i0 + 1;

     label8:
        $i1 = $i1 + -1;

        goto label5;

     label9:
        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: void squareThis()>();

        return;
    }
    public boolean isOne()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        boolean z0;
        int i0, $i1;
        long[] $r1;
        long $l2, $l4;
        byte $b3;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        z0 = 1;

        i0 = 0;

     label1:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        $i1 = $i1 + -1;

        if i0 >= $i1 goto label4;

        if z0 == 0 goto label4;

        if z0 == 0 goto label3;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $l2 = $r1[i0];

        $l2 = $l2 & -1L;

        $b3 = $l2 cmp -1L;

        if $b3 != 0 goto label3;

        z0 = 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        z0 = 0;

        goto label2;

     label4:
        if z0 == 0 goto label6;

        if z0 == 0 goto label5;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        i0 = i0 + -1;

        $l2 = $r1[i0];

        $r1 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mMaxmask>;

        i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit>;

        i0 = i0 + -1;

        $l4 = $r1[i0];

        $l2 = $l2 & $l4;

        $r1 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mMaxmask>;

        i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit>;

        i0 = i0 + -1;

        $l4 = $r1[i0];

        $b3 = $l2 cmp $l4;

        if $b3 != 0 goto label5;

        return 1;

     label5:
        return 0;

     label6:
        return z0;
    }
    public boolean isZero()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        boolean z0;
        int i0, $i1;
        long[] $r1;
        long $l2;
        byte $b3;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        z0 = 1;

        i0 = 0;

     label1:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        if i0 >= $i1 goto label4;

        if z0 == 0 goto label4;

        if z0 == 0 goto label3;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $l2 = $r1[i0];

        $l2 = $l2 & -1L;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label3;

        z0 = 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        z0 = 0;

        goto label2;

     label4:
        return z0;
    }
    public org.spongycastle.pqc.math.linearalgebra.GFElement multiply(org.spongycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, r2;
        org.spongycastle.pqc.math.linearalgebra.GFElement $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GFElement;

        r2 = new org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        specialinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBElement)>(r0);

        virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void multiplyThisBy(org.spongycastle.pqc.math.linearalgebra.GFElement)>($r1);

        return r2;
    }
    public void multiplyThisBy(org.spongycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, $r7;
        long l0, l1, $l10, $l11;
        long[] r1, r2, r3, $r11;
        int i2, i3, $i4, i5, $i6, i7, $i8, $i9;
        org.spongycastle.pqc.math.linearalgebra.GFElement r4;
        boolean $z0, z1;
        java.lang.RuntimeException $r5;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r6, $r8;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r9;
        int[][] $r10;
        int[] $r12, $r13;
        byte $b12;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        r4 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GFElement;

        $z0 = r4 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        if $z0 != 0 goto label01;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("The elements have different representation: not yet implemented");

        throw $r5;

     label01:
        $r6 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r7 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBElement) r4;

        $r8 = $r7.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $z0 = virtualinvoke $r6.<org.spongycastle.pqc.math.linearalgebra.GF2nField: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label02;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>()>();

        throw $r5;

     label02:
        $z0 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label03;

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void squareThis()>();

        return;

     label03:
        r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $r7 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBElement) r4;

        r2 = $r7.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        i3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        r3 = newarray (long)[i3];

        $r6 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r9 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBField) $r6;

        $r10 = $r9.<org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int[][] mMult>;

        i3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        i3 = i3 + -1;

        i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit>;

        i2 = i2 + -1;

        $r11 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        l1 = $r11[63];

        $r11 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        l0 = $r11[i2];

        i2 = 0;

     label04:
        $i4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree>;

        if i2 >= $i4 goto label32;

        $i4 = 0;

        i5 = 0;

     label05:
        $i6 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree>;

        if i5 >= $i6 goto label08;

        $r12 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int[] mIBY64>;

        $i6 = $r12[i5];

        i7 = i5 & 63;

        $r12 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int[] mIBY64>;

        $r13 = $r10[i5];

        $i8 = $r13[0];

        $i8 = $r12[$i8];

        $r12 = $r10[i5];

        $i9 = $r12[0];

        $i9 = $i9 & 63;

        $l10 = r1[$i6];

        $r11 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l11 = $r11[i7];

        $l10 = $l10 & $l11;

        $b12 = $l10 cmp 0L;

        if $b12 == 0 goto label07;

        $l10 = r2[$i8];

        $r11 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l11 = $r11[$i9];

        $l10 = $l10 & $l11;

        $b12 = $l10 cmp 0L;

        if $b12 == 0 goto label06;

        $i4 = $i4 ^ 1;

     label06:
        $r12 = $r10[i5];

        $i6 = $r12[1];

        if $i6 == -1 goto label07;

        $r12 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int[] mIBY64>;

        $r13 = $r10[i5];

        $i6 = $r13[1];

        $i6 = $r12[$i6];

        $r12 = $r10[i5];

        i7 = $r12[1];

        i7 = i7 & 63;

        $l10 = r2[$i6];

        $r11 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l11 = $r11[i7];

        $l10 = $l10 & $l11;

        $b12 = $l10 cmp 0L;

        if $b12 == 0 goto label07;

        $i4 = $i4 ^ 1;

     label07:
        i5 = i5 + 1;

        goto label05;

     label08:
        $r12 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int[] mIBY64>;

        i5 = $r12[i2];

        $i6 = i2 & 63;

        if $i4 == 0 goto label09;

        $l10 = r3[i5];

        $r11 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l11 = $r11[$i6];

        $l10 = $l10 ^ $l11;

        r3[i5] = $l10;

     label09:
        $i4 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        if $i4 <= 1 goto label26;

        $l10 = r1[i3];

        $l10 = $l10 & 1L;

        $b12 = $l10 cmp 1L;

        if $b12 != 0 goto label14;

        $z0 = 1;

     label10:
        $i4 = i3 + -1;

     label11:
        if $i4 < 0 goto label16;

        $l10 = r1[$i4];

        $l10 = $l10 & 1L;

        $b12 = $l10 cmp 0L;

        if $b12 == 0 goto label15;

        z1 = 1;

     label12:
        $l10 = r1[$i4];

        $l10 = $l10 >>> 1;

        r1[$i4] = $l10;

        if $z0 == 0 goto label13;

        $l10 = r1[$i4];

        $l10 = $l10 ^ l1;

        r1[$i4] = $l10;

     label13:
        $z0 = z1;

        $i4 = $i4 + -1;

        goto label11;

     label14:
        $z0 = 0;

        goto label10;

     label15:
        z1 = 0;

        goto label12;

     label16:
        $l10 = r1[i3];

        $l10 = $l10 >>> 1;

        r1[i3] = $l10;

        if $z0 == 0 goto label17;

        $l10 = r1[i3];

        $l10 = $l10 ^ l0;

        r1[i3] = $l10;

     label17:
        $l10 = r2[i3];

        $l10 = $l10 & 1L;

        $b12 = $l10 cmp 1L;

        if $b12 != 0 goto label22;

        $z0 = 1;

     label18:
        $i4 = i3 + -1;

     label19:
        if $i4 < 0 goto label24;

        $l10 = r2[$i4];

        $l10 = $l10 & 1L;

        $b12 = $l10 cmp 0L;

        if $b12 == 0 goto label23;

        z1 = 1;

     label20:
        $l10 = r2[$i4];

        $l10 = $l10 >>> 1;

        r2[$i4] = $l10;

        if $z0 == 0 goto label21;

        $l10 = r2[$i4];

        $l10 = $l10 ^ l1;

        r2[$i4] = $l10;

     label21:
        $z0 = z1;

        $i4 = $i4 + -1;

        goto label19;

     label22:
        $z0 = 0;

        goto label18;

     label23:
        z1 = 0;

        goto label20;

     label24:
        $l10 = r2[i3];

        $l10 = $l10 >>> 1;

        r2[i3] = $l10;

        if $z0 == 0 goto label25;

        $l10 = r2[i3];

        $l10 = $l10 ^ l0;

        r2[i3] = $l10;

     label25:
        i2 = i2 + 1;

        goto label04;

     label26:
        $l10 = r1[0];

        $l10 = $l10 & 1L;

        $b12 = $l10 cmp 1L;

        if $b12 != 0 goto label30;

        $z0 = 1;

     label27:
        $l10 = r1[0];

        $l10 = $l10 >>> 1;

        r1[0] = $l10;

        if $z0 == 0 goto label28;

        $l10 = r1[0];

        $l10 = $l10 ^ l0;

        r1[0] = $l10;

     label28:
        $l10 = r2[0];

        $l10 = $l10 & 1L;

        $b12 = $l10 cmp 1L;

        if $b12 != 0 goto label31;

        $z0 = 1;

     label29:
        $l10 = r2[0];

        $l10 = $l10 >>> 1;

        r2[0] = $l10;

        if $z0 == 0 goto label25;

        $l10 = r2[0];

        $l10 = $l10 ^ l0;

        r2[0] = $l10;

        goto label25;

     label30:
        $z0 = 0;

        goto label27;

     label31:
        $z0 = 0;

        goto label29;

     label32:
        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void assign(long[])>(r3);

        return;
    }
    void reverseOrder()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        long[] $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 = specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] getElementReverseOrder()>();

        r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol> = $r1;

        return;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation() throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, $r4;
        long l0, l2, $l4, $l5;
        int i1, $i3, $i7;
        long[] r1, $r3;
        java.lang.RuntimeException $r2;
        byte $b6;
        org.spongycastle.pqc.math.linearalgebra.GF2nField $r5;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField $r6;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        i1 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int trace()>();

        if i1 != 1 goto label01;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>()>();

        throw $r2;

     label01:
        r1 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        l0 = r1[63];

        i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        r1 = newarray (long)[i1];

        l2 = 0L;

        i1 = 0;

     label02:
        $i3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        $i3 = $i3 + -1;

        if i1 >= $i3 goto label12;

        $i3 = 1;

     label03:
        if $i3 >= 64 goto label07;

        $r3 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l4 = $r3[$i3];

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $l5 = $r3[i1];

        $l4 = $l4 & $l5;

        $b6 = $l4 cmp 0L;

        if $b6 == 0 goto label04;

        $r3 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $i7 = $i3 + -1;

        $l4 = $r3[$i7];

        $l4 = $l4 & l2;

        $b6 = $l4 cmp 0L;

        if $b6 != 0 goto label06;

     label04:
        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $l4 = $r3[i1];

        $r3 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l5 = $r3[$i3];

        $l4 = $l4 & $l5;

        $b6 = $l4 cmp 0L;

        if $b6 != 0 goto label05;

        $r3 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $i7 = $i3 + -1;

        $l4 = $r3[$i7];

        $l4 = $l4 & l2;

        $b6 = $l4 cmp 0L;

        if $b6 == 0 goto label06;

     label05:
        $r3 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l4 = $r3[$i3];

        l2 = l2 ^ $l4;

     label06:
        $i3 = $i3 + 1;

        goto label03;

     label07:
        r1[i1] = l2;

        $l4 = l0 & l2;

        $b6 = $l4 cmp 0L;

        if $b6 == 0 goto label08;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $i3 = i1 + 1;

        $l4 = $r3[$i3];

        $l4 = $l4 & 1L;

        $b6 = $l4 cmp 1L;

        if $b6 == 0 goto label09;

     label08:
        l2 = l0 & l2;

        $b6 = l2 cmp 0L;

        if $b6 != 0 goto label11;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $i3 = i1 + 1;

        l2 = $r3[$i3];

        l2 = l2 & 1L;

        $b6 = l2 cmp 0L;

        if $b6 != 0 goto label11;

     label09:
        l2 = 0L;

     label10:
        i1 = i1 + 1;

        goto label02;

     label11:
        l2 = 1L;

        goto label10;

     label12:
        i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree>;

        i1 = i1 & 63;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $i3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        $i3 = $i3 + -1;

        l0 = $r3[$i3];

        $i3 = 1;

     label13:
        if $i3 >= i1 goto label17;

        $r3 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l4 = $r3[$i3];

        $l4 = $l4 & l0;

        $b6 = $l4 cmp 0L;

        if $b6 == 0 goto label14;

        $r3 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $i7 = $i3 + -1;

        $l4 = $r3[$i7];

        $l4 = $l4 & l2;

        $b6 = $l4 cmp 0L;

        if $b6 != 0 goto label16;

     label14:
        $r3 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l4 = $r3[$i3];

        $l4 = $l4 & l0;

        $b6 = $l4 cmp 0L;

        if $b6 != 0 goto label15;

        $r3 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $i7 = $i3 + -1;

        $l4 = $r3[$i7];

        $l4 = $l4 & l2;

        $b6 = $l4 cmp 0L;

        if $b6 == 0 goto label16;

     label15:
        $r3 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l4 = $r3[$i3];

        l2 = l2 ^ $l4;

     label16:
        $i3 = $i3 + 1;

        goto label13;

     label17:
        i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        i1 = i1 + -1;

        r1[i1] = l2;

        $r4 = new org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r5 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: org.spongycastle.pqc.math.linearalgebra.GF2nField mField>;

        $r6 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBField) $r5;

        specialinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBField,long[])>($r6, r1);

        return $r4;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nElement square()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBElement)>(r0);

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void squareThis()>();

        return r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2nElement squareRoot()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0, r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        r1 = new org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        specialinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBElement)>(r0);

        virtualinvoke r1.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void squareRootThis()>();

        return r1;
    }
    public void squareRootThis()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        long l0, $l3, $l6;
        int i1, i2, i5;
        long[] $r1, $r2;
        byte $b4;
        boolean z0, z1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 = specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] getElement()>();

        i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        i2 = i2 + -1;

        i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit>;

        i1 = i1 + -1;

        $r2 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        l0 = $r2[63];

        $l3 = $r1[0];

        $l3 = $l3 & 1L;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label5;

        z0 = 1;

     label1:
        i5 = i2;

     label2:
        if i5 < 0 goto label8;

        $l3 = $r1[i5];

        $l3 = $l3 & 1L;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label6;

        z1 = 1;

     label3:
        $l3 = $r1[i5];

        $l3 = $l3 >>> 1;

        $r1[i5] = $l3;

        if z0 == 0 goto label4;

        if i5 != i2 goto label7;

        $l3 = $r1[i5];

        $r2 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l6 = $r2[i1];

        $l3 = $l3 ^ $l6;

        $r1[i5] = $l3;

     label4:
        z0 = z1;

        i5 = i5 + -1;

        goto label2;

     label5:
        z0 = 0;

        goto label1;

     label6:
        z1 = 0;

        goto label3;

     label7:
        $l3 = $r1[i5];

        $l3 = $l3 ^ l0;

        $r1[i5] = $l3;

        goto label4;

     label8:
        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void assign(long[])>($r1);

        return;
    }
    public void squareThis()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        long l0, $l3, $l4;
        int i1, i2, i6;
        long[] $r1, $r2;
        byte $b5;
        boolean z0, z1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 = specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] getElement()>();

        i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        i2 = i2 + -1;

        i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit>;

        i1 = i1 + -1;

        $r2 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        l0 = $r2[63];

        $l3 = $r1[i2];

        $r2 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l4 = $r2[i1];

        $l3 = $l3 & $l4;

        $b5 = $l3 cmp 0L;

        if $b5 == 0 goto label05;

        z0 = 1;

     label01:
        i6 = 0;

     label02:
        if i6 >= i2 goto label07;

        $l3 = $r1[i6];

        $l3 = $l3 & l0;

        $b5 = $l3 cmp 0L;

        if $b5 == 0 goto label06;

        z1 = 1;

     label03:
        $l3 = $r1[i6];

        $l3 = $l3 << 1;

        $r1[i6] = $l3;

        if z0 == 0 goto label04;

        $l3 = $r1[i6];

        $l3 = $l3 ^ 1L;

        $r1[i6] = $l3;

     label04:
        z0 = z1;

        i6 = i6 + 1;

        goto label02;

     label05:
        z0 = 0;

        goto label01;

     label06:
        z1 = 0;

        goto label03;

     label07:
        l0 = $r1[i2];

        $r2 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l3 = $r2[i1];

        l0 = l0 & $l3;

        $b5 = l0 cmp 0L;

        if $b5 == 0 goto label11;

        z1 = 1;

     label08:
        l0 = $r1[i2];

        l0 = l0 << 1;

        $r1[i2] = l0;

        if z0 == 0 goto label09;

        l0 = $r1[i2];

        l0 = l0 ^ 1L;

        $r1[i2] = l0;

     label09:
        if z1 == 0 goto label10;

        l0 = $r1[i2];

        $r2 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        i1 = i1 + 1;

        $l3 = $r2[i1];

        l0 = l0 ^ $l3;

        $r1[i2] = l0;

     label10:
        specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void assign(long[])>($r1);

        return;

     label11:
        z1 = 0;

        goto label08;
    }
    boolean testBit(int)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        int $i0, $i2;
        long l1, $l3;
        long[] $r1;
        byte $b4;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label2;

        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree>;

        if $i0 <= $i2 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $i2 = $i0 >>> 6;

        l1 = $r1[$i2];

        $r1 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $i0 = $i0 & 63;

        $l3 = $r1[$i0];

        l1 = l1 & $l3;

        $b4 = l1 cmp 0L;

        if $b4 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public boolean testRightmostBit()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        long[] $r1;
        int $i0;
        long $l1, $l2;
        byte $b3;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        $i0 = $i0 + -1;

        $l1 = $r1[$i0];

        $r1 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit>;

        $i0 = $i0 + -1;

        $l2 = $r1[$i0];

        $l1 = $l1 & $l2;

        $b3 = $l1 cmp 0L;

        if $b3 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public byte[] toByteArray()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        int i0, $i1, i2, $i3;
        byte[] r1;
        long[] $r2;
        long $l4, $l5;
        byte $b6;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mDegree>;

        i0 = i0 + -1;

        i0 = i0 >> 3;

        i0 = i0 + 1;

        r1 = newarray (byte)[i0];

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $i3 = i0 - i2;

        $i3 = $i3 + -1;

        $r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $i1 = i2 >>> 3;

        $l4 = $r2[$i1];

        $i1 = i2 & 7;

        $i1 = $i1 << 3;

        $l5 = 255L << $i1;

        $l4 = $l4 & $l5;

        $i1 = i2 & 7;

        $i1 = $i1 << 3;

        $l4 = $l4 >>> $i1;

        $i1 = (int) $l4;

        $b6 = (byte) $i1;

        r1[$i3] = $b6;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }
    public java.math.BigInteger toFlexiBigInt()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        java.math.BigInteger $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 = new java.math.BigInteger;

        $r2 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: byte[] toByteArray()>();

        specialinvoke $r1.<java.math.BigInteger: void <init>(int,byte[])>(1, $r2);

        return $r1;
    }
    public java.lang.String toString()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        java.lang.String $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $r1 = virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: java.lang.String toString(int)>(16);

        return $r1;
    }
    public java.lang.String toString(int)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        int $i0, i1;
        char[] r1;
        java.lang.String r2;
        long[] $r3, $r5;
        long $l2, $l3;
        byte $b4;
        java.lang.StringBuilder $r4;
        char $c5;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        $i0 := @parameter0: int;

        r2 = "";

        $r3 = specialinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] getElement()>();

        i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit>;

        if $i0 != 2 goto label10;

        $i0 = i1 + -1;

     label01:
        if $i0 < 0 goto label04;

        i1 = lengthof $r3;

        i1 = i1 + -1;

        $l2 = $r3[i1];

        $l3 = 1L << $i0;

        $l2 = $l2 & $l3;

        $b4 = $l2 cmp 0L;

        if $b4 != 0 goto label03;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $i0 = $i0 + -1;

        goto label01;

     label03:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1");

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label04:
        $i0 = lengthof $r3;

        $i0 = $i0 + -2;

     label05:
        if $i0 < 0 goto label12;

        i1 = 63;

     label06:
        if i1 < 0 goto label09;

        $l2 = $r3[$i0];

        $r5 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l3 = $r5[i1];

        $l2 = $l2 & $l3;

        $b4 = $l2 cmp 0L;

        if $b4 != 0 goto label08;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        i1 = i1 + -1;

        goto label06;

     label08:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1");

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label07;

     label09:
        $i0 = $i0 + -1;

        goto label05;

     label10:
        if $i0 != 16 goto label13;

        r1 = newarray (char)[16];

        r1[0] = 48;

        r1[1] = 49;

        r1[2] = 50;

        r1[3] = 51;

        r1[4] = 52;

        r1[5] = 53;

        r1[6] = 54;

        r1[7] = 55;

        r1[8] = 56;

        r1[9] = 57;

        r1[10] = 97;

        r1[11] = 98;

        r1[12] = 99;

        r1[13] = 100;

        r1[14] = 101;

        r1[15] = 102;

        $i0 = lengthof $r3;

        $i0 = $i0 + -1;

     label11:
        if $i0 < 0 goto label14;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 60;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 56;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 52;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 48;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 44;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 40;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 36;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 32;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 28;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 24;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 20;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 16;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 12;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 8;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        $l2 = $l2 >>> 4;

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $l2 = $r3[$i0];

        i1 = (int) $l2;

        i1 = i1 & 15;

        $c5 = r1[i1];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = $i0 + -1;

        goto label11;

     label12:
        return r2;

     label13:
        return "";

     label14:
        return r2;
    }
    public int trace()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r0;
        int i0, i1, i2, i3;
        long[] $r1;
        long $l4, $l5;
        byte $b6;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        i2 = 0;

        i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mLength>;

        i1 = i1 + -1;

        i0 = 0;

     label1:
        if i0 >= i1 goto label5;

        i3 = 0;

     label2:
        if i3 >= 64 goto label4;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $l4 = $r1[i0];

        $r1 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l5 = $r1[i3];

        $l4 = $l4 & $l5;

        $b6 = $l4 cmp 0L;

        if $b6 == 0 goto label3;

        i2 = i2 ^ 1;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: int mBit>;

        i3 = 0;

     label6:
        if i3 >= i0 goto label8;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mPol>;

        $l4 = $r1[i1];

        $r1 = <org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: long[] mBitmask>;

        $l5 = $r1[i3];

        $l4 = $l4 & $l5;

        $b6 = $l4 cmp 0L;

        if $b6 == 0 goto label7;

        i2 = i2 ^ 1;

     label7:
        i3 = i3 + 1;

        goto label6;

     label8:
        return i2;
    }
