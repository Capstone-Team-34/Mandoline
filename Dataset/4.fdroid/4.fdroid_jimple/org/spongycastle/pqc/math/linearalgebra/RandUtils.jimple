org.spongycastle.pqc.math.linearalgebra.RandUtils extends java.lang.Object
    public void <init>()
    {
        org.spongycastle.pqc.math.linearalgebra.RandUtils r0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.RandUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static int nextInt(java.security.SecureRandom, int)
    {
        java.security.SecureRandom $r0;
        int $i0, i1, $i2, $i5;
        long $l3, $l4;

        $r0 := @parameter0: java.security.SecureRandom;

        $i0 := @parameter1: int;

        $i2 = neg $i0;

        $i2 = $i2 & $i0;

        if $i2 != $i0 goto label1;

        $l3 = (long) $i0;

        $i0 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt()>();

        $i0 = $i0 >>> 1;

        $l4 = (long) $i0;

        $l3 = $l3 * $l4;

        $l3 = $l3 >> 31;

        $i0 = (int) $l3;

        return $i0;

     label1:
        $i2 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt()>();

        i1 = $i2 >>> 1;

        $i2 = i1 % $i0;

        $i5 = i1 - $i2;

        i1 = $i0 + -1;

        i1 = $i5 + i1;

        if i1 < 0 goto label1;

        return $i2;
    }
