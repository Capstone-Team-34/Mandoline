org.spongycastle.pqc.math.linearalgebra.GF2nField extends java.lang.Object
protected org.spongycastle.pqc.math.linearalgebra.GF2Polynomial fieldPolynomial
protected java.util.Vector fields
protected int mDegree
protected java.util.Vector matrices
    public void <init>()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nField r0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nField;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
protected abstract void computeCOBMatrix(org.spongycastle.pqc.math.linearalgebra.GF2nField) { 
// no body
} 
protected abstract void computeFieldPolynomial() { 
// no body
} 
    public final org.spongycastle.pqc.math.linearalgebra.GF2nElement convert(org.spongycastle.pqc.math.linearalgebra.GF2nElement, org.spongycastle.pqc.math.linearalgebra.GF2nField) throws java.lang.RuntimeException
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nField r0, r5;
        org.spongycastle.pqc.math.linearalgebra.GF2nElement $r1;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial r2, r4, $r11;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBElement r3;
        java.lang.Object $r6;
        boolean $z0;
        int $i0, $i1;
        java.lang.RuntimeException $r7;
        java.util.Vector $r8;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial[] $r9;
        java.math.BigInteger $r10;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement $r12;
        org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField r13;
        org.spongycastle.pqc.math.linearalgebra.GF2nONBField r14;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nField;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2nElement;

        r5 := @parameter1: org.spongycastle.pqc.math.linearalgebra.GF2nField;

        if r5 != r0 goto label01;

        $r6 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: java.lang.Object clone()>();

        $r1 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r6;

        return $r1;

     label01:
        r2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial fieldPolynomial>;

        r4 = r5.<org.spongycastle.pqc.math.linearalgebra.GF2nField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial fieldPolynomial>;

        $z0 = virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label02;

        $r6 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: java.lang.Object clone()>();

        $r1 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r6;

        return $r1;

     label02:
        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        $i1 = r5.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        if $i0 == $i1 goto label03;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("GF2nField.convert: B1 has a different degree and thus cannot be coverted to!");

        throw $r7;

     label03:
        $r8 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: java.util.Vector fields>;

        $i0 = virtualinvoke $r8.<java.util.Vector: int indexOf(java.lang.Object)>(r5);

        $i1 = $i0;

        if $i0 != -1 goto label04;

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: void computeCOBMatrix(org.spongycastle.pqc.math.linearalgebra.GF2nField)>(r5);

        $r8 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: java.util.Vector fields>;

        $i1 = virtualinvoke $r8.<java.util.Vector: int indexOf(java.lang.Object)>(r5);

     label04:
        $r8 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: java.util.Vector matrices>;

        $r6 = virtualinvoke $r8.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r9 = (org.spongycastle.pqc.math.linearalgebra.GF2Polynomial[]) $r6;

        $r6 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: java.lang.Object clone()>();

        $r1 = (org.spongycastle.pqc.math.linearalgebra.GF2nElement) $r6;

        $z0 = $r1 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        if $z0 == 0 goto label05;

        r3 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBElement) $r1;

        virtualinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void reverseOrder()>();

     label05:
        r2 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        $r10 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2nElement: java.math.BigInteger toFlexiBigInt()>();

        specialinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(int,java.math.BigInteger)>($i0, $r10);

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void expandN(int)>($i0);

        r4 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        specialinvoke r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(int)>($i0);

        $i0 = 0;

     label06:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        if $i0 >= $i1 goto label08;

        $r11 = $r9[$i0];

        $z0 = virtualinvoke r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean vectorMult(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r11);

        if $z0 == 0 goto label07;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        $i1 = $i1 + -1;

        $i1 = $i1 - $i0;

        virtualinvoke r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void setBit(int)>($i1);

     label07:
        $i0 = $i0 + 1;

        goto label06;

     label08:
        $z0 = r5 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField;

        if $z0 == 0 goto label09;

        $r12 = new org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement;

        r13 = (org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField) r5;

        specialinvoke $r12.<org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField,org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>(r13, r4);

        return $r12;

     label09:
        $z0 = r5 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nONBField;

        if $z0 == 0 goto label10;

        r3 = new org.spongycastle.pqc.math.linearalgebra.GF2nONBElement;

        r14 = (org.spongycastle.pqc.math.linearalgebra.GF2nONBField) r5;

        $r10 = virtualinvoke r4.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: java.math.BigInteger toFlexiBigInt()>();

        specialinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2nONBField,java.math.BigInteger)>(r14, $r10);

        virtualinvoke r3.<org.spongycastle.pqc.math.linearalgebra.GF2nONBElement: void reverseOrder()>();

        return r3;

     label10:
        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("GF2nField.convert: B1 must be an instance of GF2nPolynomialField or GF2nONBField!");

        throw $r7;
    }
    public final boolean equals(java.lang.Object)
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nField r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r3, $r4;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nField;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label4;

        $z0 = $r1 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nField;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.pqc.math.linearalgebra.GF2nField) $r1;

        $i0 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        if $i0 != $i1 goto label4;

        $r3 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial fieldPolynomial>;

        $r4 = r2.<org.spongycastle.pqc.math.linearalgebra.GF2nField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial fieldPolynomial>;

        $z0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $z0 = r0 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField;

        if $z0 == 0 goto label2;

        $z0 = r2 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField;

        if $z0 == 0 goto label4;

     label2:
        $z0 = r0 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nONBField;

        if $z0 == 0 goto label3;

        $z0 = r2 instanceof org.spongycastle.pqc.math.linearalgebra.GF2nONBField;

        if $z0 == 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }
    public final int getDegree()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nField r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nField;

        i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        return i0;
    }
    public final org.spongycastle.pqc.math.linearalgebra.GF2Polynomial getFieldPolynomial()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nField r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1, $r2;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nField;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial fieldPolynomial>;

        if $r1 != null goto label1;

        virtualinvoke r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: void computeFieldPolynomial()>();

     label1:
        $r2 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial fieldPolynomial>;

        specialinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r1);

        return $r2;
    }
protected abstract org.spongycastle.pqc.math.linearalgebra.GF2nElement getRandomRoot(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial) { 
// no body
} 
    public int hashCode()
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nField r0;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r1;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nField;

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        $r1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial fieldPolynomial>;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: int hashCode()>();

        $i0 = $i1 + $i0;

        return $i0;
    }
    protected final org.spongycastle.pqc.math.linearalgebra.GF2Polynomial[] invertMatrix(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial[])
    {
        org.spongycastle.pqc.math.linearalgebra.GF2nField r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial[] $r1, r3, r4;
        java.lang.RuntimeException r2;
        int $i0, $i1, $i2;
        org.spongycastle.pqc.math.linearalgebra.GF2Polynomial $r5, $r6;
        boolean $z0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.GF2nField;

        $r1 := @parameter0: org.spongycastle.pqc.math.linearalgebra.GF2Polynomial[];

        $i0 = lengthof $r1;

        r3 = newarray (org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)[$i0];

        $i0 = lengthof $r1;

        r4 = newarray (org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)[$i0];

        $i0 = 0;

     label01:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        if $i0 >= $i1 goto label09;

        $r5 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

     label02:
        $r6 = $r1[$i0];

        specialinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r6);

        r3[$i0] = $r5;

     label03:
        $r5 = new org.spongycastle.pqc.math.linearalgebra.GF2Polynomial;

     label04:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        specialinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <init>(int)>($i1);

        r4[$i0] = $r5;

        $r5 = r4[$i0];

        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

     label05:
        $i1 = $i1 + -1;

        $i1 = $i1 - $i0;

     label06:
        virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void setBit(int)>($i1);

     label07:
        $i0 = $i0 + 1;

        goto label01;

     label08:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.RuntimeException: void printStackTrace()>();

        goto label07;

     label09:
        $i0 = 0;

     label10:
        $i1 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        $i1 = $i1 + -1;

        if $i0 >= $i1 goto label18;

        $i1 = $i0;

     label11:
        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        if $i1 >= $i2 goto label12;

        $r5 = r3[$i1];

        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        $i2 = $i2 + -1;

        $i2 = $i2 - $i0;

        $z0 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean testBit(int)>($i2);

        if $z0 != 0 goto label12;

        $i1 = $i1 + 1;

        goto label11;

     label12:
        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        if $i1 < $i2 goto label13;

        r2 = new java.lang.RuntimeException;

        specialinvoke r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("GF2nField.invertMatrix: Matrix cannot be inverted!");

        throw r2;

     label13:
        if $i0 == $i1 goto label14;

        $r5 = r3[$i0];

        $r6 = r3[$i1];

        r3[$i0] = $r6;

        r3[$i1] = $r5;

        $r5 = r4[$i0];

        $r6 = r4[$i1];

        r4[$i0] = $r6;

        r4[$i1] = $r5;

     label14:
        $i1 = $i0 + 1;

     label15:
        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        if $i1 >= $i2 goto label17;

        $r5 = r3[$i1];

        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        $i2 = $i2 + -1;

        $i2 = $i2 - $i0;

        $z0 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean testBit(int)>($i2);

        if $z0 == 0 goto label16;

        $r5 = r3[$i1];

        $r6 = r3[$i0];

        virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void addToThis(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r6);

        $r5 = r4[$i1];

        $r6 = r4[$i0];

        virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void addToThis(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r6);

     label16:
        $i1 = $i1 + 1;

        goto label15;

     label17:
        $i0 = $i0 + 1;

        goto label10;

     label18:
        $i0 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        $i0 = $i0 + -1;

     label19:
        if $i0 <= 0 goto label23;

        $i1 = $i0 + -1;

     label20:
        if $i1 < 0 goto label22;

        $r5 = r3[$i1];

        $i2 = r0.<org.spongycastle.pqc.math.linearalgebra.GF2nField: int mDegree>;

        $i2 = $i2 + -1;

        $i2 = $i2 - $i0;

        $z0 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: boolean testBit(int)>($i2);

        if $z0 == 0 goto label21;

        $r5 = r3[$i1];

        $r6 = r3[$i0];

        virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void addToThis(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r6);

        $r5 = r4[$i1];

        $r6 = r4[$i0];

        virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void addToThis(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>($r6);

     label21:
        $i1 = $i1 + -1;

        goto label20;

     label22:
        $i0 = $i0 + -1;

        goto label19;

     label23:
        return r4;

        catch java.lang.RuntimeException from label02 to label03 with label08;
        catch java.lang.RuntimeException from label04 to label05 with label08;
        catch java.lang.RuntimeException from label06 to label07 with label08;
    }
