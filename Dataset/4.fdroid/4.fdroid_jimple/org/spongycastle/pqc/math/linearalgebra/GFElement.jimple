org.spongycastle.pqc.math.linearalgebra.GFElement extends java.lang.Object
public abstract org.spongycastle.pqc.math.linearalgebra.GFElement add(org.spongycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException { 
// no body
} 
public abstract void addToThis(org.spongycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException { 
// no body
} 
public abstract java.lang.Object clone() { 
// no body
} 
public abstract boolean equals(java.lang.Object) { 
// no body
} 
public abstract int hashCode() { 
// no body
} 
public abstract org.spongycastle.pqc.math.linearalgebra.GFElement invert() throws java.lang.ArithmeticException { 
// no body
} 
public abstract boolean isOne() { 
// no body
} 
public abstract boolean isZero() { 
// no body
} 
public abstract org.spongycastle.pqc.math.linearalgebra.GFElement multiply(org.spongycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException { 
// no body
} 
public abstract void multiplyThisBy(org.spongycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException { 
// no body
} 
public abstract org.spongycastle.pqc.math.linearalgebra.GFElement subtract(org.spongycastle.pqc.math.linearalgebra.GFElement) throws java.lang.RuntimeException { 
// no body
} 
public abstract void subtractFromThis(org.spongycastle.pqc.math.linearalgebra.GFElement) { 
// no body
} 
public abstract byte[] toByteArray() { 
// no body
} 
public abstract java.math.BigInteger toFlexiBigInt() { 
// no body
} 
public abstract java.lang.String toString() { 
// no body
} 
public abstract java.lang.String toString(int) { 
// no body
} 
