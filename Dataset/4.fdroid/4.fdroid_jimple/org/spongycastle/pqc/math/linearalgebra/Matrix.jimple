org.spongycastle.pqc.math.linearalgebra.Matrix extends java.lang.Object
public static final char MATRIX_TYPE_RANDOM_LT
public static final char MATRIX_TYPE_RANDOM_REGULAR
public static final char MATRIX_TYPE_RANDOM_UT
public static final char MATRIX_TYPE_UNIT
public static final char MATRIX_TYPE_ZERO
protected int numColumns
protected int numRows
    public void <init>()
    {
        org.spongycastle.pqc.math.linearalgebra.Matrix r0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.Matrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
public abstract org.spongycastle.pqc.math.linearalgebra.Matrix computeInverse() { 
// no body
} 
public abstract byte[] getEncoded() { 
// no body
} 
    public int getNumColumns()
    {
        org.spongycastle.pqc.math.linearalgebra.Matrix r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.Matrix;

        i0 = r0.<org.spongycastle.pqc.math.linearalgebra.Matrix: int numColumns>;

        return i0;
    }
    public int getNumRows()
    {
        org.spongycastle.pqc.math.linearalgebra.Matrix r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.math.linearalgebra.Matrix;

        i0 = r0.<org.spongycastle.pqc.math.linearalgebra.Matrix: int numRows>;

        return i0;
    }
public abstract boolean isZero() { 
// no body
} 
public abstract org.spongycastle.pqc.math.linearalgebra.Vector leftMultiply(org.spongycastle.pqc.math.linearalgebra.Vector) { 
// no body
} 
public abstract org.spongycastle.pqc.math.linearalgebra.Matrix rightMultiply(org.spongycastle.pqc.math.linearalgebra.Matrix) { 
// no body
} 
public abstract org.spongycastle.pqc.math.linearalgebra.Matrix rightMultiply(org.spongycastle.pqc.math.linearalgebra.Permutation) { 
// no body
} 
public abstract org.spongycastle.pqc.math.linearalgebra.Vector rightMultiply(org.spongycastle.pqc.math.linearalgebra.Vector) { 
// no body
} 
public abstract java.lang.String toString() { 
// no body
} 
