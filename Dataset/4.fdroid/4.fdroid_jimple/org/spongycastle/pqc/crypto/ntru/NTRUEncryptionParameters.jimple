org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters extends java.lang.Object implements java.lang.Cloneable
public int N
public int bufferLenBits
int bufferLenTrits
public int c
public int db
public int df
public int df1
public int df2
public int df3
public int dg
public int dm0
public int dr
public int dr1
public int dr2
public int dr3
public boolean fastFp
public org.spongycastle.crypto.Digest hashAlg
public boolean hashSeed
int llen
public int maxMsgLenBytes
public int minCallsMask
public int minCallsR
public byte[] oid
public int pkLen
public int polyType
public int q
public boolean sparse
    public void <init>(int, int, int, int, int, int, int, int, int, int, boolean, byte[], boolean, boolean, org.spongycastle.crypto.Digest)
    {
        org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2;
        byte[] $r1;
        org.spongycastle.crypto.Digest $r2;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        $i6 := @parameter6: int;

        $i7 := @parameter7: int;

        $i8 := @parameter8: int;

        $i9 := @parameter9: int;

        $z0 := @parameter10: boolean;

        $r1 := @parameter11: byte[];

        $z1 := @parameter12: boolean;

        $z2 := @parameter13: boolean;

        $r2 := @parameter14: org.spongycastle.crypto.Digest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N> = $i0;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int q> = $i1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df1> = $i2;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df2> = $i3;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df3> = $i4;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int db> = $i6;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dm0> = $i5;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int c> = $i7;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsR> = $i8;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsMask> = $i9;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean hashSeed> = $z0;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: byte[] oid> = $r1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean sparse> = $z1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean fastFp> = $z2;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int polyType> = 1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg> = $r2;

        specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: void init()>();

        return;
    }
    public void <init>(int, int, int, int, int, int, int, int, boolean, byte[], boolean, boolean, org.spongycastle.crypto.Digest)
    {
        org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2;
        byte[] $r1;
        org.spongycastle.crypto.Digest $r2;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        $i6 := @parameter6: int;

        $i7 := @parameter7: int;

        $z0 := @parameter8: boolean;

        $r1 := @parameter9: byte[];

        $z1 := @parameter10: boolean;

        $z2 := @parameter11: boolean;

        $r2 := @parameter12: org.spongycastle.crypto.Digest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N> = $i0;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int q> = $i1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df> = $i2;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int db> = $i4;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dm0> = $i3;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int c> = $i5;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsR> = $i6;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsMask> = $i7;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean hashSeed> = $z0;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: byte[] oid> = $r1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean sparse> = $z1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean fastFp> = $z2;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int polyType> = 0;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg> = $r2;

        specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: void init()>();

        return;
    }
    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters r0;
        java.io.InputStream $r1;
        java.io.DataInputStream r2;
        int $i0;
        boolean $z0;
        byte[] $r3;
        java.lang.String $r4, $r5;
        org.spongycastle.crypto.digests.SHA512Digest $r6;
        org.spongycastle.crypto.digests.SHA256Digest $r7;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = new java.io.DataInputStream;

        specialinvoke r2.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r1);

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int q> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df1> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df2> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df3> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int db> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dm0> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int c> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsR> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsMask> = $i0;

        $z0 = virtualinvoke r2.<java.io.DataInputStream: boolean readBoolean()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean hashSeed> = $z0;

        $r3 = newarray (byte)[3];

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: byte[] oid> = $r3;

        $r3 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: byte[] oid>;

        virtualinvoke r2.<java.io.DataInputStream: int read(byte[])>($r3);

        $z0 = virtualinvoke r2.<java.io.DataInputStream: boolean readBoolean()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean sparse> = $z0;

        $z0 = virtualinvoke r2.<java.io.DataInputStream: boolean readBoolean()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean fastFp> = $z0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int read()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int polyType> = $i0;

        $r4 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r5 = "SHA-512";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r6 = new org.spongycastle.crypto.digests.SHA512Digest;

        specialinvoke $r6.<org.spongycastle.crypto.digests.SHA512Digest: void <init>()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg> = $r6;

     label1:
        specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: void init()>();

        return;

     label2:
        $r5 = "SHA-256";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r7 = new org.spongycastle.crypto.digests.SHA256Digest;

        specialinvoke $r7.<org.spongycastle.crypto.digests.SHA256Digest: void <init>()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg> = $r7;

        goto label1;
    }
    private void init()
    {
        org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters r0;
        int $i0, $i1;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df>;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr> = $i0;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df1>;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr1> = $i0;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df2>;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr2> = $i0;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df3>;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr3> = $i0;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N>;

        $i0 = $i0 / 3;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dg> = $i0;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int llen> = 1;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N>;

        $i0 = $i0 * 3;

        $i0 = $i0 / 2;

        $i0 = $i0 / 8;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int llen>;

        $i0 = $i0 - $i1;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int db>;

        $i1 = $i1 / 8;

        $i0 = $i0 - $i1;

        $i0 = $i0 + -1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int maxMsgLenBytes> = $i0;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N>;

        $i0 = $i0 * 3;

        $i0 = $i0 / 2;

        $i0 = $i0 + 7;

        $i0 = $i0 / 8;

        $i0 = $i0 * 8;

        $i0 = $i0 + 1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int bufferLenBits> = $i0;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N>;

        $i0 = $i0 + -1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int bufferLenTrits> = $i0;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int db>;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int pkLen> = $i0;

        return;
    }
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters r0;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters;

        r0 = virtualinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters clone()>();

        return r0;
    }
    public org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters clone()
    {
        org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters r0, $r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        byte[] $r2;
        org.spongycastle.crypto.Digest $r3;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int polyType>;

        if $i0 != 0 goto label1;

        $r1 = new org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N>;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int q>;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df>;

        $i3 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dm0>;

        $i4 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int db>;

        $i5 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int c>;

        $i6 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsR>;

        $i7 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsMask>;

        $z0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean hashSeed>;

        $r2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: byte[] oid>;

        $z1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean sparse>;

        $z2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean fastFp>;

        $r3 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg>;

        specialinvoke $r1.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: void <init>(int,int,int,int,int,int,int,int,boolean,byte[],boolean,boolean,org.spongycastle.crypto.Digest)>($i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $z0, $r2, $z1, $z2, $r3);

        return $r1;

     label1:
        $r1 = new org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N>;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int q>;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df1>;

        $i3 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df2>;

        $i4 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df3>;

        $i5 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dm0>;

        $i6 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int db>;

        $i7 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int c>;

        $i8 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsR>;

        $i9 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsMask>;

        $z1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean hashSeed>;

        $r2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: byte[] oid>;

        $z2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean sparse>;

        $z0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean fastFp>;

        $r3 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg>;

        specialinvoke $r1.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: void <init>(int,int,int,int,int,int,int,int,int,int,boolean,byte[],boolean,boolean,org.spongycastle.crypto.Digest)>($i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $z1, $r2, $z2, $z0, $r3);

        return $r1;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters r0, r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        int $i0, $i1;
        boolean $z0, $z1;
        org.spongycastle.crypto.Digest $r5;
        java.lang.String $r6, $r7;
        byte[] $r8, $r9;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label01;

        return 1;

     label01:
        if $r1 != null goto label02;

        return 0;

     label02:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label03;

        return 0;

     label03:
        r4 = (org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters) $r1;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N>;

        if $i0 == $i1 goto label04;

        return 0;

     label04:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int bufferLenBits>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int bufferLenBits>;

        if $i0 == $i1 goto label05;

        return 0;

     label05:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int bufferLenTrits>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int bufferLenTrits>;

        if $i0 == $i1 goto label06;

        return 0;

     label06:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int c>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int c>;

        if $i0 == $i1 goto label07;

        return 0;

     label07:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int db>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int db>;

        if $i0 == $i1 goto label08;

        return 0;

     label08:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df>;

        if $i0 == $i1 goto label09;

        return 0;

     label09:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df1>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df1>;

        if $i0 == $i1 goto label10;

        return 0;

     label10:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df2>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df2>;

        if $i0 == $i1 goto label11;

        return 0;

     label11:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df3>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df3>;

        if $i0 == $i1 goto label12;

        return 0;

     label12:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dg>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dg>;

        if $i0 == $i1 goto label13;

        return 0;

     label13:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dm0>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dm0>;

        if $i0 == $i1 goto label14;

        return 0;

     label14:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr>;

        if $i0 == $i1 goto label15;

        return 0;

     label15:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr1>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr1>;

        if $i0 == $i1 goto label16;

        return 0;

     label16:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr2>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr2>;

        if $i0 == $i1 goto label17;

        return 0;

     label17:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr3>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr3>;

        if $i0 == $i1 goto label18;

        return 0;

     label18:
        $z0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean fastFp>;

        $z1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean fastFp>;

        if $z0 == $z1 goto label19;

        return 0;

     label19:
        $r5 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg>;

        if $r5 != null goto label20;

        $r5 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg>;

        if $r5 == null goto label21;

        return 0;

     label20:
        $r5 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg>;

        $r6 = interfaceinvoke $r5.<org.spongycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        $r5 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg>;

        $r7 = interfaceinvoke $r5.<org.spongycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label21;

        return 0;

     label21:
        $z0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean hashSeed>;

        $z1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean hashSeed>;

        if $z0 == $z1 goto label22;

        return 0;

     label22:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int llen>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int llen>;

        if $i0 == $i1 goto label23;

        return 0;

     label23:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int maxMsgLenBytes>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int maxMsgLenBytes>;

        if $i0 == $i1 goto label24;

        return 0;

     label24:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsMask>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsMask>;

        if $i0 == $i1 goto label25;

        return 0;

     label25:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsR>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsR>;

        if $i0 == $i1 goto label26;

        return 0;

     label26:
        $r8 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: byte[] oid>;

        $r9 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: byte[] oid>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r8, $r9);

        if $z0 != 0 goto label27;

        return 0;

     label27:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int pkLen>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int pkLen>;

        if $i0 == $i1 goto label28;

        return 0;

     label28:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int polyType>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int polyType>;

        if $i0 == $i1 goto label29;

        return 0;

     label29:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int q>;

        $i1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int q>;

        if $i0 == $i1 goto label30;

        return 0;

     label30:
        $z0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean sparse>;

        $z1 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean sparse>;

        if $z0 == $z1 goto label31;

        return 0;

     label31:
        return 1;
    }
    public int getMaxMessageLength()
    {
        org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters;

        i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int maxMsgLenBytes>;

        return i0;
    }
    public int hashCode()
    {
        org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters r0;
        short $s0, $s3;
        int $i1, $i2;
        boolean $z0;
        org.spongycastle.crypto.Digest $r1;
        byte[] $r2;
        java.lang.String $r3;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters;

        $s0 = 1231;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N>;

        $i1 = $i1 + 31;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int bufferLenBits>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int bufferLenTrits>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int c>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int db>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df1>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df2>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df3>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dg>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dm0>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr1>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr2>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dr3>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $z0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean fastFp>;

        if $z0 == 0 goto label5;

        $s3 = 1231;

     label1:
        $i1 = $i1 + $s3;

        $i1 = $i1 * 31;

        $r1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg>;

        if $r1 != null goto label6;

        $i2 = 0;

     label2:
        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $z0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean hashSeed>;

        if $z0 == 0 goto label7;

        $s3 = 1231;

     label3:
        $i1 = $i1 + $s3;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int llen>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int maxMsgLenBytes>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsMask>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsR>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: byte[] oid>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r2);

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int pkLen>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int polyType>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int q>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $z0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean sparse>;

        if $z0 == 0 goto label8;

     label4:
        $i1 = $i1 + $s0;

        return $i1;

     label5:
        $s3 = 1237;

        goto label1;

     label6:
        $r1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg>;

        $r3 = interfaceinvoke $r1.<org.spongycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        $i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        goto label2;

     label7:
        $s3 = 1237;

        goto label3;

     label8:
        $s0 = 1237;

        goto label4;
    }
    public java.lang.String toString()
    {
        org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters r0;
        java.lang.StringBuilder r1, $r2;
        int $i0;
        java.lang.String $r3;
        boolean $z0;
        org.spongycastle.crypto.Digest $r4;
        byte[] $r5;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters;

        r1 = new java.lang.StringBuilder;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EncryptionParameters(N=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" q=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int q>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int polyType>;

        if $i0 != 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" polyType=SIMPLE df=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dm0=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dm0>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" db=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int db>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" c=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int c>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" minCallsR=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsR>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" minCallsMask=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsMask>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hashSeed=");

        $z0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean hashSeed>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hashAlg=");

        $r4 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" oid=");

        $r5 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: byte[] oid>;

        $r3 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r5);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sparse=");

        $z0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean sparse>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" polyType=PRODUCT df1=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df1>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" df2=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df2>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" df3=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df3>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label1;
    }
    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters r0;
        java.io.OutputStream $r1;
        java.io.DataOutputStream r2;
        java.lang.String $r3;
        int $i0;
        boolean $z0;
        byte[] $r4;
        org.spongycastle.crypto.Digest $r5;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters;

        $r1 := @parameter0: java.io.OutputStream;

        r2 = new java.io.DataOutputStream;

        specialinvoke r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r1);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int N>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int q>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df1>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df2>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int df3>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int db>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int dm0>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int c>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsR>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int minCallsMask>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $z0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean hashSeed>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeBoolean(boolean)>($z0);

        $r4 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: byte[] oid>;

        virtualinvoke r2.<java.io.DataOutputStream: void write(byte[])>($r4);

        $z0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean sparse>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeBoolean(boolean)>($z0);

        $z0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: boolean fastFp>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeBoolean(boolean)>($z0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: int polyType>;

        virtualinvoke r2.<java.io.DataOutputStream: void write(int)>($i0);

        $r5 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters: org.spongycastle.crypto.Digest hashAlg>;

        $r3 = interfaceinvoke $r5.<org.spongycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r3);

        return;
    }
