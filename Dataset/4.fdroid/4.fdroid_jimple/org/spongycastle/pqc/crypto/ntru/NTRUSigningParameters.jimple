org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters extends java.lang.Object implements java.lang.Cloneable
public int B
public int N
double beta
public double betaSq
int bitsF
public int d
public int d1
public int d2
public int d3
public org.spongycastle.crypto.Digest hashAlg
double normBound
public double normBoundSq
public int q
public int signFailTolerance
    public void <init>(int, int, int, int, double, double, org.spongycastle.crypto.Digest)
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters r0;
        int $i0, $i1, $i2, $i3;
        double $d0, $d1;
        org.spongycastle.crypto.Digest $r1;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $d0 := @parameter4: double;

        $d1 := @parameter5: double;

        $r1 := @parameter6: org.spongycastle.crypto.Digest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int signFailTolerance> = 100;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int bitsF> = 6;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int N> = $i0;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int q> = $i1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d> = $i2;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int B> = $i3;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double beta> = $d0;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBound> = $d1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.crypto.Digest hashAlg> = $r1;

        specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: void init()>();

        return;
    }
    public void <init>(int, int, int, int, int, int, double, double, double, org.spongycastle.crypto.Digest)
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        double $d0, $d1, $d2;
        org.spongycastle.crypto.Digest $r1;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        $d0 := @parameter6: double;

        $d1 := @parameter7: double;

        $d2 := @parameter8: double;

        $r1 := @parameter9: org.spongycastle.crypto.Digest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int signFailTolerance> = 100;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int bitsF> = 6;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int N> = $i0;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int q> = $i1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d1> = $i2;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d2> = $i3;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d3> = $i4;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int B> = $i5;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double beta> = $d0;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBound> = $d1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.crypto.Digest hashAlg> = $r1;

        specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: void init()>();

        return;
    }
    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters r0;
        java.io.InputStream $r1;
        java.io.DataInputStream r2;
        int $i0;
        double $d0;
        java.lang.String $r3, $r4;
        boolean $z0;
        org.spongycastle.crypto.digests.SHA512Digest $r5;
        org.spongycastle.crypto.digests.SHA256Digest $r6;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int signFailTolerance> = 100;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int bitsF> = 6;

        r2 = new java.io.DataInputStream;

        specialinvoke r2.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r1);

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int N> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int q> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d1> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d2> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d3> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int B> = $i0;

        $d0 = virtualinvoke r2.<java.io.DataInputStream: double readDouble()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double beta> = $d0;

        $d0 = virtualinvoke r2.<java.io.DataInputStream: double readDouble()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBound> = $d0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int signFailTolerance> = $i0;

        $i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int bitsF> = $i0;

        $r3 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r4 = "SHA-512";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r5 = new org.spongycastle.crypto.digests.SHA512Digest;

        specialinvoke $r5.<org.spongycastle.crypto.digests.SHA512Digest: void <init>()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.crypto.Digest hashAlg> = $r5;

     label1:
        specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: void init()>();

        return;

     label2:
        $r4 = "SHA-256";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r6 = new org.spongycastle.crypto.digests.SHA256Digest;

        specialinvoke $r6.<org.spongycastle.crypto.digests.SHA256Digest: void <init>()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.crypto.Digest hashAlg> = $r6;

        goto label1;
    }
    private void init()
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters r0;
        double $d0, $d1;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters;

        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double beta>;

        $d1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double beta>;

        $d0 = $d0 * $d1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double betaSq> = $d0;

        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBound>;

        $d1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBound>;

        $d0 = $d0 * $d1;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBoundSq> = $d0;

        return;
    }
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters r0;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters;

        r0 = virtualinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters clone()>();

        return r0;
    }
    public org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters clone()
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters r0, $r1;
        int $i0, $i1, $i2, $i3;
        double $d0, $d1;
        org.spongycastle.crypto.Digest $r2;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters;

        $r1 = new org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int N>;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int q>;

        $i2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d>;

        $i3 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int B>;

        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double beta>;

        $d1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBound>;

        $r2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.crypto.Digest hashAlg>;

        specialinvoke $r1.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: void <init>(int,int,int,int,double,double,org.spongycastle.crypto.Digest)>($i0, $i1, $i2, $i3, $d0, $d1, $r2);

        return $r1;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;
        double $d0;
        long $l2, $l3;
        byte $b4;
        org.spongycastle.crypto.Digest $r3;
        java.lang.String $r4, $r5;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label01;

        return 1;

     label01:
        if $r1 != null goto label02;

        return 0;

     label02:
        $z0 = $r1 instanceof org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters;

        if $z0 != 0 goto label03;

        return 0;

     label03:
        r2 = (org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters) $r1;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int B>;

        $i1 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int B>;

        if $i0 == $i1 goto label04;

        return 0;

     label04:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int N>;

        $i1 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int N>;

        if $i0 == $i1 goto label05;

        return 0;

     label05:
        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double beta>;

        $l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d0 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double beta>;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $b4 = $l2 cmp $l3;

        if $b4 == 0 goto label06;

        return 0;

     label06:
        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double betaSq>;

        $l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d0 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double betaSq>;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $b4 = $l2 cmp $l3;

        if $b4 == 0 goto label07;

        return 0;

     label07:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int bitsF>;

        $i1 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int bitsF>;

        if $i0 == $i1 goto label08;

        return 0;

     label08:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d>;

        $i1 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d>;

        if $i0 == $i1 goto label09;

        return 0;

     label09:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d1>;

        $i1 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d1>;

        if $i0 == $i1 goto label10;

        return 0;

     label10:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d2>;

        $i1 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d2>;

        if $i0 == $i1 goto label11;

        return 0;

     label11:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d3>;

        $i1 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d3>;

        if $i0 == $i1 goto label12;

        return 0;

     label12:
        $r3 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.crypto.Digest hashAlg>;

        if $r3 != null goto label13;

        $r3 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.crypto.Digest hashAlg>;

        if $r3 == null goto label14;

        return 0;

     label13:
        $r3 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.crypto.Digest hashAlg>;

        $r4 = interfaceinvoke $r3.<org.spongycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        $r3 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.crypto.Digest hashAlg>;

        $r5 = interfaceinvoke $r3.<org.spongycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label14;

        return 0;

     label14:
        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBound>;

        $l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d0 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBound>;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $b4 = $l2 cmp $l3;

        if $b4 == 0 goto label15;

        return 0;

     label15:
        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBoundSq>;

        $l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d0 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBoundSq>;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $b4 = $l2 cmp $l3;

        if $b4 == 0 goto label16;

        return 0;

     label16:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int q>;

        $i1 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int q>;

        if $i0 == $i1 goto label17;

        return 0;

     label17:
        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int signFailTolerance>;

        $i1 = r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int signFailTolerance>;

        if $i0 == $i1 goto label18;

        return 0;

     label18:
        return 1;
    }
    public int hashCode()
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters r0;
        int $i0, $i1;
        double $d0;
        long $l2, $l3;
        org.spongycastle.crypto.Digest $r1;
        java.lang.String $r2;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters;

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int B>;

        $i0 = $i0 + 31;

        $i0 = $i0 * 31;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int N>;

        $i0 = $i0 + $i1;

        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double beta>;

        $l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i0 = $i0 * 31;

        $l3 = $l2 >>> 32;

        $l2 = $l3 ^ $l2;

        $i1 = (int) $l2;

        $i0 = $i0 + $i1;

        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double betaSq>;

        $l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i0 = $i0 * 31;

        $l3 = $l2 >>> 32;

        $l2 = $l3 ^ $l2;

        $i1 = (int) $l2;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int bitsF>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d1>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d2>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d3>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $r1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.crypto.Digest hashAlg>;

        if $r1 != null goto label2;

        $i1 = 0;

     label1:
        $i0 = $i0 + $i1;

        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBound>;

        $l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i0 = $i0 * 31;

        $l3 = $l2 >>> 32;

        $l2 = $l3 ^ $l2;

        $i1 = (int) $l2;

        $i0 = $i0 + $i1;

        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBoundSq>;

        $l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i0 = $i0 * 31;

        $l3 = $l2 >>> 32;

        $l2 = $l3 ^ $l2;

        $i1 = (int) $l2;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int q>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $i1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int signFailTolerance>;

        $i0 = $i0 + $i1;

        return $i0;

     label2:
        $r1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.crypto.Digest hashAlg>;

        $r2 = interfaceinvoke $r1.<org.spongycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        goto label1;
    }
    public java.lang.String toString()
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters r0;
        java.text.DecimalFormat r1;
        java.lang.StringBuilder r2, $r3;
        int $i0;
        java.lang.String $r4;
        double $d0;
        org.spongycastle.crypto.Digest $r5;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters;

        r1 = new java.text.DecimalFormat;

        specialinvoke r1.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00");

        r2 = new java.lang.StringBuilder;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SignatureParameters(N=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int N>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" q=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int q>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" B=");

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int B>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" beta=");

        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double beta>;

        $r4 = virtualinvoke r1.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" normBound=");

        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBound>;

        $r4 = virtualinvoke r1.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hashAlg=");

        $r5 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.crypto.Digest hashAlg>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters r0;
        java.io.OutputStream $r1;
        java.io.DataOutputStream r2;
        java.lang.String $r3;
        int $i0;
        double $d0;
        org.spongycastle.crypto.Digest $r4;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters;

        $r1 := @parameter0: java.io.OutputStream;

        r2 = new java.io.DataOutputStream;

        specialinvoke r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r1);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int N>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int q>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d1>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d2>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int d3>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int B>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double beta>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeDouble(double)>($d0);

        $d0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: double normBound>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeDouble(double)>($d0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int signFailTolerance>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $i0 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: int bitsF>;

        virtualinvoke r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $r4 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters: org.spongycastle.crypto.Digest hashAlg>;

        $r3 = interfaceinvoke $r4.<org.spongycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        virtualinvoke r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r3);

        return;
    }
