org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters extends org.spongycastle.crypto.params.AsymmetricKeyParameter
private java.util.List bases
private org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters publicKey
    public void <init>(java.io.InputStream, org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters) throws java.io.IOException
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters r0;
        java.io.InputStream $r1;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters $r2;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis $r3;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters $r4;
        java.util.ArrayList $r5;
        int i0, $i1;
        boolean $z0;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters $r6;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters;

        specialinvoke r0.<org.spongycastle.crypto.params.AsymmetricKeyParameter: void <init>(boolean)>(1);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases> = $r5;

        i0 = 0;

     label1:
        $i1 = $r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters: int B>;

        if i0 > $i1 goto label4;

        $r3 = new org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis;

        if i0 == 0 goto label3;

        $z0 = 1;

     label2:
        specialinvoke $r3.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis: void <init>(java.io.InputStream,org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters,boolean)>($r1, $r2, $z0);

        specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: void add(org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis)>($r3);

        i0 = i0 + 1;

        goto label1;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        $r6 = new org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters;

        $r4 = virtualinvoke $r2.<org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters: org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters getSigningParameters()>();

        specialinvoke $r6.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters: void <init>(java.io.InputStream,org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters)>($r1, $r4);

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters publicKey> = $r6;

        return;
    }
    public void <init>(java.util.List, org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters)
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters r0;
        java.util.List r1;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters;

        specialinvoke r0.<org.spongycastle.crypto.params.AsymmetricKeyParameter: void <init>(boolean)>(1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases> = $r3;

        r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters publicKey> = $r2;

        return;
    }
    public void <init>(byte[], org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters) throws java.io.IOException
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters r0;
        byte[] $r1;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters $r2;
        java.io.ByteArrayInputStream $r3;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters;

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: void <init>(java.io.InputStream,org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters)>($r3, $r2);

        return;
    }
    private void add(org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis)
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters r0;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis $r1;
        java.util.List $r2;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters;

        $r1 := @parameter0: org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis;

        $r2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters r0, r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        java.util.List $r5;
        boolean $z0, $z1;
        int $i0, $i1;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis r6, r7;
        org.spongycastle.pqc.math.ntru.polynomial.Polynomial $r8, $r9;
        org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial $r10, $r11;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters $r12, $r13;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label01;

        return 1;

     label01:
        if $r1 == null goto label10;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 != $r3 goto label10;

        r4 = (org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters) $r1;

        $r5 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        if $r5 != null goto label04;

        $z0 = 1;

     label02:
        $r5 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        if $r5 != null goto label05;

        $z1 = 1;

     label03:
        if $z0 != $z1 goto label10;

        $r5 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        if $r5 != null goto label06;

        return 1;

     label04:
        $z0 = 0;

        goto label02;

     label05:
        $z1 = 0;

        goto label03;

     label06:
        $r5 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r5 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 != $i1 goto label10;

        $i0 = 0;

     label07:
        $r5 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 >= $i1 goto label09;

        $r5 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        $r1 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        r6 = (org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis) $r1;

        $r5 = r4.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        $r1 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        r7 = (org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis) $r1;

        $r8 = r6.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis: org.spongycastle.pqc.math.ntru.polynomial.Polynomial f>;

        $r9 = r7.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis: org.spongycastle.pqc.math.ntru.polynomial.Polynomial f>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label10;

        $r8 = r6.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis: org.spongycastle.pqc.math.ntru.polynomial.Polynomial fPrime>;

        $r9 = r7.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis: org.spongycastle.pqc.math.ntru.polynomial.Polynomial fPrime>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label10;

        if $i0 == 0 goto label08;

        $r10 = r6.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial h>;

        $r11 = r7.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial h>;

        $z0 = virtualinvoke $r10.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label10;

     label08:
        $r12 = r6.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis: org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters params>;

        $r13 = r7.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis: org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters params>;

        $z0 = virtualinvoke $r12.<org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label10;

        $i0 = $i0 + 1;

        goto label07;

     label09:
        return 1;

     label10:
        return 0;
    }
    public org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis getBasis(int)
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters r0;
        int $i0;
        java.lang.Object $r1;
        java.util.List $r2;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis $r3;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters;

        $i0 := @parameter0: int;

        $r2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis) $r1;

        return $r3;
    }
    public byte[] getEncoded() throws java.io.IOException
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters r0;
        java.io.ByteArrayOutputStream r1;
        int i0, $i1;
        java.util.List $r2;
        java.lang.Object $r3;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis $r4;
        boolean $z0;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters $r5;
        byte[] $r6;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters;

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        i0 = 0;

     label1:
        $r2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        $r2 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis) $r3;

        if i0 == 0 goto label3;

        $z0 = 1;

     label2:
        virtualinvoke $r4.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis: void encode(java.io.OutputStream,boolean)>(r1, $z0);

        i0 = i0 + 1;

        goto label1;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        $r5 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters publicKey>;

        $r6 = virtualinvoke $r5.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters: byte[] getEncoded()>();

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[])>($r6);

        $r6 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r6;
    }
    public org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters getPublicKey()
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters r0;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters r1;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters;

        r1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: org.spongycastle.pqc.crypto.ntru.NTRUSigningPublicKeyParameters publicKey>;

        return r1;
    }
    public int hashCode()
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters r0;
        int i0, $i1;
        java.util.List $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis r4;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters;

        i0 = 1 * 31;

        $r1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        if $r1 != null goto label1;

        return i0;

     label1:
        $r1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        i0 = interfaceinvoke $r1.<java.util.List: int hashCode()>();

        i0 = i0 + 31;

        $r1 = r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: java.util.List bases>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis) $r3;

        $i1 = virtualinvoke r4.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis: int hashCode()>();

        i0 = i0 + $i1;

        goto label2;

     label3:
        return i0;
    }
    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters r0;
        java.io.OutputStream $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = virtualinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters: byte[] getEncoded()>();

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r2);

        return;
    }
