org.spongycastle.pqc.crypto.mceliece.McElieceParameters extends java.lang.Object implements org.spongycastle.crypto.CipherParameters
public static final int DEFAULT_M
public static final int DEFAULT_T
private int fieldPoly
private int m
private int n
private int t
    public void <init>()
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceParameters r0;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceParameters;

        specialinvoke r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: void <init>(int,int)>(11, 50);

        return;
    }
    public void <init>(int) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceParameters r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceParameters;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 >= 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("key size must be positive");

        throw $r1;

     label1:
        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int m> = 0;

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int n> = 1;

     label2:
        $i1 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int n>;

        if $i1 >= $i0 goto label3;

        $i1 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int n>;

        $i1 = $i1 << 1;

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int n> = $i1;

        $i1 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int m>;

        $i1 = $i1 + 1;

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int m> = $i1;

        goto label2;

     label3:
        $i0 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int n>;

        $i0 = $i0 >>> 1;

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int t> = $i0;

        $i0 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int t>;

        $i1 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int m>;

        $i0 = $i0 / $i1;

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int t> = $i0;

        $i0 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int m>;

        $i0 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2: int getIrreduciblePolynomial(int)>($i0);

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int fieldPoly> = $i0;

        return;
    }
    public void <init>(int, int) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceParameters r0;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceParameters;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 >= 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("m must be positive");

        throw $r1;

     label1:
        if $i0 <= 32 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("m is too large");

        throw $r1;

     label2:
        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int m> = $i0;

        $i2 = 1 << $i0;

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int n> = $i2;

        if $i1 >= 0 goto label3;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("t must be positive");

        throw $r1;

     label3:
        $i2 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int n>;

        if $i1 <= $i2 goto label4;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("t must be less than n = 2^m");

        throw $r1;

     label4:
        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int t> = $i1;

        $i0 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2: int getIrreduciblePolynomial(int)>($i0);

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int fieldPoly> = $i0;

        return;
    }
    public void <init>(int, int, int) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceParameters r0;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceParameters;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int m> = $i0;

        if $i0 >= 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("m must be positive");

        throw $r1;

     label1:
        if $i0 <= 32 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(" m is too large");

        throw $r1;

     label2:
        $i3 = 1 << $i0;

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int n> = $i3;

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int t> = $i1;

        if $i1 >= 0 goto label3;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("t must be positive");

        throw $r1;

     label3:
        $i3 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int n>;

        if $i1 <= $i3 goto label4;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("t must be less than n = 2^m");

        throw $r1;

     label4:
        $i1 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2: int degree(int)>($i2);

        if $i1 != $i0 goto label5;

        $z0 = staticinvoke <org.spongycastle.pqc.math.linearalgebra.PolynomialRingGF2: boolean isIrreducible(int)>($i2);

        if $z0 == 0 goto label5;

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int fieldPoly> = $i2;

        return;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("polynomial is not a field polynomial for GF(2^m)");

        throw $r1;
    }
    public int getFieldPoly()
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceParameters r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceParameters;

        i0 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int fieldPoly>;

        return i0;
    }
    public int getM()
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceParameters r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceParameters;

        i0 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int m>;

        return i0;
    }
    public int getN()
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceParameters r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceParameters;

        i0 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int n>;

        return i0;
    }
    public int getT()
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceParameters r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceParameters;

        i0 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: int t>;

        return i0;
    }
