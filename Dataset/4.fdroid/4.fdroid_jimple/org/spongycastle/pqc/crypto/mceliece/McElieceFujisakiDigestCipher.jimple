org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher extends java.lang.Object
private boolean forEncrypting
private final org.spongycastle.pqc.crypto.MessageEncryptor mcElieceCCA2Cipher
private final org.spongycastle.crypto.Digest messDigest
    public void <init>(org.spongycastle.pqc.crypto.MessageEncryptor, org.spongycastle.crypto.Digest)
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher r0;
        org.spongycastle.pqc.crypto.MessageEncryptor $r1;
        org.spongycastle.crypto.Digest $r2;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher;

        $r1 := @parameter0: org.spongycastle.pqc.crypto.MessageEncryptor;

        $r2 := @parameter1: org.spongycastle.crypto.Digest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: org.spongycastle.pqc.crypto.MessageEncryptor mcElieceCCA2Cipher> = $r1;

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: org.spongycastle.crypto.Digest messDigest> = $r2;

        return;
    }
    public void init(boolean, org.spongycastle.crypto.CipherParameters)
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher r0;
        boolean $z0, $z1;
        org.spongycastle.crypto.CipherParameters $r1, $r3;
        org.spongycastle.crypto.params.ParametersWithRandom $r2;
        org.spongycastle.crypto.params.AsymmetricKeyParameter r4;
        java.lang.IllegalArgumentException $r5;
        org.spongycastle.pqc.crypto.MessageEncryptor $r6;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.spongycastle.crypto.CipherParameters;

        r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: boolean forEncrypting> = $z0;

        $z1 = $r1 instanceof org.spongycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label2;

        $r2 = (org.spongycastle.crypto.params.ParametersWithRandom) $r1;

        $r3 = virtualinvoke $r2.<org.spongycastle.crypto.params.ParametersWithRandom: org.spongycastle.crypto.CipherParameters getParameters()>();

        r4 = (org.spongycastle.crypto.params.AsymmetricKeyParameter) $r3;

     label1:
        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r4.<org.spongycastle.crypto.params.AsymmetricKeyParameter: boolean isPrivate()>();

        if $z1 == 0 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Encrypting Requires Public Key.");

        throw $r5;

     label2:
        r4 = (org.spongycastle.crypto.params.AsymmetricKeyParameter) $r1;

        goto label1;

     label3:
        if $z0 != 0 goto label4;

        $z1 = virtualinvoke r4.<org.spongycastle.crypto.params.AsymmetricKeyParameter: boolean isPrivate()>();

        if $z1 != 0 goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Decrypting Requires Private Key.");

        throw $r5;

     label4:
        virtualinvoke r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: void reset()>();

        $r6 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: org.spongycastle.pqc.crypto.MessageEncryptor mcElieceCCA2Cipher>;

        interfaceinvoke $r6.<org.spongycastle.pqc.crypto.MessageEncryptor: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1);

        return;
    }
    public byte[] messageDecrypt(byte[])
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher r0;
        byte[] $r1;
        java.lang.Exception r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        org.spongycastle.pqc.crypto.MessageEncryptor $r4;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher;

        $r1 := @parameter0: byte[];

        $z0 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: boolean forEncrypting>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("McElieceFujisakiDigestCipher not initialised for decrypting.");

        throw $r3;

     label1:
        $r4 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: org.spongycastle.pqc.crypto.MessageEncryptor mcElieceCCA2Cipher>;

        $r1 = interfaceinvoke $r4.<org.spongycastle.pqc.crypto.MessageEncryptor: byte[] messageDecrypt(byte[])>($r1);

     label2:
        return $r1;

     label3:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public byte[] messageEncrypt()
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher r0;
        java.lang.Exception r1;
        byte[] r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        org.spongycastle.crypto.Digest $r4;
        int $i0;
        org.spongycastle.pqc.crypto.MessageEncryptor $r5;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher;

        $z0 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: boolean forEncrypting>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("McElieceFujisakiDigestCipher not initialised for encrypting.");

        throw $r3;

     label1:
        $r4 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: org.spongycastle.crypto.Digest messDigest>;

        $i0 = interfaceinvoke $r4.<org.spongycastle.crypto.Digest: int getDigestSize()>();

        r2 = newarray (byte)[$i0];

        $r4 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: org.spongycastle.crypto.Digest messDigest>;

        interfaceinvoke $r4.<org.spongycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

     label2:
        $r5 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: org.spongycastle.pqc.crypto.MessageEncryptor mcElieceCCA2Cipher>;

        r2 = interfaceinvoke $r5.<org.spongycastle.pqc.crypto.MessageEncryptor: byte[] messageEncrypt(byte[])>(r2);

     label3:
        return r2;

     label4:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label2 to label3 with label4;
    }
    public void reset()
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher r0;
        org.spongycastle.crypto.Digest $r1;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher;

        $r1 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: org.spongycastle.crypto.Digest messDigest>;

        interfaceinvoke $r1.<org.spongycastle.crypto.Digest: void reset()>();

        return;
    }
    public void update(byte)
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher r0;
        byte $b0;
        org.spongycastle.crypto.Digest $r1;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher;

        $b0 := @parameter0: byte;

        $r1 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: org.spongycastle.crypto.Digest messDigest>;

        interfaceinvoke $r1.<org.spongycastle.crypto.Digest: void update(byte)>($b0);

        return;
    }
    public void update(byte[], int, int)
    {
        org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher r0;
        byte[] $r1;
        int $i0, $i1;
        org.spongycastle.crypto.Digest $r2;

        r0 := @this: org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<org.spongycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher: org.spongycastle.crypto.Digest messDigest>;

        interfaceinvoke $r2.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>($r1, $i0, $i1);

        return;
    }
