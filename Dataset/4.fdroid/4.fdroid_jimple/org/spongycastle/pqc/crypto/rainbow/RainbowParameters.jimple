org.spongycastle.pqc.crypto.rainbow.RainbowParameters extends java.lang.Object implements org.spongycastle.crypto.CipherParameters
private final int[] DEFAULT_VI
private int[] vi
    public void <init>()
    {
        org.spongycastle.pqc.crypto.rainbow.RainbowParameters r0;
        int[] $r1;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.RainbowParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[5];

        $r1[0] = 6;

        $r1[1] = 12;

        $r1[2] = 17;

        $r1[3] = 22;

        $r1[4] = 33;

        r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] DEFAULT_VI> = $r1;

        $r1 = r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] DEFAULT_VI>;

        r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] vi> = $r1;

        return;
    }
    public void <init>(int[])
    {
        org.spongycastle.pqc.crypto.rainbow.RainbowParameters r0;
        int[] $r1, $r3;
        java.lang.Exception r2;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.RainbowParameters;

        $r1 := @parameter0: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (int)[5];

        $r3[0] = 6;

        $r3[1] = 12;

        $r3[2] = 17;

        $r3[3] = 22;

        $r3[4] = 33;

        r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] DEFAULT_VI> = $r3;

        r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] vi> = $r1;

     label1:
        specialinvoke r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: void checkParams()>();

     label2:
        return;

     label3:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private void checkParams() throws java.lang.Exception
    {
        org.spongycastle.pqc.crypto.rainbow.RainbowParameters r0;
        int $i0, $i1, $i2;
        int[] $r1;
        java.lang.Exception $r2;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.RainbowParameters;

        $r1 = r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] vi>;

        if $r1 != null goto label1;

        $r2 = new java.lang.Exception;

        specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>("no layers defined.");

        throw $r2;

     label1:
        $r1 = r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] vi>;

        $i1 = lengthof $r1;

        if $i1 <= 1 goto label4;

        $i1 = 0;

     label2:
        $r1 = r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] vi>;

        $i2 = lengthof $r1;

        $i2 = $i2 + -1;

        if $i1 >= $i2 goto label5;

        $r1 = r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] vi>;

        $i2 = $r1[$i1];

        $r1 = r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] vi>;

        $i0 = $i1 + 1;

        $i0 = $r1[$i0];

        if $i2 < $i0 goto label3;

        $r2 = new java.lang.Exception;

        specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>("v[i] has to be smaller than v[i+1]");

        throw $r2;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r2 = new java.lang.Exception;

        specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>("Rainbow needs at least 1 layer, such that v1 < v2.");

        throw $r2;

     label5:
        return;
    }
    public int getDocLength()
    {
        org.spongycastle.pqc.crypto.rainbow.RainbowParameters r0;
        int[] $r1, $r2;
        int $i0, $i1;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.RainbowParameters;

        $r1 = r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] vi>;

        $r2 = r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] vi>;

        $i0 = lengthof $r2;

        $i0 = $i0 + -1;

        $i0 = $r1[$i0];

        $r1 = r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] vi>;

        $i1 = $r1[0];

        $i0 = $i0 - $i1;

        return $i0;
    }
    public int getNumOfLayers()
    {
        org.spongycastle.pqc.crypto.rainbow.RainbowParameters r0;
        int[] $r1;
        int $i0;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.RainbowParameters;

        $r1 = r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] vi>;

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        return $i0;
    }
    public int[] getVi()
    {
        org.spongycastle.pqc.crypto.rainbow.RainbowParameters r0;
        int[] r1;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.RainbowParameters;

        r1 = r0.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: int[] vi>;

        return r1;
    }
