org.spongycastle.pqc.crypto.rainbow.Layer extends java.lang.Object
private short[][][] coeff_alpha
private short[][][] coeff_beta
private short[] coeff_eta
private short[][] coeff_gamma
private int oi
private int vi
private int viNext
    public void <init>(byte, byte, short[][][], short[][][], short[][], short[])
    {
        org.spongycastle.pqc.crypto.rainbow.Layer r0;
        byte $b0, $b1;
        short[][][] $r1, $r2;
        short[][] $r3;
        short[] $r4;
        int $i2, $i3;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.Layer;

        $b0 := @parameter0: byte;

        $b1 := @parameter1: byte;

        $r1 := @parameter2: short[][][];

        $r2 := @parameter3: short[][][];

        $r3 := @parameter4: short[][];

        $r4 := @parameter5: short[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = $b0 & 255;

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi> = $i2;

        $i2 = $b1 & 255;

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int viNext> = $i2;

        $i3 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int viNext>;

        $i2 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        $i2 = $i3 - $i2;

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi> = $i2;

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_alpha> = $r1;

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_beta> = $r2;

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][] coeff_gamma> = $r3;

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[] coeff_eta> = $r4;

        return;
    }
    public void <init>(int, int, java.security.SecureRandom)
    {
        org.spongycastle.pqc.crypto.rainbow.Layer r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.security.SecureRandom $r1;
        int[] $r2;
        java.lang.Class $r3;
        java.lang.Object $r4;
        short[][][] $r5;
        short[][] $r6;
        short[] $r7;
        short $s5;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.Layer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.security.SecureRandom;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi> = $i0;

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int viNext> = $i1;

        $i0 = $i1 - $i0;

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi> = $i0;

        $i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        $i2 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        $r2 = newarray (int)[3];

        $r2[0] = $i0;

        $r2[1] = $i1;

        $r2[2] = $i2;

        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        $r5 = (short[][][]) $r4;

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_alpha> = $r5;

        $i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        $i2 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        $r2 = newarray (int)[3];

        $r2[0] = $i0;

        $r2[1] = $i1;

        $r2[2] = $i2;

        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        $r5 = (short[][][]) $r4;

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_beta> = $r5;

        $i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int viNext>;

        $r2 = newarray (int)[2];

        $r2[0] = $i0;

        $r2[1] = $i1;

        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        $r6 = (short[][]) $r4;

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][] coeff_gamma> = $r6;

        $i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        $r7 = newarray (short)[$i0];

        r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[] coeff_eta> = $r7;

        $i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label06;

        $i2 = 0;

     label02:
        $i3 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        if $i2 >= $i3 goto label05;

        $i3 = 0;

     label03:
        $i4 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        if $i3 >= $i4 goto label04;

        $r5 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_alpha>;

        $r6 = $r5[$i1];

        $r7 = $r6[$i2];

        $i4 = virtualinvoke $r1.<java.security.SecureRandom: int nextInt()>();

        $i4 = $i4 & 255;

        $s5 = (short) $i4;

        $r7[$i3] = $s5;

        $i3 = $i3 + 1;

        goto label03;

     label04:
        $i2 = $i2 + 1;

        goto label02;

     label05:
        $i1 = $i1 + 1;

        goto label01;

     label06:
        $i1 = 0;

     label07:
        if $i1 >= $i0 goto label12;

        $i2 = 0;

     label08:
        $i3 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        if $i2 >= $i3 goto label11;

        $i3 = 0;

     label09:
        $i4 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        if $i3 >= $i4 goto label10;

        $r5 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_beta>;

        $r6 = $r5[$i1];

        $r7 = $r6[$i2];

        $i4 = virtualinvoke $r1.<java.security.SecureRandom: int nextInt()>();

        $i4 = $i4 & 255;

        $s5 = (short) $i4;

        $r7[$i3] = $s5;

        $i3 = $i3 + 1;

        goto label09;

     label10:
        $i2 = $i2 + 1;

        goto label08;

     label11:
        $i1 = $i1 + 1;

        goto label07;

     label12:
        $i1 = 0;

     label13:
        if $i1 >= $i0 goto label16;

        $i2 = 0;

     label14:
        $i3 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int viNext>;

        if $i2 >= $i3 goto label15;

        $r6 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][] coeff_gamma>;

        $r7 = $r6[$i1];

        $i3 = virtualinvoke $r1.<java.security.SecureRandom: int nextInt()>();

        $i3 = $i3 & 255;

        $s5 = (short) $i3;

        $r7[$i2] = $s5;

        $i2 = $i2 + 1;

        goto label14;

     label15:
        $i1 = $i1 + 1;

        goto label13;

     label16:
        $i1 = 0;

     label17:
        if $i1 >= $i0 goto label18;

        $r7 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[] coeff_eta>;

        $i2 = virtualinvoke $r1.<java.security.SecureRandom: int nextInt()>();

        $i2 = $i2 & 255;

        $s5 = (short) $i2;

        $r7[$i1] = $s5;

        $i1 = $i1 + 1;

        goto label17;

     label18:
        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.pqc.crypto.rainbow.Layer r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;
        short[][][] $r3, $r4;
        short[][] $r5, $r6;
        short[] $r7, $r8;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.Layer;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label2;

        $z0 = $r1 instanceof org.spongycastle.pqc.crypto.rainbow.Layer;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.pqc.crypto.rainbow.Layer) $r1;

        $i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        $i1 = virtualinvoke r2.<org.spongycastle.pqc.crypto.rainbow.Layer: int getVi()>();

        if $i0 != $i1 goto label2;

        $i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int viNext>;

        $i1 = virtualinvoke r2.<org.spongycastle.pqc.crypto.rainbow.Layer: int getViNext()>();

        if $i0 != $i1 goto label2;

        $i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        $i1 = virtualinvoke r2.<org.spongycastle.pqc.crypto.rainbow.Layer: int getOi()>();

        if $i0 != $i1 goto label2;

        $r3 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_alpha>;

        $r4 = virtualinvoke r2.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] getCoeffAlpha()>();

        $z0 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.RainbowUtil: boolean equals(short[][][],short[][][])>($r3, $r4);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_beta>;

        $r4 = virtualinvoke r2.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] getCoeffBeta()>();

        $z0 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.RainbowUtil: boolean equals(short[][][],short[][][])>($r3, $r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][] coeff_gamma>;

        $r6 = virtualinvoke r2.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][] getCoeffGamma()>();

        $z0 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.RainbowUtil: boolean equals(short[][],short[][])>($r5, $r6);

        if $z0 == 0 goto label2;

        $r7 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[] coeff_eta>;

        $r8 = virtualinvoke r2.<org.spongycastle.pqc.crypto.rainbow.Layer: short[] getCoeffEta()>();

        $z0 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.RainbowUtil: boolean equals(short[],short[])>($r7, $r8);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public short[][][] getCoeffAlpha()
    {
        org.spongycastle.pqc.crypto.rainbow.Layer r0;
        short[][][] r1;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.Layer;

        r1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_alpha>;

        return r1;
    }
    public short[][][] getCoeffBeta()
    {
        org.spongycastle.pqc.crypto.rainbow.Layer r0;
        short[][][] r1;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.Layer;

        r1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_beta>;

        return r1;
    }
    public short[] getCoeffEta()
    {
        org.spongycastle.pqc.crypto.rainbow.Layer r0;
        short[] r1;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.Layer;

        r1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[] coeff_eta>;

        return r1;
    }
    public short[][] getCoeffGamma()
    {
        org.spongycastle.pqc.crypto.rainbow.Layer r0;
        short[][] r1;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.Layer;

        r1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][] coeff_gamma>;

        return r1;
    }
    public int getOi()
    {
        org.spongycastle.pqc.crypto.rainbow.Layer r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.Layer;

        i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        return i0;
    }
    public int getVi()
    {
        org.spongycastle.pqc.crypto.rainbow.Layer r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.Layer;

        i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        return i0;
    }
    public int getViNext()
    {
        org.spongycastle.pqc.crypto.rainbow.Layer r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.Layer;

        i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int viNext>;

        return i0;
    }
    public int hashCode()
    {
        org.spongycastle.pqc.crypto.rainbow.Layer r0;
        int i0, $i1;
        short[][][] $r1;
        short[][] $r2;
        short[] $r3;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.Layer;

        i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        i0 = i0 * 37;

        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int viNext>;

        i0 = i0 + $i1;

        i0 = i0 * 37;

        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        i0 = i0 + $i1;

        i0 = i0 * 37;

        $r1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_alpha>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(short[][][])>($r1);

        i0 = i0 + $i1;

        i0 = i0 * 37;

        $r1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_beta>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(short[][][])>($r1);

        i0 = i0 + $i1;

        i0 = i0 * 37;

        $r2 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][] coeff_gamma>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(short[][])>($r2);

        i0 = i0 + $i1;

        i0 = i0 * 37;

        $r3 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[] coeff_eta>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(short[])>($r3);

        i0 = i0 + $i1;

        return i0;
    }
    public short[][] plugInVinegars(short[])
    {
        org.spongycastle.pqc.crypto.rainbow.Layer r0;
        short[] $r1, r2, $r9, $r10;
        int $i0, $i1, $i2, $i3;
        int[] $r3;
        java.lang.Class $r4;
        java.lang.Object $r5;
        short[][] r6, $r8;
        short[][][] $r7;
        short $s4, $s5;

        r0 := @this: org.spongycastle.pqc.crypto.rainbow.Layer;

        $r1 := @parameter0: short[];

        $i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        $i1 = $i1 + 1;

        $r3 = newarray (int)[2];

        $r3[0] = $i0;

        $r3[1] = $i1;

        $r4 = <java.lang.Short: java.lang.Class TYPE>;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r4, $r3);

        r6 = (short[][]) $r5;

        $i0 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        r2 = newarray (short)[$i0];

        $i0 = 0;

     label01:
        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        if $i0 >= $i1 goto label06;

        $i1 = 0;

     label02:
        $i2 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        if $i1 >= $i2 goto label05;

        $i2 = 0;

     label03:
        $i3 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        if $i2 >= $i3 goto label04;

        $r7 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_beta>;

        $r8 = $r7[$i0];

        $r9 = $r8[$i1];

        $s4 = $r9[$i2];

        $s5 = $r1[$i1];

        $s4 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.GF2Field: short multElem(short,short)>($s4, $s5);

        $s5 = $r1[$i2];

        $s4 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.GF2Field: short multElem(short,short)>($s4, $s5);

        $s5 = r2[$i0];

        $s4 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.GF2Field: short addElem(short,short)>($s5, $s4);

        r2[$i0] = $s4;

        $i2 = $i2 + 1;

        goto label03;

     label04:
        $i1 = $i1 + 1;

        goto label02;

     label05:
        $i0 = $i0 + 1;

        goto label01;

     label06:
        $i0 = 0;

     label07:
        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        if $i0 >= $i1 goto label12;

        $i1 = 0;

     label08:
        $i2 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        if $i1 >= $i2 goto label11;

        $i2 = 0;

     label09:
        $i3 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        if $i2 >= $i3 goto label10;

        $r7 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][][] coeff_alpha>;

        $r8 = $r7[$i0];

        $r9 = $r8[$i1];

        $s4 = $r9[$i2];

        $s5 = $r1[$i2];

        $s4 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.GF2Field: short multElem(short,short)>($s4, $s5);

        $r9 = r6[$i0];

        $r10 = r6[$i0];

        $s5 = $r10[$i1];

        $s4 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.GF2Field: short addElem(short,short)>($s5, $s4);

        $r9[$i1] = $s4;

        $i2 = $i2 + 1;

        goto label09;

     label10:
        $i1 = $i1 + 1;

        goto label08;

     label11:
        $i0 = $i0 + 1;

        goto label07;

     label12:
        $i0 = 0;

     label13:
        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        if $i0 >= $i1 goto label16;

        $i1 = 0;

     label14:
        $i2 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        if $i1 >= $i2 goto label15;

        $r8 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][] coeff_gamma>;

        $r9 = $r8[$i0];

        $s4 = $r9[$i1];

        $s5 = $r1[$i1];

        $s4 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.GF2Field: short multElem(short,short)>($s4, $s5);

        $s5 = r2[$i0];

        $s4 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.GF2Field: short addElem(short,short)>($s5, $s4);

        r2[$i0] = $s4;

        $i1 = $i1 + 1;

        goto label14;

     label15:
        $i0 = $i0 + 1;

        goto label13;

     label16:
        $i0 = 0;

     label17:
        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        if $i0 >= $i1 goto label20;

        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

     label18:
        $i2 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int viNext>;

        if $i1 >= $i2 goto label19;

        $r1 = r6[$i0];

        $i2 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        $i2 = $i1 - $i2;

        $r8 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[][] coeff_gamma>;

        $r9 = $r8[$i0];

        $s4 = $r9[$i1];

        $r9 = r6[$i0];

        $i3 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int vi>;

        $i3 = $i1 - $i3;

        $s5 = $r9[$i3];

        $s4 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.GF2Field: short addElem(short,short)>($s4, $s5);

        $r1[$i2] = $s4;

        $i1 = $i1 + 1;

        goto label18;

     label19:
        $i0 = $i0 + 1;

        goto label17;

     label20:
        $i0 = 0;

     label21:
        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        if $i0 >= $i1 goto label22;

        $s4 = r2[$i0];

        $r1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: short[] coeff_eta>;

        $s5 = $r1[$i0];

        $s4 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.GF2Field: short addElem(short,short)>($s4, $s5);

        r2[$i0] = $s4;

        $i0 = $i0 + 1;

        goto label21;

     label22:
        $i0 = 0;

     label23:
        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        if $i0 >= $i1 goto label24;

        $r1 = r6[$i0];

        $i1 = r0.<org.spongycastle.pqc.crypto.rainbow.Layer: int oi>;

        $s4 = r2[$i0];

        $r1[$i1] = $s4;

        $i0 = $i0 + 1;

        goto label23;

     label24:
        return r6;
    }
