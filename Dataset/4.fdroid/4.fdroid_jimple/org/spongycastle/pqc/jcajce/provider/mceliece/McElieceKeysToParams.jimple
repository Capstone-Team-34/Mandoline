org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeysToParams extends java.lang.Object
    public void <init>()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeysToParams r0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeysToParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static org.spongycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        java.security.PrivateKey $r0;
        boolean $z0;
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r1;
        org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters $r2;
        java.lang.String $r3;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r4;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r5;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r6, $r9;
        org.spongycastle.pqc.math.linearalgebra.Permutation $r7, $r8;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] $r10;
        org.spongycastle.pqc.crypto.mceliece.McElieceParameters $r11;
        java.security.InvalidKeyException $r12;

        $r0 := @parameter0: java.security.PrivateKey;

        $z0 = $r0 instanceof org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        if $z0 == 0 goto label1;

        r1 = (org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey) $r0;

        $r2 = new org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters;

        $r3 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: java.lang.String getOIDString()>();

        $i0 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int getN()>();

        $i1 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int getK()>();

        $r4 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2mField getField()>();

        $r5 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()>();

        $r6 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix getSInv()>();

        $r7 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation getP1()>();

        $r8 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation getP2()>();

        $r9 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix getH()>();

        $r10 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()>();

        $r11 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.crypto.mceliece.McElieceParameters getMcElieceParameters()>();

        specialinvoke $r2.<org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters: void <init>(java.lang.String,int,int,org.spongycastle.pqc.math.linearalgebra.GF2mField,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[],org.spongycastle.pqc.crypto.mceliece.McElieceParameters)>($r3, $i0, $i1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11);

        return $r2;

     label1:
        $r12 = new java.security.InvalidKeyException;

        specialinvoke $r12.<java.security.InvalidKeyException: void <init>(java.lang.String)>("can\'t identify McEliece private key.");

        throw $r12;
    }
    public static org.spongycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        java.security.PublicKey $r0;
        boolean $z0;
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey r1;
        org.spongycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters $r2;
        java.lang.String $r3;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r4;
        org.spongycastle.pqc.crypto.mceliece.McElieceParameters $r5;
        java.security.InvalidKeyException $r6;
        java.lang.StringBuilder $r7;
        java.lang.Class $r8;

        $r0 := @parameter0: java.security.PublicKey;

        $z0 = $r0 instanceof org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey;

        if $z0 == 0 goto label1;

        r1 = (org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey) $r0;

        $r2 = new org.spongycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters;

        $r3 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey: java.lang.String getOIDString()>();

        $i0 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey: int getN()>();

        $i1 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey: int getT()>();

        $r4 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix getG()>();

        $r5 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey: org.spongycastle.pqc.crypto.mceliece.McElieceParameters getMcElieceParameters()>();

        specialinvoke $r2.<org.spongycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters: void <init>(java.lang.String,int,int,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,org.spongycastle.pqc.crypto.mceliece.McElieceParameters)>($r3, $i0, $i1, $r4, $r5);

        return $r2;

     label1:
        $r6 = new java.security.InvalidKeyException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t identify McEliece public key: ");

        $r8 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r3);

        throw $r6;
    }
