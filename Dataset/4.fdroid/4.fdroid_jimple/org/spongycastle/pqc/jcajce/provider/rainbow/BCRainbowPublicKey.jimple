org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey extends java.lang.Object implements java.security.PublicKey
private static final long serialVersionUID
private short[][] coeffquadratic
private short[] coeffscalar
private short[][] coeffsingular
private int docLength
private org.spongycastle.pqc.crypto.rainbow.RainbowParameters rainbowParams
    public void <init>(int, short[][], short[][], short[])
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey r0;
        int $i0;
        short[][] $r1, $r2;
        short[] $r3;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        $i0 := @parameter0: int;

        $r1 := @parameter1: short[][];

        $r2 := @parameter2: short[][];

        $r3 := @parameter3: short[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: int docLength> = $i0;

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] coeffquadratic> = $r1;

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] coeffsingular> = $r2;

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[] coeffscalar> = $r3;

        return;
    }
    public void <init>(org.spongycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters)
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey r0;
        org.spongycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters $r1;
        int $i0;
        short[][] $r2, $r3;
        short[] $r4;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        $r1 := @parameter0: org.spongycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters: int getDocLength()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters: short[][] getCoeffQuadratic()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters: short[][] getCoeffSingular()>();

        $r4 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters: short[] getCoeffScalar()>();

        specialinvoke r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: void <init>(int,short[][],short[][],short[])>($i0, $r2, $r3, $r4);

        return;
    }
    public void <init>(org.spongycastle.pqc.jcajce.spec.RainbowPublicKeySpec)
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey r0;
        org.spongycastle.pqc.jcajce.spec.RainbowPublicKeySpec $r1;
        int $i0;
        short[][] $r2, $r3;
        short[] $r4;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        $r1 := @parameter0: org.spongycastle.pqc.jcajce.spec.RainbowPublicKeySpec;

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.RainbowPublicKeySpec: int getDocLength()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.RainbowPublicKeySpec: short[][] getCoeffQuadratic()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.RainbowPublicKeySpec: short[][] getCoeffSingular()>();

        $r4 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.RainbowPublicKeySpec: short[] getCoeffScalar()>();

        specialinvoke r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: void <init>(int,short[][],short[][],short[])>($i0, $r2, $r3, $r4);

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;
        short[][] $r3, $r4;
        short[] $r5, $r6;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label2;

        $z0 = $r1 instanceof org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey) $r1;

        $i0 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: int docLength>;

        $i1 = virtualinvoke r2.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: int getDocLength()>();

        if $i0 != $i1 goto label2;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] coeffquadratic>;

        $r4 = virtualinvoke r2.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] getCoeffQuadratic()>();

        $z0 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.RainbowUtil: boolean equals(short[][],short[][])>($r3, $r4);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] coeffsingular>;

        $r4 = virtualinvoke r2.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] getCoeffSingular()>();

        $z0 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.RainbowUtil: boolean equals(short[][],short[][])>($r3, $r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[] coeffscalar>;

        $r6 = virtualinvoke r2.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[] getCoeffScalar()>();

        $z0 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.RainbowUtil: boolean equals(short[],short[])>($r5, $r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public final java.lang.String getAlgorithm()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey r0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        return "Rainbow";
    }
    public short[][] getCoeffQuadratic()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey r0;
        short[][] r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] coeffquadratic>;

        return r1;
    }
    public short[] getCoeffScalar()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey r0;
        short[] $r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        $r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[] coeffscalar>;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: short[] clone(short[])>($r1);

        return $r1;
    }
    public short[][] getCoeffSingular()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey r0;
        short[][] r1, $r3;
        short[] $r2;
        int $i0, $i1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] coeffsingular>;

        $i0 = lengthof r1;

        r1 = newarray (short[])[$i0];

        $i0 = 0;

     label1:
        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] coeffsingular>;

        $i1 = lengthof $r3;

        if $i0 == $i1 goto label2;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] coeffsingular>;

        $r2 = $r3[$i0];

        $r2 = staticinvoke <org.spongycastle.util.Arrays: short[] clone(short[])>($r2);

        r1[$i0] = $r2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public int getDocLength()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        i0 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: int docLength>;

        return i0;
    }
    public byte[] getEncoded()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;
        org.spongycastle.pqc.asn1.RainbowPublicKey r2;
        short[][] $r3, $r6;
        short[] $r4;
        byte[] $r5;
        int $i0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r7;
        org.spongycastle.asn1.DERNull $r8;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        r2 = new org.spongycastle.pqc.asn1.RainbowPublicKey;

        $i0 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: int docLength>;

        $r6 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] coeffquadratic>;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] coeffsingular>;

        $r4 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[] coeffscalar>;

        specialinvoke r2.<org.spongycastle.pqc.asn1.RainbowPublicKey: void <init>(int,short[][],short[][],short[])>($i0, $r6, $r3, $r4);

        r1 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r7 = <org.spongycastle.pqc.asn1.PQCObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rainbow>;

        $r8 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        specialinvoke r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r7, $r8);

        $r5 = staticinvoke <org.spongycastle.pqc.jcajce.provider.util.KeyUtil: byte[] getEncodedSubjectPublicKeyInfo(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>(r1, r2);

        return $r5;
    }
    public java.lang.String getFormat()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey r0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        return "X.509";
    }
    public int hashCode()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey r0;
        int i0, $i1;
        short[][] $r1;
        short[] $r2;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        i0 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: int docLength>;

        i0 = i0 * 37;

        $r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] coeffquadratic>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(short[][])>($r1);

        i0 = i0 + $i1;

        i0 = i0 * 37;

        $r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[][] coeffsingular>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(short[][])>($r1);

        i0 = i0 + $i1;

        i0 = i0 * 37;

        $r2 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: short[] coeffscalar>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(short[])>($r2);

        i0 = i0 + $i1;

        return i0;
    }
