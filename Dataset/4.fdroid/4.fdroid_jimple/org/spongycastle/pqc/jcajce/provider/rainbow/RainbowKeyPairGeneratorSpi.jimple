org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi extends java.security.KeyPairGenerator
org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator engine
boolean initialised
org.spongycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters param
java.security.SecureRandom random
int strength
    public void <init>()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi r0;
        org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator $r1;
        java.security.SecureRandom $r2;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi;

        specialinvoke r0.<java.security.KeyPairGenerator: void <init>(java.lang.String)>("Rainbow");

        $r1 = new org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator;

        specialinvoke $r1.<org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator: void <init>()>();

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator engine> = $r1;

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: int strength> = 1024;

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: java.security.SecureRandom random> = $r2;

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: boolean initialised> = 0;

        return;
    }
    public java.security.KeyPair generateKeyPair()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi r0;
        boolean $z0;
        org.spongycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters $r1;
        java.security.SecureRandom $r2;
        org.spongycastle.pqc.crypto.rainbow.RainbowParameters $r3;
        org.spongycastle.pqc.jcajce.spec.RainbowParameterSpec $r4;
        int[] $r5;
        org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator $r6;
        org.spongycastle.crypto.AsymmetricCipherKeyPair $r7;
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r8;
        org.spongycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters r9;
        org.spongycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters r10;
        java.security.KeyPair $r11;
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey $r12;
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey $r13;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi;

        $z0 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: boolean initialised>;

        if $z0 != 0 goto label1;

        $r1 = new org.spongycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters;

        $r2 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: java.security.SecureRandom random>;

        $r3 = new org.spongycastle.pqc.crypto.rainbow.RainbowParameters;

        $r4 = new org.spongycastle.pqc.jcajce.spec.RainbowParameterSpec;

        specialinvoke $r4.<org.spongycastle.pqc.jcajce.spec.RainbowParameterSpec: void <init>()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.pqc.jcajce.spec.RainbowParameterSpec: int[] getVi()>();

        specialinvoke $r3.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: void <init>(int[])>($r5);

        specialinvoke $r1.<org.spongycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters: void <init>(java.security.SecureRandom,org.spongycastle.pqc.crypto.rainbow.RainbowParameters)>($r2, $r3);

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: org.spongycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters param> = $r1;

        $r6 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator engine>;

        $r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: org.spongycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters param>;

        virtualinvoke $r6.<org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator: void init(org.spongycastle.crypto.KeyGenerationParameters)>($r1);

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: boolean initialised> = 1;

     label1:
        $r6 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator engine>;

        $r7 = virtualinvoke $r6.<org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator: org.spongycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()>();

        $r8 = virtualinvoke $r7.<org.spongycastle.crypto.AsymmetricCipherKeyPair: org.spongycastle.crypto.params.AsymmetricKeyParameter getPublic()>();

        r9 = (org.spongycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters) $r8;

        $r8 = virtualinvoke $r7.<org.spongycastle.crypto.AsymmetricCipherKeyPair: org.spongycastle.crypto.params.AsymmetricKeyParameter getPrivate()>();

        r10 = (org.spongycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters) $r8;

        $r11 = new java.security.KeyPair;

        $r12 = new org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey;

        specialinvoke $r12.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey: void <init>(org.spongycastle.pqc.crypto.rainbow.RainbowPublicKeyParameters)>(r9);

        $r13 = new org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        specialinvoke $r13.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: void <init>(org.spongycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters)>(r10);

        specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13);

        return $r11;
    }
    public void initialize(int, java.security.SecureRandom)
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi r0;
        int $i0;
        java.security.SecureRandom $r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.security.SecureRandom;

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: int strength> = $i0;

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: java.security.SecureRandom random> = $r1;

        return;
    }
    public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi r0;
        java.security.spec.AlgorithmParameterSpec $r1;
        java.security.SecureRandom $r2;
        int[] $r3;
        boolean $z0;
        java.security.InvalidAlgorithmParameterException $r4;
        org.spongycastle.pqc.jcajce.spec.RainbowParameterSpec r5;
        org.spongycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters $r6;
        org.spongycastle.pqc.crypto.rainbow.RainbowParameters $r7;
        org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator $r8;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi;

        $r1 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $r2 := @parameter1: java.security.SecureRandom;

        $z0 = $r1 instanceof org.spongycastle.pqc.jcajce.spec.RainbowParameterSpec;

        if $z0 != 0 goto label1;

        $r4 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r4.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("parameter object not a RainbowParameterSpec");

        throw $r4;

     label1:
        r5 = (org.spongycastle.pqc.jcajce.spec.RainbowParameterSpec) $r1;

        $r6 = new org.spongycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters;

        $r7 = new org.spongycastle.pqc.crypto.rainbow.RainbowParameters;

        $r3 = virtualinvoke r5.<org.spongycastle.pqc.jcajce.spec.RainbowParameterSpec: int[] getVi()>();

        specialinvoke $r7.<org.spongycastle.pqc.crypto.rainbow.RainbowParameters: void <init>(int[])>($r3);

        specialinvoke $r6.<org.spongycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters: void <init>(java.security.SecureRandom,org.spongycastle.pqc.crypto.rainbow.RainbowParameters)>($r2, $r7);

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: org.spongycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters param> = $r6;

        $r8 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator engine>;

        $r6 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: org.spongycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters param>;

        virtualinvoke $r8.<org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator: void init(org.spongycastle.crypto.KeyGenerationParameters)>($r6);

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: boolean initialised> = 1;

        return;
    }
