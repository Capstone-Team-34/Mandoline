org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey extends java.lang.Object implements java.security.PrivateKey org.spongycastle.crypto.CipherParameters
private static final long serialVersionUID
private org.spongycastle.pqc.math.linearalgebra.GF2mField field
private org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM goppaPoly
private org.spongycastle.pqc.math.linearalgebra.GF2Matrix h
private int k
private org.spongycastle.pqc.crypto.mceliece.McElieceParameters mcElieceParams
private int n
private java.lang.String oid
private org.spongycastle.pqc.math.linearalgebra.Permutation p1
private org.spongycastle.pqc.math.linearalgebra.Permutation p2
private org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] qInv
private org.spongycastle.pqc.math.linearalgebra.GF2Matrix sInv
    public void <init>(java.lang.String, int, int, org.spongycastle.pqc.math.linearalgebra.GF2mField, org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.spongycastle.pqc.math.linearalgebra.GF2Matrix, org.spongycastle.pqc.math.linearalgebra.Permutation, org.spongycastle.pqc.math.linearalgebra.Permutation, org.spongycastle.pqc.math.linearalgebra.GF2Matrix, org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        java.lang.String $r1;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r2;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r4, $r7;
        org.spongycastle.pqc.math.linearalgebra.Permutation $r5, $r6;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] $r8;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: org.spongycastle.pqc.math.linearalgebra.GF2mField;

        $r3 := @parameter4: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM;

        $r4 := @parameter5: org.spongycastle.pqc.math.linearalgebra.GF2Matrix;

        $r5 := @parameter6: org.spongycastle.pqc.math.linearalgebra.Permutation;

        $r6 := @parameter7: org.spongycastle.pqc.math.linearalgebra.Permutation;

        $r7 := @parameter8: org.spongycastle.pqc.math.linearalgebra.GF2Matrix;

        $r8 := @parameter9: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: java.lang.String oid> = $r1;

        r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int n> = $i0;

        r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int k> = $i1;

        r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2mField field> = $r2;

        r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM goppaPoly> = $r3;

        r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix sInv> = $r4;

        r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p1> = $r5;

        r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p2> = $r6;

        r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix h> = $r7;

        r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] qInv> = $r8;

        return;
    }
    public void <init>(org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters)
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters $r1;
        java.lang.String $r2;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r3;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r5, $r8;
        org.spongycastle.pqc.math.linearalgebra.Permutation $r6, $r7;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] $r9;
        org.spongycastle.pqc.crypto.mceliece.McElieceParameters $r10;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        $r1 := @parameter0: org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters;

        $r2 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters: java.lang.String getOIDString()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters: int getN()>();

        $i1 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters: int getK()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters: org.spongycastle.pqc.math.linearalgebra.GF2mField getField()>();

        $r4 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()>();

        $r5 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters: org.spongycastle.pqc.math.linearalgebra.GF2Matrix getSInv()>();

        $r6 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters: org.spongycastle.pqc.math.linearalgebra.Permutation getP1()>();

        $r7 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters: org.spongycastle.pqc.math.linearalgebra.Permutation getP2()>();

        $r8 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters: org.spongycastle.pqc.math.linearalgebra.GF2Matrix getH()>();

        $r9 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()>();

        specialinvoke r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: void <init>(java.lang.String,int,int,org.spongycastle.pqc.math.linearalgebra.GF2mField,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])>($r2, $i0, $i1, $r3, $r4, $r5, $r6, $r7, $r8, $r9);

        $r10 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters: org.spongycastle.pqc.crypto.mceliece.McElieceParameters getParameters()>();

        r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.crypto.mceliece.McElieceParameters mcElieceParams> = $r10;

        return;
    }
    public void <init>(org.spongycastle.pqc.jcajce.spec.McEliecePrivateKeySpec)
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        org.spongycastle.pqc.jcajce.spec.McEliecePrivateKeySpec $r1;
        java.lang.String $r2;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r3;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r4;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r5, $r8;
        org.spongycastle.pqc.math.linearalgebra.Permutation $r6, $r7;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] $r9;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        $r1 := @parameter0: org.spongycastle.pqc.jcajce.spec.McEliecePrivateKeySpec;

        $r2 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.McEliecePrivateKeySpec: java.lang.String getOIDString()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.McEliecePrivateKeySpec: int getN()>();

        $i1 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.McEliecePrivateKeySpec: int getK()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.McEliecePrivateKeySpec: org.spongycastle.pqc.math.linearalgebra.GF2mField getField()>();

        $r4 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.McEliecePrivateKeySpec: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()>();

        $r5 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.McEliecePrivateKeySpec: org.spongycastle.pqc.math.linearalgebra.GF2Matrix getSInv()>();

        $r6 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.McEliecePrivateKeySpec: org.spongycastle.pqc.math.linearalgebra.Permutation getP1()>();

        $r7 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.McEliecePrivateKeySpec: org.spongycastle.pqc.math.linearalgebra.Permutation getP2()>();

        $r8 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.McEliecePrivateKeySpec: org.spongycastle.pqc.math.linearalgebra.GF2Matrix getH()>();

        $r9 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.McEliecePrivateKeySpec: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()>();

        specialinvoke r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: void <init>(java.lang.String,int,int,org.spongycastle.pqc.math.linearalgebra.GF2mField,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])>($r2, $i0, $i1, $r3, $r4, $r5, $r6, $r7, $r8, $r9);

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r3, $r4;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r5, $r6;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r7, $r8;
        org.spongycastle.pqc.math.linearalgebra.Permutation $r9, $r10;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey) $r1;

        $i0 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int n>;

        $i1 = r2.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int n>;

        if $i0 != $i1 goto label2;

        $i0 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int k>;

        $i1 = r2.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int k>;

        if $i0 != $i1 goto label2;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2mField field>;

        $r4 = r2.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2mField field>;

        $z0 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2mField: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM goppaPoly>;

        $r6 = r2.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM goppaPoly>;

        $z0 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r7 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix sInv>;

        $r8 = r2.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix sInv>;

        $z0 = virtualinvoke $r7.<org.spongycastle.pqc.math.linearalgebra.GF2Matrix: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        $r9 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p1>;

        $r10 = r2.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p1>;

        $z0 = virtualinvoke $r9.<org.spongycastle.pqc.math.linearalgebra.Permutation: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label2;

        $r9 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p2>;

        $r10 = r2.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p2>;

        $z0 = virtualinvoke $r9.<org.spongycastle.pqc.math.linearalgebra.Permutation: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label2;

        $r7 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix h>;

        $r8 = r2.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix h>;

        $z0 = virtualinvoke $r7.<org.spongycastle.pqc.math.linearalgebra.GF2Matrix: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    protected org.spongycastle.asn1.ASN1Primitive getAlgParams()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        return null;
    }
    public java.lang.String getAlgorithm()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        return "McEliece";
    }
    public byte[] getEncoded()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        org.spongycastle.pqc.asn1.McEliecePrivateKey r1;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r2;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r4, $r7;
        org.spongycastle.pqc.math.linearalgebra.Permutation $r5, $r6;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] $r8;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r9;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo r10;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r11;
        java.lang.String $r12;
        org.spongycastle.asn1.DERNull $r13;
        byte[] $r14;
        java.io.IOException r15, r16;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        r1 = new org.spongycastle.pqc.asn1.McEliecePrivateKey;

        $r11 = new org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r12 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: java.lang.String oid>;

        specialinvoke $r11.<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>($r12);

        $i1 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int n>;

        $i0 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int k>;

        $r2 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2mField field>;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM goppaPoly>;

        $r4 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix sInv>;

        $r5 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p1>;

        $r6 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p2>;

        $r7 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix h>;

        $r8 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] qInv>;

        specialinvoke r1.<org.spongycastle.pqc.asn1.McEliecePrivateKey: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,int,int,org.spongycastle.pqc.math.linearalgebra.GF2mField,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])>($r11, $i1, $i0, $r2, $r3, $r4, $r5, $r6, $r7, $r8);

        r9 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

     label1:
        $r11 = virtualinvoke r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.asn1.ASN1ObjectIdentifier getOID()>();

     label2:
        $r13 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

     label3:
        specialinvoke r9.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r11, $r13);

     label4:
        r10 = new org.spongycastle.asn1.pkcs.PrivateKeyInfo;

     label5:
        specialinvoke r10.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>(r9, r1);

     label6:
        $r14 = virtualinvoke r10.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: byte[] getEncoded()>();

     label7:
        return $r14;

     label8:
        r15 := @caughtexception;

        virtualinvoke r15.<java.io.IOException: void printStackTrace()>();

        return null;

     label9:
        r16 := @caughtexception;

        virtualinvoke r16.<java.io.IOException: void printStackTrace()>();

        return null;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label5 to label6 with label8;
        catch java.io.IOException from label6 to label7 with label9;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2mField getField()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.GF2mField r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2mField field>;

        return r1;
    }
    public java.lang.String getFormat()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        return null;
    }
    public org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM goppaPoly>;

        return r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2Matrix getH()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix h>;

        return r1;
    }
    public int getK()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        i0 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int k>;

        return i0;
    }
    public org.spongycastle.pqc.crypto.mceliece.McElieceParameters getMcElieceParameters()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        org.spongycastle.pqc.crypto.mceliece.McElieceParameters r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.crypto.mceliece.McElieceParameters mcElieceParams>;

        return r1;
    }
    public int getN()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        i0 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int n>;

        return i0;
    }
    protected org.spongycastle.asn1.ASN1ObjectIdentifier getOID()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        $r1 = new org.spongycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>("1.3.6.1.4.1.8301.3.1.3.4.1");

        return $r1;
    }
    public java.lang.String getOIDString()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        java.lang.String r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: java.lang.String oid>;

        return r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.Permutation getP1()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.Permutation r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p1>;

        return r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.Permutation getP2()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.Permutation r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p2>;

        return r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] qInv>;

        return r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2Matrix getSInv()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix sInv>;

        return r1;
    }
    public int hashCode()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r1;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r3;
        org.spongycastle.pqc.math.linearalgebra.Permutation $r4;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        $i0 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int k>;

        $i1 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int n>;

        $i0 = $i0 + $i1;

        $r1 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2mField field>;

        $i1 = virtualinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2mField: int hashCode()>();

        $i0 = $i0 + $i1;

        $r2 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM goppaPoly>;

        $i1 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: int hashCode()>();

        $i0 = $i0 + $i1;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix sInv>;

        $i1 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2Matrix: int hashCode()>();

        $i0 = $i0 + $i1;

        $r4 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p1>;

        $i1 = virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.Permutation: int hashCode()>();

        $i0 = $i0 + $i1;

        $r4 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p2>;

        $i1 = virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.Permutation: int hashCode()>();

        $i0 = $i0 + $i1;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix h>;

        $i1 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.GF2Matrix: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    public java.lang.String toString()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r4;
        org.spongycastle.pqc.math.linearalgebra.Permutation $r5;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length of the code          : ");

        $i0 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int n>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dimension of the code       : ");

        $i0 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: int k>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" irreducible Goppa polynomial: ");

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM goppaPoly>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (k x k)-matrix S^-1         : ");

        $r4 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix sInv>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" permutation P1              : ");

        $r5 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p1>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" permutation P2              : ");

        $r5 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation p2>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
