org.spongycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeysToParams extends java.lang.Object
    public void <init>()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeysToParams r0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeysToParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static org.spongycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        java.security.PrivateKey $r0;
        boolean $z0;
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey r1;
        org.spongycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters $r2;
        java.lang.String $r3;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r4;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r5;
        org.spongycastle.pqc.math.linearalgebra.Permutation $r6;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r7;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] $r8;
        org.spongycastle.pqc.crypto.mceliece.McElieceCCA2Parameters $r9;
        java.security.InvalidKeyException $r10;

        $r0 := @parameter0: java.security.PrivateKey;

        $z0 = $r0 instanceof org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey;

        if $z0 == 0 goto label1;

        r1 = (org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey) $r0;

        $r2 = new org.spongycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters;

        $r3 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey: java.lang.String getOIDString()>();

        $i0 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey: int getN()>();

        $i1 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey: int getK()>();

        $r4 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2mField getField()>();

        $r5 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()>();

        $r6 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey: org.spongycastle.pqc.math.linearalgebra.Permutation getP()>();

        $r7 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix getH()>();

        $r8 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()>();

        $r9 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey: org.spongycastle.pqc.crypto.mceliece.McElieceCCA2Parameters getMcElieceCCA2Parameters()>();

        specialinvoke $r2.<org.spongycastle.pqc.crypto.mceliece.McElieceCCA2PrivateKeyParameters: void <init>(java.lang.String,int,int,org.spongycastle.pqc.math.linearalgebra.GF2mField,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM,org.spongycastle.pqc.math.linearalgebra.Permutation,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[],org.spongycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)>($r3, $i0, $i1, $r4, $r5, $r6, $r7, $r8, $r9);

        return $r2;

     label1:
        $r10 = new java.security.InvalidKeyException;

        specialinvoke $r10.<java.security.InvalidKeyException: void <init>(java.lang.String)>("can\'t identify McElieceCCA2 private key.");

        throw $r10;
    }
    public static org.spongycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        java.security.PublicKey $r0;
        boolean $z0;
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey r1;
        org.spongycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters $r2;
        java.lang.String $r3;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r4;
        org.spongycastle.pqc.crypto.mceliece.McElieceCCA2Parameters $r5;
        java.security.InvalidKeyException $r6;
        java.lang.StringBuilder $r7;
        java.lang.Class $r8;

        $r0 := @parameter0: java.security.PublicKey;

        $z0 = $r0 instanceof org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey;

        if $z0 == 0 goto label1;

        r1 = (org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey) $r0;

        $r2 = new org.spongycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters;

        $r3 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey: java.lang.String getOIDString()>();

        $i0 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey: int getN()>();

        $i1 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey: int getT()>();

        $r4 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey: org.spongycastle.pqc.math.linearalgebra.GF2Matrix getG()>();

        $r5 = virtualinvoke r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey: org.spongycastle.pqc.crypto.mceliece.McElieceCCA2Parameters getMcElieceCCA2Parameters()>();

        specialinvoke $r2.<org.spongycastle.pqc.crypto.mceliece.McElieceCCA2PublicKeyParameters: void <init>(java.lang.String,int,int,org.spongycastle.pqc.math.linearalgebra.GF2Matrix,org.spongycastle.pqc.crypto.mceliece.McElieceCCA2Parameters)>($r3, $i0, $i1, $r4, $r5);

        return $r2;

     label1:
        $r6 = new java.security.InvalidKeyException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t identify McElieceCCA2 public key: ");

        $r8 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r3);

        throw $r6;
    }
