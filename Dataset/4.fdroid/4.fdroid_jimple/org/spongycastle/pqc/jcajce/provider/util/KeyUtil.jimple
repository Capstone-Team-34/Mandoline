org.spongycastle.pqc.jcajce.provider.util.KeyUtil extends java.lang.Object
    public void <init>()
    {
        org.spongycastle.pqc.jcajce.provider.util.KeyUtil r0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.util.KeyUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static byte[] getEncodedPrivateKeyInfo(org.spongycastle.asn1.pkcs.PrivateKeyInfo)
    {
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r0;
        java.lang.Exception r1;
        byte[] $r2;

        $r0 := @parameter0: org.spongycastle.asn1.pkcs.PrivateKeyInfo;

     label1:
        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public static byte[] getEncodedPrivateKeyInfo(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        java.lang.Exception r2;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        byte[] $r5;

        $r0 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r1 := @parameter1: org.spongycastle.asn1.ASN1Encodable;

        r3 = new org.spongycastle.asn1.pkcs.PrivateKeyInfo;

     label1:
        $r4 = interfaceinvoke $r1.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        specialinvoke r3.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r0, $r4);

        $r5 = staticinvoke <org.spongycastle.pqc.jcajce.provider.util.KeyUtil: byte[] getEncodedPrivateKeyInfo(org.spongycastle.asn1.pkcs.PrivateKeyInfo)>(r3);

     label2:
        return $r5;

     label3:
        r2 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public static byte[] getEncodedSubjectPublicKeyInfo(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        java.lang.Exception r2;
        byte[] $r3;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r4;

        $r0 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r1 := @parameter1: org.spongycastle.asn1.ASN1Encodable;

        $r4 = new org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

     label1:
        specialinvoke $r4.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r0, $r1);

        $r3 = staticinvoke <org.spongycastle.pqc.jcajce.provider.util.KeyUtil: byte[] getEncodedSubjectPublicKeyInfo(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r4);

     label2:
        return $r3;

     label3:
        r2 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public static byte[] getEncodedSubjectPublicKeyInfo(org.spongycastle.asn1.x509.AlgorithmIdentifier, byte[])
    {
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r0;
        byte[] $r1;
        java.lang.Exception r2;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r3;

        $r0 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r1 := @parameter1: byte[];

        $r3 = new org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

     label1:
        specialinvoke $r3.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r0, $r1);

        $r1 = staticinvoke <org.spongycastle.pqc.jcajce.provider.util.KeyUtil: byte[] getEncodedSubjectPublicKeyInfo(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r3);

     label2:
        return $r1;

     label3:
        r2 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public static byte[] getEncodedSubjectPublicKeyInfo(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)
    {
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r0;
        java.lang.Exception r1;
        byte[] $r2;

        $r0 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

     label1:
        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
