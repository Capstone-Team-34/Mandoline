org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey extends java.lang.Object implements java.security.PrivateKey
private static final long serialVersionUID
private short[][] A1inv
private short[][] A2inv
private short[] b1
private short[] b2
private org.spongycastle.pqc.crypto.rainbow.Layer[] layers
private int[] vi
    public void <init>(org.spongycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters)
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0;
        org.spongycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters $r1;
        short[][] $r2, $r4;
        short[] $r3, $r5;
        int[] $r6;
        org.spongycastle.pqc.crypto.rainbow.Layer[] $r7;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        $r1 := @parameter0: org.spongycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters;

        $r2 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters: short[][] getInvA1()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters: short[] getB1()>();

        $r4 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters: short[][] getInvA2()>();

        $r5 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters: short[] getB2()>();

        $r6 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters: int[] getVi()>();

        $r7 = virtualinvoke $r1.<org.spongycastle.pqc.crypto.rainbow.RainbowPrivateKeyParameters: org.spongycastle.pqc.crypto.rainbow.Layer[] getLayers()>();

        specialinvoke r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: void <init>(short[][],short[],short[][],short[],int[],org.spongycastle.pqc.crypto.rainbow.Layer[])>($r2, $r3, $r4, $r5, $r6, $r7);

        return;
    }
    public void <init>(org.spongycastle.pqc.jcajce.spec.RainbowPrivateKeySpec)
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0;
        org.spongycastle.pqc.jcajce.spec.RainbowPrivateKeySpec $r1;
        short[][] $r2, $r4;
        short[] $r3, $r5;
        int[] $r6;
        org.spongycastle.pqc.crypto.rainbow.Layer[] $r7;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        $r1 := @parameter0: org.spongycastle.pqc.jcajce.spec.RainbowPrivateKeySpec;

        $r2 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.RainbowPrivateKeySpec: short[][] getInvA1()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.RainbowPrivateKeySpec: short[] getB1()>();

        $r4 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.RainbowPrivateKeySpec: short[][] getInvA2()>();

        $r5 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.RainbowPrivateKeySpec: short[] getB2()>();

        $r6 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.RainbowPrivateKeySpec: int[] getVi()>();

        $r7 = virtualinvoke $r1.<org.spongycastle.pqc.jcajce.spec.RainbowPrivateKeySpec: org.spongycastle.pqc.crypto.rainbow.Layer[] getLayers()>();

        specialinvoke r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: void <init>(short[][],short[],short[][],short[],int[],org.spongycastle.pqc.crypto.rainbow.Layer[])>($r2, $r3, $r4, $r5, $r6, $r7);

        return;
    }
    public void <init>(short[][], short[], short[][], short[], int[], org.spongycastle.pqc.crypto.rainbow.Layer[])
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0;
        short[][] $r1, $r3;
        short[] $r2, $r4;
        int[] $r5;
        org.spongycastle.pqc.crypto.rainbow.Layer[] $r6;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        $r1 := @parameter0: short[][];

        $r2 := @parameter1: short[];

        $r3 := @parameter2: short[][];

        $r4 := @parameter3: short[];

        $r5 := @parameter4: int[];

        $r6 := @parameter5: org.spongycastle.pqc.crypto.rainbow.Layer[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[][] A1inv> = $r1;

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[] b1> = $r2;

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[][] A2inv> = $r3;

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[] b2> = $r4;

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: int[] vi> = $r5;

        r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: org.spongycastle.pqc.crypto.rainbow.Layer[] layers> = $r6;

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0, r2;
        java.lang.Object $r1;
        boolean $z0, $z1;
        short[][] $r3, $r4;
        short[] $r5, $r6;
        int[] $r7, $r8;
        org.spongycastle.pqc.crypto.rainbow.Layer[] $r9;
        int $i0, $i1;
        org.spongycastle.pqc.crypto.rainbow.Layer $r10, $r11;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label14;

        $z0 = $r1 instanceof org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r2 = (org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey) $r1;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[][] A1inv>;

        $r4 = virtualinvoke r2.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[][] getInvA1()>();

        $z0 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.RainbowUtil: boolean equals(short[][],short[][])>($r3, $r4);

        if $z0 == 0 goto label08;

        $z0 = 1;

     label02:
        if $z0 == 0 goto label09;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[][] A2inv>;

        $r4 = virtualinvoke r2.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[][] getInvA2()>();

        $z0 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.RainbowUtil: boolean equals(short[][],short[][])>($r3, $r4);

        if $z0 == 0 goto label09;

        $z0 = 1;

     label03:
        if $z0 == 0 goto label10;

        $r5 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[] b1>;

        $r6 = virtualinvoke r2.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[] getB1()>();

        $z0 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.RainbowUtil: boolean equals(short[],short[])>($r5, $r6);

        if $z0 == 0 goto label10;

        $z0 = 1;

     label04:
        if $z0 == 0 goto label11;

        $r5 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[] b2>;

        $r6 = virtualinvoke r2.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[] getB2()>();

        $z0 = staticinvoke <org.spongycastle.pqc.crypto.rainbow.util.RainbowUtil: boolean equals(short[],short[])>($r5, $r6);

        if $z0 == 0 goto label11;

        $z0 = 1;

     label05:
        if $z0 == 0 goto label12;

        $r7 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: int[] vi>;

        $r8 = virtualinvoke r2.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: int[] getVi()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r7, $r8);

        if $z0 == 0 goto label12;

        $z0 = 1;

     label06:
        $r9 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: org.spongycastle.pqc.crypto.rainbow.Layer[] layers>;

        $i0 = lengthof $r9;

        $r9 = virtualinvoke r2.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: org.spongycastle.pqc.crypto.rainbow.Layer[] getLayers()>();

        $i1 = lengthof $r9;

        if $i0 != $i1 goto label14;

        $r9 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: org.spongycastle.pqc.crypto.rainbow.Layer[] layers>;

        $i0 = lengthof $r9;

        $i0 = $i0 + -1;

     label07:
        if $i0 < 0 goto label13;

        $r9 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: org.spongycastle.pqc.crypto.rainbow.Layer[] layers>;

        $r10 = $r9[$i0];

        $r9 = virtualinvoke r2.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: org.spongycastle.pqc.crypto.rainbow.Layer[] getLayers()>();

        $r11 = $r9[$i0];

        $z1 = virtualinvoke $r10.<org.spongycastle.pqc.crypto.rainbow.Layer: boolean equals(java.lang.Object)>($r11);

        $z0 = $z0 & $z1;

        $i0 = $i0 + -1;

        goto label07;

     label08:
        $z0 = 0;

        goto label02;

     label09:
        $z0 = 0;

        goto label03;

     label10:
        $z0 = 0;

        goto label04;

     label11:
        $z0 = 0;

        goto label05;

     label12:
        $z0 = 0;

        goto label06;

     label13:
        return $z0;

     label14:
        return 0;
    }
    public final java.lang.String getAlgorithm()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        return "Rainbow";
    }
    public short[] getB1()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0;
        short[] r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[] b1>;

        return r1;
    }
    public short[] getB2()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0;
        short[] r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[] b2>;

        return r1;
    }
    public byte[] getEncoded()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0;
        org.spongycastle.pqc.asn1.RainbowPrivateKey r1;
        short[][] $r2, $r9;
        short[] $r3, $r10;
        int[] $r4;
        org.spongycastle.pqc.crypto.rainbow.Layer[] $r5;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r6;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo r7;
        byte[] $r8;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r11;
        org.spongycastle.asn1.DERNull $r12;
        java.io.IOException r13, r14;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        r1 = new org.spongycastle.pqc.asn1.RainbowPrivateKey;

        $r9 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[][] A1inv>;

        $r10 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[] b1>;

        $r2 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[][] A2inv>;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[] b2>;

        $r4 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: int[] vi>;

        $r5 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: org.spongycastle.pqc.crypto.rainbow.Layer[] layers>;

        specialinvoke r1.<org.spongycastle.pqc.asn1.RainbowPrivateKey: void <init>(short[][],short[],short[][],short[],int[],org.spongycastle.pqc.crypto.rainbow.Layer[])>($r9, $r10, $r2, $r3, $r4, $r5);

        r6 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r11 = <org.spongycastle.pqc.asn1.PQCObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rainbow>;

        $r12 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

     label1:
        specialinvoke r6.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r11, $r12);

     label2:
        r7 = new org.spongycastle.asn1.pkcs.PrivateKeyInfo;

     label3:
        specialinvoke r7.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>(r6, r1);

     label4:
        $r8 = virtualinvoke r7.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: byte[] getEncoded()>();

     label5:
        return $r8;

     label6:
        r13 := @caughtexception;

        virtualinvoke r13.<java.io.IOException: void printStackTrace()>();

        return null;

     label7:
        r14 := @caughtexception;

        virtualinvoke r14.<java.io.IOException: void printStackTrace()>();

        return null;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
        catch java.io.IOException from label4 to label5 with label7;
    }
    public java.lang.String getFormat()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        return "PKCS#8";
    }
    public short[][] getInvA1()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0;
        short[][] r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[][] A1inv>;

        return r1;
    }
    public short[][] getInvA2()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0;
        short[][] r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[][] A2inv>;

        return r1;
    }
    public org.spongycastle.pqc.crypto.rainbow.Layer[] getLayers()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0;
        org.spongycastle.pqc.crypto.rainbow.Layer[] r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: org.spongycastle.pqc.crypto.rainbow.Layer[] layers>;

        return r1;
    }
    public int[] getVi()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0;
        int[] r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: int[] vi>;

        return r1;
    }
    public int hashCode()
    {
        org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey r0;
        org.spongycastle.pqc.crypto.rainbow.Layer[] $r1;
        int i0, $i1, $i2;
        short[][] $r2;
        short[] $r3;
        int[] $r4;
        org.spongycastle.pqc.crypto.rainbow.Layer $r5;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey;

        $r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: org.spongycastle.pqc.crypto.rainbow.Layer[] layers>;

        i0 = lengthof $r1;

        i0 = i0 * 37;

        $r2 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[][] A1inv>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(short[][])>($r2);

        i0 = i0 + $i1;

        i0 = i0 * 37;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[] b1>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(short[])>($r3);

        i0 = i0 + $i1;

        i0 = i0 * 37;

        $r2 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[][] A2inv>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(short[][])>($r2);

        i0 = i0 + $i1;

        i0 = i0 * 37;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: short[] b2>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(short[])>($r3);

        i0 = i0 + $i1;

        i0 = i0 * 37;

        $r4 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: int[] vi>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(int[])>($r4);

        $i1 = i0 + $i1;

        $r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: org.spongycastle.pqc.crypto.rainbow.Layer[] layers>;

        i0 = lengthof $r1;

        i0 = i0 + -1;

     label1:
        if i0 < 0 goto label2;

        $i1 = $i1 * 37;

        $r1 = r0.<org.spongycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey: org.spongycastle.pqc.crypto.rainbow.Layer[] layers>;

        $r5 = $r1[i0];

        $i2 = virtualinvoke $r5.<org.spongycastle.pqc.crypto.rainbow.Layer: int hashCode()>();

        $i1 = $i1 + $i2;

        i0 = i0 + -1;

        goto label1;

     label2:
        return $i1;
    }
