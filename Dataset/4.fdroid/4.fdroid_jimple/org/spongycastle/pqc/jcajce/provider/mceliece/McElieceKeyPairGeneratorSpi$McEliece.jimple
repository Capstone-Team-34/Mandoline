org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece extends org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi
org.spongycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator kpg
    public void <init>()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece r0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece;

        specialinvoke r0.<org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi: void <init>(java.lang.String)>("McEliece");

        return;
    }
    public java.security.KeyPair generateKeyPair()
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece r0;
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey $r1;
        org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey $r2;
        org.spongycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator $r3;
        org.spongycastle.crypto.AsymmetricCipherKeyPair $r4;
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r5;
        org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters r6;
        org.spongycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters r7;
        java.security.KeyPair $r8;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece;

        $r3 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece: org.spongycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator kpg>;

        $r4 = virtualinvoke $r3.<org.spongycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator: org.spongycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.crypto.AsymmetricCipherKeyPair: org.spongycastle.crypto.params.AsymmetricKeyParameter getPrivate()>();

        r6 = (org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters) $r5;

        $r5 = virtualinvoke $r4.<org.spongycastle.crypto.AsymmetricCipherKeyPair: org.spongycastle.crypto.params.AsymmetricKeyParameter getPublic()>();

        r7 = (org.spongycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters) $r5;

        $r8 = new java.security.KeyPair;

        $r1 = new org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey;

        specialinvoke $r1.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey: void <init>(org.spongycastle.pqc.crypto.mceliece.McEliecePublicKeyParameters)>(r7);

        $r2 = new org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey;

        specialinvoke $r2.<org.spongycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey: void <init>(org.spongycastle.pqc.crypto.mceliece.McEliecePrivateKeyParameters)>(r6);

        specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r1, $r2);

        return $r8;
    }
    public void initialize(int, java.security.SecureRandom)
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece r0;
        int $i0;
        java.security.SecureRandom $r1;
        org.spongycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec r2;
        java.security.InvalidAlgorithmParameterException $r3;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.security.SecureRandom;

        r2 = new org.spongycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec;

        specialinvoke r2.<org.spongycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec: void <init>()>();

     label1:
        virtualinvoke r0.<org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece: void initialize(java.security.spec.AlgorithmParameterSpec)>(r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
    }
    public void initialize(java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidAlgorithmParameterException
    {
        org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece r0;
        java.security.spec.AlgorithmParameterSpec $r1;
        org.spongycastle.pqc.crypto.mceliece.McElieceKeyGenerationParameters r2;
        org.spongycastle.pqc.crypto.mceliece.McElieceParameters $r3;
        org.spongycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator $r4;
        org.spongycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec r5;
        java.security.SecureRandom $r6;
        int $i0, $i1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece;

        $r1 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $r4 = new org.spongycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator;

        specialinvoke $r4.<org.spongycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator: void <init>()>();

        r0.<org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece: org.spongycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator kpg> = $r4;

        specialinvoke r0.<org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi: void initialize(java.security.spec.AlgorithmParameterSpec)>($r1);

        r5 = (org.spongycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec) $r1;

        r2 = new org.spongycastle.pqc.crypto.mceliece.McElieceKeyGenerationParameters;

        $r6 = new java.security.SecureRandom;

        specialinvoke $r6.<java.security.SecureRandom: void <init>()>();

        $r3 = new org.spongycastle.pqc.crypto.mceliece.McElieceParameters;

        $i0 = virtualinvoke r5.<org.spongycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec: int getM()>();

        $i1 = virtualinvoke r5.<org.spongycastle.pqc.jcajce.spec.ECCKeyGenParameterSpec: int getT()>();

        specialinvoke $r3.<org.spongycastle.pqc.crypto.mceliece.McElieceParameters: void <init>(int,int)>($i0, $i1);

        specialinvoke r2.<org.spongycastle.pqc.crypto.mceliece.McElieceKeyGenerationParameters: void <init>(java.security.SecureRandom,org.spongycastle.pqc.crypto.mceliece.McElieceParameters)>($r6, $r3);

        $r4 = r0.<org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece: org.spongycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator kpg>;

        virtualinvoke $r4.<org.spongycastle.pqc.crypto.mceliece.McElieceKeyPairGenerator: void init(org.spongycastle.crypto.KeyGenerationParameters)>(r2);

        return;
    }
