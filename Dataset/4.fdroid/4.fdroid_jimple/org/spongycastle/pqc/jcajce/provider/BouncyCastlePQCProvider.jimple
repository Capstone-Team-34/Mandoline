org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider extends java.security.Provider implements org.spongycastle.jcajce.provider.config.ConfigurableProvider
private static final java.lang.String[] ALGORITHMS
private static final java.lang.String ALGORITHM_PACKAGE
public static final org.spongycastle.jcajce.provider.config.ProviderConfiguration CONFIGURATION
public static java.lang.String PROVIDER_NAME
private static java.lang.String info
private static final java.util.Map keyInfoConverters
    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.lang.String[] $r1;

        <org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: java.lang.String info> = "BouncyCastle Post-Quantum Security Provider v1.52";

        <org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: java.lang.String PROVIDER_NAME> = "BCPQC";

        <org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: org.spongycastle.jcajce.provider.config.ProviderConfiguration CONFIGURATION> = null;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: java.util.Map keyInfoConverters> = $r0;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "Rainbow";

        $r1[1] = "McEliece";

        <org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: java.lang.String[] ALGORITHMS> = $r1;

        return;
    }
    public void <init>()
    {
        org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider r0;
        java.lang.String $r1, $r2;
        org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider$1 $r3;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider;

        $r2 = <org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: java.lang.String PROVIDER_NAME>;

        $r1 = <org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: java.lang.String info>;

        specialinvoke r0.<java.security.Provider: void <init>(java.lang.String,double,java.lang.String)>($r2, 1.52, $r1);

        $r3 = new org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider$1;

        specialinvoke $r3.<org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider$1: void <init>(org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider)>(r0);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);

        return;
    }
    static void access$000(org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider)
    {
        org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider $r0;

        $r0 := @parameter0: org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider;

        specialinvoke $r0.<org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: void setup()>();

        return;
    }
    public static java.security.PrivateKey getPrivateKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException
    {
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r0;
        java.util.Map $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        java.lang.Object $r4;
        org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter r5;
        java.security.PrivateKey $r6;

        $r0 := @parameter0: org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        $r1 = <org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: java.util.Map keyInfoConverters>;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter) $r4;

        if r5 != null goto label1;

        return null;

     label1:
        $r6 = interfaceinvoke r5.<org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter: java.security.PrivateKey generatePrivate(org.spongycastle.asn1.pkcs.PrivateKeyInfo)>($r0);

        return $r6;
    }
    public static java.security.PublicKey getPublicKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException
    {
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r0;
        java.util.Map $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        java.lang.Object $r4;
        org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter r5;
        java.security.PublicKey $r6;

        $r0 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r1 = <org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: java.util.Map keyInfoConverters>;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter) $r4;

        if r5 != null goto label1;

        return null;

     label1:
        $r6 = interfaceinvoke r5.<org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter: java.security.PublicKey generatePublic(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r0);

        return $r6;
    }
    private void loadAlgorithms(java.lang.String, java.lang.String[])
    {
        org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider r0;
        java.lang.String $r1, $r8;
        java.lang.String[] $r2;
        java.lang.Exception r3;
        int i0, $i1;
        java.lang.Class r4, $r5;
        java.lang.ClassLoader $r6;
        java.lang.StringBuilder $r7;
        java.lang.Object $r9;
        org.spongycastle.jcajce.provider.util.AlgorithmProvider $r10;
        java.lang.InternalError $r11;
        java.lang.ClassNotFoundException $r12;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        i0 = 0;

     label01:
        $i1 = lengthof $r2;

        if i0 == $i1 goto label18;

        r4 = null;

     label02:
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label03:
        if $r6 == null goto label11;

        $r7 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label05:
        $r8 = $r2[i0];

     label06:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$Mappings");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r6.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r8);

     label07:
        r4 = $r5;

     label08:
        if r4 == null goto label10;

     label09:
        $r9 = virtualinvoke r4.<java.lang.Class: java.lang.Object newInstance()>();

        $r10 = (org.spongycastle.jcajce.provider.util.AlgorithmProvider) $r9;

        virtualinvoke $r10.<org.spongycastle.jcajce.provider.util.AlgorithmProvider: void configure(org.spongycastle.jcajce.provider.config.ConfigurableProvider)>(r0);

     label10:
        i0 = i0 + 1;

        goto label01;

     label11:
        $r7 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label13:
        $r8 = $r2[i0];

     label14:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$Mappings");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r8);

     label15:
        r4 = $r5;

        goto label08;

     label16:
        r3 := @caughtexception;

        $r11 = new java.lang.InternalError;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create instance of ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = $r2[i0];

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$Mappings : ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.InternalError: void <init>(java.lang.String)>($r1);

        throw $r11;

     label17:
        $r12 := @caughtexception;

        goto label08;

     label18:
        return;

        catch java.lang.ClassNotFoundException from label02 to label03 with label17;
        catch java.lang.ClassNotFoundException from label04 to label05 with label17;
        catch java.lang.ClassNotFoundException from label06 to label07 with label17;
        catch java.lang.Exception from label09 to label10 with label16;
        catch java.lang.ClassNotFoundException from label12 to label13 with label17;
        catch java.lang.ClassNotFoundException from label14 to label15 with label17;
    }
    private void setup()
    {
        org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider r0;
        java.lang.String[] $r1;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider;

        $r1 = <org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: java.lang.String[] ALGORITHMS>;

        specialinvoke r0.<org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: void loadAlgorithms(java.lang.String,java.lang.String[])>("org.spongycastle.pqc.jcajce.provider.", $r1);

        return;
    }
    public void addAlgorithm(java.lang.String, java.lang.String)
    {
        org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("duplicate provider key (");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") found");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label1:
        virtualinvoke r0.<org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }
    public void addAlgorithm(java.lang.String, org.spongycastle.asn1.ASN1ObjectIdentifier, java.lang.String)
    {
        org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider r0;
        java.lang.String $r1, $r3, $r5;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        java.lang.StringBuilder $r4;
        boolean $z0;
        java.lang.IllegalStateException $r6;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: boolean containsKey(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("primary key (");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not found");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r6;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: void addAlgorithm(java.lang.String,java.lang.String)>($r5, $r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".OID.");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: void addAlgorithm(java.lang.String,java.lang.String)>($r1, $r3);

        return;
    }
    public void addKeyInfoConverter(org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter)
    {
        org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter $r2;
        java.util.Map $r3;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: org.spongycastle.jcajce.provider.util.AsymmetricKeyInfoConverter;

        $r3 = <org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: java.util.Map keyInfoConverters>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }
    public boolean hasAlgorithm(java.lang.String, java.lang.String)
    {
        org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider r0;
        java.lang.String $r1, $r2, $r4;
        java.lang.StringBuilder $r3;
        boolean $z0;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: boolean containsKey(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alg.Alias.");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public void setParameter(java.lang.String, java.lang.Object)
    {
        org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        org.spongycastle.jcajce.provider.config.ProviderConfiguration $r4;

        r0 := @this: org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r4 = <org.spongycastle.pqc.jcajce.provider.BouncyCastlePQCProvider: org.spongycastle.jcajce.provider.config.ProviderConfiguration CONFIGURATION>;

        entermonitor $r4;

     label1:
        exitmonitor $r4;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r4;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
