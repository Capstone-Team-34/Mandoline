org.spongycastle.pqc.asn1.McEliecePrivateKey extends org.spongycastle.asn1.ASN1Object
private byte[] encField
private byte[] encGp
private byte[] encH
private byte[] encP1
private byte[] encP2
private byte[] encSInv
private byte[][] encqInv
private int k
private int n
private org.spongycastle.asn1.ASN1ObjectIdentifier oid
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier, int, int, org.spongycastle.pqc.math.linearalgebra.GF2mField, org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.spongycastle.pqc.math.linearalgebra.GF2Matrix, org.spongycastle.pqc.math.linearalgebra.Permutation, org.spongycastle.pqc.math.linearalgebra.Permutation, org.spongycastle.pqc.math.linearalgebra.GF2Matrix, org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[])
    {
        org.spongycastle.pqc.asn1.McEliecePrivateKey r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r2;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r3;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r4, $r7;
        org.spongycastle.pqc.math.linearalgebra.Permutation $r5, $r6;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] $r8;
        byte[] $r9;
        byte[][] $r10;

        r0 := @this: org.spongycastle.pqc.asn1.McEliecePrivateKey;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: org.spongycastle.pqc.math.linearalgebra.GF2mField;

        $r3 := @parameter4: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM;

        $r4 := @parameter5: org.spongycastle.pqc.math.linearalgebra.GF2Matrix;

        $r5 := @parameter6: org.spongycastle.pqc.math.linearalgebra.Permutation;

        $r6 := @parameter7: org.spongycastle.pqc.math.linearalgebra.Permutation;

        $r7 := @parameter8: org.spongycastle.pqc.math.linearalgebra.GF2Matrix;

        $r8 := @parameter9: org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: org.spongycastle.asn1.ASN1ObjectIdentifier oid> = $r1;

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: int n> = $i0;

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: int k> = $i1;

        $r9 = virtualinvoke $r2.<org.spongycastle.pqc.math.linearalgebra.GF2mField: byte[] getEncoded()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encField> = $r9;

        $r9 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: byte[] getEncoded()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encGp> = $r9;

        $r9 = virtualinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.GF2Matrix: byte[] getEncoded()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encSInv> = $r9;

        $r9 = virtualinvoke $r5.<org.spongycastle.pqc.math.linearalgebra.Permutation: byte[] getEncoded()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encP1> = $r9;

        $r9 = virtualinvoke $r6.<org.spongycastle.pqc.math.linearalgebra.Permutation: byte[] getEncoded()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encP2> = $r9;

        $r9 = virtualinvoke $r7.<org.spongycastle.pqc.math.linearalgebra.GF2Matrix: byte[] getEncoded()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encH> = $r9;

        $i0 = lengthof $r8;

        $r10 = newarray (byte[])[$i0];

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[][] encqInv> = $r10;

        $i0 = 0;

     label1:
        $i1 = lengthof $r8;

        if $i0 == $i1 goto label2;

        $r10 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[][] encqInv>;

        $r3 = $r8[$i0];

        $r9 = virtualinvoke $r3.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: byte[] getEncoded()>();

        $r10[$i0] = $r9;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.pqc.asn1.McEliecePrivateKey r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        byte[][] $r2;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r4;
        org.spongycastle.asn1.ASN1Integer $r5;
        java.math.BigInteger $r6;
        int $i0, $i1;
        org.spongycastle.asn1.ASN1OctetString $r7;
        byte[] $r8;

        r0 := @this: org.spongycastle.pqc.asn1.McEliecePrivateKey;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r4 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r3;

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: org.spongycastle.asn1.ASN1ObjectIdentifier oid> = $r4;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r5 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: int n> = $i0;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(2);

        $r5 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: int k> = $i0;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(3);

        $r7 = (org.spongycastle.asn1.ASN1OctetString) $r3;

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encField> = $r8;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(4);

        $r7 = (org.spongycastle.asn1.ASN1OctetString) $r3;

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encGp> = $r8;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(5);

        $r7 = (org.spongycastle.asn1.ASN1OctetString) $r3;

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encSInv> = $r8;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(6);

        $r7 = (org.spongycastle.asn1.ASN1OctetString) $r3;

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encP1> = $r8;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(7);

        $r7 = (org.spongycastle.asn1.ASN1OctetString) $r3;

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encP2> = $r8;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(8);

        $r7 = (org.spongycastle.asn1.ASN1OctetString) $r3;

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encH> = $r8;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(9);

        $r1 = (org.spongycastle.asn1.ASN1Sequence) $r3;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r2 = newarray (byte[])[$i0];

        r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[][] encqInv> = $r2;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 >= $i1 goto label2;

        $r2 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[][] encqInv>;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r7 = (org.spongycastle.asn1.ASN1OctetString) $r3;

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r2[$i0] = $r8;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
    public static org.spongycastle.pqc.asn1.McEliecePrivateKey getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.pqc.asn1.McEliecePrivateKey r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.pqc.asn1.McEliecePrivateKey;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.pqc.asn1.McEliecePrivateKey) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.pqc.asn1.McEliecePrivateKey;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.pqc.asn1.McEliecePrivateKey: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2mField getField()
    {
        org.spongycastle.pqc.asn1.McEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.pqc.asn1.McEliecePrivateKey;

        $r1 = new org.spongycastle.pqc.math.linearalgebra.GF2mField;

        $r2 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encField>;

        specialinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2mField: void <init>(byte[])>($r2);

        return $r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM getGoppaPoly()
    {
        org.spongycastle.pqc.asn1.McEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r1;
        byte[] $r2;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r3;

        r0 := @this: org.spongycastle.pqc.asn1.McEliecePrivateKey;

        $r1 = new org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM;

        $r3 = virtualinvoke r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2mField getField()>();

        $r2 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encGp>;

        specialinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2mField,byte[])>($r3, $r2);

        return $r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2Matrix getH()
    {
        org.spongycastle.pqc.asn1.McEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.pqc.asn1.McEliecePrivateKey;

        $r1 = new org.spongycastle.pqc.math.linearalgebra.GF2Matrix;

        $r2 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encH>;

        specialinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Matrix: void <init>(byte[])>($r2);

        return $r1;
    }
    public int getK()
    {
        org.spongycastle.pqc.asn1.McEliecePrivateKey r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.asn1.McEliecePrivateKey;

        i0 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: int k>;

        return i0;
    }
    public int getN()
    {
        org.spongycastle.pqc.asn1.McEliecePrivateKey r0;
        int i0;

        r0 := @this: org.spongycastle.pqc.asn1.McEliecePrivateKey;

        i0 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: int n>;

        return i0;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getOID()
    {
        org.spongycastle.pqc.asn1.McEliecePrivateKey r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier r1;

        r0 := @this: org.spongycastle.pqc.asn1.McEliecePrivateKey;

        r1 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: org.spongycastle.asn1.ASN1ObjectIdentifier oid>;

        return r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.Permutation getP1()
    {
        org.spongycastle.pqc.asn1.McEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.Permutation $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.pqc.asn1.McEliecePrivateKey;

        $r1 = new org.spongycastle.pqc.math.linearalgebra.Permutation;

        $r2 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encP1>;

        specialinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.Permutation: void <init>(byte[])>($r2);

        return $r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.Permutation getP2()
    {
        org.spongycastle.pqc.asn1.McEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.Permutation $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.pqc.asn1.McEliecePrivateKey;

        $r1 = new org.spongycastle.pqc.math.linearalgebra.Permutation;

        $r2 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encP2>;

        specialinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.Permutation: void <init>(byte[])>($r2);

        return $r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] getQInv()
    {
        org.spongycastle.pqc.asn1.McEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] r1;
        org.spongycastle.pqc.math.linearalgebra.GF2mField $r2;
        byte[][] $r3;
        int $i0, $i1;
        org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM $r4;
        byte[] $r5;

        r0 := @this: org.spongycastle.pqc.asn1.McEliecePrivateKey;

        $r3 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[][] encqInv>;

        $i0 = lengthof $r3;

        r1 = newarray (org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM)[$i0];

        $r2 = virtualinvoke r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: org.spongycastle.pqc.math.linearalgebra.GF2mField getField()>();

        $i0 = 0;

     label1:
        $r3 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[][] encqInv>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label2;

        $r4 = new org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM;

        $r3 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[][] encqInv>;

        $r5 = $r3[$i0];

        specialinvoke $r4.<org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM: void <init>(org.spongycastle.pqc.math.linearalgebra.GF2mField,byte[])>($r2, $r5);

        r1[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public org.spongycastle.pqc.math.linearalgebra.GF2Matrix getSInv()
    {
        org.spongycastle.pqc.asn1.McEliecePrivateKey r0;
        org.spongycastle.pqc.math.linearalgebra.GF2Matrix $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.pqc.asn1.McEliecePrivateKey;

        $r1 = new org.spongycastle.pqc.math.linearalgebra.GF2Matrix;

        $r2 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encSInv>;

        specialinvoke $r1.<org.spongycastle.pqc.math.linearalgebra.GF2Matrix: void <init>(byte[])>($r2);

        return $r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.pqc.asn1.McEliecePrivateKey r0;
        org.spongycastle.asn1.ASN1EncodableVector r1, r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        org.spongycastle.asn1.ASN1Integer $r4;
        int $i0, $i2;
        long $l1;
        org.spongycastle.asn1.DEROctetString $r5;
        byte[] $r6;
        byte[][] $r7;
        org.spongycastle.asn1.DERSequence $r8;

        r0 := @this: org.spongycastle.pqc.asn1.McEliecePrivateKey;

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: org.spongycastle.asn1.ASN1ObjectIdentifier oid>;

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r4 = new org.spongycastle.asn1.ASN1Integer;

        $i0 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: int n>;

        $l1 = (long) $i0;

        specialinvoke $r4.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>($l1);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r4 = new org.spongycastle.asn1.ASN1Integer;

        $i0 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: int k>;

        $l1 = (long) $i0;

        specialinvoke $r4.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>($l1);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r5 = new org.spongycastle.asn1.DEROctetString;

        $r6 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encField>;

        specialinvoke $r5.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r6);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $r5 = new org.spongycastle.asn1.DEROctetString;

        $r6 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encGp>;

        specialinvoke $r5.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r6);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $r5 = new org.spongycastle.asn1.DEROctetString;

        $r6 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encSInv>;

        specialinvoke $r5.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r6);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $r5 = new org.spongycastle.asn1.DEROctetString;

        $r6 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encP1>;

        specialinvoke $r5.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r6);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $r5 = new org.spongycastle.asn1.DEROctetString;

        $r6 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encP2>;

        specialinvoke $r5.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r6);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $r5 = new org.spongycastle.asn1.DEROctetString;

        $r6 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[] encH>;

        specialinvoke $r5.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r6);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $i0 = 0;

     label1:
        $r7 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[][] encqInv>;

        $i2 = lengthof $r7;

        if $i0 >= $i2 goto label2;

        $r5 = new org.spongycastle.asn1.DEROctetString;

        $r7 = r0.<org.spongycastle.pqc.asn1.McEliecePrivateKey: byte[][] encqInv>;

        $r6 = $r7[$i0];

        specialinvoke $r5.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r6);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r8 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r8.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r8);

        $r8 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r8.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r2);

        return $r8;
    }
