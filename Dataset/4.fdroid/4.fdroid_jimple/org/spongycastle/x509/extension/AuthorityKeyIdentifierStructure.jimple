org.spongycastle.x509.extension.AuthorityKeyIdentifierStructure extends org.spongycastle.asn1.x509.AuthorityKeyIdentifier
    public void <init>(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        org.spongycastle.x509.extension.AuthorityKeyIdentifierStructure r0;
        java.security.PublicKey $r1;
        org.spongycastle.asn1.ASN1Sequence $r2;

        r0 := @this: org.spongycastle.x509.extension.AuthorityKeyIdentifierStructure;

        $r1 := @parameter0: java.security.PublicKey;

        $r2 = staticinvoke <org.spongycastle.x509.extension.AuthorityKeyIdentifierStructure: org.spongycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)>($r1);

        specialinvoke r0.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r2);

        return;
    }
    public void <init>(java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException
    {
        org.spongycastle.x509.extension.AuthorityKeyIdentifierStructure r0;
        java.security.cert.X509Certificate $r1;
        org.spongycastle.asn1.ASN1Sequence $r2;

        r0 := @this: org.spongycastle.x509.extension.AuthorityKeyIdentifierStructure;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = staticinvoke <org.spongycastle.x509.extension.AuthorityKeyIdentifierStructure: org.spongycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)>($r1);

        specialinvoke r0.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r2);

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.Extension)
    {
        org.spongycastle.x509.extension.AuthorityKeyIdentifierStructure r0;
        org.spongycastle.asn1.x509.Extension $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.ASN1Sequence $r3;

        r0 := @this: org.spongycastle.x509.extension.AuthorityKeyIdentifierStructure;

        $r1 := @parameter0: org.spongycastle.asn1.x509.Extension;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1Encodable getParsedValue()>();

        $r3 = (org.spongycastle.asn1.ASN1Sequence) $r2;

        specialinvoke r0.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r3);

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.X509Extension)
    {
        org.spongycastle.x509.extension.AuthorityKeyIdentifierStructure r0;
        org.spongycastle.asn1.x509.X509Extension $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.ASN1Sequence $r3;

        r0 := @this: org.spongycastle.x509.extension.AuthorityKeyIdentifierStructure;

        $r1 := @parameter0: org.spongycastle.asn1.x509.X509Extension;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.X509Extension: org.spongycastle.asn1.ASN1Encodable getParsedValue()>();

        $r3 = (org.spongycastle.asn1.ASN1Sequence) $r2;

        specialinvoke r0.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r3);

        return;
    }
    public void <init>(byte[]) throws java.io.IOException
    {
        org.spongycastle.x509.extension.AuthorityKeyIdentifierStructure r0;
        byte[] $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        org.spongycastle.asn1.ASN1Sequence $r3;

        r0 := @this: org.spongycastle.x509.extension.AuthorityKeyIdentifierStructure;

        $r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.spongycastle.x509.extension.X509ExtensionUtil: org.spongycastle.asn1.ASN1Primitive fromExtensionValue(byte[])>($r1);

        $r3 = (org.spongycastle.asn1.ASN1Sequence) $r2;

        specialinvoke r0.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r3);

        return;
    }
    private static org.spongycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate $r0;
        java.lang.Exception r1;
        int $i0;
        org.spongycastle.asn1.x509.GeneralName r2;
        org.spongycastle.jce.X509Principal $r3;
        java.security.PublicKey $r4;
        byte[] $r5;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r6;
        org.spongycastle.asn1.x509.AuthorityKeyIdentifier $r7;
        org.spongycastle.asn1.x509.GeneralNames $r8;
        java.math.BigInteger $r9;
        org.spongycastle.asn1.ASN1Primitive $r10;
        org.spongycastle.asn1.ASN1Sequence $r11;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r12;
        java.lang.String $r13;
        org.spongycastle.asn1.ASN1OctetString r14;
        java.security.cert.CertificateParsingException $r15;
        java.lang.StringBuilder $r16;

        $r0 := @parameter0: java.security.cert.X509Certificate;

     label01:
        $i0 = virtualinvoke $r0.<java.security.cert.X509Certificate: int getVersion()>();

     label02:
        if $i0 == 3 goto label07;

        r2 = new org.spongycastle.asn1.x509.GeneralName;

     label03:
        $r3 = staticinvoke <org.spongycastle.jce.PrincipalUtil: org.spongycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate)>($r0);

        specialinvoke r2.<org.spongycastle.asn1.x509.GeneralName: void <init>(org.spongycastle.asn1.x509.X509Name)>($r3);

        $r4 = virtualinvoke $r0.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $r5 = interfaceinvoke $r4.<java.security.PublicKey: byte[] getEncoded()>();

        $r6 = staticinvoke <org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r5);

     label04:
        $r7 = new org.spongycastle.asn1.x509.AuthorityKeyIdentifier;

        $r8 = new org.spongycastle.asn1.x509.GeneralNames;

     label05:
        specialinvoke $r8.<org.spongycastle.asn1.x509.GeneralNames: void <init>(org.spongycastle.asn1.x509.GeneralName)>(r2);

        $r9 = virtualinvoke $r0.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        specialinvoke $r7.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo,org.spongycastle.asn1.x509.GeneralNames,java.math.BigInteger)>($r6, $r8, $r9);

        $r10 = virtualinvoke $r7.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r11 = (org.spongycastle.asn1.ASN1Sequence) $r10;

     label06:
        return $r11;

     label07:
        r2 = new org.spongycastle.asn1.x509.GeneralName;

     label08:
        $r3 = staticinvoke <org.spongycastle.jce.PrincipalUtil: org.spongycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate)>($r0);

        specialinvoke r2.<org.spongycastle.asn1.x509.GeneralName: void <init>(org.spongycastle.asn1.x509.X509Name)>($r3);

     label09:
        $r12 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier subjectKeyIdentifier>;

     label10:
        $r13 = virtualinvoke $r12.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r5 = virtualinvoke $r0.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r13);

     label11:
        if $r5 == null goto label18;

     label12:
        $r10 = staticinvoke <org.spongycastle.x509.extension.X509ExtensionUtil: org.spongycastle.asn1.ASN1Primitive fromExtensionValue(byte[])>($r5);

        r14 = (org.spongycastle.asn1.ASN1OctetString) $r10;

     label13:
        $r7 = new org.spongycastle.asn1.x509.AuthorityKeyIdentifier;

     label14:
        $r5 = virtualinvoke r14.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

     label15:
        $r8 = new org.spongycastle.asn1.x509.GeneralNames;

     label16:
        specialinvoke $r8.<org.spongycastle.asn1.x509.GeneralNames: void <init>(org.spongycastle.asn1.x509.GeneralName)>(r2);

        $r9 = virtualinvoke $r0.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        specialinvoke $r7.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(byte[],org.spongycastle.asn1.x509.GeneralNames,java.math.BigInteger)>($r5, $r8, $r9);

        $r10 = virtualinvoke $r7.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r11 = (org.spongycastle.asn1.ASN1Sequence) $r10;

     label17:
        return $r11;

     label18:
        $r4 = virtualinvoke $r0.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $r5 = interfaceinvoke $r4.<java.security.PublicKey: byte[] getEncoded()>();

        $r6 = staticinvoke <org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r5);

     label19:
        $r7 = new org.spongycastle.asn1.x509.AuthorityKeyIdentifier;

        $r8 = new org.spongycastle.asn1.x509.GeneralNames;

     label20:
        specialinvoke $r8.<org.spongycastle.asn1.x509.GeneralNames: void <init>(org.spongycastle.asn1.x509.GeneralName)>(r2);

        $r9 = virtualinvoke $r0.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        specialinvoke $r7.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo,org.spongycastle.asn1.x509.GeneralNames,java.math.BigInteger)>($r6, $r8, $r9);

        $r10 = virtualinvoke $r7.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r11 = (org.spongycastle.asn1.ASN1Sequence) $r10;

     label21:
        return $r11;

     label22:
        r1 := @caughtexception;

        $r15 = new java.security.cert.CertificateParsingException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception extracting certificate details: ");

        $r13 = virtualinvoke r1.<java.lang.Exception: java.lang.String toString()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r13);

        throw $r15;

        catch java.lang.Exception from label01 to label02 with label22;
        catch java.lang.Exception from label03 to label04 with label22;
        catch java.lang.Exception from label05 to label06 with label22;
        catch java.lang.Exception from label08 to label09 with label22;
        catch java.lang.Exception from label10 to label11 with label22;
        catch java.lang.Exception from label12 to label13 with label22;
        catch java.lang.Exception from label14 to label15 with label22;
        catch java.lang.Exception from label16 to label17 with label22;
        catch java.lang.Exception from label18 to label19 with label22;
        catch java.lang.Exception from label20 to label21 with label22;
    }
    private static org.spongycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        java.security.PublicKey $r0;
        java.lang.Exception r1;
        byte[] $r2;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r3;
        org.spongycastle.asn1.x509.AuthorityKeyIdentifier $r4;
        org.spongycastle.asn1.ASN1Primitive $r5;
        org.spongycastle.asn1.ASN1Sequence $r6;
        java.security.InvalidKeyException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        $r0 := @parameter0: java.security.PublicKey;

     label1:
        $r2 = interfaceinvoke $r0.<java.security.PublicKey: byte[] getEncoded()>();

        $r3 = staticinvoke <org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r2);

     label2:
        $r4 = new org.spongycastle.asn1.x509.AuthorityKeyIdentifier;

     label3:
        specialinvoke $r4.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r3);

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r6 = (org.spongycastle.asn1.ASN1Sequence) $r5;

     label4:
        return $r6;

     label5:
        r1 := @caughtexception;

        $r7 = new java.security.InvalidKeyException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t process key: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r9);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
