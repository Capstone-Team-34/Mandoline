org.spongycastle.x509.extension.X509ExtensionUtil extends java.lang.Object
    public void <init>()
    {
        org.spongycastle.x509.extension.X509ExtensionUtil r0;

        r0 := @this: org.spongycastle.x509.extension.X509ExtensionUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static org.spongycastle.asn1.ASN1Primitive fromExtensionValue(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.ASN1OctetString r2;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r0);

        r2 = (org.spongycastle.asn1.ASN1OctetString) $r1;

        $r0 = virtualinvoke r2.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r0);

        return $r1;
    }
    private static java.util.Collection getAlternativeNames(byte[]) throws java.security.cert.CertificateParsingException
    {
        byte[] $r0;
        java.lang.Exception r1;
        java.util.ArrayList r2, r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        org.spongycastle.asn1.ASN1Sequence $r5;
        java.util.Enumeration $r6;
        boolean $z0;
        java.lang.Object $r7;
        org.spongycastle.asn1.x509.GeneralName $r8;
        int $i0;
        java.lang.Integer $r9;
        java.io.IOException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;
        java.security.cert.CertificateParsingException $r13;
        org.spongycastle.asn1.ASN1Encodable $r14;
        org.spongycastle.asn1.x500.X500Name $r15;
        org.spongycastle.asn1.ASN1String $r16;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r17;
        org.spongycastle.asn1.ASN1OctetString $r18;
        java.util.Collection $r19;
        java.util.List r20;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label01;

        r20 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return r20;

     label01:
        r3 = new java.util.ArrayList;

     label02:
        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r4 = staticinvoke <org.spongycastle.x509.extension.X509ExtensionUtil: org.spongycastle.asn1.ASN1Primitive fromExtensionValue(byte[])>($r0);

        $r5 = staticinvoke <org.spongycastle.asn1.DERSequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label03:
        $z0 = interfaceinvoke $r6.<java.util.Enumeration: boolean hasMoreElements()>();

     label04:
        if $z0 == 0 goto label23;

     label05:
        $r7 = interfaceinvoke $r6.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r8 = staticinvoke <org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.x509.GeneralName getInstance(java.lang.Object)>($r7);

     label06:
        r2 = new java.util.ArrayList;

     label07:
        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $i0 = virtualinvoke $r8.<org.spongycastle.asn1.x509.GeneralName: int getTagNo()>();

        $r9 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9);

        $i0 = virtualinvoke $r8.<org.spongycastle.asn1.x509.GeneralName: int getTagNo()>();

     label08:
        lookupswitch($i0)
        {
            case 0: goto label12;
            case 1: goto label17;
            case 2: goto label17;
            case 3: goto label12;
            case 4: goto label15;
            case 5: goto label12;
            case 6: goto label17;
            case 7: goto label21;
            case 8: goto label19;
            default: goto label09;
        };

     label09:
        $r10 = new java.io.IOException;

        $r11 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad tag number: ");

        $i0 = virtualinvoke $r8.<org.spongycastle.asn1.x509.GeneralName: int getTagNo()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r10;

     label11:
        r1 := @caughtexception;

        $r13 = new java.security.cert.CertificateParsingException;

        $r12 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r13.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r12);

        throw $r13;

     label12:
        $r14 = virtualinvoke $r8.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r4 = interfaceinvoke $r14.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);

     label13:
        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r2);

     label14:
        goto label03;

     label15:
        $r14 = virtualinvoke $r8.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r15 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r14);

        $r12 = virtualinvoke $r15.<org.spongycastle.asn1.x500.X500Name: java.lang.String toString()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12);

     label16:
        goto label13;

     label17:
        $r14 = virtualinvoke $r8.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r16 = (org.spongycastle.asn1.ASN1String) $r14;

        $r12 = interfaceinvoke $r16.<org.spongycastle.asn1.ASN1String: java.lang.String getString()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12);

     label18:
        goto label13;

     label19:
        $r14 = virtualinvoke $r8.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r17 = staticinvoke <org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>($r14);

        $r12 = virtualinvoke $r17.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12);

     label20:
        goto label13;

     label21:
        $r14 = virtualinvoke $r8.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r18 = staticinvoke <org.spongycastle.asn1.DEROctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r14);

        $r0 = virtualinvoke $r18.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r0);

     label22:
        goto label13;

     label23:
        $r19 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>(r3);

     label24:
        return $r19;

        catch java.lang.Exception from label02 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label10 to label11 with label11;
        catch java.lang.Exception from label12 to label14 with label11;
        catch java.lang.Exception from label15 to label16 with label11;
        catch java.lang.Exception from label17 to label18 with label11;
        catch java.lang.Exception from label19 to label20 with label11;
        catch java.lang.Exception from label21 to label22 with label11;
        catch java.lang.Exception from label23 to label24 with label11;
    }
    public static java.util.Collection getIssuerAlternativeNames(java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate $r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.lang.String $r2;
        byte[] $r3;
        java.util.Collection $r4;

        $r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 = <org.spongycastle.asn1.x509.X509Extension: org.spongycastle.asn1.ASN1ObjectIdentifier issuerAlternativeName>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r3 = virtualinvoke $r0.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r2);

        $r4 = staticinvoke <org.spongycastle.x509.extension.X509ExtensionUtil: java.util.Collection getAlternativeNames(byte[])>($r3);

        return $r4;
    }
    public static java.util.Collection getSubjectAlternativeNames(java.security.cert.X509Certificate) throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate $r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.lang.String $r2;
        byte[] $r3;
        java.util.Collection $r4;

        $r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 = <org.spongycastle.asn1.x509.X509Extension: org.spongycastle.asn1.ASN1ObjectIdentifier subjectAlternativeName>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r3 = virtualinvoke $r0.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r2);

        $r4 = staticinvoke <org.spongycastle.x509.extension.X509ExtensionUtil: java.util.Collection getAlternativeNames(byte[])>($r3);

        return $r4;
    }
