org.spongycastle.x509.X509CertStoreSelector extends java.security.cert.X509CertSelector implements org.spongycastle.util.Selector
    public void <init>()
    {
        org.spongycastle.x509.X509CertStoreSelector r0;

        r0 := @this: org.spongycastle.x509.X509CertStoreSelector;

        specialinvoke r0.<java.security.cert.X509CertSelector: void <init>()>();

        return;
    }
    public static org.spongycastle.x509.X509CertStoreSelector getInstance(java.security.cert.X509CertSelector)
    {
        java.security.cert.X509CertSelector $r0;
        org.spongycastle.x509.X509CertStoreSelector r1;
        java.io.IOException r2;
        java.lang.IllegalArgumentException $r3;
        byte[] $r4;
        int $i0;
        java.security.cert.X509Certificate $r5;
        java.util.Date $r6;
        boolean $z0;
        java.util.Collection $r7;
        java.util.Set $r8;
        java.lang.String $r9;
        javax.security.auth.x500.X500Principal $r10;
        boolean[] $r11;
        java.math.BigInteger $r12;
        java.security.PublicKey $r13;
        java.lang.StringBuilder $r14;

        $r0 := @parameter0: java.security.cert.X509CertSelector;

        if $r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cannot create from null selector");

        throw $r3;

     label1:
        r1 = new org.spongycastle.x509.X509CertStoreSelector;

        specialinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void <init>()>();

        $r4 = virtualinvoke $r0.<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setAuthorityKeyIdentifier(byte[])>($r4);

        $i0 = virtualinvoke $r0.<java.security.cert.X509CertSelector: int getBasicConstraints()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setBasicConstraints(int)>($i0);

        $r5 = virtualinvoke $r0.<java.security.cert.X509CertSelector: java.security.cert.X509Certificate getCertificate()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setCertificate(java.security.cert.X509Certificate)>($r5);

        $r6 = virtualinvoke $r0.<java.security.cert.X509CertSelector: java.util.Date getCertificateValid()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setCertificateValid(java.util.Date)>($r6);

        $z0 = virtualinvoke $r0.<java.security.cert.X509CertSelector: boolean getMatchAllSubjectAltNames()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setMatchAllSubjectAltNames(boolean)>($z0);

     label2:
        $r7 = virtualinvoke $r0.<java.security.cert.X509CertSelector: java.util.Collection getPathToNames()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setPathToNames(java.util.Collection)>($r7);

        $r8 = virtualinvoke $r0.<java.security.cert.X509CertSelector: java.util.Set getExtendedKeyUsage()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setExtendedKeyUsage(java.util.Set)>($r8);

        $r4 = virtualinvoke $r0.<java.security.cert.X509CertSelector: byte[] getNameConstraints()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setNameConstraints(byte[])>($r4);

        $r8 = virtualinvoke $r0.<java.security.cert.X509CertSelector: java.util.Set getPolicy()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setPolicy(java.util.Set)>($r8);

        $r9 = virtualinvoke $r0.<java.security.cert.X509CertSelector: java.lang.String getSubjectPublicKeyAlgID()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setSubjectPublicKeyAlgID(java.lang.String)>($r9);

        $r7 = virtualinvoke $r0.<java.security.cert.X509CertSelector: java.util.Collection getSubjectAlternativeNames()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setSubjectAlternativeNames(java.util.Collection)>($r7);

     label3:
        $r10 = virtualinvoke $r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal getIssuer()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setIssuer(javax.security.auth.x500.X500Principal)>($r10);

        $r11 = virtualinvoke $r0.<java.security.cert.X509CertSelector: boolean[] getKeyUsage()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setKeyUsage(boolean[])>($r11);

        $r6 = virtualinvoke $r0.<java.security.cert.X509CertSelector: java.util.Date getPrivateKeyValid()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setPrivateKeyValid(java.util.Date)>($r6);

        $r12 = virtualinvoke $r0.<java.security.cert.X509CertSelector: java.math.BigInteger getSerialNumber()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setSerialNumber(java.math.BigInteger)>($r12);

        $r10 = virtualinvoke $r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal getSubject()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setSubject(javax.security.auth.x500.X500Principal)>($r10);

        $r4 = virtualinvoke $r0.<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setSubjectKeyIdentifier(byte[])>($r4);

        $r13 = virtualinvoke $r0.<java.security.cert.X509CertSelector: java.security.PublicKey getSubjectPublicKey()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CertStoreSelector: void setSubjectPublicKey(java.security.PublicKey)>($r13);

        return r1;

     label4:
        r2 := @caughtexception;

        $r3 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error in passed in selector: ");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

        catch java.io.IOException from label2 to label3 with label4;
    }
    public java.lang.Object clone()
    {
        org.spongycastle.x509.X509CertStoreSelector r0;
        java.lang.Object $r1;

        r0 := @this: org.spongycastle.x509.X509CertStoreSelector;

        $r1 = specialinvoke r0.<java.security.cert.X509CertSelector: java.lang.Object clone()>();

        r0 = (org.spongycastle.x509.X509CertStoreSelector) $r1;

        return r0;
    }
    public boolean match(java.lang.Object)
    {
        org.spongycastle.x509.X509CertStoreSelector r0;
        java.lang.Object $r1;
        boolean $z0;
        java.security.cert.X509Certificate r2;

        r0 := @this: org.spongycastle.x509.X509CertStoreSelector;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.security.cert.X509Certificate;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.security.cert.X509Certificate) $r1;

        $z0 = specialinvoke r0.<java.security.cert.X509CertSelector: boolean match(java.security.cert.Certificate)>(r2);

        return $z0;
    }
    public boolean match(java.security.cert.Certificate)
    {
        org.spongycastle.x509.X509CertStoreSelector r0;
        java.security.cert.Certificate $r1;
        boolean $z0;

        r0 := @this: org.spongycastle.x509.X509CertStoreSelector;

        $r1 := @parameter0: java.security.cert.Certificate;

        $z0 = virtualinvoke r0.<org.spongycastle.x509.X509CertStoreSelector: boolean match(java.lang.Object)>($r1);

        return $z0;
    }
