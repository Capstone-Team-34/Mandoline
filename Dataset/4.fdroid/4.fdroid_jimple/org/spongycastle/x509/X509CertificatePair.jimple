org.spongycastle.x509.X509CertificatePair extends java.lang.Object
private java.security.cert.X509Certificate forward
private java.security.cert.X509Certificate reverse
    public void <init>(java.security.cert.X509Certificate, java.security.cert.X509Certificate)
    {
        org.spongycastle.x509.X509CertificatePair r0;
        java.security.cert.X509Certificate $r1, $r2;

        r0 := @this: org.spongycastle.x509.X509CertificatePair;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 := @parameter1: java.security.cert.X509Certificate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate forward> = $r1;

        r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate reverse> = $r2;

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.CertificatePair) throws java.security.cert.CertificateParsingException
    {
        org.spongycastle.x509.X509CertificatePair r0;
        org.spongycastle.asn1.x509.CertificatePair $r1;
        org.spongycastle.asn1.x509.Certificate $r2;
        org.spongycastle.jce.provider.X509CertificateObject $r3;

        r0 := @this: org.spongycastle.x509.X509CertificatePair;

        $r1 := @parameter0: org.spongycastle.asn1.x509.CertificatePair;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificatePair: org.spongycastle.asn1.x509.Certificate getForward()>();

        if $r2 == null goto label1;

        $r3 = new org.spongycastle.jce.provider.X509CertificateObject;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificatePair: org.spongycastle.asn1.x509.Certificate getForward()>();

        specialinvoke $r3.<org.spongycastle.jce.provider.X509CertificateObject: void <init>(org.spongycastle.asn1.x509.Certificate)>($r2);

        r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate forward> = $r3;

     label1:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificatePair: org.spongycastle.asn1.x509.Certificate getReverse()>();

        if $r2 == null goto label2;

        $r3 = new org.spongycastle.jce.provider.X509CertificateObject;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificatePair: org.spongycastle.asn1.x509.Certificate getReverse()>();

        specialinvoke $r3.<org.spongycastle.jce.provider.X509CertificateObject: void <init>(org.spongycastle.asn1.x509.Certificate)>($r2);

        r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate reverse> = $r3;

     label2:
        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.x509.X509CertificatePair r0, r2;
        java.lang.Object $r1;
        boolean $z0, z1;
        java.security.cert.X509Certificate $r3, $r4;

        r0 := @this: org.spongycastle.x509.X509CertificatePair;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = $r1 instanceof org.spongycastle.x509.X509CertificatePair;

        if $z0 == 0 goto label6;

        r2 = (org.spongycastle.x509.X509CertificatePair) $r1;

        $z0 = 1;

        z1 = 1;

        $r3 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate forward>;

        if $r3 == null goto label4;

        $r3 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate forward>;

        $r4 = r2.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate forward>;

        z1 = virtualinvoke $r3.<java.security.cert.X509Certificate: boolean equals(java.lang.Object)>($r4);

     label2:
        $r3 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate reverse>;

        if $r3 == null goto label5;

        $r3 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate reverse>;

        $r4 = r2.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate reverse>;

        $z0 = virtualinvoke $r3.<java.security.cert.X509Certificate: boolean equals(java.lang.Object)>($r4);

     label3:
        if z1 == 0 goto label6;

        if $z0 == 0 goto label6;

        return 1;

     label4:
        $r3 = r2.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate forward>;

        if $r3 == null goto label2;

        z1 = 0;

        goto label2;

     label5:
        $r3 = r2.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate reverse>;

        if $r3 == null goto label3;

        $z0 = 0;

        goto label3;

     label6:
        return 0;
    }
    public byte[] getEncoded() throws java.security.cert.CertificateEncodingException
    {
        org.spongycastle.x509.X509CertificatePair r0;
        org.spongycastle.asn1.x509.Certificate r1, r2, $r7;
        java.security.cert.X509Certificate $r3;
        org.spongycastle.asn1.ASN1InputStream $r4;
        byte[] $r5;
        org.spongycastle.asn1.ASN1Primitive $r6;
        java.security.cert.CertificateEncodingException $r8;
        java.lang.IllegalArgumentException r9;
        org.spongycastle.x509.ExtCertificateEncodingException $r10;
        java.lang.String $r11;
        java.io.IOException r12;
        org.spongycastle.asn1.x509.CertificatePair $r13;

        r0 := @this: org.spongycastle.x509.X509CertificatePair;

        r1 = null;

        r2 = null;

        $r3 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate forward>;

        if $r3 == null goto label06;

        $r4 = new org.spongycastle.asn1.ASN1InputStream;

        $r3 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate forward>;

     label01:
        $r5 = virtualinvoke $r3.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        specialinvoke $r4.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r5);

        $r6 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r7 = staticinvoke <org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Certificate getInstance(java.lang.Object)>($r6);

     label02:
        r1 = $r7;

        if $r7 != null goto label06;

        $r8 = new java.security.cert.CertificateEncodingException;

     label03:
        specialinvoke $r8.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>("unable to get encoding for forward");

     label04:
        throw $r8;

     label05:
        r9 := @caughtexception;

        $r10 = new org.spongycastle.x509.ExtCertificateEncodingException;

        $r11 = virtualinvoke r9.<java.lang.IllegalArgumentException: java.lang.String toString()>();

        specialinvoke $r10.<org.spongycastle.x509.ExtCertificateEncodingException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r9);

        throw $r10;

     label06:
        $r3 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate reverse>;

        if $r3 == null goto label12;

        $r4 = new org.spongycastle.asn1.ASN1InputStream;

        $r3 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate reverse>;

     label07:
        $r5 = virtualinvoke $r3.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        specialinvoke $r4.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r5);

        $r6 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r7 = staticinvoke <org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Certificate getInstance(java.lang.Object)>($r6);

     label08:
        r2 = $r7;

        if $r7 != null goto label12;

        $r8 = new java.security.cert.CertificateEncodingException;

     label09:
        specialinvoke $r8.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>("unable to get encoding for reverse");

     label10:
        throw $r8;

     label11:
        r12 := @caughtexception;

        $r10 = new org.spongycastle.x509.ExtCertificateEncodingException;

        $r11 = virtualinvoke r12.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r10.<org.spongycastle.x509.ExtCertificateEncodingException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r12);

        throw $r10;

     label12:
        $r13 = new org.spongycastle.asn1.x509.CertificatePair;

     label13:
        specialinvoke $r13.<org.spongycastle.asn1.x509.CertificatePair: void <init>(org.spongycastle.asn1.x509.Certificate,org.spongycastle.asn1.x509.Certificate)>(r1, r2);

        $r5 = virtualinvoke $r13.<org.spongycastle.asn1.x509.CertificatePair: byte[] getEncoded(java.lang.String)>("DER");

     label14:
        return $r5;

        catch java.lang.IllegalArgumentException from label01 to label02 with label05;
        catch java.lang.IllegalArgumentException from label03 to label04 with label05;
        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.lang.IllegalArgumentException from label07 to label08 with label05;
        catch java.lang.IllegalArgumentException from label09 to label10 with label05;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.IllegalArgumentException from label13 to label14 with label05;
        catch java.io.IOException from label13 to label14 with label11;
    }
    public java.security.cert.X509Certificate getForward()
    {
        org.spongycastle.x509.X509CertificatePair r0;
        java.security.cert.X509Certificate r1;

        r0 := @this: org.spongycastle.x509.X509CertificatePair;

        r1 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate forward>;

        return r1;
    }
    public java.security.cert.X509Certificate getReverse()
    {
        org.spongycastle.x509.X509CertificatePair r0;
        java.security.cert.X509Certificate r1;

        r0 := @this: org.spongycastle.x509.X509CertificatePair;

        r1 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate reverse>;

        return r1;
    }
    public int hashCode()
    {
        org.spongycastle.x509.X509CertificatePair r0;
        int i0, $i1;
        java.security.cert.X509Certificate $r1;

        r0 := @this: org.spongycastle.x509.X509CertificatePair;

        i0 = -1;

        $r1 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate forward>;

        if $r1 == null goto label1;

        $r1 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate forward>;

        i0 = virtualinvoke $r1.<java.security.cert.X509Certificate: int hashCode()>();

        i0 = -1 ^ i0;

     label1:
        $r1 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate reverse>;

        if $r1 == null goto label2;

        i0 = i0 * 17;

        $r1 = r0.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate reverse>;

        $i1 = virtualinvoke $r1.<java.security.cert.X509Certificate: int hashCode()>();

        i0 = i0 ^ $i1;

     label2:
        return i0;
    }
