org.spongycastle.x509.PKIXCertPathReviewer extends org.spongycastle.x509.CertPathValidatorUtilities
private static final java.lang.String AUTH_INFO_ACCESS
private static final java.lang.String CRL_DIST_POINTS
private static final java.lang.String QC_STATEMENT
private static final java.lang.String RESOURCE_NAME
protected java.security.cert.CertPath certPath
protected java.util.List certs
protected java.util.List[] errors
private boolean initialized
protected int n
protected java.util.List[] notifications
protected java.security.cert.PKIXParameters pkixParams
protected java.security.cert.PolicyNode policyTree
protected java.security.PublicKey subjectPublicKey
protected java.security.cert.TrustAnchor trustAnchor
protected java.util.Date validDate
    static void <clinit>()
    {
        org.spongycastle.asn1.ASN1ObjectIdentifier $r0;
        java.lang.String $r1;

        $r0 = <org.spongycastle.asn1.x509.X509Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier QCStatements>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String QC_STATEMENT> = $r1;

        $r0 = <org.spongycastle.asn1.x509.X509Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier CRLDistributionPoints>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String CRL_DIST_POINTS> = $r1;

        $r0 = <org.spongycastle.asn1.x509.X509Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier AuthorityInfoAccess>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String AUTH_INFO_ACCESS> = $r1;

        return;
    }
    public void <init>()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        specialinvoke r0.<org.spongycastle.x509.CertPathValidatorUtilities: void <init>()>();

        return;
    }
    public void <init>(java.security.cert.CertPath, java.security.cert.PKIXParameters) throws org.spongycastle.x509.CertPathReviewerException
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.security.cert.CertPath $r1;
        java.security.cert.PKIXParameters $r2;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: java.security.cert.CertPath;

        $r2 := @parameter1: java.security.cert.PKIXParameters;

        specialinvoke r0.<org.spongycastle.x509.CertPathValidatorUtilities: void <init>()>();

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void init(java.security.cert.CertPath,java.security.cert.PKIXParameters)>($r1, $r2);

        return;
    }
    private java.lang.String IPtoString(byte[])
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        byte[] $r1;
        java.lang.StringBuffer r2;
        java.lang.Exception r3;
        java.net.InetAddress $r4;
        java.lang.String $r5;
        int i0, $i1;
        byte $b2;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: byte[];

     label1:
        $r4 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>($r1);

        $r5 = virtualinvoke $r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

     label2:
        return $r5;

     label3:
        r3 := @caughtexception;

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        i0 = 0;

     label4:
        $i1 = lengthof $r1;

        if i0 == $i1 goto label5;

        $b2 = $r1[i0];

        $i1 = $b2 & 255;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i0 = i0 + 1;

        goto label4;

     label5:
        $r5 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private void checkCriticalExtensions()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        org.spongycastle.x509.CertPathReviewerException r1;
        java.security.cert.CertPathValidatorException r2, r3;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r4;
        java.security.cert.PKIXParameters $r5;
        java.util.List $r6, $r14;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        java.security.cert.PKIXCertPathChecker $r9;
        org.spongycastle.i18n.ErrorBundle r10;
        java.lang.Object[] $r11;
        java.lang.String $r12;
        java.lang.Class $r13;
        int $i0;
        java.security.cert.X509Certificate r15;
        java.util.Set $r16;
        java.lang.Throwable $r17;
        java.security.cert.CertPath $r18;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r5 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

        $r6 = virtualinvoke $r5.<java.security.cert.PKIXParameters: java.util.List getCertPathCheckers()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label02:
        if $z0 == 0 goto label16;

     label03:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

     label04:
        $r9 = (java.security.cert.PKIXCertPathChecker) $r8;

     label05:
        virtualinvoke $r9.<java.security.cert.PKIXCertPathChecker: void init(boolean)>(0);

     label06:
        goto label01;

     label07:
        r2 := @caughtexception;

        r10 = new org.spongycastle.i18n.ErrorBundle;

        $r11 = newarray (java.lang.Object)[3];

     label08:
        $r12 = virtualinvoke r2.<java.security.cert.CertPathValidatorException: java.lang.String getMessage()>();

     label09:
        $r11[0] = $r12;

        $r11[1] = r2;

     label10:
        $r13 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

     label11:
        $r11[2] = $r12;

     label12:
        specialinvoke r10.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.certPathCheckerError", $r11);

     label13:
        r1 = new org.spongycastle.x509.CertPathReviewerException;

     label14:
        specialinvoke r1.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable)>(r10, r2);

        throw r1;

     label15:
        r1 := @caughtexception;

        r10 = virtualinvoke r1.<org.spongycastle.x509.CertPathReviewerException: org.spongycastle.i18n.ErrorBundle getErrorMessage()>();

        $i0 = virtualinvoke r1.<org.spongycastle.x509.CertPathReviewerException: int getIndex()>();

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r10, $i0);

        return;

     label16:
        $r14 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

     label17:
        $i0 = interfaceinvoke $r14.<java.util.List: int size()>();

     label18:
        $i0 = $i0 + -1;

     label19:
        if $i0 < 0 goto label81;

        $r14 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

     label20:
        $r8 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>($i0);

     label21:
        r15 = (java.security.cert.X509Certificate) $r8;

     label22:
        $r16 = virtualinvoke r15.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

     label23:
        if $r16 == null goto label26;

     label24:
        $z0 = interfaceinvoke $r16.<java.util.Set: boolean isEmpty()>();

     label25:
        if $z0 == 0 goto label27;

     label26:
        $i0 = $i0 + -1;

        goto label19;

     label27:
        $r12 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String KEY_USAGE>;

     label28:
        interfaceinvoke $r16.<java.util.Set: boolean remove(java.lang.Object)>($r12);

     label29:
        $r12 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String CERTIFICATE_POLICIES>;

     label30:
        interfaceinvoke $r16.<java.util.Set: boolean remove(java.lang.Object)>($r12);

     label31:
        $r12 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String POLICY_MAPPINGS>;

     label32:
        interfaceinvoke $r16.<java.util.Set: boolean remove(java.lang.Object)>($r12);

     label33:
        $r12 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String INHIBIT_ANY_POLICY>;

     label34:
        interfaceinvoke $r16.<java.util.Set: boolean remove(java.lang.Object)>($r12);

     label35:
        $r12 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String ISSUING_DISTRIBUTION_POINT>;

     label36:
        interfaceinvoke $r16.<java.util.Set: boolean remove(java.lang.Object)>($r12);

     label37:
        $r12 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String DELTA_CRL_INDICATOR>;

     label38:
        interfaceinvoke $r16.<java.util.Set: boolean remove(java.lang.Object)>($r12);

     label39:
        $r12 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String POLICY_CONSTRAINTS>;

     label40:
        interfaceinvoke $r16.<java.util.Set: boolean remove(java.lang.Object)>($r12);

     label41:
        $r12 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String BASIC_CONSTRAINTS>;

     label42:
        interfaceinvoke $r16.<java.util.Set: boolean remove(java.lang.Object)>($r12);

     label43:
        $r12 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

     label44:
        interfaceinvoke $r16.<java.util.Set: boolean remove(java.lang.Object)>($r12);

     label45:
        $r12 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String NAME_CONSTRAINTS>;

     label46:
        interfaceinvoke $r16.<java.util.Set: boolean remove(java.lang.Object)>($r12);

     label47:
        $r12 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String QC_STATEMENT>;

     label48:
        $z0 = interfaceinvoke $r16.<java.util.Set: boolean contains(java.lang.Object)>($r12);

     label49:
        if $z0 == 0 goto label53;

     label50:
        $z0 = specialinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: boolean processQcStatements(java.security.cert.X509Certificate,int)>(r15, $i0);

     label51:
        if $z0 == 0 goto label53;

        $r12 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String QC_STATEMENT>;

     label52:
        interfaceinvoke $r16.<java.util.Set: boolean remove(java.lang.Object)>($r12);

     label53:
        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label54:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label55:
        if $z0 == 0 goto label70;

     label56:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

     label57:
        $r9 = (java.security.cert.PKIXCertPathChecker) $r8;

     label58:
        virtualinvoke $r9.<java.security.cert.PKIXCertPathChecker: void check(java.security.cert.Certificate,java.util.Collection)>(r15, $r16);

     label59:
        goto label54;

     label60:
        r3 := @caughtexception;

        r10 = new org.spongycastle.i18n.ErrorBundle;

        $r11 = newarray (java.lang.Object)[3];

     label61:
        $r12 = virtualinvoke r3.<java.security.cert.CertPathValidatorException: java.lang.String getMessage()>();

     label62:
        $r11[0] = $r12;

        $r11[1] = r3;

     label63:
        $r13 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

     label64:
        $r11[2] = $r12;

     label65:
        specialinvoke r10.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.criticalExtensionError", $r11);

     label66:
        r1 = new org.spongycastle.x509.CertPathReviewerException;

     label67:
        $r17 = virtualinvoke r3.<java.security.cert.CertPathValidatorException: java.lang.Throwable getCause()>();

     label68:
        $r18 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label69:
        specialinvoke r1.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)>(r10, $r17, $r18, $i0);

        throw r1;

     label70:
        $z0 = interfaceinvoke $r16.<java.util.Set: boolean isEmpty()>();

     label71:
        if $z0 != 0 goto label26;

     label72:
        $r7 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label73:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label74:
        if $z0 == 0 goto label26;

        r10 = new org.spongycastle.i18n.ErrorBundle;

        $r11 = newarray (java.lang.Object)[1];

        $r4 = new org.spongycastle.asn1.ASN1ObjectIdentifier;

     label75:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

     label76:
        $r12 = (java.lang.String) $r8;

     label77:
        specialinvoke $r4.<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>($r12);

     label78:
        $r11[0] = $r4;

     label79:
        specialinvoke r10.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.unknownCriticalExt", $r11);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r10, $i0);

     label80:
        goto label73;

     label81:
        return;

        catch java.security.cert.CertPathValidatorException from label01 to label02 with label07;
        catch java.security.cert.CertPathValidatorException from label03 to label04 with label07;
        catch java.security.cert.CertPathValidatorException from label05 to label06 with label07;
        catch org.spongycastle.x509.CertPathReviewerException from label01 to label02 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label03 to label04 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label05 to label06 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label08 to label09 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label10 to label11 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label12 to label13 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label14 to label15 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label17 to label18 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label20 to label21 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label22 to label23 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label24 to label25 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label28 to label29 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label30 to label31 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label32 to label33 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label34 to label35 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label36 to label37 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label38 to label39 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label40 to label41 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label42 to label43 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label44 to label45 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label46 to label47 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label48 to label49 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label50 to label51 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label52 to label55 with label15;
        catch java.security.cert.CertPathValidatorException from label56 to label57 with label60;
        catch java.security.cert.CertPathValidatorException from label58 to label59 with label60;
        catch org.spongycastle.x509.CertPathReviewerException from label56 to label57 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label58 to label59 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label61 to label62 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label63 to label64 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label65 to label66 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label67 to label68 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label69 to label71 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label72 to label74 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label75 to label76 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label77 to label78 with label15;
        catch org.spongycastle.x509.CertPathReviewerException from label79 to label80 with label15;
    }
    private void checkNameConstraints()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        org.spongycastle.asn1.ASN1InputStream r1;
        org.spongycastle.x509.CertPathReviewerException r2;
        java.io.IOException r3;
        org.spongycastle.jce.provider.PKIXNameConstraintValidator r4;
        java.util.List $r5;
        int $i0, i1, $i2;
        java.lang.Object $r6;
        java.security.cert.X509Certificate $r7;
        boolean $z0;
        javax.security.auth.x500.X500Principal $r8;
        java.io.ByteArrayInputStream $r9;
        byte[] $r10;
        org.spongycastle.asn1.ASN1Primitive $r11;
        org.spongycastle.asn1.ASN1Sequence r12;
        java.lang.String $r13;
        org.spongycastle.asn1.ASN1Encodable $r14;
        org.spongycastle.asn1.x509.GeneralName $r15;
        org.spongycastle.i18n.ErrorBundle r16;
        java.lang.Object[] $r17;
        org.spongycastle.i18n.filter.UntrustedInput $r18;
        java.security.cert.CertPath $r19;
        org.spongycastle.jce.provider.PKIXNameConstraintValidatorException r20, r21, r23;
        org.spongycastle.jce.provider.AnnotatedException r22, r27;
        org.spongycastle.asn1.x509.NameConstraints $r24;
        org.spongycastle.asn1.x509.GeneralSubtree[] $r25;
        org.spongycastle.asn1.x509.GeneralSubtree $r26;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        r4 = new org.spongycastle.jce.provider.PKIXNameConstraintValidator;

        specialinvoke r4.<org.spongycastle.jce.provider.PKIXNameConstraintValidator: void <init>()>();

        $r5 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

     label01:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

     label02:
        $i0 = $i0 + -1;

     label03:
        if $i0 <= 0 goto label68;

        $r5 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

     label04:
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

     label05:
        $r7 = (java.security.cert.X509Certificate) $r6;

     label06:
        $z0 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: boolean isSelfIssued(java.security.cert.X509Certificate)>($r7);

     label07:
        if $z0 != 0 goto label52;

     label08:
        $r8 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)>($r7);

     label09:
        r1 = new org.spongycastle.asn1.ASN1InputStream;

        $r9 = new java.io.ByteArrayInputStream;

     label10:
        $r10 = virtualinvoke $r8.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r9.<java.io.ByteArrayInputStream: void <init>(byte[])>($r10);

        specialinvoke r1.<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>($r9);

     label11:
        $r11 = virtualinvoke r1.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

     label12:
        r12 = (org.spongycastle.asn1.ASN1Sequence) $r11;

     label13:
        virtualinvoke r4.<org.spongycastle.jce.provider.PKIXNameConstraintValidator: void checkPermittedDN(org.spongycastle.asn1.ASN1Sequence)>(r12);

     label14:
        virtualinvoke r4.<org.spongycastle.jce.provider.PKIXNameConstraintValidator: void checkExcludedDN(org.spongycastle.asn1.ASN1Sequence)>(r12);

     label15:
        $r13 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

     label16:
        $r11 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r7, $r13);

     label17:
        r12 = (org.spongycastle.asn1.ASN1Sequence) $r11;

        if r12 == null goto label52;

        i1 = 0;

     label18:
        $i2 = virtualinvoke r12.<org.spongycastle.asn1.ASN1Sequence: int size()>();

     label19:
        if i1 >= $i2 goto label52;

     label20:
        $r14 = virtualinvoke r12.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(i1);

        $r15 = staticinvoke <org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.x509.GeneralName getInstance(java.lang.Object)>($r14);

     label21:
        virtualinvoke r4.<org.spongycastle.jce.provider.PKIXNameConstraintValidator: void checkPermitted(org.spongycastle.asn1.x509.GeneralName)>($r15);

        virtualinvoke r4.<org.spongycastle.jce.provider.PKIXNameConstraintValidator: void checkExcluded(org.spongycastle.asn1.x509.GeneralName)>($r15);

     label22:
        i1 = i1 + 1;

        goto label18;

     label23:
        r3 := @caughtexception;

        r16 = new org.spongycastle.i18n.ErrorBundle;

        $r17 = newarray (java.lang.Object)[1];

        $r18 = new org.spongycastle.i18n.filter.UntrustedInput;

     label24:
        specialinvoke $r18.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>($r8);

     label25:
        $r17[0] = $r18;

     label26:
        specialinvoke r16.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.ncSubjectNameError", $r17);

     label27:
        r2 = new org.spongycastle.x509.CertPathReviewerException;

        $r19 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label28:
        specialinvoke r2.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)>(r16, r3, $r19, $i0);

        throw r2;

     label29:
        r2 := @caughtexception;

        r16 = virtualinvoke r2.<org.spongycastle.x509.CertPathReviewerException: org.spongycastle.i18n.ErrorBundle getErrorMessage()>();

        $i0 = virtualinvoke r2.<org.spongycastle.x509.CertPathReviewerException: int getIndex()>();

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r16, $i0);

        return;

     label30:
        r20 := @caughtexception;

        r16 = new org.spongycastle.i18n.ErrorBundle;

        $r17 = newarray (java.lang.Object)[1];

        $r18 = new org.spongycastle.i18n.filter.UntrustedInput;

     label31:
        $r13 = virtualinvoke $r8.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

        specialinvoke $r18.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>($r13);

     label32:
        $r17[0] = $r18;

     label33:
        specialinvoke r16.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.notPermittedDN", $r17);

     label34:
        r2 = new org.spongycastle.x509.CertPathReviewerException;

        $r19 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label35:
        specialinvoke r2.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)>(r16, r20, $r19, $i0);

        throw r2;

     label36:
        r21 := @caughtexception;

        r16 = new org.spongycastle.i18n.ErrorBundle;

        $r17 = newarray (java.lang.Object)[1];

        $r18 = new org.spongycastle.i18n.filter.UntrustedInput;

     label37:
        $r13 = virtualinvoke $r8.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

        specialinvoke $r18.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>($r13);

     label38:
        $r17[0] = $r18;

     label39:
        specialinvoke r16.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.excludedDN", $r17);

     label40:
        r2 = new org.spongycastle.x509.CertPathReviewerException;

        $r19 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label41:
        specialinvoke r2.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)>(r16, r21, $r19, $i0);

        throw r2;

     label42:
        r22 := @caughtexception;

        r16 = new org.spongycastle.i18n.ErrorBundle;

     label43:
        specialinvoke r16.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.subjAltNameExtError");

     label44:
        r2 = new org.spongycastle.x509.CertPathReviewerException;

        $r19 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label45:
        specialinvoke r2.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)>(r16, r22, $r19, $i0);

        throw r2;

     label46:
        r23 := @caughtexception;

        r16 = new org.spongycastle.i18n.ErrorBundle;

        $r17 = newarray (java.lang.Object)[1];

        $r18 = new org.spongycastle.i18n.filter.UntrustedInput;

     label47:
        specialinvoke $r18.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>($r15);

     label48:
        $r17[0] = $r18;

     label49:
        specialinvoke r16.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.notPermittedEmail", $r17);

     label50:
        r2 = new org.spongycastle.x509.CertPathReviewerException;

        $r19 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label51:
        specialinvoke r2.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)>(r16, r23, $r19, $i0);

        throw r2;

     label52:
        $r13 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String NAME_CONSTRAINTS>;

     label53:
        $r11 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r7, $r13);

     label54:
        r12 = (org.spongycastle.asn1.ASN1Sequence) $r11;

        if r12 == null goto label67;

     label55:
        $r24 = staticinvoke <org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.NameConstraints getInstance(java.lang.Object)>(r12);

        $r25 = virtualinvoke $r24.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] getPermittedSubtrees()>();

     label56:
        if $r25 == null goto label58;

     label57:
        virtualinvoke r4.<org.spongycastle.jce.provider.PKIXNameConstraintValidator: void intersectPermittedSubtree(org.spongycastle.asn1.x509.GeneralSubtree[])>($r25);

     label58:
        $r25 = virtualinvoke $r24.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] getExcludedSubtrees()>();

     label59:
        if $r25 == null goto label67;

        i1 = 0;

     label60:
        $i2 = lengthof $r25;

        if i1 == $i2 goto label67;

        $r26 = $r25[i1];

     label61:
        virtualinvoke r4.<org.spongycastle.jce.provider.PKIXNameConstraintValidator: void addExcludedSubtree(org.spongycastle.asn1.x509.GeneralSubtree)>($r26);

     label62:
        i1 = i1 + 1;

        goto label60;

     label63:
        r27 := @caughtexception;

        r16 = new org.spongycastle.i18n.ErrorBundle;

     label64:
        specialinvoke r16.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.ncExtError");

     label65:
        r2 = new org.spongycastle.x509.CertPathReviewerException;

        $r19 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label66:
        specialinvoke r2.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)>(r16, r27, $r19, $i0);

        throw r2;

     label67:
        $i0 = $i0 + -1;

        goto label03;

     label68:
        return;

        catch org.spongycastle.x509.CertPathReviewerException from label01 to label02 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label04 to label05 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label06 to label07 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label08 to label09 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label10 to label11 with label29;
        catch java.io.IOException from label11 to label12 with label23;
        catch org.spongycastle.x509.CertPathReviewerException from label11 to label12 with label29;
        catch org.spongycastle.jce.provider.PKIXNameConstraintValidatorException from label13 to label14 with label30;
        catch org.spongycastle.x509.CertPathReviewerException from label13 to label14 with label29;
        catch org.spongycastle.jce.provider.PKIXNameConstraintValidatorException from label14 to label15 with label36;
        catch org.spongycastle.x509.CertPathReviewerException from label14 to label15 with label29;
        catch org.spongycastle.jce.provider.AnnotatedException from label16 to label17 with label42;
        catch org.spongycastle.x509.CertPathReviewerException from label16 to label17 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label18 to label19 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label20 to label21 with label29;
        catch org.spongycastle.jce.provider.PKIXNameConstraintValidatorException from label21 to label22 with label46;
        catch org.spongycastle.x509.CertPathReviewerException from label21 to label22 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label24 to label25 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label26 to label27 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label28 to label29 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label31 to label32 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label33 to label34 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label35 to label36 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label37 to label38 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label39 to label40 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label41 to label42 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label43 to label44 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label45 to label46 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label47 to label48 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label49 to label50 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label51 to label52 with label29;
        catch org.spongycastle.jce.provider.AnnotatedException from label53 to label54 with label63;
        catch org.spongycastle.x509.CertPathReviewerException from label53 to label54 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label55 to label56 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label57 to label59 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label61 to label62 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label64 to label65 with label29;
        catch org.spongycastle.x509.CertPathReviewerException from label66 to label67 with label29;
    }
    private void checkPathLength()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        org.spongycastle.jce.provider.AnnotatedException r1;
        int i0, i1, $i2, $i3;
        java.util.List $r2;
        java.lang.Object $r3;
        java.security.cert.X509Certificate r4;
        boolean $z0;
        org.spongycastle.i18n.ErrorBundle r5;
        java.lang.String $r6;
        org.spongycastle.asn1.ASN1Primitive $r7;
        org.spongycastle.asn1.x509.BasicConstraints $r8;
        java.math.BigInteger $r9;
        java.lang.Object[] $r10;
        java.lang.Integer $r11;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        i0 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        i1 = 0;

        $r2 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i2 + -1;

     label1:
        if $i2 <= 0 goto label8;

        $r2 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        r4 = (java.security.cert.X509Certificate) $r3;

        $z0 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: boolean isSelfIssued(java.security.cert.X509Certificate)>(r4);

        if $z0 != 0 goto label3;

        if i0 > 0 goto label2;

        r5 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r5.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.pathLengthExtended");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle)>(r5);

     label2:
        i0 = i0 + -1;

        i1 = i1 + 1;

     label3:
        $r6 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String BASIC_CONSTRAINTS>;

     label4:
        $r7 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r4, $r6);

        $r8 = staticinvoke <org.spongycastle.asn1.x509.BasicConstraints: org.spongycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r7);

     label5:
        if $r8 == null goto label6;

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.x509.BasicConstraints: java.math.BigInteger getPathLenConstraint()>();

        if $r9 == null goto label6;

        $i3 = virtualinvoke $r9.<java.math.BigInteger: int intValue()>();

        if $i3 >= i0 goto label6;

        i0 = $i3;

     label6:
        $i2 = $i2 + -1;

        goto label1;

     label7:
        r1 := @caughtexception;

        r5 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r5.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.processLengthConstError");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r5, $i2);

        $r8 = null;

        goto label5;

     label8:
        r5 = new org.spongycastle.i18n.ErrorBundle;

        $r10 = newarray (java.lang.Object)[1];

        $r11 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(i1);

        $r10[0] = $r11;

        specialinvoke r5.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.totalPathLength", $r10);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle)>(r5);

        return;

        catch org.spongycastle.jce.provider.AnnotatedException from label4 to label5 with label7;
    }
    private void checkPolicy()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.util.HashSet r1, r5, r37;
        java.util.ArrayList r2, $r33;
        org.spongycastle.x509.CertPathReviewerException r3;
        java.util.HashMap r4;
        java.security.cert.PKIXParameters $r6;
        java.util.Set $r7, $r22, $r28;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.util.ArrayList[] $r8;
        org.spongycastle.jce.provider.PKIXPolicyNode r9, r27, r31;
        boolean $z0, $z1;
        java.security.cert.X509Certificate r10, $r13;
        java.util.List $r11;
        java.lang.Object $r12;
        java.lang.String $r14, $r20;
        org.spongycastle.asn1.ASN1Primitive $r15;
        org.spongycastle.asn1.ASN1Sequence r16, $r21;
        java.util.Enumeration $r17;
        org.spongycastle.asn1.x509.PolicyInformation $r18;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r19, r35;
        org.spongycastle.i18n.ErrorBundle $r23;
        org.spongycastle.jce.provider.AnnotatedException r24, r36, r38, r43, r44, r45;
        java.security.cert.CertPath $r25;
        java.security.cert.CertPathValidatorException r26, r32, r39;
        java.util.Iterator $r29, $r30;
        org.spongycastle.asn1.ASN1Encodable $r34;
        org.spongycastle.asn1.ASN1TaggedObject r40;
        org.spongycastle.asn1.ASN1Integer $r41;
        java.math.BigInteger $r42;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r6 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

        $r7 = virtualinvoke $r6.<java.security.cert.PKIXParameters: java.util.Set getInitialPolicies()>();

        $i0 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        $i0 = $i0 + 1;

        $r8 = newarray (java.util.ArrayList)[$i0];

        $i0 = 0;

     label001:
        $i1 = lengthof $r8;

        if $i0 >= $i1 goto label002;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r8[$i0] = r2;

        $i0 = $i0 + 1;

        goto label001;

     label002:
        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("2.5.29.32.0");

        r9 = new org.spongycastle.jce.provider.PKIXPolicyNode;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r5 = new java.util.HashSet;

        specialinvoke r5.<java.util.HashSet: void <init>()>();

        specialinvoke r9.<org.spongycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>(r2, 0, r1, null, r5, "2.5.29.32.0", 0);

        r2 = $r8[0];

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r9);

        $r6 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

        $z0 = virtualinvoke $r6.<java.security.cert.PKIXParameters: boolean isExplicitPolicyRequired()>();

        if $z0 == 0 goto label028;

        $i0 = 0;

     label003:
        $r6 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

        $z0 = virtualinvoke $r6.<java.security.cert.PKIXParameters: boolean isAnyPolicyInhibited()>();

        if $z0 == 0 goto label029;

        $i1 = 0;

     label004:
        $r6 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

        $z0 = virtualinvoke $r6.<java.security.cert.PKIXParameters: boolean isPolicyMappingInhibited()>();

        if $z0 == 0 goto label030;

        i2 = 0;

     label005:
        r1 = null;

        r10 = null;

        $r11 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

     label006:
        $i3 = interfaceinvoke $r11.<java.util.List: int size()>();

     label007:
        $i3 = $i3 + -1;

     label008:
        if $i3 < 0 goto label223;

        $i4 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        $i4 = $i4 - $i3;

        $r11 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

     label009:
        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i3);

     label010:
        $r13 = (java.security.cert.X509Certificate) $r12;

        r10 = $r13;

        $r14 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String CERTIFICATE_POLICIES>;

     label011:
        $r15 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r13, $r14);

     label012:
        r16 = (org.spongycastle.asn1.ASN1Sequence) $r15;

        if r16 == null goto label119;

        if r9 == null goto label119;

     label013:
        $r17 = virtualinvoke r16.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label014:
        r5 = new java.util.HashSet;

     label015:
        specialinvoke r5.<java.util.HashSet: void <init>()>();

     label016:
        $z0 = interfaceinvoke $r17.<java.util.Enumeration: boolean hasMoreElements()>();

     label017:
        if $z0 == 0 goto label039;

     label018:
        $r12 = interfaceinvoke $r17.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r18 = staticinvoke <org.spongycastle.asn1.x509.PolicyInformation: org.spongycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r12);

        $r19 = virtualinvoke $r18.<org.spongycastle.asn1.x509.PolicyInformation: org.spongycastle.asn1.ASN1ObjectIdentifier getPolicyIdentifier()>();

        $r14 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r14);

     label019:
        $r14 = "2.5.29.32.0";

     label020:
        $r20 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r20);

     label021:
        if $z0 != 0 goto label016;

     label022:
        $r21 = virtualinvoke $r18.<org.spongycastle.asn1.x509.PolicyInformation: org.spongycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        $r22 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: java.util.Set getQualifierSet(org.spongycastle.asn1.ASN1Sequence)>($r21);

     label023:
        $z0 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: boolean processCertD1i(int,java.util.List[],org.spongycastle.asn1.ASN1ObjectIdentifier,java.util.Set)>($i4, $r8, $r19, $r22);

     label024:
        if $z0 != 0 goto label016;

     label025:
        staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: void processCertD1ii(int,java.util.List[],org.spongycastle.asn1.ASN1ObjectIdentifier,java.util.Set)>($i4, $r8, $r19, $r22);

     label026:
        goto label016;

     label027:
        r3 := @caughtexception;

        $r23 = virtualinvoke r3.<org.spongycastle.x509.CertPathReviewerException: org.spongycastle.i18n.ErrorBundle getErrorMessage()>();

        $i0 = virtualinvoke r3.<org.spongycastle.x509.CertPathReviewerException: int getIndex()>();

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>($r23, $i0);

        return;

     label028:
        $i0 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        $i0 = $i0 + 1;

        goto label003;

     label029:
        $i1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        $i1 = $i1 + 1;

        goto label004;

     label030:
        $i3 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        i2 = $i3 + 1;

        goto label005;

     label031:
        r24 := @caughtexception;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label032:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.policyExtError");

     label033:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

        $r25 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label034:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)>($r23, r24, $r25, $i3);

        throw r3;

     label035:
        r26 := @caughtexception;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label036:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.policyQualifierError");

     label037:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

        $r25 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label038:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)>($r23, r26, $r25, $i3);

        throw r3;

     label039:
        if r1 == null goto label042;

     label040:
        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>("2.5.29.32.0");

     label041:
        if $z0 == 0 goto label072;

     label042:
        r1 = r5;

     label043:
        if $i1 > 0 goto label046;

        $i5 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        if $i4 >= $i5 goto label097;

     label044:
        $z0 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: boolean isSelfIssued(java.security.cert.X509Certificate)>($r13);

     label045:
        if $z0 == 0 goto label097;

     label046:
        $r17 = virtualinvoke r16.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label047:
        $z0 = interfaceinvoke $r17.<java.util.Enumeration: boolean hasMoreElements()>();

     label048:
        if $z0 == 0 goto label097;

     label049:
        $r12 = interfaceinvoke $r17.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r18 = staticinvoke <org.spongycastle.asn1.x509.PolicyInformation: org.spongycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r12);

     label050:
        $r14 = "2.5.29.32.0";

     label051:
        $r19 = virtualinvoke $r18.<org.spongycastle.asn1.x509.PolicyInformation: org.spongycastle.asn1.ASN1ObjectIdentifier getPolicyIdentifier()>();

        $r20 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r20);

     label052:
        if $z0 == 0 goto label047;

     label053:
        $r21 = virtualinvoke $r18.<org.spongycastle.asn1.x509.PolicyInformation: org.spongycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        $r22 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: java.util.Set getQualifierSet(org.spongycastle.asn1.ASN1Sequence)>($r21);

     label054:
        $i5 = $i4 + -1;

        r2 = $r8[$i5];

        $i5 = 0;

     label055:
        $i6 = interfaceinvoke r2.<java.util.List: int size()>();

     label056:
        if $i5 >= $i6 goto label097;

     label057:
        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i5);

     label058:
        r27 = (org.spongycastle.jce.provider.PKIXPolicyNode) $r12;

     label059:
        $r28 = virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: java.util.Set getExpectedPolicies()>();

        $r29 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>();

     label060:
        $z0 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

     label061:
        if $z0 == 0 goto label096;

     label062:
        $r12 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

     label063:
        $z0 = $r12 instanceof java.lang.String;

        if $z0 == 0 goto label086;

        $r14 = (java.lang.String) $r12;

     label064:
        $z0 = 0;

     label065:
        $r30 = virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label066:
        $z1 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

     label067:
        if $z1 == 0 goto label089;

     label068:
        $r12 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

     label069:
        r31 = (org.spongycastle.jce.provider.PKIXPolicyNode) $r12;

     label070:
        $r20 = virtualinvoke r31.<org.spongycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r20);

     label071:
        if $z1 == 0 goto label066;

        $z0 = 1;

        goto label066;

     label072:
        $r29 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label073:
        r1 = new java.util.HashSet;

     label074:
        specialinvoke r1.<java.util.HashSet: void <init>()>();

     label075:
        $z0 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

     label076:
        if $z0 == 0 goto label081;

     label077:
        $r12 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>($r12);

     label078:
        if $z0 == 0 goto label075;

     label079:
        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label080:
        goto label075;

     label081:
        goto label043;

     label082:
        r32 := @caughtexception;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label083:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.policyQualifierError");

     label084:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

        $r25 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label085:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)>($r23, r32, $r25, $i3);

        throw r3;

     label086:
        $z0 = $r12 instanceof org.spongycastle.asn1.ASN1ObjectIdentifier;

        if $z0 == 0 goto label060;

        $r19 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r12;

     label087:
        $r14 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

     label088:
        goto label064;

     label089:
        if $z0 != 0 goto label060;

        r5 = new java.util.HashSet;

     label090:
        specialinvoke r5.<java.util.HashSet: void <init>()>();

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r14);

     label091:
        r31 = new org.spongycastle.jce.provider.PKIXPolicyNode;

        $r33 = new java.util.ArrayList;

     label092:
        specialinvoke $r33.<java.util.ArrayList: void <init>()>();

        specialinvoke r31.<org.spongycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r33, $i4, r5, r27, $r22, $r14, 0);

        virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: void addChild(org.spongycastle.jce.provider.PKIXPolicyNode)>(r31);

     label093:
        $r33 = $r8[$i4];

     label094:
        interfaceinvoke $r33.<java.util.List: boolean add(java.lang.Object)>(r31);

     label095:
        goto label060;

     label096:
        $i5 = $i5 + 1;

        goto label055;

     label097:
        $i5 = $i4 + -1;

     label098:
        if $i5 < 0 goto label109;

        r2 = $r8[$i5];

        $i6 = 0;

     label099:
        $i7 = interfaceinvoke r2.<java.util.List: int size()>();

     label100:
        if $i6 >= $i7 goto label107;

     label101:
        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i6);

     label102:
        r27 = (org.spongycastle.jce.provider.PKIXPolicyNode) $r12;

     label103:
        $z0 = virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

     label104:
        if $z0 != 0 goto label108;

     label105:
        r27 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.jce.provider.PKIXPolicyNode removePolicyNode(org.spongycastle.jce.provider.PKIXPolicyNode,java.util.List[],org.spongycastle.jce.provider.PKIXPolicyNode)>(r9, $r8, r27);

     label106:
        r9 = r27;

        if r27 != null goto label108;

     label107:
        $i5 = $i5 + -1;

        goto label098;

     label108:
        $i6 = $i6 + 1;

        goto label099;

     label109:
        $r22 = virtualinvoke $r13.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

     label110:
        if $r22 == null goto label119;

        $r14 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String CERTIFICATE_POLICIES>;

     label111:
        $z0 = interfaceinvoke $r22.<java.util.Set: boolean contains(java.lang.Object)>($r14);

     label112:
        r2 = $r8[$i4];

        $i5 = 0;

     label113:
        $i6 = interfaceinvoke r2.<java.util.List: int size()>();

     label114:
        if $i5 >= $i6 goto label119;

     label115:
        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i5);

     label116:
        r27 = (org.spongycastle.jce.provider.PKIXPolicyNode) $r12;

     label117:
        virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: void setCritical(boolean)>($z0);

     label118:
        $i5 = $i5 + 1;

        goto label113;

     label119:
        if r16 != null goto label120;

        r9 = null;

     label120:
        if $i0 > 0 goto label124;

        if r9 != null goto label124;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label121:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.noValidPolicyTree");

     label122:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

     label123:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>($r23);

        throw r3;

     label124:
        $i5 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        if $i4 == $i5 goto label218;

        $r14 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String POLICY_MAPPINGS>;

     label125:
        $r15 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r13, $r14);

     label126:
        if $r15 == null goto label151;

        r16 = (org.spongycastle.asn1.ASN1Sequence) $r15;

        $i5 = 0;

     label127:
        $i6 = virtualinvoke r16.<org.spongycastle.asn1.ASN1Sequence: int size()>();

     label128:
        if $i5 >= $i6 goto label151;

     label129:
        $r34 = virtualinvoke r16.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i5);

     label130:
        $r21 = (org.spongycastle.asn1.ASN1Sequence) $r34;

     label131:
        $r34 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

     label132:
        $r19 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r34;

     label133:
        $r34 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

     label134:
        r35 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r34;

        $r14 = "2.5.29.32.0";

     label135:
        $r20 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r20);

     label136:
        if $z0 == 0 goto label144;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label137:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.invalidPolicyMapping");

     label138:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

        $r25 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label139:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.security.cert.CertPath,int)>($r23, $r25, $i3);

        throw r3;

     label140:
        r36 := @caughtexception;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label141:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.policyMapExtError");

     label142:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

        $r25 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label143:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)>($r23, r36, $r25, $i3);

        throw r3;

     label144:
        $r14 = "2.5.29.32.0";

     label145:
        $r20 = virtualinvoke r35.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r20);

     label146:
        if $z0 == 0 goto label150;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label147:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.invalidPolicyMapping");

     label148:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

        $r25 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label149:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.security.cert.CertPath,int)>($r23, $r25, $i3);

        throw r3;

     label150:
        $i5 = $i5 + 1;

        goto label127;

     label151:
        if $r15 == null goto label190;

        r16 = (org.spongycastle.asn1.ASN1Sequence) $r15;

        r4 = new java.util.HashMap;

     label152:
        specialinvoke r4.<java.util.HashMap: void <init>()>();

     label153:
        r5 = new java.util.HashSet;

     label154:
        specialinvoke r5.<java.util.HashSet: void <init>()>();

     label155:
        $i5 = 0;

     label156:
        $i6 = virtualinvoke r16.<org.spongycastle.asn1.ASN1Sequence: int size()>();

     label157:
        if $i5 >= $i6 goto label172;

     label158:
        $r34 = virtualinvoke r16.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i5);

     label159:
        $r21 = (org.spongycastle.asn1.ASN1Sequence) $r34;

     label160:
        $r34 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

     label161:
        $r19 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r34;

     label162:
        $r14 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r34 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

     label163:
        $r19 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r34;

     label164:
        $r20 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $z0 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r14);

     label165:
        if $z0 != 0 goto label168;

        r37 = new java.util.HashSet;

     label166:
        specialinvoke r37.<java.util.HashSet: void <init>()>();

        interfaceinvoke r37.<java.util.Set: boolean add(java.lang.Object)>($r20);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r37);

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r14);

     label167:
        $i5 = $i5 + 1;

        goto label156;

     label168:
        $r12 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);

     label169:
        $r22 = (java.util.Set) $r12;

     label170:
        interfaceinvoke $r22.<java.util.Set: boolean add(java.lang.Object)>($r20);

     label171:
        goto label167;

     label172:
        $r29 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label173:
        $z0 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

     label174:
        if $z0 == 0 goto label190;

     label175:
        $r12 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

     label176:
        $r14 = (java.lang.String) $r12;

        if i2 <= 0 goto label187;

     label177:
        staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: void prepareNextCertB1(int,java.util.List[],java.lang.String,java.util.Map,java.security.cert.X509Certificate)>($i4, $r8, $r14, r4, $r13);

     label178:
        goto label173;

     label179:
        r38 := @caughtexception;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label180:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.policyExtError");

     label181:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

        $r25 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label182:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)>($r23, r38, $r25, $i3);

        throw r3;

     label183:
        r39 := @caughtexception;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label184:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.policyQualifierError");

     label185:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

        $r25 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label186:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)>($r23, r39, $r25, $i3);

        throw r3;

     label187:
        if i2 > 0 goto label173;

     label188:
        r9 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.jce.provider.PKIXPolicyNode prepareNextCertB2(int,java.util.List[],java.lang.String,org.spongycastle.jce.provider.PKIXPolicyNode)>($i4, $r8, $r14, r9);

     label189:
        goto label173;

     label190:
        $z0 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: boolean isSelfIssued(java.security.cert.X509Certificate)>($r13);

     label191:
        if $z0 != 0 goto label194;

        if $i0 == 0 goto label192;

        $i0 = $i0 + -1;

     label192:
        if i2 == 0 goto label193;

        i2 = i2 + -1;

     label193:
        if $i1 == 0 goto label194;

        $i1 = $i1 + -1;

     label194:
        $r14 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String POLICY_CONSTRAINTS>;

     label195:
        $r15 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r13, $r14);

     label196:
        r16 = (org.spongycastle.asn1.ASN1Sequence) $r15;

        if r16 == null goto label213;

     label197:
        $r17 = virtualinvoke r16.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label198:
        $z0 = interfaceinvoke $r17.<java.util.Enumeration: boolean hasMoreElements()>();

     label199:
        if $z0 == 0 goto label213;

     label200:
        $r12 = interfaceinvoke $r17.<java.util.Enumeration: java.lang.Object nextElement()>();

     label201:
        r40 = (org.spongycastle.asn1.ASN1TaggedObject) $r12;

     label202:
        $i4 = virtualinvoke r40.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

     label203:
        lookupswitch($i4)
        {
            case 0: goto label205;
            case 1: goto label207;
            default: goto label204;
        };

     label204:
        goto label198;

     label205:
        $r41 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r40, 0);

        $r42 = virtualinvoke $r41.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i4 = virtualinvoke $r42.<java.math.BigInteger: int intValue()>();

     label206:
        if $i4 >= $i0 goto label198;

        $i0 = $i4;

        goto label198;

     label207:
        $r41 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r40, 0);

        $r42 = virtualinvoke $r41.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i4 = virtualinvoke $r42.<java.math.BigInteger: int intValue()>();

     label208:
        if $i4 >= i2 goto label198;

        i2 = $i4;

        goto label198;

     label209:
        r43 := @caughtexception;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label210:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.policyConstExtError");

     label211:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

        $r25 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label212:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.security.cert.CertPath,int)>($r23, $r25, $i3);

        throw r3;

     label213:
        $r14 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String INHIBIT_ANY_POLICY>;

     label214:
        $r15 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r13, $r14);

     label215:
        $r41 = (org.spongycastle.asn1.ASN1Integer) $r15;

        if $r41 == null goto label218;

     label216:
        $r42 = virtualinvoke $r41.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i4 = virtualinvoke $r42.<java.math.BigInteger: int intValue()>();

     label217:
        if $i4 >= $i1 goto label218;

        $i1 = $i4;

     label218:
        $i3 = $i3 + -1;

        goto label008;

     label219:
        r44 := @caughtexception;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label220:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.policyInhibitExtError");

     label221:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

        $r25 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label222:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.security.cert.CertPath,int)>($r23, $r25, $i3);

        throw r3;

     label223:
        $z0 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: boolean isSelfIssued(java.security.cert.X509Certificate)>(r10);

     label224:
        if $z0 != 0 goto label225;

        if $i0 <= 0 goto label225;

        $i0 = $i0 + -1;

     label225:
        $r14 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String POLICY_CONSTRAINTS>;

     label226:
        $r15 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r10, $r14);

     label227:
        r16 = (org.spongycastle.asn1.ASN1Sequence) $r15;

        if r16 == null goto label242;

     label228:
        $r17 = virtualinvoke r16.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label229:
        $z0 = interfaceinvoke $r17.<java.util.Enumeration: boolean hasMoreElements()>();

     label230:
        if $z0 == 0 goto label242;

     label231:
        $r12 = interfaceinvoke $r17.<java.util.Enumeration: java.lang.Object nextElement()>();

     label232:
        r40 = (org.spongycastle.asn1.ASN1TaggedObject) $r12;

     label233:
        $i1 = virtualinvoke r40.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

     label234:
        lookupswitch($i1)
        {
            case 0: goto label236;
            default: goto label235;
        };

     label235:
        goto label229;

     label236:
        $r41 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r40, 0);

        $r42 = virtualinvoke $r41.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i1 = virtualinvoke $r42.<java.math.BigInteger: int intValue()>();

     label237:
        if $i1 != 0 goto label229;

        $i0 = 0;

        goto label229;

     label238:
        r45 := @caughtexception;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label239:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.policyConstExtError");

     label240:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

        $r25 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label241:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.security.cert.CertPath,int)>($r23, $r25, $i3);

        throw r3;

     label242:
        if r9 != null goto label253;

        $r6 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

     label243:
        $z0 = virtualinvoke $r6.<java.security.cert.PKIXParameters: boolean isExplicitPolicyRequired()>();

     label244:
        if $z0 == 0 goto label248;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label245:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.explicitPolicy");

     label246:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

        $r25 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label247:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.security.cert.CertPath,int)>($r23, $r25, $i3);

        throw r3;

     label248:
        r9 = null;

     label249:
        if $i0 > 0 goto label340;

        if r9 != null goto label340;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label250:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.invalidPolicy");

     label251:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

     label252:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>($r23);

        throw r3;

     label253:
        $z0 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: boolean isAnyPolicy(java.util.Set)>($r7);

     label254:
        if $z0 == 0 goto label298;

        $r6 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

     label255:
        $z0 = virtualinvoke $r6.<java.security.cert.PKIXParameters: boolean isExplicitPolicyRequired()>();

     label256:
        if $z0 == 0 goto label297;

     label257:
        $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

     label258:
        if $z0 == 0 goto label262;

        $r23 = new org.spongycastle.i18n.ErrorBundle;

     label259:
        specialinvoke $r23.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.explicitPolicy");

     label260:
        r3 = new org.spongycastle.x509.CertPathReviewerException;

        $r25 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

     label261:
        specialinvoke r3.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.security.cert.CertPath,int)>($r23, $r25, $i3);

        throw r3;

     label262:
        r5 = new java.util.HashSet;

     label263:
        specialinvoke r5.<java.util.HashSet: void <init>()>();

     label264:
        $i1 = 0;

     label265:
        $i3 = lengthof $r8;

        if $i1 >= $i3 goto label279;

        r2 = $r8[$i1];

        $i3 = 0;

     label266:
        i2 = interfaceinvoke r2.<java.util.List: int size()>();

     label267:
        if $i3 >= i2 goto label278;

     label268:
        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i3);

     label269:
        r27 = (org.spongycastle.jce.provider.PKIXPolicyNode) $r12;

        $r14 = "2.5.29.32.0";

     label270:
        $r20 = virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r20);

     label271:
        if $z0 == 0 goto label277;

     label272:
        $r29 = virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label273:
        $z0 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

     label274:
        if $z0 == 0 goto label277;

     label275:
        $r12 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label276:
        goto label273;

     label277:
        $i3 = $i3 + 1;

        goto label266;

     label278:
        $i1 = $i1 + 1;

        goto label265;

     label279:
        $r29 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label280:
        $z0 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

     label281:
        if $z0 == 0 goto label286;

     label282:
        $r12 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

     label283:
        r27 = (org.spongycastle.jce.provider.PKIXPolicyNode) $r12;

     label284:
        $r14 = virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r14);

     label285:
        if $z0 != 0 goto label280;

        goto label280;

     label286:
        if r9 == null goto label297;

        $i1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        $i1 = $i1 + -1;

     label287:
        if $i1 < 0 goto label297;

        r2 = $r8[$i1];

        $i3 = 0;

     label288:
        i2 = interfaceinvoke r2.<java.util.List: int size()>();

     label289:
        if $i3 >= i2 goto label296;

     label290:
        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i3);

     label291:
        r27 = (org.spongycastle.jce.provider.PKIXPolicyNode) $r12;

     label292:
        $z0 = virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

     label293:
        if $z0 != 0 goto label295;

     label294:
        r9 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.jce.provider.PKIXPolicyNode removePolicyNode(org.spongycastle.jce.provider.PKIXPolicyNode,java.util.List[],org.spongycastle.jce.provider.PKIXPolicyNode)>(r9, $r8, r27);

     label295:
        $i3 = $i3 + 1;

        goto label288;

     label296:
        $i1 = $i1 + -1;

        goto label287;

     label297:
        goto label249;

     label298:
        r1 = new java.util.HashSet;

     label299:
        specialinvoke r1.<java.util.HashSet: void <init>()>();

     label300:
        $i1 = 0;

     label301:
        $i3 = lengthof $r8;

        if $i1 >= $i3 goto label319;

        r2 = $r8[$i1];

        $i3 = 0;

     label302:
        i2 = interfaceinvoke r2.<java.util.List: int size()>();

     label303:
        if $i3 >= i2 goto label318;

     label304:
        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i3);

     label305:
        r27 = (org.spongycastle.jce.provider.PKIXPolicyNode) $r12;

        $r14 = "2.5.29.32.0";

     label306:
        $r20 = virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r20);

     label307:
        if $z0 == 0 goto label317;

     label308:
        $r29 = virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label309:
        $z0 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

     label310:
        if $z0 == 0 goto label317;

     label311:
        $r12 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

     label312:
        r27 = (org.spongycastle.jce.provider.PKIXPolicyNode) $r12;

        $r14 = "2.5.29.32.0";

     label313:
        $r20 = virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r20);

     label314:
        if $z0 != 0 goto label309;

     label315:
        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r27);

     label316:
        goto label309;

     label317:
        $i3 = $i3 + 1;

        goto label302;

     label318:
        $i1 = $i1 + 1;

        goto label301;

     label319:
        $r29 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label320:
        $z0 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

     label321:
        if $z0 == 0 goto label328;

     label322:
        $r12 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

     label323:
        r27 = (org.spongycastle.jce.provider.PKIXPolicyNode) $r12;

     label324:
        $r14 = virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r14);

     label325:
        if $z0 != 0 goto label320;

     label326:
        r9 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.jce.provider.PKIXPolicyNode removePolicyNode(org.spongycastle.jce.provider.PKIXPolicyNode,java.util.List[],org.spongycastle.jce.provider.PKIXPolicyNode)>(r9, $r8, r27);

     label327:
        goto label320;

     label328:
        if r9 == null goto label339;

        $i1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        $i1 = $i1 + -1;

     label329:
        if $i1 < 0 goto label339;

        r2 = $r8[$i1];

        $i3 = 0;

     label330:
        i2 = interfaceinvoke r2.<java.util.List: int size()>();

     label331:
        if $i3 >= i2 goto label338;

     label332:
        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i3);

     label333:
        r27 = (org.spongycastle.jce.provider.PKIXPolicyNode) $r12;

     label334:
        $z0 = virtualinvoke r27.<org.spongycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

     label335:
        if $z0 != 0 goto label337;

     label336:
        r9 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.jce.provider.PKIXPolicyNode removePolicyNode(org.spongycastle.jce.provider.PKIXPolicyNode,java.util.List[],org.spongycastle.jce.provider.PKIXPolicyNode)>(r9, $r8, r27);

     label337:
        $i3 = $i3 + 1;

        goto label330;

     label338:
        $i1 = $i1 + -1;

        goto label329;

     label339:
        goto label249;

     label340:
        return;

        catch org.spongycastle.x509.CertPathReviewerException from label006 to label007 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label009 to label010 with label027;
        catch org.spongycastle.jce.provider.AnnotatedException from label011 to label012 with label031;
        catch org.spongycastle.x509.CertPathReviewerException from label011 to label012 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label013 to label014 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label015 to label017 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label018 to label019 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label020 to label021 with label027;
        catch java.security.cert.CertPathValidatorException from label022 to label023 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label022 to label023 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label023 to label024 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label025 to label026 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label032 to label033 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label034 to label035 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label036 to label037 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label038 to label039 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label040 to label041 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label044 to label045 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label046 to label048 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label049 to label050 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label051 to label052 with label027;
        catch java.security.cert.CertPathValidatorException from label053 to label054 with label082;
        catch org.spongycastle.x509.CertPathReviewerException from label053 to label054 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label055 to label056 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label057 to label058 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label059 to label061 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label062 to label063 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label065 to label067 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label068 to label069 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label070 to label071 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label072 to label073 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label074 to label076 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label077 to label078 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label079 to label080 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label083 to label084 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label085 to label086 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label087 to label088 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label090 to label091 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label092 to label093 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label094 to label095 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label099 to label100 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label101 to label102 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label103 to label104 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label105 to label106 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label109 to label110 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label111 to label112 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label113 to label114 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label115 to label116 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label117 to label118 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label121 to label122 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label123 to label124 with label027;
        catch org.spongycastle.jce.provider.AnnotatedException from label125 to label126 with label140;
        catch org.spongycastle.x509.CertPathReviewerException from label125 to label126 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label127 to label128 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label129 to label130 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label131 to label132 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label133 to label134 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label135 to label136 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label137 to label138 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label139 to label140 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label141 to label142 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label143 to label144 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label145 to label146 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label147 to label148 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label149 to label150 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label152 to label153 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label154 to label155 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label156 to label157 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label158 to label159 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label160 to label161 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label162 to label163 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label164 to label165 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label166 to label167 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label168 to label169 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label170 to label171 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label172 to label174 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label175 to label176 with label027;
        catch org.spongycastle.jce.provider.AnnotatedException from label177 to label178 with label179;
        catch java.security.cert.CertPathValidatorException from label177 to label178 with label183;
        catch org.spongycastle.x509.CertPathReviewerException from label177 to label178 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label180 to label181 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label182 to label183 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label184 to label185 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label186 to label187 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label188 to label189 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label190 to label191 with label027;
        catch org.spongycastle.jce.provider.AnnotatedException from label195 to label196 with label209;
        catch org.spongycastle.jce.provider.AnnotatedException from label197 to label199 with label209;
        catch org.spongycastle.jce.provider.AnnotatedException from label200 to label201 with label209;
        catch org.spongycastle.jce.provider.AnnotatedException from label202 to label203 with label209;
        catch org.spongycastle.jce.provider.AnnotatedException from label205 to label206 with label209;
        catch org.spongycastle.jce.provider.AnnotatedException from label207 to label208 with label209;
        catch org.spongycastle.x509.CertPathReviewerException from label195 to label196 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label197 to label199 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label200 to label201 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label202 to label203 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label205 to label206 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label207 to label208 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label210 to label211 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label212 to label213 with label027;
        catch org.spongycastle.jce.provider.AnnotatedException from label214 to label215 with label219;
        catch org.spongycastle.jce.provider.AnnotatedException from label216 to label217 with label219;
        catch org.spongycastle.x509.CertPathReviewerException from label214 to label215 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label216 to label217 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label220 to label221 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label222 to label224 with label027;
        catch org.spongycastle.jce.provider.AnnotatedException from label226 to label227 with label238;
        catch org.spongycastle.jce.provider.AnnotatedException from label228 to label230 with label238;
        catch org.spongycastle.jce.provider.AnnotatedException from label231 to label232 with label238;
        catch org.spongycastle.jce.provider.AnnotatedException from label233 to label234 with label238;
        catch org.spongycastle.jce.provider.AnnotatedException from label236 to label237 with label238;
        catch org.spongycastle.x509.CertPathReviewerException from label226 to label227 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label228 to label230 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label231 to label232 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label233 to label234 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label236 to label237 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label239 to label240 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label241 to label242 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label243 to label244 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label245 to label246 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label247 to label248 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label250 to label251 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label252 to label254 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label255 to label256 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label257 to label258 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label259 to label260 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label261 to label262 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label263 to label264 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label266 to label267 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label268 to label269 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label270 to label271 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label272 to label274 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label275 to label276 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label279 to label281 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label282 to label283 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label284 to label285 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label288 to label289 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label290 to label291 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label292 to label293 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label294 to label295 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label299 to label300 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label302 to label303 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label304 to label305 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label306 to label307 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label308 to label310 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label311 to label312 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label313 to label314 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label315 to label316 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label319 to label321 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label322 to label323 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label324 to label325 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label326 to label327 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label330 to label331 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label332 to label333 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label334 to label335 with label027;
        catch org.spongycastle.x509.CertPathReviewerException from label336 to label337 with label027;
    }
    private void checkSignatures()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.security.cert.CertificateExpiredException r1;
        java.security.cert.CertificateNotYetValidException r2;
        java.security.SignatureException r3;
        int i0, $i1, $i2;
        org.spongycastle.asn1.x509.GeneralName r4;
        java.lang.Throwable r5;
        javax.security.auth.x500.X500Principal r6, r8;
        java.security.cert.TrustAnchor r7, $r37;
        org.spongycastle.i18n.ErrorBundle r9;
        java.lang.Object[] $r10;
        org.spongycastle.i18n.filter.TrustedInput $r11;
        java.util.Date $r12;
        java.util.List $r13, $r14;
        java.lang.Object $r15;
        java.security.cert.X509Certificate r16, $r24;
        java.security.cert.PKIXParameters $r17;
        java.util.Set $r18;
        java.util.Collection $r19;
        java.lang.Integer $r20;
        org.spongycastle.i18n.filter.UntrustedInput $r21;
        boolean[] $r22;
        boolean $z0;
        java.security.PublicKey r23, $r42;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r25;
        java.lang.String $r26;
        org.spongycastle.asn1.x509.CRLDistPoint r27, $r29;
        org.spongycastle.asn1.ASN1Primitive $r28;
        org.spongycastle.asn1.x509.AuthorityInformationAccess r30, $r31;
        java.util.Vector $r32, $r33;
        java.util.Iterator $r34;
        org.spongycastle.i18n.filter.UntrustedUrlInput $r35;
        org.spongycastle.x509.CertPathReviewerException r36, r54;
        java.lang.IllegalArgumentException r38;
        java.security.cert.CertPathValidatorException r39, r56;
        java.security.GeneralSecurityException r40, r43;
        java.lang.Class $r41;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r44;
        byte[] $r45;
        org.spongycastle.asn1.x509.AuthorityKeyIdentifier $r46;
        org.spongycastle.asn1.x509.GeneralNames $r47;
        org.spongycastle.asn1.x509.GeneralName[] $r48;
        java.math.BigInteger $r49;
        org.spongycastle.i18n.LocaleString $r50;
        org.spongycastle.jce.provider.AnnotatedException r51, r52, r55;
        org.spongycastle.asn1.x509.BasicConstraints $r53;
        java.io.IOException $r57;
        java.lang.Exception $r58;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        r7 = null;

        r8 = null;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        $r10 = newarray (java.lang.Object)[2];

        $r11 = new org.spongycastle.i18n.filter.TrustedInput;

        $r12 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.Date validDate>;

        specialinvoke $r11.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r12);

        $r10[0] = $r11;

        $r11 = new org.spongycastle.i18n.filter.TrustedInput;

        $r12 = new java.util.Date;

        specialinvoke $r12.<java.util.Date: void <init>()>();

        specialinvoke $r11.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r12);

        $r10[1] = $r11;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.certPathValidDate", $r10);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle)>(r9);

     label001:
        $r13 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

        $r14 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

     label002:
        $i1 = interfaceinvoke $r14.<java.util.List: int size()>();

     label003:
        $i1 = $i1 + -1;

     label004:
        $r15 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>($i1);

     label005:
        r16 = (java.security.cert.X509Certificate) $r15;

        $r17 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

     label006:
        $r18 = virtualinvoke $r17.<java.security.cert.PKIXParameters: java.util.Set getTrustAnchors()>();

        $r19 = virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.Collection getTrustAnchors(java.security.cert.X509Certificate,java.util.Set)>(r16, $r18);

        $i1 = interfaceinvoke $r19.<java.util.Collection: int size()>();

     label007:
        if $i1 <= 1 goto label037;

     label008:
        r9 = new org.spongycastle.i18n.ErrorBundle;

        $r10 = newarray (java.lang.Object)[2];

     label009:
        $i1 = interfaceinvoke $r19.<java.util.Collection: int size()>();

        $r20 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>($i1);

     label010:
        $r10[0] = $r20;

        $r21 = new org.spongycastle.i18n.filter.UntrustedInput;

     label011:
        r6 = virtualinvoke r16.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        specialinvoke $r21.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>(r6);

     label012:
        $r10[1] = $r21;

     label013:
        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.conflictingTrustAnchors", $r10);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle)>(r9);

     label014:
        if r7 == null goto label018;

        r16 = virtualinvoke r7.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        if r16 == null goto label063;

     label015:
        r6 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)>(r16);

     label016:
        r8 = r6;

     label017:
        if r16 == null goto label018;

        $r22 = virtualinvoke r16.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        if $r22 == null goto label018;

        $z0 = $r22[5];

        if $z0 != 0 goto label018;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.trustKeyUsage");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle)>(r9);

     label018:
        r23 = null;

        r16 = null;

        if r7 == null goto label020;

        $r24 = virtualinvoke r7.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        r16 = $r24;

        if $r24 == null goto label067;

        r23 = virtualinvoke $r24.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

     label019:
        $r25 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)>(r23);

        virtualinvoke $r25.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        virtualinvoke $r25.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

     label020:
        $r13 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

        $i1 = interfaceinvoke $r13.<java.util.List: int size()>();

        $i1 = $i1 + -1;

     label021:
        if $i1 < 0 goto label119;

        i0 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        i0 = i0 - $i1;

        $r13 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

        $r15 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>($i1);

        $r24 = (java.security.cert.X509Certificate) $r15;

        if r23 == null goto label070;

        $r17 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

     label022:
        $r26 = virtualinvoke $r17.<java.security.cert.PKIXParameters: java.lang.String getSigProvider()>();

        staticinvoke <org.spongycastle.x509.CertPathValidatorUtilities: void verifyX509Certificate(java.security.cert.X509Certificate,java.security.PublicKey,java.lang.String)>($r24, r23, $r26);

     label023:
        $r12 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.Date validDate>;

     label024:
        virtualinvoke $r24.<java.security.cert.X509Certificate: void checkValidity(java.util.Date)>($r12);

     label025:
        $r17 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

        $z0 = virtualinvoke $r17.<java.security.cert.PKIXParameters: boolean isRevocationEnabled()>();

        if $z0 == 0 goto label099;

        r27 = null;

        $r26 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String CRL_DIST_POINTS>;

     label026:
        $r28 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r24, $r26);

     label027:
        if $r28 == null goto label030;

     label028:
        $r29 = staticinvoke <org.spongycastle.asn1.x509.CRLDistPoint: org.spongycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)>($r28);

     label029:
        r27 = $r29;

     label030:
        r30 = null;

        $r26 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String AUTH_INFO_ACCESS>;

     label031:
        $r28 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r24, $r26);

     label032:
        if $r28 == null goto label035;

     label033:
        $r31 = staticinvoke <org.spongycastle.asn1.x509.AuthorityInformationAccess: org.spongycastle.asn1.x509.AuthorityInformationAccess getInstance(java.lang.Object)>($r28);

     label034:
        r30 = $r31;

     label035:
        $r32 = virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.Vector getCRLDistUrls(org.spongycastle.asn1.x509.CRLDistPoint)>(r27);

        $r33 = virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.Vector getOCSPUrls(org.spongycastle.asn1.x509.AuthorityInformationAccess)>(r30);

        $r34 = virtualinvoke $r32.<java.util.Vector: java.util.Iterator iterator()>();

     label036:
        $z0 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label095;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        $r10 = newarray (java.lang.Object)[1];

        $r35 = new org.spongycastle.i18n.filter.UntrustedUrlInput;

        $r15 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

        specialinvoke $r35.<org.spongycastle.i18n.filter.UntrustedUrlInput: void <init>(java.lang.Object)>($r15);

        $r10[0] = $r35;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlDistPoint", $r10);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

        goto label036;

     label037:
        $z0 = interfaceinvoke $r19.<java.util.Collection: boolean isEmpty()>();

     label038:
        if $z0 == 0 goto label047;

     label039:
        r9 = new org.spongycastle.i18n.ErrorBundle;

        $r10 = newarray (java.lang.Object)[2];

        $r21 = new org.spongycastle.i18n.filter.UntrustedInput;

     label040:
        r6 = virtualinvoke r16.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        specialinvoke $r21.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>(r6);

     label041:
        $r10[0] = $r21;

        $r17 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

     label042:
        $r18 = virtualinvoke $r17.<java.security.cert.PKIXParameters: java.util.Set getTrustAnchors()>();

        $i1 = interfaceinvoke $r18.<java.util.Set: int size()>();

        $r20 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>($i1);

     label043:
        $r10[1] = $r20;

     label044:
        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.noTrustAnchorFound", $r10);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle)>(r9);

     label045:
        goto label014;

     label046:
        r36 := @caughtexception;

        r9 = virtualinvoke r36.<org.spongycastle.x509.CertPathReviewerException: org.spongycastle.i18n.ErrorBundle getErrorMessage()>();

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle)>(r9);

        goto label014;

     label047:
        $r34 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();

        $r15 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

     label048:
        $r37 = (java.security.cert.TrustAnchor) $r15;

     label049:
        r7 = $r37;

     label050:
        $r24 = virtualinvoke $r37.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

     label051:
        if $r24 == null goto label061;

     label052:
        $r24 = virtualinvoke $r37.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        r23 = virtualinvoke $r24.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

     label053:
        $r17 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

     label054:
        $r26 = virtualinvoke $r17.<java.security.cert.PKIXParameters: java.lang.String getSigProvider()>();

        staticinvoke <org.spongycastle.x509.CertPathValidatorUtilities: void verifyX509Certificate(java.security.cert.X509Certificate,java.security.PublicKey,java.lang.String)>(r16, r23, $r26);

     label055:
        goto label014;

     label056:
        r3 := @caughtexception;

     label057:
        r9 = new org.spongycastle.i18n.ErrorBundle;

     label058:
        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.trustButInvalidCert");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle)>(r9);

     label059:
        goto label014;

     label060:
        r5 := @caughtexception;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        $r10 = newarray (java.lang.Object)[2];

        $r21 = new org.spongycastle.i18n.filter.UntrustedInput;

        $r26 = virtualinvoke r5.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r21.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>($r26);

        $r10[0] = $r21;

        $r21 = new org.spongycastle.i18n.filter.UntrustedInput;

        specialinvoke $r21.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>(r5);

        $r10[1] = $r21;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.unknown", $r10);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle)>(r9);

        goto label014;

     label061:
        r23 = virtualinvoke $r37.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

     label062:
        goto label053;

     label063:
        r6 = new javax.security.auth.x500.X500Principal;

     label064:
        $r26 = virtualinvoke r7.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        specialinvoke r6.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r26);

     label065:
        r8 = r6;

        goto label017;

     label066:
        r38 := @caughtexception;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        $r10 = newarray (java.lang.Object)[1];

        $r21 = new org.spongycastle.i18n.filter.UntrustedInput;

        $r26 = virtualinvoke r7.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        specialinvoke $r21.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>($r26);

        $r10[0] = $r21;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.trustDNInvalid", $r10);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle)>(r9);

        goto label017;

     label067:
        r23 = virtualinvoke r7.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

        goto label019;

     label068:
        r39 := @caughtexception;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.trustPubKeyError");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle)>(r9);

        goto label020;

     label069:
        r40 := @caughtexception;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        $r10 = newarray (java.lang.Object)[3];

        $r26 = virtualinvoke r40.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r10[0] = $r26;

        $r10[1] = r40;

        $r41 = virtualinvoke r40.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r41.<java.lang.Class: java.lang.String getName()>();

        $r10[2] = $r26;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.signatureNotVerified", $r10);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

        goto label023;

     label070:
        $z0 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: boolean isSelfIssued(java.security.cert.X509Certificate)>($r24);

        if $z0 == 0 goto label078;

     label071:
        $r42 = virtualinvoke $r24.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

     label072:
        $r17 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

     label073:
        $r26 = virtualinvoke $r17.<java.security.cert.PKIXParameters: java.lang.String getSigProvider()>();

        staticinvoke <org.spongycastle.x509.CertPathValidatorUtilities: void verifyX509Certificate(java.security.cert.X509Certificate,java.security.PublicKey,java.lang.String)>($r24, $r42, $r26);

     label074:
        r9 = new org.spongycastle.i18n.ErrorBundle;

     label075:
        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.rootKeyIsValidButNotATrustAnchor");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

     label076:
        goto label023;

     label077:
        r43 := @caughtexception;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        $r10 = newarray (java.lang.Object)[3];

        $r26 = virtualinvoke r43.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r10[0] = $r26;

        $r10[1] = r43;

        $r41 = virtualinvoke r43.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r41.<java.lang.Class: java.lang.String getName()>();

        $r10[2] = $r26;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.signatureNotVerified", $r10);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

        goto label023;

     label078:
        r9 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.NoIssuerPublicKey");

        $r44 = <org.spongycastle.asn1.x509.X509Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier AuthorityKeyIdentifier>;

        $r26 = virtualinvoke $r44.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r45 = virtualinvoke $r24.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r26);

        if $r45 == null goto label090;

     label079:
        $r28 = staticinvoke <org.spongycastle.x509.extension.X509ExtensionUtil: org.spongycastle.asn1.ASN1Primitive fromExtensionValue(byte[])>($r45);

        $r46 = staticinvoke <org.spongycastle.asn1.x509.AuthorityKeyIdentifier: org.spongycastle.asn1.x509.AuthorityKeyIdentifier getInstance(java.lang.Object)>($r28);

        $r47 = virtualinvoke $r46.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: org.spongycastle.asn1.x509.GeneralNames getAuthorityCertIssuer()>();

     label080:
        if $r47 == null goto label090;

     label081:
        $r48 = virtualinvoke $r47.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] getNames()>();

     label082:
        r4 = $r48[0];

     label083:
        $r49 = virtualinvoke $r46.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: java.math.BigInteger getAuthorityCertSerialNumber()>();

     label084:
        if $r49 == null goto label090;

        $r10 = newarray (java.lang.Object)[7];

        $r50 = new org.spongycastle.i18n.LocaleString;

     label085:
        specialinvoke $r50.<org.spongycastle.i18n.LocaleString: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "missingIssuer");

     label086:
        $r10[0] = $r50;

        $r10[1] = " \"";

        $r10[2] = r4;

        $r10[3] = "\" ";

        $r50 = new org.spongycastle.i18n.LocaleString;

     label087:
        specialinvoke $r50.<org.spongycastle.i18n.LocaleString: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "missingSerial");

     label088:
        $r10[4] = $r50;

        $r10[5] = " ";

        $r10[6] = $r49;

     label089:
        virtualinvoke r9.<org.spongycastle.i18n.ErrorBundle: void setExtraArguments(java.lang.Object[])>($r10);

     label090:
        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

        goto label023;

     label091:
        r2 := @caughtexception;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        $r10 = newarray (java.lang.Object)[1];

        $r11 = new org.spongycastle.i18n.filter.TrustedInput;

        $r12 = virtualinvoke $r24.<java.security.cert.X509Certificate: java.util.Date getNotBefore()>();

        specialinvoke $r11.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r12);

        $r10[0] = $r11;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.certificateNotYetValid", $r10);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

        goto label025;

     label092:
        r1 := @caughtexception;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        $r10 = newarray (java.lang.Object)[1];

        $r11 = new org.spongycastle.i18n.filter.TrustedInput;

        $r12 = virtualinvoke $r24.<java.security.cert.X509Certificate: java.util.Date getNotAfter()>();

        specialinvoke $r11.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r12);

        $r10[0] = $r11;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.certificateExpired", $r10);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

        goto label025;

     label093:
        r51 := @caughtexception;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlDistPtExtError");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

        goto label030;

     label094:
        r52 := @caughtexception;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlAuthInfoAccError");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

        goto label035;

     label095:
        $r34 = virtualinvoke $r33.<java.util.Vector: java.util.Iterator iterator()>();

     label096:
        $z0 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label097;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        $r10 = newarray (java.lang.Object)[1];

        $r35 = new org.spongycastle.i18n.filter.UntrustedUrlInput;

        $r15 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

        specialinvoke $r35.<org.spongycastle.i18n.filter.UntrustedUrlInput: void <init>(java.lang.Object)>($r15);

        $r10[0] = $r35;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.ocspLocation", $r10);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

        goto label096;

     label097:
        $r17 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

        $r12 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.Date validDate>;

     label098:
        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void checkRevocation(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,java.util.Vector,int)>($r17, $r24, $r12, r16, r23, $r32, $r33, $i1);

     label099:
        if r8 == null goto label100;

        r6 = virtualinvoke $r24.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $z0 = virtualinvoke r6.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>(r8);

        if $z0 != 0 goto label100;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        $r10 = newarray (java.lang.Object)[2];

        $r26 = virtualinvoke r8.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

        $r10[0] = $r26;

        r8 = virtualinvoke $r24.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r26 = virtualinvoke r8.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

        $r10[1] = $r26;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.certWrongIssuer", $r10);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

     label100:
        $i2 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        if i0 == $i2 goto label108;

        if $r24 == null goto label101;

        i0 = virtualinvoke $r24.<java.security.cert.X509Certificate: int getVersion()>();

        if i0 != 1 goto label101;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.noCACert");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

     label101:
        $r26 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String BASIC_CONSTRAINTS>;

     label102:
        $r28 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r24, $r26);

        $r53 = staticinvoke <org.spongycastle.asn1.x509.BasicConstraints: org.spongycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r28);

     label103:
        if $r53 == null goto label114;

     label104:
        $z0 = virtualinvoke $r53.<org.spongycastle.asn1.x509.BasicConstraints: boolean isCA()>();

     label105:
        if $z0 != 0 goto label107;

        r9 = new org.spongycastle.i18n.ErrorBundle;

     label106:
        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.noCACert");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

     label107:
        $r22 = virtualinvoke $r24.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        if $r22 == null goto label108;

        $z0 = $r22[5];

        if $z0 != 0 goto label108;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.noCertSign");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

     label108:
        r16 = $r24;

        r8 = virtualinvoke $r24.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r13 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

     label109:
        $r42 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: java.security.PublicKey getNextWorkingKey(java.util.List,int)>($r13, $i1);

     label110:
        r23 = $r42;

     label111:
        $r25 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)>($r42);

        virtualinvoke $r25.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        virtualinvoke $r25.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

     label112:
        $i1 = $i1 + -1;

        goto label021;

     label113:
        r54 := @caughtexception;

        r9 = virtualinvoke r54.<org.spongycastle.x509.CertPathReviewerException: org.spongycastle.i18n.ErrorBundle getErrorMessage()>();

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

        goto label099;

     label114:
        r9 = new org.spongycastle.i18n.ErrorBundle;

     label115:
        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.noBasicConstraints");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

     label116:
        goto label107;

     label117:
        r55 := @caughtexception;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.errorProcesingBC");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

        goto label107;

     label118:
        r56 := @caughtexception;

        r9 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r9.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.pubKeyError");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r9, $i1);

        goto label112;

     label119:
        r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.TrustAnchor trustAnchor> = r7;

        r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.PublicKey subjectPublicKey> = r23;

        return;

     label120:
        $r57 := @caughtexception;

        goto label090;

     label121:
        $r58 := @caughtexception;

        goto label014;

        catch org.spongycastle.x509.CertPathReviewerException from label002 to label003 with label046;
        catch org.spongycastle.x509.CertPathReviewerException from label004 to label005 with label046;
        catch org.spongycastle.x509.CertPathReviewerException from label006 to label007 with label046;
        catch org.spongycastle.x509.CertPathReviewerException from label009 to label010 with label046;
        catch org.spongycastle.x509.CertPathReviewerException from label011 to label012 with label046;
        catch org.spongycastle.x509.CertPathReviewerException from label013 to label014 with label046;
        catch java.lang.Throwable from label001 to label003 with label060;
        catch java.lang.Throwable from label004 to label007 with label060;
        catch java.lang.Throwable from label008 to label014 with label060;
        catch java.lang.IllegalArgumentException from label015 to label016 with label066;
        catch java.security.cert.CertPathValidatorException from label019 to label020 with label068;
        catch java.security.GeneralSecurityException from label022 to label023 with label069;
        catch java.security.cert.CertificateNotYetValidException from label024 to label025 with label091;
        catch java.security.cert.CertificateExpiredException from label024 to label025 with label092;
        catch org.spongycastle.jce.provider.AnnotatedException from label026 to label027 with label093;
        catch org.spongycastle.jce.provider.AnnotatedException from label028 to label029 with label093;
        catch org.spongycastle.jce.provider.AnnotatedException from label031 to label032 with label094;
        catch org.spongycastle.jce.provider.AnnotatedException from label033 to label034 with label094;
        catch org.spongycastle.x509.CertPathReviewerException from label037 to label038 with label046;
        catch org.spongycastle.x509.CertPathReviewerException from label040 to label041 with label046;
        catch org.spongycastle.x509.CertPathReviewerException from label042 to label043 with label046;
        catch org.spongycastle.x509.CertPathReviewerException from label044 to label045 with label046;
        catch java.lang.Throwable from label037 to label038 with label060;
        catch java.lang.Throwable from label039 to label045 with label060;
        catch org.spongycastle.x509.CertPathReviewerException from label047 to label048 with label046;
        catch org.spongycastle.x509.CertPathReviewerException from label050 to label051 with label046;
        catch org.spongycastle.x509.CertPathReviewerException from label052 to label053 with label046;
        catch java.lang.Throwable from label047 to label049 with label060;
        catch java.lang.Throwable from label050 to label051 with label060;
        catch java.lang.Throwable from label052 to label053 with label060;
        catch java.security.SignatureException from label054 to label055 with label056;
        catch java.lang.Exception from label053 to label055 with label121;
        catch java.lang.Throwable from label053 to label055 with label060;
        catch org.spongycastle.x509.CertPathReviewerException from label058 to label059 with label046;
        catch java.lang.Throwable from label057 to label059 with label060;
        catch org.spongycastle.x509.CertPathReviewerException from label061 to label062 with label046;
        catch java.lang.Throwable from label061 to label062 with label060;
        catch java.lang.IllegalArgumentException from label064 to label065 with label066;
        catch java.security.GeneralSecurityException from label071 to label072 with label077;
        catch java.security.GeneralSecurityException from label073 to label074 with label077;
        catch java.security.GeneralSecurityException from label075 to label076 with label077;
        catch java.io.IOException from label079 to label080 with label120;
        catch java.io.IOException from label081 to label082 with label120;
        catch java.io.IOException from label083 to label084 with label120;
        catch java.io.IOException from label085 to label086 with label120;
        catch java.io.IOException from label087 to label088 with label120;
        catch java.io.IOException from label089 to label090 with label120;
        catch org.spongycastle.x509.CertPathReviewerException from label098 to label099 with label113;
        catch org.spongycastle.jce.provider.AnnotatedException from label102 to label103 with label117;
        catch org.spongycastle.jce.provider.AnnotatedException from label104 to label105 with label117;
        catch org.spongycastle.jce.provider.AnnotatedException from label106 to label107 with label117;
        catch java.security.cert.CertPathValidatorException from label109 to label110 with label118;
        catch java.security.cert.CertPathValidatorException from label111 to label112 with label118;
        catch org.spongycastle.jce.provider.AnnotatedException from label115 to label116 with label117;
    }
    private java.security.cert.X509CRL getCRL(java.lang.String) throws org.spongycastle.x509.CertPathReviewerException
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.lang.String $r1, $r5;
        java.lang.Exception r2;
        org.spongycastle.i18n.ErrorBundle r3;
        java.net.URL r4;
        boolean $z0;
        java.net.URLConnection $r6;
        java.net.HttpURLConnection r7;
        int $i0;
        java.security.cert.CertificateFactory $r8;
        java.io.InputStream $r9;
        java.security.cert.CRL $r10;
        java.security.cert.X509CRL r11;
        java.lang.Object[] $r12;
        org.spongycastle.i18n.filter.UntrustedInput $r13;
        java.lang.Class $r14;
        org.spongycastle.x509.CertPathReviewerException $r15;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: java.lang.String;

        r4 = new java.net.URL;

     label01:
        specialinvoke r4.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke r4.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("http");

     label02:
        if $z0 != 0 goto label05;

     label03:
        $r5 = virtualinvoke r4.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("https");

     label04:
        if $z0 == 0 goto label12;

     label05:
        $r6 = virtualinvoke r4.<java.net.URL: java.net.URLConnection openConnection()>();

        r7 = (java.net.HttpURLConnection) $r6;

        virtualinvoke r7.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

        virtualinvoke r7.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke r7.<java.net.HttpURLConnection: void connect()>();

        $i0 = virtualinvoke r7.<java.net.HttpURLConnection: int getResponseCode()>();

     label06:
        if $i0 != 200 goto label09;

     label07:
        $r8 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>("X.509", "SC");

        $r9 = virtualinvoke r7.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r10 = virtualinvoke $r8.<java.security.cert.CertificateFactory: java.security.cert.CRL generateCRL(java.io.InputStream)>($r9);

        r11 = (java.security.cert.X509CRL) $r10;

     label08:
        return r11;

     label09:
        r2 = new java.lang.Exception;

     label10:
        $r5 = virtualinvoke r7.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        specialinvoke r2.<java.lang.Exception: void <init>(java.lang.String)>($r5);

        throw r2;

     label11:
        r2 := @caughtexception;

        r3 = new org.spongycastle.i18n.ErrorBundle;

        $r12 = newarray (java.lang.Object)[4];

        $r13 = new org.spongycastle.i18n.filter.UntrustedInput;

        specialinvoke $r13.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>($r1);

        $r12[0] = $r13;

        $r1 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r12[1] = $r1;

        $r12[2] = r2;

        $r14 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r12[3] = $r1;

        specialinvoke r3.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.loadCrlDistPointError", $r12);

        $r15 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke $r15.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>(r3);

        throw $r15;

     label12:
        return null;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label10 to label11 with label11;
    }
    private boolean processQcStatements(java.security.cert.X509Certificate, int)
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.security.cert.X509Certificate $r1;
        int $i0, i1, $i2;
        org.spongycastle.jce.provider.AnnotatedException r2;
        double d0, $d1;
        boolean z0, $z1;
        java.lang.String $r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        org.spongycastle.asn1.ASN1Sequence r5;
        org.spongycastle.asn1.ASN1Encodable $r6;
        org.spongycastle.asn1.x509.qualified.QCStatement $r7;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r8, $r9;
        org.spongycastle.i18n.ErrorBundle r10;
        org.spongycastle.asn1.x509.qualified.MonetaryValue $r11;
        java.math.BigInteger $r12;
        org.spongycastle.asn1.x509.qualified.Iso4217CurrencyCode $r13;
        java.lang.Object[] $r14;
        org.spongycastle.i18n.filter.TrustedInput $r15;
        java.lang.Double $r16;
        java.lang.Integer $r17;
        org.spongycastle.i18n.filter.UntrustedInput $r18;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $i0 := @parameter1: int;

        z0 = 0;

        $r3 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String QC_STATEMENT>;

     label01:
        $r4 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r1, $r3);

     label02:
        r5 = (org.spongycastle.asn1.ASN1Sequence) $r4;

        i1 = 0;

     label03:
        $i2 = virtualinvoke r5.<org.spongycastle.asn1.ASN1Sequence: int size()>();

     label04:
        if i1 >= $i2 goto label47;

     label05:
        $r6 = virtualinvoke r5.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(i1);

        $r7 = staticinvoke <org.spongycastle.asn1.x509.qualified.QCStatement: org.spongycastle.asn1.x509.qualified.QCStatement getInstance(java.lang.Object)>($r6);

     label06:
        $r8 = <org.spongycastle.asn1.x509.qualified.QCStatement: org.spongycastle.asn1.ASN1ObjectIdentifier id_etsi_qcs_QcCompliance>;

     label07:
        $r9 = virtualinvoke $r7.<org.spongycastle.asn1.x509.qualified.QCStatement: org.spongycastle.asn1.ASN1ObjectIdentifier getStatementId()>();

        $z1 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r9);

     label08:
        if $z1 == 0 goto label11;

        r10 = new org.spongycastle.i18n.ErrorBundle;

     label09:
        specialinvoke r10.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.QcEuCompliance");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r10, $i0);

     label10:
        i1 = i1 + 1;

        goto label03;

     label11:
        $r8 = <org.spongycastle.asn1.x509.qualified.QCStatement: org.spongycastle.asn1.ASN1ObjectIdentifier id_qcs_pkixQCSyntax_v1>;

     label12:
        $r9 = virtualinvoke $r7.<org.spongycastle.asn1.x509.qualified.QCStatement: org.spongycastle.asn1.ASN1ObjectIdentifier getStatementId()>();

        $z1 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r9);

     label13:
        if $z1 != 0 goto label10;

        $r8 = <org.spongycastle.asn1.x509.qualified.QCStatement: org.spongycastle.asn1.ASN1ObjectIdentifier id_etsi_qcs_QcSSCD>;

     label14:
        $r9 = virtualinvoke $r7.<org.spongycastle.asn1.x509.qualified.QCStatement: org.spongycastle.asn1.ASN1ObjectIdentifier getStatementId()>();

        $z1 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r9);

     label15:
        if $z1 == 0 goto label19;

        r10 = new org.spongycastle.i18n.ErrorBundle;

     label16:
        specialinvoke r10.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.QcSSCD");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r10, $i0);

     label17:
        goto label10;

     label18:
        r2 := @caughtexception;

        r10 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r10.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.QcStatementExtError");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r10, $i0);

        return 0;

     label19:
        $r8 = <org.spongycastle.asn1.x509.qualified.QCStatement: org.spongycastle.asn1.ASN1ObjectIdentifier id_etsi_qcs_LimiteValue>;

     label20:
        $r9 = virtualinvoke $r7.<org.spongycastle.asn1.x509.qualified.QCStatement: org.spongycastle.asn1.ASN1ObjectIdentifier getStatementId()>();

        $z1 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r9);

     label21:
        if $z1 == 0 goto label40;

     label22:
        $r6 = virtualinvoke $r7.<org.spongycastle.asn1.x509.qualified.QCStatement: org.spongycastle.asn1.ASN1Encodable getStatementInfo()>();

        $r11 = staticinvoke <org.spongycastle.asn1.x509.qualified.MonetaryValue: org.spongycastle.asn1.x509.qualified.MonetaryValue getInstance(java.lang.Object)>($r6);

        virtualinvoke $r11.<org.spongycastle.asn1.x509.qualified.MonetaryValue: org.spongycastle.asn1.x509.qualified.Iso4217CurrencyCode getCurrency()>();

        $r12 = virtualinvoke $r11.<org.spongycastle.asn1.x509.qualified.MonetaryValue: java.math.BigInteger getAmount()>();

        d0 = virtualinvoke $r12.<java.math.BigInteger: double doubleValue()>();

        $r12 = virtualinvoke $r11.<org.spongycastle.asn1.x509.qualified.MonetaryValue: java.math.BigInteger getExponent()>();

        $d1 = virtualinvoke $r12.<java.math.BigInteger: double doubleValue()>();

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d1);

     label23:
        d0 = d0 * $d1;

     label24:
        $r13 = virtualinvoke $r11.<org.spongycastle.asn1.x509.qualified.MonetaryValue: org.spongycastle.asn1.x509.qualified.Iso4217CurrencyCode getCurrency()>();

        $z1 = virtualinvoke $r13.<org.spongycastle.asn1.x509.qualified.Iso4217CurrencyCode: boolean isAlphabetic()>();

     label25:
        if $z1 == 0 goto label33;

        r10 = new org.spongycastle.i18n.ErrorBundle;

        $r14 = newarray (java.lang.Object)[3];

     label26:
        $r13 = virtualinvoke $r11.<org.spongycastle.asn1.x509.qualified.MonetaryValue: org.spongycastle.asn1.x509.qualified.Iso4217CurrencyCode getCurrency()>();

        $r3 = virtualinvoke $r13.<org.spongycastle.asn1.x509.qualified.Iso4217CurrencyCode: java.lang.String getAlphabetic()>();

     label27:
        $r14[0] = $r3;

        $r15 = new org.spongycastle.i18n.filter.TrustedInput;

        $r16 = new java.lang.Double;

     label28:
        specialinvoke $r16.<java.lang.Double: void <init>(double)>(d0);

        specialinvoke $r15.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r16);

     label29:
        $r14[1] = $r15;

        $r14[2] = $r11;

     label30:
        specialinvoke r10.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.QcLimitValueAlpha", $r14);

     label31:
        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r10, $i0);

     label32:
        goto label10;

     label33:
        r10 = new org.spongycastle.i18n.ErrorBundle;

        $r14 = newarray (java.lang.Object)[3];

     label34:
        $r13 = virtualinvoke $r11.<org.spongycastle.asn1.x509.qualified.MonetaryValue: org.spongycastle.asn1.x509.qualified.Iso4217CurrencyCode getCurrency()>();

        $i2 = virtualinvoke $r13.<org.spongycastle.asn1.x509.qualified.Iso4217CurrencyCode: int getNumeric()>();

        $r17 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>($i2);

     label35:
        $r14[0] = $r17;

        $r15 = new org.spongycastle.i18n.filter.TrustedInput;

        $r16 = new java.lang.Double;

     label36:
        specialinvoke $r16.<java.lang.Double: void <init>(double)>(d0);

        specialinvoke $r15.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r16);

     label37:
        $r14[1] = $r15;

        $r14[2] = $r11;

     label38:
        specialinvoke r10.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.QcLimitValueNum", $r14);

     label39:
        goto label31;

     label40:
        r10 = new org.spongycastle.i18n.ErrorBundle;

        $r14 = newarray (java.lang.Object)[2];

     label41:
        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.x509.qualified.QCStatement: org.spongycastle.asn1.ASN1ObjectIdentifier getStatementId()>();

     label42:
        $r14[0] = $r8;

        $r18 = new org.spongycastle.i18n.filter.UntrustedInput;

     label43:
        specialinvoke $r18.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>($r7);

     label44:
        $r14[1] = $r18;

     label45:
        specialinvoke r10.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.QcUnknownStatement", $r14);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r10, $i0);

     label46:
        z0 = 1;

        goto label10;

     label47:
        if z0 != 0 goto label48;

        return 1;

     label48:
        return 0;

        catch org.spongycastle.jce.provider.AnnotatedException from label01 to label02 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label03 to label04 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label05 to label06 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label07 to label08 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label09 to label10 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label12 to label13 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label14 to label15 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label16 to label17 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label20 to label21 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label22 to label23 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label24 to label25 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label26 to label27 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label28 to label29 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label30 to label32 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label34 to label35 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label36 to label37 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label38 to label39 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label41 to label42 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label43 to label44 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label45 to label46 with label18;
    }
    protected void addError(org.spongycastle.i18n.ErrorBundle)
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        org.spongycastle.i18n.ErrorBundle $r1;
        java.util.List[] $r2;
        java.util.List $r3;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: org.spongycastle.i18n.ErrorBundle;

        $r2 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] errors>;

        $r3 = $r2[0];

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    protected void addError(org.spongycastle.i18n.ErrorBundle, int)
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        org.spongycastle.i18n.ErrorBundle $r1;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r2;
        java.util.List[] $r3;
        java.util.List $r4;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: org.spongycastle.i18n.ErrorBundle;

        $i0 := @parameter1: int;

        if $i0 < -1 goto label1;

        $i1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        if $i0 < $i1 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label2:
        $r3 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] errors>;

        $i0 = $i0 + 1;

        $r4 = $r3[$i0];

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    protected void addNotification(org.spongycastle.i18n.ErrorBundle)
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        org.spongycastle.i18n.ErrorBundle $r1;
        java.util.List[] $r2;
        java.util.List $r3;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: org.spongycastle.i18n.ErrorBundle;

        $r2 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] notifications>;

        $r3 = $r2[0];

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    protected void addNotification(org.spongycastle.i18n.ErrorBundle, int)
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        org.spongycastle.i18n.ErrorBundle $r1;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r2;
        java.util.List[] $r3;
        java.util.List $r4;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: org.spongycastle.i18n.ErrorBundle;

        $i0 := @parameter1: int;

        if $i0 < -1 goto label1;

        $i1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        if $i0 < $i1 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label2:
        $r3 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] notifications>;

        $i0 = $i0 + 1;

        $r4 = $r3[$i0];

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    protected void checkCRLs(java.security.cert.PKIXParameters, java.security.cert.X509Certificate, java.util.Date, java.security.cert.X509Certificate, java.security.PublicKey, java.util.Vector, int) throws org.spongycastle.x509.CertPathReviewerException
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.security.cert.PKIXParameters $r1, $r37;
        java.security.cert.X509Certificate $r2, $r4;
        java.util.Date $r3, $r26, $r27;
        java.security.PublicKey $r5;
        java.util.Vector $r6;
        int $i0, $i1;
        org.spongycastle.x509.X509CRLStoreSelector r7, $r16;
        org.spongycastle.x509.CertPathReviewerException r8;
        org.spongycastle.i18n.LocaleString r9;
        java.util.ArrayList r10;
        javax.security.auth.x500.X500Principal $r11, $r30;
        byte[] $r12;
        org.spongycastle.x509.PKIXCRLUtil $r13;
        java.util.Set $r14;
        java.util.Iterator $r15, $r17;
        boolean $z0, $z1, $z2;
        java.lang.Object $r18;
        java.security.cert.X509CRL $r19, $r29;
        org.spongycastle.jce.provider.AnnotatedException r20, r46, r50, r51, r53, r54, r55, r58;
        org.spongycastle.i18n.ErrorBundle r21;
        java.lang.Object[] $r22;
        java.lang.Throwable $r23;
        java.lang.String $r24, $r32;
        java.lang.Class $r25;
        org.spongycastle.i18n.filter.TrustedInput $r28;
        org.spongycastle.i18n.filter.UntrustedInput $r31;
        org.spongycastle.i18n.filter.UntrustedUrlInput $r33;
        java.io.IOException r34, r52;
        java.util.Collection $r35;
        java.lang.Integer $r36;
        boolean[] $r38;
        java.math.BigInteger $r39, $r49;
        java.security.cert.X509CRLEntry $r40;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r41;
        org.spongycastle.asn1.ASN1Primitive $r42, $r47;
        org.spongycastle.asn1.ASN1Enumerated $r43;
        java.lang.String[] $r44;
        java.lang.Exception r45;
        org.spongycastle.asn1.ASN1Integer r48;
        org.spongycastle.asn1.x509.IssuingDistributionPoint $r56;
        org.spongycastle.asn1.x509.BasicConstraints $r57;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: java.security.cert.PKIXParameters;

        $r2 := @parameter1: java.security.cert.X509Certificate;

        $r3 := @parameter2: java.util.Date;

        $r4 := @parameter3: java.security.cert.X509Certificate;

        $r5 := @parameter4: java.security.PublicKey;

        $r6 := @parameter5: java.util.Vector;

        $i0 := @parameter6: int;

        r7 = new org.spongycastle.x509.X509CRLStoreSelector;

        specialinvoke r7.<org.spongycastle.x509.X509CRLStoreSelector: void <init>()>();

     label001:
        $r11 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>($r2);

        $r12 = virtualinvoke $r11.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r7.<org.spongycastle.x509.X509CRLStoreSelector: void addIssuerName(byte[])>($r12);

     label002:
        virtualinvoke r7.<org.spongycastle.x509.X509CRLStoreSelector: void setCertificateChecking(java.security.cert.X509Certificate)>($r2);

        $r13 = <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.x509.PKIXCRLUtil CRL_UTIL>;

     label003:
        $r14 = virtualinvoke $r13.<org.spongycastle.x509.PKIXCRLUtil: java.util.Set findCRLs(org.spongycastle.x509.X509CRLStoreSelector,java.security.cert.PKIXParameters)>(r7, $r1);

        $r15 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label004:
        $z0 = interfaceinvoke $r14.<java.util.Collection: boolean isEmpty()>();

     label005:
        if $z0 == 0 goto label016;

        $r13 = <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.x509.PKIXCRLUtil CRL_UTIL>;

        $r16 = new org.spongycastle.x509.X509CRLStoreSelector;

     label006:
        specialinvoke $r16.<org.spongycastle.x509.X509CRLStoreSelector: void <init>()>();

        $r14 = virtualinvoke $r13.<org.spongycastle.x509.PKIXCRLUtil: java.util.Set findCRLs(org.spongycastle.x509.X509CRLStoreSelector,java.security.cert.PKIXParameters)>($r16, $r1);

        $r17 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label007:
        r10 = new java.util.ArrayList;

     label008:
        specialinvoke r10.<java.util.ArrayList: void <init>()>();

     label009:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

     label010:
        if $z0 == 0 goto label037;

     label011:
        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

     label012:
        $r19 = (java.security.cert.X509CRL) $r18;

     label013:
        $r11 = virtualinvoke $r19.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r11);

     label014:
        goto label009;

     label015:
        r20 := @caughtexception;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        $r22 = newarray (java.lang.Object)[3];

        $r23 = virtualinvoke r20.<org.spongycastle.jce.provider.AnnotatedException: java.lang.Throwable getCause()>();

        $r24 = virtualinvoke $r23.<java.lang.Throwable: java.lang.String getMessage()>();

        $r22[0] = $r24;

        $r23 = virtualinvoke r20.<org.spongycastle.jce.provider.AnnotatedException: java.lang.Throwable getCause()>();

        $r22[1] = $r23;

        $r23 = virtualinvoke r20.<org.spongycastle.jce.provider.AnnotatedException: java.lang.Throwable getCause()>();

        $r25 = virtualinvoke $r23.<java.lang.Object: java.lang.Class getClass()>();

        $r24 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        $r22[2] = $r24;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlExtractionError", $r22);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addError(org.spongycastle.i18n.ErrorBundle,int)>(r21, $i0);

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        $r15 = virtualinvoke r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label016:
        $z0 = 0;

        $r19 = null;

     label017:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label019;

        $r18 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (java.security.cert.X509CRL) $r18;

        $r26 = virtualinvoke $r19.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

        if $r26 == null goto label018;

        $r26 = virtualinvoke $r1.<java.security.cert.PKIXParameters: java.util.Date getDate()>();

        $r27 = virtualinvoke $r19.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

        $z1 = virtualinvoke $r26.<java.util.Date: boolean before(java.util.Date)>($r27);

        if $z1 == 0 goto label047;

     label018:
        $z0 = 1;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        $r22 = newarray (java.lang.Object)[2];

        $r28 = new org.spongycastle.i18n.filter.TrustedInput;

        $r26 = virtualinvoke $r19.<java.security.cert.X509CRL: java.util.Date getThisUpdate()>();

        specialinvoke $r28.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r26);

        $r22[0] = $r28;

        $r28 = new org.spongycastle.i18n.filter.TrustedInput;

        $r26 = virtualinvoke $r19.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

        specialinvoke $r28.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r26);

        $r22[1] = $r28;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.localValidCRL", $r22);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r21, $i0);

     label019:
        if $z0 != 0 goto label061;

        $r15 = virtualinvoke $r6.<java.util.Vector: java.util.Iterator iterator()>();

     label020:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label061;

     label021:
        $r18 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label022:
        $r24 = (java.lang.String) $r18;

     label023:
        $r29 = specialinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.X509CRL getCRL(java.lang.String)>($r24);

     label024:
        if $r29 == null goto label020;

     label025:
        $r11 = virtualinvoke $r2.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r30 = virtualinvoke $r29.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $z1 = virtualinvoke $r11.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r30);

     label026:
        if $z1 != 0 goto label048;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        $r22 = newarray (java.lang.Object)[3];

        $r31 = new org.spongycastle.i18n.filter.UntrustedInput;

     label027:
        $r11 = virtualinvoke $r29.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r32 = virtualinvoke $r11.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

        specialinvoke $r31.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>($r32);

     label028:
        $r22[0] = $r31;

        $r31 = new org.spongycastle.i18n.filter.UntrustedInput;

     label029:
        $r11 = virtualinvoke $r2.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r32 = virtualinvoke $r11.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

        specialinvoke $r31.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>($r32);

     label030:
        $r22[1] = $r31;

        $r33 = new org.spongycastle.i18n.filter.UntrustedUrlInput;

     label031:
        specialinvoke $r33.<org.spongycastle.i18n.filter.UntrustedUrlInput: void <init>(java.lang.Object)>($r24);

     label032:
        $r22[2] = $r33;

     label033:
        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.onlineCRLWrongCA", $r22);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r21, $i0);

     label034:
        goto label020;

     label035:
        r8 := @caughtexception;

        r21 = virtualinvoke r8.<org.spongycastle.x509.CertPathReviewerException: org.spongycastle.i18n.ErrorBundle getErrorMessage()>();

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r21, $i0);

        goto label020;

     label036:
        r34 := @caughtexception;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlIssuerException");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable)>(r21, r34);

        throw r8;

     label037:
        $i1 = interfaceinvoke r10.<java.util.List: int size()>();

     label038:
        r21 = new org.spongycastle.i18n.ErrorBundle;

        $r22 = newarray (java.lang.Object)[3];

        $r31 = new org.spongycastle.i18n.filter.UntrustedInput;

     label039:
        $r35 = virtualinvoke r7.<org.spongycastle.x509.X509CRLStoreSelector: java.util.Collection getIssuerNames()>();

        specialinvoke $r31.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>($r35);

     label040:
        $r22[0] = $r31;

        $r31 = new org.spongycastle.i18n.filter.UntrustedInput;

     label041:
        specialinvoke $r31.<org.spongycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>(r10);

     label042:
        $r22[1] = $r31;

     label043:
        $r36 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>($i1);

     label044:
        $r22[2] = $r36;

     label045:
        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.noCrlInCertstore", $r22);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r21, $i0);

     label046:
        goto label016;

     label047:
        r21 = new org.spongycastle.i18n.ErrorBundle;

        $r22 = newarray (java.lang.Object)[2];

        $r28 = new org.spongycastle.i18n.filter.TrustedInput;

        $r26 = virtualinvoke $r19.<java.security.cert.X509CRL: java.util.Date getThisUpdate()>();

        specialinvoke $r28.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r26);

        $r22[0] = $r28;

        $r28 = new org.spongycastle.i18n.filter.TrustedInput;

        $r26 = virtualinvoke $r19.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

        specialinvoke $r28.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r26);

        $r22[1] = $r28;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.localInvalidCRL", $r22);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r21, $i0);

        goto label017;

     label048:
        $r26 = virtualinvoke $r29.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

     label049:
        if $r26 == null goto label052;

        $r37 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

     label050:
        $r26 = virtualinvoke $r37.<java.security.cert.PKIXParameters: java.util.Date getDate()>();

        $r27 = virtualinvoke $r29.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

        $z1 = virtualinvoke $r26.<java.util.Date: boolean before(java.util.Date)>($r27);

     label051:
        if $z1 == 0 goto label063;

     label052:
        $z0 = 1;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        $r22 = newarray (java.lang.Object)[3];

        $r28 = new org.spongycastle.i18n.filter.TrustedInput;

     label053:
        $r26 = virtualinvoke $r29.<java.security.cert.X509CRL: java.util.Date getThisUpdate()>();

        specialinvoke $r28.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r26);

     label054:
        $r22[0] = $r28;

        $r28 = new org.spongycastle.i18n.filter.TrustedInput;

     label055:
        $r26 = virtualinvoke $r29.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

        specialinvoke $r28.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r26);

     label056:
        $r22[1] = $r28;

        $r33 = new org.spongycastle.i18n.filter.UntrustedUrlInput;

     label057:
        specialinvoke $r33.<org.spongycastle.i18n.filter.UntrustedUrlInput: void <init>(java.lang.Object)>($r24);

     label058:
        $r22[2] = $r33;

     label059:
        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.onlineValidCRL", $r22);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r21, $i0);

     label060:
        $r19 = $r29;

     label061:
        if $r19 == null goto label115;

        if $r4 == null goto label072;

        $r38 = virtualinvoke $r4.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        if $r38 == null goto label072;

        $i1 = lengthof $r38;

        if $i1 < 7 goto label062;

        $z1 = $r38[6];

        if $z1 != 0 goto label072;

     label062:
        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.noCrlSigningPermited");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>(r21);

        throw r8;

     label063:
        r21 = new org.spongycastle.i18n.ErrorBundle;

        $r22 = newarray (java.lang.Object)[3];

        $r28 = new org.spongycastle.i18n.filter.TrustedInput;

     label064:
        $r26 = virtualinvoke $r29.<java.security.cert.X509CRL: java.util.Date getThisUpdate()>();

        specialinvoke $r28.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r26);

     label065:
        $r22[0] = $r28;

        $r28 = new org.spongycastle.i18n.filter.TrustedInput;

     label066:
        $r26 = virtualinvoke $r29.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

        specialinvoke $r28.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r26);

     label067:
        $r22[1] = $r28;

        $r33 = new org.spongycastle.i18n.filter.UntrustedUrlInput;

     label068:
        specialinvoke $r33.<org.spongycastle.i18n.filter.UntrustedUrlInput: void <init>(java.lang.Object)>($r24);

     label069:
        $r22[2] = $r33;

     label070:
        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.onlineInvalidCRL", $r22);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r21, $i0);

     label071:
        goto label020;

     label072:
        if $r5 == null goto label080;

     label073:
        virtualinvoke $r19.<java.security.cert.X509CRL: void verify(java.security.PublicKey,java.lang.String)>($r5, "SC");

     label074:
        $r39 = virtualinvoke $r2.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        $r40 = virtualinvoke $r19.<java.security.cert.X509CRL: java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)>($r39);

        if $r40 == null goto label100;

        $r24 = null;

        $z1 = virtualinvoke $r40.<java.security.cert.X509CRLEntry: boolean hasExtensions()>();

        if $z1 == 0 goto label077;

        $r41 = <org.spongycastle.asn1.x509.X509Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier ReasonCode>;

     label075:
        $r32 = virtualinvoke $r41.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r42 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r40, $r32);

        $r43 = staticinvoke <org.spongycastle.asn1.ASN1Enumerated: org.spongycastle.asn1.ASN1Enumerated getInstance(java.lang.Object)>($r42);

     label076:
        if $r43 == null goto label077;

        $r44 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String[] crlReasons>;

        $r39 = virtualinvoke $r43.<org.spongycastle.asn1.ASN1Enumerated: java.math.BigInteger getValue()>();

        $i1 = virtualinvoke $r39.<java.math.BigInteger: int intValue()>();

        $r24 = $r44[$i1];

     label077:
        if $r24 != null goto label078;

        $r44 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String[] crlReasons>;

        $r24 = $r44[7];

     label078:
        r9 = new org.spongycastle.i18n.LocaleString;

        specialinvoke r9.<org.spongycastle.i18n.LocaleString: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", $r24);

        $r26 = virtualinvoke $r40.<java.security.cert.X509CRLEntry: java.util.Date getRevocationDate()>();

        $z1 = virtualinvoke $r3.<java.util.Date: boolean before(java.util.Date)>($r26);

        if $z1 != 0 goto label082;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        $r22 = newarray (java.lang.Object)[2];

        $r28 = new org.spongycastle.i18n.filter.TrustedInput;

        $r3 = virtualinvoke $r40.<java.security.cert.X509CRLEntry: java.util.Date getRevocationDate()>();

        specialinvoke $r28.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r3);

        $r22[0] = $r28;

        $r22[1] = r9;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.certRevoked", $r22);

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>(r21);

        throw r8;

     label079:
        r45 := @caughtexception;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlVerifyFailed");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable)>(r21, r45);

        throw r8;

     label080:
        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlNoIssuerPublicKey");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>(r21);

        throw r8;

     label081:
        r46 := @caughtexception;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlReasonExtError");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable)>(r21, r46);

        throw r8;

     label082:
        r21 = new org.spongycastle.i18n.ErrorBundle;

        $r22 = newarray (java.lang.Object)[2];

        $r28 = new org.spongycastle.i18n.filter.TrustedInput;

        $r3 = virtualinvoke $r40.<java.security.cert.X509CRLEntry: java.util.Date getRevocationDate()>();

        specialinvoke $r28.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r3);

        $r22[0] = $r28;

        $r22[1] = r9;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.revokedAfterValidation", $r22);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r21, $i0);

     label083:
        $r3 = virtualinvoke $r19.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

        if $r3 == null goto label084;

        $r3 = virtualinvoke $r19.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

        $r37 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

        $r26 = virtualinvoke $r37.<java.security.cert.PKIXParameters: java.util.Date getDate()>();

        $z1 = virtualinvoke $r3.<java.util.Date: boolean before(java.util.Date)>($r26);

        if $z1 == 0 goto label084;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        $r22 = newarray (java.lang.Object)[1];

        $r28 = new org.spongycastle.i18n.filter.TrustedInput;

        $r3 = virtualinvoke $r19.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

        specialinvoke $r28.<org.spongycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r3);

        $r22[0] = $r28;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlUpdateAvailable", $r22);

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r21, $i0);

     label084:
        $r24 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String ISSUING_DISTRIBUTION_POINT>;

     label085:
        $r42 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r19, $r24);

     label086:
        $r24 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String DELTA_CRL_INDICATOR>;

     label087:
        $r47 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r19, $r24);

     label088:
        if $r47 == null goto label108;

        r7 = new org.spongycastle.x509.X509CRLStoreSelector;

        specialinvoke r7.<org.spongycastle.x509.X509CRLStoreSelector: void <init>()>();

     label089:
        $r11 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>($r19);

        $r12 = virtualinvoke $r11.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r7.<org.spongycastle.x509.X509CRLStoreSelector: void addIssuerName(byte[])>($r12);

     label090:
        r48 = (org.spongycastle.asn1.ASN1Integer) $r47;

        $r39 = virtualinvoke r48.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        virtualinvoke r7.<org.spongycastle.x509.X509CRLStoreSelector: void setMinCRLNumber(java.math.BigInteger)>($r39);

        $r24 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String CRL_NUMBER>;

     label091:
        $r47 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r19, $r24);

     label092:
        r48 = (org.spongycastle.asn1.ASN1Integer) $r47;

     label093:
        $r39 = virtualinvoke r48.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        $r49 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        $r39 = virtualinvoke $r39.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r49);

        virtualinvoke r7.<org.spongycastle.x509.X509CRLStoreSelector: void setMaxCRLNumber(java.math.BigInteger)>($r39);

     label094:
        $z1 = 0;

        $r13 = <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.x509.PKIXCRLUtil CRL_UTIL>;

     label095:
        $r14 = virtualinvoke $r13.<org.spongycastle.x509.PKIXCRLUtil: java.util.Set findCRLs(org.spongycastle.x509.X509CRLStoreSelector,java.security.cert.PKIXParameters)>(r7, $r1);

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label096:
        $z2 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label099;

        $r18 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (java.security.cert.X509CRL) $r18;

        $r24 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String ISSUING_DISTRIBUTION_POINT>;

     label097:
        $r47 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r19, $r24);

     label098:
        if $r42 != null goto label107;

        if $r47 != null goto label096;

        $z1 = 1;

     label099:
        if $z1 != 0 goto label108;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.noBaseCRL");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>(r21);

        throw r8;

     label100:
        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.notRevoked");

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void addNotification(org.spongycastle.i18n.ErrorBundle,int)>(r21, $i0);

        goto label083;

     label101:
        r50 := @caughtexception;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.distrPtExtError");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>(r21);

        throw r8;

     label102:
        r51 := @caughtexception;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.deltaCrlExtError");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>(r21);

        throw r8;

     label103:
        r52 := @caughtexception;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlIssuerException");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable)>(r21, r52);

        throw r8;

     label104:
        r53 := @caughtexception;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlNbrExtError");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable)>(r21, r53);

        throw r8;

     label105:
        r54 := @caughtexception;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlExtractionError");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable)>(r21, r54);

        throw r8;

     label106:
        r55 := @caughtexception;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.distrPtExtError");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable)>(r21, r55);

        throw r8;

     label107:
        $z2 = virtualinvoke $r42.<org.spongycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>($r47);

        if $z2 == 0 goto label096;

        $z1 = 1;

        goto label099;

     label108:
        if $r42 == null goto label115;

        $r56 = staticinvoke <org.spongycastle.asn1.x509.IssuingDistributionPoint: org.spongycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>($r42);

        $r24 = <org.spongycastle.x509.PKIXCertPathReviewer: java.lang.String BASIC_CONSTRAINTS>;

     label109:
        $r42 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r2, $r24);

        $r57 = staticinvoke <org.spongycastle.asn1.x509.BasicConstraints: org.spongycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r42);

     label110:
        $z1 = virtualinvoke $r56.<org.spongycastle.asn1.x509.IssuingDistributionPoint: boolean onlyContainsUserCerts()>();

        if $z1 == 0 goto label112;

        if $r57 == null goto label112;

        $z1 = virtualinvoke $r57.<org.spongycastle.asn1.x509.BasicConstraints: boolean isCA()>();

        if $z1 == 0 goto label112;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlOnlyUserCert");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>(r21);

        throw r8;

     label111:
        r58 := @caughtexception;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlBCExtError");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle,java.lang.Throwable)>(r21, r58);

        throw r8;

     label112:
        $z1 = virtualinvoke $r56.<org.spongycastle.asn1.x509.IssuingDistributionPoint: boolean onlyContainsCACerts()>();

        if $z1 == 0 goto label114;

        if $r57 == null goto label113;

        $z1 = virtualinvoke $r57.<org.spongycastle.asn1.x509.BasicConstraints: boolean isCA()>();

        if $z1 != 0 goto label114;

     label113:
        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlOnlyCaCert");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>(r21);

        throw r8;

     label114:
        $z1 = virtualinvoke $r56.<org.spongycastle.asn1.x509.IssuingDistributionPoint: boolean onlyContainsAttributeCerts()>();

        if $z1 == 0 goto label115;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.crlOnlyAttrCert");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>(r21);

        throw r8;

     label115:
        if $z0 != 0 goto label116;

        r21 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r21.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.noValidCrlFound");

        r8 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke r8.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>(r21);

        throw r8;

     label116:
        return;

        catch java.io.IOException from label001 to label002 with label036;
        catch org.spongycastle.jce.provider.AnnotatedException from label003 to label004 with label015;
        catch org.spongycastle.jce.provider.AnnotatedException from label004 to label005 with label015;
        catch org.spongycastle.jce.provider.AnnotatedException from label006 to label007 with label015;
        catch org.spongycastle.jce.provider.AnnotatedException from label008 to label010 with label015;
        catch org.spongycastle.jce.provider.AnnotatedException from label011 to label012 with label015;
        catch org.spongycastle.jce.provider.AnnotatedException from label013 to label014 with label015;
        catch org.spongycastle.x509.CertPathReviewerException from label021 to label022 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label023 to label024 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label025 to label026 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label027 to label028 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label029 to label030 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label031 to label032 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label033 to label034 with label035;
        catch org.spongycastle.jce.provider.AnnotatedException from label037 to label038 with label015;
        catch org.spongycastle.jce.provider.AnnotatedException from label039 to label040 with label015;
        catch org.spongycastle.jce.provider.AnnotatedException from label041 to label042 with label015;
        catch org.spongycastle.jce.provider.AnnotatedException from label043 to label044 with label015;
        catch org.spongycastle.jce.provider.AnnotatedException from label045 to label046 with label015;
        catch org.spongycastle.x509.CertPathReviewerException from label048 to label049 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label050 to label051 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label053 to label054 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label055 to label056 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label057 to label058 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label059 to label060 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label064 to label065 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label066 to label067 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label068 to label069 with label035;
        catch org.spongycastle.x509.CertPathReviewerException from label070 to label071 with label035;
        catch java.lang.Exception from label073 to label074 with label079;
        catch org.spongycastle.jce.provider.AnnotatedException from label075 to label076 with label081;
        catch org.spongycastle.jce.provider.AnnotatedException from label085 to label086 with label101;
        catch org.spongycastle.jce.provider.AnnotatedException from label087 to label088 with label102;
        catch java.io.IOException from label089 to label090 with label103;
        catch org.spongycastle.jce.provider.AnnotatedException from label091 to label092 with label104;
        catch org.spongycastle.jce.provider.AnnotatedException from label093 to label094 with label104;
        catch org.spongycastle.jce.provider.AnnotatedException from label095 to label096 with label105;
        catch org.spongycastle.jce.provider.AnnotatedException from label097 to label098 with label106;
        catch org.spongycastle.jce.provider.AnnotatedException from label109 to label110 with label111;
    }
    protected void checkRevocation(java.security.cert.PKIXParameters, java.security.cert.X509Certificate, java.util.Date, java.security.cert.X509Certificate, java.security.PublicKey, java.util.Vector, java.util.Vector, int) throws org.spongycastle.x509.CertPathReviewerException
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.security.cert.PKIXParameters $r1;
        java.security.cert.X509Certificate $r2, $r4;
        java.util.Date $r3;
        java.security.PublicKey $r5;
        java.util.Vector $r6, $r7;
        int $i0;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: java.security.cert.PKIXParameters;

        $r2 := @parameter1: java.security.cert.X509Certificate;

        $r3 := @parameter2: java.util.Date;

        $r4 := @parameter3: java.security.cert.X509Certificate;

        $r5 := @parameter4: java.security.PublicKey;

        $r6 := @parameter5: java.util.Vector;

        $r7 := @parameter6: java.util.Vector;

        $i0 := @parameter7: int;

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)>($r1, $r2, $r3, $r4, $r5, $r6, $i0);

        return;
    }
    protected void doChecks()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        java.util.List[] $r2;
        int $i0, $i1;
        java.lang.Object[] $r3;
        java.util.ArrayList $r4;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $z0 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: boolean initialized>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Object not initialized. Call init() first.");

        throw $r1;

     label1:
        $r2 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] notifications>;

        if $r2 != null goto label4;

        $i0 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        $i0 = $i0 + 1;

        $r2 = newarray (java.util.List)[$i0];

        r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] notifications> = $r2;

        $i0 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        $i0 = $i0 + 1;

        $r2 = newarray (java.util.List)[$i0];

        r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] errors> = $r2;

        $i0 = 0;

     label2:
        $r2 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] notifications>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label3;

        $r3 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] notifications>;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r3[$i0] = $r4;

        $r3 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] errors>;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r3[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        specialinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void checkSignatures()>();

        specialinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void checkNameConstraints()>();

        specialinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void checkPathLength()>();

        specialinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void checkPolicy()>();

        specialinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void checkCriticalExtensions()>();

     label4:
        return;
    }
    protected java.util.Vector getCRLDistUrls(org.spongycastle.asn1.x509.CRLDistPoint)
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        org.spongycastle.asn1.x509.CRLDistPoint $r1;
        java.util.Vector r2;
        org.spongycastle.asn1.x509.DistributionPoint[] $r3;
        int i0, $i1, $i2;
        org.spongycastle.asn1.x509.DistributionPoint $r4;
        org.spongycastle.asn1.x509.DistributionPointName $r5;
        org.spongycastle.asn1.ASN1Encodable $r6;
        org.spongycastle.asn1.x509.GeneralNames $r7;
        org.spongycastle.asn1.x509.GeneralName[] $r8;
        org.spongycastle.asn1.x509.GeneralName $r9;
        org.spongycastle.asn1.DERIA5String $r10;
        java.lang.String $r11;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: org.spongycastle.asn1.x509.CRLDistPoint;

        r2 = new java.util.Vector;

        specialinvoke r2.<java.util.Vector: void <init>()>();

        if $r1 == null goto label5;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CRLDistPoint: org.spongycastle.asn1.x509.DistributionPoint[] getDistributionPoints()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r3;

        if i0 >= $i1 goto label5;

        $r4 = $r3[i0];

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x509.DistributionPoint: org.spongycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        $i1 = virtualinvoke $r5.<org.spongycastle.asn1.x509.DistributionPointName: int getType()>();

        if $i1 != 0 goto label4;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.DistributionPointName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r7 = staticinvoke <org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] getNames()>();

        $i1 = 0;

     label2:
        $i2 = lengthof $r8;

        if $i1 >= $i2 goto label4;

        $r9 = $r8[$i1];

        $i2 = virtualinvoke $r9.<org.spongycastle.asn1.x509.GeneralName: int getTagNo()>();

        if $i2 != 6 goto label3;

        $r9 = $r8[$i1];

        $r6 = virtualinvoke $r9.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r10 = (org.spongycastle.asn1.DERIA5String) $r6;

        $r11 = virtualinvoke $r10.<org.spongycastle.asn1.DERIA5String: java.lang.String getString()>();

        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r11);

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        return r2;
    }
    public java.security.cert.CertPath getCertPath()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.security.cert.CertPath r1;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        r1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath>;

        return r1;
    }
    public int getCertPathSize()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        int i0;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        i0 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n>;

        return i0;
    }
    public java.util.List getErrors(int)
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        int $i0;
        java.util.List[] $r1;
        java.util.List $r2;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $i0 := @parameter0: int;

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void doChecks()>();

        $r1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] errors>;

        $i0 = $i0 + 1;

        $r2 = $r1[$i0];

        return $r2;
    }
    public java.util.List[] getErrors()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.util.List[] r1;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void doChecks()>();

        r1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] errors>;

        return r1;
    }
    public java.util.List getNotifications(int)
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        int $i0;
        java.util.List[] $r1;
        java.util.List $r2;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $i0 := @parameter0: int;

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void doChecks()>();

        $r1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] notifications>;

        $i0 = $i0 + 1;

        $r2 = $r1[$i0];

        return $r2;
    }
    public java.util.List[] getNotifications()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.util.List[] r1;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void doChecks()>();

        r1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] notifications>;

        return r1;
    }
    protected java.util.Vector getOCSPUrls(org.spongycastle.asn1.x509.AuthorityInformationAccess)
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        org.spongycastle.asn1.x509.AuthorityInformationAccess $r1;
        java.util.Vector r2;
        org.spongycastle.asn1.x509.AccessDescription[] $r3;
        int i0, $i1;
        org.spongycastle.asn1.x509.AccessDescription $r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5, $r6;
        boolean $z0;
        org.spongycastle.asn1.x509.GeneralName $r7;
        org.spongycastle.asn1.ASN1Encodable $r8;
        org.spongycastle.asn1.DERIA5String $r9;
        java.lang.String $r10;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AuthorityInformationAccess;

        r2 = new java.util.Vector;

        specialinvoke r2.<java.util.Vector: void <init>()>();

        if $r1 == null goto label3;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AuthorityInformationAccess: org.spongycastle.asn1.x509.AccessDescription[] getAccessDescriptions()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r3;

        if i0 >= $i1 goto label3;

        $r4 = $r3[i0];

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x509.AccessDescription: org.spongycastle.asn1.ASN1ObjectIdentifier getAccessMethod()>();

        $r6 = <org.spongycastle.asn1.x509.AccessDescription: org.spongycastle.asn1.ASN1ObjectIdentifier id_ad_ocsp>;

        $z0 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r4 = $r3[i0];

        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.x509.AccessDescription: org.spongycastle.asn1.x509.GeneralName getAccessLocation()>();

        $i1 = virtualinvoke $r7.<org.spongycastle.asn1.x509.GeneralName: int getTagNo()>();

        if $i1 != 6 goto label2;

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r9 = (org.spongycastle.asn1.DERIA5String) $r8;

        $r10 = virtualinvoke $r9.<org.spongycastle.asn1.DERIA5String: java.lang.String getString()>();

        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r10);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return r2;
    }
    public java.security.cert.PolicyNode getPolicyTree()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.security.cert.PolicyNode r1;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void doChecks()>();

        r1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PolicyNode policyTree>;

        return r1;
    }
    public java.security.PublicKey getSubjectPublicKey()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.security.PublicKey r1;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void doChecks()>();

        r1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.PublicKey subjectPublicKey>;

        return r1;
    }
    public java.security.cert.TrustAnchor getTrustAnchor()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.security.cert.TrustAnchor r1;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void doChecks()>();

        r1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.TrustAnchor trustAnchor>;

        return r1;
    }
    protected java.util.Collection getTrustAnchors(java.security.cert.X509Certificate, java.util.Set) throws org.spongycastle.x509.CertPathReviewerException
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.security.cert.X509Certificate $r1, $r19;
        java.util.Set $r2;
        javax.security.auth.x500.X500Principal r3, $r22;
        java.security.cert.X509CertSelector r4;
        java.io.IOException r5;
        org.spongycastle.i18n.ErrorBundle r6;
        java.util.ArrayList r7;
        java.util.Iterator $r8;
        byte[] $r9;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r10;
        java.lang.String $r11;
        org.spongycastle.asn1.ASN1Primitive $r12;
        org.spongycastle.asn1.ASN1OctetString r13;
        org.spongycastle.asn1.x509.AuthorityKeyIdentifier $r14;
        java.math.BigInteger $r15;
        org.spongycastle.asn1.DEROctetString $r16;
        boolean $z0;
        java.lang.Object $r17;
        java.security.cert.TrustAnchor r18;
        org.spongycastle.x509.CertPathReviewerException $r20;
        java.security.PublicKey $r21;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 := @parameter1: java.util.Set;

        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $r8 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        r4 = new java.security.cert.X509CertSelector;

        specialinvoke r4.<java.security.cert.X509CertSelector: void <init>()>();

     label01:
        r3 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>($r1);

        $r9 = virtualinvoke r3.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r4.<java.security.cert.X509CertSelector: void setSubject(byte[])>($r9);

     label02:
        $r10 = <org.spongycastle.asn1.x509.X509Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier AuthorityKeyIdentifier>;

     label03:
        $r11 = virtualinvoke $r10.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r9 = virtualinvoke $r1.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r11);

     label04:
        if $r9 == null goto label10;

     label05:
        $r12 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r9);

     label06:
        r13 = (org.spongycastle.asn1.ASN1OctetString) $r12;

     label07:
        $r9 = virtualinvoke r13.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r12 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r9);

        $r14 = staticinvoke <org.spongycastle.asn1.x509.AuthorityKeyIdentifier: org.spongycastle.asn1.x509.AuthorityKeyIdentifier getInstance(java.lang.Object)>($r12);

        $r15 = virtualinvoke $r14.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: java.math.BigInteger getAuthorityCertSerialNumber()>();

        virtualinvoke r4.<java.security.cert.X509CertSelector: void setSerialNumber(java.math.BigInteger)>($r15);

        $r9 = virtualinvoke $r14.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: byte[] getKeyIdentifier()>();

     label08:
        if $r9 == null goto label10;

        $r16 = new org.spongycastle.asn1.DEROctetString;

     label09:
        specialinvoke $r16.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r9);

        $r9 = virtualinvoke $r16.<org.spongycastle.asn1.DEROctetString: byte[] getEncoded()>();

        virtualinvoke r4.<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>($r9);

     label10:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r17 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.security.cert.TrustAnchor) $r17;

        $r19 = virtualinvoke r18.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        if $r19 == null goto label12;

        $r19 = virtualinvoke r18.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        $z0 = virtualinvoke r4.<java.security.cert.X509CertSelector: boolean match(java.security.cert.Certificate)>($r19);

        if $z0 == 0 goto label10;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>(r18);

        goto label10;

     label11:
        r5 := @caughtexception;

        r6 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke r6.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.trustAnchorIssuerError");

        $r20 = new org.spongycastle.x509.CertPathReviewerException;

        specialinvoke $r20.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>(r6);

        throw $r20;

     label12:
        $r11 = virtualinvoke r18.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        if $r11 == null goto label10;

        $r21 = virtualinvoke r18.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

        if $r21 == null goto label10;

        $r22 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>($r1);

        r3 = new javax.security.auth.x500.X500Principal;

        $r11 = virtualinvoke r18.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        specialinvoke r3.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r11);

        $z0 = virtualinvoke $r22.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label10;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>(r18);

        goto label10;

     label13:
        return r7;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
    }
    public void init(java.security.cert.CertPath, java.security.cert.PKIXParameters) throws org.spongycastle.x509.CertPathReviewerException
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        java.security.cert.CertPath $r1;
        java.security.cert.PKIXParameters $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.lang.NullPointerException $r4;
        java.util.List $r5;
        int $i0;
        org.spongycastle.x509.CertPathReviewerException $r6;
        org.spongycastle.i18n.ErrorBundle $r7;
        java.lang.Object $r8;
        java.util.Date $r9;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        $r1 := @parameter0: java.security.cert.CertPath;

        $r2 := @parameter1: java.security.cert.PKIXParameters;

        $z0 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: boolean initialized>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("object is already initialized!");

        throw $r3;

     label1:
        r0.<org.spongycastle.x509.PKIXCertPathReviewer: boolean initialized> = 1;

        if $r1 != null goto label2;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("certPath was null");

        throw $r4;

     label2:
        r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.CertPath certPath> = $r1;

        $r5 = virtualinvoke $r1.<java.security.cert.CertPath: java.util.List getCertificates()>();

        r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs> = $r5;

        $r5 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        r0.<org.spongycastle.x509.PKIXCertPathReviewer: int n> = $i0;

        $r5 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List certs>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r6 = new org.spongycastle.x509.CertPathReviewerException;

        $r7 = new org.spongycastle.i18n.ErrorBundle;

        specialinvoke $r7.<org.spongycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.spongycastle.x509.CertPathReviewerMessages", "CertPathReviewer.emptyCertPath");

        specialinvoke $r6.<org.spongycastle.x509.CertPathReviewerException: void <init>(org.spongycastle.i18n.ErrorBundle)>($r7);

        throw $r6;

     label3:
        $r8 = virtualinvoke $r2.<java.security.cert.PKIXParameters: java.lang.Object clone()>();

        $r2 = (java.security.cert.PKIXParameters) $r8;

        r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams> = $r2;

        $r2 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PKIXParameters pkixParams>;

        $r9 = staticinvoke <org.spongycastle.x509.PKIXCertPathReviewer: java.util.Date getValidDate(java.security.cert.PKIXParameters)>($r2);

        r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.Date validDate> = $r9;

        r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] notifications> = null;

        r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] errors> = null;

        r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.TrustAnchor trustAnchor> = null;

        r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.PublicKey subjectPublicKey> = null;

        r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.security.cert.PolicyNode policyTree> = null;

        return;
    }
    public boolean isValidCertPath()
    {
        org.spongycastle.x509.PKIXCertPathReviewer r0;
        boolean $z0;
        int i0, $i1;
        java.util.List[] $r1;
        java.util.List $r2;

        r0 := @this: org.spongycastle.x509.PKIXCertPathReviewer;

        virtualinvoke r0.<org.spongycastle.x509.PKIXCertPathReviewer: void doChecks()>();

        i0 = 0;

     label1:
        $r1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] errors>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label3;

        $r1 = r0.<org.spongycastle.x509.PKIXCertPathReviewer: java.util.List[] errors>;

        $r2 = $r1[i0];

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 1;
    }
