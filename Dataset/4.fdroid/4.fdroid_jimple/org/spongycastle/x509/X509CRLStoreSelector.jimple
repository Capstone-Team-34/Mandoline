org.spongycastle.x509.X509CRLStoreSelector extends java.security.cert.X509CRLSelector implements org.spongycastle.util.Selector
private org.spongycastle.x509.X509AttributeCertificate attrCertChecking
private boolean completeCRLEnabled
private boolean deltaCRLIndicator
private byte[] issuingDistributionPoint
private boolean issuingDistributionPointEnabled
private java.math.BigInteger maxBaseCRLNumber
    public void <init>()
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        specialinvoke r0.<java.security.cert.X509CRLSelector: void <init>()>();

        r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean deltaCRLIndicator> = 0;

        r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean completeCRLEnabled> = 0;

        r0.<org.spongycastle.x509.X509CRLStoreSelector: java.math.BigInteger maxBaseCRLNumber> = null;

        r0.<org.spongycastle.x509.X509CRLStoreSelector: byte[] issuingDistributionPoint> = null;

        r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean issuingDistributionPointEnabled> = 0;

        return;
    }
    public static org.spongycastle.x509.X509CRLStoreSelector getInstance(java.security.cert.X509CRLSelector)
    {
        java.security.cert.X509CRLSelector $r0;
        org.spongycastle.x509.X509CRLStoreSelector r1;
        java.io.IOException r2;
        java.lang.IllegalArgumentException $r3;
        java.security.cert.X509Certificate $r4;
        java.util.Date $r5;
        java.util.Collection $r6;
        java.math.BigInteger $r7;
        java.lang.String $r8;

        $r0 := @parameter0: java.security.cert.X509CRLSelector;

        if $r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cannot create from null selector");

        throw $r3;

     label1:
        r1 = new org.spongycastle.x509.X509CRLStoreSelector;

        specialinvoke r1.<org.spongycastle.x509.X509CRLStoreSelector: void <init>()>();

        $r4 = virtualinvoke $r0.<java.security.cert.X509CRLSelector: java.security.cert.X509Certificate getCertificateChecking()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CRLStoreSelector: void setCertificateChecking(java.security.cert.X509Certificate)>($r4);

        $r5 = virtualinvoke $r0.<java.security.cert.X509CRLSelector: java.util.Date getDateAndTime()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CRLStoreSelector: void setDateAndTime(java.util.Date)>($r5);

     label2:
        $r6 = virtualinvoke $r0.<java.security.cert.X509CRLSelector: java.util.Collection getIssuerNames()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CRLStoreSelector: void setIssuerNames(java.util.Collection)>($r6);

     label3:
        $r6 = virtualinvoke $r0.<java.security.cert.X509CRLSelector: java.util.Collection getIssuers()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CRLStoreSelector: void setIssuers(java.util.Collection)>($r6);

        $r7 = virtualinvoke $r0.<java.security.cert.X509CRLSelector: java.math.BigInteger getMaxCRL()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CRLStoreSelector: void setMaxCRLNumber(java.math.BigInteger)>($r7);

        $r7 = virtualinvoke $r0.<java.security.cert.X509CRLSelector: java.math.BigInteger getMinCRL()>();

        virtualinvoke r1.<org.spongycastle.x509.X509CRLStoreSelector: void setMinCRLNumber(java.math.BigInteger)>($r7);

        return r1;

     label4:
        r2 := @caughtexception;

        $r3 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke r2.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

        catch java.io.IOException from label2 to label3 with label4;
    }
    public java.lang.Object clone()
    {
        org.spongycastle.x509.X509CRLStoreSelector r0, $r1;
        boolean $z0;
        java.math.BigInteger $r2;
        org.spongycastle.x509.X509AttributeCertificate $r3;
        byte[] $r4;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        $r1 = staticinvoke <org.spongycastle.x509.X509CRLStoreSelector: org.spongycastle.x509.X509CRLStoreSelector getInstance(java.security.cert.X509CRLSelector)>(r0);

        $z0 = r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean deltaCRLIndicator>;

        $r1.<org.spongycastle.x509.X509CRLStoreSelector: boolean deltaCRLIndicator> = $z0;

        $z0 = r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean completeCRLEnabled>;

        $r1.<org.spongycastle.x509.X509CRLStoreSelector: boolean completeCRLEnabled> = $z0;

        $r2 = r0.<org.spongycastle.x509.X509CRLStoreSelector: java.math.BigInteger maxBaseCRLNumber>;

        $r1.<org.spongycastle.x509.X509CRLStoreSelector: java.math.BigInteger maxBaseCRLNumber> = $r2;

        $r3 = r0.<org.spongycastle.x509.X509CRLStoreSelector: org.spongycastle.x509.X509AttributeCertificate attrCertChecking>;

        $r1.<org.spongycastle.x509.X509CRLStoreSelector: org.spongycastle.x509.X509AttributeCertificate attrCertChecking> = $r3;

        $z0 = r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean issuingDistributionPointEnabled>;

        $r1.<org.spongycastle.x509.X509CRLStoreSelector: boolean issuingDistributionPointEnabled> = $z0;

        $r4 = r0.<org.spongycastle.x509.X509CRLStoreSelector: byte[] issuingDistributionPoint>;

        $r4 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r4);

        $r1.<org.spongycastle.x509.X509CRLStoreSelector: byte[] issuingDistributionPoint> = $r4;

        return $r1;
    }
    public org.spongycastle.x509.X509AttributeCertificate getAttrCertificateChecking()
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        org.spongycastle.x509.X509AttributeCertificate r1;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        r1 = r0.<org.spongycastle.x509.X509CRLStoreSelector: org.spongycastle.x509.X509AttributeCertificate attrCertChecking>;

        return r1;
    }
    public byte[] getIssuingDistributionPoint()
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        $r1 = r0.<org.spongycastle.x509.X509CRLStoreSelector: byte[] issuingDistributionPoint>;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        return $r1;
    }
    public java.math.BigInteger getMaxBaseCRLNumber()
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        r1 = r0.<org.spongycastle.x509.X509CRLStoreSelector: java.math.BigInteger maxBaseCRLNumber>;

        return r1;
    }
    public boolean isCompleteCRLEnabled()
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        boolean z0;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        z0 = r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean completeCRLEnabled>;

        return z0;
    }
    public boolean isDeltaCRLIndicatorEnabled()
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        boolean z0;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        z0 = r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean deltaCRLIndicator>;

        return z0;
    }
    public boolean isIssuingDistributionPointEnabled()
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        boolean z0;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        z0 = r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean issuingDistributionPointEnabled>;

        return z0;
    }
    public boolean match(java.lang.Object)
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        java.lang.Exception r1;
        java.lang.Object r2;
        boolean $z0;
        java.security.cert.X509CRL r3;
        org.spongycastle.asn1.ASN1Integer r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;
        java.lang.String $r6;
        byte[] $r7, $r11;
        org.spongycastle.asn1.ASN1Primitive $r8;
        java.math.BigInteger $r9, $r10;
        int $i0;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        r2 := @parameter0: java.lang.Object;

        $z0 = r2 instanceof java.security.cert.X509CRL;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r3 = (java.security.cert.X509CRL) r2;

        r4 = null;

        $r5 = <org.spongycastle.asn1.x509.X509Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier DeltaCRLIndicator>;

     label02:
        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r7 = virtualinvoke r3.<java.security.cert.X509CRL: byte[] getExtensionValue(java.lang.String)>($r6);

     label03:
        if $r7 == null goto label05;

     label04:
        $r8 = staticinvoke <org.spongycastle.x509.extension.X509ExtensionUtil: org.spongycastle.asn1.ASN1Primitive fromExtensionValue(byte[])>($r7);

        r4 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r8);

     label05:
        $z0 = virtualinvoke r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean isDeltaCRLIndicatorEnabled()>();

        if $z0 == 0 goto label06;

        if r4 == null goto label12;

     label06:
        $z0 = virtualinvoke r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean isCompleteCRLEnabled()>();

        if $z0 == 0 goto label07;

        if r4 != null goto label12;

     label07:
        if r4 == null goto label08;

        $r9 = r0.<org.spongycastle.x509.X509CRLStoreSelector: java.math.BigInteger maxBaseCRLNumber>;

        if $r9 == null goto label08;

        $r9 = virtualinvoke r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        $r10 = r0.<org.spongycastle.x509.X509CRLStoreSelector: java.math.BigInteger maxBaseCRLNumber>;

        $i0 = virtualinvoke $r9.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r10);

        if $i0 == 1 goto label12;

     label08:
        $z0 = r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean issuingDistributionPointEnabled>;

        if $z0 == 0 goto label09;

        $r5 = <org.spongycastle.asn1.x509.X509Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier IssuingDistributionPoint>;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r7 = virtualinvoke r3.<java.security.cert.X509CRL: byte[] getExtensionValue(java.lang.String)>($r6);

        $r11 = r0.<org.spongycastle.x509.X509CRLStoreSelector: byte[] issuingDistributionPoint>;

        if $r11 != null goto label11;

        if $r7 != null goto label12;

     label09:
        r3 = (java.security.cert.X509CRL) r2;

        $z0 = specialinvoke r0.<java.security.cert.X509CRLSelector: boolean match(java.security.cert.CRL)>(r3);

        return $z0;

     label10:
        r1 := @caughtexception;

        return 0;

     label11:
        $r11 = r0.<org.spongycastle.x509.X509CRLStoreSelector: byte[] issuingDistributionPoint>;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r7, $r11);

        if $z0 != 0 goto label09;

     label12:
        return 0;

        catch java.lang.Exception from label02 to label03 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
    }
    public boolean match(java.security.cert.CRL)
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        java.security.cert.CRL $r1;
        boolean $z0;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        $r1 := @parameter0: java.security.cert.CRL;

        $z0 = virtualinvoke r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean match(java.lang.Object)>($r1);

        return $z0;
    }
    public void setAttrCertificateChecking(org.spongycastle.x509.X509AttributeCertificate)
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        org.spongycastle.x509.X509AttributeCertificate $r1;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        $r1 := @parameter0: org.spongycastle.x509.X509AttributeCertificate;

        r0.<org.spongycastle.x509.X509CRLStoreSelector: org.spongycastle.x509.X509AttributeCertificate attrCertChecking> = $r1;

        return;
    }
    public void setCompleteCRLEnabled(boolean)
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        boolean $z0;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean completeCRLEnabled> = $z0;

        return;
    }
    public void setDeltaCRLIndicatorEnabled(boolean)
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        boolean $z0;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean deltaCRLIndicator> = $z0;

        return;
    }
    public void setIssuingDistributionPoint(byte[])
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        $r1 := @parameter0: byte[];

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        r0.<org.spongycastle.x509.X509CRLStoreSelector: byte[] issuingDistributionPoint> = $r1;

        return;
    }
    public void setIssuingDistributionPointEnabled(boolean)
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        boolean $z0;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.x509.X509CRLStoreSelector: boolean issuingDistributionPointEnabled> = $z0;

        return;
    }
    public void setMaxBaseCRLNumber(java.math.BigInteger)
    {
        org.spongycastle.x509.X509CRLStoreSelector r0;
        java.math.BigInteger $r1;

        r0 := @this: org.spongycastle.x509.X509CRLStoreSelector;

        $r1 := @parameter0: java.math.BigInteger;

        r0.<org.spongycastle.x509.X509CRLStoreSelector: java.math.BigInteger maxBaseCRLNumber> = $r1;

        return;
    }
