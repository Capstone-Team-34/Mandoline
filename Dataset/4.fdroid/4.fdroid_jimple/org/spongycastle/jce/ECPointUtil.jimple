org.spongycastle.jce.ECPointUtil extends java.lang.Object
    public void <init>()
    {
        org.spongycastle.jce.ECPointUtil r0;

        r0 := @this: org.spongycastle.jce.ECPointUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.security.spec.ECPoint decodePoint(java.security.spec.EllipticCurve, byte[])
    {
        java.security.spec.EllipticCurve $r0;
        byte[] $r1;
        java.security.spec.ECField $r2;
        boolean $z0;
        java.lang.Object r3;
        java.security.spec.ECFieldFp $r4;
        java.math.BigInteger $r5, $r6, $r7;
        org.spongycastle.math.ec.ECPoint $r8;
        org.spongycastle.math.ec.ECFieldElement $r9;
        java.security.spec.ECFieldF2m $r10;
        int[] $r11;
        int $i0, $i1, $i2, $i3;
        org.spongycastle.math.ec.ECCurve$Fp $r12;
        java.security.spec.ECPoint $r13;
        org.spongycastle.math.ec.ECCurve$F2m $r14;
        org.spongycastle.math.ec.ECCurve $r15;

        $r0 := @parameter0: java.security.spec.EllipticCurve;

        $r1 := @parameter1: byte[];

        $r2 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.security.spec.ECField getField()>();

        $z0 = $r2 instanceof java.security.spec.ECFieldFp;

        if $z0 == 0 goto label2;

        $r12 = new org.spongycastle.math.ec.ECCurve$Fp;

        r3 = $r12;

        $r2 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.security.spec.ECField getField()>();

        $r4 = (java.security.spec.ECFieldFp) $r2;

        $r5 = virtualinvoke $r4.<java.security.spec.ECFieldFp: java.math.BigInteger getP()>();

        $r6 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.math.BigInteger getA()>();

        $r7 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.math.BigInteger getB()>();

        specialinvoke $r12.<org.spongycastle.math.ec.ECCurve$Fp: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r6, $r7);

     label1:
        $r15 = (org.spongycastle.math.ec.ECCurve) r3;

        $r8 = virtualinvoke $r15.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint decodePoint(byte[])>($r1);

        $r13 = new java.security.spec.ECPoint;

        $r9 = virtualinvoke $r8.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r5 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r9 = virtualinvoke $r8.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r6 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r13.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r5, $r6);

        return $r13;

     label2:
        $r2 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.security.spec.ECField getField()>();

        $r10 = (java.security.spec.ECFieldF2m) $r2;

        $r11 = virtualinvoke $r10.<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>();

        $i0 = lengthof $r11;

        if $i0 != 3 goto label3;

        $r14 = new org.spongycastle.math.ec.ECCurve$F2m;

        r3 = $r14;

        $r2 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.security.spec.ECField getField()>();

        $r10 = (java.security.spec.ECFieldF2m) $r2;

        $i0 = virtualinvoke $r10.<java.security.spec.ECFieldF2m: int getM()>();

        $i1 = $r11[2];

        $i2 = $r11[1];

        $i3 = $r11[0];

        $r5 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.math.BigInteger getA()>();

        $r6 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.math.BigInteger getB()>();

        specialinvoke $r14.<org.spongycastle.math.ec.ECCurve$F2m: void <init>(int,int,int,int,java.math.BigInteger,java.math.BigInteger)>($i0, $i1, $i2, $i3, $r5, $r6);

        goto label1;

     label3:
        $r14 = new org.spongycastle.math.ec.ECCurve$F2m;

        r3 = $r14;

        $r2 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.security.spec.ECField getField()>();

        $r10 = (java.security.spec.ECFieldF2m) $r2;

        $i0 = virtualinvoke $r10.<java.security.spec.ECFieldF2m: int getM()>();

        $i1 = $r11[0];

        $r5 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.math.BigInteger getA()>();

        $r6 = virtualinvoke $r0.<java.security.spec.EllipticCurve: java.math.BigInteger getB()>();

        specialinvoke $r14.<org.spongycastle.math.ec.ECCurve$F2m: void <init>(int,int,java.math.BigInteger,java.math.BigInteger)>($i0, $i1, $r5, $r6);

        goto label1;
    }
