org.spongycastle.jce.spec.IESParameterSpec extends java.lang.Object implements java.security.spec.AlgorithmParameterSpec
private int cipherKeySize
private byte[] derivation
private byte[] encoding
private int macKeySize
private byte[] nonce
private boolean usePointCompression
    public void <init>(byte[], byte[], int)
    {
        org.spongycastle.jce.spec.IESParameterSpec r0;
        byte[] $r1, $r2;
        int $i0;

        r0 := @this: org.spongycastle.jce.spec.IESParameterSpec;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        specialinvoke r0.<org.spongycastle.jce.spec.IESParameterSpec: void <init>(byte[],byte[],int,int,byte[],boolean)>($r1, $r2, $i0, -1, null, 0);

        return;
    }
    public void <init>(byte[], byte[], int, int)
    {
        org.spongycastle.jce.spec.IESParameterSpec r0;
        byte[] $r1, $r2;
        int $i0, $i1;

        r0 := @this: org.spongycastle.jce.spec.IESParameterSpec;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke r0.<org.spongycastle.jce.spec.IESParameterSpec: void <init>(byte[],byte[],int,int,byte[],boolean)>($r1, $r2, $i0, $i1, null, 0);

        return;
    }
    public void <init>(byte[], byte[], int, int, byte[])
    {
        org.spongycastle.jce.spec.IESParameterSpec r0;
        byte[] $r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: org.spongycastle.jce.spec.IESParameterSpec;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: byte[];

        specialinvoke r0.<org.spongycastle.jce.spec.IESParameterSpec: void <init>(byte[],byte[],int,int,byte[],boolean)>($r1, $r2, $i0, $i1, $r3, 0);

        return;
    }
    public void <init>(byte[], byte[], int, int, byte[], boolean)
    {
        org.spongycastle.jce.spec.IESParameterSpec r0;
        byte[] $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.spongycastle.jce.spec.IESParameterSpec;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: byte[];

        $z0 := @parameter5: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 == null goto label3;

        $i2 = lengthof $r1;

        $r4 = newarray (byte)[$i2];

        r0.<org.spongycastle.jce.spec.IESParameterSpec: byte[] derivation> = $r4;

        $r4 = r0.<org.spongycastle.jce.spec.IESParameterSpec: byte[] derivation>;

        $i2 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, 0, $i2);

     label1:
        if $r2 == null goto label4;

        $i2 = lengthof $r2;

        $r1 = newarray (byte)[$i2];

        r0.<org.spongycastle.jce.spec.IESParameterSpec: byte[] encoding> = $r1;

        $r1 = r0.<org.spongycastle.jce.spec.IESParameterSpec: byte[] encoding>;

        $i2 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i2);

     label2:
        r0.<org.spongycastle.jce.spec.IESParameterSpec: int macKeySize> = $i0;

        r0.<org.spongycastle.jce.spec.IESParameterSpec: int cipherKeySize> = $i1;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r3);

        r0.<org.spongycastle.jce.spec.IESParameterSpec: byte[] nonce> = $r1;

        r0.<org.spongycastle.jce.spec.IESParameterSpec: boolean usePointCompression> = $z0;

        return;

     label3:
        r0.<org.spongycastle.jce.spec.IESParameterSpec: byte[] derivation> = null;

        goto label1;

     label4:
        r0.<org.spongycastle.jce.spec.IESParameterSpec: byte[] encoding> = null;

        goto label2;
    }
    public int getCipherKeySize()
    {
        org.spongycastle.jce.spec.IESParameterSpec r0;
        int i0;

        r0 := @this: org.spongycastle.jce.spec.IESParameterSpec;

        i0 = r0.<org.spongycastle.jce.spec.IESParameterSpec: int cipherKeySize>;

        return i0;
    }
    public byte[] getDerivationV()
    {
        org.spongycastle.jce.spec.IESParameterSpec r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.jce.spec.IESParameterSpec;

        $r1 = r0.<org.spongycastle.jce.spec.IESParameterSpec: byte[] derivation>;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        return $r1;
    }
    public byte[] getEncodingV()
    {
        org.spongycastle.jce.spec.IESParameterSpec r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.jce.spec.IESParameterSpec;

        $r1 = r0.<org.spongycastle.jce.spec.IESParameterSpec: byte[] encoding>;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        return $r1;
    }
    public int getMacKeySize()
    {
        org.spongycastle.jce.spec.IESParameterSpec r0;
        int i0;

        r0 := @this: org.spongycastle.jce.spec.IESParameterSpec;

        i0 = r0.<org.spongycastle.jce.spec.IESParameterSpec: int macKeySize>;

        return i0;
    }
    public byte[] getNonce()
    {
        org.spongycastle.jce.spec.IESParameterSpec r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.jce.spec.IESParameterSpec;

        $r1 = r0.<org.spongycastle.jce.spec.IESParameterSpec: byte[] nonce>;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        return $r1;
    }
    public boolean getPointCompression()
    {
        org.spongycastle.jce.spec.IESParameterSpec r0;
        boolean z0;

        r0 := @this: org.spongycastle.jce.spec.IESParameterSpec;

        z0 = r0.<org.spongycastle.jce.spec.IESParameterSpec: boolean usePointCompression>;

        return z0;
    }
    public void setPointCompression(boolean)
    {
        org.spongycastle.jce.spec.IESParameterSpec r0;
        boolean $z0;

        r0 := @this: org.spongycastle.jce.spec.IESParameterSpec;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.jce.spec.IESParameterSpec: boolean usePointCompression> = $z0;

        return;
    }
