org.spongycastle.jce.spec.ECNamedCurveSpec extends java.security.spec.ECParameterSpec
private java.lang.String name
    public void <init>(java.lang.String, java.security.spec.EllipticCurve, java.security.spec.ECPoint, java.math.BigInteger)
    {
        org.spongycastle.jce.spec.ECNamedCurveSpec r0;
        java.lang.String $r1;
        java.security.spec.EllipticCurve $r2;
        java.security.spec.ECPoint $r3;
        java.math.BigInteger $r4;

        r0 := @this: org.spongycastle.jce.spec.ECNamedCurveSpec;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.spec.EllipticCurve;

        $r3 := @parameter2: java.security.spec.ECPoint;

        $r4 := @parameter3: java.math.BigInteger;

        specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, 1);

        r0.<org.spongycastle.jce.spec.ECNamedCurveSpec: java.lang.String name> = $r1;

        return;
    }
    public void <init>(java.lang.String, java.security.spec.EllipticCurve, java.security.spec.ECPoint, java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.jce.spec.ECNamedCurveSpec r0;
        java.lang.String $r1;
        java.security.spec.EllipticCurve $r2;
        java.security.spec.ECPoint $r3;
        java.math.BigInteger $r4, $r5;
        int $i0;

        r0 := @this: org.spongycastle.jce.spec.ECNamedCurveSpec;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.spec.EllipticCurve;

        $r3 := @parameter2: java.security.spec.ECPoint;

        $r4 := @parameter3: java.math.BigInteger;

        $r5 := @parameter4: java.math.BigInteger;

        $i0 = virtualinvoke $r5.<java.math.BigInteger: int intValue()>();

        specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0);

        r0.<org.spongycastle.jce.spec.ECNamedCurveSpec: java.lang.String name> = $r1;

        return;
    }
    public void <init>(java.lang.String, org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECPoint, java.math.BigInteger)
    {
        org.spongycastle.jce.spec.ECNamedCurveSpec r0;
        java.lang.String $r1;
        org.spongycastle.math.ec.ECCurve $r2;
        org.spongycastle.math.ec.ECPoint $r3;
        java.math.BigInteger $r4;
        java.security.spec.EllipticCurve $r5;
        java.security.spec.ECPoint $r6;

        r0 := @this: org.spongycastle.jce.spec.ECNamedCurveSpec;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.spongycastle.math.ec.ECCurve;

        $r3 := @parameter2: org.spongycastle.math.ec.ECPoint;

        $r4 := @parameter3: java.math.BigInteger;

        $r5 = staticinvoke <org.spongycastle.jce.spec.ECNamedCurveSpec: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r2, null);

        $r6 = staticinvoke <org.spongycastle.jce.spec.ECNamedCurveSpec: java.security.spec.ECPoint convertPoint(org.spongycastle.math.ec.ECPoint)>($r3);

        specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r5, $r6, $r4, 1);

        r0.<org.spongycastle.jce.spec.ECNamedCurveSpec: java.lang.String name> = $r1;

        return;
    }
    public void <init>(java.lang.String, org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.jce.spec.ECNamedCurveSpec r0;
        java.lang.String $r1;
        org.spongycastle.math.ec.ECCurve $r2;
        org.spongycastle.math.ec.ECPoint $r3;
        java.math.BigInteger $r4, $r5;
        java.security.spec.EllipticCurve $r6;
        java.security.spec.ECPoint $r7;
        int $i0;

        r0 := @this: org.spongycastle.jce.spec.ECNamedCurveSpec;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.spongycastle.math.ec.ECCurve;

        $r3 := @parameter2: org.spongycastle.math.ec.ECPoint;

        $r4 := @parameter3: java.math.BigInteger;

        $r5 := @parameter4: java.math.BigInteger;

        $r6 = staticinvoke <org.spongycastle.jce.spec.ECNamedCurveSpec: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r2, null);

        $r7 = staticinvoke <org.spongycastle.jce.spec.ECNamedCurveSpec: java.security.spec.ECPoint convertPoint(org.spongycastle.math.ec.ECPoint)>($r3);

        $i0 = virtualinvoke $r5.<java.math.BigInteger: int intValue()>();

        specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r6, $r7, $r4, $i0);

        r0.<org.spongycastle.jce.spec.ECNamedCurveSpec: java.lang.String name> = $r1;

        return;
    }
    public void <init>(java.lang.String, org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])
    {
        org.spongycastle.jce.spec.ECNamedCurveSpec r0;
        java.lang.String $r1;
        org.spongycastle.math.ec.ECCurve $r2;
        org.spongycastle.math.ec.ECPoint $r3;
        java.math.BigInteger $r4, $r5;
        byte[] $r6;
        java.security.spec.EllipticCurve $r7;
        java.security.spec.ECPoint $r8;
        int $i0;

        r0 := @this: org.spongycastle.jce.spec.ECNamedCurveSpec;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.spongycastle.math.ec.ECCurve;

        $r3 := @parameter2: org.spongycastle.math.ec.ECPoint;

        $r4 := @parameter3: java.math.BigInteger;

        $r5 := @parameter4: java.math.BigInteger;

        $r6 := @parameter5: byte[];

        $r7 = staticinvoke <org.spongycastle.jce.spec.ECNamedCurveSpec: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r2, $r6);

        $r8 = staticinvoke <org.spongycastle.jce.spec.ECNamedCurveSpec: java.security.spec.ECPoint convertPoint(org.spongycastle.math.ec.ECPoint)>($r3);

        $i0 = virtualinvoke $r5.<java.math.BigInteger: int intValue()>();

        specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r7, $r8, $r4, $i0);

        r0.<org.spongycastle.jce.spec.ECNamedCurveSpec: java.lang.String name> = $r1;

        return;
    }
    private static java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve, byte[])
    {
        org.spongycastle.math.ec.ECCurve $r0;
        byte[] $r1;
        org.spongycastle.math.field.FiniteField $r2;
        java.security.spec.ECField $r3;
        org.spongycastle.math.ec.ECFieldElement $r4;
        java.math.BigInteger $r5, $r6;
        java.security.spec.EllipticCurve $r7;

        $r0 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r1 := @parameter1: byte[];

        $r2 = virtualinvoke $r0.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.field.FiniteField getField()>();

        $r3 = staticinvoke <org.spongycastle.jce.spec.ECNamedCurveSpec: java.security.spec.ECField convertField(org.spongycastle.math.field.FiniteField)>($r2);

        $r4 = virtualinvoke $r0.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r4 = virtualinvoke $r0.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getB()>();

        $r6 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r7 = new java.security.spec.EllipticCurve;

        specialinvoke $r7.<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>($r3, $r5, $r6, $r1);

        return $r7;
    }
    private static java.security.spec.ECField convertField(org.spongycastle.math.field.FiniteField)
    {
        org.spongycastle.math.field.FiniteField r0;
        boolean $z0;
        java.security.spec.ECFieldFp $r1;
        java.math.BigInteger $r2;
        org.spongycastle.math.field.PolynomialExtensionField r3;
        org.spongycastle.math.field.Polynomial $r4;
        int[] $r5;
        int $i0;
        java.security.spec.ECFieldF2m $r6;

        r0 := @parameter0: org.spongycastle.math.field.FiniteField;

        $z0 = staticinvoke <org.spongycastle.math.ec.ECAlgorithms: boolean isFpField(org.spongycastle.math.field.FiniteField)>(r0);

        if $z0 == 0 goto label1;

        $r1 = new java.security.spec.ECFieldFp;

        $r2 = interfaceinvoke r0.<org.spongycastle.math.field.FiniteField: java.math.BigInteger getCharacteristic()>();

        specialinvoke $r1.<java.security.spec.ECFieldFp: void <init>(java.math.BigInteger)>($r2);

        return $r1;

     label1:
        r3 = (org.spongycastle.math.field.PolynomialExtensionField) r0;

        $r4 = interfaceinvoke r3.<org.spongycastle.math.field.PolynomialExtensionField: org.spongycastle.math.field.Polynomial getMinimalPolynomial()>();

        $r5 = interfaceinvoke $r4.<org.spongycastle.math.field.Polynomial: int[] getExponentsPresent()>();

        $i0 = lengthof $r5;

        $i0 = $i0 + -1;

        $r5 = staticinvoke <org.spongycastle.util.Arrays: int[] copyOfRange(int[],int,int)>($r5, 1, $i0);

        $r5 = staticinvoke <org.spongycastle.util.Arrays: int[] reverse(int[])>($r5);

        $r6 = new java.security.spec.ECFieldF2m;

        $i0 = interfaceinvoke $r4.<org.spongycastle.math.field.Polynomial: int getDegree()>();

        specialinvoke $r6.<java.security.spec.ECFieldF2m: void <init>(int,int[])>($i0, $r5);

        return $r6;
    }
    private static java.security.spec.ECPoint convertPoint(org.spongycastle.math.ec.ECPoint)
    {
        java.security.spec.ECPoint $r0;
        org.spongycastle.math.ec.ECPoint $r1;
        org.spongycastle.math.ec.ECFieldElement $r2;
        java.math.BigInteger $r3, $r4;

        $r1 := @parameter0: org.spongycastle.math.ec.ECPoint;

        $r1 = virtualinvoke $r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint normalize()>();

        $r0 = new java.security.spec.ECPoint;

        $r2 = virtualinvoke $r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r4 = virtualinvoke $r2.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r0.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4);

        return $r0;
    }
    public java.lang.String getName()
    {
        org.spongycastle.jce.spec.ECNamedCurveSpec r0;
        java.lang.String r1;

        r0 := @this: org.spongycastle.jce.spec.ECNamedCurveSpec;

        r1 = r0.<org.spongycastle.jce.spec.ECNamedCurveSpec: java.lang.String name>;

        return r1;
    }
