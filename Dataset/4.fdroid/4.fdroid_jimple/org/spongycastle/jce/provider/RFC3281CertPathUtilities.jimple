org.spongycastle.jce.provider.RFC3281CertPathUtilities extends java.lang.Object
private static final java.lang.String AUTHORITY_INFO_ACCESS
private static final java.lang.String CRL_DISTRIBUTION_POINTS
private static final java.lang.String NO_REV_AVAIL
private static final java.lang.String TARGET_INFORMATION
    static void <clinit>()
    {
        org.spongycastle.asn1.ASN1ObjectIdentifier $r0;
        java.lang.String $r1;

        $r0 = <org.spongycastle.asn1.x509.X509Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier TargetInformation>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String TARGET_INFORMATION> = $r1;

        $r0 = <org.spongycastle.asn1.x509.X509Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier NoRevAvail>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String NO_REV_AVAIL> = $r1;

        $r0 = <org.spongycastle.asn1.x509.X509Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier CRLDistributionPoints>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS> = $r1;

        $r0 = <org.spongycastle.asn1.x509.X509Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier AuthorityInfoAccess>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String AUTHORITY_INFO_ACCESS> = $r1;

        return;
    }
    void <init>()
    {
        org.spongycastle.jce.provider.RFC3281CertPathUtilities r0;

        r0 := @this: org.spongycastle.jce.provider.RFC3281CertPathUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    protected static void additionalChecks(org.spongycastle.x509.X509AttributeCertificate, java.util.Set, java.util.Set) throws java.security.cert.CertPathValidatorException
    {
        org.spongycastle.x509.X509AttributeCertificate $r0;
        java.util.Set $r1, $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.x509.X509Attribute[] $r6;
        java.security.cert.CertPathValidatorException $r7;
        java.lang.StringBuilder $r8;

        $r0 := @parameter0: org.spongycastle.x509.X509AttributeCertificate;

        $r1 := @parameter1: java.util.Set;

        $r2 := @parameter2: java.util.Set;

        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = interfaceinvoke $r0.<org.spongycastle.x509.X509AttributeCertificate: org.spongycastle.x509.X509Attribute[] getAttributes(java.lang.String)>(r5);

        if $r6 == null goto label1;

        $r7 = new java.security.cert.CertPathValidatorException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute certificate contains prohibited attribute: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>(r5);

        throw $r7;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = interfaceinvoke $r0.<org.spongycastle.x509.X509AttributeCertificate: org.spongycastle.x509.X509Attribute[] getAttributes(java.lang.String)>(r5);

        if $r6 != null goto label3;

        $r7 = new java.security.cert.CertPathValidatorException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute certificate does not contain necessary attribute: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>(r5);

        throw $r7;

     label4:
        return;
    }
    private static void checkCRL(org.spongycastle.asn1.x509.DistributionPoint, org.spongycastle.x509.X509AttributeCertificate, org.spongycastle.jcajce.PKIXExtendedParameters, java.util.Date, java.security.cert.X509Certificate, org.spongycastle.jce.provider.CertStatus, org.spongycastle.jce.provider.ReasonsMask, java.util.List, org.spongycastle.jcajce.util.JcaJceHelper) throws org.spongycastle.jce.provider.AnnotatedException
    {
        org.spongycastle.asn1.x509.DistributionPoint $r0;
        org.spongycastle.x509.X509AttributeCertificate $r1;
        org.spongycastle.jcajce.PKIXExtendedParameters $r2;
        java.util.Date $r3, r9, $r23;
        java.security.cert.X509Certificate $r4;
        org.spongycastle.jce.provider.CertStatus $r5;
        org.spongycastle.jce.provider.ReasonsMask $r6, $r18;
        java.util.List $r7, $r21, $r22;
        org.spongycastle.jcajce.util.JcaJceHelper $r8;
        org.spongycastle.jce.provider.AnnotatedException r10;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r11;
        java.lang.String $r12;
        byte[] $r13;
        long $l0, $l1;
        byte $b2;
        java.util.Set $r14;
        boolean z0, $z1;
        java.util.Iterator $r15;
        int $i3;
        java.lang.Object $r16;
        java.security.cert.X509CRL r17, r20;
        java.security.PublicKey $r19;

        $r0 := @parameter0: org.spongycastle.asn1.x509.DistributionPoint;

        $r1 := @parameter1: org.spongycastle.x509.X509AttributeCertificate;

        $r2 := @parameter2: org.spongycastle.jcajce.PKIXExtendedParameters;

        $r3 := @parameter3: java.util.Date;

        $r4 := @parameter4: java.security.cert.X509Certificate;

        $r5 := @parameter5: org.spongycastle.jce.provider.CertStatus;

        $r6 := @parameter6: org.spongycastle.jce.provider.ReasonsMask;

        $r7 := @parameter7: java.util.List;

        $r8 := @parameter8: org.spongycastle.jcajce.util.JcaJceHelper;

        $r11 = <org.spongycastle.asn1.x509.X509Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier NoRevAvail>;

        $r12 = virtualinvoke $r11.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r13 = interfaceinvoke $r1.<org.spongycastle.x509.X509AttributeCertificate: byte[] getExtensionValue(java.lang.String)>($r12);

        if $r13 == null goto label01;

        return;

     label01:
        r9 = new java.util.Date;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r9.<java.util.Date: void <init>(long)>($l0);

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke r9.<java.util.Date: long getTime()>();

        $b2 = $l0 cmp $l1;

        if $b2 <= 0 goto label02;

        r10 = new org.spongycastle.jce.provider.AnnotatedException;

        specialinvoke r10.<org.spongycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Validation time is in future.");

        throw r10;

     label02:
        $r14 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getCompleteCRLs(org.spongycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,org.spongycastle.jcajce.PKIXExtendedParameters)>($r0, $r1, r9, $r2);

        z0 = 0;

        r10 = null;

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label24;

        $i3 = virtualinvoke $r5.<org.spongycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i3 != 11 goto label24;

        $z1 = virtualinvoke $r6.<org.spongycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z1 != 0 goto label24;

     label04:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label05:
        r17 = (java.security.cert.X509CRL) $r16;

     label06:
        $r18 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: org.spongycastle.jce.provider.ReasonsMask processCRLD(java.security.cert.X509CRL,org.spongycastle.asn1.x509.DistributionPoint)>(r17, $r0);

        $z1 = virtualinvoke $r18.<org.spongycastle.jce.provider.ReasonsMask: boolean hasNewReasons(org.spongycastle.jce.provider.ReasonsMask)>($r6);

     label07:
        if $z1 == 0 goto label03;

     label08:
        $r14 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.spongycastle.jcajce.PKIXExtendedParameters,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper)>(r17, $r1, null, null, $r2, $r7, $r8);

        $r19 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.security.PublicKey processCRLG(java.security.cert.X509CRL,java.util.Set)>(r17, $r14);

     label09:
        r20 = null;

     label10:
        $z1 = virtualinvoke $r2.<org.spongycastle.jcajce.PKIXExtendedParameters: boolean isUseDeltasEnabled()>();

     label11:
        if $z1 == 0 goto label13;

     label12:
        $r21 = virtualinvoke $r2.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.List getCertStores()>();

        $r22 = virtualinvoke $r2.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.List getCRLStores()>();

        $r14 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getDeltaCRLs(java.util.Date,java.security.cert.X509CRL,java.util.List,java.util.List)>(r9, r17, $r21, $r22);

        r20 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.security.cert.X509CRL processCRLH(java.util.Set,java.security.PublicKey)>($r14, $r19);

     label13:
        $i3 = virtualinvoke $r2.<org.spongycastle.jcajce.PKIXExtendedParameters: int getValidityModel()>();

     label14:
        if $i3 == 1 goto label19;

     label15:
        $r23 = interfaceinvoke $r1.<org.spongycastle.x509.X509AttributeCertificate: java.util.Date getNotAfter()>();

        $l0 = virtualinvoke $r23.<java.util.Date: long getTime()>();

        $r23 = virtualinvoke r17.<java.security.cert.X509CRL: java.util.Date getThisUpdate()>();

        $l1 = virtualinvoke $r23.<java.util.Date: long getTime()>();

     label16:
        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label19;

        r10 = new org.spongycastle.jce.provider.AnnotatedException;

     label17:
        specialinvoke r10.<org.spongycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("No valid CRL for current time found.");

        throw r10;

     label18:
        r10 := @caughtexception;

        goto label03;

     label19:
        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void processCRLB1(org.spongycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)>($r0, $r1, r17);

        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void processCRLB2(org.spongycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)>($r0, $r1, r17);

        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void processCRLC(java.security.cert.X509CRL,java.security.cert.X509CRL,org.spongycastle.jcajce.PKIXExtendedParameters)>(r20, r17, $r2);

        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void processCRLI(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.spongycastle.jce.provider.CertStatus,org.spongycastle.jcajce.PKIXExtendedParameters)>($r3, r20, $r1, $r5, $r2);

        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void processCRLJ(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.spongycastle.jce.provider.CertStatus)>($r3, r17, $r1, $r5);

        $i3 = virtualinvoke $r5.<org.spongycastle.jce.provider.CertStatus: int getCertStatus()>();

     label20:
        if $i3 != 8 goto label22;

     label21:
        virtualinvoke $r5.<org.spongycastle.jce.provider.CertStatus: void setCertStatus(int)>(11);

     label22:
        virtualinvoke $r6.<org.spongycastle.jce.provider.ReasonsMask: void addReasons(org.spongycastle.jce.provider.ReasonsMask)>($r18);

     label23:
        z0 = 1;

        goto label03;

     label24:
        if z0 != 0 goto label25;

        throw r10;

     label25:
        return;

        catch org.spongycastle.jce.provider.AnnotatedException from label04 to label05 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label06 to label07 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label08 to label09 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label10 to label11 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label12 to label13 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label13 to label14 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label15 to label16 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label17 to label18 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label19 to label20 with label18;
        catch org.spongycastle.jce.provider.AnnotatedException from label21 to label23 with label18;
    }
    protected static void checkCRLs(org.spongycastle.x509.X509AttributeCertificate, org.spongycastle.jcajce.PKIXExtendedParameters, java.security.cert.X509Certificate, java.util.Date, java.util.List, org.spongycastle.jcajce.util.JcaJceHelper) throws java.security.cert.CertPathValidatorException
    {
        org.spongycastle.x509.X509AttributeCertificate $r0;
        java.security.cert.X509Certificate $r1;
        java.util.Date $r2;
        java.util.List $r3, $r15;
        org.spongycastle.jcajce.util.JcaJceHelper $r4;
        org.spongycastle.jce.provider.CertStatus r5;
        org.spongycastle.jce.provider.ReasonsMask r6;
        org.spongycastle.jcajce.PKIXExtendedParameters$Builder r7;
        java.util.ArrayList r8;
        org.spongycastle.jcajce.PKIXExtendedParameters $r9, r23;
        boolean $z0, $z1;
        java.lang.String $r10;
        byte[] $r11;
        org.spongycastle.asn1.ASN1Primitive $r12;
        org.spongycastle.asn1.x509.CRLDistPoint $r13;
        java.util.Map $r14;
        java.util.Iterator $r16;
        org.spongycastle.jcajce.PKIXCRLStore $r17;
        org.spongycastle.jce.provider.AnnotatedException r18, r20, r27, r37;
        java.security.cert.CertPathValidatorException $r19;
        org.spongycastle.asn1.x509.DistributionPoint[] $r21;
        int i0, $i1;
        java.lang.Object $r22;
        org.spongycastle.asn1.x509.DistributionPoint r24;
        java.lang.Exception r25, r36;
        org.spongycastle.jce.exception.ExtCertPathValidatorException $r26;
        org.spongycastle.asn1.ASN1InputStream $r28;
        org.spongycastle.x509.AttributeCertificateIssuer $r29;
        java.security.Principal[] $r30;
        java.security.Principal $r31;
        javax.security.auth.x500.X500Principal $r32;
        org.spongycastle.asn1.x509.DistributionPointName $r33;
        org.spongycastle.asn1.x509.GeneralNames $r34;
        org.spongycastle.asn1.x509.GeneralName $r35;
        java.lang.StringBuilder $r38;
        java.lang.String[] $r39;

        $r0 := @parameter0: org.spongycastle.x509.X509AttributeCertificate;

        $r9 := @parameter1: org.spongycastle.jcajce.PKIXExtendedParameters;

        $r1 := @parameter2: java.security.cert.X509Certificate;

        $r2 := @parameter3: java.util.Date;

        $r3 := @parameter4: java.util.List;

        $r4 := @parameter5: org.spongycastle.jcajce.util.JcaJceHelper;

        $z0 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: boolean isRevocationEnabled()>();

        if $z0 == 0 goto label38;

        $r10 = <org.spongycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String NO_REV_AVAIL>;

        $r11 = interfaceinvoke $r0.<org.spongycastle.x509.X509AttributeCertificate: byte[] getExtensionValue(java.lang.String)>($r10);

        if $r11 != null goto label36;

        $r10 = <org.spongycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS>;

     label01:
        $r12 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r0, $r10);

        $r13 = staticinvoke <org.spongycastle.asn1.x509.CRLDistPoint: org.spongycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)>($r12);

     label02:
        r8 = new java.util.ArrayList;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

     label03:
        $r14 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.Map getNamedCRLStoreMap()>();

        $r15 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: java.util.List getAdditionalStoresFromCRLDistributionPoint(org.spongycastle.asn1.x509.CRLDistPoint,java.util.Map)>($r13, $r14);

        interfaceinvoke r8.<java.util.List: boolean addAll(java.util.Collection)>($r15);

     label04:
        r7 = new org.spongycastle.jcajce.PKIXExtendedParameters$Builder;

        specialinvoke r7.<org.spongycastle.jcajce.PKIXExtendedParameters$Builder: void <init>(org.spongycastle.jcajce.PKIXExtendedParameters)>($r9);

        $r16 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r17 = (org.spongycastle.jcajce.PKIXCRLStore) r8;

        virtualinvoke r7.<org.spongycastle.jcajce.PKIXExtendedParameters$Builder: org.spongycastle.jcajce.PKIXExtendedParameters$Builder addCRLStore(org.spongycastle.jcajce.PKIXCRLStore)>($r17);

        goto label05;

     label06:
        r18 := @caughtexception;

        $r19 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r19.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("CRL distribution point extension could not be read.", r18);

        throw $r19;

     label07:
        r20 := @caughtexception;

        $r19 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r19.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("No additional CRL locations could be decoded from CRL distribution point extension.", r20);

        throw $r19;

     label08:
        $r9 = virtualinvoke r7.<org.spongycastle.jcajce.PKIXExtendedParameters$Builder: org.spongycastle.jcajce.PKIXExtendedParameters build()>();

        r5 = new org.spongycastle.jce.provider.CertStatus;

        specialinvoke r5.<org.spongycastle.jce.provider.CertStatus: void <init>()>();

        r6 = new org.spongycastle.jce.provider.ReasonsMask;

        specialinvoke r6.<org.spongycastle.jce.provider.ReasonsMask: void <init>()>();

        r18 = null;

        $z0 = 0;

        if $r13 == null goto label22;

     label09:
        $r21 = virtualinvoke $r13.<org.spongycastle.asn1.x509.CRLDistPoint: org.spongycastle.asn1.x509.DistributionPoint[] getDistributionPoints()>();

     label10:
        i0 = 0;

     label11:
        $i1 = lengthof $r21;

        if i0 >= $i1 goto label22;

     label12:
        $i1 = virtualinvoke r5.<org.spongycastle.jce.provider.CertStatus: int getCertStatus()>();

     label13:
        if $i1 != 11 goto label22;

     label14:
        $z1 = virtualinvoke r6.<org.spongycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

     label15:
        if $z1 != 0 goto label22;

     label16:
        $r22 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: java.lang.Object clone()>();

     label17:
        r23 = (org.spongycastle.jcajce.PKIXExtendedParameters) $r22;

        r24 = $r21[i0];

     label18:
        staticinvoke <org.spongycastle.jce.provider.RFC3281CertPathUtilities: void checkCRL(org.spongycastle.asn1.x509.DistributionPoint,org.spongycastle.x509.X509AttributeCertificate,org.spongycastle.jcajce.PKIXExtendedParameters,java.util.Date,java.security.cert.X509Certificate,org.spongycastle.jce.provider.CertStatus,org.spongycastle.jce.provider.ReasonsMask,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper)>(r24, $r0, r23, $r2, $r1, r5, r6, $r3, $r4);

     label19:
        $z0 = 1;

        i0 = i0 + 1;

        goto label11;

     label20:
        r25 := @caughtexception;

        $r26 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r26.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Distribution points could not be read.", r25);

        throw $r26;

     label21:
        r27 := @caughtexception;

        r18 = new org.spongycastle.jce.provider.AnnotatedException;

        specialinvoke r18.<org.spongycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No valid CRL for distribution point found.", r27);

     label22:
        i0 = virtualinvoke r5.<org.spongycastle.jce.provider.CertStatus: int getCertStatus()>();

        if i0 != 11 goto label29;

        $z1 = virtualinvoke r6.<org.spongycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z1 != 0 goto label29;

        $r28 = new org.spongycastle.asn1.ASN1InputStream;

     label23:
        $r29 = interfaceinvoke $r0.<org.spongycastle.x509.X509AttributeCertificate: org.spongycastle.x509.AttributeCertificateIssuer getIssuer()>();

        $r30 = virtualinvoke $r29.<org.spongycastle.x509.AttributeCertificateIssuer: java.security.Principal[] getPrincipals()>();

        $r31 = $r30[0];

        $r32 = (javax.security.auth.x500.X500Principal) $r31;

        $r11 = virtualinvoke $r32.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r28.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r11);

        $r12 = virtualinvoke $r28.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

     label24:
        r24 = new org.spongycastle.asn1.x509.DistributionPoint;

        $r33 = new org.spongycastle.asn1.x509.DistributionPointName;

        $r34 = new org.spongycastle.asn1.x509.GeneralNames;

        $r35 = new org.spongycastle.asn1.x509.GeneralName;

     label25:
        specialinvoke $r35.<org.spongycastle.asn1.x509.GeneralName: void <init>(int,org.spongycastle.asn1.ASN1Encodable)>(4, $r12);

        specialinvoke $r34.<org.spongycastle.asn1.x509.GeneralNames: void <init>(org.spongycastle.asn1.x509.GeneralName)>($r35);

        specialinvoke $r33.<org.spongycastle.asn1.x509.DistributionPointName: void <init>(int,org.spongycastle.asn1.ASN1Encodable)>(0, $r34);

        specialinvoke r24.<org.spongycastle.asn1.x509.DistributionPoint: void <init>(org.spongycastle.asn1.x509.DistributionPointName,org.spongycastle.asn1.x509.ReasonFlags,org.spongycastle.asn1.x509.GeneralNames)>($r33, null, null);

        $r22 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: java.lang.Object clone()>();

     label26:
        $r9 = (org.spongycastle.jcajce.PKIXExtendedParameters) $r22;

     label27:
        staticinvoke <org.spongycastle.jce.provider.RFC3281CertPathUtilities: void checkCRL(org.spongycastle.asn1.x509.DistributionPoint,org.spongycastle.x509.X509AttributeCertificate,org.spongycastle.jcajce.PKIXExtendedParameters,java.util.Date,java.security.cert.X509Certificate,org.spongycastle.jce.provider.CertStatus,org.spongycastle.jce.provider.ReasonsMask,java.util.List,org.spongycastle.jcajce.util.JcaJceHelper)>(r24, $r0, $r9, $r2, $r1, r5, r6, $r3, $r4);

     label28:
        $z0 = 1;

     label29:
        if $z0 != 0 goto label33;

        $r26 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r26.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("No valid CRL found.", r18);

        throw $r26;

     label30:
        r36 := @caughtexception;

        r18 = new org.spongycastle.jce.provider.AnnotatedException;

     label31:
        specialinvoke r18.<org.spongycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuer from certificate for CRL could not be reencoded.", r36);

        throw r18;

     label32:
        r37 := @caughtexception;

        r18 = new org.spongycastle.jce.provider.AnnotatedException;

        specialinvoke r18.<org.spongycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No valid CRL for distribution point found.", r37);

        goto label29;

     label33:
        i0 = virtualinvoke r5.<org.spongycastle.jce.provider.CertStatus: int getCertStatus()>();

        if i0 == 11 goto label34;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute certificate revocation after ");

        $r2 = virtualinvoke r5.<org.spongycastle.jce.provider.CertStatus: java.util.Date getRevocationDate()>();

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reason: ");

        $r39 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String[] crlReasons>;

        i0 = virtualinvoke r5.<org.spongycastle.jce.provider.CertStatus: int getCertStatus()>();

        $r10 = $r39[i0];

        $r38 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r19.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>($r10);

        throw $r19;

     label34:
        $z0 = virtualinvoke r6.<org.spongycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z0 != 0 goto label35;

        i0 = virtualinvoke r5.<org.spongycastle.jce.provider.CertStatus: int getCertStatus()>();

        if i0 != 11 goto label35;

        virtualinvoke r5.<org.spongycastle.jce.provider.CertStatus: void setCertStatus(int)>(12);

     label35:
        i0 = virtualinvoke r5.<org.spongycastle.jce.provider.CertStatus: int getCertStatus()>();

        if i0 != 12 goto label38;

        $r19 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r19.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Attribute certificate status could not be determined.");

        throw $r19;

     label36:
        $r10 = <org.spongycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS>;

        $r11 = interfaceinvoke $r0.<org.spongycastle.x509.X509AttributeCertificate: byte[] getExtensionValue(java.lang.String)>($r10);

        if $r11 != null goto label37;

        $r10 = <org.spongycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String AUTHORITY_INFO_ACCESS>;

        $r11 = interfaceinvoke $r0.<org.spongycastle.x509.X509AttributeCertificate: byte[] getExtensionValue(java.lang.String)>($r10);

        if $r11 == null goto label38;

     label37:
        $r19 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r19.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("No rev avail extension is set, but also an AC revocation pointer.");

        throw $r19;

     label38:
        return;

        catch org.spongycastle.jce.provider.AnnotatedException from label01 to label02 with label06;
        catch org.spongycastle.jce.provider.AnnotatedException from label03 to label04 with label07;
        catch java.lang.Exception from label09 to label10 with label20;
        catch org.spongycastle.jce.provider.AnnotatedException from label12 to label13 with label21;
        catch org.spongycastle.jce.provider.AnnotatedException from label14 to label15 with label21;
        catch org.spongycastle.jce.provider.AnnotatedException from label16 to label17 with label21;
        catch org.spongycastle.jce.provider.AnnotatedException from label18 to label19 with label21;
        catch java.lang.Exception from label23 to label24 with label30;
        catch org.spongycastle.jce.provider.AnnotatedException from label25 to label26 with label32;
        catch org.spongycastle.jce.provider.AnnotatedException from label27 to label28 with label32;
        catch org.spongycastle.jce.provider.AnnotatedException from label31 to label32 with label32;
    }
    protected static java.security.cert.CertPath processAttrCert1(org.spongycastle.x509.X509AttributeCertificate, org.spongycastle.jcajce.PKIXExtendedParameters) throws java.security.cert.CertPathValidatorException
    {
        org.spongycastle.x509.X509AttributeCertificate $r0;
        org.spongycastle.jcajce.PKIXExtendedParameters $r1;
        java.util.HashSet r2;
        org.spongycastle.jcajce.PKIXExtendedParameters$Builder r3;
        java.security.cert.CertPathBuilderResult r4, $r29;
        org.spongycastle.x509.AttributeCertificateHolder $r5;
        java.security.Principal[] $r6;
        java.security.cert.X509CertSelector r7;
        java.math.BigInteger $r8;
        int i0, $i1;
        java.security.Principal $r9;
        boolean $z0;
        javax.security.auth.x500.X500Principal $r10;
        byte[] $r11;
        org.spongycastle.jcajce.PKIXCertStoreSelector$Builder $r12;
        org.spongycastle.jcajce.PKIXCertStoreSelector $r13;
        java.util.List $r14;
        java.util.Collection $r15;
        org.spongycastle.jce.provider.AnnotatedException r16, r21;
        org.spongycastle.jce.exception.ExtCertPathValidatorException $r17;
        java.io.IOException r18, r22;
        java.security.cert.CertPathValidatorException $r19;
        org.spongycastle.x509.X509CertStoreSelector r20;
        java.util.Iterator $r23;
        java.lang.Object $r24;
        java.security.cert.X509Certificate $r25;
        java.security.cert.CertPathBuilder $r26;
        org.spongycastle.jcajce.PKIXExtendedBuilderParameters$Builder $r27;
        org.spongycastle.jcajce.PKIXExtendedBuilderParameters $r28;
        java.security.NoSuchProviderException r30;
        java.security.NoSuchAlgorithmException r31;
        java.security.cert.CertPathBuilderException r32;
        java.security.InvalidAlgorithmParameterException r33;
        java.lang.RuntimeException $r34;
        java.lang.String $r35;
        java.security.cert.CertPath $r36;

        $r0 := @parameter0: org.spongycastle.x509.X509AttributeCertificate;

        $r1 := @parameter1: org.spongycastle.jcajce.PKIXExtendedParameters;

        r4 = null;

        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $r5 = interfaceinvoke $r0.<org.spongycastle.x509.X509AttributeCertificate: org.spongycastle.x509.AttributeCertificateHolder getHolder()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.x509.AttributeCertificateHolder: java.security.Principal[] getIssuer()>();

        if $r6 == null goto label09;

        r7 = new java.security.cert.X509CertSelector;

        specialinvoke r7.<java.security.cert.X509CertSelector: void <init>()>();

        $r5 = interfaceinvoke $r0.<org.spongycastle.x509.X509AttributeCertificate: org.spongycastle.x509.AttributeCertificateHolder getHolder()>();

        $r8 = virtualinvoke $r5.<org.spongycastle.x509.AttributeCertificateHolder: java.math.BigInteger getSerialNumber()>();

        virtualinvoke r7.<java.security.cert.X509CertSelector: void setSerialNumber(java.math.BigInteger)>($r8);

        $r5 = interfaceinvoke $r0.<org.spongycastle.x509.X509AttributeCertificate: org.spongycastle.x509.AttributeCertificateHolder getHolder()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.x509.AttributeCertificateHolder: java.security.Principal[] getIssuer()>();

        i0 = 0;

     label01:
        $i1 = lengthof $r6;

        if i0 >= $i1 goto label08;

        $r9 = $r6[i0];

        $z0 = $r9 instanceof javax.security.auth.x500.X500Principal;

        if $z0 == 0 goto label03;

        $r9 = $r6[i0];

        $r10 = (javax.security.auth.x500.X500Principal) $r9;

     label02:
        $r11 = virtualinvoke $r10.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r7.<java.security.cert.X509CertSelector: void setIssuer(byte[])>($r11);

     label03:
        $r12 = new org.spongycastle.jcajce.PKIXCertStoreSelector$Builder;

     label04:
        specialinvoke $r12.<org.spongycastle.jcajce.PKIXCertStoreSelector$Builder: void <init>(java.security.cert.CertSelector)>(r7);

        $r13 = virtualinvoke $r12.<org.spongycastle.jcajce.PKIXCertStoreSelector$Builder: org.spongycastle.jcajce.PKIXCertStoreSelector build()>();

        $r14 = virtualinvoke $r1.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.List getCertStores()>();

        $r15 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.spongycastle.jcajce.PKIXCertStoreSelector,java.util.List)>($r13, $r14);

        interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>($r15);

     label05:
        i0 = i0 + 1;

        goto label01;

     label06:
        r16 := @caughtexception;

        $r17 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r17.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Public key certificate for attribute certificate cannot be searched.", r16);

        throw $r17;

     label07:
        r18 := @caughtexception;

        $r17 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r17.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to encode X500 principal.", r18);

        throw $r17;

     label08:
        $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label09;

        $r19 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r19.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Public key certificate specified in base certificate ID for attribute certificate cannot be found.");

        throw $r19;

     label09:
        $r5 = interfaceinvoke $r0.<org.spongycastle.x509.X509AttributeCertificate: org.spongycastle.x509.AttributeCertificateHolder getHolder()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.x509.AttributeCertificateHolder: java.security.Principal[] getEntityNames()>();

        if $r6 == null goto label18;

        r20 = new org.spongycastle.x509.X509CertStoreSelector;

        specialinvoke r20.<org.spongycastle.x509.X509CertStoreSelector: void <init>()>();

        $r5 = interfaceinvoke $r0.<org.spongycastle.x509.X509AttributeCertificate: org.spongycastle.x509.AttributeCertificateHolder getHolder()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.x509.AttributeCertificateHolder: java.security.Principal[] getEntityNames()>();

        i0 = 0;

     label10:
        $i1 = lengthof $r6;

        if i0 >= $i1 goto label17;

        $r9 = $r6[i0];

        $z0 = $r9 instanceof javax.security.auth.x500.X500Principal;

        if $z0 == 0 goto label12;

        $r9 = $r6[i0];

        $r10 = (javax.security.auth.x500.X500Principal) $r9;

     label11:
        $r11 = virtualinvoke $r10.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r20.<org.spongycastle.x509.X509CertStoreSelector: void setIssuer(byte[])>($r11);

     label12:
        $r12 = new org.spongycastle.jcajce.PKIXCertStoreSelector$Builder;

     label13:
        specialinvoke $r12.<org.spongycastle.jcajce.PKIXCertStoreSelector$Builder: void <init>(java.security.cert.CertSelector)>(r20);

        $r13 = virtualinvoke $r12.<org.spongycastle.jcajce.PKIXCertStoreSelector$Builder: org.spongycastle.jcajce.PKIXCertStoreSelector build()>();

        $r14 = virtualinvoke $r1.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.List getCertStores()>();

        $r15 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.spongycastle.jcajce.PKIXCertStoreSelector,java.util.List)>($r13, $r14);

        interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>($r15);

     label14:
        i0 = i0 + 1;

        goto label10;

     label15:
        r21 := @caughtexception;

        $r17 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r17.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Public key certificate for attribute certificate cannot be searched.", r21);

        throw $r17;

     label16:
        r22 := @caughtexception;

        $r17 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r17.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to encode X500 principal.", r22);

        throw $r17;

     label17:
        $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label18;

        $r19 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r19.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Public key certificate specified in entity name for attribute certificate cannot be found.");

        throw $r19;

     label18:
        r3 = new org.spongycastle.jcajce.PKIXExtendedParameters$Builder;

        specialinvoke r3.<org.spongycastle.jcajce.PKIXExtendedParameters$Builder: void <init>(org.spongycastle.jcajce.PKIXExtendedParameters)>($r1);

        $r17 = null;

        $r23 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z0 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label28;

        r20 = new org.spongycastle.x509.X509CertStoreSelector;

        specialinvoke r20.<org.spongycastle.x509.X509CertStoreSelector: void <init>()>();

        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        $r25 = (java.security.cert.X509Certificate) $r24;

        virtualinvoke r20.<org.spongycastle.x509.X509CertStoreSelector: void setCertificate(java.security.cert.X509Certificate)>($r25);

        $r12 = new org.spongycastle.jcajce.PKIXCertStoreSelector$Builder;

        specialinvoke $r12.<org.spongycastle.jcajce.PKIXCertStoreSelector$Builder: void <init>(java.security.cert.CertSelector)>(r20);

        $r13 = virtualinvoke $r12.<org.spongycastle.jcajce.PKIXCertStoreSelector$Builder: org.spongycastle.jcajce.PKIXCertStoreSelector build()>();

        virtualinvoke r3.<org.spongycastle.jcajce.PKIXExtendedParameters$Builder: org.spongycastle.jcajce.PKIXExtendedParameters$Builder setTargetConstraints(org.spongycastle.jcajce.PKIXCertStoreSelector)>($r13);

     label20:
        $r26 = staticinvoke <java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.lang.String)>("PKIX", "SC");

     label21:
        $r27 = new org.spongycastle.jcajce.PKIXExtendedBuilderParameters$Builder;

     label22:
        $r1 = virtualinvoke r3.<org.spongycastle.jcajce.PKIXExtendedParameters$Builder: org.spongycastle.jcajce.PKIXExtendedParameters build()>();

        specialinvoke $r27.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters$Builder: void <init>(org.spongycastle.jcajce.PKIXExtendedParameters)>($r1);

        $r28 = virtualinvoke $r27.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters$Builder: org.spongycastle.jcajce.PKIXExtendedBuilderParameters build()>();

        $r29 = virtualinvoke $r26.<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilderResult build(java.security.cert.CertPathParameters)>($r28);

     label23:
        r4 = $r29;

        goto label19;

     label24:
        r30 := @caughtexception;

        $r17 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r17.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Support class could not be created.", r30);

        throw $r17;

     label25:
        r31 := @caughtexception;

        $r17 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r17.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Support class could not be created.", r31);

        throw $r17;

     label26:
        r32 := @caughtexception;

        $r17 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r17.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Certification path for public key certificate of attribute certificate could not be build.", r32);

        goto label19;

     label27:
        r33 := @caughtexception;

        $r34 = new java.lang.RuntimeException;

        $r35 = virtualinvoke r33.<java.security.InvalidAlgorithmParameterException: java.lang.String getMessage()>();

        specialinvoke $r34.<java.lang.RuntimeException: void <init>(java.lang.String)>($r35);

        throw $r34;

     label28:
        if $r17 == null goto label29;

        throw $r17;

     label29:
        $r36 = interfaceinvoke r4.<java.security.cert.CertPathBuilderResult: java.security.cert.CertPath getCertPath()>();

        return $r36;

        catch org.spongycastle.jce.provider.AnnotatedException from label02 to label03 with label06;
        catch org.spongycastle.jce.provider.AnnotatedException from label04 to label05 with label06;
        catch java.io.IOException from label02 to label03 with label07;
        catch java.io.IOException from label04 to label05 with label07;
        catch org.spongycastle.jce.provider.AnnotatedException from label11 to label12 with label15;
        catch org.spongycastle.jce.provider.AnnotatedException from label13 to label14 with label15;
        catch java.io.IOException from label11 to label12 with label16;
        catch java.io.IOException from label13 to label14 with label16;
        catch java.security.NoSuchProviderException from label20 to label21 with label24;
        catch java.security.NoSuchAlgorithmException from label20 to label21 with label25;
        catch java.security.cert.CertPathBuilderException from label22 to label23 with label26;
        catch java.security.InvalidAlgorithmParameterException from label22 to label23 with label27;
    }
    protected static java.security.cert.CertPathValidatorResult processAttrCert2(java.security.cert.CertPath, org.spongycastle.jcajce.PKIXExtendedParameters) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath $r0;
        org.spongycastle.jcajce.PKIXExtendedParameters $r1;
        java.security.cert.CertPathValidator $r2;
        java.security.cert.CertPathValidatorResult $r3;
        java.security.NoSuchProviderException r4;
        org.spongycastle.jce.exception.ExtCertPathValidatorException $r5;
        java.security.NoSuchAlgorithmException r6;
        java.security.cert.CertPathValidatorException r7;
        java.security.InvalidAlgorithmParameterException r8;
        java.lang.RuntimeException $r9;
        java.lang.String $r10;

        $r0 := @parameter0: java.security.cert.CertPath;

        $r1 := @parameter1: org.spongycastle.jcajce.PKIXExtendedParameters;

     label1:
        $r2 = staticinvoke <java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.lang.String)>("PKIX", "SC");

     label2:
        $r3 = virtualinvoke $r2.<java.security.cert.CertPathValidator: java.security.cert.CertPathValidatorResult validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)>($r0, $r1);

     label3:
        return $r3;

     label4:
        r4 := @caughtexception;

        $r5 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r5.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Support class could not be created.", r4);

        throw $r5;

     label5:
        r6 := @caughtexception;

        $r5 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r5.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Support class could not be created.", r6);

        throw $r5;

     label6:
        r7 := @caughtexception;

        $r5 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r5.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Certification path for issuer certificate of attribute certificate could not be validated.", r7);

        throw $r5;

     label7:
        r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        $r10 = virtualinvoke r8.<java.security.InvalidAlgorithmParameterException: java.lang.String getMessage()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r9;

        catch java.security.NoSuchProviderException from label1 to label2 with label4;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.cert.CertPathValidatorException from label2 to label3 with label6;
        catch java.security.InvalidAlgorithmParameterException from label2 to label3 with label7;
    }
    protected static void processAttrCert3(java.security.cert.X509Certificate, org.spongycastle.jcajce.PKIXExtendedParameters) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.X509Certificate $r0;
        org.spongycastle.jcajce.PKIXExtendedParameters $r1;
        boolean[] $r2;
        boolean $z0;
        java.security.cert.CertPathValidatorException $r3;
        int $i0;

        $r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 := @parameter1: org.spongycastle.jcajce.PKIXExtendedParameters;

        $r2 = virtualinvoke $r0.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        if $r2 == null goto label1;

        $r2 = virtualinvoke $r0.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        $z0 = $r2[0];

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke $r0.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        $z0 = $r2[1];

        if $z0 != 0 goto label1;

        $r3 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r3.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Attribute certificate issuer public key cannot be used to validate digital signatures.");

        throw $r3;

     label1:
        $i0 = virtualinvoke $r0.<java.security.cert.X509Certificate: int getBasicConstraints()>();

        if $i0 == -1 goto label2;

        $r3 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r3.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Attribute certificate issuer is also a public key certificate issuer.");

        throw $r3;

     label2:
        return;
    }
    protected static void processAttrCert4(java.security.cert.X509Certificate, java.util.Set) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.X509Certificate $r0, $r8;
        java.util.Set $r1;
        boolean z0, $z1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.security.cert.TrustAnchor r4;
        javax.security.auth.x500.X500Principal $r5;
        java.lang.String $r6, $r7;
        java.security.cert.CertPathValidatorException $r9;

        $r0 := @parameter0: java.security.cert.X509Certificate;

        $r1 := @parameter1: java.util.Set;

        z0 = 0;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.security.cert.TrustAnchor) $r3;

        $r5 = virtualinvoke $r0.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r6 = virtualinvoke $r5.<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)>("RFC2253");

        $r7 = virtualinvoke r4.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label2;

        $r8 = virtualinvoke r4.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        $z1 = virtualinvoke $r0.<java.security.cert.X509Certificate: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label1;

     label2:
        z0 = 1;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        $r9 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r9.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Attribute certificate issuer is not directly trusted.");

        throw $r9;

     label4:
        return;
    }
    protected static void processAttrCert5(org.spongycastle.x509.X509AttributeCertificate, org.spongycastle.jcajce.PKIXExtendedParameters) throws java.security.cert.CertPathValidatorException
    {
        org.spongycastle.x509.X509AttributeCertificate $r0;
        org.spongycastle.jcajce.PKIXExtendedParameters $r1;
        java.util.Date $r2;
        java.security.cert.CertificateExpiredException r3;
        org.spongycastle.jce.exception.ExtCertPathValidatorException $r4;
        java.security.cert.CertificateNotYetValidException r5;

        $r0 := @parameter0: org.spongycastle.x509.X509AttributeCertificate;

        $r1 := @parameter1: org.spongycastle.jcajce.PKIXExtendedParameters;

     label1:
        $r2 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: java.util.Date getValidDate(org.spongycastle.jcajce.PKIXExtendedParameters)>($r1);

        interfaceinvoke $r0.<org.spongycastle.x509.X509AttributeCertificate: void checkValidity(java.util.Date)>($r2);

     label2:
        return;

     label3:
        r3 := @caughtexception;

        $r4 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r4.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Attribute certificate is not valid.", r3);

        throw $r4;

     label4:
        r5 := @caughtexception;

        $r4 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r4.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Attribute certificate is not valid.", r5);

        throw $r4;

        catch java.security.cert.CertificateExpiredException from label1 to label2 with label3;
        catch java.security.cert.CertificateNotYetValidException from label1 to label2 with label4;
    }
    protected static void processAttrCert7(org.spongycastle.x509.X509AttributeCertificate, java.security.cert.CertPath, java.security.cert.CertPath, org.spongycastle.jcajce.PKIXExtendedParameters, java.util.Set) throws java.security.cert.CertPathValidatorException
    {
        org.spongycastle.x509.X509AttributeCertificate $r0;
        java.security.cert.CertPath $r1, $r2;
        org.spongycastle.jcajce.PKIXExtendedParameters $r3;
        java.util.Set $r4, $r5;
        java.lang.String $r6;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        org.spongycastle.x509.PKIXAttrCertChecker $r10;
        org.spongycastle.jce.provider.AnnotatedException r11;
        org.spongycastle.jce.exception.ExtCertPathValidatorException $r12;
        java.lang.IllegalArgumentException r13;
        java.security.cert.CertPathValidatorException $r14;
        java.lang.StringBuilder $r15;

        $r0 := @parameter0: org.spongycastle.x509.X509AttributeCertificate;

        $r1 := @parameter1: java.security.cert.CertPath;

        $r2 := @parameter2: java.security.cert.CertPath;

        $r3 := @parameter3: org.spongycastle.jcajce.PKIXExtendedParameters;

        $r4 := @parameter4: java.util.Set;

        $r5 = interfaceinvoke $r0.<org.spongycastle.x509.X509AttributeCertificate: java.util.Set getCriticalExtensionOIDs()>();

        $r6 = <org.spongycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String TARGET_INFORMATION>;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r6 = <org.spongycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String TARGET_INFORMATION>;

     label1:
        $r7 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: org.spongycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r0, $r6);

        staticinvoke <org.spongycastle.asn1.x509.TargetInformation: org.spongycastle.asn1.x509.TargetInformation getInstance(java.lang.Object)>($r7);

     label2:
        $r6 = <org.spongycastle.jce.provider.RFC3281CertPathUtilities: java.lang.String TARGET_INFORMATION>;

        interfaceinvoke $r5.<java.util.Set: boolean remove(java.lang.Object)>($r6);

        $r8 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (org.spongycastle.x509.PKIXAttrCertChecker) $r9;

        virtualinvoke $r10.<org.spongycastle.x509.PKIXAttrCertChecker: void check(org.spongycastle.x509.X509AttributeCertificate,java.security.cert.CertPath,java.security.cert.CertPath,java.util.Collection)>($r0, $r1, $r2, $r5);

        goto label3;

     label4:
        r11 := @caughtexception;

        $r12 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r12.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Target information extension could not be read.", r11);

        throw $r12;

     label5:
        r13 := @caughtexception;

        $r12 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r12.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable)>("Target information extension could not be read.", r13);

        throw $r12;

     label6:
        $z0 = interfaceinvoke $r5.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        $r14 = new java.security.cert.CertPathValidatorException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute certificate contains unsupported critical extensions: ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>($r6);

        throw $r14;

     label7:
        return;

        catch org.spongycastle.jce.provider.AnnotatedException from label1 to label2 with label4;
        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
    }
