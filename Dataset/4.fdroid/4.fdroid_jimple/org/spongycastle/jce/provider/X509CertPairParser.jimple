org.spongycastle.jce.provider.X509CertPairParser extends org.spongycastle.x509.X509StreamParserSpi
private java.io.InputStream currentStream
    public void <init>()
    {
        org.spongycastle.jce.provider.X509CertPairParser r0;

        r0 := @this: org.spongycastle.jce.provider.X509CertPairParser;

        specialinvoke r0.<org.spongycastle.x509.X509StreamParserSpi: void <init>()>();

        r0.<org.spongycastle.jce.provider.X509CertPairParser: java.io.InputStream currentStream> = null;

        return;
    }
    private org.spongycastle.x509.X509CertificatePair readDERCrossCertificatePair(java.io.InputStream) throws java.io.IOException, java.security.cert.CertificateParsingException
    {
        org.spongycastle.jce.provider.X509CertPairParser r0;
        java.io.InputStream $r1;
        org.spongycastle.asn1.ASN1InputStream r2;
        org.spongycastle.x509.X509CertificatePair $r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        org.spongycastle.asn1.ASN1Sequence r5;
        org.spongycastle.asn1.x509.CertificatePair $r6;

        r0 := @this: org.spongycastle.jce.provider.X509CertPairParser;

        $r1 := @parameter0: java.io.InputStream;

        r2 = new org.spongycastle.asn1.ASN1InputStream;

        specialinvoke r2.<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>($r1);

        $r4 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        r5 = (org.spongycastle.asn1.ASN1Sequence) $r4;

        $r6 = staticinvoke <org.spongycastle.asn1.x509.CertificatePair: org.spongycastle.asn1.x509.CertificatePair getInstance(java.lang.Object)>(r5);

        $r3 = new org.spongycastle.x509.X509CertificatePair;

        specialinvoke $r3.<org.spongycastle.x509.X509CertificatePair: void <init>(org.spongycastle.asn1.x509.CertificatePair)>($r6);

        return $r3;
    }
    public void engineInit(java.io.InputStream)
    {
        org.spongycastle.jce.provider.X509CertPairParser r0;
        java.io.InputStream $r1;
        boolean $z0;
        java.io.BufferedInputStream $r2;

        r0 := @this: org.spongycastle.jce.provider.X509CertPairParser;

        $r1 := @parameter0: java.io.InputStream;

        r0.<org.spongycastle.jce.provider.X509CertPairParser: java.io.InputStream currentStream> = $r1;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertPairParser: java.io.InputStream currentStream>;

        $z0 = virtualinvoke $r1.<java.io.InputStream: boolean markSupported()>();

        if $z0 != 0 goto label1;

        $r2 = new java.io.BufferedInputStream;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertPairParser: java.io.InputStream currentStream>;

        specialinvoke $r2.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        r0.<org.spongycastle.jce.provider.X509CertPairParser: java.io.InputStream currentStream> = $r2;

     label1:
        return;
    }
    public java.lang.Object engineRead() throws org.spongycastle.x509.util.StreamParsingException
    {
        org.spongycastle.jce.provider.X509CertPairParser r0;
        java.lang.Exception r1;
        java.io.InputStream $r2;
        int $i0;
        org.spongycastle.x509.X509CertificatePair $r3;
        org.spongycastle.x509.util.StreamParsingException $r4;
        java.lang.String $r5;

        r0 := @this: org.spongycastle.jce.provider.X509CertPairParser;

     label1:
        $r2 = r0.<org.spongycastle.jce.provider.X509CertPairParser: java.io.InputStream currentStream>;

        virtualinvoke $r2.<java.io.InputStream: void mark(int)>(10);

        $r2 = r0.<org.spongycastle.jce.provider.X509CertPairParser: java.io.InputStream currentStream>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read()>();

     label2:
        if $i0 != -1 goto label3;

        return null;

     label3:
        $r2 = r0.<org.spongycastle.jce.provider.X509CertPairParser: java.io.InputStream currentStream>;

        virtualinvoke $r2.<java.io.InputStream: void reset()>();

        $r2 = r0.<org.spongycastle.jce.provider.X509CertPairParser: java.io.InputStream currentStream>;

        $r3 = specialinvoke r0.<org.spongycastle.jce.provider.X509CertPairParser: org.spongycastle.x509.X509CertificatePair readDERCrossCertificatePair(java.io.InputStream)>($r2);

     label4:
        return $r3;

     label5:
        r1 := @caughtexception;

        $r4 = new org.spongycastle.x509.util.StreamParsingException;

        $r5 = virtualinvoke r1.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.x509.util.StreamParsingException: void <init>(java.lang.String,java.lang.Throwable)>($r5, r1);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    public java.util.Collection engineReadAll() throws org.spongycastle.x509.util.StreamParsingException
    {
        org.spongycastle.jce.provider.X509CertPairParser r0;
        java.util.ArrayList r1;
        java.lang.Object $r2;
        org.spongycastle.x509.X509CertificatePair r3;

        r0 := @this: org.spongycastle.jce.provider.X509CertPairParser;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

     label1:
        $r2 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertPairParser: java.lang.Object engineRead()>();

        r3 = (org.spongycastle.x509.X509CertificatePair) $r2;

        if r3 == null goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label1;

     label2:
        return r1;
    }
