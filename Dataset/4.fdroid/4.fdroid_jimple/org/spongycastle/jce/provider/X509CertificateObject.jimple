org.spongycastle.jce.provider.X509CertificateObject extends java.security.cert.X509Certificate implements org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier
private org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier attrCarrier
private org.spongycastle.asn1.x509.BasicConstraints basicConstraints
private org.spongycastle.asn1.x509.Certificate c
private int hashValue
private boolean hashValueSet
private boolean[] keyUsage
    public void <init>(org.spongycastle.asn1.x509.Certificate) throws java.security.cert.CertificateParsingException
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.x509.Certificate $r1;
        int i0, $i1, $i2;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r2;
        byte[] $r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        org.spongycastle.asn1.x509.BasicConstraints $r5;
        org.spongycastle.asn1.DERBitString $r6;
        boolean[] $r7;
        byte $b3;
        boolean $z0;
        java.lang.Exception r8, r12;
        java.security.cert.CertificateParsingException $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 := @parameter0: org.spongycastle.asn1.x509.Certificate;

        $i2 = 9;

        specialinvoke r0.<java.security.cert.X509Certificate: void <init>()>();

        $r2 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r2.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier attrCarrier> = $r2;

        r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c> = $r1;

     label01:
        $r3 = specialinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: byte[] getExtensionBytes(java.lang.String)>("2.5.29.19");

     label02:
        if $r3 == null goto label04;

     label03:
        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r3);

        $r5 = staticinvoke <org.spongycastle.asn1.x509.BasicConstraints: org.spongycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r4);

        r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.BasicConstraints basicConstraints> = $r5;

     label04:
        $r3 = specialinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: byte[] getExtensionBytes(java.lang.String)>("2.5.29.15");

     label05:
        if $r3 == null goto label22;

     label06:
        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r3);

        $r6 = staticinvoke <org.spongycastle.asn1.DERBitString: org.spongycastle.asn1.DERBitString getInstance(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r6.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        i0 = lengthof $r3;

     label07:
        i0 = i0 * 8;

     label08:
        $i1 = virtualinvoke $r6.<org.spongycastle.asn1.DERBitString: int getPadBits()>();

     label09:
        i0 = i0 - $i1;

        if i0 >= 9 goto label20;

     label10:
        $r7 = newarray (boolean)[$i2];

        r0.<org.spongycastle.jce.provider.X509CertificateObject: boolean[] keyUsage> = $r7;

     label11:
        $i2 = 0;

     label12:
        if $i2 == i0 goto label25;

     label13:
        $r7 = r0.<org.spongycastle.jce.provider.X509CertificateObject: boolean[] keyUsage>;

     label14:
        $i1 = $i2 / 8;

     label15:
        $b3 = $r3[$i1];

     label16:
        $i1 = $i2 % 8;

        $i1 = 128 >>> $i1;

        $i1 = $b3 & $i1;

        if $i1 == 0 goto label21;

        $z0 = 1;

     label17:
        $r7[$i2] = $z0;

     label18:
        $i2 = $i2 + 1;

        goto label12;

     label19:
        r8 := @caughtexception;

        $r9 = new java.security.cert.CertificateParsingException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot construct BasicConstraints: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r11);

        throw $r9;

     label20:
        $i2 = i0;

        goto label10;

     label21:
        $z0 = 0;

        goto label17;

     label22:
        r0.<org.spongycastle.jce.provider.X509CertificateObject: boolean[] keyUsage> = null;

     label23:
        return;

     label24:
        r12 := @caughtexception;

        $r9 = new java.security.cert.CertificateParsingException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot construct KeyUsage: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r11);

        throw $r9;

     label25:
        return;

        catch java.lang.Exception from label01 to label02 with label19;
        catch java.lang.Exception from label03 to label04 with label19;
        catch java.lang.Exception from label04 to label05 with label24;
        catch java.lang.Exception from label06 to label07 with label24;
        catch java.lang.Exception from label08 to label09 with label24;
        catch java.lang.Exception from label10 to label11 with label24;
        catch java.lang.Exception from label13 to label14 with label24;
        catch java.lang.Exception from label15 to label16 with label24;
        catch java.lang.Exception from label17 to label18 with label24;
        catch java.lang.Exception from label22 to label23 with label24;
    }
    private int calculateHashCode()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.security.cert.CertificateEncodingException r1;
        byte[] $r2;
        int i0, i1, $i2;
        byte $b3;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        i0 = 0;

     label1:
        $r2 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: byte[] getEncoded()>();

     label2:
        i1 = 1;

     label3:
        $i2 = lengthof $r2;

        if i1 >= $i2 goto label5;

        $b3 = $r2[i1];

        $i2 = $b3 * i1;

        i0 = i0 + $i2;

        i1 = i1 + 1;

        goto label3;

     label4:
        r1 := @caughtexception;

        return 0;

     label5:
        return i0;

        catch java.security.cert.CertificateEncodingException from label1 to label2 with label4;
    }
    private void checkSignature(java.security.PublicKey, java.security.Signature) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.SignatureException, java.security.InvalidKeyException
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.security.PublicKey $r1;
        java.security.Signature $r2;
        org.spongycastle.asn1.x509.Certificate $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4, $r6;
        org.spongycastle.asn1.x509.TBSCertificate $r5;
        boolean $z0;
        java.security.cert.CertificateException $r7;
        org.spongycastle.asn1.ASN1Encodable $r8;
        byte[] $r9;
        java.security.SignatureException $r10;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 := @parameter0: java.security.PublicKey;

        $r2 := @parameter1: java.security.Signature;

        $r3 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.TBSCertificate getTBSCertificate()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.TBSCertificate: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignature()>();

        $z0 = specialinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: boolean isAlgIdEqual(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r4, $r6);

        if $z0 != 0 goto label1;

        $r7 = new java.security.cert.CertificateException;

        specialinvoke $r7.<java.security.cert.CertificateException: void <init>(java.lang.String)>("signature algorithm in TBS cert not same as outer cert");

        throw $r7;

     label1:
        $r3 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r8 = virtualinvoke $r4.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        staticinvoke <org.spongycastle.jce.provider.X509SignatureUtil: void setSignatureParameters(java.security.Signature,org.spongycastle.asn1.ASN1Encodable)>($r2, $r8);

        virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1);

        $r9 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: byte[] getTBSCertificate()>();

        virtualinvoke $r2.<java.security.Signature: void update(byte[])>($r9);

        $r9 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: byte[] getSignature()>();

        $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r9);

        if $z0 != 0 goto label2;

        $r10 = new java.security.SignatureException;

        specialinvoke $r10.<java.security.SignatureException: void <init>(java.lang.String)>("certificate does not verify with supplied key");

        throw $r10;

     label2:
        return;
    }
    private static java.util.Collection getAlternativeNames(byte[]) throws java.security.cert.CertificateParsingException
    {
        byte[] $r0;
        java.util.ArrayList r1, r2;
        org.spongycastle.asn1.ASN1Sequence $r3;
        java.util.Enumeration $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.asn1.x509.GeneralName $r6;
        int $i0;
        java.lang.Integer $r7;
        java.io.IOException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;
        java.lang.Exception r11;
        java.security.cert.CertificateParsingException $r12;
        java.util.List $r13;
        org.spongycastle.asn1.x500.X500NameStyle $r14;
        org.spongycastle.asn1.ASN1Encodable $r15;
        org.spongycastle.asn1.x500.X500Name $r16;
        org.spongycastle.asn1.ASN1String $r17;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r18;
        org.spongycastle.asn1.ASN1OctetString $r19;
        java.net.InetAddress $r20;
        java.net.UnknownHostException r21;
        java.util.Collection $r22;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label01;

        return null;

     label01:
        r2 = new java.util.ArrayList;

     label02:
        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label03:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

     label04:
        if $z0 == 0 goto label27;

     label05:
        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = staticinvoke <org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.x509.GeneralName getInstance(java.lang.Object)>($r5);

     label06:
        r1 = new java.util.ArrayList;

     label07:
        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $i0 = virtualinvoke $r6.<org.spongycastle.asn1.x509.GeneralName: int getTagNo()>();

        $r7 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        $i0 = virtualinvoke $r6.<org.spongycastle.asn1.x509.GeneralName: int getTagNo()>();

     label08:
        lookupswitch($i0)
        {
            case 0: goto label12;
            case 1: goto label18;
            case 2: goto label18;
            case 3: goto label12;
            case 4: goto label15;
            case 5: goto label12;
            case 6: goto label18;
            case 7: goto label22;
            case 8: goto label20;
            default: goto label09;
        };

     label09:
        $r8 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad tag number: ");

        $i0 = virtualinvoke $r6.<org.spongycastle.asn1.x509.GeneralName: int getTagNo()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label11:
        r11 := @caughtexception;

        $r12 = new java.security.cert.CertificateParsingException;

        $r10 = virtualinvoke r11.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r12.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>($r10);

        throw $r12;

     label12:
        $r0 = virtualinvoke $r6.<org.spongycastle.asn1.x509.GeneralName: byte[] getEncoded()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r0);

     label13:
        $r13 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1);

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r13);

     label14:
        goto label03;

     label15:
        $r14 = <org.spongycastle.asn1.x500.style.RFC4519Style: org.spongycastle.asn1.x500.X500NameStyle INSTANCE>;

     label16:
        $r15 = virtualinvoke $r6.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r16 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(org.spongycastle.asn1.x500.X500NameStyle,java.lang.Object)>($r14, $r15);

        $r10 = virtualinvoke $r16.<org.spongycastle.asn1.x500.X500Name: java.lang.String toString()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);

     label17:
        goto label13;

     label18:
        $r15 = virtualinvoke $r6.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r17 = (org.spongycastle.asn1.ASN1String) $r15;

        $r10 = interfaceinvoke $r17.<org.spongycastle.asn1.ASN1String: java.lang.String getString()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);

     label19:
        goto label13;

     label20:
        $r15 = virtualinvoke $r6.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r18 = staticinvoke <org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>($r15);

        $r10 = virtualinvoke $r18.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);

     label21:
        goto label13;

     label22:
        $r15 = virtualinvoke $r6.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r19 = staticinvoke <org.spongycastle.asn1.DEROctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r15);

        $r0 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

     label23:
        $r20 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>($r0);

        $r10 = virtualinvoke $r20.<java.net.InetAddress: java.lang.String getHostAddress()>();

     label24:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);

     label25:
        goto label13;

     label26:
        r21 := @caughtexception;

        goto label03;

     label27:
        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

     label28:
        if $i0 != 0 goto label29;

        return null;

     label29:
        $r22 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>(r2);

     label30:
        return $r22;

        catch java.lang.Exception from label02 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label10 to label11 with label11;
        catch java.lang.Exception from label12 to label14 with label11;
        catch java.lang.Exception from label16 to label17 with label11;
        catch java.lang.Exception from label18 to label19 with label11;
        catch java.lang.Exception from label20 to label21 with label11;
        catch java.lang.Exception from label22 to label23 with label11;
        catch java.net.UnknownHostException from label23 to label24 with label26;
        catch java.lang.Exception from label23 to label24 with label11;
        catch java.lang.Exception from label24 to label25 with label11;
        catch java.lang.Exception from label27 to label28 with label11;
        catch java.lang.Exception from label29 to label30 with label11;
    }
    private byte[] getExtensionBytes(java.lang.String)
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.lang.String $r1;
        org.spongycastle.asn1.x509.Certificate $r2;
        org.spongycastle.asn1.x509.TBSCertificate $r3;
        org.spongycastle.asn1.x509.Extensions $r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;
        org.spongycastle.asn1.x509.Extension $r6;
        org.spongycastle.asn1.ASN1OctetString $r7;
        byte[] $r8;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.TBSCertificate getTBSCertificate()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.TBSCertificate: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        if $r4 == null goto label1;

        $r5 = new org.spongycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke $r5.<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>($r1);

        $r6 = virtualinvoke $r4.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r5);

        if $r6 == null goto label1;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1OctetString getExtnValue()>();

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        return $r8;

     label1:
        return null;
    }
    private boolean isAlgIdEqual(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.asn1.x509.AlgorithmIdentifier)
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1, $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3, $r4;
        boolean $z0;
        org.spongycastle.asn1.ASN1Encodable $r5, $r7;
        org.spongycastle.asn1.DERNull $r6;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r4 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        if $r5 != null goto label3;

        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        if $r5 == null goto label2;

        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r6 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label6;

     label2:
        return 1;

     label3:
        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        if $r5 != null goto label5;

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        if $r5 == null goto label4;

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r6 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label6;

     label4:
        return 1;

     label5:
        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r7 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        return $z0;

     label6:
        return 0;
    }
    public void checkValidity() throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.util.Date $r1;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: void checkValidity(java.util.Date)>($r1);

        return;
    }
    public void checkValidity(java.util.Date) throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.util.Date $r1, $r2;
        long $l0, $l1;
        byte $b2;
        java.security.cert.CertificateExpiredException $r3;
        java.lang.StringBuilder $r4;
        org.spongycastle.asn1.x509.Certificate $r5;
        org.spongycastle.asn1.x509.Time $r6;
        java.lang.String $r7;
        java.security.cert.CertificateNotYetValidException $r8;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 := @parameter0: java.util.Date;

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        $r2 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: java.util.Date getNotAfter()>();

        $l1 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $b2 = $l0 cmp $l1;

        if $b2 <= 0 goto label1;

        $r3 = new java.security.cert.CertificateExpiredException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("certificate expired on ");

        $r5 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Time getEndDate()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.Time: java.lang.String getTime()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.security.cert.CertificateExpiredException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        $r1 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: java.util.Date getNotBefore()>();

        $l1 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label2;

        $r8 = new java.security.cert.CertificateNotYetValidException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("certificate not valid till ");

        $r5 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Time getStartDate()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.Time: java.lang.String getTime()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.cert.CertificateNotYetValidException: void <init>(java.lang.String)>($r7);

        throw $r8;

     label2:
        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.lang.Object $r1;
        java.security.cert.CertificateEncodingException r2;
        boolean $z0;
        java.security.cert.Certificate r3;
        byte[] $r4, $r5;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof java.security.cert.Certificate;

        if $z0 == 0 goto label5;

        r3 = (java.security.cert.Certificate) $r1;

     label2:
        $r4 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: byte[] getEncoded()>();

        $r5 = virtualinvoke r3.<java.security.cert.Certificate: byte[] getEncoded()>();

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r4, $r5);

     label3:
        return $z0;

     label4:
        r2 := @caughtexception;

     label5:
        return 0;

        catch java.security.cert.CertificateEncodingException from label2 to label3 with label4;
    }
    public org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier $r3;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier attrCarrier>;

        $r2 = interfaceinvoke $r3.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        return $r2;
    }
    public java.util.Enumeration getBagAttributeKeys()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.util.Enumeration $r1;
        org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier $r2;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r2 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier attrCarrier>;

        $r1 = interfaceinvoke $r2.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: java.util.Enumeration getBagAttributeKeys()>();

        return $r1;
    }
    public int getBasicConstraints()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.x509.BasicConstraints $r1;
        boolean $z0;
        java.math.BigInteger $r2;
        int $i0;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.BasicConstraints basicConstraints>;

        if $r1 == null goto label2;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.BasicConstraints basicConstraints>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.x509.BasicConstraints: boolean isCA()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.BasicConstraints basicConstraints>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.BasicConstraints: java.math.BigInteger getPathLenConstraint()>();

        if $r2 != null goto label1;

        return 2147483647;

     label1:
        $r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.BasicConstraints basicConstraints>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.BasicConstraints: java.math.BigInteger getPathLenConstraint()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        return $i0;

     label2:
        return -1;
    }
    public java.util.Set getCriticalExtensionOIDs()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        int $i0;
        java.util.HashSet r1;
        org.spongycastle.asn1.x509.Certificate $r2;
        org.spongycastle.asn1.x509.TBSCertificate $r3;
        org.spongycastle.asn1.x509.Extensions $r4;
        java.util.Enumeration $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.spongycastle.asn1.ASN1ObjectIdentifier r7;
        org.spongycastle.asn1.x509.Extension $r8;
        java.lang.String $r9;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $i0 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: int getVersion()>();

        if $i0 != 3 goto label2;

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        $r2 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.TBSCertificate getTBSCertificate()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.TBSCertificate: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x509.Extensions: java.util.Enumeration oids()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r6;

        $r8 = virtualinvoke $r4.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>(r7);

        $z0 = virtualinvoke $r8.<org.spongycastle.asn1.x509.Extension: boolean isCritical()>();

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r7.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        return null;

     label3:
        return r1;
    }
    public byte[] getEncoded() throws java.security.cert.CertificateEncodingException
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.io.IOException r1;
        org.spongycastle.asn1.x509.Certificate $r2;
        byte[] $r3;
        java.security.cert.CertificateEncodingException $r4;
        java.lang.String $r5;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r2 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

     label1:
        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        $r4 = new java.security.cert.CertificateEncodingException;

        $r5 = virtualinvoke r1.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r4.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public java.util.List getExtendedKeyUsage() throws java.security.cert.CertificateParsingException
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.ASN1InputStream r1;
        java.lang.Exception r2;
        java.util.ArrayList r3;
        byte[] $r4;
        org.spongycastle.asn1.ASN1Primitive $r5;
        org.spongycastle.asn1.ASN1Sequence r6;
        int i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r7;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r8;
        java.lang.String $r9;
        java.util.List $r10;
        java.security.cert.CertificateParsingException $r11;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r4 = specialinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: byte[] getExtensionBytes(java.lang.String)>("2.5.29.37");

        if $r4 == null goto label12;

        r1 = new org.spongycastle.asn1.ASN1InputStream;

     label01:
        specialinvoke r1.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r4);

        $r5 = virtualinvoke r1.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        r6 = (org.spongycastle.asn1.ASN1Sequence) $r5;

     label02:
        r3 = new java.util.ArrayList;

     label03:
        specialinvoke r3.<java.util.ArrayList: void <init>()>();

     label04:
        i0 = 0;

     label05:
        $i1 = virtualinvoke r6.<org.spongycastle.asn1.ASN1Sequence: int size()>();

     label06:
        if i0 == $i1 goto label09;

     label07:
        $r7 = virtualinvoke r6.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(i0);

        $r8 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r7;

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r9);

     label08:
        i0 = i0 + 1;

        goto label05;

     label09:
        $r10 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r3);

     label10:
        return $r10;

     label11:
        r2 := @caughtexception;

        $r11 = new java.security.cert.CertificateParsingException;

        specialinvoke $r11.<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>("error processing extended key usage extension");

        throw $r11;

     label12:
        return null;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }
    public byte[] getExtensionValue(java.lang.String)
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.lang.String $r1;
        java.lang.Exception r2;
        org.spongycastle.asn1.x509.Certificate $r3;
        org.spongycastle.asn1.x509.TBSCertificate $r4;
        org.spongycastle.asn1.x509.Extensions $r5;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r6;
        org.spongycastle.asn1.x509.Extension $r7;
        org.spongycastle.asn1.ASN1OctetString $r8;
        byte[] $r9;
        java.lang.IllegalStateException $r10;
        java.lang.StringBuilder $r11;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.TBSCertificate getTBSCertificate()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x509.TBSCertificate: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        if $r5 == null goto label4;

        $r6 = new org.spongycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke $r6.<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>($r1);

        $r7 = virtualinvoke $r5.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r6);

        if $r7 == null goto label4;

     label1:
        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1OctetString getExtnValue()>();

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1OctetString: byte[] getEncoded()>();

     label2:
        return $r9;

     label3:
        r2 := @caughtexception;

        $r10 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error parsing ");

        $r1 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r10;

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public java.util.Collection getIssuerAlternativeNames() throws java.security.cert.CertificateParsingException
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.lang.String $r2;
        byte[] $r3;
        java.util.Collection $r4;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier issuerAlternativeName>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r3 = specialinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: byte[] getExtensionBytes(java.lang.String)>($r2);

        $r4 = staticinvoke <org.spongycastle.jce.provider.X509CertificateObject: java.util.Collection getAlternativeNames(byte[])>($r3);

        return $r4;
    }
    public java.security.Principal getIssuerDN()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.io.IOException r1;
        org.spongycastle.jce.X509Principal $r2;
        org.spongycastle.asn1.x509.Certificate $r3;
        org.spongycastle.asn1.x500.X500Name $r4;
        byte[] $r5;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r2 = new org.spongycastle.jce.X509Principal;

        $r3 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

     label1:
        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x500.X500Name getIssuer()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x500.X500Name: byte[] getEncoded()>();

        $r4 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r5);

        specialinvoke $r2.<org.spongycastle.jce.X509Principal: void <init>(org.spongycastle.asn1.x500.X500Name)>($r4);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public boolean[] getIssuerUniqueID()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        int $i0, $i1;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.x509.TBSCertificate $r2;
        org.spongycastle.asn1.DERBitString $r3;
        byte[] $r4;
        boolean[] r5;
        byte $b2;
        boolean $z0;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.TBSCertificate getTBSCertificate()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.TBSCertificate: org.spongycastle.asn1.DERBitString getIssuerUniqueId()>();

        if $r3 == null goto label4;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        $i1 = lengthof $r4;

        $i1 = $i1 * 8;

        $i0 = virtualinvoke $r3.<org.spongycastle.asn1.DERBitString: int getPadBits()>();

        $i1 = $i1 - $i0;

        r5 = newarray (boolean)[$i1];

        $i1 = 0;

     label1:
        $i0 = lengthof r5;

        if $i1 == $i0 goto label5;

        $i0 = $i1 / 8;

        $b2 = $r4[$i0];

        $i0 = $i1 % 8;

        $i0 = 128 >>> $i0;

        $i0 = $b2 & $i0;

        if $i0 == 0 goto label3;

        $z0 = 1;

     label2:
        r5[$i1] = $z0;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return null;

     label5:
        return r5;
    }
    public javax.security.auth.x500.X500Principal getIssuerX500Principal()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.ASN1OutputStream r1;
        java.io.ByteArrayOutputStream r2;
        java.io.IOException r3;
        org.spongycastle.asn1.x509.Certificate $r4;
        org.spongycastle.asn1.x500.X500Name $r5;
        javax.security.auth.x500.X500Principal $r6;
        byte[] $r7;
        java.lang.IllegalStateException $r8;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        r2 = new java.io.ByteArrayOutputStream;

     label1:
        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>()>();

     label2:
        r1 = new org.spongycastle.asn1.ASN1OutputStream;

     label3:
        specialinvoke r1.<org.spongycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>(r2);

     label4:
        $r4 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

     label5:
        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x500.X500Name getIssuer()>();

        virtualinvoke r1.<org.spongycastle.asn1.ASN1OutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>($r5);

     label6:
        $r6 = new javax.security.auth.x500.X500Principal;

     label7:
        $r7 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r6.<javax.security.auth.x500.X500Principal: void <init>(byte[])>($r7);

     label8:
        return $r6;

     label9:
        r3 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("can\'t encode issuer DN");

        throw $r8;

        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label3 to label4 with label9;
        catch java.io.IOException from label5 to label6 with label9;
        catch java.io.IOException from label7 to label8 with label9;
    }
    public boolean[] getKeyUsage()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        boolean[] r1;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: boolean[] keyUsage>;

        return r1;
    }
    public java.util.Set getNonCriticalExtensionOIDs()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        int $i0;
        java.util.HashSet r1;
        org.spongycastle.asn1.x509.Certificate $r2;
        org.spongycastle.asn1.x509.TBSCertificate $r3;
        org.spongycastle.asn1.x509.Extensions $r4;
        java.util.Enumeration $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.spongycastle.asn1.ASN1ObjectIdentifier r7;
        org.spongycastle.asn1.x509.Extension $r8;
        java.lang.String $r9;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $i0 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: int getVersion()>();

        if $i0 != 3 goto label2;

        r1 = new java.util.HashSet;

        specialinvoke r1.<java.util.HashSet: void <init>()>();

        $r2 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.TBSCertificate getTBSCertificate()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.TBSCertificate: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x509.Extensions: java.util.Enumeration oids()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r6;

        $r8 = virtualinvoke $r4.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>(r7);

        $z0 = virtualinvoke $r8.<org.spongycastle.asn1.x509.Extension: boolean isCritical()>();

        if $z0 != 0 goto label1;

        $r9 = virtualinvoke r7.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        return null;

     label3:
        return r1;
    }
    public java.util.Date getNotAfter()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.x509.Time $r2;
        java.util.Date $r3;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Time getEndDate()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Time: java.util.Date getDate()>();

        return $r3;
    }
    public java.util.Date getNotBefore()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.x509.Time $r2;
        java.util.Date $r3;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Time getStartDate()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Time: java.util.Date getDate()>();

        return $r3;
    }
    public java.security.PublicKey getPublicKey()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.io.IOException r1;
        org.spongycastle.asn1.x509.Certificate $r2;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r3;
        java.security.PublicKey $r4;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r2 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

     label1:
        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

        $r4 = staticinvoke <org.spongycastle.jce.provider.BouncyCastleProvider: java.security.PublicKey getPublicKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r3);

     label2:
        return $r4;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public java.math.BigInteger getSerialNumber()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.ASN1Integer $r2;
        java.math.BigInteger $r3;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.ASN1Integer getSerialNumber()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        return $r3;
    }
    public java.lang.String getSigAlgName()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.security.Provider $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.security.Provider[] $r4;
        int i0, $i1;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = staticinvoke <java.security.Security: java.security.Provider getProvider(java.lang.String)>("SC");

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alg.Alias.Signature.");

        $r3 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: java.lang.String getSigAlgOID()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.security.Provider: java.lang.String getProperty(java.lang.String)>($r3);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r4 = staticinvoke <java.security.Security: java.security.Provider[] getProviders()>();

        i0 = 0;

     label2:
        $i1 = lengthof $r4;

        if i0 == $i1 goto label3;

        $r1 = $r4[i0];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alg.Alias.Signature.");

        $r3 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: java.lang.String getSigAlgOID()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.security.Provider: java.lang.String getProperty(java.lang.String)>($r3);

        if $r3 != null goto label4;

        i0 = i0 + 1;

        goto label2;

     label3:
        $r3 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: java.lang.String getSigAlgOID()>();

     label4:
        return $r3;
    }
    public java.lang.String getSigAlgOID()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        java.lang.String $r4;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        return $r4;
    }
    public byte[] getSigAlgParams()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.io.IOException r1;
        org.spongycastle.asn1.x509.Certificate $r2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.spongycastle.asn1.ASN1Encodable $r4;
        org.spongycastle.asn1.ASN1Primitive $r5;
        byte[] $r6;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r2 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        if $r4 == null goto label4;

        $r2 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

     label1:
        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r5 = interfaceinvoke $r4.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r6;

     label3:
        r1 := @caughtexception;

     label4:
        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public byte[] getSignature()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.DERBitString $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.DERBitString getSignature()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        return $r3;
    }
    public java.util.Collection getSubjectAlternativeNames() throws java.security.cert.CertificateParsingException
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.lang.String $r2;
        byte[] $r3;
        java.util.Collection $r4;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier subjectAlternativeName>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r3 = specialinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: byte[] getExtensionBytes(java.lang.String)>($r2);

        $r4 = staticinvoke <org.spongycastle.jce.provider.X509CertificateObject: java.util.Collection getAlternativeNames(byte[])>($r3);

        return $r4;
    }
    public java.security.Principal getSubjectDN()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.jce.X509Principal $r1;
        org.spongycastle.asn1.x509.Certificate $r2;
        org.spongycastle.asn1.x500.X500Name $r3;
        org.spongycastle.asn1.ASN1Primitive $r4;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = new org.spongycastle.jce.X509Principal;

        $r2 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x500.X500Name getSubject()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r3 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r4);

        specialinvoke $r1.<org.spongycastle.jce.X509Principal: void <init>(org.spongycastle.asn1.x500.X500Name)>($r3);

        return $r1;
    }
    public boolean[] getSubjectUniqueID()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        int $i0, $i1;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.x509.TBSCertificate $r2;
        org.spongycastle.asn1.DERBitString $r3;
        byte[] $r4;
        boolean[] r5;
        byte $b2;
        boolean $z0;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.TBSCertificate getTBSCertificate()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.TBSCertificate: org.spongycastle.asn1.DERBitString getSubjectUniqueId()>();

        if $r3 == null goto label4;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        $i1 = lengthof $r4;

        $i1 = $i1 * 8;

        $i0 = virtualinvoke $r3.<org.spongycastle.asn1.DERBitString: int getPadBits()>();

        $i1 = $i1 - $i0;

        r5 = newarray (boolean)[$i1];

        $i1 = 0;

     label1:
        $i0 = lengthof r5;

        if $i1 == $i0 goto label5;

        $i0 = $i1 / 8;

        $b2 = $r4[$i0];

        $i0 = $i1 % 8;

        $i0 = 128 >>> $i0;

        $i0 = $b2 & $i0;

        if $i0 == 0 goto label3;

        $z0 = 1;

     label2:
        r5[$i1] = $z0;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return null;

     label5:
        return r5;
    }
    public javax.security.auth.x500.X500Principal getSubjectX500Principal()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.ASN1OutputStream r1;
        java.io.ByteArrayOutputStream r2;
        java.io.IOException r3;
        org.spongycastle.asn1.x509.Certificate $r4;
        org.spongycastle.asn1.x500.X500Name $r5;
        javax.security.auth.x500.X500Principal $r6;
        byte[] $r7;
        java.lang.IllegalStateException $r8;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        r2 = new java.io.ByteArrayOutputStream;

     label1:
        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>()>();

     label2:
        r1 = new org.spongycastle.asn1.ASN1OutputStream;

     label3:
        specialinvoke r1.<org.spongycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>(r2);

     label4:
        $r4 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

     label5:
        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x500.X500Name getSubject()>();

        virtualinvoke r1.<org.spongycastle.asn1.ASN1OutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>($r5);

     label6:
        $r6 = new javax.security.auth.x500.X500Principal;

     label7:
        $r7 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r6.<javax.security.auth.x500.X500Principal: void <init>(byte[])>($r7);

     label8:
        return $r6;

     label9:
        r3 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("can\'t encode issuer DN");

        throw $r8;

        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label3 to label4 with label9;
        catch java.io.IOException from label5 to label6 with label9;
        catch java.io.IOException from label7 to label8 with label9;
    }
    public byte[] getTBSCertificate() throws java.security.cert.CertificateEncodingException
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.io.IOException r1;
        org.spongycastle.asn1.x509.Certificate $r2;
        org.spongycastle.asn1.x509.TBSCertificate $r3;
        byte[] $r4;
        java.security.cert.CertificateEncodingException $r5;
        java.lang.String $r6;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r2 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

     label1:
        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.TBSCertificate getTBSCertificate()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.TBSCertificate: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r4;

     label3:
        r1 := @caughtexception;

        $r5 = new java.security.cert.CertificateEncodingException;

        $r6 = virtualinvoke r1.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r5.<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public int getVersion()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        int $i0;
        org.spongycastle.asn1.x509.Certificate $r1;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: int getVersionNumber()>();

        return $i0;
    }
    public boolean hasUnsupportedCriticalExtension()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        int $i0;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.x509.TBSCertificate $r2;
        org.spongycastle.asn1.x509.Extensions $r3;
        java.util.Enumeration $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.asn1.ASN1ObjectIdentifier r6;
        java.lang.String $r7, $r8;
        org.spongycastle.asn1.x509.Extension $r9;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $i0 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: int getVersion()>();

        if $i0 != 3 goto label2;

        $r1 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.TBSCertificate getTBSCertificate()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.TBSCertificate: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        if $r3 == null goto label2;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Extensions: java.util.Enumeration oids()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r5;

        $r7 = virtualinvoke r6.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r8 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String KEY_USAGE>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r8 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r8 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_MAPPINGS>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r8 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String INHIBIT_ANY_POLICY>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r8 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r8 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r8 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String DELTA_CRL_INDICATOR>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r8 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r8 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r8 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r8 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String NAME_CONSTRAINTS>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        $r9 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>(r6);

        $z0 = virtualinvoke $r9.<org.spongycastle.asn1.x509.Extension: boolean isCritical()>();

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    public int hashCode()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        int $i0;
        boolean $z0;
        java.lang.Throwable $r1;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        entermonitor r0;

     label1:
        $z0 = r0.<org.spongycastle.jce.provider.X509CertificateObject: boolean hashValueSet>;

        if $z0 != 0 goto label2;

        $i0 = specialinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: int calculateHashCode()>();

        r0.<org.spongycastle.jce.provider.X509CertificateObject: int hashValue> = $i0;

        r0.<org.spongycastle.jce.provider.X509CertificateObject: boolean hashValueSet> = 1;

     label2:
        $i0 = r0.<org.spongycastle.jce.provider.X509CertificateObject: int hashValue>;

     label3:
        exitmonitor r0;

        return $i0;

     label4:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
    public void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier $r3;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1Encodable;

        $r3 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier attrCarrier>;

        interfaceinvoke $r3.<org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier: void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, $r2);

        return;
    }
    public java.lang.String toString()
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.lang.StringBuffer r1, $r5;
        org.spongycastle.asn1.ASN1InputStream r2;
        java.lang.Exception r3;
        java.lang.String $r4, $r10;
        int $i0, $i1;
        java.math.BigInteger $r6;
        java.security.Principal $r7;
        java.util.Date $r8;
        java.security.PublicKey $r9;
        byte[] $r11, $r12;
        org.spongycastle.asn1.x509.Certificate $r13;
        org.spongycastle.asn1.x509.TBSCertificate $r14;
        org.spongycastle.asn1.x509.Extensions $r15;
        java.util.Enumeration $r16;
        boolean $z0;
        java.lang.Object $r17;
        org.spongycastle.asn1.ASN1ObjectIdentifier r18, $r21;
        org.spongycastle.asn1.x509.Extension $r19;
        org.spongycastle.asn1.ASN1OctetString $r20;
        org.spongycastle.asn1.ASN1Primitive $r22;
        org.spongycastle.asn1.x509.BasicConstraints $r23;
        org.spongycastle.asn1.x509.KeyUsage $r24;
        org.spongycastle.asn1.misc.NetscapeCertType $r25;
        org.spongycastle.asn1.DERBitString $r26;
        org.spongycastle.asn1.misc.NetscapeRevocationURL $r27;
        org.spongycastle.asn1.DERIA5String $r28;
        org.spongycastle.asn1.misc.VerisignCzagExtension $r29;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        $r4 = staticinvoke <org.spongycastle.util.Strings: java.lang.String lineSeparator()>();

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  [0]         Version: ");

        $i0 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: int getVersion()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         SerialNumber: ");

        $r6 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: java.math.BigInteger getSerialNumber()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("             IssuerDN: ");

        $r7 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: java.security.Principal getIssuerDN()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("           Start Date: ");

        $r8 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: java.util.Date getNotBefore()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("           Final Date: ");

        $r8 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: java.util.Date getNotAfter()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("            SubjectDN: ");

        $r7 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: java.security.Principal getSubjectDN()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("           Public Key: ");

        $r9 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: java.security.PublicKey getPublicKey()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Signature Algorithm: ");

        $r10 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: java.lang.String getSigAlgName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r11 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: byte[] getSignature()>();

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("            Signature: ");

        $r10 = new java.lang.String;

        $r12 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>($r11, 0, 20);

        specialinvoke $r10.<java.lang.String: void <init>(byte[])>($r12);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $i0 = 20;

     label01:
        $i1 = lengthof $r11;

        if $i0 >= $i1 goto label04;

        $i1 = lengthof $r11;

        $i1 = $i1 + -20;

        if $i0 >= $i1 goto label03;

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("                       ");

        $r10 = new java.lang.String;

        $r12 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>($r11, $i0, 20);

        specialinvoke $r10.<java.lang.String: void <init>(byte[])>($r12);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label02:
        $i0 = $i0 + 20;

        goto label01;

     label03:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("                       ");

        $r10 = new java.lang.String;

        $i1 = lengthof $r11;

        $i1 = $i1 - $i0;

        $r12 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>($r11, $i0, $i1);

        specialinvoke $r10.<java.lang.String: void <init>(byte[])>($r12);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label02;

     label04:
        $r13 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r14 = virtualinvoke $r13.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.TBSCertificate getTBSCertificate()>();

        $r15 = virtualinvoke $r14.<org.spongycastle.asn1.x509.TBSCertificate: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        if $r15 == null goto label34;

        $r16 = virtualinvoke $r15.<org.spongycastle.asn1.x509.Extensions: java.util.Enumeration oids()>();

        $z0 = interfaceinvoke $r16.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label05;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("       Extensions: \n");

     label05:
        $z0 = interfaceinvoke $r16.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label34;

        $r17 = interfaceinvoke $r16.<java.util.Enumeration: java.lang.Object nextElement()>();

        r18 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r17;

        $r19 = virtualinvoke $r15.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>(r18);

        $r20 = virtualinvoke $r19.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1OctetString getExtnValue()>();

        if $r20 == null goto label33;

        $r20 = virtualinvoke $r19.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1OctetString getExtnValue()>();

        $r11 = virtualinvoke $r20.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r2 = new org.spongycastle.asn1.ASN1InputStream;

        specialinvoke r2.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r11);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("                       critical(");

        $z0 = virtualinvoke $r19.<org.spongycastle.asn1.x509.Extension: boolean isCritical()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") ");

        $r21 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier basicConstraints>;

     label06:
        $z0 = virtualinvoke r18.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r21);

     label07:
        if $z0 == 0 goto label11;

     label08:
        $r22 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r23 = staticinvoke <org.spongycastle.asn1.x509.BasicConstraints: org.spongycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r22);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r23);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label09:
        goto label05;

     label10:
        r3 := @caughtexception;

        $r10 = virtualinvoke r18.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" value = ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("*****");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label05;

     label11:
        $r21 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier keyUsage>;

     label12:
        $z0 = virtualinvoke r18.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r21);

     label13:
        if $z0 == 0 goto label16;

     label14:
        $r22 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r24 = staticinvoke <org.spongycastle.asn1.x509.KeyUsage: org.spongycastle.asn1.x509.KeyUsage getInstance(java.lang.Object)>($r22);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r24);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label15:
        goto label05;

     label16:
        $r21 = <org.spongycastle.asn1.misc.MiscObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier netscapeCertType>;

     label17:
        $z0 = virtualinvoke r18.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r21);

     label18:
        if $z0 == 0 goto label21;

        $r25 = new org.spongycastle.asn1.misc.NetscapeCertType;

     label19:
        $r22 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r26 = (org.spongycastle.asn1.DERBitString) $r22;

        specialinvoke $r25.<org.spongycastle.asn1.misc.NetscapeCertType: void <init>(org.spongycastle.asn1.DERBitString)>($r26);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r25);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label20:
        goto label05;

     label21:
        $r21 = <org.spongycastle.asn1.misc.MiscObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier netscapeRevocationURL>;

     label22:
        $z0 = virtualinvoke r18.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r21);

     label23:
        if $z0 == 0 goto label26;

        $r27 = new org.spongycastle.asn1.misc.NetscapeRevocationURL;

     label24:
        $r22 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r28 = (org.spongycastle.asn1.DERIA5String) $r22;

        specialinvoke $r27.<org.spongycastle.asn1.misc.NetscapeRevocationURL: void <init>(org.spongycastle.asn1.DERIA5String)>($r28);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r27);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label25:
        goto label05;

     label26:
        $r21 = <org.spongycastle.asn1.misc.MiscObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier verisignCzagExtension>;

     label27:
        $z0 = virtualinvoke r18.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r21);

     label28:
        if $z0 == 0 goto label31;

        $r29 = new org.spongycastle.asn1.misc.VerisignCzagExtension;

     label29:
        $r22 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r28 = (org.spongycastle.asn1.DERIA5String) $r22;

        specialinvoke $r29.<org.spongycastle.asn1.misc.VerisignCzagExtension: void <init>(org.spongycastle.asn1.DERIA5String)>($r28);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r29);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label30:
        goto label05;

     label31:
        $r10 = virtualinvoke r18.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" value = ");

        $r22 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r10 = staticinvoke <org.spongycastle.asn1.util.ASN1Dump: java.lang.String dumpAsString(java.lang.Object)>($r22);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label32:
        goto label05;

     label33:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label05;

     label34:
        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;

        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label12 to label13 with label10;
        catch java.lang.Exception from label14 to label15 with label10;
        catch java.lang.Exception from label17 to label18 with label10;
        catch java.lang.Exception from label19 to label20 with label10;
        catch java.lang.Exception from label22 to label23 with label10;
        catch java.lang.Exception from label24 to label25 with label10;
        catch java.lang.Exception from label27 to label28 with label10;
        catch java.lang.Exception from label29 to label30 with label10;
        catch java.lang.Exception from label31 to label32 with label10;
    }
    public final void verify(java.security.PublicKey) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.security.PublicKey $r1;
        java.lang.Exception r2;
        org.spongycastle.asn1.x509.Certificate $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        java.lang.String $r5;
        java.security.Signature $r6;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 := @parameter0: java.security.PublicKey;

        $r3 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r5 = staticinvoke <org.spongycastle.jce.provider.X509SignatureUtil: java.lang.String getSignatureName(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r4);

     label1:
        $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r5, "SC");

     label2:
        specialinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>($r1, $r6);

        return;

     label3:
        r2 := @caughtexception;

        $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5);

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public final void verify(java.security.PublicKey, java.lang.String) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.security.PublicKey $r1;
        java.lang.String $r2, $r5;
        org.spongycastle.asn1.x509.Certificate $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        java.security.Signature $r6;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 := @parameter0: java.security.PublicKey;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r5 = staticinvoke <org.spongycastle.jce.provider.X509SignatureUtil: java.lang.String getSignatureName(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r4);

        if $r2 == null goto label2;

        $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r5, $r2);

     label1:
        specialinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>($r1, $r6);

        return;

     label2:
        $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5);

        goto label1;
    }
    public final void verify(java.security.PublicKey, java.security.Provider) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.SignatureException
    {
        org.spongycastle.jce.provider.X509CertificateObject r0;
        java.security.PublicKey $r1;
        java.security.Provider $r2;
        org.spongycastle.asn1.x509.Certificate $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        java.lang.String $r5;
        java.security.Signature $r6;

        r0 := @this: org.spongycastle.jce.provider.X509CertificateObject;

        $r1 := @parameter0: java.security.PublicKey;

        $r2 := @parameter1: java.security.Provider;

        $r3 = r0.<org.spongycastle.jce.provider.X509CertificateObject: org.spongycastle.asn1.x509.Certificate c>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r5 = staticinvoke <org.spongycastle.jce.provider.X509SignatureUtil: java.lang.String getSignatureName(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r4);

        if $r2 == null goto label2;

        $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r5, $r2);

     label1:
        specialinvoke r0.<org.spongycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>($r1, $r6);

        return;

     label2:
        $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5);

        goto label1;
    }
