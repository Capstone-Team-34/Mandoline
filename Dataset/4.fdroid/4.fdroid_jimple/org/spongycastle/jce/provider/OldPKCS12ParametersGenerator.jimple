org.spongycastle.jce.provider.OldPKCS12ParametersGenerator extends org.spongycastle.crypto.PBEParametersGenerator
public static final int IV_MATERIAL
public static final int KEY_MATERIAL
public static final int MAC_MATERIAL
private org.spongycastle.crypto.Digest digest
private int u
private int v
    public void <init>(org.spongycastle.crypto.Digest)
    {
        org.spongycastle.jce.provider.OldPKCS12ParametersGenerator r0;
        org.spongycastle.crypto.Digest $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: org.spongycastle.jce.provider.OldPKCS12ParametersGenerator;

        $r1 := @parameter0: org.spongycastle.crypto.Digest;

        specialinvoke r0.<org.spongycastle.crypto.PBEParametersGenerator: void <init>()>();

        r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: org.spongycastle.crypto.Digest digest> = $r1;

        $z0 = $r1 instanceof org.spongycastle.crypto.digests.MD5Digest;

        if $z0 == 0 goto label1;

        r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int u> = 16;

        r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int v> = 64;

        return;

     label1:
        $z0 = $r1 instanceof org.spongycastle.crypto.digests.SHA1Digest;

        if $z0 == 0 goto label2;

        r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int u> = 20;

        r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int v> = 64;

        return;

     label2:
        $z0 = $r1 instanceof org.spongycastle.crypto.digests.RIPEMD160Digest;

        if $z0 == 0 goto label3;

        r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int u> = 20;

        r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int v> = 64;

        return;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Digest ");

        $r4 = interfaceinvoke $r1.<org.spongycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unsupported");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }
    private void adjust(byte[], int, byte[])
    {
        org.spongycastle.jce.provider.OldPKCS12ParametersGenerator r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i3, $i4, $i5;
        byte $b2;

        r0 := @this: org.spongycastle.jce.provider.OldPKCS12ParametersGenerator;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 = lengthof $r2;

        $i1 = $i1 + -1;

        $b2 = $r2[$i1];

        $i1 = $b2 & 255;

        $i3 = lengthof $r2;

        $i3 = $i3 + $i0;

        $i3 = $i3 + -1;

        $b2 = $r1[$i3];

        $i3 = $b2 & 255;

        $i1 = $i1 + $i3;

        $i1 = $i1 + 1;

        $i3 = lengthof $r2;

        $i3 = $i3 + $i0;

        $i3 = $i3 + -1;

        $b2 = (byte) $i1;

        $r1[$i3] = $b2;

        $i3 = $i1 >>> 8;

        $i1 = lengthof $r2;

        $i1 = $i1 + -2;

     label1:
        if $i1 < 0 goto label2;

        $b2 = $r2[$i1];

        $i4 = $b2 & 255;

        $i5 = $i0 + $i1;

        $b2 = $r1[$i5];

        $i5 = $b2 & 255;

        $i4 = $i4 + $i5;

        $i3 = $i3 + $i4;

        $i4 = $i0 + $i1;

        $b2 = (byte) $i3;

        $r1[$i4] = $b2;

        $i3 = $i3 >>> 8;

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return;
    }
    private byte[] generateDerivedKey(int, int)
    {
        org.spongycastle.jce.provider.OldPKCS12ParametersGenerator r0;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        byte[] r1, r2, r3, r4, r5, $r6;
        byte $b5;
        org.spongycastle.crypto.Digest $r7;

        r0 := @this: org.spongycastle.jce.provider.OldPKCS12ParametersGenerator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int v>;

        r3 = newarray (byte)[$i3];

        r5 = newarray (byte)[$i1];

        $i3 = 0;

     label01:
        $i4 = lengthof r3;

        if $i3 == $i4 goto label02;

        $b5 = (byte) $i0;

        r3[$i3] = $b5;

        $i3 = $i3 + 1;

        goto label01;

     label02:
        r1 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] salt>;

        if r1 == null goto label04;

        r1 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] salt>;

        $i0 = lengthof r1;

        if $i0 == 0 goto label04;

        $i0 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int v>;

        r1 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] salt>;

        $i3 = lengthof r1;

        $i4 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int v>;

        $i3 = $i3 + $i4;

        $i3 = $i3 + -1;

        $i4 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int v>;

        $i3 = $i3 / $i4;

        $i0 = $i0 * $i3;

        r1 = newarray (byte)[$i0];

        $i0 = 0;

     label03:
        $i3 = lengthof r1;

        if $i0 == $i3 goto label05;

        r4 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] salt>;

        r2 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] salt>;

        $i3 = lengthof r2;

        $i3 = $i0 % $i3;

        $b5 = r4[$i3];

        r1[$i0] = $b5;

        $i0 = $i0 + 1;

        goto label03;

     label04:
        r1 = newarray (byte)[0];

     label05:
        r4 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] password>;

        if r4 == null goto label07;

        r4 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] password>;

        $i0 = lengthof r4;

        if $i0 == 0 goto label07;

        $i0 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int v>;

        r4 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] password>;

        $i3 = lengthof r4;

        $i4 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int v>;

        $i3 = $i3 + $i4;

        $i3 = $i3 + -1;

        $i4 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int v>;

        $i3 = $i3 / $i4;

        $i0 = $i0 * $i3;

        r2 = newarray (byte)[$i0];

        $i0 = 0;

     label06:
        $i3 = lengthof r2;

        if $i0 == $i3 goto label08;

        r4 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] password>;

        $r6 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] password>;

        $i3 = lengthof $r6;

        $i3 = $i0 % $i3;

        $b5 = r4[$i3];

        r2[$i0] = $b5;

        $i0 = $i0 + 1;

        goto label06;

     label07:
        r2 = newarray (byte)[0];

     label08:
        $i0 = lengthof r1;

        $i3 = lengthof r2;

        $i0 = $i0 + $i3;

        r4 = newarray (byte)[$i0];

        $i0 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r4, 0, $i0);

        $i0 = lengthof r1;

        $i3 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, $i0, $i3);

        $i0 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int v>;

        r2 = newarray (byte)[$i0];

        $i0 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int u>;

        $i0 = $i0 + $i1;

        $i0 = $i0 + -1;

        $i1 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int u>;

        $i0 = $i0 / $i1;

        $i1 = 1;

     label09:
        if $i1 > $i0 goto label18;

        $i3 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int u>;

        r1 = newarray (byte)[$i3];

        $r7 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: org.spongycastle.crypto.Digest digest>;

        $i3 = lengthof r3;

        interfaceinvoke $r7.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i3);

        $r7 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: org.spongycastle.crypto.Digest digest>;

        $i3 = lengthof r4;

        interfaceinvoke $r7.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>(r4, 0, $i3);

        $r7 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: org.spongycastle.crypto.Digest digest>;

        interfaceinvoke $r7.<org.spongycastle.crypto.Digest: int doFinal(byte[],int)>(r1, 0);

        $i3 = 1;

     label10:
        $i4 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int iterationCount>;

        if $i3 == $i4 goto label11;

        $r7 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: org.spongycastle.crypto.Digest digest>;

        $i4 = lengthof r1;

        interfaceinvoke $r7.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>(r1, 0, $i4);

        $r7 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: org.spongycastle.crypto.Digest digest>;

        interfaceinvoke $r7.<org.spongycastle.crypto.Digest: int doFinal(byte[],int)>(r1, 0);

        $i3 = $i3 + 1;

        goto label10;

     label11:
        $i3 = 0;

     label12:
        $i4 = lengthof r2;

        if $i3 == $i4 goto label13;

        $i4 = lengthof r1;

        $i4 = $i3 % $i4;

        $b5 = r1[$i4];

        r2[$i1] = $b5;

        $i3 = $i3 + 1;

        goto label12;

     label13:
        $i3 = 0;

     label14:
        $i4 = lengthof r4;

        $i2 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int v>;

        $i4 = $i4 / $i2;

        if $i3 == $i4 goto label15;

        $i4 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int v>;

        $i4 = $i4 * $i3;

        specialinvoke r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: void adjust(byte[],int,byte[])>(r4, $i4, r2);

        $i3 = $i3 + 1;

        goto label14;

     label15:
        if $i1 != $i0 goto label17;

        $i3 = $i1 + -1;

        $i4 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int u>;

        $i3 = $i3 * $i4;

        $i4 = lengthof r5;

        $i6 = $i1 + -1;

        $i2 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int u>;

        $i2 = $i6 * $i2;

        $i4 = $i4 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r5, $i3, $i4);

     label16:
        $i1 = $i1 + 1;

        goto label09;

     label17:
        $i3 = $i1 + -1;

        $i4 = r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: int u>;

        $i3 = $i3 * $i4;

        $i4 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r5, $i3, $i4);

        goto label16;

     label18:
        return r5;
    }
    public org.spongycastle.crypto.CipherParameters generateDerivedMacParameters(int)
    {
        org.spongycastle.jce.provider.OldPKCS12ParametersGenerator r0;
        byte[] $r1;
        int $i0;
        org.spongycastle.crypto.params.KeyParameter $r2;

        r0 := @this: org.spongycastle.jce.provider.OldPKCS12ParametersGenerator;

        $i0 := @parameter0: int;

        $i0 = $i0 / 8;

        $r1 = specialinvoke r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] generateDerivedKey(int,int)>(3, $i0);

        $r2 = new org.spongycastle.crypto.params.KeyParameter;

        specialinvoke $r2.<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r1, 0, $i0);

        return $r2;
    }
    public org.spongycastle.crypto.CipherParameters generateDerivedParameters(int)
    {
        org.spongycastle.jce.provider.OldPKCS12ParametersGenerator r0;
        byte[] $r1;
        int $i0;
        org.spongycastle.crypto.params.KeyParameter $r2;

        r0 := @this: org.spongycastle.jce.provider.OldPKCS12ParametersGenerator;

        $i0 := @parameter0: int;

        $i0 = $i0 / 8;

        $r1 = specialinvoke r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] generateDerivedKey(int,int)>(1, $i0);

        $r2 = new org.spongycastle.crypto.params.KeyParameter;

        specialinvoke $r2.<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r1, 0, $i0);

        return $r2;
    }
    public org.spongycastle.crypto.CipherParameters generateDerivedParameters(int, int)
    {
        org.spongycastle.jce.provider.OldPKCS12ParametersGenerator r0;
        org.spongycastle.crypto.params.KeyParameter $r1;
        int $i0, $i1;
        byte[] $r2, $r3;
        org.spongycastle.crypto.params.ParametersWithIV $r4;

        r0 := @this: org.spongycastle.jce.provider.OldPKCS12ParametersGenerator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i0 / 8;

        $i1 = $i1 / 8;

        $r2 = specialinvoke r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] generateDerivedKey(int,int)>(1, $i0);

        $r3 = specialinvoke r0.<org.spongycastle.jce.provider.OldPKCS12ParametersGenerator: byte[] generateDerivedKey(int,int)>(2, $i1);

        $r4 = new org.spongycastle.crypto.params.ParametersWithIV;

        $r1 = new org.spongycastle.crypto.params.KeyParameter;

        specialinvoke $r1.<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r2, 0, $i0);

        specialinvoke $r4.<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[],int,int)>($r1, $r3, 0, $i1);

        return $r4;
    }
