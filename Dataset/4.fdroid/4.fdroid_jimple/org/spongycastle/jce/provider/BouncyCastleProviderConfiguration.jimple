org.spongycastle.jce.provider.BouncyCastleProviderConfiguration extends java.lang.Object implements org.spongycastle.jcajce.provider.config.ProviderConfiguration
private static java.security.Permission BC_DH_LOCAL_PERMISSION
private static java.security.Permission BC_DH_PERMISSION
private static java.security.Permission BC_EC_LOCAL_PERMISSION
private static java.security.Permission BC_EC_PERMISSION
private volatile java.lang.Object dhDefaultParams
private java.lang.ThreadLocal dhThreadSpec
private volatile org.spongycastle.jce.spec.ECParameterSpec ecImplicitCaParams
private java.lang.ThreadLocal ecThreadSpec
    static void <clinit>()
    {
        org.spongycastle.jcajce.provider.config.ProviderConfigurationPermission $r0;

        $r0 = new org.spongycastle.jcajce.provider.config.ProviderConfigurationPermission;

        specialinvoke $r0.<org.spongycastle.jcajce.provider.config.ProviderConfigurationPermission: void <init>(java.lang.String,java.lang.String)>("SC", "threadLocalEcImplicitlyCa");

        <org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.security.Permission BC_EC_LOCAL_PERMISSION> = $r0;

        $r0 = new org.spongycastle.jcajce.provider.config.ProviderConfigurationPermission;

        specialinvoke $r0.<org.spongycastle.jcajce.provider.config.ProviderConfigurationPermission: void <init>(java.lang.String,java.lang.String)>("SC", "ecImplicitlyCa");

        <org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.security.Permission BC_EC_PERMISSION> = $r0;

        $r0 = new org.spongycastle.jcajce.provider.config.ProviderConfigurationPermission;

        specialinvoke $r0.<org.spongycastle.jcajce.provider.config.ProviderConfigurationPermission: void <init>(java.lang.String,java.lang.String)>("SC", "threadLocalDhDefaultParams");

        <org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.security.Permission BC_DH_LOCAL_PERMISSION> = $r0;

        $r0 = new org.spongycastle.jcajce.provider.config.ProviderConfigurationPermission;

        specialinvoke $r0.<org.spongycastle.jcajce.provider.config.ProviderConfigurationPermission: void <init>(java.lang.String,java.lang.String)>("SC", "DhDefaultParams");

        <org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.security.Permission BC_DH_PERMISSION> = $r0;

        return;
    }
    void <init>()
    {
        org.spongycastle.jce.provider.BouncyCastleProviderConfiguration r0;
        java.lang.ThreadLocal $r1;

        r0 := @this: org.spongycastle.jce.provider.BouncyCastleProviderConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.lang.ThreadLocal ecThreadSpec> = $r1;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.lang.ThreadLocal dhThreadSpec> = $r1;

        return;
    }
    public javax.crypto.spec.DHParameterSpec getDHDefaultParameters(int)
    {
        org.spongycastle.jce.provider.BouncyCastleProviderConfiguration r0;
        int $i0, $i1, $i2;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2, r3;
        boolean $z0;
        javax.crypto.spec.DHParameterSpec r4;
        java.math.BigInteger $r5;
        javax.crypto.spec.DHParameterSpec[] r6;

        r0 := @this: org.spongycastle.jce.provider.BouncyCastleProviderConfiguration;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.lang.ThreadLocal dhThreadSpec>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = $r2;

        if $r2 != null goto label1;

        r3 = r0.<org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.lang.Object dhDefaultParams>;

     label1:
        $z0 = r3 instanceof javax.crypto.spec.DHParameterSpec;

        if $z0 == 0 goto label2;

        r4 = (javax.crypto.spec.DHParameterSpec) r3;

        $r5 = virtualinvoke r4.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $i1 = virtualinvoke $r5.<java.math.BigInteger: int bitLength()>();

        if $i1 != $i0 goto label5;

        return r4;

     label2:
        $z0 = r3 instanceof javax.crypto.spec.DHParameterSpec[];

        if $z0 == 0 goto label5;

        r6 = (javax.crypto.spec.DHParameterSpec[]) r3;

        $i1 = 0;

     label3:
        $i2 = lengthof r6;

        if $i1 == $i2 goto label5;

        r4 = r6[$i1];

        $r5 = virtualinvoke r4.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $i2 = virtualinvoke $r5.<java.math.BigInteger: int bitLength()>();

        if $i2 != $i0 goto label4;

        r4 = r6[$i1];

        return r4;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        return null;
    }
    public org.spongycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()
    {
        org.spongycastle.jce.provider.BouncyCastleProviderConfiguration r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        org.spongycastle.jce.spec.ECParameterSpec r3;

        r0 := @this: org.spongycastle.jce.provider.BouncyCastleProviderConfiguration;

        $r1 = r0.<org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.lang.ThreadLocal ecThreadSpec>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (org.spongycastle.jce.spec.ECParameterSpec) $r2;

        if r3 == null goto label1;

        return r3;

     label1:
        r3 = r0.<org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: org.spongycastle.jce.spec.ECParameterSpec ecImplicitCaParams>;

        return r3;
    }
    void setParameter(java.lang.String, java.lang.Object)
    {
        org.spongycastle.jce.provider.BouncyCastleProviderConfiguration r0;
        java.lang.String $r1;
        java.lang.Object r2;
        java.lang.SecurityManager $r3;
        boolean $z0;
        java.security.Permission $r4;
        org.spongycastle.jce.spec.ECParameterSpec r5;
        java.lang.ThreadLocal $r6;
        java.security.spec.ECParameterSpec r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: org.spongycastle.jce.provider.BouncyCastleProviderConfiguration;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("threadLocalEcImplicitlyCa");

        if $z0 == 0 goto label06;

        if $r3 == null goto label01;

        $r4 = <org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.security.Permission BC_EC_LOCAL_PERMISSION>;

        virtualinvoke $r3.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r4);

     label01:
        $z0 = r2 instanceof org.spongycastle.jce.spec.ECParameterSpec;

        if $z0 != 0 goto label02;

        if r2 != null goto label04;

     label02:
        r5 = (org.spongycastle.jce.spec.ECParameterSpec) r2;

     label03:
        if r5 != null goto label05;

        $r6 = r0.<org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.lang.ThreadLocal ecThreadSpec>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void remove()>();

        return;

     label04:
        r7 = (java.security.spec.ECParameterSpec) r2;

        r5 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.jce.spec.ECParameterSpec convertSpec(java.security.spec.ECParameterSpec,boolean)>(r7, 0);

        goto label03;

     label05:
        $r6 = r0.<org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.lang.ThreadLocal ecThreadSpec>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>(r5);

        return;

     label06:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ecImplicitlyCa");

        if $z0 == 0 goto label10;

        if $r3 == null goto label07;

        $r4 = <org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.security.Permission BC_EC_PERMISSION>;

        virtualinvoke $r3.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r4);

     label07:
        $z0 = r2 instanceof org.spongycastle.jce.spec.ECParameterSpec;

        if $z0 != 0 goto label08;

        if r2 != null goto label09;

     label08:
        r5 = (org.spongycastle.jce.spec.ECParameterSpec) r2;

        r0.<org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: org.spongycastle.jce.spec.ECParameterSpec ecImplicitCaParams> = r5;

        return;

     label09:
        r7 = (java.security.spec.ECParameterSpec) r2;

        r5 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.jce.spec.ECParameterSpec convertSpec(java.security.spec.ECParameterSpec,boolean)>(r7, 0);

        r0.<org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: org.spongycastle.jce.spec.ECParameterSpec ecImplicitCaParams> = r5;

        return;

     label10:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("threadLocalDhDefaultParams");

        if $z0 == 0 goto label15;

        if $r3 == null goto label11;

        $r4 = <org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.security.Permission BC_DH_LOCAL_PERMISSION>;

        virtualinvoke $r3.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r4);

     label11:
        $z0 = r2 instanceof javax.crypto.spec.DHParameterSpec;

        if $z0 != 0 goto label12;

        $z0 = r2 instanceof javax.crypto.spec.DHParameterSpec[];

        if $z0 != 0 goto label12;

        if r2 != null goto label13;

     label12:
        if r2 != null goto label14;

        $r6 = r0.<org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.lang.ThreadLocal dhThreadSpec>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void remove()>();

        return;

     label13:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("not a valid DHParameterSpec");

        throw $r8;

     label14:
        $r6 = r0.<org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.lang.ThreadLocal dhThreadSpec>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>(r2);

        return;

     label15:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("DhDefaultParams");

        if $z0 == 0 goto label19;

        if $r3 == null goto label16;

        $r4 = <org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.security.Permission BC_DH_PERMISSION>;

        virtualinvoke $r3.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r4);

     label16:
        $z0 = r2 instanceof javax.crypto.spec.DHParameterSpec;

        if $z0 != 0 goto label17;

        $z0 = r2 instanceof javax.crypto.spec.DHParameterSpec[];

        if $z0 != 0 goto label17;

        if r2 != null goto label18;

     label17:
        r0.<org.spongycastle.jce.provider.BouncyCastleProviderConfiguration: java.lang.Object dhDefaultParams> = r2;

        return;

     label18:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("not a valid DHParameterSpec or DHParameterSpec[]");

        throw $r8;

     label19:
        return;
    }
