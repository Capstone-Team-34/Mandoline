org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi extends java.security.cert.CertPathBuilderSpi
private java.lang.Exception certPathException
    public void <init>()
    {
        org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi r0;

        r0 := @this: org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi;

        specialinvoke r0.<java.security.cert.CertPathBuilderSpi: void <init>()>();

        return;
    }
    private java.security.cert.CertPathBuilderResult build(org.spongycastle.x509.X509AttributeCertificate, java.security.cert.X509Certificate, org.spongycastle.jcajce.PKIXExtendedBuilderParameters, java.util.List)
    {
        org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi r0;
        org.spongycastle.x509.X509AttributeCertificate $r1;
        java.security.cert.X509Certificate $r2, r34;
        org.spongycastle.jcajce.PKIXExtendedBuilderParameters $r3;
        java.util.List $r4, $r26;
        java.util.HashSet r5;
        java.util.ArrayList r6;
        boolean $z0;
        java.util.Set $r7;
        int $i0, $i1;
        java.security.cert.CertPathBuilderResult r8, $r37;
        java.security.cert.CertificateFactory $r9;
        java.security.cert.CertPathValidator $r10;
        org.spongycastle.jcajce.PKIXExtendedParameters $r11;
        java.lang.String $r12;
        java.security.cert.TrustAnchor $r13;
        java.security.cert.CertPath $r14;
        java.security.cert.CertPathValidatorResult $r15;
        java.security.cert.PKIXCertPathValidatorResult r16;
        java.security.cert.PKIXCertPathBuilderResult $r17;
        java.security.cert.PolicyNode $r18;
        java.security.PublicKey $r19;
        java.lang.Exception r20, r22, r25;
        java.lang.RuntimeException $r21;
        org.spongycastle.jce.provider.AnnotatedException $r23, $r24;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r27;
        byte[] $r28;
        java.util.Map $r29;
        java.util.Collection $r30;
        java.security.cert.CertificateParsingException r31;
        java.util.Iterator $r32;
        java.lang.Object $r33;
        javax.security.auth.x500.X500Principal $r35, $r36;

        r0 := @this: org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi;

        $r1 := @parameter0: org.spongycastle.x509.X509AttributeCertificate;

        $r2 := @parameter1: java.security.cert.X509Certificate;

        $r3 := @parameter2: org.spongycastle.jcajce.PKIXExtendedBuilderParameters;

        $r4 := @parameter3: java.util.List;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label01;

        return null;

     label01:
        $r7 = virtualinvoke $r3.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters: java.util.Set getExcludedCerts()>();

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label02;

        return null;

     label02:
        $i0 = virtualinvoke $r3.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters: int getMaxPathLength()>();

        if $i0 == -1 goto label03;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $i1 = virtualinvoke $r3.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters: int getMaxPathLength()>();

        if $i0 <= $i1 goto label03;

        return null;

     label03:
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);

        r8 = null;

     label04:
        $r9 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>("X.509", "SC");

        $r10 = staticinvoke <java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.lang.String)>("RFC3281", "SC");

     label05:
        $r11 = virtualinvoke $r3.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters: org.spongycastle.jcajce.PKIXExtendedParameters getBaseParameters()>();

        $r7 = virtualinvoke $r11.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.Set getTrustAnchors()>();

        $r11 = virtualinvoke $r3.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters: org.spongycastle.jcajce.PKIXExtendedParameters getBaseParameters()>();

        $r12 = virtualinvoke $r11.<org.spongycastle.jcajce.PKIXExtendedParameters: java.lang.String getSigProvider()>();

        $r13 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set,java.lang.String)>($r2, $r7, $r12);

     label06:
        if $r13 == null goto label19;

     label07:
        $r14 = virtualinvoke $r9.<java.security.cert.CertificateFactory: java.security.cert.CertPath generateCertPath(java.util.List)>($r4);

     label08:
        $r15 = virtualinvoke $r10.<java.security.cert.CertPathValidator: java.security.cert.CertPathValidatorResult validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)>($r14, $r3);

        r16 = (java.security.cert.PKIXCertPathValidatorResult) $r15;

     label09:
        $r17 = new java.security.cert.PKIXCertPathBuilderResult;

     label10:
        $r13 = virtualinvoke r16.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor getTrustAnchor()>();

        $r18 = virtualinvoke r16.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode getPolicyTree()>();

        $r19 = virtualinvoke r16.<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey getPublicKey()>();

        specialinvoke $r17.<java.security.cert.PKIXCertPathBuilderResult: void <init>(java.security.cert.CertPath,java.security.cert.TrustAnchor,java.security.cert.PolicyNode,java.security.PublicKey)>($r14, $r13, $r18, $r19);

     label11:
        return $r17;

     label12:
        r20 := @caughtexception;

        $r21 = new java.lang.RuntimeException;

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>("Exception creating support classes.");

        throw $r21;

     label13:
        r22 := @caughtexception;

        $r23 = new org.spongycastle.jce.provider.AnnotatedException;

     label14:
        specialinvoke $r23.<org.spongycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Certification path could not be constructed from certificate list.", r22);

        throw $r23;

     label15:
        $r23 := @caughtexception;

        $r24 = new org.spongycastle.jce.provider.AnnotatedException;

        specialinvoke $r24.<org.spongycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No valid certification path could be build.", $r23);

        r0.<org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi: java.lang.Exception certPathException> = $r24;

     label16:
        if r8 != null goto label42;

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>($r2);

        return r8;

     label17:
        r25 := @caughtexception;

        $r23 = new org.spongycastle.jce.provider.AnnotatedException;

     label18:
        specialinvoke $r23.<org.spongycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Certification path could not be validated.", r25);

        throw $r23;

     label19:
        r6 = new java.util.ArrayList;

     label20:
        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $r11 = virtualinvoke $r3.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters: org.spongycastle.jcajce.PKIXExtendedParameters getBaseParameters()>();

        $r26 = virtualinvoke $r11.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.List getCertificateStores()>();

        interfaceinvoke r6.<java.util.List: boolean addAll(java.util.Collection)>($r26);

     label21:
        $r27 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier issuerAlternativeName>;

     label22:
        $r12 = virtualinvoke $r27.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r28 = virtualinvoke $r2.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r12);

        $r11 = virtualinvoke $r3.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters: org.spongycastle.jcajce.PKIXExtendedParameters getBaseParameters()>();

        $r29 = virtualinvoke $r11.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.Map getNamedCertificateStoreMap()>();

        $r26 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: java.util.List getAdditionalStoresFromAltNames(byte[],java.util.Map)>($r28, $r29);

        interfaceinvoke r6.<java.util.List: boolean addAll(java.util.Collection)>($r26);

     label23:
        r5 = new java.util.HashSet;

     label24:
        specialinvoke r5.<java.util.HashSet: void <init>()>();

     label25:
        $r11 = virtualinvoke $r3.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters: org.spongycastle.jcajce.PKIXExtendedParameters getBaseParameters()>();

        $r26 = virtualinvoke $r11.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.List getCertStores()>();

        $r30 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findIssuerCerts(java.security.cert.X509Certificate,java.util.List,java.util.List)>($r2, $r26, r6);

        interfaceinvoke r5.<java.util.Collection: boolean addAll(java.util.Collection)>($r30);

     label26:
        $z0 = interfaceinvoke r5.<java.util.Collection: boolean isEmpty()>();

     label27:
        if $z0 == 0 goto label33;

        $r23 = new org.spongycastle.jce.provider.AnnotatedException;

     label28:
        specialinvoke $r23.<org.spongycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("No issuer certificate for certificate in certification path found.");

        throw $r23;

     label29:
        r31 := @caughtexception;

        $r23 = new org.spongycastle.jce.provider.AnnotatedException;

     label30:
        specialinvoke $r23.<org.spongycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No additional X.509 stores can be added from certificate locations.", r31);

        throw $r23;

     label31:
        $r24 := @caughtexception;

        $r23 = new org.spongycastle.jce.provider.AnnotatedException;

     label32:
        specialinvoke $r23.<org.spongycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot find issuer certificate for certificate in certification path.", $r24);

        throw $r23;

     label33:
        $r32 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>();

     label34:
        $z0 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

     label35:
        if $z0 == 0 goto label16;

        if r8 != null goto label16;

     label36:
        $r33 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

     label37:
        r34 = (java.security.cert.X509Certificate) $r33;

     label38:
        $r35 = virtualinvoke r34.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r36 = virtualinvoke r34.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $z0 = virtualinvoke $r35.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r36);

     label39:
        if $z0 != 0 goto label34;

     label40:
        $r37 = specialinvoke r0.<org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi: java.security.cert.CertPathBuilderResult build(org.spongycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.spongycastle.jcajce.PKIXExtendedBuilderParameters,java.util.List)>($r1, r34, $r3, $r4);

     label41:
        r8 = $r37;

        goto label34;

     label42:
        return r8;

        catch java.lang.Exception from label04 to label05 with label12;
        catch org.spongycastle.jce.provider.AnnotatedException from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label08 to label09 with label17;
        catch org.spongycastle.jce.provider.AnnotatedException from label10 to label11 with label15;
        catch org.spongycastle.jce.provider.AnnotatedException from label14 to label15 with label15;
        catch org.spongycastle.jce.provider.AnnotatedException from label18 to label19 with label15;
        catch org.spongycastle.jce.provider.AnnotatedException from label20 to label21 with label15;
        catch java.security.cert.CertificateParsingException from label22 to label23 with label29;
        catch org.spongycastle.jce.provider.AnnotatedException from label22 to label23 with label15;
        catch org.spongycastle.jce.provider.AnnotatedException from label24 to label25 with label15;
        catch org.spongycastle.jce.provider.AnnotatedException from label25 to label26 with label31;
        catch org.spongycastle.jce.provider.AnnotatedException from label26 to label27 with label15;
        catch org.spongycastle.jce.provider.AnnotatedException from label28 to label29 with label15;
        catch org.spongycastle.jce.provider.AnnotatedException from label30 to label31 with label15;
        catch org.spongycastle.jce.provider.AnnotatedException from label32 to label35 with label15;
        catch org.spongycastle.jce.provider.AnnotatedException from label36 to label37 with label15;
        catch org.spongycastle.jce.provider.AnnotatedException from label38 to label39 with label15;
        catch org.spongycastle.jce.provider.AnnotatedException from label40 to label41 with label15;
    }
    protected static java.util.Collection findCertificates(org.spongycastle.x509.X509AttributeCertStoreSelector, java.util.List) throws org.spongycastle.jce.provider.AnnotatedException
    {
        org.spongycastle.x509.X509AttributeCertStoreSelector $r0;
        java.util.List $r1;
        java.util.HashSet r2;
        org.spongycastle.util.StoreException r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.util.Store r6;
        java.util.Collection $r7;
        org.spongycastle.jce.provider.AnnotatedException $r8;

        $r0 := @parameter0: org.spongycastle.x509.X509AttributeCertStoreSelector;

        $r1 := @parameter1: java.util.List;

        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $r4 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r5 instanceof org.spongycastle.util.Store;

        if $z0 == 0 goto label1;

        r6 = (org.spongycastle.util.Store) $r5;

     label2:
        $r7 = interfaceinvoke r6.<org.spongycastle.util.Store: java.util.Collection getMatches(org.spongycastle.util.Selector)>($r0);

        interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>($r7);

     label3:
        goto label1;

     label4:
        r3 := @caughtexception;

        $r8 = new org.spongycastle.jce.provider.AnnotatedException;

        specialinvoke $r8.<org.spongycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Problem while picking certificates from X.509 store.", r3);

        throw $r8;

     label5:
        return r2;

        catch org.spongycastle.util.StoreException from label2 to label3 with label4;
    }
    public java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters) throws java.security.cert.CertPathBuilderException, java.security.InvalidAlgorithmParameterException
    {
        org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi r0;
        java.security.cert.CertPathParameters $r1;
        java.util.ArrayList r2, $r37;
        boolean $z0;
        java.lang.StringBuilder $r6, $r34;
        java.lang.Class $r7;
        java.lang.String $r8;
        java.lang.Object r9;
        java.security.cert.PKIXBuilderParameters $r10;
        org.spongycastle.x509.ExtendedPKIXBuilderParameters r11;
        java.util.Set $r12;
        int $i0, $i1;
        java.util.List $r13;
        org.spongycastle.jcajce.PKIXExtendedBuilderParameters $r14;
        org.spongycastle.jcajce.PKIXExtendedParameters $r15;
        org.spongycastle.jcajce.PKIXCertStoreSelector $r16;
        org.spongycastle.x509.X509AttributeCertStoreSelector r17;
        java.util.Collection $r18;
        org.spongycastle.jce.provider.AnnotatedException r19, r29;
        java.security.cert.CertPathBuilderResult r20;
        java.util.Iterator $r21, $r31;
        org.spongycastle.x509.X509AttributeCertificate r22;
        org.spongycastle.x509.AttributeCertificateIssuer $r23;
        java.security.Principal[] $r24;
        java.security.Principal $r25;
        javax.security.auth.x500.X500Principal $r26;
        byte[] $r27;
        java.io.IOException r30;
        java.security.cert.X509Certificate $r32;
        java.lang.Exception $r33;
        java.security.InvalidAlgorithmParameterException $r35;
        org.spongycastle.jcajce.PKIXExtendedBuilderParameters$Builder $r36;
        java.security.cert.CertPathBuilderException $r38;
        org.spongycastle.jce.exception.ExtCertPathBuilderException $r39;
        org.spongycastle.x509.X509CertStoreSelector $r40;
        java.util.HashSet $r41;
        org.spongycastle.jcajce.PKIXCertStoreSelector$Builder $r42;

        r0 := @this: org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi;

        $r1 := @parameter0: java.security.cert.CertPathParameters;

        $z0 = $r1 instanceof java.security.cert.PKIXBuilderParameters;

        if $z0 != 0 goto label01;

        $z0 = $r1 instanceof org.spongycastle.x509.ExtendedPKIXBuilderParameters;

        if $z0 != 0 goto label01;

        $z0 = $r1 instanceof org.spongycastle.jcajce.PKIXExtendedBuilderParameters;

        if $z0 != 0 goto label01;

        $r35 = new java.security.InvalidAlgorithmParameterException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parameters must be an instance of ");

        $r7 = class "Ljava/security/cert/PKIXBuilderParameters;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        $r7 = class "Lorg/spongycastle/jcajce/PKIXExtendedBuilderParameters;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r8);

        throw $r35;

     label01:
        r2 = new java.util.ArrayList;

        r9 = r2;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $z0 = $r1 instanceof java.security.cert.PKIXBuilderParameters;

        if $z0 == 0 goto label04;

        $r36 = new org.spongycastle.jcajce.PKIXExtendedBuilderParameters$Builder;

        $r10 = (java.security.cert.PKIXBuilderParameters) $r1;

        specialinvoke $r36.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters$Builder: void <init>(java.security.cert.PKIXBuilderParameters)>($r10);

        $z0 = $r1 instanceof org.spongycastle.x509.ExtendedPKIXParameters;

        if $z0 == 0 goto label02;

        r11 = (org.spongycastle.x509.ExtendedPKIXBuilderParameters) $r1;

        $r12 = virtualinvoke r11.<org.spongycastle.x509.ExtendedPKIXBuilderParameters: java.util.Set getExcludedCerts()>();

        virtualinvoke $r36.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters$Builder: org.spongycastle.jcajce.PKIXExtendedBuilderParameters$Builder addExcludedCerts(java.util.Set)>($r12);

        $i0 = virtualinvoke r11.<org.spongycastle.x509.ExtendedPKIXBuilderParameters: int getMaxPathLength()>();

        virtualinvoke $r36.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters$Builder: org.spongycastle.jcajce.PKIXExtendedBuilderParameters$Builder setMaxPathLength(int)>($i0);

        r9 = virtualinvoke r11.<org.spongycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getStores()>();

     label02:
        $r14 = virtualinvoke $r36.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters$Builder: org.spongycastle.jcajce.PKIXExtendedBuilderParameters build()>();

     label03:
        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>()>();

        $r15 = virtualinvoke $r14.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters: org.spongycastle.jcajce.PKIXExtendedParameters getBaseParameters()>();

        $r16 = virtualinvoke $r15.<org.spongycastle.jcajce.PKIXExtendedParameters: org.spongycastle.jcajce.PKIXCertStoreSelector getTargetConstraints()>();

        $z0 = $r16 instanceof org.spongycastle.x509.X509AttributeCertStoreSelector;

        if $z0 != 0 goto label05;

        $r38 = new java.security.cert.CertPathBuilderException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TargetConstraints must be an instance of ");

        $r7 = class "Lorg/spongycastle/x509/X509AttributeCertStoreSelector;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" class.");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.security.cert.CertPathBuilderException: void <init>(java.lang.String)>($r8);

        throw $r38;

     label04:
        $r14 = (org.spongycastle.jcajce.PKIXExtendedBuilderParameters) $r1;

        goto label03;

     label05:
        r17 = (org.spongycastle.x509.X509AttributeCertStoreSelector) $r16;

        $r13 = (java.util.List) r9;

     label06:
        $r18 = staticinvoke <org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi: java.util.Collection findCertificates(org.spongycastle.x509.X509AttributeCertStoreSelector,java.util.List)>(r17, $r13);

     label07:
        $z0 = interfaceinvoke $r18.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label09;

        $r38 = new java.security.cert.CertPathBuilderException;

        specialinvoke $r38.<java.security.cert.CertPathBuilderException: void <init>(java.lang.String)>("No attribute certificate found matching targetContraints.");

        throw $r38;

     label08:
        r19 := @caughtexception;

        $r39 = new org.spongycastle.jce.exception.ExtCertPathBuilderException;

        specialinvoke $r39.<org.spongycastle.jce.exception.ExtCertPathBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("Error finding target attribute certificate.", r19);

        throw $r39;

     label09:
        r20 = null;

        $r21 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label21;

        if r20 != null goto label21;

        r9 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.spongycastle.x509.X509AttributeCertificate) r9;

        $r40 = new org.spongycastle.x509.X509CertStoreSelector;

        specialinvoke $r40.<org.spongycastle.x509.X509CertStoreSelector: void <init>()>();

        $r23 = interfaceinvoke r22.<org.spongycastle.x509.X509AttributeCertificate: org.spongycastle.x509.AttributeCertificateIssuer getIssuer()>();

        $r24 = virtualinvoke $r23.<org.spongycastle.x509.AttributeCertificateIssuer: java.security.Principal[] getPrincipals()>();

        $r41 = new java.util.HashSet;

        specialinvoke $r41.<java.util.HashSet: void <init>()>();

        $i0 = 0;

     label11:
        $i1 = lengthof $r24;

        if $i0 >= $i1 goto label18;

        $r25 = $r24[$i0];

        $z0 = $r25 instanceof javax.security.auth.x500.X500Principal;

        if $z0 == 0 goto label13;

        $r25 = $r24[$i0];

        $r26 = (javax.security.auth.x500.X500Principal) $r25;

     label12:
        $r27 = virtualinvoke $r26.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r40.<org.spongycastle.x509.X509CertStoreSelector: void setSubject(byte[])>($r27);

     label13:
        $r42 = new org.spongycastle.jcajce.PKIXCertStoreSelector$Builder;

     label14:
        specialinvoke $r42.<org.spongycastle.jcajce.PKIXCertStoreSelector$Builder: void <init>(java.security.cert.CertSelector)>($r40);

        $r16 = virtualinvoke $r42.<org.spongycastle.jcajce.PKIXCertStoreSelector$Builder: org.spongycastle.jcajce.PKIXCertStoreSelector build()>();

        $r15 = virtualinvoke $r14.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters: org.spongycastle.jcajce.PKIXExtendedParameters getBaseParameters()>();

        $r13 = virtualinvoke $r15.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.List getCertStores()>();

        $r18 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.spongycastle.jcajce.PKIXCertStoreSelector,java.util.List)>($r16, $r13);

        interfaceinvoke $r41.<java.util.Set: boolean addAll(java.util.Collection)>($r18);

        $r15 = virtualinvoke $r14.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters: org.spongycastle.jcajce.PKIXExtendedParameters getBaseParameters()>();

        $r13 = virtualinvoke $r15.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.List getCertificateStores()>();

        $r18 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.spongycastle.jcajce.PKIXCertStoreSelector,java.util.List)>($r16, $r13);

        interfaceinvoke $r41.<java.util.Set: boolean addAll(java.util.Collection)>($r18);

     label15:
        $i0 = $i0 + 1;

        goto label11;

     label16:
        r29 := @caughtexception;

        $r39 = new org.spongycastle.jce.exception.ExtCertPathBuilderException;

        specialinvoke $r39.<org.spongycastle.jce.exception.ExtCertPathBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("Public key certificate for attribute certificate cannot be searched.", r29);

        throw $r39;

     label17:
        r30 := @caughtexception;

        $r39 = new org.spongycastle.jce.exception.ExtCertPathBuilderException;

        specialinvoke $r39.<org.spongycastle.jce.exception.ExtCertPathBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("cannot encode X500Principal.", r30);

        throw $r39;

     label18:
        $z0 = interfaceinvoke $r41.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label19;

        $r38 = new java.security.cert.CertPathBuilderException;

        specialinvoke $r38.<java.security.cert.CertPathBuilderException: void <init>(java.lang.String)>("Public key certificate for attribute certificate cannot be found.");

        throw $r38;

     label19:
        $r31 = interfaceinvoke $r41.<java.util.Set: java.util.Iterator iterator()>();

     label20:
        $z0 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        if r20 != null goto label10;

        r9 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        $r32 = (java.security.cert.X509Certificate) r9;

        r20 = specialinvoke r0.<org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi: java.security.cert.CertPathBuilderResult build(org.spongycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.spongycastle.jcajce.PKIXExtendedBuilderParameters,java.util.List)>(r22, $r32, $r14, $r37);

        goto label20;

     label21:
        if r20 != null goto label22;

        $r33 = r0.<org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi: java.lang.Exception certPathException>;

        if $r33 == null goto label22;

        $r39 = new org.spongycastle.jce.exception.ExtCertPathBuilderException;

        $r33 = r0.<org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi: java.lang.Exception certPathException>;

        specialinvoke $r39.<org.spongycastle.jce.exception.ExtCertPathBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("Possible certificate chain could not be validated.", $r33);

        throw $r39;

     label22:
        if r20 != null goto label23;

        $r33 = r0.<org.spongycastle.jce.provider.PKIXAttrCertPathBuilderSpi: java.lang.Exception certPathException>;

        if $r33 != null goto label23;

        $r38 = new java.security.cert.CertPathBuilderException;

        specialinvoke $r38.<java.security.cert.CertPathBuilderException: void <init>(java.lang.String)>("Unable to find certificate chain.");

        throw $r38;

     label23:
        return r20;

        catch org.spongycastle.jce.provider.AnnotatedException from label06 to label07 with label08;
        catch org.spongycastle.jce.provider.AnnotatedException from label12 to label13 with label16;
        catch org.spongycastle.jce.provider.AnnotatedException from label14 to label15 with label16;
        catch java.io.IOException from label12 to label13 with label17;
        catch java.io.IOException from label14 to label15 with label17;
    }
