org.spongycastle.jce.provider.JCEElGamalPublicKey extends java.lang.Object implements javax.crypto.interfaces.DHPublicKey org.spongycastle.jce.interfaces.ElGamalPublicKey
static final long serialVersionUID
private org.spongycastle.jce.spec.ElGamalParameterSpec elSpec
private java.math.BigInteger y
    void <init>(java.math.BigInteger, org.spongycastle.jce.spec.ElGamalParameterSpec)
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;
        java.math.BigInteger $r1;
        org.spongycastle.jce.spec.ElGamalParameterSpec $r2;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: org.spongycastle.jce.spec.ElGamalParameterSpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: java.math.BigInteger y> = $r1;

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec> = $r2;

        return;
    }
    void <init>(javax.crypto.interfaces.DHPublicKey)
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;
        javax.crypto.interfaces.DHPublicKey $r1;
        java.math.BigInteger $r2, $r5;
        org.spongycastle.jce.spec.ElGamalParameterSpec $r3;
        javax.crypto.spec.DHParameterSpec $r4;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        $r1 := @parameter0: javax.crypto.interfaces.DHPublicKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke $r1.<javax.crypto.interfaces.DHPublicKey: java.math.BigInteger getY()>();

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: java.math.BigInteger y> = $r2;

        $r3 = new org.spongycastle.jce.spec.ElGamalParameterSpec;

        $r4 = interfaceinvoke $r1.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r2 = virtualinvoke $r4.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r4 = interfaceinvoke $r1.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r5 = virtualinvoke $r4.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        specialinvoke $r3.<org.spongycastle.jce.spec.ElGamalParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r2, $r5);

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec> = $r3;

        return;
    }
    void <init>(javax.crypto.spec.DHPublicKeySpec)
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;
        javax.crypto.spec.DHPublicKeySpec $r1;
        java.math.BigInteger $r2, $r4;
        org.spongycastle.jce.spec.ElGamalParameterSpec $r3;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        $r1 := @parameter0: javax.crypto.spec.DHPublicKeySpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getY()>();

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: java.math.BigInteger y> = $r2;

        $r3 = new org.spongycastle.jce.spec.ElGamalParameterSpec;

        $r2 = virtualinvoke $r1.<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getP()>();

        $r4 = virtualinvoke $r1.<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getG()>();

        specialinvoke $r3.<org.spongycastle.jce.spec.ElGamalParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r2, $r4);

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec> = $r3;

        return;
    }
    void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        java.io.IOException r2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.spongycastle.asn1.ASN1Encodable $r4;
        org.spongycastle.asn1.oiw.ElGamalParameter $r5;
        org.spongycastle.asn1.ASN1Primitive $r6;
        org.spongycastle.asn1.ASN1Integer r7;
        java.math.BigInteger $r8, $r10;
        org.spongycastle.jce.spec.ElGamalParameterSpec $r9;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        $r1 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r5 = staticinvoke <org.spongycastle.asn1.oiw.ElGamalParameter: org.spongycastle.asn1.oiw.ElGamalParameter getInstance(java.lang.Object)>($r4);

     label1:
        $r6 = virtualinvoke $r1.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.ASN1Primitive parsePublicKey()>();

     label2:
        r7 = (org.spongycastle.asn1.ASN1Integer) $r6;

        $r8 = virtualinvoke r7.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: java.math.BigInteger y> = $r8;

        $r9 = new org.spongycastle.jce.spec.ElGamalParameterSpec;

        $r8 = virtualinvoke $r5.<org.spongycastle.asn1.oiw.ElGamalParameter: java.math.BigInteger getP()>();

        $r10 = virtualinvoke $r5.<org.spongycastle.asn1.oiw.ElGamalParameter: java.math.BigInteger getG()>();

        specialinvoke $r9.<org.spongycastle.jce.spec.ElGamalParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r8, $r10);

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec> = $r9;

        return;

     label3:
        r2 := @caughtexception;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid info structure in DSA public key");

        throw $r11;

        catch java.io.IOException from label1 to label2 with label3;
    }
    void <init>(org.spongycastle.crypto.params.ElGamalPublicKeyParameters)
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;
        org.spongycastle.crypto.params.ElGamalPublicKeyParameters $r1;
        java.math.BigInteger $r2, $r5;
        org.spongycastle.jce.spec.ElGamalParameterSpec $r3;
        org.spongycastle.crypto.params.ElGamalParameters $r4;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        $r1 := @parameter0: org.spongycastle.crypto.params.ElGamalPublicKeyParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.crypto.params.ElGamalPublicKeyParameters: java.math.BigInteger getY()>();

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: java.math.BigInteger y> = $r2;

        $r3 = new org.spongycastle.jce.spec.ElGamalParameterSpec;

        $r4 = virtualinvoke $r1.<org.spongycastle.crypto.params.ElGamalPublicKeyParameters: org.spongycastle.crypto.params.ElGamalParameters getParameters()>();

        $r2 = virtualinvoke $r4.<org.spongycastle.crypto.params.ElGamalParameters: java.math.BigInteger getP()>();

        $r4 = virtualinvoke $r1.<org.spongycastle.crypto.params.ElGamalPublicKeyParameters: org.spongycastle.crypto.params.ElGamalParameters getParameters()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.crypto.params.ElGamalParameters: java.math.BigInteger getG()>();

        specialinvoke $r3.<org.spongycastle.jce.spec.ElGamalParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r2, $r5);

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec> = $r3;

        return;
    }
    void <init>(org.spongycastle.jce.interfaces.ElGamalPublicKey)
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;
        org.spongycastle.jce.interfaces.ElGamalPublicKey $r1;
        java.math.BigInteger $r2;
        org.spongycastle.jce.spec.ElGamalParameterSpec $r3;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        $r1 := @parameter0: org.spongycastle.jce.interfaces.ElGamalPublicKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke $r1.<org.spongycastle.jce.interfaces.ElGamalPublicKey: java.math.BigInteger getY()>();

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: java.math.BigInteger y> = $r2;

        $r3 = interfaceinvoke $r1.<org.spongycastle.jce.interfaces.ElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec getParameters()>();

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec> = $r3;

        return;
    }
    void <init>(org.spongycastle.jce.spec.ElGamalPublicKeySpec)
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;
        org.spongycastle.jce.spec.ElGamalPublicKeySpec $r1;
        java.math.BigInteger $r2, $r5;
        org.spongycastle.jce.spec.ElGamalParameterSpec $r3, $r4;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        $r1 := @parameter0: org.spongycastle.jce.spec.ElGamalPublicKeySpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.jce.spec.ElGamalPublicKeySpec: java.math.BigInteger getY()>();

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: java.math.BigInteger y> = $r2;

        $r3 = new org.spongycastle.jce.spec.ElGamalParameterSpec;

        $r4 = virtualinvoke $r1.<org.spongycastle.jce.spec.ElGamalPublicKeySpec: org.spongycastle.jce.spec.ElGamalParameterSpec getParams()>();

        $r2 = virtualinvoke $r4.<org.spongycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getP()>();

        $r4 = virtualinvoke $r1.<org.spongycastle.jce.spec.ElGamalPublicKeySpec: org.spongycastle.jce.spec.ElGamalParameterSpec getParams()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getG()>();

        specialinvoke $r3.<org.spongycastle.jce.spec.ElGamalParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r2, $r5);

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec> = $r3;

        return;
    }
    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;
        java.io.ObjectInputStream $r1;
        org.spongycastle.jce.spec.ElGamalParameterSpec $r2;
        java.lang.Object $r3;
        java.math.BigInteger $r4, $r5;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        $r1 := @parameter0: java.io.ObjectInputStream;

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r4 = (java.math.BigInteger) $r3;

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: java.math.BigInteger y> = $r4;

        $r2 = new org.spongycastle.jce.spec.ElGamalParameterSpec;

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r4 = (java.math.BigInteger) $r3;

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r5 = (java.math.BigInteger) $r3;

        specialinvoke $r2.<org.spongycastle.jce.spec.ElGamalParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r4, $r5);

        r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec> = $r2;

        return;
    }
    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;
        java.io.ObjectOutputStream $r1;
        java.math.BigInteger $r2;
        org.spongycastle.jce.spec.ElGamalParameterSpec $r3;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        $r2 = virtualinvoke r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: java.math.BigInteger getY()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        $r3 = r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec>;

        $r2 = virtualinvoke $r3.<org.spongycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getP()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        $r3 = r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec>;

        $r2 = virtualinvoke $r3.<org.spongycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getG()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        return;
    }
    public java.lang.String getAlgorithm()
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        return "ElGamal";
    }
    public byte[] getEncoded()
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        org.spongycastle.asn1.oiw.ElGamalParameter $r3;
        org.spongycastle.jce.spec.ElGamalParameterSpec $r4;
        java.math.BigInteger $r5, $r6;
        org.spongycastle.asn1.ASN1Integer $r7;
        byte[] $r8;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        $r1 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier elGamalAlgorithm>;

        $r3 = new org.spongycastle.asn1.oiw.ElGamalParameter;

        $r4 = r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec>;

        $r5 = virtualinvoke $r4.<org.spongycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getP()>();

        $r4 = r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec>;

        $r6 = virtualinvoke $r4.<org.spongycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getG()>();

        specialinvoke $r3.<org.spongycastle.asn1.oiw.ElGamalParameter: void <init>(java.math.BigInteger,java.math.BigInteger)>($r5, $r6);

        specialinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r2, $r3);

        $r7 = new org.spongycastle.asn1.ASN1Integer;

        $r5 = r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: java.math.BigInteger y>;

        specialinvoke $r7.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r5);

        $r8 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.KeyUtil: byte[] getEncodedSubjectPublicKeyInfo(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, $r7);

        return $r8;
    }
    public java.lang.String getFormat()
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        return "X.509";
    }
    public org.spongycastle.jce.spec.ElGamalParameterSpec getParameters()
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;
        org.spongycastle.jce.spec.ElGamalParameterSpec r1;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        r1 = r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec>;

        return r1;
    }
    public javax.crypto.spec.DHParameterSpec getParams()
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;
        javax.crypto.spec.DHParameterSpec $r1;
        org.spongycastle.jce.spec.ElGamalParameterSpec $r2;
        java.math.BigInteger $r3, $r4;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        $r1 = new javax.crypto.spec.DHParameterSpec;

        $r2 = r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getP()>();

        $r2 = r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: org.spongycastle.jce.spec.ElGamalParameterSpec elSpec>;

        $r4 = virtualinvoke $r2.<org.spongycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getG()>();

        specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4);

        return $r1;
    }
    public java.math.BigInteger getY()
    {
        org.spongycastle.jce.provider.JCEElGamalPublicKey r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.jce.provider.JCEElGamalPublicKey;

        r1 = r0.<org.spongycastle.jce.provider.JCEElGamalPublicKey: java.math.BigInteger y>;

        return r1;
    }
