org.spongycastle.jce.provider.JDKDSAPublicKey extends java.lang.Object implements java.security.interfaces.DSAPublicKey
private static final long serialVersionUID
private java.security.interfaces.DSAParams dsaSpec
private java.math.BigInteger y
    void <init>(java.math.BigInteger, java.security.spec.DSAParameterSpec)
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        java.math.BigInteger $r1;
        java.security.spec.DSAParameterSpec $r2;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.security.spec.DSAParameterSpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.math.BigInteger y> = $r1;

        r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec> = $r2;

        return;
    }
    void <init>(java.security.interfaces.DSAPublicKey)
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        java.security.interfaces.DSAPublicKey $r1;
        java.math.BigInteger $r2;
        java.security.interfaces.DSAParams $r3;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        $r1 := @parameter0: java.security.interfaces.DSAPublicKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke $r1.<java.security.interfaces.DSAPublicKey: java.math.BigInteger getY()>();

        r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.math.BigInteger y> = $r2;

        $r3 = interfaceinvoke $r1.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec> = $r3;

        return;
    }
    void <init>(java.security.spec.DSAPublicKeySpec)
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        java.security.spec.DSAPublicKeySpec $r1;
        java.math.BigInteger $r2, $r4, $r5;
        java.security.spec.DSAParameterSpec $r3;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        $r1 := @parameter0: java.security.spec.DSAPublicKeySpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getY()>();

        r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.math.BigInteger y> = $r2;

        $r3 = new java.security.spec.DSAParameterSpec;

        $r2 = virtualinvoke $r1.<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getP()>();

        $r4 = virtualinvoke $r1.<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getQ()>();

        $r5 = virtualinvoke $r1.<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getG()>();

        specialinvoke $r3.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r2, $r4, $r5);

        r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec> = $r3;

        return;
    }
    void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        java.io.IOException r2;
        org.spongycastle.asn1.ASN1Primitive $r3;
        org.spongycastle.asn1.ASN1Integer r4;
        java.math.BigInteger $r5, $r10, $r11;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r6;
        org.spongycastle.asn1.ASN1Encodable $r7;
        boolean $z0;
        org.spongycastle.asn1.x509.DSAParameter $r8;
        java.security.spec.DSAParameterSpec $r9;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        $r1 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.ASN1Primitive parsePublicKey()>();

     label2:
        r4 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r5 = virtualinvoke r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.math.BigInteger y> = $r5;

        $r6 = virtualinvoke $r1.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $z0 = specialinvoke r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: boolean isNotNull(org.spongycastle.asn1.ASN1Encodable)>($r7);

        if $z0 == 0 goto label4;

        $r6 = virtualinvoke $r1.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r8 = staticinvoke <org.spongycastle.asn1.x509.DSAParameter: org.spongycastle.asn1.x509.DSAParameter getInstance(java.lang.Object)>($r7);

        $r9 = new java.security.spec.DSAParameterSpec;

        $r5 = virtualinvoke $r8.<org.spongycastle.asn1.x509.DSAParameter: java.math.BigInteger getP()>();

        $r10 = virtualinvoke $r8.<org.spongycastle.asn1.x509.DSAParameter: java.math.BigInteger getQ()>();

        $r11 = virtualinvoke $r8.<org.spongycastle.asn1.x509.DSAParameter: java.math.BigInteger getG()>();

        specialinvoke $r9.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r10, $r11);

        r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec> = $r9;

        return;

     label3:
        r2 := @caughtexception;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid info structure in DSA public key");

        throw $r12;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
    void <init>(org.spongycastle.crypto.params.DSAPublicKeyParameters)
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        org.spongycastle.crypto.params.DSAPublicKeyParameters $r1;
        java.math.BigInteger $r2, $r5, $r6;
        java.security.spec.DSAParameterSpec $r3;
        org.spongycastle.crypto.params.DSAParameters $r4;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        $r1 := @parameter0: org.spongycastle.crypto.params.DSAPublicKeyParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.crypto.params.DSAPublicKeyParameters: java.math.BigInteger getY()>();

        r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.math.BigInteger y> = $r2;

        $r3 = new java.security.spec.DSAParameterSpec;

        $r4 = virtualinvoke $r1.<org.spongycastle.crypto.params.DSAPublicKeyParameters: org.spongycastle.crypto.params.DSAParameters getParameters()>();

        $r2 = virtualinvoke $r4.<org.spongycastle.crypto.params.DSAParameters: java.math.BigInteger getP()>();

        $r4 = virtualinvoke $r1.<org.spongycastle.crypto.params.DSAPublicKeyParameters: org.spongycastle.crypto.params.DSAParameters getParameters()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        $r4 = virtualinvoke $r1.<org.spongycastle.crypto.params.DSAPublicKeyParameters: org.spongycastle.crypto.params.DSAParameters getParameters()>();

        $r6 = virtualinvoke $r4.<org.spongycastle.crypto.params.DSAParameters: java.math.BigInteger getG()>();

        specialinvoke $r3.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r2, $r5, $r6);

        r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec> = $r3;

        return;
    }
    private boolean isNotNull(org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        boolean $z0;
        org.spongycastle.asn1.DERNull $r2;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Encodable;

        if $r1 == null goto label1;

        $r2 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        $z0 = virtualinvoke $r2.<org.spongycastle.asn1.DERNull: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        java.io.ObjectInputStream $r1;
        java.security.spec.DSAParameterSpec $r2;
        java.lang.Object $r3;
        java.math.BigInteger $r4, $r5, $r6;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        $r1 := @parameter0: java.io.ObjectInputStream;

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r4 = (java.math.BigInteger) $r3;

        r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.math.BigInteger y> = $r4;

        $r2 = new java.security.spec.DSAParameterSpec;

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r4 = (java.math.BigInteger) $r3;

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r5 = (java.math.BigInteger) $r3;

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r6 = (java.math.BigInteger) $r3;

        specialinvoke $r2.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r4, $r5, $r6);

        r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec> = $r2;

        return;
    }
    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        java.io.ObjectOutputStream $r1;
        java.math.BigInteger $r2;
        java.security.interfaces.DSAParams $r3;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.math.BigInteger y>;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        $r3 = r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec>;

        $r2 = interfaceinvoke $r3.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        $r3 = r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec>;

        $r2 = interfaceinvoke $r3.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        $r3 = r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec>;

        $r2 = interfaceinvoke $r3.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        java.lang.Object $r1;
        boolean $z0;
        java.security.interfaces.DSAPublicKey r2;
        java.math.BigInteger $r3, $r4;
        java.security.interfaces.DSAParams $r5;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.security.interfaces.DSAPublicKey;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.security.interfaces.DSAPublicKey) $r1;

        $r3 = virtualinvoke r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.math.BigInteger getY()>();

        $r4 = interfaceinvoke r2.<java.security.interfaces.DSAPublicKey: java.math.BigInteger getY()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r3 = interfaceinvoke $r5.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        $r5 = interfaceinvoke r2.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r4 = interfaceinvoke $r5.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r3 = interfaceinvoke $r5.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        $r5 = interfaceinvoke r2.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r4 = interfaceinvoke $r5.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r3 = interfaceinvoke $r5.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $r5 = interfaceinvoke r2.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r4 = interfaceinvoke $r5.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public java.lang.String getAlgorithm()
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        return "DSA";
    }
    public byte[] getEncoded()
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        java.io.IOException r1;
        java.security.interfaces.DSAParams $r2;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;
        org.spongycastle.asn1.ASN1Integer $r6;
        java.math.BigInteger $r7, $r10, $r11;
        byte[] $r8;
        org.spongycastle.asn1.x509.DSAParameter $r9;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        $r2 = r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec>;

        if $r2 != null goto label05;

        $r3 = new org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r4 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r5 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_dsa>;

     label01:
        specialinvoke $r4.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r5);

     label02:
        $r6 = new org.spongycastle.asn1.ASN1Integer;

        $r7 = r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.math.BigInteger y>;

     label03:
        specialinvoke $r6.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r7);

        specialinvoke $r3.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r6);

        $r8 = virtualinvoke $r3.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: byte[] getEncoded(java.lang.String)>("DER");

     label04:
        return $r8;

     label05:
        $r3 = new org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r4 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r5 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_dsa>;

        $r9 = new org.spongycastle.asn1.x509.DSAParameter;

        $r2 = r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec>;

     label06:
        $r7 = interfaceinvoke $r2.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

     label07:
        $r2 = r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec>;

     label08:
        $r10 = interfaceinvoke $r2.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

     label09:
        $r2 = r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec>;

     label10:
        $r11 = interfaceinvoke $r2.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        specialinvoke $r9.<org.spongycastle.asn1.x509.DSAParameter: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r7, $r10, $r11);

        specialinvoke $r4.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r5, $r9);

     label11:
        $r6 = new org.spongycastle.asn1.ASN1Integer;

        $r7 = r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.math.BigInteger y>;

     label12:
        specialinvoke $r6.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r7);

        specialinvoke $r3.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r6);

        $r8 = virtualinvoke $r3.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: byte[] getEncoded(java.lang.String)>("DER");

     label13:
        return $r8;

     label14:
        r1 := @caughtexception;

        return null;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.io.IOException from label03 to label04 with label14;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.io.IOException from label08 to label09 with label14;
        catch java.io.IOException from label10 to label11 with label14;
        catch java.io.IOException from label12 to label13 with label14;
    }
    public java.lang.String getFormat()
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        return "X.509";
    }
    public java.security.interfaces.DSAParams getParams()
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        java.security.interfaces.DSAParams r1;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        r1 = r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams dsaSpec>;

        return r1;
    }
    public java.math.BigInteger getY()
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        r1 = r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.math.BigInteger y>;

        return r1;
    }
    public int hashCode()
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        java.math.BigInteger $r1;
        int $i0, $i1;
        java.security.interfaces.DSAParams $r2;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        $r1 = virtualinvoke r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.math.BigInteger getY()>();

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $r2 = virtualinvoke r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r1 = interfaceinvoke $r2.<java.security.interfaces.DSAParams: java.math.BigInteger getG()>();

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $i0 = $i0 ^ $i1;

        $r2 = virtualinvoke r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r1 = interfaceinvoke $r2.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $i0 = $i0 ^ $i1;

        $r2 = virtualinvoke r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r1 = interfaceinvoke $r2.<java.security.interfaces.DSAParams: java.math.BigInteger getQ()>();

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $i0 = $i0 ^ $i1;

        return $i0;
    }
    public java.lang.String toString()
    {
        org.spongycastle.jce.provider.JDKDSAPublicKey r0;
        java.lang.StringBuffer r1, $r3;
        java.lang.String $r2, $r5;
        java.math.BigInteger $r4;

        r0 := @this: org.spongycastle.jce.provider.JDKDSAPublicKey;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = staticinvoke <org.spongycastle.util.Strings: java.lang.String lineSeparator()>();

        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DSA Public Key");

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("            y: ");

        $r4 = virtualinvoke r0.<org.spongycastle.jce.provider.JDKDSAPublicKey: java.math.BigInteger getY()>();

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
