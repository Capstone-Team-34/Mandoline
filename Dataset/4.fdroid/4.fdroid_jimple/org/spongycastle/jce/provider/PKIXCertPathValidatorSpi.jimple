org.spongycastle.jce.provider.PKIXCertPathValidatorSpi extends java.security.cert.CertPathValidatorSpi
private final org.spongycastle.jcajce.util.JcaJceHelper helper
    public void <init>()
    {
        org.spongycastle.jce.provider.PKIXCertPathValidatorSpi r0;
        org.spongycastle.jcajce.util.BCJcaJceHelper $r1;

        r0 := @this: org.spongycastle.jce.provider.PKIXCertPathValidatorSpi;

        specialinvoke r0.<java.security.cert.CertPathValidatorSpi: void <init>()>();

        $r1 = new org.spongycastle.jcajce.util.BCJcaJceHelper;

        specialinvoke $r1.<org.spongycastle.jcajce.util.BCJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.jce.provider.PKIXCertPathValidatorSpi: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r1;

        return;
    }
    public java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath, java.security.cert.CertPathParameters) throws java.security.cert.CertPathValidatorException, java.security.InvalidAlgorithmParameterException
    {
        org.spongycastle.jce.provider.PKIXCertPathValidatorSpi r0;
        java.security.cert.CertPath $r1;
        java.util.HashSet r2, $r26;
        int $i0, i1, $i2, $i3, i4, i5, i6, $i7;
        java.lang.IllegalArgumentException r3;
        org.spongycastle.jce.provider.PKIXNameConstraintValidator r4;
        org.spongycastle.jcajce.PKIXExtendedParameters$Builder r5;
        java.security.cert.CertPathParameters r6;
        boolean $z0;
        java.security.cert.PKIXParameters $r7;
        org.spongycastle.x509.ExtendedPKIXParameters r8;
        org.spongycastle.jcajce.PKIXExtendedParameters $r9;
        java.util.Set $r10, $r20;
        java.security.InvalidAlgorithmParameterException $r11;
        org.spongycastle.jcajce.PKIXExtendedBuilderParameters r12;
        java.lang.StringBuilder $r13;
        java.lang.Class $r14;
        java.lang.String $r15;
        java.util.List $r16, $r33, $r38;
        java.security.cert.CertPathValidatorException $r17, r40;
        java.lang.Object $r18;
        java.security.cert.X509Certificate $r19, $r27;
        java.security.cert.TrustAnchor $r21;
        org.spongycastle.jce.provider.AnnotatedException r22;
        java.util.ArrayList[] $r23;
        java.util.ArrayList $r24;
        org.spongycastle.jce.provider.PKIXPolicyNode r25, $r37;
        org.spongycastle.asn1.x500.X500Name $r28;
        java.security.PublicKey $r29, $r39;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r30;
        org.spongycastle.jcajce.PKIXCertStoreSelector $r31;
        org.spongycastle.jce.exception.ExtCertPathValidatorException $r32;
        java.util.Iterator $r34;
        java.security.cert.PKIXCertPathChecker $r35;
        org.spongycastle.jcajce.util.JcaJceHelper $r36;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r41;
        java.security.cert.PKIXCertPathValidatorResult $r42;

        r0 := @this: org.spongycastle.jce.provider.PKIXCertPathValidatorSpi;

        $r1 := @parameter0: java.security.cert.CertPath;

        r6 := @parameter1: java.security.cert.CertPathParameters;

        $z0 = r6 instanceof java.security.cert.PKIXParameters;

        if $z0 == 0 goto label03;

        r5 = new org.spongycastle.jcajce.PKIXExtendedParameters$Builder;

        $r7 = (java.security.cert.PKIXParameters) r6;

        specialinvoke r5.<org.spongycastle.jcajce.PKIXExtendedParameters$Builder: void <init>(java.security.cert.PKIXParameters)>($r7);

        $z0 = r6 instanceof org.spongycastle.x509.ExtendedPKIXParameters;

        if $z0 == 0 goto label01;

        r8 = (org.spongycastle.x509.ExtendedPKIXParameters) r6;

        $z0 = virtualinvoke r8.<org.spongycastle.x509.ExtendedPKIXParameters: boolean isUseDeltasEnabled()>();

        virtualinvoke r5.<org.spongycastle.jcajce.PKIXExtendedParameters$Builder: org.spongycastle.jcajce.PKIXExtendedParameters$Builder setUseDeltasEnabled(boolean)>($z0);

        $i2 = virtualinvoke r8.<org.spongycastle.x509.ExtendedPKIXParameters: int getValidityModel()>();

        virtualinvoke r5.<org.spongycastle.jcajce.PKIXExtendedParameters$Builder: org.spongycastle.jcajce.PKIXExtendedParameters$Builder setValidityModel(int)>($i2);

     label01:
        $r9 = virtualinvoke r5.<org.spongycastle.jcajce.PKIXExtendedParameters$Builder: org.spongycastle.jcajce.PKIXExtendedParameters build()>();

     label02:
        $r10 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.Set getTrustAnchors()>();

        if $r10 != null goto label06;

        $r11 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r11.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("trustAnchors is null, this is not allowed for certification path validation.");

        throw $r11;

     label03:
        $z0 = r6 instanceof org.spongycastle.jcajce.PKIXExtendedBuilderParameters;

        if $z0 == 0 goto label04;

        r12 = (org.spongycastle.jcajce.PKIXExtendedBuilderParameters) r6;

        $r9 = virtualinvoke r12.<org.spongycastle.jcajce.PKIXExtendedBuilderParameters: org.spongycastle.jcajce.PKIXExtendedParameters getBaseParameters()>();

        goto label02;

     label04:
        $z0 = r6 instanceof org.spongycastle.jcajce.PKIXExtendedParameters;

        if $z0 == 0 goto label05;

        $r9 = (org.spongycastle.jcajce.PKIXExtendedParameters) r6;

        goto label02;

     label05:
        $r11 = new java.security.InvalidAlgorithmParameterException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parameters must be a ");

        $r14 = class "Ljava/security/cert/PKIXParameters;";

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instance.");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label06:
        $r16 = virtualinvoke $r1.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $i2 = interfaceinvoke $r16.<java.util.List: int size()>();

        $z0 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label07;

        $r17 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r17.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Certification path is empty.", null, $r1, -1);

        throw $r17;

     label07:
        $r10 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.Set getInitialPolicies()>();

     label08:
        $i3 = interfaceinvoke $r16.<java.util.List: int size()>();

     label09:
        $i3 = $i3 + -1;

     label10:
        $r18 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($i3);

     label11:
        $r19 = (java.security.cert.X509Certificate) $r18;

     label12:
        $r20 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.Set getTrustAnchors()>();

        $r15 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: java.lang.String getSigProvider()>();

        $r21 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set,java.lang.String)>($r19, $r20, $r15);

     label13:
        if $r21 != null goto label15;

        $r17 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r17.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Trust anchor for certification path not found.", null, $r1, -1);

        throw $r17;

     label14:
        r22 := @caughtexception;

        $r17 = new java.security.cert.CertPathValidatorException;

        $r15 = virtualinvoke r22.<org.spongycastle.jce.provider.AnnotatedException: java.lang.String getMessage()>();

        $i2 = interfaceinvoke $r16.<java.util.List: int size()>();

        $i2 = $i2 + -1;

        specialinvoke $r17.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r15, r22, $r1, $i2);

        throw $r17;

     label15:
        r5 = new org.spongycastle.jcajce.PKIXExtendedParameters$Builder;

        specialinvoke r5.<org.spongycastle.jcajce.PKIXExtendedParameters$Builder: void <init>(org.spongycastle.jcajce.PKIXExtendedParameters)>($r9);

        r5 = virtualinvoke r5.<org.spongycastle.jcajce.PKIXExtendedParameters$Builder: org.spongycastle.jcajce.PKIXExtendedParameters$Builder setTrustAnchor(java.security.cert.TrustAnchor)>($r21);

        $r9 = virtualinvoke r5.<org.spongycastle.jcajce.PKIXExtendedParameters$Builder: org.spongycastle.jcajce.PKIXExtendedParameters build()>();

        $i3 = $i2 + 1;

        $r23 = newarray (java.util.ArrayList)[$i3];

        $i3 = 0;

     label16:
        $i0 = lengthof $r23;

        if $i3 >= $i0 goto label17;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        $r23[$i3] = $r24;

        $i3 = $i3 + 1;

        goto label16;

     label17:
        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>("2.5.29.32.0");

        r25 = new org.spongycastle.jce.provider.PKIXPolicyNode;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        $r26 = new java.util.HashSet;

        specialinvoke $r26.<java.util.HashSet: void <init>()>();

        specialinvoke r25.<org.spongycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r24, 0, r2, null, $r26, "2.5.29.32.0", 0);

        $r24 = $r23[0];

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>(r25);

        r4 = new org.spongycastle.jce.provider.PKIXNameConstraintValidator;

        specialinvoke r4.<org.spongycastle.jce.provider.PKIXNameConstraintValidator: void <init>()>();

        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $z0 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: boolean isExplicitPolicyRequired()>();

        if $z0 == 0 goto label25;

        $i0 = 0;

     label18:
        $z0 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: boolean isAnyPolicyInhibited()>();

        if $z0 == 0 goto label26;

        i4 = 0;

     label19:
        $z0 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: boolean isPolicyMappingInhibited()>();

        if $z0 == 0 goto label27;

        i5 = 0;

     label20:
        $r27 = virtualinvoke $r21.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        $r19 = $r27;

        if $r27 == null goto label28;

     label21:
        $r28 = staticinvoke <org.spongycastle.jce.provider.PrincipalUtils: org.spongycastle.asn1.x500.X500Name getSubjectPrincipal(java.security.cert.X509Certificate)>($r27);

     label22:
        $r29 = virtualinvoke $r27.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

     label23:
        $r30 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)>($r29);

     label24:
        virtualinvoke $r30.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        virtualinvoke $r30.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        i6 = $i2;

        $r31 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: org.spongycastle.jcajce.PKIXCertStoreSelector getTargetConstraints()>();

        if $r31 == null goto label33;

        $r31 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: org.spongycastle.jcajce.PKIXCertStoreSelector getTargetConstraints()>();

        $r18 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(0);

        $r27 = (java.security.cert.X509Certificate) $r18;

        $z0 = virtualinvoke $r31.<org.spongycastle.jcajce.PKIXCertStoreSelector: boolean match(java.security.cert.Certificate)>($r27);

        if $z0 != 0 goto label33;

        $r32 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r32.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Target certificate in certification path does not match targetConstraints.", null, $r1, 0);

        throw $r32;

     label25:
        $i0 = $i2 + 1;

        goto label18;

     label26:
        i4 = $i2 + 1;

        goto label19;

     label27:
        i5 = $i2 + 1;

        goto label20;

     label28:
        $r28 = staticinvoke <org.spongycastle.jce.provider.PrincipalUtils: org.spongycastle.asn1.x500.X500Name getCA(java.security.cert.TrustAnchor)>($r21);

     label29:
        $r29 = virtualinvoke $r21.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

     label30:
        goto label23;

     label31:
        r3 := @caughtexception;

        $r32 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r32.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Subject of trust anchor could not be (re)encoded.", r3, $r1, -1);

        throw $r32;

     label32:
        $r17 := @caughtexception;

        $r32 = new org.spongycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r32.<org.spongycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Algorithm identifier of public key of trust anchor could not be read.", $r17, $r1, -1);

        throw $r32;

     label33:
        $r33 = virtualinvoke $r9.<org.spongycastle.jcajce.PKIXExtendedParameters: java.util.List getCertPathCheckers()>();

        $r34 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>();

     label34:
        $z0 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label35;

        $r18 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

        $r35 = (java.security.cert.PKIXCertPathChecker) $r18;

        virtualinvoke $r35.<java.security.cert.PKIXCertPathChecker: void init(boolean)>(0);

        goto label34;

     label35:
        $r27 = null;

        $i3 = interfaceinvoke $r16.<java.util.List: int size()>();

        $i3 = $i3 + -1;

     label36:
        if $i3 < 0 goto label48;

        i1 = $i2 - $i3;

        $r18 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($i3);

        $r27 = (java.security.cert.X509Certificate) $r18;

        $i7 = interfaceinvoke $r16.<java.util.List: int size()>();

        $i7 = $i7 + -1;

        if $i3 != $i7 goto label38;

        $z0 = 1;

     label37:
        $r36 = r0.<org.spongycastle.jce.provider.PKIXCertPathValidatorSpi: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void processCertA(java.security.cert.CertPath,org.spongycastle.jcajce.PKIXExtendedParameters,int,java.security.PublicKey,boolean,org.spongycastle.asn1.x500.X500Name,java.security.cert.X509Certificate,org.spongycastle.jcajce.util.JcaJceHelper)>($r1, $r9, $i3, $r29, $z0, $r28, $r19, $r36);

        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void processCertBC(java.security.cert.CertPath,int,org.spongycastle.jce.provider.PKIXNameConstraintValidator)>($r1, $i3, r4);

        r25 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: org.spongycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath,int,java.util.Set,org.spongycastle.jce.provider.PKIXPolicyNode,java.util.List[],int)>($r1, $i3, r2, r25, $r23, i4);

        $r37 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: org.spongycastle.jce.provider.PKIXPolicyNode processCertE(java.security.cert.CertPath,int,org.spongycastle.jce.provider.PKIXPolicyNode)>($r1, $i3, r25);

        r25 = $r37;

        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void processCertF(java.security.cert.CertPath,int,org.spongycastle.jce.provider.PKIXPolicyNode,int)>($r1, $i3, $r37, $i0);

        if i1 == $i2 goto label45;

        if $r27 == null goto label39;

        i1 = virtualinvoke $r27.<java.security.cert.X509Certificate: int getVersion()>();

        if i1 != 1 goto label39;

        $r17 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r17.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Version 1 certificates can\'t be used as CA ones.", null, $r1, $i3);

        throw $r17;

     label38:
        $z0 = 0;

        goto label37;

     label39:
        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void prepareNextCertA(java.security.cert.CertPath,int)>($r1, $i3);

        r25 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: org.spongycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.spongycastle.jce.provider.PKIXPolicyNode,int)>($r1, $i3, $r23, $r37, i5);

        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void prepareNextCertG(java.security.cert.CertPath,int,org.spongycastle.jce.provider.PKIXNameConstraintValidator)>($r1, $i3, r4);

        $i0 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertH1(java.security.cert.CertPath,int,int)>($r1, $i3, $i0);

        i5 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertH2(java.security.cert.CertPath,int,int)>($r1, $i3, i5);

        i4 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertH3(java.security.cert.CertPath,int,int)>($r1, $i3, i4);

        $i0 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertI1(java.security.cert.CertPath,int,int)>($r1, $i3, $i0);

        i5 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertI2(java.security.cert.CertPath,int,int)>($r1, $i3, i5);

        i4 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertJ(java.security.cert.CertPath,int,int)>($r1, $i3, i4);

        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void prepareNextCertK(java.security.cert.CertPath,int)>($r1, $i3);

        i6 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertL(java.security.cert.CertPath,int,int)>($r1, $i3, i6);

        i6 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: int prepareNextCertM(java.security.cert.CertPath,int,int)>($r1, $i3, i6);

        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void prepareNextCertN(java.security.cert.CertPath,int)>($r1, $i3);

        $r20 = virtualinvoke $r27.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        if $r20 == null goto label46;

        $r26 = new java.util.HashSet;

        specialinvoke $r26.<java.util.HashSet: void <init>(java.util.Collection)>($r20);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String KEY_USAGE>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_MAPPINGS>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String INHIBIT_ANY_POLICY>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String DELTA_CRL_INDICATOR>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String NAME_CONSTRAINTS>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

     label40:
        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void prepareNextCertO(java.security.cert.CertPath,int,java.util.Set,java.util.List)>($r1, $i3, $r26, $r33);

        $r19 = $r27;

        $r28 = staticinvoke <org.spongycastle.jce.provider.PrincipalUtils: org.spongycastle.asn1.x500.X500Name getSubjectPrincipal(java.security.cert.X509Certificate)>($r27);

     label41:
        $r38 = virtualinvoke $r1.<java.security.cert.CertPath: java.util.List getCertificates()>();

     label42:
        $r36 = r0.<org.spongycastle.jce.provider.PKIXCertPathValidatorSpi: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label43:
        $r39 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: java.security.PublicKey getNextWorkingKey(java.util.List,int,org.spongycastle.jcajce.util.JcaJceHelper)>($r38, $i3, $r36);

     label44:
        $r29 = $r39;

        $r30 = staticinvoke <org.spongycastle.jce.provider.CertPathValidatorUtilities: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)>($r39);

        virtualinvoke $r30.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        virtualinvoke $r30.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

     label45:
        $i3 = $i3 + -1;

        goto label36;

     label46:
        $r26 = new java.util.HashSet;

        specialinvoke $r26.<java.util.HashSet: void <init>()>();

        goto label40;

     label47:
        r40 := @caughtexception;

        $r17 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r17.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Next working key could not be retrieved.", r40, $r1, $i3);

        throw $r17;

     label48:
        $i2 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: int wrapupCertA(int,java.security.cert.X509Certificate)>($i0, $r27);

        $i0 = $i3 + 1;

        $i2 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: int wrapupCertB(java.security.cert.CertPath,int,int)>($r1, $i0, $i2);

        $r20 = virtualinvoke $r27.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        if $r20 == null goto label51;

        $r26 = new java.util.HashSet;

        specialinvoke $r26.<java.util.HashSet: void <init>(java.util.Collection)>($r20);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String KEY_USAGE>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_MAPPINGS>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String INHIBIT_ANY_POLICY>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String DELTA_CRL_INDICATOR>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String NAME_CONSTRAINTS>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r15 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS>;

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

        $r41 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier extendedKeyUsage>;

        $r15 = virtualinvoke $r41.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>($r15);

     label49:
        $i0 = $i3 + 1;

        staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: void wrapupCertF(java.security.cert.CertPath,int,java.util.List,java.util.Set)>($r1, $i0, $r33, $r26);

        $i0 = $i3 + 1;

        r25 = staticinvoke <org.spongycastle.jce.provider.RFC3280CertPathUtilities: org.spongycastle.jce.provider.PKIXPolicyNode wrapupCertG(java.security.cert.CertPath,org.spongycastle.jcajce.PKIXExtendedParameters,java.util.Set,int,java.util.List[],org.spongycastle.jce.provider.PKIXPolicyNode,java.util.Set)>($r1, $r9, $r10, $i0, $r23, r25, r2);

        if $i2 > 0 goto label50;

        if r25 == null goto label52;

     label50:
        $r42 = new java.security.cert.PKIXCertPathValidatorResult;

        $r29 = virtualinvoke $r27.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        specialinvoke $r42.<java.security.cert.PKIXCertPathValidatorResult: void <init>(java.security.cert.TrustAnchor,java.security.cert.PolicyNode,java.security.PublicKey)>($r21, r25, $r29);

        return $r42;

     label51:
        $r26 = new java.util.HashSet;

        specialinvoke $r26.<java.util.HashSet: void <init>()>();

        goto label49;

     label52:
        $r17 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r17.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Path processing failed on policy.", null, $r1, $i3);

        throw $r17;

        catch org.spongycastle.jce.provider.AnnotatedException from label08 to label09 with label14;
        catch org.spongycastle.jce.provider.AnnotatedException from label10 to label11 with label14;
        catch org.spongycastle.jce.provider.AnnotatedException from label12 to label13 with label14;
        catch java.lang.IllegalArgumentException from label21 to label22 with label31;
        catch java.lang.IllegalArgumentException from label22 to label23 with label31;
        catch java.security.cert.CertPathValidatorException from label23 to label24 with label32;
        catch java.lang.IllegalArgumentException from label28 to label29 with label31;
        catch java.lang.IllegalArgumentException from label29 to label30 with label31;
        catch java.security.cert.CertPathValidatorException from label41 to label42 with label47;
        catch java.security.cert.CertPathValidatorException from label43 to label44 with label47;
    }
