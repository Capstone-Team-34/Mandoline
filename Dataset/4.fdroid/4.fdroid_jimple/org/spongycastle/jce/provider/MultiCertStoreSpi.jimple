org.spongycastle.jce.provider.MultiCertStoreSpi extends java.security.cert.CertStoreSpi
private org.spongycastle.jce.MultiCertStoreParameters params
    public void <init>(java.security.cert.CertStoreParameters) throws java.security.InvalidAlgorithmParameterException
    {
        org.spongycastle.jce.provider.MultiCertStoreSpi r0;
        java.security.cert.CertStoreParameters $r1;
        boolean $z0;
        java.security.InvalidAlgorithmParameterException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        org.spongycastle.jce.MultiCertStoreParameters $r5;

        r0 := @this: org.spongycastle.jce.provider.MultiCertStoreSpi;

        $r1 := @parameter0: java.security.cert.CertStoreParameters;

        specialinvoke r0.<java.security.cert.CertStoreSpi: void <init>(java.security.cert.CertStoreParameters)>($r1);

        $z0 = $r1 instanceof org.spongycastle.jce.MultiCertStoreParameters;

        if $z0 != 0 goto label1;

        $r2 = new java.security.InvalidAlgorithmParameterException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.spongycastle.jce.provider.MultiCertStoreSpi: parameter must be a MultiCertStoreParameters object\n");

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r5 = (org.spongycastle.jce.MultiCertStoreParameters) $r1;

        r0.<org.spongycastle.jce.provider.MultiCertStoreSpi: org.spongycastle.jce.MultiCertStoreParameters params> = $r5;

        return;
    }
    public java.util.Collection engineGetCRLs(java.security.cert.CRLSelector) throws java.security.cert.CertStoreException
    {
        org.spongycastle.jce.provider.MultiCertStoreSpi r0;
        java.security.cert.CRLSelector $r1;
        org.spongycastle.jce.MultiCertStoreParameters $r2;
        boolean $z0, $z1;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        java.lang.Object r5, $r6;
        java.security.cert.CertStore r7;
        java.util.ArrayList $r8;
        java.util.List $r9;

        r0 := @this: org.spongycastle.jce.provider.MultiCertStoreSpi;

        $r1 := @parameter0: java.security.cert.CRLSelector;

        $r2 = r0.<org.spongycastle.jce.provider.MultiCertStoreSpi: org.spongycastle.jce.MultiCertStoreParameters params>;

        $z0 = virtualinvoke $r2.<org.spongycastle.jce.MultiCertStoreParameters: boolean getSearchAllStores()>();

        $r2 = r0.<org.spongycastle.jce.provider.MultiCertStoreSpi: org.spongycastle.jce.MultiCertStoreParameters params>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jce.MultiCertStoreParameters: java.util.Collection getCertStores()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

        if $z0 == 0 goto label2;

        $r8 = new java.util.ArrayList;

        r5 = $r8;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.security.cert.CertStore) $r6;

        $r3 = virtualinvoke r7.<java.security.cert.CertStore: java.util.Collection getCRLs(java.security.cert.CRLSelector)>($r1);

        if $z0 == 0 goto label3;

        $r9 = (java.util.List) r5;

        interfaceinvoke $r9.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        goto label1;

     label2:
        r5 = <java.util.Collections: java.util.List EMPTY_LIST>;

        goto label1;

     label3:
        $z1 = interfaceinvoke $r3.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        return $r3;

     label4:
        $r3 = (java.util.Collection) r5;

        return $r3;
    }
    public java.util.Collection engineGetCertificates(java.security.cert.CertSelector) throws java.security.cert.CertStoreException
    {
        org.spongycastle.jce.provider.MultiCertStoreSpi r0;
        java.security.cert.CertSelector $r1;
        org.spongycastle.jce.MultiCertStoreParameters $r2;
        boolean $z0, $z1;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        java.lang.Object r5, $r6;
        java.security.cert.CertStore r7;
        java.util.ArrayList $r8;
        java.util.List $r9;

        r0 := @this: org.spongycastle.jce.provider.MultiCertStoreSpi;

        $r1 := @parameter0: java.security.cert.CertSelector;

        $r2 = r0.<org.spongycastle.jce.provider.MultiCertStoreSpi: org.spongycastle.jce.MultiCertStoreParameters params>;

        $z0 = virtualinvoke $r2.<org.spongycastle.jce.MultiCertStoreParameters: boolean getSearchAllStores()>();

        $r2 = r0.<org.spongycastle.jce.provider.MultiCertStoreSpi: org.spongycastle.jce.MultiCertStoreParameters params>;

        $r3 = virtualinvoke $r2.<org.spongycastle.jce.MultiCertStoreParameters: java.util.Collection getCertStores()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

        if $z0 == 0 goto label2;

        $r8 = new java.util.ArrayList;

        r5 = $r8;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.security.cert.CertStore) $r6;

        $r3 = virtualinvoke r7.<java.security.cert.CertStore: java.util.Collection getCertificates(java.security.cert.CertSelector)>($r1);

        if $z0 == 0 goto label3;

        $r9 = (java.util.List) r5;

        interfaceinvoke $r9.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        goto label1;

     label2:
        r5 = <java.util.Collections: java.util.List EMPTY_LIST>;

        goto label1;

     label3:
        $z1 = interfaceinvoke $r3.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        return $r3;

     label4:
        $r3 = (java.util.Collection) r5;

        return $r3;
    }
