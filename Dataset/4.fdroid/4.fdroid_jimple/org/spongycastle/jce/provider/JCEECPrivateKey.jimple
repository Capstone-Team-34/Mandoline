org.spongycastle.jce.provider.JCEECPrivateKey extends java.lang.Object implements java.security.interfaces.ECPrivateKey org.spongycastle.jce.interfaces.ECPointEncoder org.spongycastle.jce.interfaces.ECPrivateKey org.spongycastle.jce.interfaces.PKCS12BagAttributeCarrier
private java.lang.String algorithm
private org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier
private java.math.BigInteger d
private java.security.spec.ECParameterSpec ecSpec
private org.spongycastle.asn1.DERBitString publicKey
private boolean withCompression
    protected void <init>()
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r1;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = "EC";

        $r1 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r1.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r1;

        return;
    }
    public void <init>(java.lang.String, java.security.spec.ECPrivateKeySpec)
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.lang.String $r1;
        java.security.spec.ECPrivateKeySpec $r2;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r3;
        java.math.BigInteger $r4;
        java.security.spec.ECParameterSpec $r5;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.spec.ECPrivateKeySpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = "EC";

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r3;

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = $r1;

        $r4 = virtualinvoke $r2.<java.security.spec.ECPrivateKeySpec: java.math.BigInteger getS()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger d> = $r4;

        $r5 = virtualinvoke $r2.<java.security.spec.ECPrivateKeySpec: java.security.spec.ECParameterSpec getParams()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = $r5;

        return;
    }
    public void <init>(java.lang.String, org.spongycastle.crypto.params.ECPrivateKeyParameters)
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.lang.String $r1;
        org.spongycastle.crypto.params.ECPrivateKeyParameters $r2;
        java.math.BigInteger $r3;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r4;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.spongycastle.crypto.params.ECPrivateKeyParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = "EC";

        $r4 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r4.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r4;

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = $r1;

        $r3 = virtualinvoke $r2.<org.spongycastle.crypto.params.ECPrivateKeyParameters: java.math.BigInteger getD()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger d> = $r3;

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = null;

        return;
    }
    public void <init>(java.lang.String, org.spongycastle.crypto.params.ECPrivateKeyParameters, org.spongycastle.jce.provider.JCEECPublicKey, java.security.spec.ECParameterSpec)
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.lang.String $r1;
        org.spongycastle.crypto.params.ECPrivateKeyParameters $r2;
        org.spongycastle.jce.provider.JCEECPublicKey $r3;
        java.security.spec.ECParameterSpec $r4;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r5;
        org.spongycastle.crypto.params.ECDomainParameters $r6;
        java.math.BigInteger $r7, $r14;
        org.spongycastle.math.ec.ECCurve $r8;
        byte[] $r9;
        java.security.spec.EllipticCurve $r10;
        java.security.spec.ECPoint $r11;
        org.spongycastle.math.ec.ECPoint $r12;
        org.spongycastle.math.ec.ECFieldElement $r13;
        int $i0;
        org.spongycastle.asn1.DERBitString $r15;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.spongycastle.crypto.params.ECPrivateKeyParameters;

        $r3 := @parameter2: org.spongycastle.jce.provider.JCEECPublicKey;

        $r4 := @parameter3: java.security.spec.ECParameterSpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = "EC";

        $r5 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r5.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r5;

        $r6 = virtualinvoke $r2.<org.spongycastle.crypto.params.ECPrivateKeyParameters: org.spongycastle.crypto.params.ECDomainParameters getParameters()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = $r1;

        $r7 = virtualinvoke $r2.<org.spongycastle.crypto.params.ECPrivateKeyParameters: java.math.BigInteger getD()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger d> = $r7;

        if $r4 != null goto label2;

        $r8 = virtualinvoke $r6.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r9 = virtualinvoke $r6.<org.spongycastle.crypto.params.ECDomainParameters: byte[] getSeed()>();

        $r10 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r8, $r9);

        $r4 = new java.security.spec.ECParameterSpec;

        $r11 = new java.security.spec.ECPoint;

        $r12 = virtualinvoke $r6.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r13 = virtualinvoke $r12.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r7 = virtualinvoke $r13.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r12 = virtualinvoke $r6.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r13 = virtualinvoke $r12.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r14 = virtualinvoke $r13.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r11.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r7, $r14);

        $r7 = virtualinvoke $r6.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

        $r14 = virtualinvoke $r6.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getH()>();

        $i0 = virtualinvoke $r14.<java.math.BigInteger: int intValue()>();

        specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r11, $r7, $i0);

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = $r4;

     label1:
        $r15 = specialinvoke r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.asn1.DERBitString getPublicKeyDetails(org.spongycastle.jce.provider.JCEECPublicKey)>($r3);

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.asn1.DERBitString publicKey> = $r15;

        return;

     label2:
        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = $r4;

        goto label1;
    }
    public void <init>(java.lang.String, org.spongycastle.crypto.params.ECPrivateKeyParameters, org.spongycastle.jce.provider.JCEECPublicKey, org.spongycastle.jce.spec.ECParameterSpec)
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.lang.String $r1;
        org.spongycastle.crypto.params.ECPrivateKeyParameters $r2;
        org.spongycastle.jce.provider.JCEECPublicKey $r3;
        org.spongycastle.jce.spec.ECParameterSpec $r4;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r5;
        org.spongycastle.crypto.params.ECDomainParameters $r6;
        java.math.BigInteger $r7, $r15;
        org.spongycastle.math.ec.ECCurve $r8;
        byte[] $r9;
        java.security.spec.EllipticCurve $r10;
        java.security.spec.ECParameterSpec $r11;
        java.security.spec.ECPoint $r12;
        org.spongycastle.math.ec.ECPoint $r13;
        org.spongycastle.math.ec.ECFieldElement $r14;
        int $i0;
        org.spongycastle.asn1.DERBitString $r16;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.spongycastle.crypto.params.ECPrivateKeyParameters;

        $r3 := @parameter2: org.spongycastle.jce.provider.JCEECPublicKey;

        $r4 := @parameter3: org.spongycastle.jce.spec.ECParameterSpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = "EC";

        $r5 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r5.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r5;

        $r6 = virtualinvoke $r2.<org.spongycastle.crypto.params.ECPrivateKeyParameters: org.spongycastle.crypto.params.ECDomainParameters getParameters()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = $r1;

        $r7 = virtualinvoke $r2.<org.spongycastle.crypto.params.ECPrivateKeyParameters: java.math.BigInteger getD()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger d> = $r7;

        if $r4 != null goto label2;

        $r8 = virtualinvoke $r6.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r9 = virtualinvoke $r6.<org.spongycastle.crypto.params.ECDomainParameters: byte[] getSeed()>();

        $r10 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r8, $r9);

        $r11 = new java.security.spec.ECParameterSpec;

        $r12 = new java.security.spec.ECPoint;

        $r13 = virtualinvoke $r6.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r14 = virtualinvoke $r13.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r7 = virtualinvoke $r14.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r13 = virtualinvoke $r6.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r14 = virtualinvoke $r13.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r15 = virtualinvoke $r14.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r12.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r7, $r15);

        $r7 = virtualinvoke $r6.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

        $r15 = virtualinvoke $r6.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getH()>();

        $i0 = virtualinvoke $r15.<java.math.BigInteger: int intValue()>();

        specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0);

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = $r11;

     label1:
        $r16 = specialinvoke r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.asn1.DERBitString getPublicKeyDetails(org.spongycastle.jce.provider.JCEECPublicKey)>($r3);

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.asn1.DERBitString publicKey> = $r16;

        return;

     label2:
        $r8 = virtualinvoke $r4.<org.spongycastle.jce.spec.ECParameterSpec: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r9 = virtualinvoke $r4.<org.spongycastle.jce.spec.ECParameterSpec: byte[] getSeed()>();

        $r10 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r8, $r9);

        $r11 = new java.security.spec.ECParameterSpec;

        $r12 = new java.security.spec.ECPoint;

        $r13 = virtualinvoke $r4.<org.spongycastle.jce.spec.ECParameterSpec: org.spongycastle.math.ec.ECPoint getG()>();

        $r14 = virtualinvoke $r13.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r7 = virtualinvoke $r14.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r13 = virtualinvoke $r4.<org.spongycastle.jce.spec.ECParameterSpec: org.spongycastle.math.ec.ECPoint getG()>();

        $r14 = virtualinvoke $r13.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r15 = virtualinvoke $r14.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r12.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r7, $r15);

        $r7 = virtualinvoke $r4.<org.spongycastle.jce.spec.ECParameterSpec: java.math.BigInteger getN()>();

        $r15 = virtualinvoke $r4.<org.spongycastle.jce.spec.ECParameterSpec: java.math.BigInteger getH()>();

        $i0 = virtualinvoke $r15.<java.math.BigInteger: int intValue()>();

        specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0);

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = $r11;

        goto label1;
    }
    public void <init>(java.lang.String, org.spongycastle.jce.provider.JCEECPrivateKey)
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0, $r2;
        java.lang.String $r1;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r3;
        java.math.BigInteger $r4;
        java.security.spec.ECParameterSpec $r5;
        boolean $z0;
        org.spongycastle.asn1.DERBitString $r6;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.spongycastle.jce.provider.JCEECPrivateKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = "EC";

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r3;

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = $r1;

        $r4 = $r2.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger d>;

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger d> = $r4;

        $r5 = $r2.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = $r5;

        $z0 = $r2.<org.spongycastle.jce.provider.JCEECPrivateKey: boolean withCompression>;

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: boolean withCompression> = $z0;

        $r3 = $r2.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier>;

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r3;

        $r6 = $r2.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.asn1.DERBitString publicKey>;

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.asn1.DERBitString publicKey> = $r6;

        return;
    }
    public void <init>(java.lang.String, org.spongycastle.jce.spec.ECPrivateKeySpec)
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.lang.String $r1;
        org.spongycastle.jce.spec.ECPrivateKeySpec $r2;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r3;
        java.math.BigInteger $r4;
        org.spongycastle.jce.spec.ECParameterSpec $r5;
        org.spongycastle.math.ec.ECCurve $r6;
        byte[] $r7;
        java.security.spec.EllipticCurve $r8;
        java.security.spec.ECParameterSpec $r9;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.spongycastle.jce.spec.ECPrivateKeySpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = "EC";

        $r3 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r3;

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = $r1;

        $r4 = virtualinvoke $r2.<org.spongycastle.jce.spec.ECPrivateKeySpec: java.math.BigInteger getD()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger d> = $r4;

        $r5 = virtualinvoke $r2.<org.spongycastle.jce.spec.ECPrivateKeySpec: org.spongycastle.jce.spec.ECParameterSpec getParams()>();

        if $r5 == null goto label1;

        $r5 = virtualinvoke $r2.<org.spongycastle.jce.spec.ECPrivateKeySpec: org.spongycastle.jce.spec.ECParameterSpec getParams()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.jce.spec.ECParameterSpec: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r5 = virtualinvoke $r2.<org.spongycastle.jce.spec.ECPrivateKeySpec: org.spongycastle.jce.spec.ECParameterSpec getParams()>();

        $r7 = virtualinvoke $r5.<org.spongycastle.jce.spec.ECParameterSpec: byte[] getSeed()>();

        $r8 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r6, $r7);

        $r5 = virtualinvoke $r2.<org.spongycastle.jce.spec.ECPrivateKeySpec: org.spongycastle.jce.spec.ECParameterSpec getParams()>();

        $r9 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.spongycastle.jce.spec.ECParameterSpec)>($r8, $r5);

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = $r9;

        return;

     label1:
        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = null;

        return;
    }
    public void <init>(java.security.interfaces.ECPrivateKey)
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.security.interfaces.ECPrivateKey $r1;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r2;
        java.math.BigInteger $r3;
        java.lang.String $r4;
        java.security.spec.ECParameterSpec $r5;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: java.security.interfaces.ECPrivateKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = "EC";

        $r2 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r2.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r2;

        $r3 = interfaceinvoke $r1.<java.security.interfaces.ECPrivateKey: java.math.BigInteger getS()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger d> = $r3;

        $r4 = interfaceinvoke $r1.<java.security.interfaces.ECPrivateKey: java.lang.String getAlgorithm()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = $r4;

        $r5 = interfaceinvoke $r1.<java.security.interfaces.ECPrivateKey: java.security.spec.ECParameterSpec getParams()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = $r5;

        return;
    }
    void <init>(org.spongycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r1;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r2;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = "EC";

        $r2 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r2.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r2;

        specialinvoke r0.<org.spongycastle.jce.provider.JCEECPrivateKey: void populateFromPrivKeyInfo(org.spongycastle.asn1.pkcs.PrivateKeyInfo)>($r1);

        return;
    }
    private org.spongycastle.asn1.DERBitString getPublicKeyDetails(org.spongycastle.jce.provider.JCEECPublicKey)
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        org.spongycastle.jce.provider.JCEECPublicKey $r1;
        java.io.IOException r2;
        byte[] $r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r5;
        org.spongycastle.asn1.DERBitString $r6;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: org.spongycastle.jce.provider.JCEECPublicKey;

     label1:
        $r3 = virtualinvoke $r1.<org.spongycastle.jce.provider.JCEECPublicKey: byte[] getEncoded()>();

        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r3);

        $r5 = staticinvoke <org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.DERBitString getPublicKeyData()>();

     label2:
        return $r6;

     label3:
        r2 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }
    private void populateFromPrivKeyInfo(org.spongycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r1;
        org.spongycastle.asn1.sec.ECPrivateKeyStructure r2;
        org.spongycastle.asn1.x9.X962Parameters r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        org.spongycastle.asn1.ASN1Encodable $r5;
        org.spongycastle.asn1.ASN1Primitive $r6;
        boolean $z0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r7;
        org.spongycastle.asn1.x9.X9ECParameters $r8;
        org.spongycastle.crypto.params.ECDomainParameters $r9;
        org.spongycastle.math.ec.ECCurve $r10;
        byte[] $r11;
        java.security.spec.EllipticCurve $r12;
        org.spongycastle.jce.spec.ECNamedCurveSpec $r13;
        java.lang.String $r14;
        java.security.spec.ECPoint $r15;
        org.spongycastle.math.ec.ECPoint $r16;
        org.spongycastle.math.ec.ECFieldElement $r17;
        java.math.BigInteger $r18, $r19;
        org.spongycastle.asn1.ASN1Integer $r20;
        java.security.spec.ECParameterSpec $r21;
        int $i0;
        org.spongycastle.asn1.ASN1Sequence r22;
        org.spongycastle.asn1.DERBitString $r23;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        r3 = new org.spongycastle.asn1.x9.X962Parameters;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithm()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r6 = (org.spongycastle.asn1.ASN1Primitive) $r5;

        specialinvoke r3.<org.spongycastle.asn1.x9.X962Parameters: void <init>(org.spongycastle.asn1.ASN1Primitive)>($r6);

        $z0 = virtualinvoke r3.<org.spongycastle.asn1.x9.X962Parameters: boolean isNamedCurve()>();

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke r3.<org.spongycastle.asn1.x9.X962Parameters: org.spongycastle.asn1.ASN1Primitive getParameters()>();

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>($r6);

        $r8 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.ECUtil: org.spongycastle.asn1.x9.X9ECParameters getNamedCurveByOid(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r7);

        if $r8 != null goto label2;

        $r9 = staticinvoke <org.spongycastle.asn1.cryptopro.ECGOST3410NamedCurves: org.spongycastle.crypto.params.ECDomainParameters getByOID(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r7);

        $r10 = virtualinvoke $r9.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r11 = virtualinvoke $r9.<org.spongycastle.crypto.params.ECDomainParameters: byte[] getSeed()>();

        $r12 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r10, $r11);

        $r13 = new org.spongycastle.jce.spec.ECNamedCurveSpec;

        $r14 = staticinvoke <org.spongycastle.asn1.cryptopro.ECGOST3410NamedCurves: java.lang.String getName(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r7);

        $r15 = new java.security.spec.ECPoint;

        $r16 = virtualinvoke $r9.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r17 = virtualinvoke $r16.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r18 = virtualinvoke $r17.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r16 = virtualinvoke $r9.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r17 = virtualinvoke $r16.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r19 = virtualinvoke $r17.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r15.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r18, $r19);

        $r18 = virtualinvoke $r9.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

        $r19 = virtualinvoke $r9.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getH()>();

        specialinvoke $r13.<org.spongycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>($r14, $r12, $r15, $r18, $r19);

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = $r13;

     label1:
        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.ASN1Encodable parsePrivateKey()>();

        $z0 = $r5 instanceof org.spongycastle.asn1.ASN1Integer;

        if $z0 == 0 goto label5;

        $r20 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r5);

        $r18 = virtualinvoke $r20.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger d> = $r18;

        return;

     label2:
        $r10 = virtualinvoke $r8.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r11 = virtualinvoke $r8.<org.spongycastle.asn1.x9.X9ECParameters: byte[] getSeed()>();

        $r12 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r10, $r11);

        $r13 = new org.spongycastle.jce.spec.ECNamedCurveSpec;

        $r14 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.ECUtil: java.lang.String getCurveName(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r7);

        $r15 = new java.security.spec.ECPoint;

        $r16 = virtualinvoke $r8.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r17 = virtualinvoke $r16.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r18 = virtualinvoke $r17.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r16 = virtualinvoke $r8.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r17 = virtualinvoke $r16.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r19 = virtualinvoke $r17.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r15.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r18, $r19);

        $r18 = virtualinvoke $r8.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r19 = virtualinvoke $r8.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        specialinvoke $r13.<org.spongycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>($r14, $r12, $r15, $r18, $r19);

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = $r13;

        goto label1;

     label3:
        $z0 = virtualinvoke r3.<org.spongycastle.asn1.x9.X962Parameters: boolean isImplicitlyCA()>();

        if $z0 == 0 goto label4;

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = null;

        goto label1;

     label4:
        $r6 = virtualinvoke r3.<org.spongycastle.asn1.x9.X962Parameters: org.spongycastle.asn1.ASN1Primitive getParameters()>();

        $r8 = staticinvoke <org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9ECParameters getInstance(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r8.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r11 = virtualinvoke $r8.<org.spongycastle.asn1.x9.X9ECParameters: byte[] getSeed()>();

        $r12 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.EllipticCurve convertCurve(org.spongycastle.math.ec.ECCurve,byte[])>($r10, $r11);

        $r21 = new java.security.spec.ECParameterSpec;

        $r15 = new java.security.spec.ECPoint;

        $r16 = virtualinvoke $r8.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r17 = virtualinvoke $r16.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r18 = virtualinvoke $r17.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r16 = virtualinvoke $r8.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r17 = virtualinvoke $r16.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $r19 = virtualinvoke $r17.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r15.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r18, $r19);

        $r18 = virtualinvoke $r8.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r19 = virtualinvoke $r8.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        $i0 = virtualinvoke $r19.<java.math.BigInteger: int intValue()>();

        specialinvoke $r21.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r12, $r15, $r18, $i0);

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec> = $r21;

        goto label1;

     label5:
        r2 = new org.spongycastle.asn1.sec.ECPrivateKeyStructure;

        r22 = (org.spongycastle.asn1.ASN1Sequence) $r5;

        specialinvoke r2.<org.spongycastle.asn1.sec.ECPrivateKeyStructure: void <init>(org.spongycastle.asn1.ASN1Sequence)>(r22);

        $r18 = virtualinvoke r2.<org.spongycastle.asn1.sec.ECPrivateKeyStructure: java.math.BigInteger getKey()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger d> = $r18;

        $r23 = virtualinvoke r2.<org.spongycastle.asn1.sec.ECPrivateKeyStructure: org.spongycastle.asn1.DERBitString getPublicKey()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.asn1.DERBitString publicKey> = $r23;

        return;
    }
    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.io.ObjectInputStream $r1;
        java.lang.Object $r2;
        byte[] $r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r5;
        java.lang.String $r6;
        boolean $z0;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r7;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: java.io.ObjectInputStream;

        $r2 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (byte[]) $r2;

        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r3);

        $r5 = staticinvoke <org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)>($r4);

        specialinvoke r0.<org.spongycastle.jce.provider.JCEECPrivateKey: void populateFromPrivKeyInfo(org.spongycastle.asn1.pkcs.PrivateKeyInfo)>($r5);

        $r2 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r6 = (java.lang.String) $r2;

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm> = $r6;

        $z0 = virtualinvoke $r1.<java.io.ObjectInputStream: boolean readBoolean()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: boolean withCompression> = $z0;

        $r7 = new org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl;

        specialinvoke $r7.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void <init>()>();

        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier> = $r7;

        $r7 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier>;

        virtualinvoke $r7.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void readObject(java.io.ObjectInputStream)>($r1);

        return;
    }
    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.io.ObjectOutputStream $r1;
        byte[] $r2;
        java.lang.String $r3;
        boolean $z0;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r4;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        $r2 = virtualinvoke r0.<org.spongycastle.jce.provider.JCEECPrivateKey: byte[] getEncoded()>();

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        $r3 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm>;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);

        $z0 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: boolean withCompression>;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void writeBoolean(boolean)>($z0);

        $r4 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier>;

        virtualinvoke $r4.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void writeObject(java.io.ObjectOutputStream)>($r1);

        return;
    }
    org.spongycastle.jce.spec.ECParameterSpec engineGetSpec()
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        boolean $z0;
        java.security.spec.ECParameterSpec $r1;
        org.spongycastle.jce.spec.ECParameterSpec $r2;
        org.spongycastle.jcajce.provider.config.ProviderConfiguration $r3;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        if $r1 == null goto label1;

        $r1 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        $z0 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: boolean withCompression>;

        $r2 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.jce.spec.ECParameterSpec convertSpec(java.security.spec.ECParameterSpec,boolean)>($r1, $z0);

        return $r2;

     label1:
        $r3 = <org.spongycastle.jce.provider.BouncyCastleProvider: org.spongycastle.jcajce.provider.config.ProviderConfiguration CONFIGURATION>;

        $r2 = interfaceinvoke $r3.<org.spongycastle.jcajce.provider.config.ProviderConfiguration: org.spongycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        return $r2;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        java.math.BigInteger $r3, $r4;
        org.spongycastle.jce.spec.ECParameterSpec $r5, $r6;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.spongycastle.jce.provider.JCEECPrivateKey;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.jce.provider.JCEECPrivateKey) $r1;

        $r3 = virtualinvoke r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger getD()>();

        $r4 = virtualinvoke r2.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger getD()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jce.spec.ECParameterSpec engineGetSpec()>();

        $r6 = virtualinvoke r2.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jce.spec.ECParameterSpec engineGetSpec()>();

        $z0 = virtualinvoke $r5.<org.spongycastle.jce.spec.ECParameterSpec: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public java.lang.String getAlgorithm()
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.lang.String r1;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        r1 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r3;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier>;

        $r2 = virtualinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: org.spongycastle.asn1.ASN1Encodable getBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        return $r2;
    }
    public java.util.Enumeration getBagAttributeKeys()
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.util.Enumeration $r1;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r2;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r2 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier>;

        $r1 = virtualinvoke $r2.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: java.util.Enumeration getBagAttributeKeys()>();

        return $r1;
    }
    public java.math.BigInteger getD()
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        r1 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger d>;

        return r1;
    }
    public byte[] getEncoded()
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        org.spongycastle.asn1.x9.X9ECParameters r1;
        java.io.IOException r2;
        java.security.spec.ECParameterSpec $r3;
        boolean $z0;
        org.spongycastle.jce.spec.ECNamedCurveSpec $r4;
        java.lang.String $r5;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r6, r7;
        org.spongycastle.asn1.x9.X962Parameters r8;
        org.spongycastle.asn1.DERBitString $r9;
        org.spongycastle.asn1.sec.ECPrivateKeyStructure r10;
        java.math.BigInteger $r11, $r21;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo r12;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r13;
        org.spongycastle.asn1.ASN1Primitive $r14;
        byte[] $r15;
        org.spongycastle.asn1.DERNull $r16;
        java.security.spec.EllipticCurve $r17;
        org.spongycastle.math.ec.ECCurve $r18;
        java.security.spec.ECPoint $r19;
        org.spongycastle.math.ec.ECPoint $r20;
        int $i0;
        long $l1;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r3 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        $z0 = $r3 instanceof org.spongycastle.jce.spec.ECNamedCurveSpec;

        if $z0 == 0 goto label09;

        $r3 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        $r4 = (org.spongycastle.jce.spec.ECNamedCurveSpec) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.jce.spec.ECNamedCurveSpec: java.lang.String getName()>();

        $r6 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.ECUtil: org.spongycastle.asn1.ASN1ObjectIdentifier getNamedCurveOid(java.lang.String)>($r5);

        r7 = $r6;

        if $r6 != null goto label01;

        r7 = new org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        $r4 = (org.spongycastle.jce.spec.ECNamedCurveSpec) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.jce.spec.ECNamedCurveSpec: java.lang.String getName()>();

        specialinvoke r7.<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>($r5);

     label01:
        r8 = new org.spongycastle.asn1.x9.X962Parameters;

        specialinvoke r8.<org.spongycastle.asn1.x9.X962Parameters: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)>(r7);

     label02:
        $r9 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.asn1.DERBitString publicKey>;

        if $r9 == null goto label11;

        r10 = new org.spongycastle.asn1.sec.ECPrivateKeyStructure;

        $r11 = virtualinvoke r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger getS()>();

        $r9 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.asn1.DERBitString publicKey>;

        specialinvoke r10.<org.spongycastle.asn1.sec.ECPrivateKeyStructure: void <init>(java.math.BigInteger,org.spongycastle.asn1.DERBitString,org.spongycastle.asn1.ASN1Encodable)>($r11, $r9, r8);

     label03:
        $r5 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.lang.String algorithm>;

     label04:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("ECGOST3410");

     label05:
        if $z0 == 0 goto label12;

        r12 = new org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        $r13 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r6 = <org.spongycastle.asn1.cryptopro.CryptoProObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier gostR3410_2001>;

     label06:
        $r14 = virtualinvoke r8.<org.spongycastle.asn1.x9.X962Parameters: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        specialinvoke $r13.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r6, $r14);

        $r14 = virtualinvoke r10.<org.spongycastle.asn1.sec.ECPrivateKeyStructure: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        specialinvoke r12.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r13, $r14);

     label07:
        $r15 = virtualinvoke r12.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: byte[] getEncoded(java.lang.String)>("DER");

     label08:
        return $r15;

     label09:
        $r3 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        if $r3 != null goto label10;

        r8 = new org.spongycastle.asn1.x9.X962Parameters;

        $r16 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        specialinvoke r8.<org.spongycastle.asn1.x9.X962Parameters: void <init>(org.spongycastle.asn1.ASN1Null)>($r16);

        goto label02;

     label10:
        $r3 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        $r17 = virtualinvoke $r3.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r18 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.math.ec.ECCurve convertCurve(java.security.spec.EllipticCurve)>($r17);

        r1 = new org.spongycastle.asn1.x9.X9ECParameters;

        $r3 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        $r19 = virtualinvoke $r3.<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()>();

        $z0 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: boolean withCompression>;

        $r20 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.math.ec.ECPoint convertPoint(org.spongycastle.math.ec.ECCurve,java.security.spec.ECPoint,boolean)>($r18, $r19, $z0);

        $r3 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        $r11 = virtualinvoke $r3.<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()>();

        $r3 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        $i0 = virtualinvoke $r3.<java.security.spec.ECParameterSpec: int getCofactor()>();

        $l1 = (long) $i0;

        $r21 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        $r3 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        $r17 = virtualinvoke $r3.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r15 = virtualinvoke $r17.<java.security.spec.EllipticCurve: byte[] getSeed()>();

        specialinvoke r1.<org.spongycastle.asn1.x9.X9ECParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r18, $r20, $r11, $r21, $r15);

        r8 = new org.spongycastle.asn1.x9.X962Parameters;

        specialinvoke r8.<org.spongycastle.asn1.x9.X962Parameters: void <init>(org.spongycastle.asn1.x9.X9ECParameters)>(r1);

        goto label02;

     label11:
        r10 = new org.spongycastle.asn1.sec.ECPrivateKeyStructure;

        $r11 = virtualinvoke r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger getS()>();

        specialinvoke r10.<org.spongycastle.asn1.sec.ECPrivateKeyStructure: void <init>(java.math.BigInteger,org.spongycastle.asn1.ASN1Encodable)>($r11, r8);

        goto label03;

     label12:
        r12 = new org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        $r13 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r6 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_ecPublicKey>;

     label13:
        $r14 = virtualinvoke r8.<org.spongycastle.asn1.x9.X962Parameters: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        specialinvoke $r13.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r6, $r14);

        $r14 = virtualinvoke r10.<org.spongycastle.asn1.sec.ECPrivateKeyStructure: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        specialinvoke r12.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r13, $r14);

     label14:
        goto label07;

     label15:
        r2 := @caughtexception;

        return null;

        catch java.io.IOException from label04 to label05 with label15;
        catch java.io.IOException from label06 to label08 with label15;
        catch java.io.IOException from label13 to label14 with label15;
    }
    public java.lang.String getFormat()
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        return "PKCS#8";
    }
    public org.spongycastle.jce.spec.ECParameterSpec getParameters()
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        boolean $z0;
        org.spongycastle.jce.spec.ECParameterSpec $r1;
        java.security.spec.ECParameterSpec $r2;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r2 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        $z0 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: boolean withCompression>;

        $r1 = staticinvoke <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: org.spongycastle.jce.spec.ECParameterSpec convertSpec(java.security.spec.ECParameterSpec,boolean)>($r2, $z0);

        return $r1;
    }
    public java.security.spec.ECParameterSpec getParams()
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.security.spec.ECParameterSpec r1;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        r1 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.security.spec.ECParameterSpec ecSpec>;

        return r1;
    }
    public java.math.BigInteger getS()
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        r1 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger d>;

        return r1;
    }
    public int hashCode()
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.math.BigInteger $r1;
        int $i0, $i1;
        org.spongycastle.jce.spec.ECParameterSpec $r2;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 = virtualinvoke r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger getD()>();

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $r2 = virtualinvoke r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jce.spec.ECParameterSpec engineGetSpec()>();

        $i1 = virtualinvoke $r2.<org.spongycastle.jce.spec.ECParameterSpec: int hashCode()>();

        $i0 = $i0 ^ $i1;

        return $i0;
    }
    public void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl $r3;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1Encodable;

        $r3 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl attrCarrier>;

        virtualinvoke $r3.<org.spongycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl: void setBagAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, $r2);

        return;
    }
    public void setPointFormat(java.lang.String)
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        $r1 := @parameter0: java.lang.String;

        $r2 = "UNCOMPRESSED";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        r0.<org.spongycastle.jce.provider.JCEECPrivateKey: boolean withCompression> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    public java.lang.String toString()
    {
        org.spongycastle.jce.provider.JCEECPrivateKey r0;
        java.lang.StringBuffer r1, $r3;
        java.lang.String $r2, $r5;
        java.math.BigInteger $r4;

        r0 := @this: org.spongycastle.jce.provider.JCEECPrivateKey;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = staticinvoke <org.spongycastle.util.Strings: java.lang.String lineSeparator()>();

        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("EC Private Key");

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("             S: ");

        $r4 = r0.<org.spongycastle.jce.provider.JCEECPrivateKey: java.math.BigInteger d>;

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
