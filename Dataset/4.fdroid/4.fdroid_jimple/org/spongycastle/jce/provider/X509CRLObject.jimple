org.spongycastle.jce.provider.X509CRLObject extends java.security.cert.X509CRL
private org.spongycastle.asn1.x509.CertificateList c
private int hashCodeValue
private boolean isHashCodeSet
private boolean isIndirect
private java.lang.String sigAlgName
private byte[] sigAlgParams
    public void <init>(org.spongycastle.asn1.x509.CertificateList) throws java.security.cert.CRLException
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        org.spongycastle.asn1.x509.CertificateList $r1;
        java.lang.Exception r2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        java.lang.String $r4;
        org.spongycastle.asn1.ASN1Encodable $r5;
        org.spongycastle.asn1.ASN1Primitive $r6;
        byte[] $r7;
        boolean $z0;
        java.security.cert.CRLException $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: org.spongycastle.asn1.x509.CertificateList;

        specialinvoke r0.<java.security.cert.X509CRL: void <init>()>();

        r0.<org.spongycastle.jce.provider.X509CRLObject: boolean isHashCodeSet> = 0;

        r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c> = $r1;

     label1:
        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r4 = staticinvoke <org.spongycastle.jce.provider.X509SignatureUtil: java.lang.String getSignatureName(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r3);

        r0.<org.spongycastle.jce.provider.X509CRLObject: java.lang.String sigAlgName> = $r4;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

     label2:
        if $r5 == null goto label6;

     label3:
        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r6 = interfaceinvoke $r5.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded(java.lang.String)>("DER");

        r0.<org.spongycastle.jce.provider.X509CRLObject: byte[] sigAlgParams> = $r7;

     label4:
        $z0 = staticinvoke <org.spongycastle.jce.provider.X509CRLObject: boolean isIndirectCRL(java.security.cert.X509CRL)>(r0);

        r0.<org.spongycastle.jce.provider.X509CRLObject: boolean isIndirect> = $z0;

     label5:
        return;

     label6:
        r0.<org.spongycastle.jce.provider.X509CRLObject: byte[] sigAlgParams> = null;

     label7:
        goto label4;

     label8:
        r2 := @caughtexception;

        $r8 = new java.security.cert.CRLException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CRL contents invalid: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.cert.CRLException: void <init>(java.lang.String)>($r4);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }
    private void doVerify(java.security.PublicKey, java.security.Signature) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.SignatureException
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.security.PublicKey $r1;
        java.security.Signature $r2;
        org.spongycastle.asn1.x509.CertificateList $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4, $r6;
        org.spongycastle.asn1.x509.TBSCertList $r5;
        boolean $z0;
        java.security.cert.CRLException $r7;
        byte[] $r8;
        java.security.SignatureException $r9;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: java.security.PublicKey;

        $r2 := @parameter1: java.security.Signature;

        $r3 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.TBSCertList getTBSCertList()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.TBSCertList: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignature()>();

        $z0 = virtualinvoke $r4.<org.spongycastle.asn1.x509.AlgorithmIdentifier: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r7 = new java.security.cert.CRLException;

        specialinvoke $r7.<java.security.cert.CRLException: void <init>(java.lang.String)>("Signature algorithm on CertificateList does not match TBSCertList.");

        throw $r7;

     label1:
        virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1);

        $r8 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: byte[] getTBSCertList()>();

        virtualinvoke $r2.<java.security.Signature: void update(byte[])>($r8);

        $r8 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: byte[] getSignature()>();

        $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8);

        if $z0 != 0 goto label2;

        $r9 = new java.security.SignatureException;

        specialinvoke $r9.<java.security.SignatureException: void <init>(java.lang.String)>("CRL does not verify with supplied public key.");

        throw $r9;

     label2:
        return;
    }
    private java.util.Set getExtensionOIDs(boolean)
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        boolean $z0, $z1;
        int $i0;
        org.spongycastle.asn1.x509.CertificateList $r1;
        org.spongycastle.asn1.x509.TBSCertList $r2;
        org.spongycastle.asn1.x509.Extensions $r3;
        java.util.HashSet r4;
        java.util.Enumeration $r5;
        java.lang.Object $r6;
        org.spongycastle.asn1.ASN1ObjectIdentifier r7;
        org.spongycastle.asn1.x509.Extension $r8;
        java.lang.String $r9;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $z0 := @parameter0: boolean;

        $i0 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: int getVersion()>();

        if $i0 != 2 goto label2;

        $r1 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.TBSCertList getTBSCertList()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.TBSCertList: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        if $r3 == null goto label2;

        r4 = new java.util.HashSet;

        specialinvoke r4.<java.util.HashSet: void <init>()>();

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Extensions: java.util.Enumeration oids()>();

     label1:
        $z1 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r6;

        $r8 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>(r7);

        $z1 = virtualinvoke $r8.<org.spongycastle.asn1.x509.Extension: boolean isCritical()>();

        if $z0 != $z1 goto label1;

        $r9 = virtualinvoke r7.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        return null;

     label3:
        return r4;
    }
    public static boolean isIndirectCRL(java.security.cert.X509CRL) throws java.security.cert.CRLException
    {
        java.security.cert.X509CRL $r0;
        java.lang.Exception r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        java.lang.String $r3;
        byte[] $r4;
        org.spongycastle.asn1.ASN1OctetString $r5;
        org.spongycastle.asn1.x509.IssuingDistributionPoint $r6;
        boolean $z0;
        org.spongycastle.jce.provider.ExtCRLException $r7;

        $r0 := @parameter0: java.security.cert.X509CRL;

        $r2 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier issuingDistributionPoint>;

     label1:
        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r4 = virtualinvoke $r0.<java.security.cert.X509CRL: byte[] getExtensionValue(java.lang.String)>($r3);

     label2:
        if $r4 == null goto label5;

     label3:
        $r5 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r4);

        $r4 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r6 = staticinvoke <org.spongycastle.asn1.x509.IssuingDistributionPoint: org.spongycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>($r4);

        $z0 = virtualinvoke $r6.<org.spongycastle.asn1.x509.IssuingDistributionPoint: boolean isIndirectCRL()>();

     label4:
        if $z0 == 0 goto label5;

        return 1;

     label5:
        return 0;

     label6:
        r1 := @caughtexception;

        $r7 = new org.spongycastle.jce.provider.ExtCRLException;

        specialinvoke $r7.<org.spongycastle.jce.provider.ExtCRLException: void <init>(java.lang.String,java.lang.Throwable)>("Exception reading IssuingDistributionPoint", r1);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }
    private java.util.Set loadCRLEntries()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        org.spongycastle.jce.provider.X509CRLEntryObject r1;
        java.util.HashSet r2;
        org.spongycastle.asn1.x509.CertificateList $r3;
        java.util.Enumeration $r4;
        org.spongycastle.asn1.x500.X500Name r5;
        boolean $z0;
        java.lang.Object $r6;
        org.spongycastle.asn1.x509.TBSCertList$CRLEntry r7;
        org.spongycastle.asn1.x509.Extensions $r8;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r9;
        org.spongycastle.asn1.x509.Extension $r10;
        org.spongycastle.asn1.ASN1Encodable $r11;
        org.spongycastle.asn1.x509.GeneralNames $r12;
        org.spongycastle.asn1.x509.GeneralName[] $r13;
        org.spongycastle.asn1.x509.GeneralName $r14;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $r3 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.CertificateList: java.util.Enumeration getRevokedCertificateEnumeration()>();

        r5 = null;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (org.spongycastle.asn1.x509.TBSCertList$CRLEntry) $r6;

        r1 = new org.spongycastle.jce.provider.X509CRLEntryObject;

        $z0 = r0.<org.spongycastle.jce.provider.X509CRLObject: boolean isIndirect>;

        specialinvoke r1.<org.spongycastle.jce.provider.X509CRLEntryObject: void <init>(org.spongycastle.asn1.x509.TBSCertList$CRLEntry,boolean,org.spongycastle.asn1.x500.X500Name)>(r7, $z0, r5);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $z0 = r0.<org.spongycastle.jce.provider.X509CRLObject: boolean isIndirect>;

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r7.<org.spongycastle.asn1.x509.TBSCertList$CRLEntry: boolean hasExtensions()>();

        if $z0 == 0 goto label1;

        $r8 = virtualinvoke r7.<org.spongycastle.asn1.x509.TBSCertList$CRLEntry: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        $r9 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier certificateIssuer>;

        $r10 = virtualinvoke $r8.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r9);

        if $r10 == null goto label1;

        $r11 = virtualinvoke $r10.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1Encodable getParsedValue()>();

        $r12 = staticinvoke <org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] getNames()>();

        $r14 = $r13[0];

        $r11 = virtualinvoke $r14.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        r5 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r11);

        goto label1;

     label2:
        return r2;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.jce.provider.X509CRLObject r0, r2;
        java.lang.Object $r1;
        boolean z0;
        int $i0, $i1;
        org.spongycastle.asn1.x509.CertificateList $r3, $r4;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        z0 = $r1 instanceof java.security.cert.X509CRL;

        if z0 == 0 goto label4;

        z0 = $r1 instanceof org.spongycastle.jce.provider.X509CRLObject;

        if z0 == 0 goto label3;

        r2 = (org.spongycastle.jce.provider.X509CRLObject) $r1;

        z0 = r0.<org.spongycastle.jce.provider.X509CRLObject: boolean isHashCodeSet>;

        if z0 == 0 goto label2;

        z0 = r2.<org.spongycastle.jce.provider.X509CRLObject: boolean isHashCodeSet>;

        if z0 == 0 goto label2;

        $i1 = r2.<org.spongycastle.jce.provider.X509CRLObject: int hashCodeValue>;

        $i0 = r0.<org.spongycastle.jce.provider.X509CRLObject: int hashCodeValue>;

        if $i1 != $i0 goto label4;

     label2:
        $r3 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r4 = r2.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        z0 = virtualinvoke $r3.<org.spongycastle.asn1.x509.CertificateList: boolean equals(java.lang.Object)>($r4);

        return z0;

     label3:
        z0 = specialinvoke r0.<java.security.cert.X509CRL: boolean equals(java.lang.Object)>($r1);

        return z0;

     label4:
        return 0;
    }
    public java.util.Set getCriticalExtensionOIDs()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.util.Set $r1;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 = specialinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.util.Set getExtensionOIDs(boolean)>(1);

        return $r1;
    }
    public byte[] getEncoded() throws java.security.cert.CRLException
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.io.IOException r1;
        org.spongycastle.asn1.x509.CertificateList $r2;
        byte[] $r3;
        java.security.cert.CRLException $r4;
        java.lang.String $r5;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r2 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

     label1:
        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.CertificateList: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        $r4 = new java.security.cert.CRLException;

        $r5 = virtualinvoke r1.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r4.<java.security.cert.CRLException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public byte[] getExtensionValue(java.lang.String)
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.lang.String $r1;
        java.lang.Exception r2;
        org.spongycastle.asn1.x509.CertificateList $r3;
        org.spongycastle.asn1.x509.TBSCertList $r4;
        org.spongycastle.asn1.x509.Extensions $r5;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r6;
        org.spongycastle.asn1.x509.Extension $r7;
        org.spongycastle.asn1.ASN1OctetString $r8;
        byte[] $r9;
        java.lang.IllegalStateException $r10;
        java.lang.StringBuilder $r11;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.TBSCertList getTBSCertList()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x509.TBSCertList: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        if $r5 == null goto label4;

        $r6 = new org.spongycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke $r6.<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>($r1);

        $r7 = virtualinvoke $r5.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r6);

        if $r7 == null goto label4;

     label1:
        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1OctetString getExtnValue()>();

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1OctetString: byte[] getEncoded()>();

     label2:
        return $r9;

     label3:
        r2 := @caughtexception;

        $r10 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error parsing ");

        $r1 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r10;

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public java.security.Principal getIssuerDN()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        org.spongycastle.jce.X509Principal $r1;
        org.spongycastle.asn1.x509.CertificateList $r2;
        org.spongycastle.asn1.x500.X500Name $r3;
        org.spongycastle.asn1.ASN1Primitive $r4;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 = new org.spongycastle.jce.X509Principal;

        $r2 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x500.X500Name getIssuer()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r3 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r4);

        specialinvoke $r1.<org.spongycastle.jce.X509Principal: void <init>(org.spongycastle.asn1.x500.X500Name)>($r3);

        return $r1;
    }
    public javax.security.auth.x500.X500Principal getIssuerX500Principal()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.io.IOException r1;
        javax.security.auth.x500.X500Principal $r2;
        org.spongycastle.asn1.x509.CertificateList $r3;
        org.spongycastle.asn1.x500.X500Name $r4;
        byte[] $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r2 = new javax.security.auth.x500.X500Principal;

        $r3 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

     label1:
        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x500.X500Name getIssuer()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x500.X500Name: byte[] getEncoded()>();

        specialinvoke $r2.<javax.security.auth.x500.X500Principal: void <init>(byte[])>($r5);

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("can\'t encode issuer DN");

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public java.util.Date getNextUpdate()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        org.spongycastle.asn1.x509.CertificateList $r1;
        org.spongycastle.asn1.x509.Time $r2;
        java.util.Date $r3;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.Time getNextUpdate()>();

        if $r2 == null goto label1;

        $r1 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.Time getNextUpdate()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Time: java.util.Date getDate()>();

        return $r3;

     label1:
        return null;
    }
    public java.util.Set getNonCriticalExtensionOIDs()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.util.Set $r1;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 = specialinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.util.Set getExtensionOIDs(boolean)>(0);

        return $r1;
    }
    public java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.math.BigInteger $r1, $r8;
        org.spongycastle.asn1.x509.CertificateList $r2;
        java.util.Enumeration $r3;
        org.spongycastle.asn1.x500.X500Name r4;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.asn1.x509.TBSCertList$CRLEntry r6;
        org.spongycastle.asn1.ASN1Integer $r7;
        org.spongycastle.jce.provider.X509CRLEntryObject $r9;
        org.spongycastle.asn1.x509.Extensions $r10;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r11;
        org.spongycastle.asn1.x509.Extension $r12;
        org.spongycastle.asn1.ASN1Encodable $r13;
        org.spongycastle.asn1.x509.GeneralNames $r14;
        org.spongycastle.asn1.x509.GeneralName[] $r15;
        org.spongycastle.asn1.x509.GeneralName $r16;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.CertificateList: java.util.Enumeration getRevokedCertificateEnumeration()>();

        r4 = null;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (org.spongycastle.asn1.x509.TBSCertList$CRLEntry) $r5;

        $r7 = virtualinvoke r6.<org.spongycastle.asn1.x509.TBSCertList$CRLEntry: org.spongycastle.asn1.ASN1Integer getUserCertificate()>();

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $z0 = virtualinvoke $r1.<java.math.BigInteger: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        $r9 = new org.spongycastle.jce.provider.X509CRLEntryObject;

        $z0 = r0.<org.spongycastle.jce.provider.X509CRLObject: boolean isIndirect>;

        specialinvoke $r9.<org.spongycastle.jce.provider.X509CRLEntryObject: void <init>(org.spongycastle.asn1.x509.TBSCertList$CRLEntry,boolean,org.spongycastle.asn1.x500.X500Name)>(r6, $z0, r4);

        return $r9;

     label2:
        $z0 = r0.<org.spongycastle.jce.provider.X509CRLObject: boolean isIndirect>;

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r6.<org.spongycastle.asn1.x509.TBSCertList$CRLEntry: boolean hasExtensions()>();

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r6.<org.spongycastle.asn1.x509.TBSCertList$CRLEntry: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        $r11 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier certificateIssuer>;

        $r12 = virtualinvoke $r10.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r11);

        if $r12 == null goto label1;

        $r13 = virtualinvoke $r12.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1Encodable getParsedValue()>();

        $r14 = staticinvoke <org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] getNames()>();

        $r16 = $r15[0];

        $r13 = virtualinvoke $r16.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        r4 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r13);

        goto label1;

     label3:
        return null;
    }
    public java.util.Set getRevokedCertificates()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.util.Set $r1;
        boolean $z0;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 = specialinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.util.Set loadCRLEntries()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r1;

     label1:
        return null;
    }
    public java.lang.String getSigAlgName()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.lang.String r1;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        r1 = r0.<org.spongycastle.jce.provider.X509CRLObject: java.lang.String sigAlgName>;

        return r1;
    }
    public java.lang.String getSigAlgOID()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        org.spongycastle.asn1.x509.CertificateList $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        java.lang.String $r4;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        return $r4;
    }
    public byte[] getSigAlgParams()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        int $i0;
        byte[] $r1, $r2;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CRLObject: byte[] sigAlgParams>;

        if $r1 == null goto label1;

        $r1 = r0.<org.spongycastle.jce.provider.X509CRLObject: byte[] sigAlgParams>;

        $i0 = lengthof $r1;

        $r1 = newarray (byte)[$i0];

        $r2 = r0.<org.spongycastle.jce.provider.X509CRLObject: byte[] sigAlgParams>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        return $r1;

     label1:
        return null;
    }
    public byte[] getSignature()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        org.spongycastle.asn1.x509.CertificateList $r1;
        org.spongycastle.asn1.DERBitString $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.DERBitString getSignature()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        return $r3;
    }
    public byte[] getTBSCertList() throws java.security.cert.CRLException
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.io.IOException r1;
        org.spongycastle.asn1.x509.CertificateList $r2;
        org.spongycastle.asn1.x509.TBSCertList $r3;
        byte[] $r4;
        java.security.cert.CRLException $r5;
        java.lang.String $r6;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r2 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

     label1:
        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.TBSCertList getTBSCertList()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.TBSCertList: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r4;

     label3:
        r1 := @caughtexception;

        $r5 = new java.security.cert.CRLException;

        $r6 = virtualinvoke r1.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r5.<java.security.cert.CRLException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public java.util.Date getThisUpdate()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        org.spongycastle.asn1.x509.CertificateList $r1;
        org.spongycastle.asn1.x509.Time $r2;
        java.util.Date $r3;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.Time getThisUpdate()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Time: java.util.Date getDate()>();

        return $r3;
    }
    public int getVersion()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        int $i0;
        org.spongycastle.asn1.x509.CertificateList $r1;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.x509.CertificateList: int getVersionNumber()>();

        return $i0;
    }
    public boolean hasUnsupportedCriticalExtension()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.util.Set $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.util.Set getCriticalExtensionOIDs()>();

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        interfaceinvoke $r1.<java.util.Set: boolean remove(java.lang.Object)>($r2);

        $r2 = <org.spongycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String DELTA_CRL_INDICATOR>;

        interfaceinvoke $r1.<java.util.Set: boolean remove(java.lang.Object)>($r2);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public int hashCode()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $z0 = r0.<org.spongycastle.jce.provider.X509CRLObject: boolean isHashCodeSet>;

        if $z0 != 0 goto label1;

        r0.<org.spongycastle.jce.provider.X509CRLObject: boolean isHashCodeSet> = 1;

        $i0 = specialinvoke r0.<java.security.cert.X509CRL: int hashCode()>();

        r0.<org.spongycastle.jce.provider.X509CRLObject: int hashCodeValue> = $i0;

     label1:
        $i0 = r0.<org.spongycastle.jce.provider.X509CRLObject: int hashCodeValue>;

        return $i0;
    }
    public boolean isRevoked(java.security.cert.Certificate)
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.security.cert.CertificateEncodingException r1;
        java.security.cert.Certificate r2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.RuntimeException $r4;
        org.spongycastle.asn1.x509.CertificateList $r5;
        java.util.Enumeration $r6;
        org.spongycastle.asn1.x500.X500Name $r7, $r23;
        java.security.cert.X509Certificate $r8;
        java.math.BigInteger $r9, $r20;
        java.lang.Object $r10;
        org.spongycastle.asn1.x509.TBSCertList$CRLEntry $r11;
        org.spongycastle.asn1.x509.Extensions $r12;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r13;
        org.spongycastle.asn1.x509.Extension $r14;
        org.spongycastle.asn1.ASN1Encodable $r15;
        org.spongycastle.asn1.x509.GeneralNames $r16;
        org.spongycastle.asn1.x509.GeneralName[] $r17;
        org.spongycastle.asn1.x509.GeneralName $r18;
        org.spongycastle.asn1.ASN1Integer $r19;
        javax.security.auth.x500.X500Principal $r21;
        byte[] $r22;
        org.spongycastle.asn1.x509.Certificate $r24;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        r2 := @parameter0: java.security.cert.Certificate;

        $r3 = virtualinvoke r2.<java.security.cert.Certificate: java.lang.String getType()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("X.509");

        if $z0 != 0 goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("X.509 CRL used with non X.509 Cert");

        throw $r4;

     label1:
        $r5 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.CertificateList: java.util.Enumeration getRevokedCertificateEnumeration()>();

        $r5 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r7 = virtualinvoke $r5.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x500.X500Name getIssuer()>();

        if $r6 == null goto label9;

        $r8 = (java.security.cert.X509Certificate) r2;

        $r9 = virtualinvoke $r8.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label9;

        $r10 = interfaceinvoke $r6.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r11 = staticinvoke <org.spongycastle.asn1.x509.TBSCertList$CRLEntry: org.spongycastle.asn1.x509.TBSCertList$CRLEntry getInstance(java.lang.Object)>($r10);

        $z0 = r0.<org.spongycastle.jce.provider.X509CRLObject: boolean isIndirect>;

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r11.<org.spongycastle.asn1.x509.TBSCertList$CRLEntry: boolean hasExtensions()>();

        if $z0 == 0 goto label3;

        $r12 = virtualinvoke $r11.<org.spongycastle.asn1.x509.TBSCertList$CRLEntry: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        $r13 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier certificateIssuer>;

        $r14 = virtualinvoke $r12.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r13);

        if $r14 == null goto label3;

        $r15 = virtualinvoke $r14.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1Encodable getParsedValue()>();

        $r16 = staticinvoke <org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] getNames()>();

        $r18 = $r17[0];

        $r15 = virtualinvoke $r18.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r7 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r15);

     label3:
        $r19 = virtualinvoke $r11.<org.spongycastle.asn1.x509.TBSCertList$CRLEntry: org.spongycastle.asn1.ASN1Integer getUserCertificate()>();

        $r20 = virtualinvoke $r19.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $z0 = virtualinvoke $r20.<java.math.BigInteger: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label2;

        $z0 = r2 instanceof java.security.cert.X509Certificate;

        if $z0 == 0 goto label5;

        $r8 = (java.security.cert.X509Certificate) r2;

        $r21 = virtualinvoke $r8.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r22 = virtualinvoke $r21.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        $r23 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r22);

     label4:
        $z0 = virtualinvoke $r7.<org.spongycastle.asn1.x500.X500Name: boolean equals(java.lang.Object)>($r23);

        if $z0 != 0 goto label8;

        return 0;

     label5:
        $r22 = virtualinvoke r2.<java.security.cert.Certificate: byte[] getEncoded()>();

        $r24 = staticinvoke <org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Certificate getInstance(java.lang.Object)>($r22);

        $r23 = virtualinvoke $r24.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x500.X500Name getIssuer()>();

     label6:
        goto label4;

     label7:
        r1 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Cannot process certificate");

        throw $r4;

     label8:
        return 1;

     label9:
        return 0;

        catch java.security.cert.CertificateEncodingException from label5 to label6 with label7;
    }
    public java.lang.String toString()
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.lang.StringBuffer r1, $r5;
        org.spongycastle.asn1.ASN1InputStream r2;
        java.lang.Exception r3;
        java.lang.String $r4, $r8;
        int $i0, $i1;
        java.security.Principal $r6;
        java.util.Date $r7;
        byte[] $r9, $r10;
        org.spongycastle.asn1.x509.CertificateList $r11;
        org.spongycastle.asn1.x509.TBSCertList $r12;
        org.spongycastle.asn1.x509.Extensions $r13;
        java.util.Enumeration $r14;
        boolean $z0;
        java.lang.Object $r15;
        org.spongycastle.asn1.ASN1ObjectIdentifier r16, $r19;
        org.spongycastle.asn1.x509.Extension $r17;
        org.spongycastle.asn1.ASN1OctetString $r18;
        org.spongycastle.asn1.x509.CRLNumber $r20;
        org.spongycastle.asn1.ASN1Primitive $r21;
        org.spongycastle.asn1.ASN1Integer $r22;
        java.math.BigInteger $r23;
        java.lang.StringBuilder $r24;
        org.spongycastle.asn1.x509.IssuingDistributionPoint $r25;
        org.spongycastle.asn1.x509.CRLDistPoint $r26;
        java.util.Set $r27;
        java.util.Iterator $r28;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        $r4 = staticinvoke <org.spongycastle.util.Strings: java.lang.String lineSeparator()>();

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              Version: ");

        $i0 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: int getVersion()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("             IssuerDN: ");

        $r6 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.security.Principal getIssuerDN()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("          This update: ");

        $r7 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.util.Date getThisUpdate()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("          Next update: ");

        $r7 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.util.Date getNextUpdate()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Signature Algorithm: ");

        $r8 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.lang.String getSigAlgName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r9 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: byte[] getSignature()>();

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("            Signature: ");

        $r8 = new java.lang.String;

        $r10 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>($r9, 0, 20);

        specialinvoke $r8.<java.lang.String: void <init>(byte[])>($r10);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $i0 = 20;

     label01:
        $i1 = lengthof $r9;

        if $i0 >= $i1 goto label04;

        $i1 = lengthof $r9;

        $i1 = $i1 + -20;

        if $i0 >= $i1 goto label03;

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("                       ");

        $r8 = new java.lang.String;

        $r10 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>($r9, $i0, 20);

        specialinvoke $r8.<java.lang.String: void <init>(byte[])>($r10);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label02:
        $i0 = $i0 + 20;

        goto label01;

     label03:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("                       ");

        $r8 = new java.lang.String;

        $i1 = lengthof $r9;

        $i1 = $i1 - $i0;

        $r10 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>($r9, $i0, $i1);

        specialinvoke $r8.<java.lang.String: void <init>(byte[])>($r10);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label02;

     label04:
        $r11 = r0.<org.spongycastle.jce.provider.X509CRLObject: org.spongycastle.asn1.x509.CertificateList c>;

        $r12 = virtualinvoke $r11.<org.spongycastle.asn1.x509.CertificateList: org.spongycastle.asn1.x509.TBSCertList getTBSCertList()>();

        $r13 = virtualinvoke $r12.<org.spongycastle.asn1.x509.TBSCertList: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        if $r13 == null goto label36;

        $r14 = virtualinvoke $r13.<org.spongycastle.asn1.x509.Extensions: java.util.Enumeration oids()>();

        $z0 = interfaceinvoke $r14.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label05;

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("           Extensions: ");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label05:
        $z0 = interfaceinvoke $r14.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label36;

        $r15 = interfaceinvoke $r14.<java.util.Enumeration: java.lang.Object nextElement()>();

        r16 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r15;

        $r17 = virtualinvoke $r13.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>(r16);

        $r18 = virtualinvoke $r17.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1OctetString getExtnValue()>();

        if $r18 == null goto label35;

        $r18 = virtualinvoke $r17.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1OctetString getExtnValue()>();

        $r9 = virtualinvoke $r18.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r2 = new org.spongycastle.asn1.ASN1InputStream;

        specialinvoke r2.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r9);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("                       critical(");

        $z0 = virtualinvoke $r17.<org.spongycastle.asn1.x509.Extension: boolean isCritical()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") ");

        $r19 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier cRLNumber>;

     label06:
        $z0 = virtualinvoke r16.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r19);

     label07:
        if $z0 == 0 goto label11;

        $r20 = new org.spongycastle.asn1.x509.CRLNumber;

     label08:
        $r21 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r22 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        specialinvoke $r20.<org.spongycastle.asn1.x509.CRLNumber: void <init>(java.math.BigInteger)>($r23);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r20);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label09:
        goto label05;

     label10:
        r3 := @caughtexception;

        $r8 = virtualinvoke r16.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" value = ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("*****");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label05;

     label11:
        $r19 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier deltaCRLIndicator>;

     label12:
        $z0 = virtualinvoke r16.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r19);

     label13:
        if $z0 == 0 goto label18;

        $r24 = new java.lang.StringBuilder;

     label14:
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Base CRL: ");

     label15:
        $r20 = new org.spongycastle.asn1.x509.CRLNumber;

     label16:
        $r21 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r22 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        specialinvoke $r20.<org.spongycastle.asn1.x509.CRLNumber: void <init>(java.math.BigInteger)>($r23);

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r8 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label17:
        goto label05;

     label18:
        $r19 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier issuingDistributionPoint>;

     label19:
        $z0 = virtualinvoke r16.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r19);

     label20:
        if $z0 == 0 goto label23;

     label21:
        $r21 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r25 = staticinvoke <org.spongycastle.asn1.x509.IssuingDistributionPoint: org.spongycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>($r21);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r25);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label22:
        goto label05;

     label23:
        $r19 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier cRLDistributionPoints>;

     label24:
        $z0 = virtualinvoke r16.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r19);

     label25:
        if $z0 == 0 goto label28;

     label26:
        $r21 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r26 = staticinvoke <org.spongycastle.asn1.x509.CRLDistPoint: org.spongycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)>($r21);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r26);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label27:
        goto label05;

     label28:
        $r19 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier freshestCRL>;

     label29:
        $z0 = virtualinvoke r16.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r19);

     label30:
        if $z0 == 0 goto label33;

     label31:
        $r21 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r26 = staticinvoke <org.spongycastle.asn1.x509.CRLDistPoint: org.spongycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)>($r21);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r26);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label32:
        goto label05;

     label33:
        $r8 = virtualinvoke r16.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" value = ");

        $r21 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r8 = staticinvoke <org.spongycastle.asn1.util.ASN1Dump: java.lang.String dumpAsString(java.lang.Object)>($r21);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label34:
        goto label05;

     label35:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label05;

     label36:
        $r27 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.util.Set getRevokedCertificates()>();

        if $r27 == null goto label38;

        $r28 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();

     label37:
        $z0 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label38;

        $r15 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label37;

     label38:
        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;

        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label12 to label13 with label10;
        catch java.lang.Exception from label14 to label15 with label10;
        catch java.lang.Exception from label16 to label17 with label10;
        catch java.lang.Exception from label19 to label20 with label10;
        catch java.lang.Exception from label21 to label22 with label10;
        catch java.lang.Exception from label24 to label25 with label10;
        catch java.lang.Exception from label26 to label27 with label10;
        catch java.lang.Exception from label29 to label30 with label10;
        catch java.lang.Exception from label31 to label32 with label10;
        catch java.lang.Exception from label33 to label34 with label10;
    }
    public void verify(java.security.PublicKey) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.security.PublicKey $r1;
        java.lang.Exception r2;
        java.lang.String $r3;
        java.security.Signature $r4;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: java.security.PublicKey;

     label1:
        $r3 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.lang.String getSigAlgName()>();

        $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r3, "SC");

     label2:
        specialinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: void doVerify(java.security.PublicKey,java.security.Signature)>($r1, $r4);

        return;

     label3:
        r2 := @caughtexception;

        $r3 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.lang.String getSigAlgName()>();

        $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r3);

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public void verify(java.security.PublicKey, java.lang.String) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.security.PublicKey $r1;
        java.lang.String $r2, $r3;
        java.security.Signature $r4;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: java.security.PublicKey;

        $r2 := @parameter1: java.lang.String;

        if $r2 == null goto label2;

        $r3 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.lang.String getSigAlgName()>();

        $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r3, $r2);

     label1:
        specialinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: void doVerify(java.security.PublicKey,java.security.Signature)>($r1, $r4);

        return;

     label2:
        $r2 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.lang.String getSigAlgName()>();

        $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2);

        goto label1;
    }
    public void verify(java.security.PublicKey, java.security.Provider) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.SignatureException
    {
        org.spongycastle.jce.provider.X509CRLObject r0;
        java.security.PublicKey $r1;
        java.security.Provider $r2;
        java.lang.String $r3;
        java.security.Signature $r4;

        r0 := @this: org.spongycastle.jce.provider.X509CRLObject;

        $r1 := @parameter0: java.security.PublicKey;

        $r2 := @parameter1: java.security.Provider;

        if $r2 == null goto label2;

        $r3 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.lang.String getSigAlgName()>();

        $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r3, $r2);

     label1:
        specialinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: void doVerify(java.security.PublicKey,java.security.Signature)>($r1, $r4);

        return;

     label2:
        $r3 = virtualinvoke r0.<org.spongycastle.jce.provider.X509CRLObject: java.lang.String getSigAlgName()>();

        $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r3);

        goto label1;
    }
