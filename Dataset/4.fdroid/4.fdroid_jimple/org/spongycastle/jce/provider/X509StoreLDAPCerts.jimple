org.spongycastle.jce.provider.X509StoreLDAPCerts extends org.spongycastle.x509.X509StoreSpi
private org.spongycastle.x509.util.LDAPStoreHelper helper
    public void <init>()
    {
        org.spongycastle.jce.provider.X509StoreLDAPCerts r0;

        r0 := @this: org.spongycastle.jce.provider.X509StoreLDAPCerts;

        specialinvoke r0.<org.spongycastle.x509.X509StoreSpi: void <init>()>();

        return;
    }
    private java.util.Collection getCertificatesFromCrossCertificatePairs(org.spongycastle.x509.X509CertStoreSelector) throws org.spongycastle.util.StoreException
    {
        org.spongycastle.jce.provider.X509StoreLDAPCerts r0;
        org.spongycastle.x509.X509CertStoreSelector $r1;
        java.util.HashSet r2, r3, r5, r6;
        org.spongycastle.x509.X509CertPairStoreSelector r4;
        org.spongycastle.x509.util.LDAPStoreHelper $r7;
        java.util.Collection $r8;
        java.util.Iterator $r9;
        boolean $z0;
        java.lang.Object $r10;
        org.spongycastle.x509.X509CertificatePair r11;
        java.security.cert.X509Certificate $r12;

        r0 := @this: org.spongycastle.jce.provider.X509StoreLDAPCerts;

        $r1 := @parameter0: org.spongycastle.x509.X509CertStoreSelector;

        r6 = new java.util.HashSet;

        specialinvoke r6.<java.util.HashSet: void <init>()>();

        r4 = new org.spongycastle.x509.X509CertPairStoreSelector;

        specialinvoke r4.<org.spongycastle.x509.X509CertPairStoreSelector: void <init>()>();

        virtualinvoke r4.<org.spongycastle.x509.X509CertPairStoreSelector: void setForwardSelector(org.spongycastle.x509.X509CertStoreSelector)>($r1);

        $r1 = new org.spongycastle.x509.X509CertStoreSelector;

        specialinvoke $r1.<org.spongycastle.x509.X509CertStoreSelector: void <init>()>();

        virtualinvoke r4.<org.spongycastle.x509.X509CertPairStoreSelector: void setReverseSelector(org.spongycastle.x509.X509CertStoreSelector)>($r1);

        r2 = new java.util.HashSet;

        $r7 = r0.<org.spongycastle.jce.provider.X509StoreLDAPCerts: org.spongycastle.x509.util.LDAPStoreHelper helper>;

        $r8 = virtualinvoke $r7.<org.spongycastle.x509.util.LDAPStoreHelper: java.util.Collection getCrossCertificatePairs(org.spongycastle.x509.X509CertPairStoreSelector)>(r4);

        specialinvoke r2.<java.util.HashSet: void <init>(java.util.Collection)>($r8);

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        r5 = new java.util.HashSet;

        specialinvoke r5.<java.util.HashSet: void <init>()>();

        $r9 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.spongycastle.x509.X509CertificatePair) $r10;

        $r12 = virtualinvoke r11.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate getForward()>();

        if $r12 == null goto label2;

        $r12 = virtualinvoke r11.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate getForward()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label2:
        $r12 = virtualinvoke r11.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate getReverse()>();

        if $r12 == null goto label1;

        $r12 = virtualinvoke r11.<org.spongycastle.x509.X509CertificatePair: java.security.cert.X509Certificate getReverse()>();

        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r12);

        goto label1;

     label3:
        interfaceinvoke r6.<java.util.Set: boolean addAll(java.util.Collection)>(r3);

        interfaceinvoke r6.<java.util.Set: boolean addAll(java.util.Collection)>(r5);

        return r6;
    }
    public java.util.Collection engineGetMatches(org.spongycastle.util.Selector) throws org.spongycastle.util.StoreException
    {
        org.spongycastle.jce.provider.X509StoreLDAPCerts r0;
        org.spongycastle.util.Selector $r1;
        boolean $z0;
        org.spongycastle.x509.X509CertStoreSelector r2;
        java.util.HashSet r3;
        int $i0;
        org.spongycastle.x509.util.LDAPStoreHelper $r4;
        java.util.Collection $r5;
        java.util.Set r6;

        r0 := @this: org.spongycastle.jce.provider.X509StoreLDAPCerts;

        $r1 := @parameter0: org.spongycastle.util.Selector;

        $z0 = $r1 instanceof org.spongycastle.x509.X509CertStoreSelector;

        if $z0 != 0 goto label1;

        r6 = <java.util.Collections: java.util.Set EMPTY_SET>;

        return r6;

     label1:
        r2 = (org.spongycastle.x509.X509CertStoreSelector) $r1;

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        $i0 = virtualinvoke r2.<org.spongycastle.x509.X509CertStoreSelector: int getBasicConstraints()>();

        if $i0 <= 0 goto label2;

        $r4 = r0.<org.spongycastle.jce.provider.X509StoreLDAPCerts: org.spongycastle.x509.util.LDAPStoreHelper helper>;

        $r5 = virtualinvoke $r4.<org.spongycastle.x509.util.LDAPStoreHelper: java.util.Collection getCACertificates(org.spongycastle.x509.X509CertStoreSelector)>(r2);

        interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        $r5 = specialinvoke r0.<org.spongycastle.jce.provider.X509StoreLDAPCerts: java.util.Collection getCertificatesFromCrossCertificatePairs(org.spongycastle.x509.X509CertStoreSelector)>(r2);

        interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        return r3;

     label2:
        $i0 = virtualinvoke r2.<org.spongycastle.x509.X509CertStoreSelector: int getBasicConstraints()>();

        if $i0 != -2 goto label3;

        $r4 = r0.<org.spongycastle.jce.provider.X509StoreLDAPCerts: org.spongycastle.x509.util.LDAPStoreHelper helper>;

        $r5 = virtualinvoke $r4.<org.spongycastle.x509.util.LDAPStoreHelper: java.util.Collection getUserCertificates(org.spongycastle.x509.X509CertStoreSelector)>(r2);

        interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        return r3;

     label3:
        $r4 = r0.<org.spongycastle.jce.provider.X509StoreLDAPCerts: org.spongycastle.x509.util.LDAPStoreHelper helper>;

        $r5 = virtualinvoke $r4.<org.spongycastle.x509.util.LDAPStoreHelper: java.util.Collection getUserCertificates(org.spongycastle.x509.X509CertStoreSelector)>(r2);

        interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        $r4 = r0.<org.spongycastle.jce.provider.X509StoreLDAPCerts: org.spongycastle.x509.util.LDAPStoreHelper helper>;

        $r5 = virtualinvoke $r4.<org.spongycastle.x509.util.LDAPStoreHelper: java.util.Collection getCACertificates(org.spongycastle.x509.X509CertStoreSelector)>(r2);

        interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        $r5 = specialinvoke r0.<org.spongycastle.jce.provider.X509StoreLDAPCerts: java.util.Collection getCertificatesFromCrossCertificatePairs(org.spongycastle.x509.X509CertStoreSelector)>(r2);

        interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        return r3;
    }
    public void engineInit(org.spongycastle.x509.X509StoreParameters)
    {
        org.spongycastle.jce.provider.X509StoreLDAPCerts r0;
        org.spongycastle.x509.X509StoreParameters $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r5;
        org.spongycastle.x509.util.LDAPStoreHelper $r6;
        org.spongycastle.jce.X509LDAPCertStoreParameters $r7;

        r0 := @this: org.spongycastle.jce.provider.X509StoreLDAPCerts;

        $r1 := @parameter0: org.spongycastle.x509.X509StoreParameters;

        $z0 = $r1 instanceof org.spongycastle.jce.X509LDAPCertStoreParameters;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initialization parameters must be an instance of ");

        $r4 = class "Lorg/spongycastle/jce/X509LDAPCertStoreParameters;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label1:
        $r6 = new org.spongycastle.x509.util.LDAPStoreHelper;

        $r7 = (org.spongycastle.jce.X509LDAPCertStoreParameters) $r1;

        specialinvoke $r6.<org.spongycastle.x509.util.LDAPStoreHelper: void <init>(org.spongycastle.jce.X509LDAPCertStoreParameters)>($r7);

        r0.<org.spongycastle.jce.provider.X509StoreLDAPCerts: org.spongycastle.x509.util.LDAPStoreHelper helper> = $r6;

        return;
    }
