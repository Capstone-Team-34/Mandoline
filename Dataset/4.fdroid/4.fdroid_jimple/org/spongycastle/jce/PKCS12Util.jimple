org.spongycastle.jce.PKCS12Util extends java.lang.Object
    public void <init>()
    {
        org.spongycastle.jce.PKCS12Util r0;

        r0 := @this: org.spongycastle.jce.PKCS12Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static byte[] calculatePbeMac(org.spongycastle.asn1.ASN1ObjectIdentifier, byte[], int, char[], byte[], java.lang.String) throws java.lang.Exception
    {
        org.spongycastle.asn1.ASN1ObjectIdentifier $r0;
        byte[] $r1, $r3;
        int $i0;
        char[] $r2;
        java.lang.String $r4, $r7;
        javax.crypto.spec.PBEParameterSpec r5;
        javax.crypto.spec.PBEKeySpec r6;
        javax.crypto.SecretKeyFactory $r8;
        javax.crypto.SecretKey $r9;
        javax.crypto.Mac $r10;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $r2 := @parameter3: char[];

        $r3 := @parameter4: byte[];

        $r4 := @parameter5: java.lang.String;

        $r7 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r7, $r4);

        r5 = new javax.crypto.spec.PBEParameterSpec;

        specialinvoke r5.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r1, $i0);

        r6 = new javax.crypto.spec.PBEKeySpec;

        specialinvoke r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r2);

        $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r6);

        $r7 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r10 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)>($r7, $r4);

        virtualinvoke $r10.<javax.crypto.Mac: void init(java.security.Key,java.security.spec.AlgorithmParameterSpec)>($r9, r5);

        virtualinvoke $r10.<javax.crypto.Mac: void update(byte[])>($r3);

        $r1 = virtualinvoke $r10.<javax.crypto.Mac: byte[] doFinal()>();

        return $r1;
    }
    public static byte[] convertToDefiniteLength(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        java.io.ByteArrayOutputStream r1;
        org.spongycastle.asn1.DEROutputStream r2;
        org.spongycastle.asn1.pkcs.Pfx $r3;

        $r0 := @parameter0: byte[];

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = new org.spongycastle.asn1.DEROutputStream;

        specialinvoke r2.<org.spongycastle.asn1.DEROutputStream: void <init>(java.io.OutputStream)>(r1);

        $r3 = staticinvoke <org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.Pfx getInstance(java.lang.Object)>($r0);

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void reset()>();

        virtualinvoke r2.<org.spongycastle.asn1.DEROutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r0 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;
    }
    public static byte[] convertToDefiniteLength(byte[], char[], java.lang.String) throws java.io.IOException
    {
        byte[] $r0, $r20;
        char[] $r1;
        java.lang.String $r2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r3, $r21;
        java.io.ByteArrayOutputStream r4;
        org.spongycastle.asn1.ASN1InputStream r5;
        org.spongycastle.asn1.x509.DigestInfo r6;
        org.spongycastle.asn1.DEROutputStream r7;
        java.lang.Exception r8;
        org.spongycastle.asn1.pkcs.ContentInfo r9, $r12;
        org.spongycastle.asn1.pkcs.MacData r10, $r18;
        org.spongycastle.asn1.pkcs.Pfx $r11;
        org.spongycastle.asn1.ASN1Encodable $r13;
        org.spongycastle.asn1.ASN1OctetString $r14;
        org.spongycastle.asn1.ASN1Primitive $r15;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r16;
        org.spongycastle.asn1.DEROctetString $r17;
        java.math.BigInteger $r19;
        int $i0;
        org.spongycastle.asn1.DERNull $r22;
        java.io.IOException $r23;
        java.lang.StringBuilder $r24;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: char[];

        $r2 := @parameter2: java.lang.String;

        $r11 = staticinvoke <org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.Pfx getInstance(java.lang.Object)>($r0);

        $r12 = virtualinvoke $r11.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.ContentInfo getAuthSafe()>();

        $r13 = virtualinvoke $r12.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1Encodable getContent()>();

        $r14 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r13);

        r4 = new java.io.ByteArrayOutputStream;

        specialinvoke r4.<java.io.ByteArrayOutputStream: void <init>()>();

        r7 = new org.spongycastle.asn1.DEROutputStream;

        specialinvoke r7.<org.spongycastle.asn1.DEROutputStream: void <init>(java.io.OutputStream)>(r4);

        r5 = new org.spongycastle.asn1.ASN1InputStream;

        $r0 = virtualinvoke $r14.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke r5.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r0);

        $r15 = virtualinvoke r5.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        virtualinvoke r7.<org.spongycastle.asn1.DEROutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>($r15);

        r9 = new org.spongycastle.asn1.pkcs.ContentInfo;

        $r16 = virtualinvoke $r12.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

        $r17 = new org.spongycastle.asn1.DEROctetString;

        $r0 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r17.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r0);

        specialinvoke r9.<org.spongycastle.asn1.pkcs.ContentInfo: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r16, $r17);

        $r18 = virtualinvoke $r11.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData getMacData()>();

     label01:
        $r19 = virtualinvoke $r18.<org.spongycastle.asn1.pkcs.MacData: java.math.BigInteger getIterationCount()>();

        $i0 = virtualinvoke $r19.<java.math.BigInteger: int intValue()>();

        $r13 = virtualinvoke r9.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1Encodable getContent()>();

        $r14 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r13);

        $r0 = virtualinvoke $r14.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r6 = virtualinvoke $r18.<org.spongycastle.asn1.pkcs.MacData: org.spongycastle.asn1.x509.DigestInfo getMac()>();

        r3 = virtualinvoke r6.<org.spongycastle.asn1.x509.DigestInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r16 = virtualinvoke r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r20 = virtualinvoke $r18.<org.spongycastle.asn1.pkcs.MacData: byte[] getSalt()>();

        $r0 = staticinvoke <org.spongycastle.jce.PKCS12Util: byte[] calculatePbeMac(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[],int,char[],byte[],java.lang.String)>($r16, $r20, $i0, $r1, $r0, $r2);

     label02:
        r3 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

     label03:
        r6 = virtualinvoke $r18.<org.spongycastle.asn1.pkcs.MacData: org.spongycastle.asn1.x509.DigestInfo getMac()>();

        $r21 = virtualinvoke r6.<org.spongycastle.asn1.x509.DigestInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r16 = virtualinvoke $r21.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

     label04:
        $r22 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

     label05:
        specialinvoke r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r16, $r22);

     label06:
        r6 = new org.spongycastle.asn1.x509.DigestInfo;

     label07:
        specialinvoke r6.<org.spongycastle.asn1.x509.DigestInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>(r3, $r0);

     label08:
        r10 = new org.spongycastle.asn1.pkcs.MacData;

     label09:
        $r0 = virtualinvoke $r18.<org.spongycastle.asn1.pkcs.MacData: byte[] getSalt()>();

        specialinvoke r10.<org.spongycastle.asn1.pkcs.MacData: void <init>(org.spongycastle.asn1.x509.DigestInfo,byte[],int)>(r6, $r0, $i0);

     label10:
        $r11 = new org.spongycastle.asn1.pkcs.Pfx;

        specialinvoke $r11.<org.spongycastle.asn1.pkcs.Pfx: void <init>(org.spongycastle.asn1.pkcs.ContentInfo,org.spongycastle.asn1.pkcs.MacData)>(r9, r10);

        virtualinvoke r4.<java.io.ByteArrayOutputStream: void reset()>();

        virtualinvoke r7.<org.spongycastle.asn1.DEROutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>($r11);

        $r0 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;

     label11:
        r8 := @caughtexception;

        $r23 = new java.io.IOException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error constructing MAC: ");

        $r2 = virtualinvoke r8.<java.lang.Exception: java.lang.String toString()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r23;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }
