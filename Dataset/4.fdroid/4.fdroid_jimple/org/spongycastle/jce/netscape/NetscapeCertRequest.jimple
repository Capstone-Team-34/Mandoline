org.spongycastle.jce.netscape.NetscapeCertRequest extends org.spongycastle.asn1.ASN1Object
java.lang.String challenge
org.spongycastle.asn1.DERBitString content
org.spongycastle.asn1.x509.AlgorithmIdentifier keyAlg
java.security.PublicKey pubkey
org.spongycastle.asn1.x509.AlgorithmIdentifier sigAlg
byte[] sigBits
    public void <init>(java.lang.String, org.spongycastle.asn1.x509.AlgorithmIdentifier, java.security.PublicKey) throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException, java.security.NoSuchProviderException
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        java.lang.String $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        java.security.PublicKey $r3;
        org.spongycastle.asn1.ASN1EncodableVector r4;
        java.io.IOException r5;
        org.spongycastle.asn1.ASN1Primitive $r6;
        org.spongycastle.asn1.DERIA5String $r7;
        org.spongycastle.asn1.DERBitString $r8;
        org.spongycastle.asn1.DERSequence $r9;
        java.security.spec.InvalidKeySpecException $r10;
        java.lang.StringBuilder $r11;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 := @parameter2: java.security.PublicKey;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: java.lang.String challenge> = $r1;

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.x509.AlgorithmIdentifier sigAlg> = $r2;

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: java.security.PublicKey pubkey> = $r3;

        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r6 = specialinvoke r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.ASN1Primitive getKeySpec()>();

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r6);

        $r7 = new org.spongycastle.asn1.DERIA5String;

        specialinvoke $r7.<org.spongycastle.asn1.DERIA5String: void <init>(java.lang.String)>($r1);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r7);

        $r8 = new org.spongycastle.asn1.DERBitString;

        $r9 = new org.spongycastle.asn1.DERSequence;

     label1:
        specialinvoke $r9.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        specialinvoke $r8.<org.spongycastle.asn1.DERBitString: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r9);

     label2:
        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.DERBitString content> = $r8;

        return;

     label3:
        r5 := @caughtexception;

        $r10 = new java.security.spec.InvalidKeySpecException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception encoding key: ");

        $r1 = virtualinvoke r5.<java.io.IOException: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r1);

        throw $r10;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        java.lang.Exception r2;
        java.security.spec.X509EncodedKeySpec r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        org.spongycastle.asn1.ASN1Encodable $r7;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r8;
        org.spongycastle.asn1.DERBitString $r9;
        byte[] $r10;
        org.spongycastle.asn1.DERIA5String $r11;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r12;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r13;
        java.security.KeyFactory $r14;
        java.security.PublicKey $r15;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

     label01:
        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

     label02:
        if $i0 == 3 goto label05;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid SPKAC (size):");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label04:
        r2 := @caughtexception;

        $r4 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label05:
        $r7 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r8 = staticinvoke <org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)>($r7);

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.x509.AlgorithmIdentifier sigAlg> = $r8;

        $r7 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(2);

        $r9 = (org.spongycastle.asn1.DERBitString) $r7;

        $r10 = virtualinvoke $r9.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: byte[] sigBits> = $r10;

        $r7 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r1 = (org.spongycastle.asn1.ASN1Sequence) $r7;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

     label06:
        if $i0 == 2 goto label08;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid PKAC (len): ");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label08:
        $r7 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r11 = (org.spongycastle.asn1.DERIA5String) $r7;

        $r6 = virtualinvoke $r11.<org.spongycastle.asn1.DERIA5String: java.lang.String getString()>();

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: java.lang.String challenge> = $r6;

     label09:
        $r9 = new org.spongycastle.asn1.DERBitString;

     label10:
        specialinvoke $r9.<org.spongycastle.asn1.DERBitString: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r1);

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.DERBitString content> = $r9;

        $r7 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r12 = staticinvoke <org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r7);

     label11:
        r3 = new java.security.spec.X509EncodedKeySpec;

        $r9 = new org.spongycastle.asn1.DERBitString;

     label12:
        specialinvoke $r9.<org.spongycastle.asn1.DERBitString: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r12);

        $r10 = virtualinvoke $r9.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        specialinvoke r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r10);

        $r8 = virtualinvoke $r12.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.x509.AlgorithmIdentifier keyAlg> = $r8;

        $r8 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.x509.AlgorithmIdentifier keyAlg>;

        $r13 = virtualinvoke $r8.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r6 = virtualinvoke $r13.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r14 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r6, "SC");

        $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r3);

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: java.security.PublicKey pubkey> = $r15;

     label13:
        return;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Exception from label03 to label04 with label04;
        catch java.lang.Exception from label05 to label06 with label04;
        catch java.lang.Exception from label07 to label09 with label04;
        catch java.lang.Exception from label10 to label11 with label04;
        catch java.lang.Exception from label12 to label13 with label04;
    }
    public void <init>(byte[]) throws java.io.IOException
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        byte[] $r1;
        org.spongycastle.asn1.ASN1Sequence $r2;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        $r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.ASN1Sequence getReq(byte[])>($r1);

        specialinvoke r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r2);

        return;
    }
    private org.spongycastle.asn1.ASN1Primitive getKeySpec() throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException, java.security.NoSuchProviderException
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        java.io.ByteArrayOutputStream r1;
        org.spongycastle.asn1.ASN1InputStream r2;
        java.io.IOException r3;
        java.security.PublicKey $r4;
        byte[] $r5;
        java.io.ByteArrayInputStream $r6;
        org.spongycastle.asn1.ASN1Primitive $r7;
        java.security.spec.InvalidKeySpecException $r8;
        java.lang.String $r9;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r4 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: java.security.PublicKey pubkey>;

     label1:
        $r5 = interfaceinvoke $r4.<java.security.PublicKey: byte[] getEncoded()>();

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[])>($r5);

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void close()>();

     label2:
        r2 = new org.spongycastle.asn1.ASN1InputStream;

        $r6 = new java.io.ByteArrayInputStream;

     label3:
        $r5 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        specialinvoke r2.<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>($r6);

        $r7 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

     label4:
        return $r7;

     label5:
        r3 := @caughtexception;

        $r8 = new java.security.spec.InvalidKeySpecException;

        $r9 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r8.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r9);

        throw $r8;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    private static org.spongycastle.asn1.ASN1Sequence getReq(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        org.spongycastle.asn1.ASN1InputStream r1;
        java.io.ByteArrayInputStream $r2;
        org.spongycastle.asn1.ASN1Primitive $r3;
        org.spongycastle.asn1.ASN1Sequence $r4;

        $r0 := @parameter0: byte[];

        r1 = new org.spongycastle.asn1.ASN1InputStream;

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        specialinvoke r1.<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>($r2);

        $r3 = virtualinvoke r1.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r3);

        return $r4;
    }
    public java.lang.String getChallenge()
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        java.lang.String r1;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        r1 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: java.lang.String challenge>;

        return r1;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getKeyAlgorithm()
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        r1 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.x509.AlgorithmIdentifier keyAlg>;

        return r1;
    }
    public java.security.PublicKey getPublicKey()
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        java.security.PublicKey r1;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        r1 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: java.security.PublicKey pubkey>;

        return r1;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getSigningAlgorithm()
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        r1 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.x509.AlgorithmIdentifier sigAlg>;

        return r1;
    }
    public void setChallenge(java.lang.String)
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        java.lang.String $r1;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        $r1 := @parameter0: java.lang.String;

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: java.lang.String challenge> = $r1;

        return;
    }
    public void setKeyAlgorithm(org.spongycastle.asn1.x509.AlgorithmIdentifier)
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.x509.AlgorithmIdentifier keyAlg> = $r1;

        return;
    }
    public void setPublicKey(java.security.PublicKey)
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        java.security.PublicKey $r1;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        $r1 := @parameter0: java.security.PublicKey;

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: java.security.PublicKey pubkey> = $r1;

        return;
    }
    public void setSigningAlgorithm(org.spongycastle.asn1.x509.AlgorithmIdentifier)
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.x509.AlgorithmIdentifier sigAlg> = $r1;

        return;
    }
    public void sign(java.security.PrivateKey) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.SignatureException, java.security.NoSuchProviderException, java.security.spec.InvalidKeySpecException
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        java.security.PrivateKey $r1;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        $r1 := @parameter0: java.security.PrivateKey;

        virtualinvoke r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: void sign(java.security.PrivateKey,java.security.SecureRandom)>($r1, null);

        return;
    }
    public void sign(java.security.PrivateKey, java.security.SecureRandom) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.SignatureException, java.security.NoSuchProviderException, java.security.spec.InvalidKeySpecException
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        java.security.PrivateKey $r1;
        java.security.SecureRandom $r2;
        java.io.IOException r3;
        org.spongycastle.asn1.ASN1EncodableVector r4;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r5;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r6;
        java.lang.String $r7;
        java.security.Signature $r8;
        org.spongycastle.asn1.ASN1Primitive $r9;
        org.spongycastle.asn1.DERIA5String $r10;
        org.spongycastle.asn1.DERSequence $r11;
        byte[] $r12;
        java.security.SignatureException $r13;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        $r1 := @parameter0: java.security.PrivateKey;

        $r2 := @parameter1: java.security.SecureRandom;

        $r5 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.x509.AlgorithmIdentifier sigAlg>;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r7, "SC");

        if $r2 == null goto label4;

        virtualinvoke $r8.<java.security.Signature: void initSign(java.security.PrivateKey,java.security.SecureRandom)>($r1, $r2);

     label1:
        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r9 = specialinvoke r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.ASN1Primitive getKeySpec()>();

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r9);

        $r10 = new org.spongycastle.asn1.DERIA5String;

        $r7 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: java.lang.String challenge>;

        specialinvoke $r10.<org.spongycastle.asn1.DERIA5String: void <init>(java.lang.String)>($r7);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r10);

        $r11 = new org.spongycastle.asn1.DERSequence;

     label2:
        specialinvoke $r11.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        $r12 = virtualinvoke $r11.<org.spongycastle.asn1.DERSequence: byte[] getEncoded(java.lang.String)>("DER");

        virtualinvoke $r8.<java.security.Signature: void update(byte[])>($r12);

     label3:
        $r12 = virtualinvoke $r8.<java.security.Signature: byte[] sign()>();

        r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: byte[] sigBits> = $r12;

        return;

     label4:
        virtualinvoke $r8.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1);

        goto label1;

     label5:
        r3 := @caughtexception;

        $r13 = new java.security.SignatureException;

        $r7 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r13.<java.security.SignatureException: void <init>(java.lang.String)>($r7);

        throw $r13;

        catch java.io.IOException from label2 to label3 with label5;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        org.spongycastle.asn1.ASN1EncodableVector r1, r2;
        org.spongycastle.asn1.ASN1Primitive $r3;
        org.spongycastle.asn1.DERIA5String $r4;
        java.lang.String $r5;
        org.spongycastle.asn1.DERSequence $r6;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r7;
        org.spongycastle.asn1.DERBitString $r8;
        byte[] $r9;
        java.lang.Exception $r10;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

     label1:
        $r3 = specialinvoke r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.ASN1Primitive getKeySpec()>();

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label2:
        $r4 = new org.spongycastle.asn1.DERIA5String;

        $r5 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: java.lang.String challenge>;

        specialinvoke $r4.<org.spongycastle.asn1.DERIA5String: void <init>(java.lang.String)>($r5);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r6 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r6.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r6);

        $r7 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.x509.AlgorithmIdentifier sigAlg>;

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r7);

        $r8 = new org.spongycastle.asn1.DERBitString;

        $r9 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: byte[] sigBits>;

        specialinvoke $r8.<org.spongycastle.asn1.DERBitString: void <init>(byte[])>($r9);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r8);

        $r6 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r6.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r2);

        return $r6;

     label3:
        $r10 := @caughtexception;

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public boolean verify(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.SignatureException, java.security.NoSuchProviderException
    {
        org.spongycastle.jce.netscape.NetscapeCertRequest r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r4;
        java.security.Signature $r5;
        java.security.PublicKey $r6;
        org.spongycastle.asn1.DERBitString $r7;
        byte[] $r8;

        r0 := @this: org.spongycastle.jce.netscape.NetscapeCertRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: java.lang.String challenge>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.x509.AlgorithmIdentifier sigAlg>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r1 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r1, "SC");

        $r6 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: java.security.PublicKey pubkey>;

        virtualinvoke $r5.<java.security.Signature: void initVerify(java.security.PublicKey)>($r6);

        $r7 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: org.spongycastle.asn1.DERBitString content>;

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        virtualinvoke $r5.<java.security.Signature: void update(byte[])>($r8);

        $r8 = r0.<org.spongycastle.jce.netscape.NetscapeCertRequest: byte[] sigBits>;

        $z0 = virtualinvoke $r5.<java.security.Signature: boolean verify(byte[])>($r8);

        return $z0;
    }
