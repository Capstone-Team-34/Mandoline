org.spongycastle.openssl.PKCS8Generator extends java.lang.Object implements org.spongycastle.util.io.pem.PemObjectGenerator
public static final org.spongycastle.asn1.ASN1ObjectIdentifier AES_128_CBC
public static final org.spongycastle.asn1.ASN1ObjectIdentifier AES_192_CBC
public static final org.spongycastle.asn1.ASN1ObjectIdentifier AES_256_CBC
public static final org.spongycastle.asn1.ASN1ObjectIdentifier DES3_CBC
public static final org.spongycastle.asn1.ASN1ObjectIdentifier PBE_SHA1_2DES
public static final org.spongycastle.asn1.ASN1ObjectIdentifier PBE_SHA1_3DES
public static final org.spongycastle.asn1.ASN1ObjectIdentifier PBE_SHA1_RC2_128
public static final org.spongycastle.asn1.ASN1ObjectIdentifier PBE_SHA1_RC2_40
public static final org.spongycastle.asn1.ASN1ObjectIdentifier PBE_SHA1_RC4_128
public static final org.spongycastle.asn1.ASN1ObjectIdentifier PBE_SHA1_RC4_40
private org.spongycastle.asn1.pkcs.PrivateKeyInfo key
private org.spongycastle.operator.OutputEncryptor outputEncryptor
    static void <clinit>()
    {
        org.spongycastle.asn1.ASN1ObjectIdentifier $r0;

        $r0 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes128_CBC>;

        <org.spongycastle.openssl.PKCS8Generator: org.spongycastle.asn1.ASN1ObjectIdentifier AES_128_CBC> = $r0;

        $r0 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes192_CBC>;

        <org.spongycastle.openssl.PKCS8Generator: org.spongycastle.asn1.ASN1ObjectIdentifier AES_192_CBC> = $r0;

        $r0 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes256_CBC>;

        <org.spongycastle.openssl.PKCS8Generator: org.spongycastle.asn1.ASN1ObjectIdentifier AES_256_CBC> = $r0;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier des_EDE3_CBC>;

        <org.spongycastle.openssl.PKCS8Generator: org.spongycastle.asn1.ASN1ObjectIdentifier DES3_CBC> = $r0;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd128BitRC4>;

        <org.spongycastle.openssl.PKCS8Generator: org.spongycastle.asn1.ASN1ObjectIdentifier PBE_SHA1_RC4_128> = $r0;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd40BitRC4>;

        <org.spongycastle.openssl.PKCS8Generator: org.spongycastle.asn1.ASN1ObjectIdentifier PBE_SHA1_RC4_40> = $r0;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd3_KeyTripleDES_CBC>;

        <org.spongycastle.openssl.PKCS8Generator: org.spongycastle.asn1.ASN1ObjectIdentifier PBE_SHA1_3DES> = $r0;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd2_KeyTripleDES_CBC>;

        <org.spongycastle.openssl.PKCS8Generator: org.spongycastle.asn1.ASN1ObjectIdentifier PBE_SHA1_2DES> = $r0;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd128BitRC2_CBC>;

        <org.spongycastle.openssl.PKCS8Generator: org.spongycastle.asn1.ASN1ObjectIdentifier PBE_SHA1_RC2_128> = $r0;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd40BitRC2_CBC>;

        <org.spongycastle.openssl.PKCS8Generator: org.spongycastle.asn1.ASN1ObjectIdentifier PBE_SHA1_RC2_40> = $r0;

        return;
    }
    public void <init>(org.spongycastle.asn1.pkcs.PrivateKeyInfo, org.spongycastle.operator.OutputEncryptor)
    {
        org.spongycastle.openssl.PKCS8Generator r0;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r1;
        org.spongycastle.operator.OutputEncryptor $r2;

        r0 := @this: org.spongycastle.openssl.PKCS8Generator;

        $r1 := @parameter0: org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        $r2 := @parameter1: org.spongycastle.operator.OutputEncryptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.openssl.PKCS8Generator: org.spongycastle.asn1.pkcs.PrivateKeyInfo key> = $r1;

        r0.<org.spongycastle.openssl.PKCS8Generator: org.spongycastle.operator.OutputEncryptor outputEncryptor> = $r2;

        return;
    }
    private org.spongycastle.util.io.pem.PemObject generate(org.spongycastle.asn1.pkcs.PrivateKeyInfo, org.spongycastle.operator.OutputEncryptor) throws org.spongycastle.util.io.pem.PemGenerationException
    {
        org.spongycastle.openssl.PKCS8Generator r0;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r1;
        org.spongycastle.operator.OutputEncryptor $r2;
        java.io.ByteArrayOutputStream r3;
        java.io.IOException r4;
        org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo r5;
        byte[] $r6;
        org.spongycastle.util.io.pem.PemObject $r7;
        java.io.OutputStream $r8;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r9;
        org.spongycastle.util.io.pem.PemGenerationException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;

        r0 := @this: org.spongycastle.openssl.PKCS8Generator;

        $r1 := @parameter0: org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        $r2 := @parameter1: org.spongycastle.operator.OutputEncryptor;

     label01:
        $r6 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: byte[] getEncoded()>();

     label02:
        if $r2 != null goto label05;

        $r7 = new org.spongycastle.util.io.pem.PemObject;

     label03:
        specialinvoke $r7.<org.spongycastle.util.io.pem.PemObject: void <init>(java.lang.String,byte[])>("PRIVATE KEY", $r6);

     label04:
        return $r7;

     label05:
        r3 = new java.io.ByteArrayOutputStream;

     label06:
        specialinvoke r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r8 = interfaceinvoke $r2.<org.spongycastle.operator.OutputEncryptor: java.io.OutputStream getOutputStream(java.io.OutputStream)>(r3);

        $r6 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: byte[] getEncoded()>();

        virtualinvoke $r8.<java.io.OutputStream: void write(byte[])>($r6);

        virtualinvoke $r8.<java.io.OutputStream: void close()>();

     label07:
        r5 = new org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo;

     label08:
        $r9 = interfaceinvoke $r2.<org.spongycastle.operator.OutputEncryptor: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r6 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke r5.<org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r9, $r6);

     label09:
        $r7 = new org.spongycastle.util.io.pem.PemObject;

     label10:
        $r6 = virtualinvoke r5.<org.spongycastle.asn1.pkcs.EncryptedPrivateKeyInfo: byte[] getEncoded()>();

        specialinvoke $r7.<org.spongycastle.util.io.pem.PemObject: void <init>(java.lang.String,byte[])>("ENCRYPTED PRIVATE KEY", $r6);

     label11:
        return $r7;

     label12:
        r4 := @caughtexception;

        $r10 = new org.spongycastle.util.io.pem.PemGenerationException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to process encoded key data: ");

        $r12 = virtualinvoke r4.<java.io.IOException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.spongycastle.util.io.pem.PemGenerationException: void <init>(java.lang.String,java.lang.Throwable)>($r12, r4);

        throw $r10;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.io.IOException from label10 to label11 with label12;
    }
    public org.spongycastle.util.io.pem.PemObject generate() throws org.spongycastle.util.io.pem.PemGenerationException
    {
        org.spongycastle.openssl.PKCS8Generator r0;
        org.spongycastle.operator.OutputEncryptor $r1;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r2;
        org.spongycastle.util.io.pem.PemObject $r3;

        r0 := @this: org.spongycastle.openssl.PKCS8Generator;

        $r1 = r0.<org.spongycastle.openssl.PKCS8Generator: org.spongycastle.operator.OutputEncryptor outputEncryptor>;

        if $r1 == null goto label1;

        $r2 = r0.<org.spongycastle.openssl.PKCS8Generator: org.spongycastle.asn1.pkcs.PrivateKeyInfo key>;

        $r1 = r0.<org.spongycastle.openssl.PKCS8Generator: org.spongycastle.operator.OutputEncryptor outputEncryptor>;

        $r3 = specialinvoke r0.<org.spongycastle.openssl.PKCS8Generator: org.spongycastle.util.io.pem.PemObject generate(org.spongycastle.asn1.pkcs.PrivateKeyInfo,org.spongycastle.operator.OutputEncryptor)>($r2, $r1);

        return $r3;

     label1:
        $r2 = r0.<org.spongycastle.openssl.PKCS8Generator: org.spongycastle.asn1.pkcs.PrivateKeyInfo key>;

        $r3 = specialinvoke r0.<org.spongycastle.openssl.PKCS8Generator: org.spongycastle.util.io.pem.PemObject generate(org.spongycastle.asn1.pkcs.PrivateKeyInfo,org.spongycastle.operator.OutputEncryptor)>($r2, null);

        return $r3;
    }
