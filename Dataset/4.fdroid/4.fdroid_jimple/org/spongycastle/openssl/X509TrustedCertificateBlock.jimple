org.spongycastle.openssl.X509TrustedCertificateBlock extends java.lang.Object
private final org.spongycastle.cert.X509CertificateHolder certificateHolder
private final org.spongycastle.openssl.CertificateTrustBlock trustBlock
    public void <init>(org.spongycastle.cert.X509CertificateHolder, org.spongycastle.openssl.CertificateTrustBlock)
    {
        org.spongycastle.openssl.X509TrustedCertificateBlock r0;
        org.spongycastle.cert.X509CertificateHolder $r1;
        org.spongycastle.openssl.CertificateTrustBlock $r2;

        r0 := @this: org.spongycastle.openssl.X509TrustedCertificateBlock;

        $r1 := @parameter0: org.spongycastle.cert.X509CertificateHolder;

        $r2 := @parameter1: org.spongycastle.openssl.CertificateTrustBlock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.openssl.X509TrustedCertificateBlock: org.spongycastle.cert.X509CertificateHolder certificateHolder> = $r1;

        r0.<org.spongycastle.openssl.X509TrustedCertificateBlock: org.spongycastle.openssl.CertificateTrustBlock trustBlock> = $r2;

        return;
    }
    public void <init>(byte[]) throws java.io.IOException
    {
        org.spongycastle.openssl.X509TrustedCertificateBlock r0;
        byte[] $r1;
        org.spongycastle.asn1.ASN1InputStream r2;
        org.spongycastle.cert.X509CertificateHolder $r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        org.spongycastle.openssl.CertificateTrustBlock $r5;

        r0 := @this: org.spongycastle.openssl.X509TrustedCertificateBlock;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = new org.spongycastle.asn1.ASN1InputStream;

        specialinvoke r2.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r1);

        $r3 = new org.spongycastle.cert.X509CertificateHolder;

        $r4 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r1 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded()>();

        specialinvoke $r3.<org.spongycastle.cert.X509CertificateHolder: void <init>(byte[])>($r1);

        r0.<org.spongycastle.openssl.X509TrustedCertificateBlock: org.spongycastle.cert.X509CertificateHolder certificateHolder> = $r3;

        $r5 = new org.spongycastle.openssl.CertificateTrustBlock;

        $r4 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r1 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded()>();

        specialinvoke $r5.<org.spongycastle.openssl.CertificateTrustBlock: void <init>(byte[])>($r1);

        r0.<org.spongycastle.openssl.X509TrustedCertificateBlock: org.spongycastle.openssl.CertificateTrustBlock trustBlock> = $r5;

        return;
    }
    public org.spongycastle.cert.X509CertificateHolder getCertificateHolder()
    {
        org.spongycastle.openssl.X509TrustedCertificateBlock r0;
        org.spongycastle.cert.X509CertificateHolder r1;

        r0 := @this: org.spongycastle.openssl.X509TrustedCertificateBlock;

        r1 = r0.<org.spongycastle.openssl.X509TrustedCertificateBlock: org.spongycastle.cert.X509CertificateHolder certificateHolder>;

        return r1;
    }
    public byte[] getEncoded() throws java.io.IOException
    {
        org.spongycastle.openssl.X509TrustedCertificateBlock r0;
        org.spongycastle.cert.X509CertificateHolder $r1;
        byte[] $r2, $r5;
        org.spongycastle.openssl.CertificateTrustBlock $r3;
        org.spongycastle.asn1.ASN1Sequence $r4;

        r0 := @this: org.spongycastle.openssl.X509TrustedCertificateBlock;

        $r1 = r0.<org.spongycastle.openssl.X509TrustedCertificateBlock: org.spongycastle.cert.X509CertificateHolder certificateHolder>;

        $r2 = virtualinvoke $r1.<org.spongycastle.cert.X509CertificateHolder: byte[] getEncoded()>();

        $r3 = r0.<org.spongycastle.openssl.X509TrustedCertificateBlock: org.spongycastle.openssl.CertificateTrustBlock trustBlock>;

        $r4 = virtualinvoke $r3.<org.spongycastle.openssl.CertificateTrustBlock: org.spongycastle.asn1.ASN1Sequence toASN1Sequence()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Sequence: byte[] getEncoded()>();

        $r2 = staticinvoke <org.spongycastle.util.Arrays: byte[] concatenate(byte[],byte[])>($r2, $r5);

        return $r2;
    }
    public org.spongycastle.openssl.CertificateTrustBlock getTrustBlock()
    {
        org.spongycastle.openssl.X509TrustedCertificateBlock r0;
        org.spongycastle.openssl.CertificateTrustBlock r1;

        r0 := @this: org.spongycastle.openssl.X509TrustedCertificateBlock;

        r1 = r0.<org.spongycastle.openssl.X509TrustedCertificateBlock: org.spongycastle.openssl.CertificateTrustBlock trustBlock>;

        return r1;
    }
