org.spongycastle.openssl.bc.BcPEMDecryptorProvider extends java.lang.Object implements org.spongycastle.openssl.PEMDecryptorProvider
private final char[] password
    public void <init>(char[])
    {
        org.spongycastle.openssl.bc.BcPEMDecryptorProvider r0;
        char[] $r1;

        r0 := @this: org.spongycastle.openssl.bc.BcPEMDecryptorProvider;

        $r1 := @parameter0: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.openssl.bc.BcPEMDecryptorProvider: char[] password> = $r1;

        return;
    }
    static char[] access$000(org.spongycastle.openssl.bc.BcPEMDecryptorProvider)
    {
        org.spongycastle.openssl.bc.BcPEMDecryptorProvider $r0;
        char[] r1;

        $r0 := @parameter0: org.spongycastle.openssl.bc.BcPEMDecryptorProvider;

        r1 = $r0.<org.spongycastle.openssl.bc.BcPEMDecryptorProvider: char[] password>;

        return r1;
    }
    public org.spongycastle.openssl.PEMDecryptor get(java.lang.String)
    {
        org.spongycastle.openssl.bc.BcPEMDecryptorProvider r0;
        java.lang.String $r1;
        org.spongycastle.openssl.bc.BcPEMDecryptorProvider$1 $r2;

        r0 := @this: org.spongycastle.openssl.bc.BcPEMDecryptorProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.openssl.bc.BcPEMDecryptorProvider$1;

        specialinvoke $r2.<org.spongycastle.openssl.bc.BcPEMDecryptorProvider$1: void <init>(org.spongycastle.openssl.bc.BcPEMDecryptorProvider,java.lang.String)>(r0, $r1);

        return $r2;
    }
