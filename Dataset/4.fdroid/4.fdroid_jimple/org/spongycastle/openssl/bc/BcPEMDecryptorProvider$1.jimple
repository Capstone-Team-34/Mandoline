org.spongycastle.openssl.bc.BcPEMDecryptorProvider$1 extends java.lang.Object implements org.spongycastle.openssl.PEMDecryptor
final org.spongycastle.openssl.bc.BcPEMDecryptorProvider this$0
final java.lang.String val$dekAlgName
    void <init>(org.spongycastle.openssl.bc.BcPEMDecryptorProvider, java.lang.String)
    {
        org.spongycastle.openssl.bc.BcPEMDecryptorProvider$1 r0;
        org.spongycastle.openssl.bc.BcPEMDecryptorProvider $r1;
        java.lang.String $r2;

        r0 := @this: org.spongycastle.openssl.bc.BcPEMDecryptorProvider$1;

        $r1 := @parameter0: org.spongycastle.openssl.bc.BcPEMDecryptorProvider;

        $r2 := @parameter1: java.lang.String;

        r0.<org.spongycastle.openssl.bc.BcPEMDecryptorProvider$1: org.spongycastle.openssl.bc.BcPEMDecryptorProvider this$0> = $r1;

        r0.<org.spongycastle.openssl.bc.BcPEMDecryptorProvider$1: java.lang.String val$dekAlgName> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public byte[] decrypt(byte[], byte[]) throws org.spongycastle.openssl.PEMException
    {
        org.spongycastle.openssl.bc.BcPEMDecryptorProvider$1 r0;
        byte[] $r1, $r2;
        java.lang.String $r3;
        org.spongycastle.openssl.bc.BcPEMDecryptorProvider $r4;
        char[] $r5;
        org.spongycastle.openssl.PasswordException $r6;

        r0 := @this: org.spongycastle.openssl.bc.BcPEMDecryptorProvider$1;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r4 = r0.<org.spongycastle.openssl.bc.BcPEMDecryptorProvider$1: org.spongycastle.openssl.bc.BcPEMDecryptorProvider this$0>;

        $r5 = staticinvoke <org.spongycastle.openssl.bc.BcPEMDecryptorProvider: char[] access$000(org.spongycastle.openssl.bc.BcPEMDecryptorProvider)>($r4);

        if $r5 != null goto label1;

        $r6 = new org.spongycastle.openssl.PasswordException;

        specialinvoke $r6.<org.spongycastle.openssl.PasswordException: void <init>(java.lang.String)>("Password is null, but a password is required");

        throw $r6;

     label1:
        $r4 = r0.<org.spongycastle.openssl.bc.BcPEMDecryptorProvider$1: org.spongycastle.openssl.bc.BcPEMDecryptorProvider this$0>;

        $r5 = staticinvoke <org.spongycastle.openssl.bc.BcPEMDecryptorProvider: char[] access$000(org.spongycastle.openssl.bc.BcPEMDecryptorProvider)>($r4);

        $r3 = r0.<org.spongycastle.openssl.bc.BcPEMDecryptorProvider$1: java.lang.String val$dekAlgName>;

        $r1 = staticinvoke <org.spongycastle.openssl.bc.PEMUtilities: byte[] crypt(boolean,byte[],char[],java.lang.String,byte[])>(0, $r1, $r5, $r3, $r2);

        return $r1;
    }
