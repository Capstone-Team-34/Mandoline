org.spongycastle.openssl.PEMParser$RSAPublicKeyParser extends java.lang.Object implements org.spongycastle.util.io.pem.PemObjectParser
final org.spongycastle.openssl.PEMParser this$0
    public void <init>(org.spongycastle.openssl.PEMParser)
    {
        org.spongycastle.openssl.PEMParser$RSAPublicKeyParser r0;
        org.spongycastle.openssl.PEMParser $r1;

        r0 := @this: org.spongycastle.openssl.PEMParser$RSAPublicKeyParser;

        $r1 := @parameter0: org.spongycastle.openssl.PEMParser;

        r0.<org.spongycastle.openssl.PEMParser$RSAPublicKeyParser: org.spongycastle.openssl.PEMParser this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public java.lang.Object parseObject(org.spongycastle.util.io.pem.PemObject) throws java.io.IOException
    {
        org.spongycastle.openssl.PEMParser$RSAPublicKeyParser r0;
        org.spongycastle.util.io.pem.PemObject $r1;
        org.spongycastle.asn1.DERNull $r2;
        byte[] $r3;
        org.spongycastle.asn1.pkcs.RSAPublicKey $r4;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r5;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r6;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r7;
        java.io.IOException r8;
        java.lang.Exception r9;
        org.spongycastle.openssl.PEMException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;

        r0 := @this: org.spongycastle.openssl.PEMParser$RSAPublicKeyParser;

        $r1 := @parameter0: org.spongycastle.util.io.pem.PemObject;

     label1:
        $r3 = virtualinvoke $r1.<org.spongycastle.util.io.pem.PemObject: byte[] getContent()>();

        $r4 = staticinvoke <org.spongycastle.asn1.pkcs.RSAPublicKey: org.spongycastle.asn1.pkcs.RSAPublicKey getInstance(java.lang.Object)>($r3);

     label2:
        $r5 = new org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r6 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r7 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rsaEncryption>;

        $r2 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

     label3:
        specialinvoke $r6.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r7, $r2);

        specialinvoke $r5.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r6, $r4);

     label4:
        return $r5;

     label5:
        r8 := @caughtexception;

        throw r8;

     label6:
        r9 := @caughtexception;

        $r10 = new org.spongycastle.openssl.PEMException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem extracting key: ");

        $r12 = virtualinvoke r9.<java.lang.Exception: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.spongycastle.openssl.PEMException: void <init>(java.lang.String,java.lang.Exception)>($r12, r9);

        throw $r10;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }
