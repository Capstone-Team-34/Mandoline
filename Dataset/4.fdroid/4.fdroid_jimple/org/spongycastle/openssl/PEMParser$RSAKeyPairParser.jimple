org.spongycastle.openssl.PEMParser$RSAKeyPairParser extends java.lang.Object implements org.spongycastle.openssl.PEMKeyPairParser
final org.spongycastle.openssl.PEMParser this$0
    private void <init>(org.spongycastle.openssl.PEMParser)
    {
        org.spongycastle.openssl.PEMParser$RSAKeyPairParser r0;
        org.spongycastle.openssl.PEMParser $r1;

        r0 := @this: org.spongycastle.openssl.PEMParser$RSAKeyPairParser;

        $r1 := @parameter0: org.spongycastle.openssl.PEMParser;

        r0.<org.spongycastle.openssl.PEMParser$RSAKeyPairParser: org.spongycastle.openssl.PEMParser this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(org.spongycastle.openssl.PEMParser, org.spongycastle.openssl.PEMParser$1)
    {
        org.spongycastle.openssl.PEMParser$RSAKeyPairParser r0;
        org.spongycastle.openssl.PEMParser $r1;
        org.spongycastle.openssl.PEMParser$1 $r2;

        r0 := @this: org.spongycastle.openssl.PEMParser$RSAKeyPairParser;

        $r1 := @parameter0: org.spongycastle.openssl.PEMParser;

        $r2 := @parameter1: org.spongycastle.openssl.PEMParser$1;

        specialinvoke r0.<org.spongycastle.openssl.PEMParser$RSAKeyPairParser: void <init>(org.spongycastle.openssl.PEMParser)>($r1);

        return;
    }
    public org.spongycastle.openssl.PEMKeyPair parse(byte[]) throws java.io.IOException
    {
        org.spongycastle.openssl.PEMParser$RSAKeyPairParser r0;
        byte[] $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r2;
        org.spongycastle.asn1.pkcs.RSAPublicKey r3;
        org.spongycastle.asn1.ASN1Sequence $r4;
        int $i0;
        org.spongycastle.openssl.PEMException $r5;
        java.io.IOException r6;
        org.spongycastle.asn1.pkcs.RSAPrivateKey $r7;
        java.math.BigInteger $r8, $r9;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r10;
        org.spongycastle.asn1.DERNull $r11;
        org.spongycastle.openssl.PEMKeyPair $r12;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r13;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r14;
        java.lang.Exception r15;
        java.lang.StringBuilder $r16;
        java.lang.String $r17;

        r0 := @this: org.spongycastle.openssl.PEMParser$RSAKeyPairParser;

        $r1 := @parameter0: byte[];

     label01:
        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r1);

        $i0 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Sequence: int size()>();

     label02:
        if $i0 == 9 goto label05;

        $r5 = new org.spongycastle.openssl.PEMException;

     label03:
        specialinvoke $r5.<org.spongycastle.openssl.PEMException: void <init>(java.lang.String)>("malformed sequence in RSA private key");

        throw $r5;

     label04:
        r6 := @caughtexception;

        throw r6;

     label05:
        $r7 = staticinvoke <org.spongycastle.asn1.pkcs.RSAPrivateKey: org.spongycastle.asn1.pkcs.RSAPrivateKey getInstance(java.lang.Object)>($r4);

     label06:
        r3 = new org.spongycastle.asn1.pkcs.RSAPublicKey;

     label07:
        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.pkcs.RSAPrivateKey: java.math.BigInteger getModulus()>();

        $r9 = virtualinvoke $r7.<org.spongycastle.asn1.pkcs.RSAPrivateKey: java.math.BigInteger getPublicExponent()>();

        specialinvoke r3.<org.spongycastle.asn1.pkcs.RSAPublicKey: void <init>(java.math.BigInteger,java.math.BigInteger)>($r8, $r9);

     label08:
        r2 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r10 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rsaEncryption>;

        $r11 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

     label09:
        specialinvoke r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r10, $r11);

     label10:
        $r12 = new org.spongycastle.openssl.PEMKeyPair;

        $r13 = new org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

     label11:
        specialinvoke $r13.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>(r2, r3);

     label12:
        $r14 = new org.spongycastle.asn1.pkcs.PrivateKeyInfo;

     label13:
        specialinvoke $r14.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>(r2, $r7);

        specialinvoke $r12.<org.spongycastle.openssl.PEMKeyPair: void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo,org.spongycastle.asn1.pkcs.PrivateKeyInfo)>($r13, $r14);

     label14:
        return $r12;

     label15:
        r15 := @caughtexception;

        $r5 = new org.spongycastle.openssl.PEMException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem creating RSA private key: ");

        $r17 = virtualinvoke r15.<java.lang.Exception: java.lang.String toString()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.spongycastle.openssl.PEMException: void <init>(java.lang.String,java.lang.Exception)>($r17, r15);

        throw $r5;

        catch java.io.IOException from label01 to label02 with label04;
        catch java.io.IOException from label03 to label04 with label04;
        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.io.IOException from label05 to label06 with label04;
        catch java.io.IOException from label07 to label08 with label04;
        catch java.io.IOException from label09 to label10 with label04;
        catch java.io.IOException from label11 to label12 with label04;
        catch java.io.IOException from label13 to label14 with label04;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }
