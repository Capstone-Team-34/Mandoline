org.spongycastle.openssl.PEMParser extends org.spongycastle.util.io.pem.PemReader
private final java.util.Map parsers
    public void <init>(java.io.Reader)
    {
        org.spongycastle.openssl.PEMParser r0;
        java.io.Reader $r1;
        java.util.HashMap $r2;
        java.util.Map $r3;
        org.spongycastle.openssl.PEMParser$PKCS10CertificationRequestParser $r4;
        org.spongycastle.openssl.PEMParser$X509CertificateParser $r5;
        org.spongycastle.openssl.PEMParser$X509TrustedCertificateParser $r6;
        org.spongycastle.openssl.PEMParser$X509CRLParser $r7;
        org.spongycastle.openssl.PEMParser$PKCS7Parser $r8;
        org.spongycastle.openssl.PEMParser$X509AttributeCertificateParser $r9;
        org.spongycastle.openssl.PEMParser$ECCurveParamsParser $r10;
        org.spongycastle.openssl.PEMParser$PublicKeyParser $r11;
        org.spongycastle.openssl.PEMParser$RSAPublicKeyParser $r12;
        org.spongycastle.openssl.PEMParser$KeyPairParser $r13;
        org.spongycastle.openssl.PEMParser$RSAKeyPairParser $r14;
        org.spongycastle.openssl.PEMParser$DSAKeyPairParser $r15;
        org.spongycastle.openssl.PEMParser$ECDSAKeyPairParser $r16;
        org.spongycastle.openssl.PEMParser$EncryptedPrivateKeyParser $r17;
        org.spongycastle.openssl.PEMParser$PrivateKeyParser $r18;

        r0 := @this: org.spongycastle.openssl.PEMParser;

        $r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<org.spongycastle.util.io.pem.PemReader: void <init>(java.io.Reader)>($r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers> = $r2;

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r4 = new org.spongycastle.openssl.PEMParser$PKCS10CertificationRequestParser;

        specialinvoke $r4.<org.spongycastle.openssl.PEMParser$PKCS10CertificationRequestParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMParser$1)>(r0, null);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CERTIFICATE REQUEST", $r4);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r4 = new org.spongycastle.openssl.PEMParser$PKCS10CertificationRequestParser;

        specialinvoke $r4.<org.spongycastle.openssl.PEMParser$PKCS10CertificationRequestParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMParser$1)>(r0, null);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("NEW CERTIFICATE REQUEST", $r4);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r5 = new org.spongycastle.openssl.PEMParser$X509CertificateParser;

        specialinvoke $r5.<org.spongycastle.openssl.PEMParser$X509CertificateParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMParser$1)>(r0, null);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CERTIFICATE", $r5);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r6 = new org.spongycastle.openssl.PEMParser$X509TrustedCertificateParser;

        specialinvoke $r6.<org.spongycastle.openssl.PEMParser$X509TrustedCertificateParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMParser$1)>(r0, null);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("TRUSTED CERTIFICATE", $r6);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r5 = new org.spongycastle.openssl.PEMParser$X509CertificateParser;

        specialinvoke $r5.<org.spongycastle.openssl.PEMParser$X509CertificateParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMParser$1)>(r0, null);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("X509 CERTIFICATE", $r5);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r7 = new org.spongycastle.openssl.PEMParser$X509CRLParser;

        specialinvoke $r7.<org.spongycastle.openssl.PEMParser$X509CRLParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMParser$1)>(r0, null);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("X509 CRL", $r7);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r8 = new org.spongycastle.openssl.PEMParser$PKCS7Parser;

        specialinvoke $r8.<org.spongycastle.openssl.PEMParser$PKCS7Parser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMParser$1)>(r0, null);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PKCS7", $r8);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r9 = new org.spongycastle.openssl.PEMParser$X509AttributeCertificateParser;

        specialinvoke $r9.<org.spongycastle.openssl.PEMParser$X509AttributeCertificateParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMParser$1)>(r0, null);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ATTRIBUTE CERTIFICATE", $r9);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r10 = new org.spongycastle.openssl.PEMParser$ECCurveParamsParser;

        specialinvoke $r10.<org.spongycastle.openssl.PEMParser$ECCurveParamsParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMParser$1)>(r0, null);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("EC PARAMETERS", $r10);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r11 = new org.spongycastle.openssl.PEMParser$PublicKeyParser;

        specialinvoke $r11.<org.spongycastle.openssl.PEMParser$PublicKeyParser: void <init>(org.spongycastle.openssl.PEMParser)>(r0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PUBLIC KEY", $r11);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r12 = new org.spongycastle.openssl.PEMParser$RSAPublicKeyParser;

        specialinvoke $r12.<org.spongycastle.openssl.PEMParser$RSAPublicKeyParser: void <init>(org.spongycastle.openssl.PEMParser)>(r0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("RSA PUBLIC KEY", $r12);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r13 = new org.spongycastle.openssl.PEMParser$KeyPairParser;

        $r14 = new org.spongycastle.openssl.PEMParser$RSAKeyPairParser;

        specialinvoke $r14.<org.spongycastle.openssl.PEMParser$RSAKeyPairParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMParser$1)>(r0, null);

        specialinvoke $r13.<org.spongycastle.openssl.PEMParser$KeyPairParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMKeyPairParser)>(r0, $r14);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("RSA PRIVATE KEY", $r13);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r13 = new org.spongycastle.openssl.PEMParser$KeyPairParser;

        $r15 = new org.spongycastle.openssl.PEMParser$DSAKeyPairParser;

        specialinvoke $r15.<org.spongycastle.openssl.PEMParser$DSAKeyPairParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMParser$1)>(r0, null);

        specialinvoke $r13.<org.spongycastle.openssl.PEMParser$KeyPairParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMKeyPairParser)>(r0, $r15);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("DSA PRIVATE KEY", $r13);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r13 = new org.spongycastle.openssl.PEMParser$KeyPairParser;

        $r16 = new org.spongycastle.openssl.PEMParser$ECDSAKeyPairParser;

        specialinvoke $r16.<org.spongycastle.openssl.PEMParser$ECDSAKeyPairParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMParser$1)>(r0, null);

        specialinvoke $r13.<org.spongycastle.openssl.PEMParser$KeyPairParser: void <init>(org.spongycastle.openssl.PEMParser,org.spongycastle.openssl.PEMKeyPairParser)>(r0, $r16);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("EC PRIVATE KEY", $r13);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r17 = new org.spongycastle.openssl.PEMParser$EncryptedPrivateKeyParser;

        specialinvoke $r17.<org.spongycastle.openssl.PEMParser$EncryptedPrivateKeyParser: void <init>(org.spongycastle.openssl.PEMParser)>(r0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ENCRYPTED PRIVATE KEY", $r17);

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r18 = new org.spongycastle.openssl.PEMParser$PrivateKeyParser;

        specialinvoke $r18.<org.spongycastle.openssl.PEMParser$PrivateKeyParser: void <init>(org.spongycastle.openssl.PEMParser)>(r0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("PRIVATE KEY", $r18);

        return;
    }
    public java.lang.Object readObject() throws java.io.IOException
    {
        org.spongycastle.openssl.PEMParser r0;
        org.spongycastle.util.io.pem.PemObject $r1;
        java.lang.String $r2;
        java.util.Map $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.spongycastle.util.io.pem.PemObjectParser $r5;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: org.spongycastle.openssl.PEMParser;

        $r1 = virtualinvoke r0.<org.spongycastle.openssl.PEMParser: org.spongycastle.util.io.pem.PemObject readPemObject()>();

        if $r1 == null goto label2;

        $r2 = virtualinvoke $r1.<org.spongycastle.util.io.pem.PemObject: java.lang.String getType()>();

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.spongycastle.openssl.PEMParser: java.util.Map parsers>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (org.spongycastle.util.io.pem.PemObjectParser) $r4;

        $r4 = interfaceinvoke $r5.<org.spongycastle.util.io.pem.PemObjectParser: java.lang.Object parseObject(org.spongycastle.util.io.pem.PemObject)>($r1);

        return $r4;

     label1:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unrecognised object: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r6;

     label2:
        return null;
    }
