org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder extends java.lang.Object
public static final java.lang.String AES_128_CBC
public static final java.lang.String AES_192_CBC
public static final java.lang.String AES_256_CBC
public static final java.lang.String DES3_CBC
public static final java.lang.String PBE_SHA1_2DES
public static final java.lang.String PBE_SHA1_3DES
public static final java.lang.String PBE_SHA1_RC2_128
public static final java.lang.String PBE_SHA1_RC2_40
public static final java.lang.String PBE_SHA1_RC4_128
public static final java.lang.String PBE_SHA1_RC4_40
private org.spongycastle.asn1.ASN1ObjectIdentifier algOID
private javax.crypto.Cipher cipher
private org.spongycastle.jcajce.util.JcaJceHelper helper
int iterationCount
private javax.crypto.SecretKey key
private java.security.AlgorithmParameterGenerator paramGen
private java.security.AlgorithmParameters params
private char[] password
private java.security.SecureRandom random
byte[] salt
    static void <clinit>()
    {
        org.spongycastle.asn1.ASN1ObjectIdentifier $r0;
        java.lang.String $r1;

        $r0 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes128_CBC>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.lang.String AES_128_CBC> = $r1;

        $r0 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes192_CBC>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.lang.String AES_192_CBC> = $r1;

        $r0 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes256_CBC>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.lang.String AES_256_CBC> = $r1;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier des_EDE3_CBC>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.lang.String DES3_CBC> = $r1;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd128BitRC4>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.lang.String PBE_SHA1_RC4_128> = $r1;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd40BitRC4>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.lang.String PBE_SHA1_RC4_40> = $r1;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd3_KeyTripleDES_CBC>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.lang.String PBE_SHA1_3DES> = $r1;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd2_KeyTripleDES_CBC>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.lang.String PBE_SHA1_2DES> = $r1;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd128BitRC2_CBC>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.lang.String PBE_SHA1_RC2_128> = $r1;

        $r0 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd40BitRC2_CBC>;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.lang.String PBE_SHA1_RC2_40> = $r1;

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.jcajce.util.DefaultJcaJceHelper $r2;

        r0 := @this: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algOID> = $r1;

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: int iterationCount> = 2048;

        return;
    }
    static javax.crypto.Cipher access$000(org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder)
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder $r0;
        javax.crypto.Cipher r1;

        $r0 := @parameter0: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder;

        r1 = $r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: javax.crypto.Cipher cipher>;

        return r1;
    }
    static javax.crypto.SecretKey access$100(org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder)
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder $r0;
        javax.crypto.SecretKey r1;

        $r0 := @parameter0: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder;

        r1 = $r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: javax.crypto.SecretKey key>;

        return r1;
    }
    public org.spongycastle.operator.OutputEncryptor build() throws org.spongycastle.operator.OperatorCreationException
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder r0;
        org.spongycastle.asn1.pkcs.KeyDerivationFunc r1, r2;
        int $i0;
        byte[] $r3;
        java.security.SecureRandom $r4;
        org.spongycastle.jcajce.util.JcaJceHelper $r5;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r6;
        java.lang.String $r7;
        javax.crypto.Cipher $r8;
        boolean $z0;
        java.security.AlgorithmParameterGenerator $r9;
        java.security.AlgorithmParameters $r10;
        org.spongycastle.asn1.ASN1Primitive $r11;
        org.spongycastle.asn1.pkcs.PBKDF2Params $r12;
        org.spongycastle.asn1.ASN1EncodableVector r13;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r14;
        org.spongycastle.asn1.DERSequence $r15;
        org.spongycastle.asn1.pkcs.PBES2Parameters $r16;
        char[] $r17;
        javax.crypto.SecretKey $r18;
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder$1 $r19;
        java.security.GeneralSecurityException r20, r24, r29;
        org.spongycastle.operator.OperatorCreationException $r21;
        java.lang.StringBuilder $r22;
        java.io.IOException r23;
        org.spongycastle.asn1.DEROctetString $r25;
        org.spongycastle.asn1.ASN1Integer $r26;
        long $l1;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r27;
        org.spongycastle.jcajce.PKCS12KeyWithParameters $r28;

        r0 := @this: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder;

        $r3 = newarray (byte)[20];

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: byte[] salt> = $r3;

        $r4 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.security.SecureRandom random>;

        if $r4 != null goto label01;

        $r4 = new java.security.SecureRandom;

        specialinvoke $r4.<java.security.SecureRandom: void <init>()>();

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.security.SecureRandom random> = $r4;

     label01:
        $r4 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.security.SecureRandom random>;

        $r3 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: byte[] salt>;

        virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3);

        $r5 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        $r6 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algOID>;

     label02:
        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r8 = interfaceinvoke $r5.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.Cipher createCipher(java.lang.String)>($r7);

     label03:
        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: javax.crypto.Cipher cipher> = $r8;

        $r6 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algOID>;

     label04:
        $z0 = staticinvoke <org.spongycastle.openssl.jcajce.PEMUtilities: boolean isPKCS5Scheme2(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r6);

     label05:
        if $z0 == 0 goto label08;

        $r5 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        $r6 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algOID>;

     label06:
        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r9 = interfaceinvoke $r5.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.AlgorithmParameterGenerator createAlgorithmParameterGenerator(java.lang.String)>($r7);

     label07:
        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.security.AlgorithmParameterGenerator paramGen> = $r9;

     label08:
        $r6 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algOID>;

        $z0 = staticinvoke <org.spongycastle.openssl.jcajce.PEMUtilities: boolean isPKCS5Scheme2(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r6);

        if $z0 == 0 goto label26;

        $r9 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.security.AlgorithmParameterGenerator paramGen>;

        $r10 = virtualinvoke $r9.<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameters generateParameters()>();

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.security.AlgorithmParameters params> = $r10;

        r2 = new org.spongycastle.asn1.pkcs.KeyDerivationFunc;

        $r6 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algOID>;

        $r10 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.security.AlgorithmParameters params>;

     label09:
        $r3 = virtualinvoke $r10.<java.security.AlgorithmParameters: byte[] getEncoded()>();

        $r11 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r3);

        specialinvoke r2.<org.spongycastle.asn1.pkcs.KeyDerivationFunc: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r6, $r11);

     label10:
        r1 = new org.spongycastle.asn1.pkcs.KeyDerivationFunc;

        $r6 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_PBKDF2>;

        $r12 = new org.spongycastle.asn1.pkcs.PBKDF2Params;

        $r3 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: byte[] salt>;

        $i0 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: int iterationCount>;

     label11:
        specialinvoke $r12.<org.spongycastle.asn1.pkcs.PBKDF2Params: void <init>(byte[],int)>($r3, $i0);

        specialinvoke r1.<org.spongycastle.asn1.pkcs.KeyDerivationFunc: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r6, $r12);

     label12:
        r13 = new org.spongycastle.asn1.ASN1EncodableVector;

     label13:
        specialinvoke r13.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        virtualinvoke r13.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>(r1);

        virtualinvoke r13.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>(r2);

     label14:
        r14 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r6 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_PBES2>;

        $r15 = new org.spongycastle.asn1.DERSequence;

     label15:
        specialinvoke $r15.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r13);

        $r16 = staticinvoke <org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.PBES2Parameters getInstance(java.lang.Object)>($r15);

        specialinvoke r14.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r6, $r16);

     label16:
        $r5 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        $r6 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algOID>;

     label17:
        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

     label18:
        $r17 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: char[] password>;

        $r3 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: byte[] salt>;

        $i0 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: int iterationCount>;

     label19:
        $r18 = staticinvoke <org.spongycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.spongycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int)>($r5, $r7, $r17, $r3, $i0);

     label20:
        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: javax.crypto.SecretKey key> = $r18;

        $r8 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: javax.crypto.Cipher cipher>;

        $r18 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: javax.crypto.SecretKey key>;

        $r10 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.security.AlgorithmParameters params>;

     label21:
        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(1, $r18, $r10);

     label22:
        $r19 = new org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder$1;

        specialinvoke $r19.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder$1: void <init>(org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder,org.spongycastle.asn1.x509.AlgorithmIdentifier)>(r0, r14);

        return $r19;

     label23:
        r20 := @caughtexception;

        $r21 = new org.spongycastle.operator.OperatorCreationException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algOID>;

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not available: ");

        $r7 = virtualinvoke r20.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r7, r20);

        throw $r21;

     label24:
        r23 := @caughtexception;

        $r21 = new org.spongycastle.operator.OperatorCreationException;

        $r7 = virtualinvoke r23.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r21.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r7, r23);

        throw $r21;

     label25:
        r24 := @caughtexception;

        $r21 = new org.spongycastle.operator.OperatorCreationException;

        $r7 = virtualinvoke r24.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        specialinvoke $r21.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r7, r24);

        throw $r21;

     label26:
        $r6 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algOID>;

        $z0 = staticinvoke <org.spongycastle.openssl.jcajce.PEMUtilities: boolean isPKCS12(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r6);

        if $z0 == 0 goto label30;

        r13 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r13.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r25 = new org.spongycastle.asn1.DEROctetString;

        $r3 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: byte[] salt>;

        specialinvoke $r25.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r3);

        virtualinvoke r13.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r25);

        $r26 = new org.spongycastle.asn1.ASN1Integer;

        $i0 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: int iterationCount>;

        $l1 = (long) $i0;

        specialinvoke $r26.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>($l1);

        virtualinvoke r13.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r26);

        r14 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r6 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algOID>;

        $r15 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r15.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r13);

        $r27 = staticinvoke <org.spongycastle.asn1.pkcs.PKCS12PBEParams: org.spongycastle.asn1.pkcs.PKCS12PBEParams getInstance(java.lang.Object)>($r15);

        specialinvoke r14.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r6, $r27);

        $r8 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: javax.crypto.Cipher cipher>;

        $r28 = new org.spongycastle.jcajce.PKCS12KeyWithParameters;

        $r17 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: char[] password>;

        $r3 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: byte[] salt>;

        $i0 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: int iterationCount>;

     label27:
        specialinvoke $r28.<org.spongycastle.jcajce.PKCS12KeyWithParameters: void <init>(char[],byte[],int)>($r17, $r3, $i0);

        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r28);

     label28:
        goto label22;

     label29:
        r29 := @caughtexception;

        $r21 = new org.spongycastle.operator.OperatorCreationException;

        $r7 = virtualinvoke r29.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        specialinvoke $r21.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r7, r29);

        throw $r21;

     label30:
        $r21 = new org.spongycastle.operator.OperatorCreationException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown algorithm: ");

        $r6 = r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algOID>;

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r7, null);

        throw $r21;

        catch java.security.GeneralSecurityException from label02 to label03 with label23;
        catch java.security.GeneralSecurityException from label04 to label05 with label23;
        catch java.security.GeneralSecurityException from label06 to label07 with label23;
        catch java.io.IOException from label09 to label10 with label24;
        catch java.io.IOException from label11 to label12 with label24;
        catch java.io.IOException from label13 to label14 with label24;
        catch java.io.IOException from label15 to label16 with label24;
        catch java.security.GeneralSecurityException from label17 to label18 with label25;
        catch java.security.GeneralSecurityException from label19 to label20 with label25;
        catch java.security.GeneralSecurityException from label21 to label22 with label25;
        catch java.security.GeneralSecurityException from label27 to label28 with label29;
    }
    public org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder setIterationCount(int)
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder r0;
        int $i0;

        r0 := @this: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder;

        $i0 := @parameter0: int;

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: int iterationCount> = $i0;

        return r0;
    }
    public org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder setPasssword(char[])
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder r0;
        char[] $r1;

        r0 := @this: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder;

        $r1 := @parameter0: char[];

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: char[] password> = $r1;

        return r0;
    }
    public org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder setProvider(java.lang.String)
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder r0;
        java.lang.String $r1;
        org.spongycastle.jcajce.util.NamedJcaJceHelper $r2;

        r0 := @this: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.jcajce.util.NamedJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.NamedJcaJceHelper: void <init>(java.lang.String)>($r1);

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder setProvider(java.security.Provider)
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder r0;
        java.security.Provider $r1;
        org.spongycastle.jcajce.util.ProviderJcaJceHelper $r2;

        r0 := @this: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.jcajce.util.ProviderJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.ProviderJcaJceHelper: void <init>(java.security.Provider)>($r1);

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder setRandom(java.security.SecureRandom)
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder r0;
        java.security.SecureRandom $r1;

        r0 := @this: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder;

        $r1 := @parameter0: java.security.SecureRandom;

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: java.security.SecureRandom random> = $r1;

        return r0;
    }
