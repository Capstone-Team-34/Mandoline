org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1 extends java.lang.Object implements org.spongycastle.openssl.PEMEncryptor
final org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder this$0
final byte[] val$iv
final char[] val$password
    void <init>(org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder, byte[], char[])
    {
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1 r0;
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder $r1;
        byte[] $r2;
        char[] $r3;

        r0 := @this: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1;

        $r1 := @parameter0: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: char[];

        r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder this$0> = $r1;

        r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1: byte[] val$iv> = $r2;

        r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1: char[] val$password> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public byte[] encrypt(byte[]) throws org.spongycastle.openssl.PEMException
    {
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1 r0;
        byte[] $r1, $r3;
        char[] $r2;
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder $r4;
        org.spongycastle.jcajce.util.JcaJceHelper $r5;
        java.lang.String $r6;

        r0 := @this: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1;

        $r1 := @parameter0: byte[];

        $r4 = r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder this$0>;

        $r5 = staticinvoke <org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper access$100(org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder)>($r4);

        $r2 = r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1: char[] val$password>;

        $r4 = r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder this$0>;

        $r6 = staticinvoke <org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: java.lang.String access$000(org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder)>($r4);

        $r3 = r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1: byte[] val$iv>;

        $r1 = staticinvoke <org.spongycastle.openssl.jcajce.PEMUtilities: byte[] crypt(boolean,org.spongycastle.jcajce.util.JcaJceHelper,byte[],char[],java.lang.String,byte[])>(1, $r5, $r1, $r2, $r6, $r3);

        return $r1;
    }
    public java.lang.String getAlgorithm()
    {
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1 r0;
        java.lang.String $r1;
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder $r2;

        r0 := @this: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1;

        $r2 = r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder this$0>;

        $r1 = staticinvoke <org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: java.lang.String access$000(org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder)>($r2);

        return $r1;
    }
    public byte[] getIV()
    {
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1 r0;
        byte[] r1;

        r0 := @this: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1;

        r1 = r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1: byte[] val$iv>;

        return r1;
    }
