org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder extends java.lang.Object
private final java.lang.String algorithm
private org.spongycastle.jcajce.util.JcaJceHelper helper
private java.security.SecureRandom random
    public void <init>(java.lang.String)
    {
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder r0;
        java.lang.String $r1;
        org.spongycastle.jcajce.util.DefaultJcaJceHelper $r2;

        r0 := @this: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: java.lang.String algorithm> = $r1;

        return;
    }
    static java.lang.String access$000(org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder)
    {
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder $r0;
        java.lang.String r1;

        $r0 := @parameter0: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder;

        r1 = $r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: java.lang.String algorithm>;

        return r1;
    }
    static org.spongycastle.jcajce.util.JcaJceHelper access$100(org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder)
    {
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder $r0;
        org.spongycastle.jcajce.util.JcaJceHelper r1;

        $r0 := @parameter0: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder;

        r1 = $r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        return r1;
    }
    public org.spongycastle.openssl.PEMEncryptor build(char[])
    {
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder r0;
        char[] $r1;
        byte[] r2;
        boolean $z0;
        java.security.SecureRandom $r3;
        java.lang.String $r4;
        byte b0;
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1 $r5;

        r0 := @this: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder;

        $r1 := @parameter0: char[];

        $r3 = r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: java.security.SecureRandom random>;

        if $r3 != null goto label1;

        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: java.security.SecureRandom random> = $r3;

     label1:
        $r4 = r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: java.lang.String algorithm>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("AES-");

        if $z0 == 0 goto label3;

        b0 = 16;

     label2:
        r2 = newarray (byte)[b0];

        $r3 = r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: java.security.SecureRandom random>;

        virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>(r2);

        $r5 = new org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1;

        specialinvoke $r5.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder$1: void <init>(org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder,byte[],char[])>(r0, r2, $r1);

        return $r5;

     label3:
        b0 = 8;

        goto label2;
    }
    public org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder setProvider(java.lang.String)
    {
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder r0;
        java.lang.String $r1;
        org.spongycastle.jcajce.util.NamedJcaJceHelper $r2;

        r0 := @this: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.jcajce.util.NamedJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.NamedJcaJceHelper: void <init>(java.lang.String)>($r1);

        r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder setProvider(java.security.Provider)
    {
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder r0;
        java.security.Provider $r1;
        org.spongycastle.jcajce.util.ProviderJcaJceHelper $r2;

        r0 := @this: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.jcajce.util.ProviderJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.ProviderJcaJceHelper: void <init>(java.security.Provider)>($r1);

        r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder setSecureRandom(java.security.SecureRandom)
    {
        org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder r0;
        java.security.SecureRandom $r1;

        r0 := @this: org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder;

        $r1 := @parameter0: java.security.SecureRandom;

        r0.<org.spongycastle.openssl.jcajce.JcePEMEncryptorBuilder: java.security.SecureRandom random> = $r1;

        return r0;
    }
