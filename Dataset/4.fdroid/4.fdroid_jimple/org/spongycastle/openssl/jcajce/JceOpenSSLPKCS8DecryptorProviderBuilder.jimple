org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder extends java.lang.Object
private org.spongycastle.jcajce.util.JcaJceHelper helper
    public void <init>()
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder r0;
        org.spongycastle.jcajce.util.DefaultJcaJceHelper $r1;

        r0 := @this: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r1.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r1;

        $r1 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r1.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r1;

        return;
    }
    static org.spongycastle.jcajce.util.JcaJceHelper access$000(org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder)
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder $r0;
        org.spongycastle.jcajce.util.JcaJceHelper r1;

        $r0 := @parameter0: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder;

        r1 = $r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        return r1;
    }
    public org.spongycastle.operator.InputDecryptorProvider build(char[]) throws org.spongycastle.operator.OperatorCreationException
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder r0;
        char[] $r1;
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder$1 $r2;

        r0 := @this: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder;

        $r1 := @parameter0: char[];

        $r2 = new org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder$1;

        specialinvoke $r2.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder$1: void <init>(org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder,char[])>(r0, $r1);

        return $r2;
    }
    public org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder setProvider(java.lang.String)
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder r0;
        java.lang.String $r1;
        org.spongycastle.jcajce.util.NamedJcaJceHelper $r2;

        r0 := @this: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.jcajce.util.NamedJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.NamedJcaJceHelper: void <init>(java.lang.String)>($r1);

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder setProvider(java.security.Provider)
    {
        org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder r0;
        java.security.Provider $r1;
        org.spongycastle.jcajce.util.ProviderJcaJceHelper $r2;

        r0 := @this: org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.jcajce.util.ProviderJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.ProviderJcaJceHelper: void <init>(java.security.Provider)>($r1);

        r0.<org.spongycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return r0;
    }
