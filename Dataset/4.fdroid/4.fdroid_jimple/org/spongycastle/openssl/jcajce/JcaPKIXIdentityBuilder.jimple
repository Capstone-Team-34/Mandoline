org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder extends java.lang.Object
private org.spongycastle.cert.jcajce.JcaX509CertificateConverter certConverter
private org.spongycastle.openssl.jcajce.JcaPEMKeyConverter keyConverter
    public void <init>()
    {
        org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder r0;
        org.spongycastle.openssl.jcajce.JcaPEMKeyConverter $r1;
        org.spongycastle.cert.jcajce.JcaX509CertificateConverter $r2;

        r0 := @this: org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.spongycastle.openssl.jcajce.JcaPEMKeyConverter;

        specialinvoke $r1.<org.spongycastle.openssl.jcajce.JcaPEMKeyConverter: void <init>()>();

        r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.openssl.jcajce.JcaPEMKeyConverter keyConverter> = $r1;

        $r2 = new org.spongycastle.cert.jcajce.JcaX509CertificateConverter;

        specialinvoke $r2.<org.spongycastle.cert.jcajce.JcaX509CertificateConverter: void <init>()>();

        r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.cert.jcajce.JcaX509CertificateConverter certConverter> = $r2;

        return;
    }
    private void checkFile(java.io.File) throws java.io.IOException
    {
        org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder r0;
        java.io.File $r1;
        boolean $z0;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.io.FileNotFoundException $r5;

        r0 := @this: org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder;

        $r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open file ");

        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for reading.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r5 = new java.io.FileNotFoundException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open ");

        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": it does not exist.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r4);

        throw $r5;

     label2:
        return;
    }
    public org.spongycastle.pkix.jcajce.JcaPKIXIdentity build(java.io.File, java.io.File) throws java.io.IOException, java.security.cert.CertificateException
    {
        org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder r0;
        java.io.File $r1, $r2;
        java.io.FileInputStream r3, r4;
        org.spongycastle.pkix.jcajce.JcaPKIXIdentity $r5;

        r0 := @this: org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        specialinvoke r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: void checkFile(java.io.File)>($r1);

        specialinvoke r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: void checkFile(java.io.File)>($r2);

        r4 = new java.io.FileInputStream;

        specialinvoke r4.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        r3 = new java.io.FileInputStream;

        specialinvoke r3.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        $r5 = virtualinvoke r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.pkix.jcajce.JcaPKIXIdentity build(java.io.InputStream,java.io.InputStream)>(r4, r3);

        virtualinvoke r4.<java.io.FileInputStream: void close()>();

        virtualinvoke r3.<java.io.FileInputStream: void close()>();

        return $r5;
    }
    public org.spongycastle.pkix.jcajce.JcaPKIXIdentity build(java.io.InputStream, java.io.InputStream) throws java.io.IOException, java.security.cert.CertificateException
    {
        org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder r0;
        java.io.InputStream $r1, $r2;
        org.spongycastle.openssl.PEMParser r3;
        java.util.ArrayList r4;
        java.io.InputStreamReader $r5;
        java.lang.Object $r6;
        boolean $z0;
        org.spongycastle.openssl.PEMKeyPair r7;
        org.spongycastle.openssl.jcajce.JcaPEMKeyConverter $r8;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r9;
        java.security.PrivateKey $r10;
        org.spongycastle.cert.jcajce.JcaX509CertificateConverter $r11;
        org.spongycastle.cert.X509CertificateHolder r12;
        java.security.cert.X509Certificate $r13;
        java.io.IOException $r14;
        org.spongycastle.pkix.jcajce.JcaPKIXIdentity $r15;
        int $i0;
        java.security.cert.X509Certificate[] $r16;
        java.lang.Object[] $r17;

        r0 := @this: org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.InputStream;

        r3 = new org.spongycastle.openssl.PEMParser;

        $r5 = new java.io.InputStreamReader;

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r1);

        specialinvoke r3.<org.spongycastle.openssl.PEMParser: void <init>(java.io.Reader)>($r5);

        $r6 = virtualinvoke r3.<org.spongycastle.openssl.PEMParser: java.lang.Object readObject()>();

        $z0 = $r6 instanceof org.spongycastle.openssl.PEMKeyPair;

        if $z0 == 0 goto label3;

        r7 = (org.spongycastle.openssl.PEMKeyPair) $r6;

        $r8 = r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.openssl.jcajce.JcaPEMKeyConverter keyConverter>;

        $r9 = virtualinvoke r7.<org.spongycastle.openssl.PEMKeyPair: org.spongycastle.asn1.pkcs.PrivateKeyInfo getPrivateKeyInfo()>();

        $r10 = virtualinvoke $r8.<org.spongycastle.openssl.jcajce.JcaPEMKeyConverter: java.security.PrivateKey getPrivateKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo)>($r9);

     label1:
        r3 = new org.spongycastle.openssl.PEMParser;

        $r5 = new java.io.InputStreamReader;

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r2);

        specialinvoke r3.<org.spongycastle.openssl.PEMParser: void <init>(java.io.Reader)>($r5);

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

     label2:
        $r6 = virtualinvoke r3.<org.spongycastle.openssl.PEMParser: java.lang.Object readObject()>();

        if $r6 == null goto label5;

        $r11 = r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.cert.jcajce.JcaX509CertificateConverter certConverter>;

        r12 = (org.spongycastle.cert.X509CertificateHolder) $r6;

        $r13 = virtualinvoke $r11.<org.spongycastle.cert.jcajce.JcaX509CertificateConverter: java.security.cert.X509Certificate getCertificate(org.spongycastle.cert.X509CertificateHolder)>(r12);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label2;

     label3:
        $z0 = $r6 instanceof org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        if $z0 == 0 goto label4;

        $r8 = r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.openssl.jcajce.JcaPEMKeyConverter keyConverter>;

        $r9 = (org.spongycastle.asn1.pkcs.PrivateKeyInfo) $r6;

        $r10 = virtualinvoke $r8.<org.spongycastle.openssl.jcajce.JcaPEMKeyConverter: java.security.PrivateKey getPrivateKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo)>($r9);

        goto label1;

     label4:
        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("unrecognised private key file");

        throw $r14;

     label5:
        $r15 = new org.spongycastle.pkix.jcajce.JcaPKIXIdentity;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        $r16 = newarray (java.security.cert.X509Certificate)[$i0];

        $r17 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        $r16 = (java.security.cert.X509Certificate[]) $r17;

        specialinvoke $r15.<org.spongycastle.pkix.jcajce.JcaPKIXIdentity: void <init>(java.security.PrivateKey,java.security.cert.X509Certificate[])>($r10, $r16);

        return $r15;
    }
    public org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder setProvider(java.lang.String)
    {
        org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder r0;
        java.lang.String $r1;
        org.spongycastle.openssl.jcajce.JcaPEMKeyConverter $r2;
        org.spongycastle.cert.jcajce.JcaX509CertificateConverter $r3;

        r0 := @this: org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.openssl.jcajce.JcaPEMKeyConverter keyConverter>;

        $r2 = virtualinvoke $r2.<org.spongycastle.openssl.jcajce.JcaPEMKeyConverter: org.spongycastle.openssl.jcajce.JcaPEMKeyConverter setProvider(java.lang.String)>($r1);

        r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.openssl.jcajce.JcaPEMKeyConverter keyConverter> = $r2;

        $r3 = r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.cert.jcajce.JcaX509CertificateConverter certConverter>;

        $r3 = virtualinvoke $r3.<org.spongycastle.cert.jcajce.JcaX509CertificateConverter: org.spongycastle.cert.jcajce.JcaX509CertificateConverter setProvider(java.lang.String)>($r1);

        r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.cert.jcajce.JcaX509CertificateConverter certConverter> = $r3;

        return r0;
    }
    public org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder setProvider(java.security.Provider)
    {
        org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder r0;
        java.security.Provider $r1;
        org.spongycastle.openssl.jcajce.JcaPEMKeyConverter $r2;
        org.spongycastle.cert.jcajce.JcaX509CertificateConverter $r3;

        r0 := @this: org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder;

        $r1 := @parameter0: java.security.Provider;

        $r2 = r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.openssl.jcajce.JcaPEMKeyConverter keyConverter>;

        $r2 = virtualinvoke $r2.<org.spongycastle.openssl.jcajce.JcaPEMKeyConverter: org.spongycastle.openssl.jcajce.JcaPEMKeyConverter setProvider(java.security.Provider)>($r1);

        r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.openssl.jcajce.JcaPEMKeyConverter keyConverter> = $r2;

        $r3 = r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.cert.jcajce.JcaX509CertificateConverter certConverter>;

        $r3 = virtualinvoke $r3.<org.spongycastle.cert.jcajce.JcaX509CertificateConverter: org.spongycastle.cert.jcajce.JcaX509CertificateConverter setProvider(java.security.Provider)>($r1);

        r0.<org.spongycastle.openssl.jcajce.JcaPKIXIdentityBuilder: org.spongycastle.cert.jcajce.JcaX509CertificateConverter certConverter> = $r3;

        return r0;
    }
