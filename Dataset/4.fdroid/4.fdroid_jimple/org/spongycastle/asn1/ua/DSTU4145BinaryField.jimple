org.spongycastle.asn1.ua.DSTU4145BinaryField extends org.spongycastle.asn1.ASN1Object
private int j
private int k
private int l
private int m
    public void <init>(int, int)
    {
        org.spongycastle.asn1.ua.DSTU4145BinaryField r0;
        int $i0, $i1;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145BinaryField;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: void <init>(int,int,int,int)>($i0, $i1, 0, 0);

        return;
    }
    public void <init>(int, int, int, int)
    {
        org.spongycastle.asn1.ua.DSTU4145BinaryField r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145BinaryField;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int m> = $i0;

        r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int k> = $i1;

        r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int j> = $i2;

        r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int l> = $i3;

        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.ua.DSTU4145BinaryField r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.ASN1Integer $r3;
        java.math.BigInteger $r4;
        int $i0;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145BinaryField;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

        r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int m> = $i0;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $z0 = $r2 instanceof org.spongycastle.asn1.ASN1Integer;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r3 = (org.spongycastle.asn1.ASN1Integer) $r2;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

        r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int k> = $i0;

        return;

     label1:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $z0 = $r2 instanceof org.spongycastle.asn1.ASN1Sequence;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r2);

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

        r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int k> = $i0;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

        r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int j> = $i0;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(2);

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

        r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int l> = $i0;

        return;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("object parse error");

        throw $r5;
    }
    public static org.spongycastle.asn1.ua.DSTU4145BinaryField getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.ua.DSTU4145BinaryField r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.ua.DSTU4145BinaryField;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.ua.DSTU4145BinaryField) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.ua.DSTU4145BinaryField;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.ua.DSTU4145BinaryField: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public int getK1()
    {
        org.spongycastle.asn1.ua.DSTU4145BinaryField r0;
        int i0;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145BinaryField;

        i0 = r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int k>;

        return i0;
    }
    public int getK2()
    {
        org.spongycastle.asn1.ua.DSTU4145BinaryField r0;
        int i0;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145BinaryField;

        i0 = r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int j>;

        return i0;
    }
    public int getK3()
    {
        org.spongycastle.asn1.ua.DSTU4145BinaryField r0;
        int i0;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145BinaryField;

        i0 = r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int l>;

        return i0;
    }
    public int getM()
    {
        org.spongycastle.asn1.ua.DSTU4145BinaryField r0;
        int i0;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145BinaryField;

        i0 = r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int m>;

        return i0;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.ua.DSTU4145BinaryField r0;
        org.spongycastle.asn1.ASN1EncodableVector r1, r2;
        org.spongycastle.asn1.ASN1Integer $r3;
        int $i0;
        long $l1;
        org.spongycastle.asn1.DERSequence $r4;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145BinaryField;

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = new org.spongycastle.asn1.ASN1Integer;

        $i0 = r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int m>;

        $l1 = (long) $i0;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>($l1);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $i0 = r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int j>;

        if $i0 != 0 goto label2;

        $r3 = new org.spongycastle.asn1.ASN1Integer;

        $i0 = r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int k>;

        $l1 = (long) $i0;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>($l1);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label1:
        $r4 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r4.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r2);

        return $r4;

     label2:
        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = new org.spongycastle.asn1.ASN1Integer;

        $i0 = r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int k>;

        $l1 = (long) $i0;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>($l1);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = new org.spongycastle.asn1.ASN1Integer;

        $i0 = r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int j>;

        $l1 = (long) $i0;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>($l1);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = new org.spongycastle.asn1.ASN1Integer;

        $i0 = r0.<org.spongycastle.asn1.ua.DSTU4145BinaryField: int l>;

        $l1 = (long) $i0;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>($l1);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r4 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r4.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        goto label1;
    }
