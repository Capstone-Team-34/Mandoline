org.spongycastle.asn1.ua.DSTU4145Params extends org.spongycastle.asn1.ASN1Object
private static final byte[] DEFAULT_DKE
private byte[] dke
private org.spongycastle.asn1.ua.DSTU4145ECBinary ecbinary
private org.spongycastle.asn1.ASN1ObjectIdentifier namedCurve
    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[64];

        $r0[0] = -87;

        $r0[1] = -42;

        $r0[2] = -21;

        $r0[3] = 69;

        $r0[4] = -15;

        $r0[5] = 60;

        $r0[6] = 112;

        $r0[7] = -126;

        $r0[8] = -128;

        $r0[9] = -60;

        $r0[10] = -106;

        $r0[11] = 123;

        $r0[12] = 35;

        $r0[13] = 31;

        $r0[14] = 94;

        $r0[15] = -83;

        $r0[16] = -10;

        $r0[17] = 88;

        $r0[18] = -21;

        $r0[19] = -92;

        $r0[20] = -64;

        $r0[21] = 55;

        $r0[22] = 41;

        $r0[23] = 29;

        $r0[24] = 56;

        $r0[25] = -39;

        $r0[26] = 107;

        $r0[27] = -16;

        $r0[28] = 37;

        $r0[29] = -54;

        $r0[30] = 78;

        $r0[31] = 23;

        $r0[32] = -8;

        $r0[33] = -23;

        $r0[34] = 114;

        $r0[35] = 13;

        $r0[36] = -58;

        $r0[37] = 21;

        $r0[38] = -76;

        $r0[39] = 58;

        $r0[40] = 40;

        $r0[41] = -105;

        $r0[42] = 95;

        $r0[43] = 11;

        $r0[44] = -63;

        $r0[45] = -34;

        $r0[46] = -93;

        $r0[47] = 100;

        $r0[48] = 56;

        $r0[49] = -75;

        $r0[50] = 100;

        $r0[51] = -22;

        $r0[52] = 44;

        $r0[53] = 23;

        $r0[54] = -97;

        $r0[55] = -48;

        $r0[56] = 18;

        $r0[57] = 62;

        $r0[58] = 109;

        $r0[59] = -72;

        $r0[60] = -6;

        $r0[61] = -59;

        $r0[62] = 121;

        $r0[63] = 4;

        <org.spongycastle.asn1.ua.DSTU4145Params: byte[] DEFAULT_DKE> = $r0;

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.asn1.ua.DSTU4145Params r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145Params;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = <org.spongycastle.asn1.ua.DSTU4145Params: byte[] DEFAULT_DKE>;

        r0.<org.spongycastle.asn1.ua.DSTU4145Params: byte[] dke> = $r2;

        r0.<org.spongycastle.asn1.ua.DSTU4145Params: org.spongycastle.asn1.ASN1ObjectIdentifier namedCurve> = $r1;

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier, byte[])
    {
        org.spongycastle.asn1.ua.DSTU4145Params r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        byte[] $r2, $r3;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145Params;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r3 = <org.spongycastle.asn1.ua.DSTU4145Params: byte[] DEFAULT_DKE>;

        r0.<org.spongycastle.asn1.ua.DSTU4145Params: byte[] dke> = $r3;

        r0.<org.spongycastle.asn1.ua.DSTU4145Params: org.spongycastle.asn1.ASN1ObjectIdentifier namedCurve> = $r1;

        $r2 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r2);

        r0.<org.spongycastle.asn1.ua.DSTU4145Params: byte[] dke> = $r2;

        return;
    }
    public void <init>(org.spongycastle.asn1.ua.DSTU4145ECBinary)
    {
        org.spongycastle.asn1.ua.DSTU4145Params r0;
        org.spongycastle.asn1.ua.DSTU4145ECBinary $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145Params;

        $r1 := @parameter0: org.spongycastle.asn1.ua.DSTU4145ECBinary;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = <org.spongycastle.asn1.ua.DSTU4145Params: byte[] DEFAULT_DKE>;

        r0.<org.spongycastle.asn1.ua.DSTU4145Params: byte[] dke> = $r2;

        r0.<org.spongycastle.asn1.ua.DSTU4145Params: org.spongycastle.asn1.ua.DSTU4145ECBinary ecbinary> = $r1;

        return;
    }
    public static byte[] getDefaultDKE()
    {
        byte[] r0;

        r0 = <org.spongycastle.asn1.ua.DSTU4145Params: byte[] DEFAULT_DKE>;

        return r0;
    }
    public static org.spongycastle.asn1.ua.DSTU4145Params getInstance(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        org.spongycastle.asn1.ua.DSTU4145Params r1;
        org.spongycastle.asn1.ASN1Sequence $r2;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r4;
        int $i0, $i1;
        org.spongycastle.asn1.ASN1OctetString $r5;
        byte[] $r6;
        java.lang.IllegalArgumentException $r7;
        org.spongycastle.asn1.ua.DSTU4145ECBinary $r8;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.spongycastle.asn1.ua.DSTU4145Params;

        if $z0 == 0 goto label1;

        r1 = (org.spongycastle.asn1.ua.DSTU4145Params) r0;

        return r1;

     label1:
        if r0 == null goto label5;

        $r2 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r0);

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $z0 = $r3 instanceof org.spongycastle.asn1.ASN1ObjectIdentifier;

        if $z0 == 0 goto label3;

        r1 = new org.spongycastle.asn1.ua.DSTU4145Params;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r4 = staticinvoke <org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>($r3);

        specialinvoke r1.<org.spongycastle.asn1.ua.DSTU4145Params: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

     label2:
        $i0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 != 2 goto label4;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r5 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r1.<org.spongycastle.asn1.ua.DSTU4145Params: byte[] dke> = $r6;

        $r6 = r1.<org.spongycastle.asn1.ua.DSTU4145Params: byte[] dke>;

        $i0 = lengthof $r6;

        $r6 = <org.spongycastle.asn1.ua.DSTU4145Params: byte[] DEFAULT_DKE>;

        $i1 = lengthof $r6;

        if $i0 == $i1 goto label4;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("object parse error");

        throw $r7;

     label3:
        r1 = new org.spongycastle.asn1.ua.DSTU4145Params;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r8 = staticinvoke <org.spongycastle.asn1.ua.DSTU4145ECBinary: org.spongycastle.asn1.ua.DSTU4145ECBinary getInstance(java.lang.Object)>($r3);

        specialinvoke r1.<org.spongycastle.asn1.ua.DSTU4145Params: void <init>(org.spongycastle.asn1.ua.DSTU4145ECBinary)>($r8);

        goto label2;

     label4:
        return r1;

     label5:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("object parse error");

        throw $r7;
    }
    public byte[] getDKE()
    {
        org.spongycastle.asn1.ua.DSTU4145Params r0;
        byte[] r1;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145Params;

        r1 = r0.<org.spongycastle.asn1.ua.DSTU4145Params: byte[] dke>;

        return r1;
    }
    public org.spongycastle.asn1.ua.DSTU4145ECBinary getECBinary()
    {
        org.spongycastle.asn1.ua.DSTU4145Params r0;
        org.spongycastle.asn1.ua.DSTU4145ECBinary r1;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145Params;

        r1 = r0.<org.spongycastle.asn1.ua.DSTU4145Params: org.spongycastle.asn1.ua.DSTU4145ECBinary ecbinary>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getNamedCurve()
    {
        org.spongycastle.asn1.ua.DSTU4145Params r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier r1;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145Params;

        r1 = r0.<org.spongycastle.asn1.ua.DSTU4145Params: org.spongycastle.asn1.ASN1ObjectIdentifier namedCurve>;

        return r1;
    }
    public boolean isNamedCurve()
    {
        org.spongycastle.asn1.ua.DSTU4145Params r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145Params;

        $r1 = r0.<org.spongycastle.asn1.ua.DSTU4145Params: org.spongycastle.asn1.ASN1ObjectIdentifier namedCurve>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.ua.DSTU4145Params r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        byte[] $r3, $r4;
        org.spongycastle.asn1.DEROctetString $r5;
        org.spongycastle.asn1.DERSequence $r6;
        org.spongycastle.asn1.ua.DSTU4145ECBinary $r7;

        r0 := @this: org.spongycastle.asn1.ua.DSTU4145Params;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.ua.DSTU4145Params: org.spongycastle.asn1.ASN1ObjectIdentifier namedCurve>;

        if $r2 == null goto label3;

        $r2 = r0.<org.spongycastle.asn1.ua.DSTU4145Params: org.spongycastle.asn1.ASN1ObjectIdentifier namedCurve>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

     label1:
        $r3 = r0.<org.spongycastle.asn1.ua.DSTU4145Params: byte[] dke>;

        $r4 = <org.spongycastle.asn1.ua.DSTU4145Params: byte[] DEFAULT_DKE>;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r3, $r4);

        if $z0 != 0 goto label2;

        $r5 = new org.spongycastle.asn1.DEROctetString;

        $r3 = r0.<org.spongycastle.asn1.ua.DSTU4145Params: byte[] dke>;

        specialinvoke $r5.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r3);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

     label2:
        $r6 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r6.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r6;

     label3:
        $r7 = r0.<org.spongycastle.asn1.ua.DSTU4145Params: org.spongycastle.asn1.ua.DSTU4145ECBinary ecbinary>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r7);

        goto label1;
    }
