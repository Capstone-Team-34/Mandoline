org.spongycastle.asn1.ASN1Sequence extends org.spongycastle.asn1.ASN1Primitive implements org.spongycastle.util.Iterable
protected java.util.Vector seq
    protected void <init>()
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        java.util.Vector $r1;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq> = $r1;

        return;
    }
    protected void <init>(org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        java.util.Vector $r2;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Encodable;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq> = $r2;

        $r2 = r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        return;
    }
    protected void <init>(org.spongycastle.asn1.ASN1EncodableVector)
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        org.spongycastle.asn1.ASN1EncodableVector $r1;
        java.util.Vector $r2;
        int i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r3;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq> = $r2;

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1EncodableVector: int size()>();

        if i0 == $i1 goto label2;

        $r2 = r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq>;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1EncodableVector: org.spongycastle.asn1.ASN1Encodable get(int)>(i0);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    protected void <init>(org.spongycastle.asn1.ASN1Encodable[])
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        org.spongycastle.asn1.ASN1Encodable[] $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        java.util.Vector $r3;
        int i0, $i1;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Encodable[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq> = $r3;

        i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if i0 == $i1 goto label2;

        $r3 = r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq>;

        $r2 = $r1[i0];

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public static org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)
    {
        java.io.IOException r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1Sequence r2;
        org.spongycastle.asn1.ASN1SequenceParser r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        byte[] r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        org.spongycastle.asn1.ASN1Encodable $r9;
        java.lang.Class $r10;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z0 = r1 instanceof org.spongycastle.asn1.ASN1Sequence;

        if $z0 == 0 goto label2;

     label1:
        r2 = (org.spongycastle.asn1.ASN1Sequence) r1;

        return r2;

     label2:
        $z0 = r1 instanceof org.spongycastle.asn1.ASN1SequenceParser;

        if $z0 == 0 goto label3;

        r3 = (org.spongycastle.asn1.ASN1SequenceParser) r1;

        $r4 = interfaceinvoke r3.<org.spongycastle.asn1.ASN1SequenceParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        r2 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r4);

        return r2;

     label3:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label7;

        r5 = (byte[]) r1;

     label4:
        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>(r5);

        r2 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r4);

     label5:
        return r2;

     label6:
        r0 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to construct sequence from byte[]: ");

        $r8 = virtualinvoke r0.<java.io.IOException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label7:
        $z0 = r1 instanceof org.spongycastle.asn1.ASN1Encodable;

        if $z0 == 0 goto label8;

        $r9 = (org.spongycastle.asn1.ASN1Encodable) r1;

        $r4 = interfaceinvoke $r9.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $z0 = $r4 instanceof org.spongycastle.asn1.ASN1Sequence;

        if $z0 == 0 goto label8;

        r2 = (org.spongycastle.asn1.ASN1Sequence) $r4;

        return r2;

     label8:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown object in getInstance: ");

        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

        catch java.io.IOException from label4 to label5 with label6;
    }
    public static org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        org.spongycastle.asn1.ASN1Sequence $r3;
        org.spongycastle.asn1.BERSequence $r4;
        org.spongycastle.asn1.DLSequence $r5;
        java.lang.StringBuilder $r6;
        java.lang.Class $r7;
        java.lang.String $r8;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1TaggedObject: boolean isExplicit()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("object implicit - explicit expected.");

        throw $r1;

     label1:
        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1Primitive getObject()>();

        $r2 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r2);

        return $r3;

     label2:
        $z0 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1TaggedObject: boolean isExplicit()>();

        if $z0 == 0 goto label4;

        $z0 = $r0 instanceof org.spongycastle.asn1.BERTaggedObject;

        if $z0 == 0 goto label3;

        $r4 = new org.spongycastle.asn1.BERSequence;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1Primitive getObject()>();

        specialinvoke $r4.<org.spongycastle.asn1.BERSequence: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r2);

        return $r4;

     label3:
        $r5 = new org.spongycastle.asn1.DLSequence;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1Primitive getObject()>();

        specialinvoke $r5.<org.spongycastle.asn1.DLSequence: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r2);

        return $r5;

     label4:
        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1Primitive getObject()>();

        $z0 = $r2 instanceof org.spongycastle.asn1.ASN1Sequence;

        if $z0 == 0 goto label5;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1Primitive getObject()>();

        $r3 = (org.spongycastle.asn1.ASN1Sequence) $r2;

        return $r3;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown object in getInstance: ");

        $r7 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r1;
    }
    private org.spongycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        java.util.Enumeration $r1;
        java.lang.Object $r2;
        org.spongycastle.asn1.ASN1Encodable r3;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        $r1 := @parameter0: java.util.Enumeration;

        $r2 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (org.spongycastle.asn1.ASN1Encodable) $r2;

        return r3;
    }
    boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive)
    {
        org.spongycastle.asn1.ASN1Sequence r0, r2;
        org.spongycastle.asn1.ASN1Primitive $r1, $r7;
        boolean $z0;
        int $i0, $i1;
        java.util.Enumeration $r3, $r4;
        org.spongycastle.asn1.ASN1Encodable $r5, $r6;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Primitive;

        $z0 = $r1 instanceof org.spongycastle.asn1.ASN1Sequence;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.asn1.ASN1Sequence) $r1;

        $i0 = virtualinvoke r0.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $i1 = virtualinvoke r2.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 != $i1 goto label4;

        $r3 = virtualinvoke r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

        $r4 = virtualinvoke r2.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r5 = specialinvoke r0.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)>($r3);

        $r6 = specialinvoke r0.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)>($r4);

        $r1 = interfaceinvoke $r5.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r7 = interfaceinvoke $r6.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        if $r1 == $r7 goto label2;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label4;

        goto label2;

     label3:
        return 1;

     label4:
        return 0;
    }
abstract void encode(org.spongycastle.asn1.ASN1OutputStream) throws java.io.IOException { 
// no body
} 
    public org.spongycastle.asn1.ASN1Encodable getObjectAt(int)
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        int $i0;
        java.lang.Object $r1;
        java.util.Vector $r2;
        org.spongycastle.asn1.ASN1Encodable $r3;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        $i0 := @parameter0: int;

        $r2 = r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq>;

        $r1 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r3 = (org.spongycastle.asn1.ASN1Encodable) $r1;

        return $r3;
    }
    public java.util.Enumeration getObjects()
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        java.util.Enumeration $r1;
        java.util.Vector $r2;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        $r2 = r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq>;

        $r1 = virtualinvoke $r2.<java.util.Vector: java.util.Enumeration elements()>();

        return $r1;
    }
    public int hashCode()
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        java.util.Enumeration $r1;
        int $i0, $i1;
        boolean $z0;
        org.spongycastle.asn1.ASN1Encodable $r2;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        $r1 = virtualinvoke r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

        $i0 = virtualinvoke r0.<org.spongycastle.asn1.ASN1Sequence: int size()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r2 = specialinvoke r0.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)>($r1);

        $i0 = $i0 * 17;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i0 = $i0 ^ $i1;

        goto label1;

     label2:
        return $i0;
    }
    boolean isConstructed()
    {
        org.spongycastle.asn1.ASN1Sequence r0;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        return 1;
    }
    public java.util.Iterator iterator()
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        org.spongycastle.util.Arrays$Iterator $r1;
        org.spongycastle.asn1.ASN1Encodable[] $r2;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        $r1 = new org.spongycastle.util.Arrays$Iterator;

        $r2 = virtualinvoke r0.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable[] toArray()>();

        specialinvoke $r1.<org.spongycastle.util.Arrays$Iterator: void <init>(java.lang.Object[])>($r2);

        return $r1;
    }
    public org.spongycastle.asn1.ASN1SequenceParser parser()
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        org.spongycastle.asn1.ASN1Sequence$1 $r1;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        $r1 = new org.spongycastle.asn1.ASN1Sequence$1;

        specialinvoke $r1.<org.spongycastle.asn1.ASN1Sequence$1: void <init>(org.spongycastle.asn1.ASN1Sequence,org.spongycastle.asn1.ASN1Sequence)>(r0, r0);

        return $r1;
    }
    public int size()
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        int $i0;
        java.util.Vector $r1;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        $r1 = r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }
    public org.spongycastle.asn1.ASN1Encodable[] toArray()
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        org.spongycastle.asn1.ASN1Encodable[] r1;
        int $i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r2;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        $i0 = virtualinvoke r0.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        r1 = newarray (org.spongycastle.asn1.ASN1Encodable)[$i0];

        $i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 == $i1 goto label2;

        $r2 = virtualinvoke r0.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        r1[$i0] = $r2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    org.spongycastle.asn1.ASN1Primitive toDERObject()
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        org.spongycastle.asn1.DERSequence r1;
        java.util.Vector $r2;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        r1 = new org.spongycastle.asn1.DERSequence;

        specialinvoke r1.<org.spongycastle.asn1.DERSequence: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq>;

        r1.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq> = $r2;

        return r1;
    }
    org.spongycastle.asn1.ASN1Primitive toDLObject()
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        org.spongycastle.asn1.DLSequence r1;
        java.util.Vector $r2;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        r1 = new org.spongycastle.asn1.DLSequence;

        specialinvoke r1.<org.spongycastle.asn1.DLSequence: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq>;

        r1.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq> = $r2;

        return r1;
    }
    public java.lang.String toString()
    {
        org.spongycastle.asn1.ASN1Sequence r0;
        java.lang.String $r1;
        java.util.Vector $r2;

        r0 := @this: org.spongycastle.asn1.ASN1Sequence;

        $r2 = r0.<org.spongycastle.asn1.ASN1Sequence: java.util.Vector seq>;

        $r1 = virtualinvoke $r2.<java.util.Vector: java.lang.String toString()>();

        return $r1;
    }
