org.spongycastle.asn1.x500.style.AbstractX500NameStyle extends java.lang.Object implements org.spongycastle.asn1.x500.X500NameStyle
    public void <init>()
    {
        org.spongycastle.asn1.x500.style.AbstractX500NameStyle r0;

        r0 := @this: org.spongycastle.asn1.x500.style.AbstractX500NameStyle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private int calcHashCode(org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.asn1.x500.style.AbstractX500NameStyle r0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: org.spongycastle.asn1.x500.style.AbstractX500NameStyle;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Encodable;

        $r2 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String valueToString(org.spongycastle.asn1.ASN1Encodable)>($r1);

        $r2 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String canonicalize(java.lang.String)>($r2);

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        return $i0;
    }
    public static java.util.Hashtable copyHashTable(java.util.Hashtable)
    {
        java.util.Hashtable $r0, r1;
        java.util.Enumeration $r2;
        boolean $z0;
        java.lang.Object $r3, $r4;

        $r0 := @parameter0: java.util.Hashtable;

        r1 = new java.util.Hashtable;

        specialinvoke r1.<java.util.Hashtable: void <init>()>();

        $r2 = virtualinvoke $r0.<java.util.Hashtable: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = virtualinvoke $r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r3);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        goto label1;

     label2:
        return r1;
    }
    private boolean foundMatch(boolean, org.spongycastle.asn1.x500.RDN, org.spongycastle.asn1.x500.RDN[])
    {
        org.spongycastle.asn1.x500.style.AbstractX500NameStyle r0;
        boolean $z0;
        org.spongycastle.asn1.x500.RDN $r1, $r3;
        org.spongycastle.asn1.x500.RDN[] $r2;
        int $i0, $i1;

        r0 := @this: org.spongycastle.asn1.x500.style.AbstractX500NameStyle;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.spongycastle.asn1.x500.RDN;

        $r2 := @parameter2: org.spongycastle.asn1.x500.RDN[];

        if $z0 == 0 goto label3;

        $i0 = lengthof $r2;

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label6;

        $r3 = $r2[$i0];

        if $r3 == null goto label2;

        $r3 = $r2[$i0];

        $z0 = virtualinvoke r0.<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: boolean rdnAreEqual(org.spongycastle.asn1.x500.RDN,org.spongycastle.asn1.x500.RDN)>($r1, $r3);

        if $z0 == 0 goto label2;

        $r2[$i0] = null;

        return 1;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $i0 = 0;

     label4:
        $i1 = lengthof $r2;

        if $i0 == $i1 goto label6;

        $r3 = $r2[$i0];

        if $r3 == null goto label5;

        $r3 = $r2[$i0];

        $z0 = virtualinvoke r0.<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: boolean rdnAreEqual(org.spongycastle.asn1.x500.RDN,org.spongycastle.asn1.x500.RDN)>($r1, $r3);

        if $z0 == 0 goto label5;

        $r2[$i0] = null;

        return 1;

     label5:
        $i0 = $i0 + 1;

        goto label4;

     label6:
        return 0;
    }
    public boolean areEqual(org.spongycastle.asn1.x500.X500Name, org.spongycastle.asn1.x500.X500Name)
    {
        org.spongycastle.asn1.x500.style.AbstractX500NameStyle r0;
        org.spongycastle.asn1.x500.X500Name $r1, $r2;
        org.spongycastle.asn1.x500.RDN[] $r3, $r4;
        int $i0, $i1;
        boolean z0, $z1;
        org.spongycastle.asn1.x500.RDN $r5;
        org.spongycastle.asn1.x500.AttributeTypeAndValue $r6;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r7, $r8;

        r0 := @this: org.spongycastle.asn1.x500.style.AbstractX500NameStyle;

        $r1 := @parameter0: org.spongycastle.asn1.x500.X500Name;

        $r2 := @parameter1: org.spongycastle.asn1.x500.X500Name;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.RDN[] getRDNs()>();

        $r4 = virtualinvoke $r2.<org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.RDN[] getRDNs()>();

        $i0 = lengthof $r3;

        $i1 = lengthof $r4;

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        z0 = 0;

        $r5 = $r3[0];

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue getFirst()>();

        if $r6 == null goto label2;

        $r5 = $r4[0];

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue getFirst()>();

        if $r6 == null goto label2;

        $r5 = $r3[0];

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue getFirst()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        $r5 = $r4[0];

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue getFirst()>();

        $r8 = virtualinvoke $r6.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        z0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r8);

        if z0 != 0 goto label4;

        z0 = 1;

     label2:
        $i0 = 0;

     label3:
        $i1 = lengthof $r3;

        if $i0 == $i1 goto label5;

        $r5 = $r3[$i0];

        $z1 = specialinvoke r0.<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: boolean foundMatch(boolean,org.spongycastle.asn1.x500.RDN,org.spongycastle.asn1.x500.RDN[])>(z0, $r5, $r4);

        if $z1 == 0 goto label6;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        z0 = 0;

        goto label2;

     label5:
        return 1;

     label6:
        return 0;
    }
    public int calculateHashCode(org.spongycastle.asn1.x500.X500Name)
    {
        org.spongycastle.asn1.x500.style.AbstractX500NameStyle r0;
        org.spongycastle.asn1.x500.X500Name $r1;
        int i0, i1, $i2, $i3;
        org.spongycastle.asn1.x500.RDN[] $r2;
        org.spongycastle.asn1.x500.RDN $r3;
        boolean $z0;
        org.spongycastle.asn1.x500.AttributeTypeAndValue[] $r4;
        org.spongycastle.asn1.x500.AttributeTypeAndValue $r5;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r6;
        org.spongycastle.asn1.ASN1Encodable $r7;

        r0 := @this: org.spongycastle.asn1.x500.style.AbstractX500NameStyle;

        $r1 := @parameter0: org.spongycastle.asn1.x500.X500Name;

        i0 = 0;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.RDN[] getRDNs()>();

        i1 = 0;

     label1:
        $i2 = lengthof $r2;

        if i1 == $i2 goto label5;

        $r3 = $r2[i1];

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.x500.RDN: boolean isMultiValued()>();

        if $z0 == 0 goto label3;

        $r3 = $r2[i1];

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue[] getTypesAndValues()>();

        $i2 = 0;

     label2:
        $i3 = lengthof $r4;

        if $i2 == $i3 goto label4;

        $r5 = $r4[$i2];

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        $i3 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1ObjectIdentifier: int hashCode()>();

        i0 = i0 ^ $i3;

        $r5 = $r4[$i2];

        $r7 = virtualinvoke $r5.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1Encodable getValue()>();

        $i3 = specialinvoke r0.<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: int calcHashCode(org.spongycastle.asn1.ASN1Encodable)>($r7);

        i0 = i0 ^ $i3;

        $i2 = $i2 + 1;

        goto label2;

     label3:
        $r3 = $r2[i1];

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue getFirst()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        $i2 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1ObjectIdentifier: int hashCode()>();

        i0 = i0 ^ $i2;

        $r3 = $r2[i1];

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue getFirst()>();

        $r7 = virtualinvoke $r5.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1Encodable getValue()>();

        $i2 = specialinvoke r0.<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: int calcHashCode(org.spongycastle.asn1.ASN1Encodable)>($r7);

        i0 = i0 ^ $i2;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return i0;
    }
    protected org.spongycastle.asn1.ASN1Encodable encodeStringValue(org.spongycastle.asn1.ASN1ObjectIdentifier, java.lang.String)
    {
        org.spongycastle.asn1.x500.style.AbstractX500NameStyle r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.lang.String $r2;
        org.spongycastle.asn1.DERUTF8String $r3;

        r0 := @this: org.spongycastle.asn1.x500.style.AbstractX500NameStyle;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.lang.String;

        $r3 = new org.spongycastle.asn1.DERUTF8String;

        specialinvoke $r3.<org.spongycastle.asn1.DERUTF8String: void <init>(java.lang.String)>($r2);

        return $r3;
    }
    protected boolean rdnAreEqual(org.spongycastle.asn1.x500.RDN, org.spongycastle.asn1.x500.RDN)
    {
        org.spongycastle.asn1.x500.style.AbstractX500NameStyle r0;
        org.spongycastle.asn1.x500.RDN $r1, $r2;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.x500.style.AbstractX500NameStyle;

        $r1 := @parameter0: org.spongycastle.asn1.x500.RDN;

        $r2 := @parameter1: org.spongycastle.asn1.x500.RDN;

        $z0 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: boolean rDNAreEqual(org.spongycastle.asn1.x500.RDN,org.spongycastle.asn1.x500.RDN)>($r1, $r2);

        return $z0;
    }
    public org.spongycastle.asn1.ASN1Encodable stringToValue(org.spongycastle.asn1.ASN1ObjectIdentifier, java.lang.String)
    {
        org.spongycastle.asn1.x500.style.AbstractX500NameStyle r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.io.IOException r2;
        java.lang.String $r3;
        int $i0;
        char $c1;
        org.spongycastle.asn1.ASN1Encodable $r4;
        org.spongycastle.asn1.ASN1ParsingException $r5;
        java.lang.StringBuilder $r6;

        r0 := @this: org.spongycastle.asn1.x500.style.AbstractX500NameStyle;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 == 0 goto label4;

        $c1 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        if $c1 != 35 goto label4;

     label1:
        $r4 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: org.spongycastle.asn1.ASN1Encodable valueFromHexString(java.lang.String,int)>($r3, 1);

     label2:
        return $r4;

     label3:
        r2 := @caughtexception;

        $r5 = new org.spongycastle.asn1.ASN1ParsingException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t recode value for oid ");

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label4:
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 == 0 goto label5;

        $c1 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        if $c1 != 92 goto label5;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(1);

     label5:
        $r4 = virtualinvoke r0.<org.spongycastle.asn1.x500.style.AbstractX500NameStyle: org.spongycastle.asn1.ASN1Encodable encodeStringValue(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>($r1, $r3);

        return $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }
