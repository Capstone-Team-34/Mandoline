org.spongycastle.asn1.x500.style.IETFUtils extends java.lang.Object
    public void <init>()
    {
        org.spongycastle.asn1.x500.style.IETFUtils r0;

        r0 := @this: org.spongycastle.asn1.x500.style.IETFUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static void appendRDN(java.lang.StringBuffer, org.spongycastle.asn1.x500.RDN, java.util.Hashtable)
    {
        java.lang.StringBuffer $r0;
        org.spongycastle.asn1.x500.RDN $r1;
        java.util.Hashtable $r2;
        boolean $z0;
        org.spongycastle.asn1.x500.AttributeTypeAndValue[] $r3;
        int i0, $i1;
        org.spongycastle.asn1.x500.AttributeTypeAndValue $r4;

        $r0 := @parameter0: java.lang.StringBuffer;

        $r1 := @parameter1: org.spongycastle.asn1.x500.RDN;

        $r2 := @parameter2: java.util.Hashtable;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.x500.RDN: boolean isMultiValued()>();

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue[] getTypesAndValues()>();

        $z0 = 1;

        i0 = 0;

     label1:
        $i1 = lengthof $r3;

        if i0 == $i1 goto label5;

        if $z0 == 0 goto label3;

        $z0 = 0;

     label2:
        $r4 = $r3[i0];

        staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: void appendTypeAndValue(java.lang.StringBuffer,org.spongycastle.asn1.x500.AttributeTypeAndValue,java.util.Hashtable)>($r0, $r4, $r2);

        i0 = i0 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(43);

        goto label2;

     label4:
        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue getFirst()>();

        if $r4 == null goto label5;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue getFirst()>();

        staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: void appendTypeAndValue(java.lang.StringBuffer,org.spongycastle.asn1.x500.AttributeTypeAndValue,java.util.Hashtable)>($r0, $r4, $r2);

     label5:
        return;
    }
    public static void appendTypeAndValue(java.lang.StringBuffer, org.spongycastle.asn1.x500.AttributeTypeAndValue, java.util.Hashtable)
    {
        java.lang.StringBuffer $r0;
        org.spongycastle.asn1.x500.AttributeTypeAndValue $r1;
        java.util.Hashtable $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.asn1.ASN1Encodable $r6;

        $r0 := @parameter0: java.lang.StringBuffer;

        $r1 := @parameter1: org.spongycastle.asn1.x500.AttributeTypeAndValue;

        $r2 := @parameter2: java.util.Hashtable;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (java.lang.String) $r4;

        if r5 == null goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

        $r6 = virtualinvoke $r1.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1Encodable getValue()>();

        r5 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String valueToString(org.spongycastle.asn1.ASN1Encodable)>($r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        return;

     label2:
        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        r5 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        goto label1;
    }
    private static boolean atvAreEqual(org.spongycastle.asn1.x500.AttributeTypeAndValue, org.spongycastle.asn1.x500.AttributeTypeAndValue)
    {
        org.spongycastle.asn1.x500.AttributeTypeAndValue $r0, $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2, $r3;
        boolean $z0;
        org.spongycastle.asn1.ASN1Encodable $r4;
        java.lang.String $r5, $r6;

        $r0 := @parameter0: org.spongycastle.asn1.x500.AttributeTypeAndValue;

        $r1 := @parameter1: org.spongycastle.asn1.x500.AttributeTypeAndValue;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        if $r0 != null goto label2;

        return 0;

     label2:
        if $r1 != null goto label3;

        return 0;

     label3:
        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        $z0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r4 = virtualinvoke $r0.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1Encodable getValue()>();

        $r5 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String valueToString(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r5 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String canonicalize(java.lang.String)>($r5);

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1Encodable getValue()>();

        $r6 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String valueToString(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r6 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String canonicalize(java.lang.String)>($r6);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }
    private static java.lang.String bytesToString(byte[])
    {
        byte[] $r0;
        char[] r1;
        int $i0, $i1;
        byte $b2;
        char $c3;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        r1 = newarray (char)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 == $i1 goto label2;

        $b2 = $r0[$i0];

        $i1 = $b2 & 255;

        $c3 = (char) $i1;

        r1[$i0] = $c3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }
    public static java.lang.String canonicalize(java.lang.String)
    {
        java.lang.String $r0, r1;
        int $i0, $i2, $i3;
        char $c1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        boolean $z0;
        org.spongycastle.asn1.ASN1String r3;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.spongycastle.util.Strings: java.lang.String toLowerCase(java.lang.String)>($r0);

        r1 = $r0;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 35 goto label1;

        $r2 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: org.spongycastle.asn1.ASN1Primitive decodeObject(java.lang.String)>($r0);

        $z0 = $r2 instanceof org.spongycastle.asn1.ASN1String;

        if $z0 == 0 goto label1;

        r3 = (org.spongycastle.asn1.ASN1String) $r2;

        $r0 = interfaceinvoke r3.<org.spongycastle.asn1.ASN1String: java.lang.String getString()>();

        r1 = staticinvoke <org.spongycastle.util.Strings: java.lang.String toLowerCase(java.lang.String)>($r0);

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label7;

        $i0 = 0;

     label2:
        $i2 = $i0 + 1;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label3;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i0);

        if $c1 != 92 goto label3;

        $i2 = $i0 + 1;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        if $c1 != 32 goto label3;

        $i0 = $i0 + 2;

        goto label2;

     label3:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i2 + -1;

     label4:
        $i3 = $i2 + -1;

        if $i3 <= 0 goto label5;

        $i3 = $i2 + -1;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        if $c1 != 92 goto label5;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        if $c1 != 32 goto label5;

        $i2 = $i2 + -2;

        goto label4;

     label5:
        if $i0 > 0 goto label6;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = $i3 + -1;

        if $i2 >= $i3 goto label7;

     label6:
        $i2 = $i2 + 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

     label7:
        $r0 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String stripInternalSpaces(java.lang.String)>(r1);

        return $r0;
    }
    private static int convertHex(char)
    {
        char $c0;
        int $i1;

        $c0 := @parameter0: char;

        if 48 > $c0 goto label1;

        if $c0 > 57 goto label1;

        $i1 = $c0 + -48;

        return $i1;

     label1:
        if 97 > $c0 goto label2;

        if $c0 > 102 goto label2;

        $i1 = $c0 + -97;

        $i1 = $i1 + 10;

        return $i1;

     label2:
        $i1 = $c0 + -65;

        $i1 = $i1 + 10;

        return $i1;
    }
    public static org.spongycastle.asn1.ASN1ObjectIdentifier decodeAttrName(java.lang.String, java.util.Hashtable)
    {
        java.lang.String $r0, $r2;
        java.util.Hashtable $r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1ObjectIdentifier r3;
        char $c0;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Hashtable;

        $r2 = staticinvoke <org.spongycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>($r0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("OID.");

        if $z0 == 0 goto label1;

        r3 = new org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(4);

        specialinvoke r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>($r0);

        return r3;

     label1:
        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        if $c0 < 48 goto label2;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        if $c0 > 57 goto label2;

        r3 = new org.spongycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>($r0);

        return r3;

     label2:
        $r2 = staticinvoke <org.spongycastle.util.Strings: java.lang.String toLowerCase(java.lang.String)>($r0);

        $r4 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        r3 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r4;

        if r3 != null goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown object id - ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - passed to distinguished name");

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r5;

     label3:
        return r3;
    }
    private static org.spongycastle.asn1.ASN1Primitive decodeObject(java.lang.String)
    {
        java.lang.String $r0;
        java.io.IOException r1;
        byte[] $r2;
        org.spongycastle.asn1.ASN1Primitive $r3;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r2 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] decode(java.lang.String)>($r0);

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r2);

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown encoding in name: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public static java.lang.String[] findAttrNamesForOID(org.spongycastle.asn1.ASN1ObjectIdentifier, java.util.Hashtable)
    {
        org.spongycastle.asn1.ASN1ObjectIdentifier $r0;
        java.util.Hashtable $r1;
        java.lang.String[] r2;
        int i0, i1;
        java.util.Enumeration $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String r5;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r1 := @parameter1: java.util.Hashtable;

        i0 = 0;

        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        $z0 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        i0 = i0 + 1;

        goto label1;

     label2:
        r2 = newarray (java.lang.String)[i0];

        i1 = 0;

        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = (java.lang.String) $r4;

        $r4 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        $z0 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        r2[i1] = r5;

        i1 = i1 + 1;

        goto label3;

     label4:
        return r2;
    }
    private static boolean isHexDigit(char)
    {
        char $c0;

        $c0 := @parameter0: char;

        if 48 > $c0 goto label1;

        if $c0 <= 57 goto label3;

     label1:
        if 97 > $c0 goto label2;

        if $c0 <= 102 goto label3;

     label2:
        if 65 > $c0 goto label4;

        if $c0 > 70 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }
    public static boolean rDNAreEqual(org.spongycastle.asn1.x500.RDN, org.spongycastle.asn1.x500.RDN)
    {
        org.spongycastle.asn1.x500.RDN $r0, $r1;
        boolean $z0;
        org.spongycastle.asn1.x500.AttributeTypeAndValue[] $r2, $r3;
        int $i0, $i1;
        org.spongycastle.asn1.x500.AttributeTypeAndValue $r4, $r5;

        $r0 := @parameter0: org.spongycastle.asn1.x500.RDN;

        $r1 := @parameter1: org.spongycastle.asn1.x500.RDN;

        $z0 = virtualinvoke $r0.<org.spongycastle.asn1.x500.RDN: boolean isMultiValued()>();

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.x500.RDN: boolean isMultiValued()>();

        if $z0 == 0 goto label5;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue[] getTypesAndValues()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue[] getTypesAndValues()>();

        $i0 = lengthof $r2;

        $i1 = lengthof $r3;

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r2;

        if $i0 == $i1 goto label4;

        $r4 = $r2[$i0];

        $r5 = $r3[$i0];

        $z0 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: boolean atvAreEqual(org.spongycastle.asn1.x500.AttributeTypeAndValue,org.spongycastle.asn1.x500.AttributeTypeAndValue)>($r4, $r5);

        if $z0 == 0 goto label5;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.x500.RDN: boolean isMultiValued()>();

        if $z0 != 0 goto label5;

        $r4 = virtualinvoke $r0.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue getFirst()>();

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue getFirst()>();

        $z0 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: boolean atvAreEqual(org.spongycastle.asn1.x500.AttributeTypeAndValue,org.spongycastle.asn1.x500.AttributeTypeAndValue)>($r4, $r5);

        return $z0;

     label4:
        return 1;

     label5:
        return 0;
    }
    public static org.spongycastle.asn1.x500.RDN[] rDNsFromString(java.lang.String, org.spongycastle.asn1.x500.X500NameStyle)
    {
        java.lang.String $r0, $r8;
        org.spongycastle.asn1.x500.X500NameStyle $r1;
        org.spongycastle.asn1.x500.X500NameBuilder r2;
        org.spongycastle.asn1.x500.style.X500NameTokenizer r3, r5, r7;
        java.util.Vector r4, r6;
        boolean $z0;
        int $i0;
        java.lang.IllegalArgumentException $r9;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r10;
        org.spongycastle.asn1.ASN1ObjectIdentifier[] $r11;
        java.lang.String[] $r12;
        org.spongycastle.asn1.x500.X500Name $r13;
        org.spongycastle.asn1.x500.RDN[] $r14;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.spongycastle.asn1.x500.X500NameStyle;

        r3 = new org.spongycastle.asn1.x500.style.X500NameTokenizer;

        specialinvoke r3.<org.spongycastle.asn1.x500.style.X500NameTokenizer: void <init>(java.lang.String)>($r0);

        r2 = new org.spongycastle.asn1.x500.X500NameBuilder;

        specialinvoke r2.<org.spongycastle.asn1.x500.X500NameBuilder: void <init>(org.spongycastle.asn1.x500.X500NameStyle)>($r1);

     label1:
        $z0 = virtualinvoke r3.<org.spongycastle.asn1.x500.style.X500NameTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label9;

        $r0 = virtualinvoke r3.<org.spongycastle.asn1.x500.style.X500NameTokenizer: java.lang.String nextToken()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(43);

        if $i0 <= 0 goto label7;

        r5 = new org.spongycastle.asn1.x500.style.X500NameTokenizer;

        specialinvoke r5.<org.spongycastle.asn1.x500.style.X500NameTokenizer: void <init>(java.lang.String,char)>($r0, 43);

        r7 = new org.spongycastle.asn1.x500.style.X500NameTokenizer;

        $r0 = virtualinvoke r5.<org.spongycastle.asn1.x500.style.X500NameTokenizer: java.lang.String nextToken()>();

        specialinvoke r7.<org.spongycastle.asn1.x500.style.X500NameTokenizer: void <init>(java.lang.String,char)>($r0, 61);

        $r8 = virtualinvoke r7.<org.spongycastle.asn1.x500.style.X500NameTokenizer: java.lang.String nextToken()>();

        $z0 = virtualinvoke r7.<org.spongycastle.asn1.x500.style.X500NameTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("badly formatted directory string");

        throw $r9;

     label2:
        $r0 = virtualinvoke r7.<org.spongycastle.asn1.x500.style.X500NameTokenizer: java.lang.String nextToken()>();

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $r10 = interfaceinvoke $r1.<org.spongycastle.asn1.x500.X500NameStyle: org.spongycastle.asn1.ASN1ObjectIdentifier attrNameToOID(java.lang.String)>($r8);

        $z0 = virtualinvoke r5.<org.spongycastle.asn1.x500.style.X500NameTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label6;

        r4 = new java.util.Vector;

        specialinvoke r4.<java.util.Vector: void <init>()>();

        r6 = new java.util.Vector;

        specialinvoke r6.<java.util.Vector: void <init>()>();

        virtualinvoke r4.<java.util.Vector: void addElement(java.lang.Object)>($r10);

        $r0 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String unescape(java.lang.String)>($r0);

        virtualinvoke r6.<java.util.Vector: void addElement(java.lang.Object)>($r0);

     label3:
        $z0 = virtualinvoke r5.<org.spongycastle.asn1.x500.style.X500NameTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label5;

        r7 = new org.spongycastle.asn1.x500.style.X500NameTokenizer;

        $r0 = virtualinvoke r5.<org.spongycastle.asn1.x500.style.X500NameTokenizer: java.lang.String nextToken()>();

        specialinvoke r7.<org.spongycastle.asn1.x500.style.X500NameTokenizer: void <init>(java.lang.String,char)>($r0, 61);

        $r8 = virtualinvoke r7.<org.spongycastle.asn1.x500.style.X500NameTokenizer: java.lang.String nextToken()>();

        $z0 = virtualinvoke r7.<org.spongycastle.asn1.x500.style.X500NameTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label4;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("badly formatted directory string");

        throw $r9;

     label4:
        $r0 = virtualinvoke r7.<org.spongycastle.asn1.x500.style.X500NameTokenizer: java.lang.String nextToken()>();

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $r10 = interfaceinvoke $r1.<org.spongycastle.asn1.x500.X500NameStyle: org.spongycastle.asn1.ASN1ObjectIdentifier attrNameToOID(java.lang.String)>($r8);

        virtualinvoke r4.<java.util.Vector: void addElement(java.lang.Object)>($r10);

        $r0 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String unescape(java.lang.String)>($r0);

        virtualinvoke r6.<java.util.Vector: void addElement(java.lang.Object)>($r0);

        goto label3;

     label5:
        $r11 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: org.spongycastle.asn1.ASN1ObjectIdentifier[] toOIDArray(java.util.Vector)>(r4);

        $r12 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String[] toValueArray(java.util.Vector)>(r6);

        virtualinvoke r2.<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.spongycastle.asn1.ASN1ObjectIdentifier[],java.lang.String[])>($r11, $r12);

        goto label1;

     label6:
        $r0 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String unescape(java.lang.String)>($r0);

        virtualinvoke r2.<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500NameBuilder addRDN(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>($r10, $r0);

        goto label1;

     label7:
        r5 = new org.spongycastle.asn1.x500.style.X500NameTokenizer;

        specialinvoke r5.<org.spongycastle.asn1.x500.style.X500NameTokenizer: void <init>(java.lang.String,char)>($r0, 61);

        $r8 = virtualinvoke r5.<org.spongycastle.asn1.x500.style.X500NameTokenizer: java.lang.String nextToken()>();

        $z0 = virtualinvoke r5.<org.spongycastle.asn1.x500.style.X500NameTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label8;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("badly formatted directory string");

        throw $r9;

     label8:
        $r0 = virtualinvoke r5.<org.spongycastle.asn1.x500.style.X500NameTokenizer: java.lang.String nextToken()>();

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $r10 = interfaceinvoke $r1.<org.spongycastle.asn1.x500.X500NameStyle: org.spongycastle.asn1.ASN1ObjectIdentifier attrNameToOID(java.lang.String)>($r8);

        $r0 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String unescape(java.lang.String)>($r0);

        virtualinvoke r2.<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500NameBuilder addRDN(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>($r10, $r0);

        goto label1;

     label9:
        $r13 = virtualinvoke r2.<org.spongycastle.asn1.x500.X500NameBuilder: org.spongycastle.asn1.x500.X500Name build()>();

        $r14 = virtualinvoke $r13.<org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.RDN[] getRDNs()>();

        return $r14;
    }
    public static java.lang.String stripInternalSpaces(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuffer r1;
        int $i0, $i3;
        char $c1, c2;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label4;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        c2 = $c1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $i0 = 1;

     label1:
        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i3 goto label4;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if c2 != 32 goto label2;

        if $c1 == 32 goto label3;

     label2:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label3:
        c2 = $c1;

        $i0 = $i0 + 1;

        goto label1;

     label4:
        $r0 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }
    private static org.spongycastle.asn1.ASN1ObjectIdentifier[] toOIDArray(java.util.Vector)
    {
        java.util.Vector $r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier[] r1;
        int $i0, $i1;
        java.lang.Object $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;

        $r0 := @parameter0: java.util.Vector;

        $i0 = virtualinvoke $r0.<java.util.Vector: int size()>();

        r1 = newarray (org.spongycastle.asn1.ASN1ObjectIdentifier)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 == $i1 goto label2;

        $r2 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r3 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r2;

        r1[$i0] = $r3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    private static java.lang.String[] toValueArray(java.util.Vector)
    {
        java.util.Vector $r0;
        java.lang.String[] r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.util.Vector;

        $i0 = virtualinvoke $r0.<java.util.Vector: int size()>();

        r1 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 == $i1 goto label2;

        $r2 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r3 = (java.lang.String) $r2;

        r1[$i0] = $r3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    private static java.lang.String unescape(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuffer r1;
        char c0, c3;
        int $i1, i2, $i4, $i5;
        char[] $r2;
        boolean z0, z1, z2, $z3;

        $r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 == 0 goto label01;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(92);

        if $i1 >= 0 goto label02;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(34);

        if $i1 >= 0 goto label02;

     label01:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r0;

     label02:
        $r2 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        z0 = 0;

        z1 = 0;

        r1 = new java.lang.StringBuffer;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        specialinvoke r1.<java.lang.StringBuffer: void <init>(int)>($i1);

        i2 = 0;

        c0 = $r2[0];

        if c0 != 92 goto label03;

        c0 = $r2[1];

        if c0 != 35 goto label03;

        i2 = 2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\#");

     label03:
        z2 = 0;

        $i1 = 0;

        c3 = 0;

     label04:
        $i4 = lengthof $r2;

        if i2 == $i4 goto label15;

        c0 = $r2[i2];

        if c0 == 32 goto label05;

        z2 = 1;

     label05:
        if c0 != 34 goto label10;

        if z0 != 0 goto label09;

        if z1 != 0 goto label08;

        z1 = 1;

     label06:
        z0 = 0;

     label07:
        i2 = i2 + 1;

        goto label04;

     label08:
        z1 = 0;

        goto label06;

     label09:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        goto label06;

     label10:
        if c0 != 92 goto label11;

        if z0 != 0 goto label11;

        if z1 != 0 goto label11;

        z0 = 1;

        $i1 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        goto label07;

     label11:
        if c0 != 32 goto label12;

        if z0 != 0 goto label12;

        if z2 == 0 goto label07;

     label12:
        if z0 == 0 goto label14;

        $z3 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: boolean isHexDigit(char)>(c0);

        if $z3 == 0 goto label14;

        if c3 == 0 goto label13;

        $i4 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: int convertHex(char)>(c3);

        $i4 = $i4 * 16;

        $i5 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: int convertHex(char)>(c0);

        $i4 = $i4 + $i5;

        c0 = (char) $i4;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        z0 = 0;

        c3 = 0;

        goto label07;

     label13:
        c3 = c0;

        goto label07;

     label14:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        z0 = 0;

        goto label07;

     label15:
        i2 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        if i2 <= 0 goto label17;

     label16:
        i2 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        i2 = i2 + -1;

        c0 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i2);

        if c0 != 32 goto label17;

        i2 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        i2 = i2 + -1;

        if $i1 == i2 goto label17;

        i2 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        i2 = i2 + -1;

        virtualinvoke r1.<java.lang.StringBuffer: void setLength(int)>(i2);

        goto label16;

     label17:
        $r0 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }
    public static org.spongycastle.asn1.ASN1Encodable valueFromHexString(java.lang.String, int) throws java.io.IOException
    {
        java.lang.String $r0;
        int $i0, $i1, $i2, $i5;
        byte[] r1;
        char $c3, $c4;
        byte $b6;
        org.spongycastle.asn1.ASN1Primitive $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 - $i0;

        $i1 = $i1 / 2;

        r1 = newarray (byte)[$i1];

        $i1 = 0;

     label1:
        $i2 = lengthof r1;

        if $i1 == $i2 goto label2;

        $i2 = $i1 * 2;

        $i2 = $i2 + $i0;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i2 = $i1 * 2;

        $i2 = $i2 + $i0;

        $i2 = $i2 + 1;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i2 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: int convertHex(char)>($c3);

        $i2 = $i2 << 4;

        $i5 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: int convertHex(char)>($c4);

        $i2 = $i2 | $i5;

        $b6 = (byte) $i2;

        r1[$i1] = $b6;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>(r1);

        return $r2;
    }
    public static java.lang.String valueToString(org.spongycastle.asn1.ASN1Encodable)
    {
        java.io.IOException r0;
        java.lang.StringBuffer r1;
        org.spongycastle.asn1.ASN1Encodable r2;
        boolean $z0;
        org.spongycastle.asn1.ASN1String r3;
        java.lang.String $r4;
        int $i0, i2, $i3;
        char $c1;
        java.lang.StringBuilder $r5;
        org.spongycastle.asn1.ASN1Primitive $r6;
        byte[] $r7;
        java.lang.IllegalArgumentException $r8;

        r2 := @parameter0: org.spongycastle.asn1.ASN1Encodable;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        $z0 = r2 instanceof org.spongycastle.asn1.ASN1String;

        if $z0 == 0 goto label06;

        $z0 = r2 instanceof org.spongycastle.asn1.DERUniversalString;

        if $z0 != 0 goto label06;

        r3 = (org.spongycastle.asn1.ASN1String) r2;

        $r4 = interfaceinvoke r3.<org.spongycastle.asn1.ASN1String: java.lang.String getString()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label05;

        $c1 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0);

        if $c1 != 35 goto label05;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label01:
        $i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        i2 = 0;

        $i3 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        if $i3 < 2 goto label02;

        $c1 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(0);

        if $c1 != 92 goto label02;

        $c1 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(1);

        if $c1 != 35 goto label02;

        i2 = 2;

     label02:
        if i2 == $i0 goto label10;

        $c1 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i2);

        if $c1 == 44 goto label03;

        $c1 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i2);

        if $c1 == 34 goto label03;

        $c1 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i2);

        if $c1 == 92 goto label03;

        $c1 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i2);

        if $c1 == 43 goto label03;

        $c1 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i2);

        if $c1 == 61 goto label03;

        $c1 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i2);

        if $c1 == 60 goto label03;

        $c1 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i2);

        if $c1 == 62 goto label03;

        $c1 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i2);

        if $c1 != 59 goto label04;

     label03:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>(i2, "\\");

        i2 = i2 + 1;

        $i0 = $i0 + 1;

     label04:
        i2 = i2 + 1;

        goto label02;

     label05:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label01;

     label06:
        $r5 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r6 = interfaceinvoke r2.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded(java.lang.String)>("DER");

        $r7 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[])>($r7);

        $r4 = staticinvoke <org.spongycastle.asn1.x500.style.IETFUtils: java.lang.String bytesToString(byte[])>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label08:
        goto label01;

     label09:
        r0 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Other value has no encoded form");

        throw $r8;

     label10:
        $i0 = 0;

        i2 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        if i2 <= 0 goto label12;

     label11:
        i2 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        if i2 <= $i0 goto label12;

        $c1 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>($i0);

        if $c1 != 32 goto label12;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>($i0, "\\");

        $i0 = $i0 + 2;

        goto label11;

     label12:
        $i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        $i0 = $i0 + -1;

     label13:
        if $i0 < 0 goto label14;

        $c1 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>($i0);

        if $c1 != 32 goto label14;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>($i0, 92);

        $i0 = $i0 + -1;

        goto label13;

     label14:
        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;

        catch java.io.IOException from label07 to label08 with label09;
    }
