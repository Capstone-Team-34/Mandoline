org.spongycastle.asn1.DLTaggedObject extends org.spongycastle.asn1.ASN1TaggedObject
private static final byte[] ZERO_BYTES
    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[0];

        <org.spongycastle.asn1.DLTaggedObject: byte[] ZERO_BYTES> = $r0;

        return;
    }
    public void <init>(boolean, int, org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.asn1.DLTaggedObject r0;
        boolean $z0;
        int $i0;
        org.spongycastle.asn1.ASN1Encodable $r1;

        r0 := @this: org.spongycastle.asn1.DLTaggedObject;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: org.spongycastle.asn1.ASN1Encodable;

        specialinvoke r0.<org.spongycastle.asn1.ASN1TaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>($z0, $i0, $r1);

        return;
    }
    void encode(org.spongycastle.asn1.ASN1OutputStream) throws java.io.IOException
    {
        org.spongycastle.asn1.DLTaggedObject r0;
        org.spongycastle.asn1.ASN1OutputStream $r1;
        byte[] $r2;
        boolean $z0;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        int $i0;
        short s1;

        r0 := @this: org.spongycastle.asn1.DLTaggedObject;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1OutputStream;

        $z0 = r0.<org.spongycastle.asn1.DLTaggedObject: boolean empty>;

        if $z0 != 0 goto label4;

        $r3 = r0.<org.spongycastle.asn1.DLTaggedObject: org.spongycastle.asn1.ASN1Encodable obj>;

        $r4 = interfaceinvoke $r3.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r4 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive toDLObject()>();

        $z0 = r0.<org.spongycastle.asn1.DLTaggedObject: boolean explicit>;

        if $z0 == 0 goto label1;

        $i0 = r0.<org.spongycastle.asn1.DLTaggedObject: int tagNo>;

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void writeTag(int,int)>(160, $i0);

        $i0 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Primitive: int encodedLength()>();

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void writeLength(int)>($i0);

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>($r4);

        return;

     label1:
        $z0 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Primitive: boolean isConstructed()>();

        if $z0 == 0 goto label3;

        s1 = 160;

     label2:
        $i0 = r0.<org.spongycastle.asn1.DLTaggedObject: int tagNo>;

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void writeTag(int,int)>(s1, $i0);

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void writeImplicitObject(org.spongycastle.asn1.ASN1Primitive)>($r4);

        return;

     label3:
        s1 = 128;

        goto label2;

     label4:
        $i0 = r0.<org.spongycastle.asn1.DLTaggedObject: int tagNo>;

        $r2 = <org.spongycastle.asn1.DLTaggedObject: byte[] ZERO_BYTES>;

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,int,byte[])>(160, $i0, $r2);

        return;
    }
    int encodedLength() throws java.io.IOException
    {
        org.spongycastle.asn1.DLTaggedObject r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        int $i0, $i1, $i2;

        r0 := @this: org.spongycastle.asn1.DLTaggedObject;

        $z0 = r0.<org.spongycastle.asn1.DLTaggedObject: boolean empty>;

        if $z0 != 0 goto label2;

        $r1 = r0.<org.spongycastle.asn1.DLTaggedObject: org.spongycastle.asn1.ASN1Encodable obj>;

        $r2 = interfaceinvoke $r1.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r2 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive toDLObject()>();

        $i0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Primitive: int encodedLength()>();

        $z0 = r0.<org.spongycastle.asn1.DLTaggedObject: boolean explicit>;

        if $z0 == 0 goto label1;

        $i1 = r0.<org.spongycastle.asn1.DLTaggedObject: int tagNo>;

        $i1 = staticinvoke <org.spongycastle.asn1.StreamUtil: int calculateTagLength(int)>($i1);

        $i2 = staticinvoke <org.spongycastle.asn1.StreamUtil: int calculateBodyLength(int)>($i0);

        $i1 = $i1 + $i2;

        $i0 = $i1 + $i0;

        return $i0;

     label1:
        $i0 = $i0 + -1;

        $i1 = r0.<org.spongycastle.asn1.DLTaggedObject: int tagNo>;

        $i1 = staticinvoke <org.spongycastle.asn1.StreamUtil: int calculateTagLength(int)>($i1);

        $i0 = $i1 + $i0;

        return $i0;

     label2:
        $i0 = r0.<org.spongycastle.asn1.DLTaggedObject: int tagNo>;

        $i0 = staticinvoke <org.spongycastle.asn1.StreamUtil: int calculateTagLength(int)>($i0);

        $i0 = $i0 + 1;

        return $i0;
    }
    boolean isConstructed()
    {
        org.spongycastle.asn1.DLTaggedObject r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;

        r0 := @this: org.spongycastle.asn1.DLTaggedObject;

        $z0 = r0.<org.spongycastle.asn1.DLTaggedObject: boolean empty>;

        if $z0 != 0 goto label2;

        $z0 = r0.<org.spongycastle.asn1.DLTaggedObject: boolean explicit>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<org.spongycastle.asn1.DLTaggedObject: org.spongycastle.asn1.ASN1Encodable obj>;

        $r2 = interfaceinvoke $r1.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r2 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive toDLObject()>();

        $z0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Primitive: boolean isConstructed()>();

        return $z0;

     label2:
        return 1;
    }
