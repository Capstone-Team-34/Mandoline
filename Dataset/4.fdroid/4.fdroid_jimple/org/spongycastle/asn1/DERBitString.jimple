org.spongycastle.asn1.DERBitString extends org.spongycastle.asn1.ASN1Primitive implements org.spongycastle.asn1.ASN1String
private static final char[] table
protected final byte[] data
protected final int padBits
    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 65;

        $r0[11] = 66;

        $r0[12] = 67;

        $r0[13] = 68;

        $r0[14] = 69;

        $r0[15] = 70;

        <org.spongycastle.asn1.DERBitString: char[] table> = $r0;

        return;
    }
    protected void <init>(byte, int)
    {
        org.spongycastle.asn1.DERBitString r0;
        byte $b0;
        int $i1;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        $b0 := @parameter0: byte;

        $i1 := @parameter1: int;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        $r1 = newarray (byte)[1];

        r0.<org.spongycastle.asn1.DERBitString: byte[] data> = $r1;

        $r1 = r0.<org.spongycastle.asn1.DERBitString: byte[] data>;

        $r1[0] = $b0;

        r0.<org.spongycastle.asn1.DERBitString: int padBits> = $i1;

        return;
    }
    public void <init>(int)
    {
        org.spongycastle.asn1.DERBitString r0;
        int $i0;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        $i0 := @parameter0: int;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        $r1 = staticinvoke <org.spongycastle.asn1.DERBitString: byte[] getBytes(int)>($i0);

        r0.<org.spongycastle.asn1.DERBitString: byte[] data> = $r1;

        $i0 = staticinvoke <org.spongycastle.asn1.DERBitString: int getPadBits(int)>($i0);

        r0.<org.spongycastle.asn1.DERBitString: int padBits> = $i0;

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1Encodable) throws java.io.IOException
    {
        org.spongycastle.asn1.DERBitString r0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Encodable;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        $r2 = interfaceinvoke $r1.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded(java.lang.String)>("DER");

        r0.<org.spongycastle.asn1.DERBitString: byte[] data> = $r3;

        r0.<org.spongycastle.asn1.DERBitString: int padBits> = 0;

        return;
    }
    public void <init>(byte[])
    {
        org.spongycastle.asn1.DERBitString r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.spongycastle.asn1.DERBitString: void <init>(byte[],int)>($r1, 0);

        return;
    }
    public void <init>(byte[], int)
    {
        org.spongycastle.asn1.DERBitString r0;
        byte[] $r1;
        int $i0;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        r0.<org.spongycastle.asn1.DERBitString: byte[] data> = $r1;

        r0.<org.spongycastle.asn1.DERBitString: int padBits> = $i0;

        return;
    }
    static org.spongycastle.asn1.DERBitString fromInputStream(int, java.io.InputStream) throws java.io.IOException
    {
        int $i0, $i1, $i2;
        java.io.InputStream $r0;
        byte[] r1;
        java.lang.IllegalArgumentException $r2;
        java.io.EOFException $r3;
        org.spongycastle.asn1.DERBitString $r4;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.io.InputStream;

        if $i0 >= 1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("truncated BIT STRING detected");

        throw $r2;

     label1:
        $i1 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        $i0 = $i0 + -1;

        r1 = newarray (byte)[$i0];

        $i0 = lengthof r1;

        if $i0 == 0 goto label2;

        $i0 = staticinvoke <org.spongycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>($r0, r1);

        $i2 = lengthof r1;

        if $i0 == $i2 goto label2;

        $r3 = new java.io.EOFException;

        specialinvoke $r3.<java.io.EOFException: void <init>(java.lang.String)>("EOF encountered in middle of BIT STRING");

        throw $r3;

     label2:
        $r4 = new org.spongycastle.asn1.DERBitString;

        specialinvoke $r4.<org.spongycastle.asn1.DERBitString: void <init>(byte[],int)>(r1, $i1);

        return $r4;
    }
    static org.spongycastle.asn1.DERBitString fromOctetString(byte[])
    {
        byte[] $r0, r1;
        byte b0;
        int $i1;
        java.lang.IllegalArgumentException $r2;
        org.spongycastle.asn1.DERBitString $r3;

        $r0 := @parameter0: byte[];

        $i1 = lengthof $r0;

        if $i1 >= 1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("truncated BIT STRING detected");

        throw $r2;

     label1:
        b0 = $r0[0];

        $i1 = lengthof $r0;

        $i1 = $i1 + -1;

        r1 = newarray (byte)[$i1];

        $i1 = lengthof r1;

        if $i1 == 0 goto label2;

        $i1 = lengthof $r0;

        $i1 = $i1 + -1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 1, r1, 0, $i1);

     label2:
        $r3 = new org.spongycastle.asn1.DERBitString;

        specialinvoke $r3.<org.spongycastle.asn1.DERBitString: void <init>(byte[],int)>(r1, b0);

        return $r3;
    }
    protected static byte[] getBytes(int)
    {
        int $i0, $i1, i2, i3;
        byte[] r0;
        byte $b4;

        $i0 := @parameter0: int;

        i2 = 4;

        i3 = 3;

     label1:
        if i3 < 1 goto label2;

        $i1 = i3 * 8;

        $i1 = 255 << $i1;

        $i1 = $i1 & $i0;

        if $i1 == 0 goto label4;

     label2:
        r0 = newarray (byte)[i2];

        i3 = 0;

     label3:
        if i3 >= i2 goto label5;

        $i1 = i3 * 8;

        $i1 = $i0 >> $i1;

        $i1 = $i1 & 255;

        $b4 = (byte) $i1;

        r0[i3] = $b4;

        i3 = i3 + 1;

        goto label3;

     label4:
        i2 = i2 + -1;

        i3 = i3 + -1;

        goto label1;

     label5:
        return r0;
    }
    public static org.spongycastle.asn1.DERBitString getInstance(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        org.spongycastle.asn1.DERBitString r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r5;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.spongycastle.asn1.DERBitString;

        if $z0 == 0 goto label2;

     label1:
        r1 = (org.spongycastle.asn1.DERBitString) r0;

        return r1;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal object in getInstance: ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;
    }
    public static org.spongycastle.asn1.DERBitString getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.DERBitString $r2;
        org.spongycastle.asn1.ASN1OctetString r3;
        byte[] $r4;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1Primitive getObject()>();

        if $z0 != 0 goto label1;

        $z0 = $r1 instanceof org.spongycastle.asn1.DERBitString;

        if $z0 == 0 goto label2;

     label1:
        $r2 = staticinvoke <org.spongycastle.asn1.DERBitString: org.spongycastle.asn1.DERBitString getInstance(java.lang.Object)>($r1);

        return $r2;

     label2:
        r3 = (org.spongycastle.asn1.ASN1OctetString) $r1;

        $r4 = virtualinvoke r3.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r2 = staticinvoke <org.spongycastle.asn1.DERBitString: org.spongycastle.asn1.DERBitString fromOctetString(byte[])>($r4);

        return $r2;
    }
    protected static int getPadBits(int)
    {
        int $i0, i1, i2, $i3;

        $i0 := @parameter0: int;

        i1 = 0;

        i2 = 3;

     label1:
        if i2 < 0 goto label2;

        if i2 == 0 goto label3;

        $i3 = i2 * 8;

        $i3 = $i0 >> $i3;

        if $i3 == 0 goto label4;

        i1 = i2 * 8;

        $i0 = $i0 >> i1;

        i1 = $i0 & 255;

     label2:
        if i1 != 0 goto label5;

        return 7;

     label3:
        if $i0 == 0 goto label4;

        i1 = $i0 & 255;

        goto label2;

     label4:
        i2 = i2 + -1;

        goto label1;

     label5:
        $i0 = 1;

     label6:
        i1 = i1 << 1;

        i2 = i1 & 255;

        if i2 == 0 goto label7;

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $i0 = 8 - $i0;

        return $i0;
    }
    protected boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive)
    {
        org.spongycastle.asn1.DERBitString r0, r2;
        org.spongycastle.asn1.ASN1Primitive $r1;
        boolean $z0;
        int $i0, $i1;
        byte[] $r3, $r4;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Primitive;

        $z0 = $r1 instanceof org.spongycastle.asn1.DERBitString;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.asn1.DERBitString) $r1;

        $i0 = r0.<org.spongycastle.asn1.DERBitString: int padBits>;

        $i1 = r2.<org.spongycastle.asn1.DERBitString: int padBits>;

        if $i0 != $i1 goto label2;

        $r3 = r0.<org.spongycastle.asn1.DERBitString: byte[] data>;

        $r4 = r2.<org.spongycastle.asn1.DERBitString: byte[] data>;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r3, $r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    void encode(org.spongycastle.asn1.ASN1OutputStream) throws java.io.IOException
    {
        org.spongycastle.asn1.DERBitString r0;
        org.spongycastle.asn1.ASN1OutputStream $r1;
        byte[] r2, $r3;
        int $i0;
        byte $b1;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1OutputStream;

        r2 = virtualinvoke r0.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        $i0 = lengthof r2;

        $i0 = $i0 + 1;

        r2 = newarray (byte)[$i0];

        $i0 = virtualinvoke r0.<org.spongycastle.asn1.DERBitString: int getPadBits()>();

        $b1 = (byte) $i0;

        r2[0] = $b1;

        $r3 = virtualinvoke r0.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        $i0 = lengthof r2;

        $i0 = $i0 + -1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 1, $i0);

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>(3, r2);

        return;
    }
    int encodedLength()
    {
        org.spongycastle.asn1.DERBitString r0;
        int $i0, $i1;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        $r1 = r0.<org.spongycastle.asn1.DERBitString: byte[] data>;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        $i0 = staticinvoke <org.spongycastle.asn1.StreamUtil: int calculateBodyLength(int)>($i0);

        $i0 = $i0 + 1;

        $r1 = r0.<org.spongycastle.asn1.DERBitString: byte[] data>;

        $i1 = lengthof $r1;

        $i0 = $i0 + $i1;

        $i0 = $i0 + 1;

        return $i0;
    }
    public byte[] getBytes()
    {
        org.spongycastle.asn1.DERBitString r0;
        byte[] r1;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        r1 = r0.<org.spongycastle.asn1.DERBitString: byte[] data>;

        return r1;
    }
    public int getPadBits()
    {
        org.spongycastle.asn1.DERBitString r0;
        int i0;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        i0 = r0.<org.spongycastle.asn1.DERBitString: int padBits>;

        return i0;
    }
    public java.lang.String getString()
    {
        org.spongycastle.asn1.DERBitString r0;
        org.spongycastle.asn1.ASN1OutputStream r1;
        java.io.ByteArrayOutputStream r2;
        java.lang.StringBuffer r3;
        java.io.IOException r4;
        byte[] $r5;
        int i0, $i1;
        char[] $r6;
        byte $b2;
        char $c3;
        org.spongycastle.asn1.ASN1ParsingException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        r3 = new java.lang.StringBuffer;

        specialinvoke r3.<java.lang.StringBuffer: void <init>(java.lang.String)>("#");

        r2 = new java.io.ByteArrayOutputStream;

        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = new org.spongycastle.asn1.ASN1OutputStream;

        specialinvoke r1.<org.spongycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>(r2);

     label1:
        virtualinvoke r1.<org.spongycastle.asn1.ASN1OutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>(r0);

     label2:
        $r5 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        i0 = 0;

     label3:
        $i1 = lengthof $r5;

        if i0 == $i1 goto label5;

        $r6 = <org.spongycastle.asn1.DERBitString: char[] table>;

        $b2 = $r5[i0];

        $i1 = $b2 >>> 4;

        $i1 = $i1 & 15;

        $c3 = $r6[$i1];

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r6 = <org.spongycastle.asn1.DERBitString: char[] table>;

        $b2 = $r5[i0];

        $i1 = $b2 & 15;

        $c3 = $r6[$i1];

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        i0 = i0 + 1;

        goto label3;

     label4:
        r4 := @caughtexception;

        $r7 = new org.spongycastle.asn1.ASN1ParsingException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Internal error encoding BitString: ");

        $r9 = virtualinvoke r4.<java.io.IOException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String,java.lang.Throwable)>($r9, r4);

        throw $r7;

     label5:
        $r9 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;

        catch java.io.IOException from label1 to label2 with label4;
    }
    public int hashCode()
    {
        org.spongycastle.asn1.DERBitString r0;
        int $i0, $i1;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        $i1 = r0.<org.spongycastle.asn1.DERBitString: int padBits>;

        $r1 = r0.<org.spongycastle.asn1.DERBitString: byte[] data>;

        $i0 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(byte[])>($r1);

        $i0 = $i1 ^ $i0;

        return $i0;
    }
    public int intValue()
    {
        org.spongycastle.asn1.DERBitString r0;
        int $i0, i1, i2, $i4;
        byte[] $r1;
        byte $b3;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        i1 = 0;

        i2 = 0;

     label1:
        $r1 = r0.<org.spongycastle.asn1.DERBitString: byte[] data>;

        $i0 = lengthof $r1;

        if i2 == $i0 goto label2;

        if i2 == 4 goto label2;

        $r1 = r0.<org.spongycastle.asn1.DERBitString: byte[] data>;

        $b3 = $r1[i2];

        $i4 = $b3 & 255;

        $i0 = i2 * 8;

        $i0 = $i4 << $i0;

        i1 = i1 | $i0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return i1;
    }
    boolean isConstructed()
    {
        org.spongycastle.asn1.DERBitString r0;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        return 0;
    }
    public java.lang.String toString()
    {
        org.spongycastle.asn1.DERBitString r0;
        java.lang.String $r1;

        r0 := @this: org.spongycastle.asn1.DERBitString;

        $r1 = virtualinvoke r0.<org.spongycastle.asn1.DERBitString: java.lang.String getString()>();

        return $r1;
    }
