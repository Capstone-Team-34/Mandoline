org.spongycastle.asn1.eac.CertificateHolderAuthorization extends org.spongycastle.asn1.ASN1Object
static org.spongycastle.asn1.eac.BidirectionalMap AuthorizationRole
public static final int CVCA
public static final int DV_DOMESTIC
public static final int DV_FOREIGN
public static final int IS
public static final int RADG3
public static final int RADG4
static java.util.Hashtable ReverseMap
static java.util.Hashtable RightsDecodeMap
public static final org.spongycastle.asn1.ASN1ObjectIdentifier id_role_EAC
org.spongycastle.asn1.DERApplicationSpecific accessRights
org.spongycastle.asn1.ASN1ObjectIdentifier oid
    static void <clinit>()
    {
        org.spongycastle.asn1.ASN1ObjectIdentifier $r0;
        java.util.Hashtable $r1;
        org.spongycastle.asn1.eac.BidirectionalMap $r2;
        java.lang.Integer $r3;

        $r0 = <org.spongycastle.asn1.eac.EACObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier bsi_de>;

        $r0 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier branch(java.lang.String)>("3.1.2.1");

        <org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.ASN1ObjectIdentifier id_role_EAC> = $r0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        <org.spongycastle.asn1.eac.CertificateHolderAuthorization: java.util.Hashtable RightsDecodeMap> = $r1;

        $r2 = new org.spongycastle.asn1.eac.BidirectionalMap;

        specialinvoke $r2.<org.spongycastle.asn1.eac.BidirectionalMap: void <init>()>();

        <org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.eac.BidirectionalMap AuthorizationRole> = $r2;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        <org.spongycastle.asn1.eac.CertificateHolderAuthorization: java.util.Hashtable ReverseMap> = $r1;

        $r1 = <org.spongycastle.asn1.eac.CertificateHolderAuthorization: java.util.Hashtable RightsDecodeMap>;

        $r3 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "RADG4");

        $r1 = <org.spongycastle.asn1.eac.CertificateHolderAuthorization: java.util.Hashtable RightsDecodeMap>;

        $r3 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "RADG3");

        $r2 = <org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.eac.BidirectionalMap AuthorizationRole>;

        $r3 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(192);

        virtualinvoke $r2.<org.spongycastle.asn1.eac.BidirectionalMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "CVCA");

        $r2 = <org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.eac.BidirectionalMap AuthorizationRole>;

        $r3 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(128);

        virtualinvoke $r2.<org.spongycastle.asn1.eac.BidirectionalMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "DV_DOMESTIC");

        $r2 = <org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.eac.BidirectionalMap AuthorizationRole>;

        $r3 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(64);

        virtualinvoke $r2.<org.spongycastle.asn1.eac.BidirectionalMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "DV_FOREIGN");

        $r2 = <org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.eac.BidirectionalMap AuthorizationRole>;

        $r3 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r2.<org.spongycastle.asn1.eac.BidirectionalMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "IS");

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier, int) throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CertificateHolderAuthorization r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        int $i0;
        byte $b1;

        r0 := @this: org.spongycastle.asn1.eac.CertificateHolderAuthorization;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: void setOid(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        $b1 = (byte) $i0;

        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: void setAccessRights(byte)>($b1);

        return;
    }
    public void <init>(org.spongycastle.asn1.DERApplicationSpecific) throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CertificateHolderAuthorization r0;
        org.spongycastle.asn1.DERApplicationSpecific $r1;
        int $i0;
        org.spongycastle.asn1.ASN1InputStream $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.asn1.eac.CertificateHolderAuthorization;

        $r1 := @parameter0: org.spongycastle.asn1.DERApplicationSpecific;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.DERApplicationSpecific: int getApplicationTag()>();

        if $i0 != 76 goto label1;

        $r2 = new org.spongycastle.asn1.ASN1InputStream;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.DERApplicationSpecific: byte[] getContents()>();

        specialinvoke $r2.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r3);

        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: void setPrivateData(org.spongycastle.asn1.ASN1InputStream)>($r2);

     label1:
        return;
    }
    public static int getFlag(java.lang.String)
    {
        java.lang.String $r0;
        org.spongycastle.asn1.eac.BidirectionalMap $r1;
        java.lang.Object $r2;
        java.lang.Integer r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 = <org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.eac.BidirectionalMap AuthorizationRole>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.eac.BidirectionalMap: java.lang.Object getReverse(java.lang.Object)>($r0);

        r3 = (java.lang.Integer) $r2;

        if r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown value ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r4;

     label1:
        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }
    public static java.lang.String getRoleDescription(int)
    {
        int $i0;
        org.spongycastle.asn1.eac.BidirectionalMap $r0;
        java.lang.Integer $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        $i0 := @parameter0: int;

        $r0 = <org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.eac.BidirectionalMap AuthorizationRole>;

        $r1 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>($i0);

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.eac.BidirectionalMap: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }
    private void setAccessRights(byte)
    {
        org.spongycastle.asn1.eac.CertificateHolderAuthorization r0;
        byte $b0;
        byte[] r1;
        int $i1;
        org.spongycastle.asn1.DERApplicationSpecific $r2;

        r0 := @this: org.spongycastle.asn1.eac.CertificateHolderAuthorization;

        $b0 := @parameter0: byte;

        r1 = newarray (byte)[1];

        r1[0] = $b0;

        $r2 = new org.spongycastle.asn1.DERApplicationSpecific;

        $i1 = staticinvoke <org.spongycastle.asn1.eac.EACTags: int getTag(int)>(83);

        specialinvoke $r2.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(int,byte[])>($i1, r1);

        r0.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.DERApplicationSpecific accessRights> = $r2;

        return;
    }
    private void setOid(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.asn1.eac.CertificateHolderAuthorization r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;

        r0 := @this: org.spongycastle.asn1.eac.CertificateHolderAuthorization;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        r0.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.ASN1ObjectIdentifier oid> = $r1;

        return;
    }
    private void setPrivateData(org.spongycastle.asn1.ASN1InputStream) throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CertificateHolderAuthorization r0;
        org.spongycastle.asn1.ASN1InputStream $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        boolean $z0;
        org.spongycastle.asn1.ASN1ObjectIdentifier r3;
        org.spongycastle.asn1.DERApplicationSpecific r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.spongycastle.asn1.eac.CertificateHolderAuthorization;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1InputStream;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $z0 = $r2 instanceof org.spongycastle.asn1.ASN1ObjectIdentifier;

        if $z0 == 0 goto label1;

        r3 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r2;

        r0.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.ASN1ObjectIdentifier oid> = r3;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $z0 = $r2 instanceof org.spongycastle.asn1.DERApplicationSpecific;

        if $z0 == 0 goto label2;

        r4 = (org.spongycastle.asn1.DERApplicationSpecific) $r2;

        r0.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.DERApplicationSpecific accessRights> = r4;

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no Oid in CerticateHolderAuthorization");

        throw $r5;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No access rights in CerticateHolderAuthorization");

        throw $r5;
    }
    public int getAccessRights()
    {
        org.spongycastle.asn1.eac.CertificateHolderAuthorization r0;
        byte[] $r1;
        org.spongycastle.asn1.DERApplicationSpecific $r2;
        byte $b0;
        int $i1;

        r0 := @this: org.spongycastle.asn1.eac.CertificateHolderAuthorization;

        $r2 = r0.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.DERApplicationSpecific accessRights>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.DERApplicationSpecific: byte[] getContents()>();

        $b0 = $r1[0];

        $i1 = $b0 & 255;

        return $i1;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getOid()
    {
        org.spongycastle.asn1.eac.CertificateHolderAuthorization r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier r1;

        r0 := @this: org.spongycastle.asn1.eac.CertificateHolderAuthorization;

        r1 = r0.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.ASN1ObjectIdentifier oid>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.eac.CertificateHolderAuthorization r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        org.spongycastle.asn1.DERApplicationSpecific $r3;

        r0 := @this: org.spongycastle.asn1.eac.CertificateHolderAuthorization;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.ASN1ObjectIdentifier oid>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r3 = r0.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.DERApplicationSpecific accessRights>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = new org.spongycastle.asn1.DERApplicationSpecific;

        specialinvoke $r3.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(int,org.spongycastle.asn1.ASN1EncodableVector)>(76, r1);

        return $r3;
    }
