org.spongycastle.asn1.eac.CVCertificate extends org.spongycastle.asn1.ASN1Object
private static int bodyValid
private static int signValid
private org.spongycastle.asn1.eac.CertificateBody certificateBody
private byte[] signature
private int valid
    static void <clinit>()
    {
        <org.spongycastle.asn1.eac.CVCertificate: int bodyValid> = 1;

        <org.spongycastle.asn1.eac.CVCertificate: int signValid> = 2;

        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1ApplicationSpecific) throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.ASN1ApplicationSpecific $r1;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ApplicationSpecific;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        specialinvoke r0.<org.spongycastle.asn1.eac.CVCertificate: void setPrivateData(org.spongycastle.asn1.ASN1ApplicationSpecific)>($r1);

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1InputStream) throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.ASN1InputStream $r1;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1InputStream;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        specialinvoke r0.<org.spongycastle.asn1.eac.CVCertificate: void initFrom(org.spongycastle.asn1.ASN1InputStream)>($r1);

        return;
    }
    public void <init>(org.spongycastle.asn1.eac.CertificateBody, byte[]) throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.eac.CertificateBody $r1;
        byte[] $r2;
        int $i0, $i1;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r1 := @parameter0: org.spongycastle.asn1.eac.CertificateBody;

        $r2 := @parameter1: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.eac.CVCertificate: org.spongycastle.asn1.eac.CertificateBody certificateBody> = $r1;

        r0.<org.spongycastle.asn1.eac.CVCertificate: byte[] signature> = $r2;

        $i0 = r0.<org.spongycastle.asn1.eac.CVCertificate: int valid>;

        $i1 = <org.spongycastle.asn1.eac.CVCertificate: int bodyValid>;

        $i0 = $i0 | $i1;

        r0.<org.spongycastle.asn1.eac.CVCertificate: int valid> = $i0;

        $i0 = r0.<org.spongycastle.asn1.eac.CVCertificate: int valid>;

        $i1 = <org.spongycastle.asn1.eac.CVCertificate: int signValid>;

        $i0 = $i0 | $i1;

        r0.<org.spongycastle.asn1.eac.CVCertificate: int valid> = $i0;

        return;
    }
    public static org.spongycastle.asn1.eac.CVCertificate getInstance(java.lang.Object)
    {
        java.io.IOException r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.eac.CVCertificate r2;
        org.spongycastle.asn1.ASN1ApplicationSpecific $r3;
        org.spongycastle.asn1.ASN1ParsingException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.eac.CVCertificate;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.eac.CVCertificate) r1;

        return r2;

     label1:
        if r1 == null goto label5;

        r2 = new org.spongycastle.asn1.eac.CVCertificate;

     label2:
        $r3 = staticinvoke <org.spongycastle.asn1.DERApplicationSpecific: org.spongycastle.asn1.ASN1ApplicationSpecific getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.eac.CVCertificate: void <init>(org.spongycastle.asn1.ASN1ApplicationSpecific)>($r3);

     label3:
        return r2;

     label4:
        r0 := @caughtexception;

        $r4 = new org.spongycastle.asn1.ASN1ParsingException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to parse data: ");

        $r6 = virtualinvoke r0.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r0);

        throw $r4;

     label5:
        return null;

        catch java.io.IOException from label2 to label3 with label4;
    }
    private void initFrom(org.spongycastle.asn1.ASN1InputStream) throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.ASN1InputStream $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        boolean $z0;
        org.spongycastle.asn1.DERApplicationSpecific r3;
        java.io.IOException $r4;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1InputStream;

     label1:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        if $r2 == null goto label3;

        $z0 = $r2 instanceof org.spongycastle.asn1.DERApplicationSpecific;

        if $z0 == 0 goto label2;

        r3 = (org.spongycastle.asn1.DERApplicationSpecific) $r2;

        specialinvoke r0.<org.spongycastle.asn1.eac.CVCertificate: void setPrivateData(org.spongycastle.asn1.ASN1ApplicationSpecific)>(r3);

        goto label1;

     label2:
        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Invalid Input Stream for creating an Iso7816CertificateStructure");

        throw $r4;

     label3:
        return;
    }
    private void setPrivateData(org.spongycastle.asn1.ASN1ApplicationSpecific) throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.ASN1ApplicationSpecific $r1;
        org.spongycastle.asn1.ASN1InputStream r2;
        int $i0, $i1, $i2;
        byte[] $r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        boolean $z0;
        org.spongycastle.asn1.DERApplicationSpecific r5;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        org.spongycastle.asn1.eac.CertificateBody $r9;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ApplicationSpecific;

        r0.<org.spongycastle.asn1.eac.CVCertificate: int valid> = 0;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: int getApplicationTag()>();

        if $i0 != 33 goto label6;

        r2 = new org.spongycastle.asn1.ASN1InputStream;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] getContents()>();

        specialinvoke r2.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r3);

     label1:
        $r4 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        if $r4 == null goto label7;

        $z0 = $r4 instanceof org.spongycastle.asn1.DERApplicationSpecific;

        if $z0 == 0 goto label5;

        r5 = (org.spongycastle.asn1.DERApplicationSpecific) $r4;

        $i0 = virtualinvoke r5.<org.spongycastle.asn1.DERApplicationSpecific: int getApplicationTag()>();

        lookupswitch($i0)
        {
            case 55: goto label4;
            case 78: goto label3;
            default: goto label2;
        };

     label2:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid tag, not an Iso7816CertificateStructure :");

        $i0 = virtualinvoke r5.<org.spongycastle.asn1.DERApplicationSpecific: int getApplicationTag()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label3:
        $r9 = staticinvoke <org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.CertificateBody getInstance(java.lang.Object)>(r5);

        r0.<org.spongycastle.asn1.eac.CVCertificate: org.spongycastle.asn1.eac.CertificateBody certificateBody> = $r9;

        $i0 = r0.<org.spongycastle.asn1.eac.CVCertificate: int valid>;

        $i1 = <org.spongycastle.asn1.eac.CVCertificate: int bodyValid>;

        $i0 = $i0 | $i1;

        r0.<org.spongycastle.asn1.eac.CVCertificate: int valid> = $i0;

        goto label1;

     label4:
        $r3 = virtualinvoke r5.<org.spongycastle.asn1.DERApplicationSpecific: byte[] getContents()>();

        r0.<org.spongycastle.asn1.eac.CVCertificate: byte[] signature> = $r3;

        $i0 = r0.<org.spongycastle.asn1.eac.CVCertificate: int valid>;

        $i1 = <org.spongycastle.asn1.eac.CVCertificate: int signValid>;

        $i0 = $i0 | $i1;

        r0.<org.spongycastle.asn1.eac.CVCertificate: int valid> = $i0;

        goto label1;

     label5:
        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Invalid Object, not an Iso7816CertificateStructure");

        throw $r6;

     label6:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a CARDHOLDER_CERTIFICATE :");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: int getApplicationTag()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label7:
        $i0 = r0.<org.spongycastle.asn1.eac.CVCertificate: int valid>;

        $i1 = <org.spongycastle.asn1.eac.CVCertificate: int signValid>;

        $i2 = <org.spongycastle.asn1.eac.CVCertificate: int bodyValid>;

        $i1 = $i1 | $i2;

        if $i0 == $i1 goto label8;

        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid CARDHOLDER_CERTIFICATE :");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: int getApplicationTag()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label8:
        return;
    }
    public org.spongycastle.asn1.eac.CertificationAuthorityReference getAuthorityReference() throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.eac.CertificationAuthorityReference $r1;
        org.spongycastle.asn1.eac.CertificateBody $r2;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r2 = r0.<org.spongycastle.asn1.eac.CVCertificate: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.CertificationAuthorityReference getCertificationAuthorityReference()>();

        return $r1;
    }
    public org.spongycastle.asn1.eac.CertificateBody getBody()
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.eac.CertificateBody r1;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        r1 = r0.<org.spongycastle.asn1.eac.CVCertificate: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        return r1;
    }
    public int getCertificateType()
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        int $i0;
        org.spongycastle.asn1.eac.CertificateBody $r1;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r1 = r0.<org.spongycastle.asn1.eac.CVCertificate: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.eac.CertificateBody: int getCertificateType()>();

        return $i0;
    }
    public org.spongycastle.asn1.eac.PackedDate getEffectiveDate() throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.eac.PackedDate $r1;
        org.spongycastle.asn1.eac.CertificateBody $r2;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r2 = r0.<org.spongycastle.asn1.eac.CVCertificate: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.PackedDate getCertificateEffectiveDate()>();

        return $r1;
    }
    public org.spongycastle.asn1.eac.PackedDate getExpirationDate() throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.eac.PackedDate $r1;
        org.spongycastle.asn1.eac.CertificateBody $r2;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r2 = r0.<org.spongycastle.asn1.eac.CVCertificate: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.PackedDate getCertificateExpirationDate()>();

        return $r1;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getHolderAuthorization() throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.eac.CertificateBody $r1;
        org.spongycastle.asn1.eac.CertificateHolderAuthorization $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r1 = r0.<org.spongycastle.asn1.eac.CVCertificate: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.CertificateHolderAuthorization getCertificateHolderAuthorization()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: org.spongycastle.asn1.ASN1ObjectIdentifier getOid()>();

        return $r3;
    }
    public org.spongycastle.asn1.eac.Flags getHolderAuthorizationRights() throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.eac.Flags $r1;
        org.spongycastle.asn1.eac.CertificateBody $r2;
        org.spongycastle.asn1.eac.CertificateHolderAuthorization $r3;
        int $i0;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r1 = new org.spongycastle.asn1.eac.Flags;

        $r2 = r0.<org.spongycastle.asn1.eac.CVCertificate: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.CertificateHolderAuthorization getCertificateHolderAuthorization()>();

        $i0 = virtualinvoke $r3.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: int getAccessRights()>();

        $i0 = $i0 & 31;

        specialinvoke $r1.<org.spongycastle.asn1.eac.Flags: void <init>(int)>($i0);

        return $r1;
    }
    public int getHolderAuthorizationRole() throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.eac.CertificateBody $r1;
        org.spongycastle.asn1.eac.CertificateHolderAuthorization $r2;
        int $i0;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r1 = r0.<org.spongycastle.asn1.eac.CVCertificate: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.CertificateHolderAuthorization getCertificateHolderAuthorization()>();

        $i0 = virtualinvoke $r2.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: int getAccessRights()>();

        $i0 = $i0 & 192;

        return $i0;
    }
    public org.spongycastle.asn1.eac.CertificateHolderReference getHolderReference() throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.eac.CertificateHolderReference $r1;
        org.spongycastle.asn1.eac.CertificateBody $r2;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r2 = r0.<org.spongycastle.asn1.eac.CVCertificate: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.CertificateHolderReference getCertificateHolderReference()>();

        return $r1;
    }
    public int getRole() throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        org.spongycastle.asn1.eac.CertificateBody $r1;
        org.spongycastle.asn1.eac.CertificateHolderAuthorization $r2;
        int $i0;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r1 = r0.<org.spongycastle.asn1.eac.CVCertificate: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.CertificateHolderAuthorization getCertificateHolderAuthorization()>();

        $i0 = virtualinvoke $r2.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: int getAccessRights()>();

        return $i0;
    }
    public byte[] getSignature()
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        $r1 = r0.<org.spongycastle.asn1.eac.CVCertificate: byte[] signature>;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        return $r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.eac.CVCertificate r0;
        java.io.IOException r1;
        org.spongycastle.asn1.ASN1EncodableVector r2;
        org.spongycastle.asn1.DEROctetString $r3;
        byte[] $r4;
        org.spongycastle.asn1.eac.CertificateBody $r5;
        org.spongycastle.asn1.DERApplicationSpecific $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificate;

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r5 = r0.<org.spongycastle.asn1.eac.CVCertificate: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $r6 = new org.spongycastle.asn1.DERApplicationSpecific;

        $r3 = new org.spongycastle.asn1.DEROctetString;

        $r4 = r0.<org.spongycastle.asn1.eac.CVCertificate: byte[] signature>;

     label1:
        specialinvoke $r3.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r4);

        specialinvoke $r6.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 55, $r3);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r6);

     label2:
        $r6 = new org.spongycastle.asn1.DERApplicationSpecific;

        specialinvoke $r6.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(int,org.spongycastle.asn1.ASN1EncodableVector)>(33, r2);

        return $r6;

     label3:
        r1 := @caughtexception;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unable to convert signature!");

        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }
