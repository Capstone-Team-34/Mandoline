org.spongycastle.asn1.eac.CertificateBody extends org.spongycastle.asn1.ASN1Object
private static final int CAR
private static final int CEfD
private static final int CExD
private static final int CHA
private static final int CHR
private static final int CPI
private static final int PK
public static final int profileType
public static final int requestType
private org.spongycastle.asn1.DERApplicationSpecific certificateEffectiveDate
private org.spongycastle.asn1.DERApplicationSpecific certificateExpirationDate
private org.spongycastle.asn1.eac.CertificateHolderAuthorization certificateHolderAuthorization
private org.spongycastle.asn1.DERApplicationSpecific certificateHolderReference
private org.spongycastle.asn1.DERApplicationSpecific certificateProfileIdentifier
private int certificateType
private org.spongycastle.asn1.DERApplicationSpecific certificationAuthorityReference
private org.spongycastle.asn1.eac.PublicKeyDataObject publicKey
org.spongycastle.asn1.ASN1InputStream seq
    private void <init>(org.spongycastle.asn1.ASN1ApplicationSpecific) throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.ASN1ApplicationSpecific $r1;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ApplicationSpecific;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType> = 0;

        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setIso7816CertificateBody(org.spongycastle.asn1.ASN1ApplicationSpecific)>($r1);

        return;
    }
    public void <init>(org.spongycastle.asn1.DERApplicationSpecific, org.spongycastle.asn1.eac.CertificationAuthorityReference, org.spongycastle.asn1.eac.PublicKeyDataObject, org.spongycastle.asn1.eac.CertificateHolderReference, org.spongycastle.asn1.eac.CertificateHolderAuthorization, org.spongycastle.asn1.eac.PackedDate, org.spongycastle.asn1.eac.PackedDate)
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.DERApplicationSpecific $r1;
        org.spongycastle.asn1.eac.CertificationAuthorityReference $r2;
        org.spongycastle.asn1.eac.PublicKeyDataObject $r3;
        org.spongycastle.asn1.eac.CertificateHolderReference $r4;
        org.spongycastle.asn1.eac.CertificateHolderAuthorization $r5;
        org.spongycastle.asn1.eac.PackedDate $r6, $r7;
        java.io.IOException r8;
        byte[] $r9;
        org.spongycastle.asn1.DEROctetString $r10;
        java.lang.IllegalArgumentException $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $r1 := @parameter0: org.spongycastle.asn1.DERApplicationSpecific;

        $r2 := @parameter1: org.spongycastle.asn1.eac.CertificationAuthorityReference;

        $r3 := @parameter2: org.spongycastle.asn1.eac.PublicKeyDataObject;

        $r4 := @parameter3: org.spongycastle.asn1.eac.CertificateHolderReference;

        $r5 := @parameter4: org.spongycastle.asn1.eac.CertificateHolderAuthorization;

        $r6 := @parameter5: org.spongycastle.asn1.eac.PackedDate;

        $r7 := @parameter6: org.spongycastle.asn1.eac.PackedDate;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType> = 0;

        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setCertificateProfileIdentifier(org.spongycastle.asn1.DERApplicationSpecific)>($r1);

        $r1 = new org.spongycastle.asn1.DERApplicationSpecific;

        $r9 = virtualinvoke $r2.<org.spongycastle.asn1.eac.CertificationAuthorityReference: byte[] getEncoded()>();

        specialinvoke $r1.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(int,byte[])>(2, $r9);

        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setCertificationAuthorityReference(org.spongycastle.asn1.DERApplicationSpecific)>($r1);

        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setPublicKey(org.spongycastle.asn1.eac.PublicKeyDataObject)>($r3);

        $r1 = new org.spongycastle.asn1.DERApplicationSpecific;

        $r9 = virtualinvoke $r4.<org.spongycastle.asn1.eac.CertificateHolderReference: byte[] getEncoded()>();

        specialinvoke $r1.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(int,byte[])>(32, $r9);

        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setCertificateHolderReference(org.spongycastle.asn1.DERApplicationSpecific)>($r1);

        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setCertificateHolderAuthorization(org.spongycastle.asn1.eac.CertificateHolderAuthorization)>($r5);

        $r1 = new org.spongycastle.asn1.DERApplicationSpecific;

        $r10 = new org.spongycastle.asn1.DEROctetString;

     label1:
        $r9 = virtualinvoke $r6.<org.spongycastle.asn1.eac.PackedDate: byte[] getEncoding()>();

        specialinvoke $r10.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r9);

        specialinvoke $r1.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 37, $r10);

        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setCertificateEffectiveDate(org.spongycastle.asn1.DERApplicationSpecific)>($r1);

     label2:
        $r1 = new org.spongycastle.asn1.DERApplicationSpecific;

        $r10 = new org.spongycastle.asn1.DEROctetString;

     label3:
        $r9 = virtualinvoke $r7.<org.spongycastle.asn1.eac.PackedDate: byte[] getEncoding()>();

        specialinvoke $r10.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r9);

        specialinvoke $r1.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 36, $r10);

        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setCertificateExpirationDate(org.spongycastle.asn1.DERApplicationSpecific)>($r1);

     label4:
        return;

     label5:
        r8 := @caughtexception;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to encode dates: ");

        $r13 = virtualinvoke r8.<java.io.IOException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r11;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    public static org.spongycastle.asn1.eac.CertificateBody getInstance(java.lang.Object) throws java.io.IOException
    {
        org.spongycastle.asn1.ASN1ApplicationSpecific $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.eac.CertificateBody r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.eac.CertificateBody;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.eac.CertificateBody) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.eac.CertificateBody;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1ApplicationSpecific: org.spongycastle.asn1.ASN1ApplicationSpecific getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.eac.CertificateBody: void <init>(org.spongycastle.asn1.ASN1ApplicationSpecific)>($r0);

        return r2;

     label2:
        return null;
    }
    private org.spongycastle.asn1.ASN1Primitive profileToASN1Object() throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.eac.PublicKeyDataObject $r2;
        org.spongycastle.asn1.DERApplicationSpecific $r3;
        org.spongycastle.asn1.eac.CertificateHolderAuthorization $r4;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateProfileIdentifier>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificationAuthorityReference>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = new org.spongycastle.asn1.DERApplicationSpecific;

        $r2 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.PublicKeyDataObject publicKey>;

        specialinvoke $r3.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 73, $r2);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateHolderReference>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r4 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.CertificateHolderAuthorization certificateHolderAuthorization>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r3 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateEffectiveDate>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateExpirationDate>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = new org.spongycastle.asn1.DERApplicationSpecific;

        specialinvoke $r3.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(int,org.spongycastle.asn1.ASN1EncodableVector)>(78, r1);

        return $r3;
    }
    private org.spongycastle.asn1.ASN1Primitive requestToASN1Object() throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.eac.PublicKeyDataObject $r2;
        org.spongycastle.asn1.DERApplicationSpecific $r3;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateProfileIdentifier>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = new org.spongycastle.asn1.DERApplicationSpecific;

        $r2 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.PublicKeyDataObject publicKey>;

        specialinvoke $r3.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 73, $r2);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateHolderReference>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = new org.spongycastle.asn1.DERApplicationSpecific;

        specialinvoke $r3.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(int,org.spongycastle.asn1.ASN1EncodableVector)>(78, r1);

        return $r3;
    }
    private void setCertificateEffectiveDate(org.spongycastle.asn1.DERApplicationSpecific) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.DERApplicationSpecific $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $r1 := @parameter0: org.spongycastle.asn1.DERApplicationSpecific;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.DERApplicationSpecific: int getApplicationTag()>();

        if $i0 != 37 goto label1;

        r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateEffectiveDate> = $r1;

        $i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        $i0 = $i0 | 32;

        r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType> = $i0;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an Iso7816Tags.APPLICATION_EFFECTIVE_DATE tag :");

        $i0 = staticinvoke <org.spongycastle.asn1.eac.EACTags: int encodeTag(org.spongycastle.asn1.ASN1ApplicationSpecific)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }
    private void setCertificateExpirationDate(org.spongycastle.asn1.DERApplicationSpecific) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.DERApplicationSpecific $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $r1 := @parameter0: org.spongycastle.asn1.DERApplicationSpecific;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.DERApplicationSpecific: int getApplicationTag()>();

        if $i0 != 36 goto label1;

        r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateExpirationDate> = $r1;

        $i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        $i0 = $i0 | 64;

        r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType> = $i0;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not an Iso7816Tags.APPLICATION_EXPIRATION_DATE tag");

        throw $r2;
    }
    private void setCertificateHolderAuthorization(org.spongycastle.asn1.eac.CertificateHolderAuthorization)
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.eac.CertificateHolderAuthorization $r1;
        int $i0;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $r1 := @parameter0: org.spongycastle.asn1.eac.CertificateHolderAuthorization;

        r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.CertificateHolderAuthorization certificateHolderAuthorization> = $r1;

        $i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        $i0 = $i0 | 16;

        r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType> = $i0;

        return;
    }
    private void setCertificateHolderReference(org.spongycastle.asn1.DERApplicationSpecific) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.DERApplicationSpecific $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $r1 := @parameter0: org.spongycastle.asn1.DERApplicationSpecific;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.DERApplicationSpecific: int getApplicationTag()>();

        if $i0 != 32 goto label1;

        r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateHolderReference> = $r1;

        $i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        $i0 = $i0 | 8;

        r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType> = $i0;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not an Iso7816Tags.CARDHOLDER_NAME tag");

        throw $r2;
    }
    private void setCertificateProfileIdentifier(org.spongycastle.asn1.DERApplicationSpecific) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.DERApplicationSpecific $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $r1 := @parameter0: org.spongycastle.asn1.DERApplicationSpecific;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.DERApplicationSpecific: int getApplicationTag()>();

        if $i0 != 41 goto label1;

        r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateProfileIdentifier> = $r1;

        $i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        $i0 = $i0 | 1;

        r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType> = $i0;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an Iso7816Tags.INTERCHANGE_PROFILE tag :");

        $i0 = staticinvoke <org.spongycastle.asn1.eac.EACTags: int encodeTag(org.spongycastle.asn1.ASN1ApplicationSpecific)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;
    }
    private void setCertificationAuthorityReference(org.spongycastle.asn1.DERApplicationSpecific) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.DERApplicationSpecific $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $r1 := @parameter0: org.spongycastle.asn1.DERApplicationSpecific;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.DERApplicationSpecific: int getApplicationTag()>();

        if $i0 != 2 goto label1;

        r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificationAuthorityReference> = $r1;

        $i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        $i0 = $i0 | 2;

        r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType> = $i0;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not an Iso7816Tags.ISSUER_IDENTIFICATION_NUMBER tag");

        throw $r2;
    }
    private void setIso7816CertificateBody(org.spongycastle.asn1.ASN1ApplicationSpecific) throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.ASN1ApplicationSpecific $r1;
        org.spongycastle.asn1.ASN1InputStream r2;
        int $i0;
        byte[] $r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        boolean $z0;
        org.spongycastle.asn1.DERApplicationSpecific r5;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.lang.Class $r9;
        org.spongycastle.asn1.eac.PublicKeyDataObject $r10;
        org.spongycastle.asn1.eac.CertificateHolderAuthorization $r11;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ApplicationSpecific;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: int getApplicationTag()>();

        if $i0 != 78 goto label03;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] getContents()>();

        r2 = new org.spongycastle.asn1.ASN1InputStream;

        specialinvoke r2.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r3);

     label01:
        $r4 = virtualinvoke r2.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        if $r4 == null goto label12;

        $z0 = $r4 instanceof org.spongycastle.asn1.DERApplicationSpecific;

        if $z0 == 0 goto label04;

        r5 = (org.spongycastle.asn1.DERApplicationSpecific) $r4;

        $i0 = virtualinvoke r5.<org.spongycastle.asn1.DERApplicationSpecific: int getApplicationTag()>();

        lookupswitch($i0)
        {
            case 2: goto label06;
            case 32: goto label08;
            case 36: goto label11;
            case 37: goto label10;
            case 41: goto label05;
            case 73: goto label07;
            case 76: goto label09;
            default: goto label02;
        };

     label02:
        r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType> = 0;

        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a valid iso7816 DERApplicationSpecific tag ");

        $i0 = virtualinvoke r5.<org.spongycastle.asn1.DERApplicationSpecific: int getApplicationTag()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label03:
        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Bad tag : not an iso7816 CERTIFICATE_CONTENT_TEMPLATE");

        throw $r6;

     label04:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a valid iso7816 content : not a DERApplicationSpecific Object :");

        $i0 = staticinvoke <org.spongycastle.asn1.eac.EACTags: int encodeTag(org.spongycastle.asn1.ASN1ApplicationSpecific)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label05:
        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setCertificateProfileIdentifier(org.spongycastle.asn1.DERApplicationSpecific)>(r5);

        goto label01;

     label06:
        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setCertificationAuthorityReference(org.spongycastle.asn1.DERApplicationSpecific)>(r5);

        goto label01;

     label07:
        $r4 = virtualinvoke r5.<org.spongycastle.asn1.DERApplicationSpecific: org.spongycastle.asn1.ASN1Primitive getObject(int)>(16);

        $r10 = staticinvoke <org.spongycastle.asn1.eac.PublicKeyDataObject: org.spongycastle.asn1.eac.PublicKeyDataObject getInstance(java.lang.Object)>($r4);

        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setPublicKey(org.spongycastle.asn1.eac.PublicKeyDataObject)>($r10);

        goto label01;

     label08:
        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setCertificateHolderReference(org.spongycastle.asn1.DERApplicationSpecific)>(r5);

        goto label01;

     label09:
        $r11 = new org.spongycastle.asn1.eac.CertificateHolderAuthorization;

        specialinvoke $r11.<org.spongycastle.asn1.eac.CertificateHolderAuthorization: void <init>(org.spongycastle.asn1.DERApplicationSpecific)>(r5);

        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setCertificateHolderAuthorization(org.spongycastle.asn1.eac.CertificateHolderAuthorization)>($r11);

        goto label01;

     label10:
        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setCertificateEffectiveDate(org.spongycastle.asn1.DERApplicationSpecific)>(r5);

        goto label01;

     label11:
        specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: void setCertificateExpirationDate(org.spongycastle.asn1.DERApplicationSpecific)>(r5);

        goto label01;

     label12:
        return;
    }
    private void setPublicKey(org.spongycastle.asn1.eac.PublicKeyDataObject)
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.eac.PublicKeyDataObject $r1;
        int $i0;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $r1 := @parameter0: org.spongycastle.asn1.eac.PublicKeyDataObject;

        $r1 = staticinvoke <org.spongycastle.asn1.eac.PublicKeyDataObject: org.spongycastle.asn1.eac.PublicKeyDataObject getInstance(java.lang.Object)>($r1);

        r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.PublicKeyDataObject publicKey> = $r1;

        $i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        $i0 = $i0 | 4;

        r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType> = $i0;

        return;
    }
    public org.spongycastle.asn1.eac.PackedDate getCertificateEffectiveDate()
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        byte[] $r1;
        int $i0;
        org.spongycastle.asn1.eac.PackedDate $r2;
        org.spongycastle.asn1.DERApplicationSpecific $r3;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        $i0 = $i0 & 32;

        if $i0 != 32 goto label1;

        $r2 = new org.spongycastle.asn1.eac.PackedDate;

        $r3 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateEffectiveDate>;

        $r1 = virtualinvoke $r3.<org.spongycastle.asn1.DERApplicationSpecific: byte[] getContents()>();

        specialinvoke $r2.<org.spongycastle.asn1.eac.PackedDate: void <init>(byte[])>($r1);

        return $r2;

     label1:
        return null;
    }
    public org.spongycastle.asn1.eac.PackedDate getCertificateExpirationDate() throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        byte[] $r1;
        int $i0;
        org.spongycastle.asn1.eac.PackedDate $r2;
        org.spongycastle.asn1.DERApplicationSpecific $r3;
        java.io.IOException $r4;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        $i0 = $i0 & 64;

        if $i0 != 64 goto label1;

        $r2 = new org.spongycastle.asn1.eac.PackedDate;

        $r3 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateExpirationDate>;

        $r1 = virtualinvoke $r3.<org.spongycastle.asn1.DERApplicationSpecific: byte[] getContents()>();

        specialinvoke $r2.<org.spongycastle.asn1.eac.PackedDate: void <init>(byte[])>($r1);

        return $r2;

     label1:
        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("certificate Expiration Date not set");

        throw $r4;
    }
    public org.spongycastle.asn1.eac.CertificateHolderAuthorization getCertificateHolderAuthorization() throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        int $i0;
        java.io.IOException $r1;
        org.spongycastle.asn1.eac.CertificateHolderAuthorization r2;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        $i0 = $i0 & 16;

        if $i0 != 16 goto label1;

        r2 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.CertificateHolderAuthorization certificateHolderAuthorization>;

        return r2;

     label1:
        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Certificate Holder Authorisation not set");

        throw $r1;
    }
    public org.spongycastle.asn1.eac.CertificateHolderReference getCertificateHolderReference()
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.eac.CertificateHolderReference $r1;
        byte[] $r2;
        org.spongycastle.asn1.DERApplicationSpecific $r3;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $r1 = new org.spongycastle.asn1.eac.CertificateHolderReference;

        $r3 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateHolderReference>;

        $r2 = virtualinvoke $r3.<org.spongycastle.asn1.DERApplicationSpecific: byte[] getContents()>();

        specialinvoke $r1.<org.spongycastle.asn1.eac.CertificateHolderReference: void <init>(byte[])>($r2);

        return $r1;
    }
    public org.spongycastle.asn1.DERApplicationSpecific getCertificateProfileIdentifier()
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.DERApplicationSpecific r1;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        r1 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificateProfileIdentifier>;

        return r1;
    }
    public int getCertificateType()
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        int i0;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        return i0;
    }
    public org.spongycastle.asn1.eac.CertificationAuthorityReference getCertificationAuthorityReference() throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        byte[] $r1;
        int $i0;
        org.spongycastle.asn1.eac.CertificationAuthorityReference $r2;
        org.spongycastle.asn1.DERApplicationSpecific $r3;
        java.io.IOException $r4;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        $i0 = $i0 & 2;

        if $i0 != 2 goto label1;

        $r2 = new org.spongycastle.asn1.eac.CertificationAuthorityReference;

        $r3 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.DERApplicationSpecific certificationAuthorityReference>;

        $r1 = virtualinvoke $r3.<org.spongycastle.asn1.DERApplicationSpecific: byte[] getContents()>();

        specialinvoke $r2.<org.spongycastle.asn1.eac.CertificationAuthorityReference: void <init>(byte[])>($r1);

        return $r2;

     label1:
        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Certification authority reference not set");

        throw $r4;
    }
    public org.spongycastle.asn1.eac.PublicKeyDataObject getPublicKey()
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        org.spongycastle.asn1.eac.PublicKeyDataObject r1;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        r1 = r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.PublicKeyDataObject publicKey>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.eac.CertificateBody r0;
        java.io.IOException r1;
        int $i0;
        org.spongycastle.asn1.ASN1Primitive $r2;

        r0 := @this: org.spongycastle.asn1.eac.CertificateBody;

        $i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        if $i0 != 127 goto label3;

     label1:
        $r2 = specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.ASN1Primitive profileToASN1Object()>();

     label2:
        return $r2;

     label3:
        $i0 = r0.<org.spongycastle.asn1.eac.CertificateBody: int certificateType>;

        if $i0 != 13 goto label7;

     label4:
        $r2 = specialinvoke r0.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.ASN1Primitive requestToASN1Object()>();

     label5:
        return $r2;

     label6:
        r1 := @caughtexception;

     label7:
        return null;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }
