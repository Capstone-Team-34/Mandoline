org.spongycastle.asn1.eac.BidirectionalMap extends java.util.Hashtable
private static final long serialVersionUID
java.util.Hashtable reverseMap
    public void <init>()
    {
        org.spongycastle.asn1.eac.BidirectionalMap r0;
        java.util.Hashtable $r1;

        r0 := @this: org.spongycastle.asn1.eac.BidirectionalMap;

        specialinvoke r0.<java.util.Hashtable: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.asn1.eac.BidirectionalMap: java.util.Hashtable reverseMap> = $r1;

        return;
    }
    public java.lang.Object getReverse(java.lang.Object)
    {
        org.spongycastle.asn1.eac.BidirectionalMap r0;
        java.lang.Object $r1;
        java.util.Hashtable $r2;

        r0 := @this: org.spongycastle.asn1.eac.BidirectionalMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.spongycastle.asn1.eac.BidirectionalMap: java.util.Hashtable reverseMap>;

        $r1 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        return $r1;
    }
    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.spongycastle.asn1.eac.BidirectionalMap r0;
        java.lang.Object $r1, $r2;
        java.util.Hashtable $r3;

        r0 := @this: org.spongycastle.asn1.eac.BidirectionalMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.spongycastle.asn1.eac.BidirectionalMap: java.util.Hashtable reverseMap>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        $r1 = specialinvoke r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return $r1;
    }
