org.spongycastle.asn1.eac.ECDSAPublicKey extends org.spongycastle.asn1.eac.PublicKeyDataObject
private static final int A
private static final int B
private static final int F
private static final int G
private static final int P
private static final int R
private static final int Y
private byte[] basePointG
private java.math.BigInteger cofactorF
private java.math.BigInteger firstCoefA
private int options
private java.math.BigInteger orderOfBasePointR
private java.math.BigInteger primeModulusP
private byte[] publicPointY
private java.math.BigInteger secondCoefB
private org.spongycastle.asn1.ASN1ObjectIdentifier usage
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, byte[], java.math.BigInteger, byte[], int)
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.math.BigInteger $r2, $r3, $r4, $r6;
        byte[] $r5, $r7;
        int $i0;
        org.spongycastle.asn1.DEROctetString $r8;
        long $l1;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 := @parameter3: java.math.BigInteger;

        $r5 := @parameter4: byte[];

        $r6 := @parameter5: java.math.BigInteger;

        $r7 := @parameter6: byte[];

        $i0 := @parameter7: int;

        specialinvoke r0.<org.spongycastle.asn1.eac.PublicKeyDataObject: void <init>()>();

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: org.spongycastle.asn1.ASN1ObjectIdentifier usage> = $r1;

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setPrimeModulusP(java.math.BigInteger)>($r2);

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setFirstCoefA(java.math.BigInteger)>($r3);

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setSecondCoefB(java.math.BigInteger)>($r4);

        $r8 = new org.spongycastle.asn1.DEROctetString;

        specialinvoke $r8.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r5);

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setBasePointG(org.spongycastle.asn1.ASN1OctetString)>($r8);

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setOrderOfBasePointR(java.math.BigInteger)>($r6);

        $r8 = new org.spongycastle.asn1.DEROctetString;

        specialinvoke $r8.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r7);

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setPublicPointY(org.spongycastle.asn1.ASN1OctetString)>($r8);

        $l1 = (long) $i0;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setCofactorF(java.math.BigInteger)>($r2);

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier, byte[]) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        byte[] $r2;
        org.spongycastle.asn1.DEROctetString $r3;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: byte[];

        specialinvoke r0.<org.spongycastle.asn1.eac.PublicKeyDataObject: void <init>()>();

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: org.spongycastle.asn1.ASN1ObjectIdentifier usage> = $r1;

        $r3 = new org.spongycastle.asn1.DEROctetString;

        specialinvoke $r3.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r2);

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setPublicPointY(org.spongycastle.asn1.ASN1OctetString)>($r3);

        return;
    }
    void <init>(org.spongycastle.asn1.ASN1Sequence) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        java.util.Enumeration $r2;
        java.lang.Object $r3;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r4;
        boolean $z0;
        org.spongycastle.asn1.ASN1TaggedObject r5;
        int $i0;
        java.lang.IllegalArgumentException $r6;
        org.spongycastle.asn1.eac.UnsignedInteger $r7;
        java.math.BigInteger $r8;
        org.spongycastle.asn1.ASN1OctetString $r9;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.eac.PublicKeyDataObject: void <init>()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = staticinvoke <org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>($r3);

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: org.spongycastle.asn1.ASN1ObjectIdentifier usage> = $r4;

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options> = 0;

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label11;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $z0 = $r3 instanceof org.spongycastle.asn1.ASN1TaggedObject;

        if $z0 == 0 goto label10;

        r5 = (org.spongycastle.asn1.ASN1TaggedObject) $r3;

        $i0 = virtualinvoke r5.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        lookupswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            default: goto label02;
        };

     label02:
        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options> = 0;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown Object Identifier!");

        throw $r6;

     label03:
        $r7 = staticinvoke <org.spongycastle.asn1.eac.UnsignedInteger: org.spongycastle.asn1.eac.UnsignedInteger getInstance(java.lang.Object)>(r5);

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.eac.UnsignedInteger: java.math.BigInteger getValue()>();

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setPrimeModulusP(java.math.BigInteger)>($r8);

        goto label01;

     label04:
        $r7 = staticinvoke <org.spongycastle.asn1.eac.UnsignedInteger: org.spongycastle.asn1.eac.UnsignedInteger getInstance(java.lang.Object)>(r5);

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.eac.UnsignedInteger: java.math.BigInteger getValue()>();

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setFirstCoefA(java.math.BigInteger)>($r8);

        goto label01;

     label05:
        $r7 = staticinvoke <org.spongycastle.asn1.eac.UnsignedInteger: org.spongycastle.asn1.eac.UnsignedInteger getInstance(java.lang.Object)>(r5);

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.eac.UnsignedInteger: java.math.BigInteger getValue()>();

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setSecondCoefB(java.math.BigInteger)>($r8);

        goto label01;

     label06:
        $r9 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r5, 0);

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setBasePointG(org.spongycastle.asn1.ASN1OctetString)>($r9);

        goto label01;

     label07:
        $r7 = staticinvoke <org.spongycastle.asn1.eac.UnsignedInteger: org.spongycastle.asn1.eac.UnsignedInteger getInstance(java.lang.Object)>(r5);

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.eac.UnsignedInteger: java.math.BigInteger getValue()>();

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setOrderOfBasePointR(java.math.BigInteger)>($r8);

        goto label01;

     label08:
        $r9 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r5, 0);

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setPublicPointY(org.spongycastle.asn1.ASN1OctetString)>($r9);

        goto label01;

     label09:
        $r7 = staticinvoke <org.spongycastle.asn1.eac.UnsignedInteger: org.spongycastle.asn1.eac.UnsignedInteger getInstance(java.lang.Object)>(r5);

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.eac.UnsignedInteger: java.math.BigInteger getValue()>();

        specialinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: void setCofactorF(java.math.BigInteger)>($r8);

        goto label01;

     label10:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown Object Identifier!");

        throw $r6;

     label11:
        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        if $i0 == 32 goto label12;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        if $i0 == 127 goto label12;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("All options must be either present or absent!");

        throw $r6;

     label12:
        return;
    }
    private void setBasePointG(org.spongycastle.asn1.ASN1OctetString) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        org.spongycastle.asn1.ASN1OctetString $r1;
        byte[] $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1OctetString;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 8;

        if $i0 != 0 goto label1;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 | 8;

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options> = $i0;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: byte[] basePointG> = $r2;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Base Point G already set");

        throw $r3;
    }
    private void setCofactorF(java.math.BigInteger) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        java.math.BigInteger $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $r1 := @parameter0: java.math.BigInteger;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 64;

        if $i0 != 0 goto label1;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 | 64;

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options> = $i0;

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger cofactorF> = $r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cofactor F already set");

        throw $r2;
    }
    private void setFirstCoefA(java.math.BigInteger) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        java.math.BigInteger $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $r1 := @parameter0: java.math.BigInteger;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 2;

        if $i0 != 0 goto label1;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 | 2;

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options> = $i0;

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger firstCoefA> = $r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("First Coef A already set");

        throw $r2;
    }
    private void setOrderOfBasePointR(java.math.BigInteger) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        java.math.BigInteger $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $r1 := @parameter0: java.math.BigInteger;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 16;

        if $i0 != 0 goto label1;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 | 16;

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options> = $i0;

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger orderOfBasePointR> = $r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Order of base point R already set");

        throw $r2;
    }
    private void setPrimeModulusP(java.math.BigInteger)
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        java.math.BigInteger $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $r1 := @parameter0: java.math.BigInteger;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label1;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 | 1;

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options> = $i0;

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger primeModulusP> = $r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Prime Modulus P already set");

        throw $r2;
    }
    private void setPublicPointY(org.spongycastle.asn1.ASN1OctetString) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        org.spongycastle.asn1.ASN1OctetString $r1;
        byte[] $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1OctetString;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 32;

        if $i0 != 0 goto label1;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 | 32;

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options> = $i0;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: byte[] publicPointY> = $r2;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Public Point Y already set");

        throw $r3;
    }
    private void setSecondCoefB(java.math.BigInteger) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        java.math.BigInteger $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $r1 := @parameter0: java.math.BigInteger;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 4;

        if $i0 != 0 goto label1;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 | 4;

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options> = $i0;

        r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger secondCoefB> = $r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Second Coef B already set");

        throw $r2;
    }
    public org.spongycastle.asn1.ASN1EncodableVector getASN1EncodableVector(org.spongycastle.asn1.ASN1ObjectIdentifier, boolean)
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1EncodableVector r2;
        org.spongycastle.asn1.eac.UnsignedInteger $r3;
        java.math.BigInteger $r4;
        org.spongycastle.asn1.DERTaggedObject $r5;
        org.spongycastle.asn1.DEROctetString $r6;
        byte[] $r7;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $z0 := @parameter1: boolean;

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r1);

        if $z0 != 0 goto label1;

        $r3 = new org.spongycastle.asn1.eac.UnsignedInteger;

        $r4 = virtualinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger getPrimeModulusP()>();

        specialinvoke $r3.<org.spongycastle.asn1.eac.UnsignedInteger: void <init>(int,java.math.BigInteger)>(1, $r4);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = new org.spongycastle.asn1.eac.UnsignedInteger;

        $r4 = virtualinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger getFirstCoefA()>();

        specialinvoke $r3.<org.spongycastle.asn1.eac.UnsignedInteger: void <init>(int,java.math.BigInteger)>(2, $r4);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = new org.spongycastle.asn1.eac.UnsignedInteger;

        $r4 = virtualinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger getSecondCoefB()>();

        specialinvoke $r3.<org.spongycastle.asn1.eac.UnsignedInteger: void <init>(int,java.math.BigInteger)>(3, $r4);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r5 = new org.spongycastle.asn1.DERTaggedObject;

        $r6 = new org.spongycastle.asn1.DEROctetString;

        $r7 = virtualinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: byte[] getBasePointG()>();

        specialinvoke $r6.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r7);

        specialinvoke $r5.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 4, $r6);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $r3 = new org.spongycastle.asn1.eac.UnsignedInteger;

        $r4 = virtualinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger getOrderOfBasePointR()>();

        specialinvoke $r3.<org.spongycastle.asn1.eac.UnsignedInteger: void <init>(int,java.math.BigInteger)>(5, $r4);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label1:
        $r5 = new org.spongycastle.asn1.DERTaggedObject;

        $r6 = new org.spongycastle.asn1.DEROctetString;

        $r7 = virtualinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: byte[] getPublicPointY()>();

        specialinvoke $r6.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r7);

        specialinvoke $r5.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 6, $r6);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        if $z0 != 0 goto label2;

        $r3 = new org.spongycastle.asn1.eac.UnsignedInteger;

        $r4 = virtualinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger getCofactorF()>();

        specialinvoke $r3.<org.spongycastle.asn1.eac.UnsignedInteger: void <init>(int,java.math.BigInteger)>(7, $r4);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label2:
        return r2;
    }
    public byte[] getBasePointG()
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        int $i0;
        byte[] r1;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 8;

        if $i0 == 0 goto label1;

        r1 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: byte[] basePointG>;

        return r1;

     label1:
        return null;
    }
    public java.math.BigInteger getCofactorF()
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        int $i0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 64;

        if $i0 == 0 goto label1;

        r1 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger cofactorF>;

        return r1;

     label1:
        return null;
    }
    public java.math.BigInteger getFirstCoefA()
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        int $i0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        r1 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger firstCoefA>;

        return r1;

     label1:
        return null;
    }
    public java.math.BigInteger getOrderOfBasePointR()
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        int $i0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 16;

        if $i0 == 0 goto label1;

        r1 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger orderOfBasePointR>;

        return r1;

     label1:
        return null;
    }
    public java.math.BigInteger getPrimeModulusP()
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        int $i0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        r1 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger primeModulusP>;

        return r1;

     label1:
        return null;
    }
    public byte[] getPublicPointY()
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        int $i0;
        byte[] r1;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 32;

        if $i0 == 0 goto label1;

        r1 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: byte[] publicPointY>;

        return r1;

     label1:
        return null;
    }
    public java.math.BigInteger getSecondCoefB()
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        int $i0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $i0 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: int options>;

        $i0 = $i0 & 4;

        if $i0 == 0 goto label1;

        r1 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger secondCoefB>;

        return r1;

     label1:
        return null;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getUsage()
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier r1;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        r1 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: org.spongycastle.asn1.ASN1ObjectIdentifier usage>;

        return r1;
    }
    public boolean hasParameters()
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        java.math.BigInteger $r1;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $r1 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: java.math.BigInteger primeModulusP>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.eac.ECDSAPublicKey r0;
        org.spongycastle.asn1.DERSequence $r1;
        org.spongycastle.asn1.ASN1EncodableVector $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;

        r0 := @this: org.spongycastle.asn1.eac.ECDSAPublicKey;

        $r1 = new org.spongycastle.asn1.DERSequence;

        $r3 = r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: org.spongycastle.asn1.ASN1ObjectIdentifier usage>;

        $r2 = virtualinvoke r0.<org.spongycastle.asn1.eac.ECDSAPublicKey: org.spongycastle.asn1.ASN1EncodableVector getASN1EncodableVector(org.spongycastle.asn1.ASN1ObjectIdentifier,boolean)>($r3, 0);

        specialinvoke $r1.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r2);

        return $r1;
    }
