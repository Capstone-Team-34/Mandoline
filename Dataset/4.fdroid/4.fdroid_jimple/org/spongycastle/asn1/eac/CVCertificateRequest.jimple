org.spongycastle.asn1.eac.CVCertificateRequest extends org.spongycastle.asn1.ASN1Object
public static byte[] ZeroArray
private static int bodyValid
private static int signValid
int ProfileId
byte[] certificate
private org.spongycastle.asn1.eac.CertificateBody certificateBody
byte[] encoded
byte[] encodedAuthorityReference
private byte[] innerSignature
org.spongycastle.asn1.eac.PublicKeyDataObject iso7816PubKey
org.spongycastle.asn1.ASN1ObjectIdentifier keyOid
private byte[] outerSignature
protected java.lang.String overSignerReference
org.spongycastle.asn1.ASN1ObjectIdentifier signOid
java.lang.String strCertificateHolderReference
private int valid
    static void <clinit>()
    {
        byte[] $r0;

        <org.spongycastle.asn1.eac.CVCertificateRequest: int bodyValid> = 1;

        <org.spongycastle.asn1.eac.CVCertificateRequest: int signValid> = 2;

        $r0 = newarray (byte)[1];

        $r0[0] = 0;

        <org.spongycastle.asn1.eac.CVCertificateRequest: byte[] ZeroArray> = $r0;

        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1ApplicationSpecific) throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificateRequest r0;
        org.spongycastle.asn1.ASN1ApplicationSpecific $r1;
        int $i0;
        org.spongycastle.asn1.ASN1Primitive $r2;
        org.spongycastle.asn1.ASN1Sequence $r3;
        org.spongycastle.asn1.ASN1Encodable $r4;
        byte[] $r5;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificateRequest;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ApplicationSpecific;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.eac.CVCertificateRequest: byte[] innerSignature> = null;

        r0.<org.spongycastle.asn1.eac.CVCertificateRequest: byte[] outerSignature> = null;

        r0.<org.spongycastle.asn1.eac.CVCertificateRequest: org.spongycastle.asn1.ASN1ObjectIdentifier signOid> = null;

        r0.<org.spongycastle.asn1.eac.CVCertificateRequest: org.spongycastle.asn1.ASN1ObjectIdentifier keyOid> = null;

        r0.<org.spongycastle.asn1.eac.CVCertificateRequest: byte[] certificate> = null;

        r0.<org.spongycastle.asn1.eac.CVCertificateRequest: java.lang.String overSignerReference> = null;

        r0.<org.spongycastle.asn1.eac.CVCertificateRequest: org.spongycastle.asn1.eac.PublicKeyDataObject iso7816PubKey> = null;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: int getApplicationTag()>();

        if $i0 != 103 goto label1;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: org.spongycastle.asn1.ASN1Primitive getObject(int)>(16);

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1ApplicationSpecific: org.spongycastle.asn1.ASN1ApplicationSpecific getInstance(java.lang.Object)>($r4);

        specialinvoke r0.<org.spongycastle.asn1.eac.CVCertificateRequest: void initCertBody(org.spongycastle.asn1.ASN1ApplicationSpecific)>($r1);

        $i0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $i0 = $i0 + -1;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1ApplicationSpecific: org.spongycastle.asn1.ASN1ApplicationSpecific getInstance(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] getContents()>();

        r0.<org.spongycastle.asn1.eac.CVCertificateRequest: byte[] outerSignature> = $r5;

        return;

     label1:
        specialinvoke r0.<org.spongycastle.asn1.eac.CVCertificateRequest: void initCertBody(org.spongycastle.asn1.ASN1ApplicationSpecific)>($r1);

        return;
    }
    public static org.spongycastle.asn1.eac.CVCertificateRequest getInstance(java.lang.Object)
    {
        java.io.IOException r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.eac.CVCertificateRequest r2;
        org.spongycastle.asn1.ASN1ApplicationSpecific $r3;
        org.spongycastle.asn1.ASN1ParsingException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.eac.CVCertificateRequest;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.eac.CVCertificateRequest) r1;

        return r2;

     label1:
        if r1 == null goto label5;

        r2 = new org.spongycastle.asn1.eac.CVCertificateRequest;

     label2:
        $r3 = staticinvoke <org.spongycastle.asn1.ASN1ApplicationSpecific: org.spongycastle.asn1.ASN1ApplicationSpecific getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.eac.CVCertificateRequest: void <init>(org.spongycastle.asn1.ASN1ApplicationSpecific)>($r3);

     label3:
        return r2;

     label4:
        r0 := @caughtexception;

        $r4 = new org.spongycastle.asn1.ASN1ParsingException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to parse data: ");

        $r6 = virtualinvoke r0.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r0);

        throw $r4;

     label5:
        return null;

        catch java.io.IOException from label2 to label3 with label4;
    }
    private void initCertBody(org.spongycastle.asn1.ASN1ApplicationSpecific) throws java.io.IOException
    {
        org.spongycastle.asn1.eac.CVCertificateRequest r0;
        org.spongycastle.asn1.ASN1ApplicationSpecific $r1;
        int $i0, $i1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        org.spongycastle.asn1.ASN1Sequence $r3;
        java.util.Enumeration $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.io.IOException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        org.spongycastle.asn1.eac.CertificateBody $r9;
        byte[] $r10;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificateRequest;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ApplicationSpecific;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: int getApplicationTag()>();

        if $i0 != 33 goto label5;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: org.spongycastle.asn1.ASN1Primitive getObject(int)>(16);

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1ApplicationSpecific: org.spongycastle.asn1.ASN1ApplicationSpecific getInstance(java.lang.Object)>($r5);

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: int getApplicationTag()>();

        lookupswitch($i0)
        {
            case 55: goto label4;
            case 78: goto label3;
            default: goto label2;
        };

     label2:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid tag, not an CV Certificate Request element:");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: int getApplicationTag()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label3:
        $r9 = staticinvoke <org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.CertificateBody getInstance(java.lang.Object)>($r1);

        r0.<org.spongycastle.asn1.eac.CVCertificateRequest: org.spongycastle.asn1.eac.CertificateBody certificateBody> = $r9;

        $i0 = r0.<org.spongycastle.asn1.eac.CVCertificateRequest: int valid>;

        $i1 = <org.spongycastle.asn1.eac.CVCertificateRequest: int bodyValid>;

        $i0 = $i0 | $i1;

        r0.<org.spongycastle.asn1.eac.CVCertificateRequest: int valid> = $i0;

        goto label1;

     label4:
        $r10 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] getContents()>();

        r0.<org.spongycastle.asn1.eac.CVCertificateRequest: byte[] innerSignature> = $r10;

        $i0 = r0.<org.spongycastle.asn1.eac.CVCertificateRequest: int valid>;

        $i1 = <org.spongycastle.asn1.eac.CVCertificateRequest: int signValid>;

        $i0 = $i0 | $i1;

        r0.<org.spongycastle.asn1.eac.CVCertificateRequest: int valid> = $i0;

        goto label1;

     label5:
        $r6 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a CARDHOLDER_CERTIFICATE in request:");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ApplicationSpecific: int getApplicationTag()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label6:
        return;
    }
    public org.spongycastle.asn1.eac.CertificateBody getCertificateBody()
    {
        org.spongycastle.asn1.eac.CVCertificateRequest r0;
        org.spongycastle.asn1.eac.CertificateBody r1;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificateRequest;

        r1 = r0.<org.spongycastle.asn1.eac.CVCertificateRequest: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        return r1;
    }
    public byte[] getInnerSignature()
    {
        org.spongycastle.asn1.eac.CVCertificateRequest r0;
        byte[] r1;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificateRequest;

        r1 = r0.<org.spongycastle.asn1.eac.CVCertificateRequest: byte[] innerSignature>;

        return r1;
    }
    public byte[] getOuterSignature()
    {
        org.spongycastle.asn1.eac.CVCertificateRequest r0;
        byte[] r1;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificateRequest;

        r1 = r0.<org.spongycastle.asn1.eac.CVCertificateRequest: byte[] outerSignature>;

        return r1;
    }
    public org.spongycastle.asn1.eac.PublicKeyDataObject getPublicKey()
    {
        org.spongycastle.asn1.eac.CVCertificateRequest r0;
        org.spongycastle.asn1.eac.PublicKeyDataObject $r1;
        org.spongycastle.asn1.eac.CertificateBody $r2;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificateRequest;

        $r2 = r0.<org.spongycastle.asn1.eac.CVCertificateRequest: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.eac.CertificateBody: org.spongycastle.asn1.eac.PublicKeyDataObject getPublicKey()>();

        return $r1;
    }
    public boolean hasOuterSignature()
    {
        org.spongycastle.asn1.eac.CVCertificateRequest r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificateRequest;

        $r1 = r0.<org.spongycastle.asn1.eac.CVCertificateRequest: byte[] outerSignature>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.eac.CVCertificateRequest r0;
        java.io.IOException r1;
        org.spongycastle.asn1.ASN1EncodableVector r2;
        org.spongycastle.asn1.DEROctetString $r3;
        byte[] $r4;
        org.spongycastle.asn1.eac.CertificateBody $r5;
        org.spongycastle.asn1.DERApplicationSpecific $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: org.spongycastle.asn1.eac.CVCertificateRequest;

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r5 = r0.<org.spongycastle.asn1.eac.CVCertificateRequest: org.spongycastle.asn1.eac.CertificateBody certificateBody>;

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $r6 = new org.spongycastle.asn1.DERApplicationSpecific;

        $r3 = new org.spongycastle.asn1.DEROctetString;

        $r4 = r0.<org.spongycastle.asn1.eac.CVCertificateRequest: byte[] innerSignature>;

     label1:
        specialinvoke $r3.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r4);

        specialinvoke $r6.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 55, $r3);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r6);

     label2:
        $r6 = new org.spongycastle.asn1.DERApplicationSpecific;

        specialinvoke $r6.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(int,org.spongycastle.asn1.ASN1EncodableVector)>(33, r2);

        return $r6;

     label3:
        r1 := @caughtexception;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unable to convert signature!");

        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }
