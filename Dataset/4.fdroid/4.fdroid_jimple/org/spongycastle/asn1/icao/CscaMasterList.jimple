org.spongycastle.asn1.icao.CscaMasterList extends org.spongycastle.asn1.ASN1Object
private org.spongycastle.asn1.x509.Certificate[] certList
private org.spongycastle.asn1.ASN1Integer version
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.icao.CscaMasterList r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.ASN1Integer $r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        org.spongycastle.asn1.ASN1Encodable $r6;
        org.spongycastle.asn1.ASN1Set $r7;
        org.spongycastle.asn1.x509.Certificate[] $r8;
        org.spongycastle.asn1.x509.Certificate $r9;

        r0 := @this: org.spongycastle.asn1.icao.CscaMasterList;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(0L);

        r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.ASN1Integer version> = $r2;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null or empty sequence passed.");

        throw $r3;

     label2:
        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 == 2 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incorrect sequence size: ");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label3:
        $r6 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r2 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r6);

        r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.ASN1Integer version> = $r2;

        $r6 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Set getInstance(java.lang.Object)>($r6);

        $i0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1Set: int size()>();

        $r8 = newarray (org.spongycastle.asn1.x509.Certificate)[$i0];

        r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.x509.Certificate[] certList> = $r8;

        $i0 = 0;

     label4:
        $r8 = r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.x509.Certificate[] certList>;

        $i1 = lengthof $r8;

        if $i0 >= $i1 goto label5;

        $r8 = r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.x509.Certificate[] certList>;

        $r6 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r9 = staticinvoke <org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Certificate getInstance(java.lang.Object)>($r6);

        $r8[$i0] = $r9;

        $i0 = $i0 + 1;

        goto label4;

     label5:
        return;
    }
    public void <init>(org.spongycastle.asn1.x509.Certificate[])
    {
        org.spongycastle.asn1.icao.CscaMasterList r0;
        org.spongycastle.asn1.x509.Certificate[] $r1;
        org.spongycastle.asn1.ASN1Integer $r2;

        r0 := @this: org.spongycastle.asn1.icao.CscaMasterList;

        $r1 := @parameter0: org.spongycastle.asn1.x509.Certificate[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(0L);

        r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.ASN1Integer version> = $r2;

        $r1 = specialinvoke r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.x509.Certificate[] copyCertList(org.spongycastle.asn1.x509.Certificate[])>($r1);

        r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.x509.Certificate[] certList> = $r1;

        return;
    }
    private org.spongycastle.asn1.x509.Certificate[] copyCertList(org.spongycastle.asn1.x509.Certificate[])
    {
        org.spongycastle.asn1.icao.CscaMasterList r0;
        org.spongycastle.asn1.x509.Certificate[] $r1, r2;
        int $i0, $i1;
        org.spongycastle.asn1.x509.Certificate $r3;

        r0 := @this: org.spongycastle.asn1.icao.CscaMasterList;

        $r1 := @parameter0: org.spongycastle.asn1.x509.Certificate[];

        $i0 = lengthof $r1;

        r2 = newarray (org.spongycastle.asn1.x509.Certificate)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r2;

        if $i0 == $i1 goto label2;

        $r3 = $r1[$i0];

        r2[$i0] = $r3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r2;
    }
    public static org.spongycastle.asn1.icao.CscaMasterList getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.icao.CscaMasterList r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.icao.CscaMasterList;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.icao.CscaMasterList) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.icao.CscaMasterList;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.icao.CscaMasterList: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public org.spongycastle.asn1.x509.Certificate[] getCertStructs()
    {
        org.spongycastle.asn1.icao.CscaMasterList r0;
        org.spongycastle.asn1.x509.Certificate[] $r1;

        r0 := @this: org.spongycastle.asn1.icao.CscaMasterList;

        $r1 = r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.x509.Certificate[] certList>;

        $r1 = specialinvoke r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.x509.Certificate[] copyCertList(org.spongycastle.asn1.x509.Certificate[])>($r1);

        return $r1;
    }
    public int getVersion()
    {
        org.spongycastle.asn1.icao.CscaMasterList r0;
        org.spongycastle.asn1.ASN1Integer $r1;
        java.math.BigInteger $r2;
        int $i0;

        r0 := @this: org.spongycastle.asn1.icao.CscaMasterList;

        $r1 = r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.ASN1Integer version>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        return $i0;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.icao.CscaMasterList r0;
        org.spongycastle.asn1.ASN1EncodableVector r1, r2;
        org.spongycastle.asn1.ASN1Integer $r3;
        int i0, $i1;
        org.spongycastle.asn1.x509.Certificate[] $r4;
        org.spongycastle.asn1.x509.Certificate $r5;
        org.spongycastle.asn1.DERSet $r6;
        org.spongycastle.asn1.DERSequence $r7;

        r0 := @this: org.spongycastle.asn1.icao.CscaMasterList;

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.ASN1Integer version>;

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        i0 = 0;

     label1:
        $r4 = r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.x509.Certificate[] certList>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label2;

        $r4 = r0.<org.spongycastle.asn1.icao.CscaMasterList: org.spongycastle.asn1.x509.Certificate[] certList>;

        $r5 = $r4[i0];

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r6 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r6.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r6);

        $r7 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r7.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r2);

        return $r7;
    }
