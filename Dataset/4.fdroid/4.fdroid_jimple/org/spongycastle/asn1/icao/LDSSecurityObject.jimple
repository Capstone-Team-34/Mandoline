org.spongycastle.asn1.icao.LDSSecurityObject extends org.spongycastle.asn1.ASN1Object implements org.spongycastle.asn1.icao.ICAOObjectIdentifiers
public static final int ub_DataGroups
private org.spongycastle.asn1.icao.DataGroupHash[] datagroupHash
private org.spongycastle.asn1.x509.AlgorithmIdentifier digestAlgorithmIdentifier
private org.spongycastle.asn1.ASN1Integer version
private org.spongycastle.asn1.icao.LDSVersionInfo versionInfo
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.icao.LDSSecurityObject r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.ASN1Integer $r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;
        java.util.Enumeration $r4;
        java.lang.Object $r5;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r6;
        java.math.BigInteger $r7;
        org.spongycastle.asn1.icao.LDSVersionInfo $r8;
        org.spongycastle.asn1.icao.DataGroupHash[] $r9;
        org.spongycastle.asn1.ASN1Encodable $r10;
        org.spongycastle.asn1.icao.DataGroupHash $r11;

        r0 := @this: org.spongycastle.asn1.icao.LDSSecurityObject;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(0L);

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.ASN1Integer version> = $r2;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null or empty sequence passed.");

        throw $r3;

     label2:
        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r2 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r5);

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.ASN1Integer version> = $r2;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = staticinvoke <org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)>($r5);

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.x509.AlgorithmIdentifier digestAlgorithmIdentifier> = $r6;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r5);

        $r2 = r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.ASN1Integer version>;

        $r7 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r7.<java.math.BigInteger: int intValue()>();

        if $i0 != 1 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r8 = staticinvoke <org.spongycastle.asn1.icao.LDSVersionInfo: org.spongycastle.asn1.icao.LDSVersionInfo getInstance(java.lang.Object)>($r5);

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.icao.LDSVersionInfo versionInfo> = $r8;

     label3:
        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        specialinvoke r0.<org.spongycastle.asn1.icao.LDSSecurityObject: void checkDatagroupHashSeqSize(int)>($i0);

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r9 = newarray (org.spongycastle.asn1.icao.DataGroupHash)[$i0];

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.icao.DataGroupHash[] datagroupHash> = $r9;

        $i0 = 0;

     label4:
        $i1 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 >= $i1 goto label5;

        $r9 = r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.icao.DataGroupHash[] datagroupHash>;

        $r10 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r11 = staticinvoke <org.spongycastle.asn1.icao.DataGroupHash: org.spongycastle.asn1.icao.DataGroupHash getInstance(java.lang.Object)>($r10);

        $r9[$i0] = $r11;

        $i0 = $i0 + 1;

        goto label4;

     label5:
        return;
    }
    public void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.asn1.icao.DataGroupHash[])
    {
        org.spongycastle.asn1.icao.LDSSecurityObject r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.icao.DataGroupHash[] $r2;
        org.spongycastle.asn1.ASN1Integer $r3;
        int $i0;

        r0 := @this: org.spongycastle.asn1.icao.LDSSecurityObject;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.icao.DataGroupHash[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r3 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(0L);

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.ASN1Integer version> = $r3;

        $r3 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(0L);

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.ASN1Integer version> = $r3;

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.x509.AlgorithmIdentifier digestAlgorithmIdentifier> = $r1;

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.icao.DataGroupHash[] datagroupHash> = $r2;

        $i0 = lengthof $r2;

        specialinvoke r0.<org.spongycastle.asn1.icao.LDSSecurityObject: void checkDatagroupHashSeqSize(int)>($i0);

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.asn1.icao.DataGroupHash[], org.spongycastle.asn1.icao.LDSVersionInfo)
    {
        org.spongycastle.asn1.icao.LDSSecurityObject r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.icao.DataGroupHash[] $r2;
        org.spongycastle.asn1.icao.LDSVersionInfo $r3;
        org.spongycastle.asn1.ASN1Integer $r4;
        int $i0;

        r0 := @this: org.spongycastle.asn1.icao.LDSSecurityObject;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.icao.DataGroupHash[];

        $r3 := @parameter2: org.spongycastle.asn1.icao.LDSVersionInfo;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r4 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r4.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(0L);

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.ASN1Integer version> = $r4;

        $r4 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r4.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(1L);

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.ASN1Integer version> = $r4;

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.x509.AlgorithmIdentifier digestAlgorithmIdentifier> = $r1;

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.icao.DataGroupHash[] datagroupHash> = $r2;

        r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.icao.LDSVersionInfo versionInfo> = $r3;

        $i0 = lengthof $r2;

        specialinvoke r0.<org.spongycastle.asn1.icao.LDSSecurityObject: void checkDatagroupHashSeqSize(int)>($i0);

        return;
    }
    private void checkDatagroupHashSeqSize(int)
    {
        org.spongycastle.asn1.icao.LDSSecurityObject r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.spongycastle.asn1.icao.LDSSecurityObject;

        $i0 := @parameter0: int;

        if $i0 < 2 goto label1;

        if $i0 <= 16 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("wrong size in DataGroupHashValues : not in (2..16)");

        throw $r1;

     label2:
        return;
    }
    public static org.spongycastle.asn1.icao.LDSSecurityObject getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.icao.LDSSecurityObject r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.icao.LDSSecurityObject;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.icao.LDSSecurityObject) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.icao.LDSSecurityObject;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.icao.LDSSecurityObject: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public org.spongycastle.asn1.icao.DataGroupHash[] getDatagroupHash()
    {
        org.spongycastle.asn1.icao.LDSSecurityObject r0;
        org.spongycastle.asn1.icao.DataGroupHash[] r1;

        r0 := @this: org.spongycastle.asn1.icao.LDSSecurityObject;

        r1 = r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.icao.DataGroupHash[] datagroupHash>;

        return r1;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmIdentifier()
    {
        org.spongycastle.asn1.icao.LDSSecurityObject r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.asn1.icao.LDSSecurityObject;

        r1 = r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.x509.AlgorithmIdentifier digestAlgorithmIdentifier>;

        return r1;
    }
    public int getVersion()
    {
        org.spongycastle.asn1.icao.LDSSecurityObject r0;
        org.spongycastle.asn1.ASN1Integer $r1;
        java.math.BigInteger $r2;
        int $i0;

        r0 := @this: org.spongycastle.asn1.icao.LDSSecurityObject;

        $r1 = r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.ASN1Integer version>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        return $i0;
    }
    public org.spongycastle.asn1.icao.LDSVersionInfo getVersionInfo()
    {
        org.spongycastle.asn1.icao.LDSSecurityObject r0;
        org.spongycastle.asn1.icao.LDSVersionInfo r1;

        r0 := @this: org.spongycastle.asn1.icao.LDSSecurityObject;

        r1 = r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.icao.LDSVersionInfo versionInfo>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.icao.LDSSecurityObject r0;
        org.spongycastle.asn1.ASN1EncodableVector r1, r2;
        org.spongycastle.asn1.ASN1Integer $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        int i0, $i1;
        org.spongycastle.asn1.icao.DataGroupHash[] $r5;
        org.spongycastle.asn1.icao.DataGroupHash $r6;
        org.spongycastle.asn1.DERSequence $r7;
        org.spongycastle.asn1.icao.LDSVersionInfo $r8;

        r0 := @this: org.spongycastle.asn1.icao.LDSSecurityObject;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.ASN1Integer version>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r4 = r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.x509.AlgorithmIdentifier digestAlgorithmIdentifier>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        i0 = 0;

     label1:
        $r5 = r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.icao.DataGroupHash[] datagroupHash>;

        $i1 = lengthof $r5;

        if i0 >= $i1 goto label2;

        $r5 = r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.icao.DataGroupHash[] datagroupHash>;

        $r6 = $r5[i0];

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r6);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r7 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r7.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r2);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r7);

        $r8 = r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.icao.LDSVersionInfo versionInfo>;

        if $r8 == null goto label3;

        $r8 = r0.<org.spongycastle.asn1.icao.LDSSecurityObject: org.spongycastle.asn1.icao.LDSVersionInfo versionInfo>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r8);

     label3:
        $r7 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r7.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r7;
    }
