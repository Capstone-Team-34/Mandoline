org.spongycastle.asn1.ASN1UTCTime extends org.spongycastle.asn1.ASN1Primitive
private byte[] time
    public void <init>(java.lang.String)
    {
        org.spongycastle.asn1.ASN1UTCTime r0;
        java.lang.String $r1;
        java.text.ParseException r2;
        byte[] $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        $r3 = staticinvoke <org.spongycastle.util.Strings: byte[] toByteArray(java.lang.String)>($r1);

        r0.<org.spongycastle.asn1.ASN1UTCTime: byte[] time> = $r3;

     label1:
        virtualinvoke r0.<org.spongycastle.asn1.ASN1UTCTime: java.util.Date getDate()>();

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid date string: ");

        $r1 = virtualinvoke r2.<java.text.ParseException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.text.ParseException from label1 to label2 with label3;
    }
    public void <init>(java.util.Date)
    {
        org.spongycastle.asn1.ASN1UTCTime r0;
        java.util.Date $r1;
        java.text.SimpleDateFormat r2;
        java.util.SimpleTimeZone $r3;
        java.lang.String $r4;
        byte[] $r5;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        $r1 := @parameter0: java.util.Date;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        r2 = new java.text.SimpleDateFormat;

        specialinvoke r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyMMddHHmmss\'Z\'");

        $r3 = new java.util.SimpleTimeZone;

        specialinvoke $r3.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "Z");

        virtualinvoke r2.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r3);

        $r4 = virtualinvoke r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r1);

        $r5 = staticinvoke <org.spongycastle.util.Strings: byte[] toByteArray(java.lang.String)>($r4);

        r0.<org.spongycastle.asn1.ASN1UTCTime: byte[] time> = $r5;

        return;
    }
    public void <init>(java.util.Date, java.util.Locale)
    {
        org.spongycastle.asn1.ASN1UTCTime r0;
        java.util.Date $r1;
        java.util.Locale $r2;
        java.text.SimpleDateFormat r3;
        java.util.SimpleTimeZone $r4;
        java.lang.String $r5;
        byte[] $r6;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: java.util.Locale;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        r3 = new java.text.SimpleDateFormat;

        specialinvoke r3.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyMMddHHmmss\'Z\'", $r2);

        $r4 = new java.util.SimpleTimeZone;

        specialinvoke $r4.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "Z");

        virtualinvoke r3.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r4);

        $r5 = virtualinvoke r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r1);

        $r6 = staticinvoke <org.spongycastle.util.Strings: byte[] toByteArray(java.lang.String)>($r5);

        r0.<org.spongycastle.asn1.ASN1UTCTime: byte[] time> = $r6;

        return;
    }
    void <init>(byte[])
    {
        org.spongycastle.asn1.ASN1UTCTime r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        r0.<org.spongycastle.asn1.ASN1UTCTime: byte[] time> = $r1;

        return;
    }
    public static org.spongycastle.asn1.ASN1UTCTime getInstance(java.lang.Object)
    {
        java.lang.Exception r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1UTCTime r2;
        byte[] r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.Class $r8;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z0 = r1 instanceof org.spongycastle.asn1.ASN1UTCTime;

        if $z0 == 0 goto label2;

     label1:
        r2 = (org.spongycastle.asn1.ASN1UTCTime) r1;

        return r2;

     label2:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label7;

     label3:
        r3 = (byte[]) r1;

     label4:
        $r4 = staticinvoke <org.spongycastle.asn1.ASN1UTCTime: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>(r3);

        r2 = (org.spongycastle.asn1.ASN1UTCTime) $r4;

     label5:
        return r2;

     label6:
        r0 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encoding error in getInstance: ");

        $r7 = virtualinvoke r0.<java.lang.Exception: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label7:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal object in getInstance: ");

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

        catch java.lang.Exception from label3 to label4 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }
    public static org.spongycastle.asn1.ASN1UTCTime getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.ASN1UTCTime $r2;
        org.spongycastle.asn1.ASN1OctetString r3;
        byte[] $r4;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1Primitive getObject()>();

        if $z0 != 0 goto label1;

        $z0 = $r1 instanceof org.spongycastle.asn1.ASN1UTCTime;

        if $z0 == 0 goto label2;

     label1:
        $r2 = staticinvoke <org.spongycastle.asn1.ASN1UTCTime: org.spongycastle.asn1.ASN1UTCTime getInstance(java.lang.Object)>($r1);

        return $r2;

     label2:
        $r2 = new org.spongycastle.asn1.ASN1UTCTime;

        r3 = (org.spongycastle.asn1.ASN1OctetString) $r1;

        $r4 = virtualinvoke r3.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r2.<org.spongycastle.asn1.ASN1UTCTime: void <init>(byte[])>($r4);

        return $r2;
    }
    boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive)
    {
        org.spongycastle.asn1.ASN1UTCTime r0;
        byte[] $r1, $r3;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive r2;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        r2 := @parameter0: org.spongycastle.asn1.ASN1Primitive;

        $z0 = r2 instanceof org.spongycastle.asn1.ASN1UTCTime;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.spongycastle.asn1.ASN1UTCTime: byte[] time>;

        r0 = (org.spongycastle.asn1.ASN1UTCTime) r2;

        $r1 = r0.<org.spongycastle.asn1.ASN1UTCTime: byte[] time>;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r3, $r1);

        return $z0;
    }
    void encode(org.spongycastle.asn1.ASN1OutputStream) throws java.io.IOException
    {
        org.spongycastle.asn1.ASN1UTCTime r0;
        org.spongycastle.asn1.ASN1OutputStream $r1;
        int i0, i1;
        byte[] $r2;
        byte $b2;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1OutputStream;

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void write(int)>(23);

        $r2 = r0.<org.spongycastle.asn1.ASN1UTCTime: byte[] time>;

        i0 = lengthof $r2;

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void writeLength(int)>(i0);

        i1 = 0;

     label1:
        if i1 == i0 goto label2;

        $r2 = r0.<org.spongycastle.asn1.ASN1UTCTime: byte[] time>;

        $b2 = $r2[i1];

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void write(int)>($b2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    int encodedLength()
    {
        org.spongycastle.asn1.ASN1UTCTime r0;
        int i0, $i1;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        $r1 = r0.<org.spongycastle.asn1.ASN1UTCTime: byte[] time>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.spongycastle.asn1.StreamUtil: int calculateBodyLength(int)>(i0);

        $i1 = $i1 + 1;

        i0 = $i1 + i0;

        return i0;
    }
    public java.util.Date getAdjustedDate() throws java.text.ParseException
    {
        org.spongycastle.asn1.ASN1UTCTime r0;
        java.text.SimpleDateFormat r1;
        java.util.SimpleTimeZone $r2;
        java.lang.String $r3;
        java.util.Date $r4;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        r1 = new java.text.SimpleDateFormat;

        specialinvoke r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMddHHmmssz");

        $r2 = new java.util.SimpleTimeZone;

        specialinvoke $r2.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "Z");

        virtualinvoke r1.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        $r3 = virtualinvoke r0.<org.spongycastle.asn1.ASN1UTCTime: java.lang.String getAdjustedTime()>();

        $r4 = virtualinvoke r1.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r3);

        return $r4;
    }
    public java.lang.String getAdjustedTime()
    {
        org.spongycastle.asn1.ASN1UTCTime r0;
        java.lang.String $r1;
        char $c0;
        java.lang.StringBuilder $r2;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        $r1 = virtualinvoke r0.<org.spongycastle.asn1.ASN1UTCTime: java.lang.String getTime()>();

        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        if $c0 >= 53 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("20");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("19");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    public java.util.Date getDate() throws java.text.ParseException
    {
        org.spongycastle.asn1.ASN1UTCTime r0;
        java.text.SimpleDateFormat r1;
        java.lang.String $r2;
        java.util.Date $r3;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        r1 = new java.text.SimpleDateFormat;

        specialinvoke r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyMMddHHmmssz");

        $r2 = virtualinvoke r0.<org.spongycastle.asn1.ASN1UTCTime: java.lang.String getTime()>();

        $r3 = virtualinvoke r1.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r2);

        return $r3;
    }
    public java.lang.String getTime()
    {
        org.spongycastle.asn1.ASN1UTCTime r0;
        byte[] $r1;
        java.lang.String $r2, $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r3;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        $r1 = r0.<org.spongycastle.asn1.ASN1UTCTime: byte[] time>;

        $r2 = staticinvoke <org.spongycastle.util.Strings: java.lang.String fromByteArray(byte[])>($r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(45);

        if $i0 >= 0 goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(43);

        if $i0 >= 0 goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 11 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 10);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00GMT+00:00");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 12);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT+00:00");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label2:
        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(45);

        $i0 = $i1;

        if $i1 >= 0 goto label3;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(43);

     label3:
        $r4 = $r2;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = $i1 + -3;

        if $i0 != $i1 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        if $i0 != 10 goto label5;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, 10);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00GMT");

        $r2 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(10, 13);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(13, 15);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, 12);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT");

        $r2 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(12, 15);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(15, 17);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
    public int hashCode()
    {
        org.spongycastle.asn1.ASN1UTCTime r0;
        int $i0;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        $r1 = r0.<org.spongycastle.asn1.ASN1UTCTime: byte[] time>;

        $i0 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(byte[])>($r1);

        return $i0;
    }
    boolean isConstructed()
    {
        org.spongycastle.asn1.ASN1UTCTime r0;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        return 0;
    }
    public java.lang.String toString()
    {
        org.spongycastle.asn1.ASN1UTCTime r0;
        java.lang.String $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.asn1.ASN1UTCTime;

        $r2 = r0.<org.spongycastle.asn1.ASN1UTCTime: byte[] time>;

        $r1 = staticinvoke <org.spongycastle.util.Strings: java.lang.String fromByteArray(byte[])>($r2);

        return $r1;
    }
