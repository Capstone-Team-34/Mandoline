org.spongycastle.asn1.ess.OtherCertID extends org.spongycastle.asn1.ASN1Object
private org.spongycastle.asn1.x509.IssuerSerial issuerSerial
private org.spongycastle.asn1.ASN1Encodable otherCertHash
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.ess.OtherCertID r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        org.spongycastle.asn1.ASN1Encodable $r5;
        org.spongycastle.asn1.ASN1Primitive $r6;
        boolean $z0;
        org.spongycastle.asn1.ASN1OctetString $r7;
        org.spongycastle.asn1.x509.IssuerSerial $r8;
        org.spongycastle.asn1.x509.DigestInfo $r9;

        r0 := @this: org.spongycastle.asn1.ess.OtherCertID;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 < 1 goto label1;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 <= 2 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad sequence size: ");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r6 = interfaceinvoke $r5.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $z0 = $r6 instanceof org.spongycastle.asn1.ASN1OctetString;

        if $z0 == 0 goto label4;

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r5);

        r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.ASN1Encodable otherCertHash> = $r7;

     label3:
        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 <= 1 goto label5;

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r8 = staticinvoke <org.spongycastle.asn1.x509.IssuerSerial: org.spongycastle.asn1.x509.IssuerSerial getInstance(java.lang.Object)>($r5);

        r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.x509.IssuerSerial issuerSerial> = $r8;

        return;

     label4:
        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r9 = staticinvoke <org.spongycastle.asn1.x509.DigestInfo: org.spongycastle.asn1.x509.DigestInfo getInstance(java.lang.Object)>($r5);

        r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.ASN1Encodable otherCertHash> = $r9;

        goto label3;

     label5:
        return;
    }
    public void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier, byte[])
    {
        org.spongycastle.asn1.ess.OtherCertID r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        byte[] $r2;
        org.spongycastle.asn1.x509.DigestInfo $r3;

        r0 := @this: org.spongycastle.asn1.ess.OtherCertID;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r3 = new org.spongycastle.asn1.x509.DigestInfo;

        specialinvoke $r3.<org.spongycastle.asn1.x509.DigestInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r1, $r2);

        r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.ASN1Encodable otherCertHash> = $r3;

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier, byte[], org.spongycastle.asn1.x509.IssuerSerial)
    {
        org.spongycastle.asn1.ess.OtherCertID r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        byte[] $r2;
        org.spongycastle.asn1.x509.IssuerSerial $r3;
        org.spongycastle.asn1.x509.DigestInfo $r4;

        r0 := @this: org.spongycastle.asn1.ess.OtherCertID;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: org.spongycastle.asn1.x509.IssuerSerial;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r4 = new org.spongycastle.asn1.x509.DigestInfo;

        specialinvoke $r4.<org.spongycastle.asn1.x509.DigestInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r1, $r2);

        r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.ASN1Encodable otherCertHash> = $r4;

        r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.x509.IssuerSerial issuerSerial> = $r3;

        return;
    }
    public static org.spongycastle.asn1.ess.OtherCertID getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.ess.OtherCertID r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.ess.OtherCertID;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.ess.OtherCertID) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.ess.OtherCertID;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.ess.OtherCertID: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()
    {
        org.spongycastle.asn1.ess.OtherCertID r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.ASN1Primitive $r3;
        boolean $z0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        org.spongycastle.asn1.x509.DigestInfo $r5;

        r0 := @this: org.spongycastle.asn1.ess.OtherCertID;

        $r2 = r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.ASN1Encodable otherCertHash>;

        $r3 = interfaceinvoke $r2.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $z0 = $r3 instanceof org.spongycastle.asn1.ASN1OctetString;

        if $z0 == 0 goto label1;

        $r4 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r1 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier idSHA1>;

        specialinvoke $r4.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        return $r4;

     label1:
        $r2 = r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.ASN1Encodable otherCertHash>;

        $r5 = staticinvoke <org.spongycastle.asn1.x509.DigestInfo: org.spongycastle.asn1.x509.DigestInfo getInstance(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r5.<org.spongycastle.asn1.x509.DigestInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        return $r4;
    }
    public byte[] getCertHash()
    {
        org.spongycastle.asn1.ess.OtherCertID r0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        boolean $z0;
        org.spongycastle.asn1.ASN1OctetString $r3;
        byte[] $r4;
        org.spongycastle.asn1.x509.DigestInfo $r5;

        r0 := @this: org.spongycastle.asn1.ess.OtherCertID;

        $r1 = r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.ASN1Encodable otherCertHash>;

        $r2 = interfaceinvoke $r1.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $z0 = $r2 instanceof org.spongycastle.asn1.ASN1OctetString;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.ASN1Encodable otherCertHash>;

        $r2 = interfaceinvoke $r1.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r3 = (org.spongycastle.asn1.ASN1OctetString) $r2;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        return $r4;

     label1:
        $r1 = r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.ASN1Encodable otherCertHash>;

        $r5 = staticinvoke <org.spongycastle.asn1.x509.DigestInfo: org.spongycastle.asn1.x509.DigestInfo getInstance(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r5.<org.spongycastle.asn1.x509.DigestInfo: byte[] getDigest()>();

        return $r4;
    }
    public org.spongycastle.asn1.x509.IssuerSerial getIssuerSerial()
    {
        org.spongycastle.asn1.ess.OtherCertID r0;
        org.spongycastle.asn1.x509.IssuerSerial r1;

        r0 := @this: org.spongycastle.asn1.ess.OtherCertID;

        r1 = r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.x509.IssuerSerial issuerSerial>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.ess.OtherCertID r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.x509.IssuerSerial $r3;
        org.spongycastle.asn1.DERSequence $r4;

        r0 := @this: org.spongycastle.asn1.ess.OtherCertID;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.ASN1Encodable otherCertHash>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r3 = r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.x509.IssuerSerial issuerSerial>;

        if $r3 == null goto label1;

        $r3 = r0.<org.spongycastle.asn1.ess.OtherCertID: org.spongycastle.asn1.x509.IssuerSerial issuerSerial>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label1:
        $r4 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r4.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r4;
    }
