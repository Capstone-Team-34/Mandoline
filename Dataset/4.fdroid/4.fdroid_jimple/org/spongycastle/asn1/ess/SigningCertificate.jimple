org.spongycastle.asn1.ess.SigningCertificate extends org.spongycastle.asn1.ASN1Object
org.spongycastle.asn1.ASN1Sequence certs
org.spongycastle.asn1.ASN1Sequence policies
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.ess.SigningCertificate r0;
        org.spongycastle.asn1.ASN1Sequence $r1, $r6;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        org.spongycastle.asn1.ASN1Encodable $r5;

        r0 := @this: org.spongycastle.asn1.ess.SigningCertificate;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 < 1 goto label1;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 <= 2 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad sequence size: ");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r6 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r5);

        r0.<org.spongycastle.asn1.ess.SigningCertificate: org.spongycastle.asn1.ASN1Sequence certs> = $r6;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 <= 1 goto label3;

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r5);

        r0.<org.spongycastle.asn1.ess.SigningCertificate: org.spongycastle.asn1.ASN1Sequence policies> = $r1;

     label3:
        return;
    }
    public void <init>(org.spongycastle.asn1.ess.ESSCertID)
    {
        org.spongycastle.asn1.ess.SigningCertificate r0;
        org.spongycastle.asn1.ess.ESSCertID $r1;
        org.spongycastle.asn1.DERSequence $r2;

        r0 := @this: org.spongycastle.asn1.ess.SigningCertificate;

        $r1 := @parameter0: org.spongycastle.asn1.ess.ESSCertID;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r2.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r1);

        r0.<org.spongycastle.asn1.ess.SigningCertificate: org.spongycastle.asn1.ASN1Sequence certs> = $r2;

        return;
    }
    public static org.spongycastle.asn1.ess.SigningCertificate getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.ess.SigningCertificate r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.ess.SigningCertificate;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.ess.SigningCertificate) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.ess.SigningCertificate;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.ess.SigningCertificate: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public org.spongycastle.asn1.ess.ESSCertID[] getCerts()
    {
        org.spongycastle.asn1.ess.SigningCertificate r0;
        org.spongycastle.asn1.ess.ESSCertID[] r1;
        org.spongycastle.asn1.ASN1Sequence $r2;
        int $i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.ess.ESSCertID $r4;

        r0 := @this: org.spongycastle.asn1.ess.SigningCertificate;

        $r2 = r0.<org.spongycastle.asn1.ess.SigningCertificate: org.spongycastle.asn1.ASN1Sequence certs>;

        $i0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        r1 = newarray (org.spongycastle.asn1.ess.ESSCertID)[$i0];

        $i0 = 0;

     label1:
        $r2 = r0.<org.spongycastle.asn1.ess.SigningCertificate: org.spongycastle.asn1.ASN1Sequence certs>;

        $i1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 == $i1 goto label2;

        $r2 = r0.<org.spongycastle.asn1.ess.SigningCertificate: org.spongycastle.asn1.ASN1Sequence certs>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r4 = staticinvoke <org.spongycastle.asn1.ess.ESSCertID: org.spongycastle.asn1.ess.ESSCertID getInstance(java.lang.Object)>($r3);

        r1[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public org.spongycastle.asn1.x509.PolicyInformation[] getPolicies()
    {
        org.spongycastle.asn1.ess.SigningCertificate r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        int $i0, $i1;
        org.spongycastle.asn1.x509.PolicyInformation[] r2;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.x509.PolicyInformation $r4;

        r0 := @this: org.spongycastle.asn1.ess.SigningCertificate;

        $r1 = r0.<org.spongycastle.asn1.ess.SigningCertificate: org.spongycastle.asn1.ASN1Sequence policies>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = r0.<org.spongycastle.asn1.ess.SigningCertificate: org.spongycastle.asn1.ASN1Sequence policies>;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        r2 = newarray (org.spongycastle.asn1.x509.PolicyInformation)[$i0];

        $i0 = 0;

     label2:
        $r1 = r0.<org.spongycastle.asn1.ess.SigningCertificate: org.spongycastle.asn1.ASN1Sequence policies>;

        $i1 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 == $i1 goto label3;

        $r1 = r0.<org.spongycastle.asn1.ess.SigningCertificate: org.spongycastle.asn1.ASN1Sequence policies>;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r4 = staticinvoke <org.spongycastle.asn1.x509.PolicyInformation: org.spongycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r3);

        r2[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return r2;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.ess.SigningCertificate r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.ASN1Sequence $r2;
        org.spongycastle.asn1.DERSequence $r3;

        r0 := @this: org.spongycastle.asn1.ess.SigningCertificate;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.ess.SigningCertificate: org.spongycastle.asn1.ASN1Sequence certs>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r2 = r0.<org.spongycastle.asn1.ess.SigningCertificate: org.spongycastle.asn1.ASN1Sequence policies>;

        if $r2 == null goto label1;

        $r2 = r0.<org.spongycastle.asn1.ess.SigningCertificate: org.spongycastle.asn1.ASN1Sequence policies>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

     label1:
        $r3 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r3.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r3;
    }
