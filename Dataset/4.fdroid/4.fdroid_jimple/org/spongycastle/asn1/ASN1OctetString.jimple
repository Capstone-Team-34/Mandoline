org.spongycastle.asn1.ASN1OctetString extends org.spongycastle.asn1.ASN1Primitive implements org.spongycastle.asn1.ASN1OctetStringParser
byte[] string
    public void <init>(byte[])
    {
        org.spongycastle.asn1.ASN1OctetString r0;
        byte[] $r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.spongycastle.asn1.ASN1OctetString;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("string cannot be null");

        throw $r2;

     label1:
        r0.<org.spongycastle.asn1.ASN1OctetString: byte[] string> = $r1;

        return;
    }
    public static org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)
    {
        java.io.IOException r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1OctetString r2;
        byte[] r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        org.spongycastle.asn1.ASN1Encodable $r8;
        java.lang.Class $r9;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z0 = r1 instanceof org.spongycastle.asn1.ASN1OctetString;

        if $z0 == 0 goto label2;

     label1:
        r2 = (org.spongycastle.asn1.ASN1OctetString) r1;

        return r2;

     label2:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label6;

        r3 = (byte[]) r1;

     label3:
        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>(r3);

        r2 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r4);

     label4:
        return r2;

     label5:
        r0 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to construct OCTET STRING from byte[]: ");

        $r7 = virtualinvoke r0.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label6:
        $z0 = r1 instanceof org.spongycastle.asn1.ASN1Encodable;

        if $z0 == 0 goto label7;

        $r8 = (org.spongycastle.asn1.ASN1Encodable) r1;

        $r4 = interfaceinvoke $r8.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $z0 = $r4 instanceof org.spongycastle.asn1.ASN1OctetString;

        if $z0 == 0 goto label7;

        r2 = (org.spongycastle.asn1.ASN1OctetString) $r4;

        return r2;

     label7:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal object in getInstance: ");

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

        catch java.io.IOException from label3 to label4 with label5;
    }
    public static org.spongycastle.asn1.ASN1OctetString getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.ASN1OctetString $r2;
        org.spongycastle.asn1.ASN1Sequence $r3;
        org.spongycastle.asn1.BEROctetString $r4;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1Primitive getObject()>();

        if $z0 != 0 goto label1;

        $z0 = $r1 instanceof org.spongycastle.asn1.ASN1OctetString;

        if $z0 == 0 goto label2;

     label1:
        $r2 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r1);

        return $r2;

     label2:
        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r1);

        $r4 = staticinvoke <org.spongycastle.asn1.BEROctetString: org.spongycastle.asn1.BEROctetString fromSequence(org.spongycastle.asn1.ASN1Sequence)>($r3);

        return $r4;
    }
    boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive)
    {
        org.spongycastle.asn1.ASN1OctetString r0, r3;
        org.spongycastle.asn1.ASN1Primitive $r1;
        byte[] $r2, $r4;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.ASN1OctetString;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Primitive;

        $z0 = $r1 instanceof org.spongycastle.asn1.ASN1OctetString;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r3 = (org.spongycastle.asn1.ASN1OctetString) $r1;

        $r4 = r0.<org.spongycastle.asn1.ASN1OctetString: byte[] string>;

        $r2 = r3.<org.spongycastle.asn1.ASN1OctetString: byte[] string>;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r4, $r2);

        return $z0;
    }
abstract void encode(org.spongycastle.asn1.ASN1OutputStream) throws java.io.IOException { 
// no body
} 
    public org.spongycastle.asn1.ASN1Primitive getLoadedObject()
    {
        org.spongycastle.asn1.ASN1OctetString r0;
        org.spongycastle.asn1.ASN1Primitive $r1;

        r0 := @this: org.spongycastle.asn1.ASN1OctetString;

        $r1 = virtualinvoke r0.<org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        return $r1;
    }
    public java.io.InputStream getOctetStream()
    {
        org.spongycastle.asn1.ASN1OctetString r0;
        java.io.ByteArrayInputStream $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.asn1.ASN1OctetString;

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = r0.<org.spongycastle.asn1.ASN1OctetString: byte[] string>;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        return $r1;
    }
    public byte[] getOctets()
    {
        org.spongycastle.asn1.ASN1OctetString r0;
        byte[] r1;

        r0 := @this: org.spongycastle.asn1.ASN1OctetString;

        r1 = r0.<org.spongycastle.asn1.ASN1OctetString: byte[] string>;

        return r1;
    }
    public int hashCode()
    {
        org.spongycastle.asn1.ASN1OctetString r0;
        byte[] $r1;
        int $i0;

        r0 := @this: org.spongycastle.asn1.ASN1OctetString;

        $r1 = virtualinvoke r0.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $i0 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(byte[])>($r1);

        return $i0;
    }
    public org.spongycastle.asn1.ASN1OctetStringParser parser()
    {
        org.spongycastle.asn1.ASN1OctetString r0;

        r0 := @this: org.spongycastle.asn1.ASN1OctetString;

        return r0;
    }
    org.spongycastle.asn1.ASN1Primitive toDERObject()
    {
        org.spongycastle.asn1.ASN1OctetString r0;
        org.spongycastle.asn1.DEROctetString $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.asn1.ASN1OctetString;

        $r1 = new org.spongycastle.asn1.DEROctetString;

        $r2 = r0.<org.spongycastle.asn1.ASN1OctetString: byte[] string>;

        specialinvoke $r1.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r2);

        return $r1;
    }
    org.spongycastle.asn1.ASN1Primitive toDLObject()
    {
        org.spongycastle.asn1.ASN1OctetString r0;
        org.spongycastle.asn1.DEROctetString $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.asn1.ASN1OctetString;

        $r1 = new org.spongycastle.asn1.DEROctetString;

        $r2 = r0.<org.spongycastle.asn1.ASN1OctetString: byte[] string>;

        specialinvoke $r1.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r2);

        return $r1;
    }
    public java.lang.String toString()
    {
        org.spongycastle.asn1.ASN1OctetString r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.asn1.ASN1OctetString;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r2 = new java.lang.String;

        $r3 = r0.<org.spongycastle.asn1.ASN1OctetString: byte[] string>;

        $r3 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[])>($r3);

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
