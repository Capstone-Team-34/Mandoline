org.spongycastle.asn1.x9.X9Curve extends org.spongycastle.asn1.ASN1Object implements org.spongycastle.asn1.x9.X9ObjectIdentifiers
private org.spongycastle.math.ec.ECCurve curve
private org.spongycastle.asn1.ASN1ObjectIdentifier fieldIdentifier
private byte[] seed
    public void <init>(org.spongycastle.asn1.x9.X9FieldID, org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x9.X9Curve r0;
        org.spongycastle.asn1.x9.X9FieldID $r1;
        org.spongycastle.asn1.ASN1Sequence $r2, $r18;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3, $r4;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive $r5;
        org.spongycastle.asn1.ASN1Integer $r6;
        java.math.BigInteger $r7, $r14, $r15;
        org.spongycastle.asn1.x9.X9FieldElement r8, r11;
        org.spongycastle.asn1.ASN1Encodable $r9;
        org.spongycastle.asn1.ASN1OctetString $r10;
        org.spongycastle.math.ec.ECCurve$Fp $r12;
        org.spongycastle.math.ec.ECFieldElement $r13;
        int $i0, i1, i2, $i3;
        org.spongycastle.asn1.DERBitString $r16;
        byte[] $r17;
        org.spongycastle.math.ec.ECCurve$F2m $r19;
        java.lang.IllegalArgumentException $r20;

        r0 := @this: org.spongycastle.asn1.x9.X9Curve;

        $r1 := @parameter0: org.spongycastle.asn1.x9.X9FieldID;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier fieldIdentifier> = null;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x9.X9FieldID: org.spongycastle.asn1.ASN1ObjectIdentifier getIdentifier()>();

        r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier fieldIdentifier> = $r3;

        $r3 = r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier fieldIdentifier>;

        $r4 = <org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier prime_field>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x9.X9FieldID: org.spongycastle.asn1.ASN1Primitive getParameters()>();

        $r6 = (org.spongycastle.asn1.ASN1Integer) $r5;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r8 = new org.spongycastle.asn1.x9.X9FieldElement;

        $r9 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r10 = (org.spongycastle.asn1.ASN1OctetString) $r9;

        specialinvoke r8.<org.spongycastle.asn1.x9.X9FieldElement: void <init>(java.math.BigInteger,org.spongycastle.asn1.ASN1OctetString)>($r7, $r10);

        r11 = new org.spongycastle.asn1.x9.X9FieldElement;

        $r9 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r10 = (org.spongycastle.asn1.ASN1OctetString) $r9;

        specialinvoke r11.<org.spongycastle.asn1.x9.X9FieldElement: void <init>(java.math.BigInteger,org.spongycastle.asn1.ASN1OctetString)>($r7, $r10);

        $r12 = new org.spongycastle.math.ec.ECCurve$Fp;

        $r13 = virtualinvoke r8.<org.spongycastle.asn1.x9.X9FieldElement: org.spongycastle.math.ec.ECFieldElement getValue()>();

        $r14 = virtualinvoke $r13.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r13 = virtualinvoke r11.<org.spongycastle.asn1.x9.X9FieldElement: org.spongycastle.math.ec.ECFieldElement getValue()>();

        $r15 = virtualinvoke $r13.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r12.<org.spongycastle.math.ec.ECCurve$Fp: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r7, $r14, $r15);

        r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.math.ec.ECCurve curve> = $r12;

     label1:
        $i0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 != 3 goto label7;

        $r9 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(2);

        $r16 = (org.spongycastle.asn1.DERBitString) $r9;

        $r17 = virtualinvoke $r16.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        r0.<org.spongycastle.asn1.x9.X9Curve: byte[] seed> = $r17;

        return;

     label2:
        $r3 = r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier fieldIdentifier>;

        $r4 = <org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier characteristic_two_field>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label6;

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x9.X9FieldID: org.spongycastle.asn1.ASN1Primitive getParameters()>();

        $r18 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r18.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r6 = (org.spongycastle.asn1.ASN1Integer) $r9;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r7.<java.math.BigInteger: int intValue()>();

        $r9 = virtualinvoke $r18.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r3 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r9;

        i1 = 0;

        i2 = 0;

        $r4 = <org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier tpBasis>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $r9 = virtualinvoke $r18.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(2);

        $r6 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r9);

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i3 = virtualinvoke $r7.<java.math.BigInteger: int intValue()>();

     label3:
        r8 = new org.spongycastle.asn1.x9.X9FieldElement;

        $r9 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r10 = (org.spongycastle.asn1.ASN1OctetString) $r9;

        specialinvoke r8.<org.spongycastle.asn1.x9.X9FieldElement: void <init>(int,int,int,int,org.spongycastle.asn1.ASN1OctetString)>($i0, $i3, i1, i2, $r10);

        r11 = new org.spongycastle.asn1.x9.X9FieldElement;

        $r9 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r10 = (org.spongycastle.asn1.ASN1OctetString) $r9;

        specialinvoke r11.<org.spongycastle.asn1.x9.X9FieldElement: void <init>(int,int,int,int,org.spongycastle.asn1.ASN1OctetString)>($i0, $i3, i1, i2, $r10);

        $r19 = new org.spongycastle.math.ec.ECCurve$F2m;

        $r13 = virtualinvoke r8.<org.spongycastle.asn1.x9.X9FieldElement: org.spongycastle.math.ec.ECFieldElement getValue()>();

        $r7 = virtualinvoke $r13.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r13 = virtualinvoke r11.<org.spongycastle.asn1.x9.X9FieldElement: org.spongycastle.math.ec.ECFieldElement getValue()>();

        $r14 = virtualinvoke $r13.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r19.<org.spongycastle.math.ec.ECCurve$F2m: void <init>(int,int,int,int,java.math.BigInteger,java.math.BigInteger)>($i0, $i3, i1, i2, $r7, $r14);

        r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.math.ec.ECCurve curve> = $r19;

        goto label1;

     label4:
        $r4 = <org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier ppBasis>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label5;

        $r9 = virtualinvoke $r18.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(2);

        $r18 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r9);

        $r9 = virtualinvoke $r18.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r6 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r9);

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i3 = virtualinvoke $r7.<java.math.BigInteger: int intValue()>();

        $r9 = virtualinvoke $r18.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r6 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r9);

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        i1 = virtualinvoke $r7.<java.math.BigInteger: int intValue()>();

        $r9 = virtualinvoke $r18.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(2);

        $r6 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r9);

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        i2 = virtualinvoke $r7.<java.math.BigInteger: int intValue()>();

        goto label3;

     label5:
        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("This type of EC basis is not implemented");

        throw $r20;

     label6:
        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("This type of ECCurve is not implemented");

        throw $r20;

     label7:
        return;
    }
    public void <init>(org.spongycastle.math.ec.ECCurve)
    {
        org.spongycastle.asn1.x9.X9Curve r0;
        org.spongycastle.math.ec.ECCurve $r1;

        r0 := @this: org.spongycastle.asn1.x9.X9Curve;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier fieldIdentifier> = null;

        r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.math.ec.ECCurve curve> = $r1;

        r0.<org.spongycastle.asn1.x9.X9Curve: byte[] seed> = null;

        specialinvoke r0.<org.spongycastle.asn1.x9.X9Curve: void setFieldIdentifier()>();

        return;
    }
    public void <init>(org.spongycastle.math.ec.ECCurve, byte[])
    {
        org.spongycastle.asn1.x9.X9Curve r0;
        org.spongycastle.math.ec.ECCurve $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.asn1.x9.X9Curve;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier fieldIdentifier> = null;

        r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.math.ec.ECCurve curve> = $r1;

        r0.<org.spongycastle.asn1.x9.X9Curve: byte[] seed> = $r2;

        specialinvoke r0.<org.spongycastle.asn1.x9.X9Curve: void setFieldIdentifier()>();

        return;
    }
    private void setFieldIdentifier()
    {
        org.spongycastle.asn1.x9.X9Curve r0;
        org.spongycastle.math.ec.ECCurve $r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.spongycastle.asn1.x9.X9Curve;

        $r1 = r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.math.ec.ECCurve curve>;

        $z0 = staticinvoke <org.spongycastle.math.ec.ECAlgorithms: boolean isFpCurve(org.spongycastle.math.ec.ECCurve)>($r1);

        if $z0 == 0 goto label1;

        $r2 = <org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier prime_field>;

        r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier fieldIdentifier> = $r2;

        return;

     label1:
        $r1 = r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.math.ec.ECCurve curve>;

        $z0 = staticinvoke <org.spongycastle.math.ec.ECAlgorithms: boolean isF2mCurve(org.spongycastle.math.ec.ECCurve)>($r1);

        if $z0 == 0 goto label2;

        $r2 = <org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier characteristic_two_field>;

        r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier fieldIdentifier> = $r2;

        return;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("This type of ECCurve is not implemented");

        throw $r3;
    }
    public org.spongycastle.math.ec.ECCurve getCurve()
    {
        org.spongycastle.asn1.x9.X9Curve r0;
        org.spongycastle.math.ec.ECCurve r1;

        r0 := @this: org.spongycastle.asn1.x9.X9Curve;

        r1 = r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.math.ec.ECCurve curve>;

        return r1;
    }
    public byte[] getSeed()
    {
        org.spongycastle.asn1.x9.X9Curve r0;
        byte[] r1;

        r0 := @this: org.spongycastle.asn1.x9.X9Curve;

        r1 = r0.<org.spongycastle.asn1.x9.X9Curve: byte[] seed>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.x9.X9Curve r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2, $r3;
        boolean $z0;
        org.spongycastle.asn1.x9.X9FieldElement $r4;
        org.spongycastle.math.ec.ECCurve $r5;
        org.spongycastle.math.ec.ECFieldElement $r6;
        org.spongycastle.asn1.ASN1Primitive $r7;
        byte[] $r8;
        org.spongycastle.asn1.DERBitString $r9;
        org.spongycastle.asn1.DERSequence $r10;

        r0 := @this: org.spongycastle.asn1.x9.X9Curve;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier fieldIdentifier>;

        $r3 = <org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier prime_field>;

        $z0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $r4 = new org.spongycastle.asn1.x9.X9FieldElement;

        $r5 = r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.math.ec.ECCurve curve>;

        $r6 = virtualinvoke $r5.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        specialinvoke $r4.<org.spongycastle.asn1.x9.X9FieldElement: void <init>(org.spongycastle.math.ec.ECFieldElement)>($r6);

        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9FieldElement: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r7);

        $r4 = new org.spongycastle.asn1.x9.X9FieldElement;

        $r5 = r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.math.ec.ECCurve curve>;

        $r6 = virtualinvoke $r5.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getB()>();

        specialinvoke $r4.<org.spongycastle.asn1.x9.X9FieldElement: void <init>(org.spongycastle.math.ec.ECFieldElement)>($r6);

        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9FieldElement: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r7);

     label1:
        $r8 = r0.<org.spongycastle.asn1.x9.X9Curve: byte[] seed>;

        if $r8 == null goto label2;

        $r9 = new org.spongycastle.asn1.DERBitString;

        $r8 = r0.<org.spongycastle.asn1.x9.X9Curve: byte[] seed>;

        specialinvoke $r9.<org.spongycastle.asn1.DERBitString: void <init>(byte[])>($r8);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r9);

     label2:
        $r10 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r10.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r10;

     label3:
        $r2 = r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier fieldIdentifier>;

        $r3 = <org.spongycastle.asn1.x9.X9Curve: org.spongycastle.asn1.ASN1ObjectIdentifier characteristic_two_field>;

        $z0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = new org.spongycastle.asn1.x9.X9FieldElement;

        $r5 = r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.math.ec.ECCurve curve>;

        $r6 = virtualinvoke $r5.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        specialinvoke $r4.<org.spongycastle.asn1.x9.X9FieldElement: void <init>(org.spongycastle.math.ec.ECFieldElement)>($r6);

        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9FieldElement: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r7);

        $r4 = new org.spongycastle.asn1.x9.X9FieldElement;

        $r5 = r0.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.math.ec.ECCurve curve>;

        $r6 = virtualinvoke $r5.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getB()>();

        specialinvoke $r4.<org.spongycastle.asn1.x9.X9FieldElement: void <init>(org.spongycastle.math.ec.ECFieldElement)>($r6);

        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.x9.X9FieldElement: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r7);

        goto label1;
    }
