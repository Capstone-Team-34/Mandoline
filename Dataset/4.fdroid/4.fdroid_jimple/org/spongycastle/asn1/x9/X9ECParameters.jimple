org.spongycastle.asn1.x9.X9ECParameters extends org.spongycastle.asn1.ASN1Object implements org.spongycastle.asn1.x9.X9ObjectIdentifiers
private static final java.math.BigInteger ONE
private org.spongycastle.math.ec.ECCurve curve
private org.spongycastle.asn1.x9.X9FieldID fieldID
private org.spongycastle.asn1.x9.X9ECPoint g
private java.math.BigInteger h
private java.math.BigInteger n
private byte[] seed
    static void <clinit>()
    {
        java.math.BigInteger $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        <org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger ONE> = $r0;

        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        org.spongycastle.asn1.ASN1Sequence $r1, $r9;
        org.spongycastle.asn1.x9.X9Curve r2;
        org.spongycastle.asn1.ASN1Encodable $r3;
        boolean $z0;
        org.spongycastle.asn1.ASN1Integer $r4;
        java.math.BigInteger $r5, $r6;
        java.lang.IllegalArgumentException $r7;
        org.spongycastle.asn1.x9.X9FieldID $r8;
        org.spongycastle.math.ec.ECCurve $r10;
        org.spongycastle.asn1.x9.X9ECPoint r11;
        byte[] $r12;
        int $i0;
        org.spongycastle.asn1.ASN1OctetString r13;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $z0 = $r3 instanceof org.spongycastle.asn1.ASN1Integer;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r4 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $r6 = <org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger ONE>;

        $z0 = virtualinvoke $r5.<java.math.BigInteger: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label2;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad version in X9ECParameters");

        throw $r7;

     label2:
        r2 = new org.spongycastle.asn1.x9.X9Curve;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r8 = staticinvoke <org.spongycastle.asn1.x9.X9FieldID: org.spongycastle.asn1.x9.X9FieldID getInstance(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(2);

        $r9 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r3);

        specialinvoke r2.<org.spongycastle.asn1.x9.X9Curve: void <init>(org.spongycastle.asn1.x9.X9FieldID,org.spongycastle.asn1.ASN1Sequence)>($r8, $r9);

        $r10 = virtualinvoke r2.<org.spongycastle.asn1.x9.X9Curve: org.spongycastle.math.ec.ECCurve getCurve()>();

        r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve curve> = $r10;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(3);

        $z0 = $r3 instanceof org.spongycastle.asn1.x9.X9ECPoint;

        if $z0 == 0 goto label4;

        r11 = (org.spongycastle.asn1.x9.X9ECPoint) $r3;

        r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9ECPoint g> = r11;

     label3:
        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(4);

        $r4 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger n> = $r5;

        $r12 = virtualinvoke r2.<org.spongycastle.asn1.x9.X9Curve: byte[] getSeed()>();

        r0.<org.spongycastle.asn1.x9.X9ECParameters: byte[] seed> = $r12;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 != 6 goto label5;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(5);

        $r4 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger h> = $r5;

        return;

     label4:
        r11 = new org.spongycastle.asn1.x9.X9ECPoint;

        $r10 = r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve curve>;

        r13 = (org.spongycastle.asn1.ASN1OctetString) $r3;

        specialinvoke r11.<org.spongycastle.asn1.x9.X9ECPoint: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.asn1.ASN1OctetString)>($r10, r13);

        r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9ECPoint g> = r11;

        goto label3;

     label5:
        return;
    }
    public void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.asn1.x9.X9ECPoint, java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.asn1.x9.X9ECPoint $r2;
        java.math.BigInteger $r3, $r4;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.asn1.x9.X9ECPoint;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 := @parameter3: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.asn1.x9.X9ECParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.asn1.x9.X9ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r1, $r2, $r3, $r4, null);

        return;
    }
    public void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.asn1.x9.X9ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.asn1.x9.X9ECPoint $r2;
        java.math.BigInteger $r3, $r4;
        byte[] $r5;
        boolean $z0;
        org.spongycastle.asn1.x9.X9FieldID $r6;
        org.spongycastle.math.field.FiniteField $r7;
        org.spongycastle.math.field.PolynomialExtensionField r8;
        org.spongycastle.math.field.Polynomial $r9;
        int[] $r10;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.asn1.x9.X9ECPoint;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 := @parameter3: java.math.BigInteger;

        $r5 := @parameter4: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve curve> = $r1;

        r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9ECPoint g> = $r2;

        r0.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger n> = $r3;

        r0.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger h> = $r4;

        r0.<org.spongycastle.asn1.x9.X9ECParameters: byte[] seed> = $r5;

        $z0 = staticinvoke <org.spongycastle.math.ec.ECAlgorithms: boolean isFpCurve(org.spongycastle.math.ec.ECCurve)>($r1);

        if $z0 == 0 goto label1;

        $r6 = new org.spongycastle.asn1.x9.X9FieldID;

        $r7 = virtualinvoke $r1.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.field.FiniteField getField()>();

        $r3 = interfaceinvoke $r7.<org.spongycastle.math.field.FiniteField: java.math.BigInteger getCharacteristic()>();

        specialinvoke $r6.<org.spongycastle.asn1.x9.X9FieldID: void <init>(java.math.BigInteger)>($r3);

        r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9FieldID fieldID> = $r6;

        return;

     label1:
        $z0 = staticinvoke <org.spongycastle.math.ec.ECAlgorithms: boolean isF2mCurve(org.spongycastle.math.ec.ECCurve)>($r1);

        if $z0 == 0 goto label4;

        $r7 = virtualinvoke $r1.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.field.FiniteField getField()>();

        r8 = (org.spongycastle.math.field.PolynomialExtensionField) $r7;

        $r9 = interfaceinvoke r8.<org.spongycastle.math.field.PolynomialExtensionField: org.spongycastle.math.field.Polynomial getMinimalPolynomial()>();

        $r10 = interfaceinvoke $r9.<org.spongycastle.math.field.Polynomial: int[] getExponentsPresent()>();

        $i0 = lengthof $r10;

        if $i0 != 3 goto label2;

        $r6 = new org.spongycastle.asn1.x9.X9FieldID;

        $i0 = $r10[2];

        $i1 = $r10[1];

        specialinvoke $r6.<org.spongycastle.asn1.x9.X9FieldID: void <init>(int,int)>($i0, $i1);

        r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9FieldID fieldID> = $r6;

        return;

     label2:
        $i0 = lengthof $r10;

        if $i0 != 5 goto label3;

        $r6 = new org.spongycastle.asn1.x9.X9FieldID;

        $i0 = $r10[4];

        $i1 = $r10[1];

        $i2 = $r10[2];

        $i3 = $r10[3];

        specialinvoke $r6.<org.spongycastle.asn1.x9.X9FieldID: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9FieldID fieldID> = $r6;

        return;

     label3:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only trinomial and pentomial curves are supported");

        throw $r11;

     label4:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'curve\' is of an unsupported type");

        throw $r11;
    }
    public void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECPoint, java.math.BigInteger)
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECPoint $r2;
        java.math.BigInteger $r3;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECPoint;

        $r3 := @parameter2: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.asn1.x9.X9ECParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r1, $r2, $r3, null, null);

        return;
    }
    public void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECPoint $r2;
        java.math.BigInteger $r3, $r4;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECPoint;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 := @parameter3: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.asn1.x9.X9ECParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r1, $r2, $r3, $r4, null);

        return;
    }
    public void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECPoint $r2;
        java.math.BigInteger $r3, $r4;
        byte[] $r5;
        org.spongycastle.asn1.x9.X9ECPoint $r6;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECPoint;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 := @parameter3: java.math.BigInteger;

        $r5 := @parameter4: byte[];

        $r6 = new org.spongycastle.asn1.x9.X9ECPoint;

        specialinvoke $r6.<org.spongycastle.asn1.x9.X9ECPoint: void <init>(org.spongycastle.math.ec.ECPoint)>($r2);

        specialinvoke r0.<org.spongycastle.asn1.x9.X9ECParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.asn1.x9.X9ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r1, $r6, $r3, $r4, $r5);

        return;
    }
    public static org.spongycastle.asn1.x9.X9ECParameters getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.x9.X9ECParameters r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.x9.X9ECParameters;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.x9.X9ECParameters) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.x9.X9ECParameters;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.x9.X9ECParameters: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public org.spongycastle.asn1.x9.X9ECPoint getBaseEntry()
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        org.spongycastle.asn1.x9.X9ECPoint r1;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        r1 = r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9ECPoint g>;

        return r1;
    }
    public org.spongycastle.math.ec.ECCurve getCurve()
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        org.spongycastle.math.ec.ECCurve r1;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        r1 = r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve curve>;

        return r1;
    }
    public org.spongycastle.asn1.x9.X9Curve getCurveEntry()
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        org.spongycastle.asn1.x9.X9Curve $r1;
        org.spongycastle.math.ec.ECCurve $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        $r1 = new org.spongycastle.asn1.x9.X9Curve;

        $r2 = r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve curve>;

        $r3 = r0.<org.spongycastle.asn1.x9.X9ECParameters: byte[] seed>;

        specialinvoke $r1.<org.spongycastle.asn1.x9.X9Curve: void <init>(org.spongycastle.math.ec.ECCurve,byte[])>($r2, $r3);

        return $r1;
    }
    public org.spongycastle.asn1.x9.X9FieldID getFieldIDEntry()
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        org.spongycastle.asn1.x9.X9FieldID r1;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        r1 = r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9FieldID fieldID>;

        return r1;
    }
    public org.spongycastle.math.ec.ECPoint getG()
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        org.spongycastle.math.ec.ECPoint $r1;
        org.spongycastle.asn1.x9.X9ECPoint $r2;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        $r2 = r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9ECPoint g>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.x9.X9ECPoint: org.spongycastle.math.ec.ECPoint getPoint()>();

        return $r1;
    }
    public java.math.BigInteger getH()
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        r1 = r0.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger h>;

        return r1;
    }
    public java.math.BigInteger getN()
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        r1 = r0.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger n>;

        return r1;
    }
    public byte[] getSeed()
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        byte[] r1;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        r1 = r0.<org.spongycastle.asn1.x9.X9ECParameters: byte[] seed>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.x9.X9ECParameters r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        byte[] $r2;
        org.spongycastle.asn1.ASN1Integer $r3;
        java.math.BigInteger $r4;
        org.spongycastle.asn1.x9.X9FieldID $r5;
        org.spongycastle.asn1.x9.X9Curve $r6;
        org.spongycastle.math.ec.ECCurve $r7;
        org.spongycastle.asn1.x9.X9ECPoint $r8;
        org.spongycastle.asn1.DERSequence $r9;

        r0 := @this: org.spongycastle.asn1.x9.X9ECParameters;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = new org.spongycastle.asn1.ASN1Integer;

        $r4 = <org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger ONE>;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r4);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r5 = r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9FieldID fieldID>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $r6 = new org.spongycastle.asn1.x9.X9Curve;

        $r7 = r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve curve>;

        $r2 = r0.<org.spongycastle.asn1.x9.X9ECParameters: byte[] seed>;

        specialinvoke $r6.<org.spongycastle.asn1.x9.X9Curve: void <init>(org.spongycastle.math.ec.ECCurve,byte[])>($r7, $r2);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r6);

        $r8 = r0.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9ECPoint g>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r8);

        $r3 = new org.spongycastle.asn1.ASN1Integer;

        $r4 = r0.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger n>;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r4);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r4 = r0.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger h>;

        if $r4 == null goto label1;

        $r3 = new org.spongycastle.asn1.ASN1Integer;

        $r4 = r0.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger h>;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r4);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label1:
        $r9 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r9.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r9;
    }
