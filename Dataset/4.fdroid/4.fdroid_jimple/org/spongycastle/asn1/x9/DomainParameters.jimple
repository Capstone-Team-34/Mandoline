org.spongycastle.asn1.x9.DomainParameters extends org.spongycastle.asn1.ASN1Object
private final org.spongycastle.asn1.ASN1Integer g
private final org.spongycastle.asn1.ASN1Integer j
private final org.spongycastle.asn1.ASN1Integer p
private final org.spongycastle.asn1.ASN1Integer q
private final org.spongycastle.asn1.x9.ValidationParams validationParams
    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.spongycastle.asn1.x9.ValidationParams)
    {
        org.spongycastle.asn1.x9.DomainParameters r0;
        java.math.BigInteger $r1, $r2, $r3, $r4;
        org.spongycastle.asn1.x9.ValidationParams $r5;
        java.lang.IllegalArgumentException $r6;
        org.spongycastle.asn1.ASN1Integer $r7;

        r0 := @this: org.spongycastle.asn1.x9.DomainParameters;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 := @parameter3: java.math.BigInteger;

        $r5 := @parameter4: org.spongycastle.asn1.x9.ValidationParams;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'p\' cannot be null");

        throw $r6;

     label1:
        if $r2 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'g\' cannot be null");

        throw $r6;

     label2:
        if $r3 != null goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'q\' cannot be null");

        throw $r6;

     label3:
        $r7 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r7.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r1);

        r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer p> = $r7;

        $r7 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r7.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r2);

        r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer g> = $r7;

        $r7 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r7.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r3);

        r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer q> = $r7;

        if $r4 == null goto label5;

        $r7 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r7.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r4);

        r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer j> = $r7;

     label4:
        r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.x9.ValidationParams validationParams> = $r5;

        return;

     label5:
        r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer j> = null;

        goto label4;
    }
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x9.DomainParameters r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.util.Enumeration $r5;
        java.lang.Object $r6;
        org.spongycastle.asn1.ASN1Integer $r7;
        org.spongycastle.asn1.ASN1Encodable $r8, r9;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive $r10;
        org.spongycastle.asn1.x9.ValidationParams $r11;

        r0 := @this: org.spongycastle.asn1.x9.DomainParameters;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 < 3 goto label1;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 <= 5 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad sequence size: ");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r6);

        r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer p> = $r7;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r6);

        r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer g> = $r7;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r6);

        r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer q> = $r7;

        $r8 = staticinvoke <org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)>($r5);

        r9 = $r8;

        if $r8 == null goto label4;

        $z0 = $r8 instanceof org.spongycastle.asn1.ASN1Integer;

        if $z0 == 0 goto label4;

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r8);

        r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer j> = $r7;

        r9 = staticinvoke <org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)>($r5);

     label3:
        if r9 == null goto label5;

        $r10 = interfaceinvoke r9.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r11 = staticinvoke <org.spongycastle.asn1.x9.ValidationParams: org.spongycastle.asn1.x9.ValidationParams getInstance(java.lang.Object)>($r10);

        r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.x9.ValidationParams validationParams> = $r11;

        return;

     label4:
        r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer j> = null;

        goto label3;

     label5:
        r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.x9.ValidationParams validationParams> = null;

        return;
    }
    public static org.spongycastle.asn1.x9.DomainParameters getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.x9.DomainParameters r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.x9.DomainParameters;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.x9.DomainParameters) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.x9.DomainParameters;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.x9.DomainParameters: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public static org.spongycastle.asn1.x9.DomainParameters getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.x9.DomainParameters $r2;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r0, $z0);

        $r2 = staticinvoke <org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.x9.DomainParameters getInstance(java.lang.Object)>($r1);

        return $r2;
    }
    private static org.spongycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)
    {
        java.util.Enumeration $r0;
        boolean $z0;
        java.lang.Object $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;

        $r0 := @parameter0: java.util.Enumeration;

        $z0 = interfaceinvoke $r0.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke $r0.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r2 = (org.spongycastle.asn1.ASN1Encodable) $r1;

        return $r2;

     label1:
        return null;
    }
    public java.math.BigInteger getG()
    {
        org.spongycastle.asn1.x9.DomainParameters r0;
        java.math.BigInteger $r1;
        org.spongycastle.asn1.ASN1Integer $r2;

        r0 := @this: org.spongycastle.asn1.x9.DomainParameters;

        $r2 = r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer g>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        return $r1;
    }
    public java.math.BigInteger getJ()
    {
        org.spongycastle.asn1.x9.DomainParameters r0;
        java.math.BigInteger $r1;
        org.spongycastle.asn1.ASN1Integer $r2;

        r0 := @this: org.spongycastle.asn1.x9.DomainParameters;

        $r2 = r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer j>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer j>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        return $r1;
    }
    public java.math.BigInteger getP()
    {
        org.spongycastle.asn1.x9.DomainParameters r0;
        java.math.BigInteger $r1;
        org.spongycastle.asn1.ASN1Integer $r2;

        r0 := @this: org.spongycastle.asn1.x9.DomainParameters;

        $r2 = r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer p>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        return $r1;
    }
    public java.math.BigInteger getQ()
    {
        org.spongycastle.asn1.x9.DomainParameters r0;
        java.math.BigInteger $r1;
        org.spongycastle.asn1.ASN1Integer $r2;

        r0 := @this: org.spongycastle.asn1.x9.DomainParameters;

        $r2 = r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer q>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getPositiveValue()>();

        return $r1;
    }
    public org.spongycastle.asn1.x9.ValidationParams getValidationParams()
    {
        org.spongycastle.asn1.x9.DomainParameters r0;
        org.spongycastle.asn1.x9.ValidationParams r1;

        r0 := @this: org.spongycastle.asn1.x9.DomainParameters;

        r1 = r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.x9.ValidationParams validationParams>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.x9.DomainParameters r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.ASN1Integer $r2;
        org.spongycastle.asn1.x9.ValidationParams $r3;
        org.spongycastle.asn1.DERSequence $r4;

        r0 := @this: org.spongycastle.asn1.x9.DomainParameters;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer p>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r2 = r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer g>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r2 = r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer q>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r2 = r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer j>;

        if $r2 == null goto label1;

        $r2 = r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.ASN1Integer j>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

     label1:
        $r3 = r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.x9.ValidationParams validationParams>;

        if $r3 == null goto label2;

        $r3 = r0.<org.spongycastle.asn1.x9.DomainParameters: org.spongycastle.asn1.x9.ValidationParams validationParams>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label2:
        $r4 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r4.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r4;
    }
