org.spongycastle.asn1.ASN1Boolean extends org.spongycastle.asn1.ASN1Primitive
public static final org.spongycastle.asn1.ASN1Boolean FALSE
private static final byte[] FALSE_VALUE
public static final org.spongycastle.asn1.ASN1Boolean TRUE
private static final byte[] TRUE_VALUE
private final byte[] value
    static void <clinit>()
    {
        byte[] $r0;
        org.spongycastle.asn1.ASN1Boolean $r1;

        $r0 = newarray (byte)[1];

        $r0[0] = -1;

        <org.spongycastle.asn1.ASN1Boolean: byte[] TRUE_VALUE> = $r0;

        $r0 = newarray (byte)[1];

        $r0[0] = 0;

        <org.spongycastle.asn1.ASN1Boolean: byte[] FALSE_VALUE> = $r0;

        $r1 = new org.spongycastle.asn1.ASN1Boolean;

        specialinvoke $r1.<org.spongycastle.asn1.ASN1Boolean: void <init>(boolean)>(0);

        <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean FALSE> = $r1;

        $r1 = new org.spongycastle.asn1.ASN1Boolean;

        specialinvoke $r1.<org.spongycastle.asn1.ASN1Boolean: void <init>(boolean)>(1);

        <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean TRUE> = $r1;

        return;
    }
    public void <init>(boolean)
    {
        org.spongycastle.asn1.ASN1Boolean r0;
        boolean $z0;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.ASN1Boolean;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        if $z0 == 0 goto label2;

        $r1 = <org.spongycastle.asn1.ASN1Boolean: byte[] TRUE_VALUE>;

     label1:
        r0.<org.spongycastle.asn1.ASN1Boolean: byte[] value> = $r1;

        return;

     label2:
        $r1 = <org.spongycastle.asn1.ASN1Boolean: byte[] FALSE_VALUE>;

        goto label1;
    }
    void <init>(byte[])
    {
        org.spongycastle.asn1.ASN1Boolean r0;
        byte[] $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        byte $b1;

        r0 := @this: org.spongycastle.asn1.ASN1Boolean;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        $i0 = lengthof $r1;

        if $i0 == 1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("byte value should have 1 byte in it");

        throw $r2;

     label1:
        $b1 = $r1[0];

        if $b1 != 0 goto label2;

        $r1 = <org.spongycastle.asn1.ASN1Boolean: byte[] FALSE_VALUE>;

        r0.<org.spongycastle.asn1.ASN1Boolean: byte[] value> = $r1;

        return;

     label2:
        $b1 = $r1[0];

        $i0 = $b1 & 255;

        if $i0 != 255 goto label3;

        $r1 = <org.spongycastle.asn1.ASN1Boolean: byte[] TRUE_VALUE>;

        r0.<org.spongycastle.asn1.ASN1Boolean: byte[] value> = $r1;

        return;

     label3:
        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        r0.<org.spongycastle.asn1.ASN1Boolean: byte[] value> = $r1;

        return;
    }
    static org.spongycastle.asn1.ASN1Boolean fromOctetString(byte[])
    {
        byte[] $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        byte $b1;
        org.spongycastle.asn1.ASN1Boolean $r2;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("BOOLEAN value should have 1 byte in it");

        throw $r1;

     label1:
        $b1 = $r0[0];

        if $b1 != 0 goto label2;

        $r2 = <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean FALSE>;

        return $r2;

     label2:
        $b1 = $r0[0];

        $i0 = $b1 & 255;

        if $i0 != 255 goto label3;

        $r2 = <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean TRUE>;

        return $r2;

     label3:
        $r2 = new org.spongycastle.asn1.ASN1Boolean;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Boolean: void <init>(byte[])>($r0);

        return $r2;
    }
    public static org.spongycastle.asn1.ASN1Boolean getInstance(int)
    {
        int $i0;
        org.spongycastle.asn1.ASN1Boolean r0;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        r0 = <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean TRUE>;

        return r0;

     label1:
        r0 = <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean FALSE>;

        return r0;
    }
    public static org.spongycastle.asn1.ASN1Boolean getInstance(java.lang.Object)
    {
        java.io.IOException r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1Boolean r2;
        byte[] r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.Class $r8;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z0 = r1 instanceof org.spongycastle.asn1.ASN1Boolean;

        if $z0 == 0 goto label2;

     label1:
        r2 = (org.spongycastle.asn1.ASN1Boolean) r1;

        return r2;

     label2:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label6;

        r3 = (byte[]) r1;

     label3:
        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>(r3);

     label4:
        r2 = (org.spongycastle.asn1.ASN1Boolean) $r4;

        return r2;

     label5:
        r0 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to construct boolean from byte[]: ");

        $r7 = virtualinvoke r0.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label6:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal object in getInstance: ");

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

        catch java.io.IOException from label3 to label4 with label5;
    }
    public static org.spongycastle.asn1.ASN1Boolean getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.ASN1Boolean $r2;
        org.spongycastle.asn1.ASN1OctetString r3;
        byte[] $r4;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1Primitive getObject()>();

        if $z0 != 0 goto label1;

        $z0 = $r1 instanceof org.spongycastle.asn1.ASN1Boolean;

        if $z0 == 0 goto label2;

     label1:
        $r2 = staticinvoke <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean getInstance(java.lang.Object)>($r1);

        return $r2;

     label2:
        r3 = (org.spongycastle.asn1.ASN1OctetString) $r1;

        $r4 = virtualinvoke r3.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r2 = staticinvoke <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean fromOctetString(byte[])>($r4);

        return $r2;
    }
    public static org.spongycastle.asn1.ASN1Boolean getInstance(boolean)
    {
        boolean $z0;
        org.spongycastle.asn1.ASN1Boolean r0;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        r0 = <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean TRUE>;

        return r0;

     label1:
        r0 = <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean FALSE>;

        return r0;
    }
    protected boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive)
    {
        org.spongycastle.asn1.ASN1Boolean r0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        boolean $z0;
        byte[] $r2;
        byte $b0, $b1;

        r0 := @this: org.spongycastle.asn1.ASN1Boolean;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Primitive;

        $z0 = $r1 instanceof org.spongycastle.asn1.ASN1Boolean;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.spongycastle.asn1.ASN1Boolean: byte[] value>;

        $b0 = $r2[0];

        r0 = (org.spongycastle.asn1.ASN1Boolean) $r1;

        $r2 = r0.<org.spongycastle.asn1.ASN1Boolean: byte[] value>;

        $b1 = $r2[0];

        if $b0 != $b1 goto label1;

        return 1;

     label1:
        return 0;
    }
    void encode(org.spongycastle.asn1.ASN1OutputStream) throws java.io.IOException
    {
        org.spongycastle.asn1.ASN1Boolean r0;
        org.spongycastle.asn1.ASN1OutputStream $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.asn1.ASN1Boolean;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1OutputStream;

        $r2 = r0.<org.spongycastle.asn1.ASN1Boolean: byte[] value>;

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>(1, $r2);

        return;
    }
    int encodedLength()
    {
        org.spongycastle.asn1.ASN1Boolean r0;

        r0 := @this: org.spongycastle.asn1.ASN1Boolean;

        return 3;
    }
    public int hashCode()
    {
        org.spongycastle.asn1.ASN1Boolean r0;
        byte[] $r1;
        byte $b0;

        r0 := @this: org.spongycastle.asn1.ASN1Boolean;

        $r1 = r0.<org.spongycastle.asn1.ASN1Boolean: byte[] value>;

        $b0 = $r1[0];

        return $b0;
    }
    boolean isConstructed()
    {
        org.spongycastle.asn1.ASN1Boolean r0;

        r0 := @this: org.spongycastle.asn1.ASN1Boolean;

        return 0;
    }
    public boolean isTrue()
    {
        org.spongycastle.asn1.ASN1Boolean r0;
        byte[] $r1;
        byte $b0;

        r0 := @this: org.spongycastle.asn1.ASN1Boolean;

        $r1 = r0.<org.spongycastle.asn1.ASN1Boolean: byte[] value>;

        $b0 = $r1[0];

        if $b0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.lang.String toString()
    {
        org.spongycastle.asn1.ASN1Boolean r0;
        byte[] $r1;
        byte $b0;

        r0 := @this: org.spongycastle.asn1.ASN1Boolean;

        $r1 = r0.<org.spongycastle.asn1.ASN1Boolean: byte[] value>;

        $b0 = $r1[0];

        if $b0 == 0 goto label1;

        return "TRUE";

     label1:
        return "FALSE";
    }
