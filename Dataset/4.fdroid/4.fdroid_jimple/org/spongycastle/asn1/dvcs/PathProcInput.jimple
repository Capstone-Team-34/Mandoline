org.spongycastle.asn1.dvcs.PathProcInput extends org.spongycastle.asn1.ASN1Object
private org.spongycastle.asn1.x509.PolicyInformation[] acceptablePolicySet
private boolean explicitPolicyReqd
private boolean inhibitAnyPolicy
private boolean inhibitPolicyMapping
    public void <init>(org.spongycastle.asn1.x509.PolicyInformation[])
    {
        org.spongycastle.asn1.dvcs.PathProcInput r0;
        org.spongycastle.asn1.x509.PolicyInformation[] $r1;

        r0 := @this: org.spongycastle.asn1.dvcs.PathProcInput;

        $r1 := @parameter0: org.spongycastle.asn1.x509.PolicyInformation[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitPolicyMapping> = 0;

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean explicitPolicyReqd> = 0;

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitAnyPolicy> = 0;

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: org.spongycastle.asn1.x509.PolicyInformation[] acceptablePolicySet> = $r1;

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.PolicyInformation[], boolean, boolean, boolean)
    {
        org.spongycastle.asn1.dvcs.PathProcInput r0;
        org.spongycastle.asn1.x509.PolicyInformation[] $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.spongycastle.asn1.dvcs.PathProcInput;

        $r1 := @parameter0: org.spongycastle.asn1.x509.PolicyInformation[];

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitPolicyMapping> = 0;

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean explicitPolicyReqd> = 0;

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitAnyPolicy> = 0;

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: org.spongycastle.asn1.x509.PolicyInformation[] acceptablePolicySet> = $r1;

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitPolicyMapping> = $z0;

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean explicitPolicyReqd> = $z1;

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitAnyPolicy> = $z2;

        return;
    }
    private static org.spongycastle.asn1.x509.PolicyInformation[] fromSequence(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        org.spongycastle.asn1.x509.PolicyInformation[] r1;
        int $i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.x509.PolicyInformation $r3;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        $i0 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        r1 = newarray (org.spongycastle.asn1.x509.PolicyInformation)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 == $i1 goto label2;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r3 = staticinvoke <org.spongycastle.asn1.x509.PolicyInformation: org.spongycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r2);

        r1[$i0] = $r3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public static org.spongycastle.asn1.dvcs.PathProcInput getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.dvcs.PathProcInput r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1Sequence $r2, $r4;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.x509.PolicyInformation[] $r5;
        int i0, $i1;
        org.spongycastle.asn1.ASN1Boolean $r6;
        org.spongycastle.asn1.ASN1TaggedObject $r7;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.dvcs.PathProcInput;

        if $z0 == 0 goto label1;

        r0 = (org.spongycastle.asn1.dvcs.PathProcInput) r1;

        return r0;

     label1:
        if r1 == null goto label9;

        $r2 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r3);

        r0 = new org.spongycastle.asn1.dvcs.PathProcInput;

        $r5 = staticinvoke <org.spongycastle.asn1.dvcs.PathProcInput: org.spongycastle.asn1.x509.PolicyInformation[] fromSequence(org.spongycastle.asn1.ASN1Sequence)>($r4);

        specialinvoke r0.<org.spongycastle.asn1.dvcs.PathProcInput: void <init>(org.spongycastle.asn1.x509.PolicyInformation[])>($r5);

        i0 = 1;

     label2:
        $i1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if i0 >= $i1 goto label8;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(i0);

        $z0 = $r3 instanceof org.spongycastle.asn1.ASN1Boolean;

        if $z0 == 0 goto label4;

        $r6 = staticinvoke <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean getInstance(java.lang.Object)>($r3);

        $z0 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Boolean: boolean isTrue()>();

        specialinvoke r0.<org.spongycastle.asn1.dvcs.PathProcInput: void setInhibitPolicyMapping(boolean)>($z0);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $z0 = $r3 instanceof org.spongycastle.asn1.ASN1TaggedObject;

        if $z0 == 0 goto label3;

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)>($r3);

        $i1 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        lookupswitch($i1)
        {
            case 0: goto label6;
            case 1: goto label7;
            default: goto label5;
        };

     label5:
        goto label3;

     label6:
        $r6 = staticinvoke <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r7, 0);

        $z0 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Boolean: boolean isTrue()>();

        specialinvoke r0.<org.spongycastle.asn1.dvcs.PathProcInput: void setExplicitPolicyReqd(boolean)>($z0);

        goto label3;

     label7:
        $r6 = staticinvoke <org.spongycastle.asn1.ASN1Boolean: org.spongycastle.asn1.ASN1Boolean getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r7, 0);

        $z0 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Boolean: boolean isTrue()>();

        specialinvoke r0.<org.spongycastle.asn1.dvcs.PathProcInput: void setInhibitAnyPolicy(boolean)>($z0);

        goto label3;

     label8:
        return r0;

     label9:
        return null;
    }
    public static org.spongycastle.asn1.dvcs.PathProcInput getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.dvcs.PathProcInput $r2;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r0, $z0);

        $r2 = staticinvoke <org.spongycastle.asn1.dvcs.PathProcInput: org.spongycastle.asn1.dvcs.PathProcInput getInstance(java.lang.Object)>($r1);

        return $r2;
    }
    private void setExplicitPolicyReqd(boolean)
    {
        org.spongycastle.asn1.dvcs.PathProcInput r0;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.dvcs.PathProcInput;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean explicitPolicyReqd> = $z0;

        return;
    }
    private void setInhibitAnyPolicy(boolean)
    {
        org.spongycastle.asn1.dvcs.PathProcInput r0;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.dvcs.PathProcInput;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitAnyPolicy> = $z0;

        return;
    }
    private void setInhibitPolicyMapping(boolean)
    {
        org.spongycastle.asn1.dvcs.PathProcInput r0;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.dvcs.PathProcInput;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitPolicyMapping> = $z0;

        return;
    }
    public org.spongycastle.asn1.x509.PolicyInformation[] getAcceptablePolicySet()
    {
        org.spongycastle.asn1.dvcs.PathProcInput r0;
        org.spongycastle.asn1.x509.PolicyInformation[] r1;

        r0 := @this: org.spongycastle.asn1.dvcs.PathProcInput;

        r1 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: org.spongycastle.asn1.x509.PolicyInformation[] acceptablePolicySet>;

        return r1;
    }
    public boolean isExplicitPolicyReqd()
    {
        org.spongycastle.asn1.dvcs.PathProcInput r0;
        boolean z0;

        r0 := @this: org.spongycastle.asn1.dvcs.PathProcInput;

        z0 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean explicitPolicyReqd>;

        return z0;
    }
    public boolean isInhibitAnyPolicy()
    {
        org.spongycastle.asn1.dvcs.PathProcInput r0;
        boolean z0;

        r0 := @this: org.spongycastle.asn1.dvcs.PathProcInput;

        z0 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitAnyPolicy>;

        return z0;
    }
    public boolean isInhibitPolicyMapping()
    {
        org.spongycastle.asn1.dvcs.PathProcInput r0;
        boolean z0;

        r0 := @this: org.spongycastle.asn1.dvcs.PathProcInput;

        z0 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitPolicyMapping>;

        return z0;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.dvcs.PathProcInput r0;
        org.spongycastle.asn1.ASN1EncodableVector r1, r2;
        boolean $z0;
        int i0, $i1;
        org.spongycastle.asn1.x509.PolicyInformation[] $r3;
        org.spongycastle.asn1.x509.PolicyInformation $r4;
        org.spongycastle.asn1.DERSequence $r5;
        org.spongycastle.asn1.ASN1Boolean $r6;
        org.spongycastle.asn1.DERTaggedObject $r7;

        r0 := @this: org.spongycastle.asn1.dvcs.PathProcInput;

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        i0 = 0;

     label1:
        $r3 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: org.spongycastle.asn1.x509.PolicyInformation[] acceptablePolicySet>;

        $i1 = lengthof $r3;

        if i0 == $i1 goto label2;

        $r3 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: org.spongycastle.asn1.x509.PolicyInformation[] acceptablePolicySet>;

        $r4 = $r3[i0];

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r5 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r5.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $z0 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitPolicyMapping>;

        if $z0 == 0 goto label3;

        $r6 = new org.spongycastle.asn1.ASN1Boolean;

        $z0 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitPolicyMapping>;

        specialinvoke $r6.<org.spongycastle.asn1.ASN1Boolean: void <init>(boolean)>($z0);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r6);

     label3:
        $z0 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean explicitPolicyReqd>;

        if $z0 == 0 goto label4;

        $r7 = new org.spongycastle.asn1.DERTaggedObject;

        $r6 = new org.spongycastle.asn1.ASN1Boolean;

        $z0 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean explicitPolicyReqd>;

        specialinvoke $r6.<org.spongycastle.asn1.ASN1Boolean: void <init>(boolean)>($z0);

        specialinvoke $r7.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 0, $r6);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r7);

     label4:
        $z0 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitAnyPolicy>;

        if $z0 == 0 goto label5;

        $r7 = new org.spongycastle.asn1.DERTaggedObject;

        $r6 = new org.spongycastle.asn1.ASN1Boolean;

        $z0 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitAnyPolicy>;

        specialinvoke $r6.<org.spongycastle.asn1.ASN1Boolean: void <init>(boolean)>($z0);

        specialinvoke $r7.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 1, $r6);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r7);

     label5:
        $r5 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r5.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r2);

        return $r5;
    }
    public java.lang.String toString()
    {
        org.spongycastle.asn1.dvcs.PathProcInput r0;
        java.lang.StringBuilder $r1;
        org.spongycastle.asn1.x509.PolicyInformation[] $r2;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: org.spongycastle.asn1.dvcs.PathProcInput;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PathProcInput: {\nacceptablePolicySet: ");

        $r2 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: org.spongycastle.asn1.x509.PolicyInformation[] acceptablePolicySet>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inhibitPolicyMapping: ");

        $z0 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitPolicyMapping>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("explicitPolicyReqd: ");

        $z0 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean explicitPolicyReqd>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inhibitAnyPolicy: ");

        $z0 = r0.<org.spongycastle.asn1.dvcs.PathProcInput: boolean inhibitAnyPolicy>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}\n");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
