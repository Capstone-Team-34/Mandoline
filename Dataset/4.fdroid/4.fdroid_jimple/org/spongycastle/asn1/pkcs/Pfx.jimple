org.spongycastle.asn1.pkcs.Pfx extends org.spongycastle.asn1.ASN1Object implements org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers
private org.spongycastle.asn1.pkcs.ContentInfo contentInfo
private org.spongycastle.asn1.pkcs.MacData macData
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.pkcs.Pfx r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.ASN1Integer $r3;
        java.math.BigInteger $r4;
        int $i0;
        java.lang.IllegalArgumentException $r5;
        org.spongycastle.asn1.pkcs.ContentInfo $r6;
        org.spongycastle.asn1.pkcs.MacData $r7;

        r0 := @this: org.spongycastle.asn1.pkcs.Pfx;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData macData> = null;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r3 = (org.spongycastle.asn1.ASN1Integer) $r2;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

        if $i0 == 3 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("wrong version for PFX PDU");

        throw $r5;

     label1:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r6 = staticinvoke <org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.pkcs.ContentInfo getInstance(java.lang.Object)>($r2);

        r0.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.ContentInfo contentInfo> = $r6;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 != 3 goto label2;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(2);

        $r7 = staticinvoke <org.spongycastle.asn1.pkcs.MacData: org.spongycastle.asn1.pkcs.MacData getInstance(java.lang.Object)>($r2);

        r0.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData macData> = $r7;

     label2:
        return;
    }
    public void <init>(org.spongycastle.asn1.pkcs.ContentInfo, org.spongycastle.asn1.pkcs.MacData)
    {
        org.spongycastle.asn1.pkcs.Pfx r0;
        org.spongycastle.asn1.pkcs.ContentInfo $r1;
        org.spongycastle.asn1.pkcs.MacData $r2;

        r0 := @this: org.spongycastle.asn1.pkcs.Pfx;

        $r1 := @parameter0: org.spongycastle.asn1.pkcs.ContentInfo;

        $r2 := @parameter1: org.spongycastle.asn1.pkcs.MacData;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData macData> = null;

        r0.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.ContentInfo contentInfo> = $r1;

        r0.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData macData> = $r2;

        return;
    }
    public static org.spongycastle.asn1.pkcs.Pfx getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.pkcs.Pfx r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.pkcs.Pfx;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.pkcs.Pfx) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.pkcs.Pfx;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.pkcs.Pfx: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public org.spongycastle.asn1.pkcs.ContentInfo getAuthSafe()
    {
        org.spongycastle.asn1.pkcs.Pfx r0;
        org.spongycastle.asn1.pkcs.ContentInfo r1;

        r0 := @this: org.spongycastle.asn1.pkcs.Pfx;

        r1 = r0.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.ContentInfo contentInfo>;

        return r1;
    }
    public org.spongycastle.asn1.pkcs.MacData getMacData()
    {
        org.spongycastle.asn1.pkcs.Pfx r0;
        org.spongycastle.asn1.pkcs.MacData r1;

        r0 := @this: org.spongycastle.asn1.pkcs.Pfx;

        r1 = r0.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData macData>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.pkcs.Pfx r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.ASN1Integer $r2;
        org.spongycastle.asn1.pkcs.ContentInfo $r3;
        org.spongycastle.asn1.pkcs.MacData $r4;
        org.spongycastle.asn1.BERSequence $r5;

        r0 := @this: org.spongycastle.asn1.pkcs.Pfx;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(3L);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r3 = r0.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.ContentInfo contentInfo>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r4 = r0.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData macData>;

        if $r4 == null goto label1;

        $r4 = r0.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData macData>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

     label1:
        $r5 = new org.spongycastle.asn1.BERSequence;

        specialinvoke $r5.<org.spongycastle.asn1.BERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r5;
    }
