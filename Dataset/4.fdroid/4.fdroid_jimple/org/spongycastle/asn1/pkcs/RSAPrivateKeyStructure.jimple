org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure extends org.spongycastle.asn1.ASN1Object
private java.math.BigInteger coefficient
private java.math.BigInteger exponent1
private java.math.BigInteger exponent2
private java.math.BigInteger modulus
private org.spongycastle.asn1.ASN1Sequence otherPrimeInfos
private java.math.BigInteger prime1
private java.math.BigInteger prime2
private java.math.BigInteger privateExponent
private java.math.BigInteger publicExponent
private int version
    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure r0;
        java.math.BigInteger $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 := @parameter3: java.math.BigInteger;

        $r5 := @parameter4: java.math.BigInteger;

        $r6 := @parameter5: java.math.BigInteger;

        $r7 := @parameter6: java.math.BigInteger;

        $r8 := @parameter7: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: org.spongycastle.asn1.ASN1Sequence otherPrimeInfos> = null;

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: int version> = 0;

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger modulus> = $r1;

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger publicExponent> = $r2;

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger privateExponent> = $r3;

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger prime1> = $r4;

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger prime2> = $r5;

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger exponent1> = $r6;

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger exponent2> = $r7;

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger coefficient> = $r8;

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        java.util.Enumeration $r2;
        java.lang.Object $r3;
        org.spongycastle.asn1.ASN1Integer $r4;
        java.math.BigInteger $r5;
        int $i0;
        java.lang.IllegalArgumentException $r6;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: org.spongycastle.asn1.ASN1Sequence otherPrimeInfos> = null;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r5.<java.math.BigInteger: int intValue()>();

        if $i0 == 0 goto label1;

        $i0 = virtualinvoke $r5.<java.math.BigInteger: int intValue()>();

        if $i0 == 1 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("wrong version for RSA private key");

        throw $r6;

     label1:
        $i0 = virtualinvoke $r5.<java.math.BigInteger: int intValue()>();

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: int version> = $i0;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger modulus> = $r5;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger publicExponent> = $r5;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger privateExponent> = $r5;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger prime1> = $r5;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger prime2> = $r5;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger exponent1> = $r5;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger exponent2> = $r5;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (org.spongycastle.asn1.ASN1Integer) $r3;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger coefficient> = $r5;

        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r1 = (org.spongycastle.asn1.ASN1Sequence) $r3;

        r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: org.spongycastle.asn1.ASN1Sequence otherPrimeInfos> = $r1;

     label2:
        return;
    }
    public static org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure getInstance(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure r1;
        org.spongycastle.asn1.ASN1Sequence r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.Class $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        if $z0 == 0 goto label1;

        r1 = (org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure) r0;

        return r1;

     label1:
        $z0 = r0 instanceof org.spongycastle.asn1.ASN1Sequence;

        if $z0 == 0 goto label2;

        r1 = new org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        r2 = (org.spongycastle.asn1.ASN1Sequence) r0;

        specialinvoke r1.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: void <init>(org.spongycastle.asn1.ASN1Sequence)>(r2);

        return r1;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown object in factory: ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r3;
    }
    public static org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure $r2;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r0, $z0);

        $r2 = staticinvoke <org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure getInstance(java.lang.Object)>($r1);

        return $r2;
    }
    public java.math.BigInteger getCoefficient()
    {
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        r1 = r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger coefficient>;

        return r1;
    }
    public java.math.BigInteger getExponent1()
    {
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        r1 = r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger exponent1>;

        return r1;
    }
    public java.math.BigInteger getExponent2()
    {
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        r1 = r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger exponent2>;

        return r1;
    }
    public java.math.BigInteger getModulus()
    {
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        r1 = r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger modulus>;

        return r1;
    }
    public java.math.BigInteger getPrime1()
    {
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        r1 = r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger prime1>;

        return r1;
    }
    public java.math.BigInteger getPrime2()
    {
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        r1 = r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger prime2>;

        return r1;
    }
    public java.math.BigInteger getPrivateExponent()
    {
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        r1 = r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger privateExponent>;

        return r1;
    }
    public java.math.BigInteger getPublicExponent()
    {
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        r1 = r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger publicExponent>;

        return r1;
    }
    public int getVersion()
    {
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure r0;
        int i0;

        r0 := @this: org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        i0 = r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: int version>;

        return i0;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.ASN1Integer $r2;
        int $i0;
        long $l1;
        java.math.BigInteger $r3;
        org.spongycastle.asn1.ASN1Sequence $r4;
        org.spongycastle.asn1.DERSequence $r5;

        r0 := @this: org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = new org.spongycastle.asn1.ASN1Integer;

        $i0 = r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: int version>;

        $l1 = (long) $i0;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>($l1);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r2 = new org.spongycastle.asn1.ASN1Integer;

        $r3 = virtualinvoke r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getModulus()>();

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r3);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r2 = new org.spongycastle.asn1.ASN1Integer;

        $r3 = virtualinvoke r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPublicExponent()>();

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r3);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r2 = new org.spongycastle.asn1.ASN1Integer;

        $r3 = virtualinvoke r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPrivateExponent()>();

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r3);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r2 = new org.spongycastle.asn1.ASN1Integer;

        $r3 = virtualinvoke r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPrime1()>();

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r3);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r2 = new org.spongycastle.asn1.ASN1Integer;

        $r3 = virtualinvoke r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPrime2()>();

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r3);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r2 = new org.spongycastle.asn1.ASN1Integer;

        $r3 = virtualinvoke r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getExponent1()>();

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r3);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r2 = new org.spongycastle.asn1.ASN1Integer;

        $r3 = virtualinvoke r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getExponent2()>();

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r3);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r2 = new org.spongycastle.asn1.ASN1Integer;

        $r3 = virtualinvoke r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getCoefficient()>();

        specialinvoke $r2.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r3);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r4 = r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: org.spongycastle.asn1.ASN1Sequence otherPrimeInfos>;

        if $r4 == null goto label1;

        $r4 = r0.<org.spongycastle.asn1.pkcs.RSAPrivateKeyStructure: org.spongycastle.asn1.ASN1Sequence otherPrimeInfos>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

     label1:
        $r5 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r5.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r5;
    }
