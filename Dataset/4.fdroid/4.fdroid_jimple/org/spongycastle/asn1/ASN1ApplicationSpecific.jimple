org.spongycastle.asn1.ASN1ApplicationSpecific extends org.spongycastle.asn1.ASN1Primitive
protected final boolean isConstructed
protected final byte[] octets
protected final int tag
    void <init>(boolean, int, byte[])
    {
        org.spongycastle.asn1.ASN1ApplicationSpecific r0;
        boolean $z0;
        int $i0;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.ASN1ApplicationSpecific;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: boolean isConstructed> = $z0;

        r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: int tag> = $i0;

        r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] octets> = $r1;

        return;
    }
    public static org.spongycastle.asn1.ASN1ApplicationSpecific getInstance(java.lang.Object)
    {
        java.io.IOException r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1ApplicationSpecific r2;
        byte[] r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.Class $r8;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z0 = r1 instanceof org.spongycastle.asn1.ASN1ApplicationSpecific;

        if $z0 == 0 goto label2;

     label1:
        r2 = (org.spongycastle.asn1.ASN1ApplicationSpecific) r1;

        return r2;

     label2:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label6;

        r3 = (byte[]) r1;

     label3:
        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>(r3);

        r2 = staticinvoke <org.spongycastle.asn1.ASN1ApplicationSpecific: org.spongycastle.asn1.ASN1ApplicationSpecific getInstance(java.lang.Object)>($r4);

     label4:
        return r2;

     label5:
        r0 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to construct object from byte[]: ");

        $r7 = virtualinvoke r0.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label6:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown object in getInstance: ");

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

        catch java.io.IOException from label3 to label4 with label5;
    }
    protected static int getLengthOfHeader(byte[])
    {
        byte[] $r0;
        int i0;
        byte $b1;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @parameter0: byte[];

        $b1 = $r0[1];

        i0 = $b1 & 255;

        if i0 != 128 goto label1;

        return 2;

     label1:
        if i0 <= 127 goto label3;

        i0 = i0 & 127;

        if i0 <= 4 goto label2;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DER length more than 4 bytes: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        i0 = i0 + 2;

        return i0;

     label3:
        return 2;
    }
    private byte[] replaceTagNumber(int, byte[]) throws java.io.IOException
    {
        org.spongycastle.asn1.ASN1ApplicationSpecific r0;
        int $i0, i2, i3, $i4;
        byte[] $r1, r2;
        byte $b1;
        org.spongycastle.asn1.ASN1ParsingException $r3;

        r0 := @this: org.spongycastle.asn1.ASN1ApplicationSpecific;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $b1 = $r1[0];

        i2 = $b1 & 31;

        i3 = 1;

        if i2 != 31 goto label2;

        i3 = 1 + 1;

        $b1 = $r1[1];

        i2 = $b1 & 255;

        $i4 = i2 & 127;

        if $i4 != 0 goto label1;

        $r3 = new org.spongycastle.asn1.ASN1ParsingException;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String)>("corrupted stream - invalid high tag number found");

        throw $r3;

     label1:
        if i2 < 0 goto label2;

        i2 = i2 & 128;

        if i2 == 0 goto label2;

        $b1 = $r1[i3];

        i2 = $b1 & 255;

        i3 = i3 + 1;

        goto label1;

     label2:
        i2 = lengthof $r1;

        i2 = i2 - i3;

        i2 = i2 + 1;

        r2 = newarray (byte)[i2];

        i2 = lengthof r2;

        i2 = i2 + -1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, i3, r2, 1, i2);

        $b1 = (byte) $i0;

        r2[0] = $b1;

        return r2;
    }
    boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive)
    {
        org.spongycastle.asn1.ASN1ApplicationSpecific r0, r2;
        org.spongycastle.asn1.ASN1Primitive $r1;
        boolean $z0, $z1;
        int $i0, $i1;
        byte[] $r3, $r4;

        r0 := @this: org.spongycastle.asn1.ASN1ApplicationSpecific;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Primitive;

        $z0 = $r1 instanceof org.spongycastle.asn1.ASN1ApplicationSpecific;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.asn1.ASN1ApplicationSpecific) $r1;

        $z0 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: boolean isConstructed>;

        $z1 = r2.<org.spongycastle.asn1.ASN1ApplicationSpecific: boolean isConstructed>;

        if $z0 != $z1 goto label2;

        $i0 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: int tag>;

        $i1 = r2.<org.spongycastle.asn1.ASN1ApplicationSpecific: int tag>;

        if $i0 != $i1 goto label2;

        $r3 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] octets>;

        $r4 = r2.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] octets>;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r3, $r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    void encode(org.spongycastle.asn1.ASN1OutputStream) throws java.io.IOException
    {
        org.spongycastle.asn1.ASN1ApplicationSpecific r0;
        org.spongycastle.asn1.ASN1OutputStream $r1;
        byte[] $r2;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.ASN1ApplicationSpecific;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1OutputStream;

        i0 = 64;

        $z0 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: boolean isConstructed>;

        if $z0 == 0 goto label1;

        i0 = 64 | 32;

     label1:
        $i1 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: int tag>;

        $r2 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] octets>;

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,int,byte[])>(i0, $i1, $r2);

        return;
    }
    int encodedLength() throws java.io.IOException
    {
        org.spongycastle.asn1.ASN1ApplicationSpecific r0;
        int $i0, $i1;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.ASN1ApplicationSpecific;

        $i0 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: int tag>;

        $i0 = staticinvoke <org.spongycastle.asn1.StreamUtil: int calculateTagLength(int)>($i0);

        $r1 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] octets>;

        $i1 = lengthof $r1;

        $i1 = staticinvoke <org.spongycastle.asn1.StreamUtil: int calculateBodyLength(int)>($i1);

        $i0 = $i0 + $i1;

        $r1 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] octets>;

        $i1 = lengthof $r1;

        $i0 = $i0 + $i1;

        return $i0;
    }
    public int getApplicationTag()
    {
        org.spongycastle.asn1.ASN1ApplicationSpecific r0;
        int i0;

        r0 := @this: org.spongycastle.asn1.ASN1ApplicationSpecific;

        i0 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: int tag>;

        return i0;
    }
    public byte[] getContents()
    {
        org.spongycastle.asn1.ASN1ApplicationSpecific r0;
        byte[] r1;

        r0 := @this: org.spongycastle.asn1.ASN1ApplicationSpecific;

        r1 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] octets>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive getObject() throws java.io.IOException
    {
        org.spongycastle.asn1.ASN1ApplicationSpecific r0;
        org.spongycastle.asn1.ASN1InputStream $r1;
        byte[] $r2;
        org.spongycastle.asn1.ASN1Primitive $r3;

        r0 := @this: org.spongycastle.asn1.ASN1ApplicationSpecific;

        $r1 = new org.spongycastle.asn1.ASN1InputStream;

        $r2 = virtualinvoke r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] getContents()>();

        specialinvoke $r1.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r2);

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        return $r3;
    }
    public org.spongycastle.asn1.ASN1Primitive getObject(int) throws java.io.IOException
    {
        org.spongycastle.asn1.ASN1ApplicationSpecific r0;
        int $i0;
        java.io.IOException $r1;
        byte[] $r2, $r3;
        byte $b1;
        org.spongycastle.asn1.ASN1InputStream $r4;
        org.spongycastle.asn1.ASN1Primitive $r5;

        r0 := @this: org.spongycastle.asn1.ASN1ApplicationSpecific;

        $i0 := @parameter0: int;

        if $i0 < 31 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("unsupported tag number");

        throw $r1;

     label1:
        $r2 = virtualinvoke r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] getEncoded()>();

        $r3 = specialinvoke r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] replaceTagNumber(int,byte[])>($i0, $r2);

        $b1 = $r2[0];

        $i0 = $b1 & 32;

        if $i0 == 0 goto label2;

        $b1 = $r3[0];

        $i0 = $b1 | 32;

        $b1 = (byte) $i0;

        $r3[0] = $b1;

     label2:
        $r4 = new org.spongycastle.asn1.ASN1InputStream;

        specialinvoke $r4.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r3);

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        return $r5;
    }
    public int hashCode()
    {
        org.spongycastle.asn1.ASN1ApplicationSpecific r0;
        int $i0, $i2;
        boolean $z0;
        byte $b1;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.ASN1ApplicationSpecific;

        $z0 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: boolean isConstructed>;

        if $z0 == 0 goto label2;

        $b1 = 1;

     label1:
        $i0 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: int tag>;

        $i2 = $b1 ^ $i0;

        $r1 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: byte[] octets>;

        $i0 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(byte[])>($r1);

        $i0 = $i2 ^ $i0;

        return $i0;

     label2:
        $b1 = 0;

        goto label1;
    }
    public boolean isConstructed()
    {
        org.spongycastle.asn1.ASN1ApplicationSpecific r0;
        boolean z0;

        r0 := @this: org.spongycastle.asn1.ASN1ApplicationSpecific;

        z0 = r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: boolean isConstructed>;

        return z0;
    }
