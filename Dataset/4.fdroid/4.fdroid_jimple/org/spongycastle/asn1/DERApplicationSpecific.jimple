org.spongycastle.asn1.DERApplicationSpecific extends org.spongycastle.asn1.ASN1ApplicationSpecific
    public void <init>(int, org.spongycastle.asn1.ASN1Encodable) throws java.io.IOException
    {
        org.spongycastle.asn1.DERApplicationSpecific r0;
        int $i0;
        org.spongycastle.asn1.ASN1Encodable $r1;

        r0 := @this: org.spongycastle.asn1.DERApplicationSpecific;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.spongycastle.asn1.ASN1Encodable;

        specialinvoke r0.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(1, $i0, $r1);

        return;
    }
    public void <init>(int, org.spongycastle.asn1.ASN1EncodableVector)
    {
        org.spongycastle.asn1.DERApplicationSpecific r0;
        int $i0;
        org.spongycastle.asn1.ASN1EncodableVector $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.asn1.DERApplicationSpecific;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.spongycastle.asn1.ASN1EncodableVector;

        $r2 = staticinvoke <org.spongycastle.asn1.DERApplicationSpecific: byte[] getEncodedVector(org.spongycastle.asn1.ASN1EncodableVector)>($r1);

        specialinvoke r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: void <init>(boolean,int,byte[])>(1, $i0, $r2);

        return;
    }
    public void <init>(int, byte[])
    {
        org.spongycastle.asn1.DERApplicationSpecific r0;
        int $i0;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.DERApplicationSpecific;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        specialinvoke r0.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(boolean,int,byte[])>(0, $i0, $r1);

        return;
    }
    public void <init>(boolean, int, org.spongycastle.asn1.ASN1Encodable) throws java.io.IOException
    {
        org.spongycastle.asn1.DERApplicationSpecific r0;
        boolean $z0, $z1;
        int $i0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.asn1.DERApplicationSpecific;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: org.spongycastle.asn1.ASN1Encodable;

        if $z0 != 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Primitive: boolean isConstructed()>();

        if $z1 == 0 goto label3;

     label1:
        $z1 = 1;

     label2:
        $r3 = staticinvoke <org.spongycastle.asn1.DERApplicationSpecific: byte[] getEncoding(boolean,org.spongycastle.asn1.ASN1Encodable)>($z0, $r1);

        specialinvoke r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: void <init>(boolean,int,byte[])>($z1, $i0, $r3);

        return;

     label3:
        $z1 = 0;

        goto label2;
    }
    void <init>(boolean, int, byte[])
    {
        org.spongycastle.asn1.DERApplicationSpecific r0;
        boolean $z0;
        int $i0;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.DERApplicationSpecific;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1ApplicationSpecific: void <init>(boolean,int,byte[])>($z0, $i0, $r1);

        return;
    }
    private static byte[] getEncodedVector(org.spongycastle.asn1.ASN1EncodableVector)
    {
        org.spongycastle.asn1.ASN1EncodableVector $r0;
        java.io.ByteArrayOutputStream r1;
        java.io.IOException r2;
        int i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.ASN1Object $r4;
        byte[] $r5;
        org.spongycastle.asn1.ASN1ParsingException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1EncodableVector;

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1EncodableVector: int size()>();

        if i0 == $i1 goto label7;

     label2:
        $r3 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1EncodableVector: org.spongycastle.asn1.ASN1Encodable get(int)>(i0);

     label3:
        $r4 = (org.spongycastle.asn1.ASN1Object) $r3;

     label4:
        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Object: byte[] getEncoded(java.lang.String)>("DER");

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[])>($r5);

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        r2 := @caughtexception;

        $r6 = new org.spongycastle.asn1.ASN1ParsingException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed object: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.spongycastle.asn1.ASN1ParsingException: void <init>(java.lang.String,java.lang.Throwable)>($r8, r2);

        throw $r6;

     label7:
        $r5 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r5;

        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }
    private static byte[] getEncoding(boolean, org.spongycastle.asn1.ASN1Encodable) throws java.io.IOException
    {
        boolean $z0;
        org.spongycastle.asn1.ASN1Encodable $r0;
        byte[] r1, $r3;
        org.spongycastle.asn1.ASN1Primitive $r2;
        int $i0, $i1;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: org.spongycastle.asn1.ASN1Encodable;

        $r2 = interfaceinvoke $r0.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded(java.lang.String)>("DER");

        if $z0 == 0 goto label1;

        return $r3;

     label1:
        $i0 = staticinvoke <org.spongycastle.asn1.DERApplicationSpecific: int getLengthOfHeader(byte[])>($r3);

        $i1 = lengthof $r3;

        $i1 = $i1 - $i0;

        r1 = newarray (byte)[$i1];

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i0, r1, 0, $i1);

        return r1;
    }
    void encode(org.spongycastle.asn1.ASN1OutputStream) throws java.io.IOException
    {
        org.spongycastle.asn1.DERApplicationSpecific r0;
        org.spongycastle.asn1.ASN1OutputStream $r1;
        byte[] $r2;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.DERApplicationSpecific;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1OutputStream;

        i0 = 64;

        $z0 = r0.<org.spongycastle.asn1.DERApplicationSpecific: boolean isConstructed>;

        if $z0 == 0 goto label1;

        i0 = 64 | 32;

     label1:
        $i1 = r0.<org.spongycastle.asn1.DERApplicationSpecific: int tag>;

        $r2 = r0.<org.spongycastle.asn1.DERApplicationSpecific: byte[] octets>;

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,int,byte[])>(i0, $i1, $r2);

        return;
    }
