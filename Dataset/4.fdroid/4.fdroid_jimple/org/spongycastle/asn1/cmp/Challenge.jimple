org.spongycastle.asn1.cmp.Challenge extends org.spongycastle.asn1.ASN1Object
private org.spongycastle.asn1.ASN1OctetString challenge
private org.spongycastle.asn1.x509.AlgorithmIdentifier owf
private org.spongycastle.asn1.ASN1OctetString witness
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.'cmp'.Challenge r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        int i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.spongycastle.asn1.ASN1OctetString $r4;

        r0 := @this: org.spongycastle.asn1.'cmp'.Challenge;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        i0 = 0;

        $i1 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i1 != 3 goto label1;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r3 = staticinvoke <org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)>($r2);

        r0.<org.spongycastle.asn1.'cmp'.Challenge: org.spongycastle.asn1.x509.AlgorithmIdentifier owf> = $r3;

        i0 = 1;

     label1:
        $i1 = i0 + 1;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(i0);

        $r4 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r2);

        r0.<org.spongycastle.asn1.'cmp'.Challenge: org.spongycastle.asn1.ASN1OctetString witness> = $r4;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i1);

        $r4 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r2);

        r0.<org.spongycastle.asn1.'cmp'.Challenge: org.spongycastle.asn1.ASN1OctetString challenge> = $r4;

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier, byte[], byte[])
    {
        org.spongycastle.asn1.'cmp'.Challenge r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        byte[] $r2, $r3;
        org.spongycastle.asn1.DEROctetString $r4;

        r0 := @this: org.spongycastle.asn1.'cmp'.Challenge;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.'cmp'.Challenge: org.spongycastle.asn1.x509.AlgorithmIdentifier owf> = $r1;

        $r4 = new org.spongycastle.asn1.DEROctetString;

        specialinvoke $r4.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r2);

        r0.<org.spongycastle.asn1.'cmp'.Challenge: org.spongycastle.asn1.ASN1OctetString witness> = $r4;

        $r4 = new org.spongycastle.asn1.DEROctetString;

        specialinvoke $r4.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r3);

        r0.<org.spongycastle.asn1.'cmp'.Challenge: org.spongycastle.asn1.ASN1OctetString challenge> = $r4;

        return;
    }
    public void <init>(byte[], byte[])
    {
        org.spongycastle.asn1.'cmp'.Challenge r0;
        byte[] $r1, $r2;

        r0 := @this: org.spongycastle.asn1.'cmp'.Challenge;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        specialinvoke r0.<org.spongycastle.asn1.'cmp'.Challenge: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[],byte[])>(null, $r1, $r2);

        return;
    }
    private void addOptional(org.spongycastle.asn1.ASN1EncodableVector, org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.asn1.'cmp'.Challenge r0;
        org.spongycastle.asn1.ASN1EncodableVector $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;

        r0 := @this: org.spongycastle.asn1.'cmp'.Challenge;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1EncodableVector;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1Encodable;

        if $r2 == null goto label1;

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

     label1:
        return;
    }
    public static org.spongycastle.asn1.'cmp'.Challenge getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.'cmp'.Challenge r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.'cmp'.Challenge;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.'cmp'.Challenge) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.'cmp'.Challenge;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.'cmp'.Challenge: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public byte[] getChallenge()
    {
        org.spongycastle.asn1.'cmp'.Challenge r0;
        byte[] $r1;
        org.spongycastle.asn1.ASN1OctetString $r2;

        r0 := @this: org.spongycastle.asn1.'cmp'.Challenge;

        $r2 = r0.<org.spongycastle.asn1.'cmp'.Challenge: org.spongycastle.asn1.ASN1OctetString challenge>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        return $r1;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getOwf()
    {
        org.spongycastle.asn1.'cmp'.Challenge r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.asn1.'cmp'.Challenge;

        r1 = r0.<org.spongycastle.asn1.'cmp'.Challenge: org.spongycastle.asn1.x509.AlgorithmIdentifier owf>;

        return r1;
    }
    public byte[] getWitness()
    {
        org.spongycastle.asn1.'cmp'.Challenge r0;
        byte[] $r1;
        org.spongycastle.asn1.ASN1OctetString $r2;

        r0 := @this: org.spongycastle.asn1.'cmp'.Challenge;

        $r2 = r0.<org.spongycastle.asn1.'cmp'.Challenge: org.spongycastle.asn1.ASN1OctetString witness>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        return $r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.'cmp'.Challenge r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1OctetString $r3;
        org.spongycastle.asn1.DERSequence $r4;

        r0 := @this: org.spongycastle.asn1.'cmp'.Challenge;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.'cmp'.Challenge: org.spongycastle.asn1.x509.AlgorithmIdentifier owf>;

        specialinvoke r0.<org.spongycastle.asn1.'cmp'.Challenge: void addOptional(org.spongycastle.asn1.ASN1EncodableVector,org.spongycastle.asn1.ASN1Encodable)>(r1, $r2);

        $r3 = r0.<org.spongycastle.asn1.'cmp'.Challenge: org.spongycastle.asn1.ASN1OctetString witness>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = r0.<org.spongycastle.asn1.'cmp'.Challenge: org.spongycastle.asn1.ASN1OctetString challenge>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r4 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r4.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r4;
    }
