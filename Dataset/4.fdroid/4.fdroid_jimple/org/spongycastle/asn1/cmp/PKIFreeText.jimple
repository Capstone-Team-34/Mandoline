org.spongycastle.asn1.cmp.PKIFreeText extends org.spongycastle.asn1.ASN1Object
org.spongycastle.asn1.ASN1Sequence strings
    public void <init>(java.lang.String)
    {
        org.spongycastle.asn1.'cmp'.PKIFreeText r0;
        java.lang.String $r1;
        org.spongycastle.asn1.DERUTF8String $r2;

        r0 := @this: org.spongycastle.asn1.'cmp'.PKIFreeText;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.asn1.DERUTF8String;

        specialinvoke $r2.<org.spongycastle.asn1.DERUTF8String: void <init>(java.lang.String)>($r1);

        specialinvoke r0.<org.spongycastle.asn1.'cmp'.PKIFreeText: void <init>(org.spongycastle.asn1.DERUTF8String)>($r2);

        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.'cmp'.PKIFreeText r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        java.util.Enumeration $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.spongycastle.asn1.'cmp'.PKIFreeText;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $z0 = $r3 instanceof org.spongycastle.asn1.DERUTF8String;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("attempt to insert non UTF8 STRING into PKIFreeText");

        throw $r4;

     label2:
        r0.<org.spongycastle.asn1.'cmp'.PKIFreeText: org.spongycastle.asn1.ASN1Sequence strings> = $r1;

        return;
    }
    public void <init>(org.spongycastle.asn1.DERUTF8String)
    {
        org.spongycastle.asn1.'cmp'.PKIFreeText r0;
        org.spongycastle.asn1.DERUTF8String $r1;
        org.spongycastle.asn1.DERSequence $r2;

        r0 := @this: org.spongycastle.asn1.'cmp'.PKIFreeText;

        $r1 := @parameter0: org.spongycastle.asn1.DERUTF8String;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r2.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r1);

        r0.<org.spongycastle.asn1.'cmp'.PKIFreeText: org.spongycastle.asn1.ASN1Sequence strings> = $r2;

        return;
    }
    public void <init>(java.lang.String[])
    {
        org.spongycastle.asn1.'cmp'.PKIFreeText r0;
        java.lang.String[] $r1;
        org.spongycastle.asn1.ASN1EncodableVector r2;
        java.lang.String $r3;
        int i0, $i1;
        org.spongycastle.asn1.DERUTF8String $r4;
        org.spongycastle.asn1.DERSequence $r5;

        r0 := @this: org.spongycastle.asn1.'cmp'.PKIFreeText;

        $r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if i0 >= $i1 goto label2;

        $r4 = new org.spongycastle.asn1.DERUTF8String;

        $r3 = $r1[i0];

        specialinvoke $r4.<org.spongycastle.asn1.DERUTF8String: void <init>(java.lang.String)>($r3);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r5 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r5.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r2);

        r0.<org.spongycastle.asn1.'cmp'.PKIFreeText: org.spongycastle.asn1.ASN1Sequence strings> = $r5;

        return;
    }
    public void <init>(org.spongycastle.asn1.DERUTF8String[])
    {
        org.spongycastle.asn1.'cmp'.PKIFreeText r0;
        org.spongycastle.asn1.DERUTF8String[] $r1;
        org.spongycastle.asn1.DERSequence $r2;

        r0 := @this: org.spongycastle.asn1.'cmp'.PKIFreeText;

        $r1 := @parameter0: org.spongycastle.asn1.DERUTF8String[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r2.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1Encodable[])>($r1);

        r0.<org.spongycastle.asn1.'cmp'.PKIFreeText: org.spongycastle.asn1.ASN1Sequence strings> = $r2;

        return;
    }
    public static org.spongycastle.asn1.'cmp'.PKIFreeText getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.'cmp'.PKIFreeText r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.'cmp'.PKIFreeText;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.'cmp'.PKIFreeText) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.'cmp'.PKIFreeText;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.'cmp'.PKIFreeText: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public static org.spongycastle.asn1.'cmp'.PKIFreeText getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.'cmp'.PKIFreeText $r2;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r0, $z0);

        $r2 = staticinvoke <org.spongycastle.asn1.'cmp'.PKIFreeText: org.spongycastle.asn1.'cmp'.PKIFreeText getInstance(java.lang.Object)>($r1);

        return $r2;
    }
    public org.spongycastle.asn1.DERUTF8String getStringAt(int)
    {
        org.spongycastle.asn1.'cmp'.PKIFreeText r0;
        int $i0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        org.spongycastle.asn1.ASN1Sequence $r2;
        org.spongycastle.asn1.DERUTF8String $r3;

        r0 := @this: org.spongycastle.asn1.'cmp'.PKIFreeText;

        $i0 := @parameter0: int;

        $r2 = r0.<org.spongycastle.asn1.'cmp'.PKIFreeText: org.spongycastle.asn1.ASN1Sequence strings>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r3 = (org.spongycastle.asn1.DERUTF8String) $r1;

        return $r3;
    }
    public int size()
    {
        org.spongycastle.asn1.'cmp'.PKIFreeText r0;
        int $i0;
        org.spongycastle.asn1.ASN1Sequence $r1;

        r0 := @this: org.spongycastle.asn1.'cmp'.PKIFreeText;

        $r1 = r0.<org.spongycastle.asn1.'cmp'.PKIFreeText: org.spongycastle.asn1.ASN1Sequence strings>;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        return $i0;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.'cmp'.PKIFreeText r0;
        org.spongycastle.asn1.ASN1Sequence r1;

        r0 := @this: org.spongycastle.asn1.'cmp'.PKIFreeText;

        r1 = r0.<org.spongycastle.asn1.'cmp'.PKIFreeText: org.spongycastle.asn1.ASN1Sequence strings>;

        return r1;
    }
