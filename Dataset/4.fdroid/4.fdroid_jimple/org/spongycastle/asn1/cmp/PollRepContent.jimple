org.spongycastle.asn1.cmp.PollRepContent extends org.spongycastle.asn1.ASN1Object
private org.spongycastle.asn1.ASN1Integer[] certReqId
private org.spongycastle.asn1.ASN1Integer[] checkAfter
private org.spongycastle.asn1.'cmp'.PKIFreeText[] reason
    public void <init>(org.spongycastle.asn1.ASN1Integer, org.spongycastle.asn1.ASN1Integer)
    {
        org.spongycastle.asn1.'cmp'.PollRepContent r0;
        org.spongycastle.asn1.ASN1Integer $r1, $r2;

        r0 := @this: org.spongycastle.asn1.'cmp'.PollRepContent;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Integer;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1Integer;

        specialinvoke r0.<org.spongycastle.asn1.'cmp'.PollRepContent: void <init>(org.spongycastle.asn1.ASN1Integer,org.spongycastle.asn1.ASN1Integer,org.spongycastle.asn1.'cmp'.PKIFreeText)>($r1, $r2, null);

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1Integer, org.spongycastle.asn1.ASN1Integer, org.spongycastle.asn1.'cmp'.PKIFreeText)
    {
        org.spongycastle.asn1.'cmp'.PollRepContent r0;
        org.spongycastle.asn1.ASN1Integer $r1, $r2;
        org.spongycastle.asn1.'cmp'.PKIFreeText $r3;
        org.spongycastle.asn1.ASN1Integer[] $r4;
        org.spongycastle.asn1.'cmp'.PKIFreeText[] $r5;

        r0 := @this: org.spongycastle.asn1.'cmp'.PollRepContent;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Integer;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1Integer;

        $r3 := @parameter2: org.spongycastle.asn1.'cmp'.PKIFreeText;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r4 = newarray (org.spongycastle.asn1.ASN1Integer)[1];

        r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] certReqId> = $r4;

        $r4 = newarray (org.spongycastle.asn1.ASN1Integer)[1];

        r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] checkAfter> = $r4;

        $r5 = newarray (org.spongycastle.asn1.'cmp'.PKIFreeText)[1];

        r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.'cmp'.PKIFreeText[] reason> = $r5;

        $r4 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] certReqId>;

        $r4[0] = $r1;

        $r4 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] checkAfter>;

        $r4[0] = $r2;

        $r5 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.'cmp'.PKIFreeText[] reason>;

        $r5[0] = $r3;

        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.'cmp'.PollRepContent r0;
        org.spongycastle.asn1.ASN1Sequence $r1, $r5;
        int $i0, $i1;
        org.spongycastle.asn1.ASN1Integer[] $r2;
        org.spongycastle.asn1.'cmp'.PKIFreeText[] $r3;
        org.spongycastle.asn1.ASN1Encodable $r4;
        org.spongycastle.asn1.ASN1Integer $r6;
        org.spongycastle.asn1.'cmp'.PKIFreeText $r7;

        r0 := @this: org.spongycastle.asn1.'cmp'.PollRepContent;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r2 = newarray (org.spongycastle.asn1.ASN1Integer)[$i0];

        r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] certReqId> = $r2;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r2 = newarray (org.spongycastle.asn1.ASN1Integer)[$i0];

        r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] checkAfter> = $r2;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r3 = newarray (org.spongycastle.asn1.'cmp'.PKIFreeText)[$i0];

        r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.'cmp'.PKIFreeText[] reason> = $r3;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 == $i1 goto label3;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r5 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r4);

        $r2 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] certReqId>;

        $r4 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r6 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r4);

        $r2[$i0] = $r6;

        $r2 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] checkAfter>;

        $r4 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r6 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r4);

        $r2[$i0] = $r6;

        $i1 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i1 <= 2 goto label2;

        $r3 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.'cmp'.PKIFreeText[] reason>;

        $r4 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(2);

        $r7 = staticinvoke <org.spongycastle.asn1.'cmp'.PKIFreeText: org.spongycastle.asn1.'cmp'.PKIFreeText getInstance(java.lang.Object)>($r4);

        $r3[$i0] = $r7;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }
    public static org.spongycastle.asn1.'cmp'.PollRepContent getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.'cmp'.PollRepContent r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.'cmp'.PollRepContent;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.'cmp'.PollRepContent) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.'cmp'.PollRepContent;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.'cmp'.PollRepContent: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public org.spongycastle.asn1.ASN1Integer getCertReqId(int)
    {
        org.spongycastle.asn1.'cmp'.PollRepContent r0;
        int $i0;
        org.spongycastle.asn1.ASN1Integer[] $r1;
        org.spongycastle.asn1.ASN1Integer $r2;

        r0 := @this: org.spongycastle.asn1.'cmp'.PollRepContent;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] certReqId>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public org.spongycastle.asn1.ASN1Integer getCheckAfter(int)
    {
        org.spongycastle.asn1.'cmp'.PollRepContent r0;
        int $i0;
        org.spongycastle.asn1.ASN1Integer[] $r1;
        org.spongycastle.asn1.ASN1Integer $r2;

        r0 := @this: org.spongycastle.asn1.'cmp'.PollRepContent;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] checkAfter>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public org.spongycastle.asn1.'cmp'.PKIFreeText getReason(int)
    {
        org.spongycastle.asn1.'cmp'.PollRepContent r0;
        int $i0;
        org.spongycastle.asn1.'cmp'.PKIFreeText[] $r1;
        org.spongycastle.asn1.'cmp'.PKIFreeText $r2;

        r0 := @this: org.spongycastle.asn1.'cmp'.PollRepContent;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.'cmp'.PKIFreeText[] reason>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public int size()
    {
        org.spongycastle.asn1.'cmp'.PollRepContent r0;
        org.spongycastle.asn1.ASN1Integer[] $r1;
        int $i0;

        r0 := @this: org.spongycastle.asn1.'cmp'.PollRepContent;

        $r1 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] certReqId>;

        $i0 = lengthof $r1;

        return $i0;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.'cmp'.PollRepContent r0;
        org.spongycastle.asn1.ASN1EncodableVector r1, r2;
        int i0, $i1;
        org.spongycastle.asn1.ASN1Integer[] $r3;
        org.spongycastle.asn1.ASN1Integer $r4;
        org.spongycastle.asn1.'cmp'.PKIFreeText[] $r5;
        org.spongycastle.asn1.'cmp'.PKIFreeText $r6;
        org.spongycastle.asn1.DERSequence $r7;

        r0 := @this: org.spongycastle.asn1.'cmp'.PollRepContent;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        i0 = 0;

     label1:
        $r3 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] certReqId>;

        $i1 = lengthof $r3;

        if i0 == $i1 goto label3;

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] certReqId>;

        $r4 = $r3[i0];

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r3 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.ASN1Integer[] checkAfter>;

        $r4 = $r3[i0];

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r5 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.'cmp'.PKIFreeText[] reason>;

        $r6 = $r5[i0];

        if $r6 == null goto label2;

        $r5 = r0.<org.spongycastle.asn1.'cmp'.PollRepContent: org.spongycastle.asn1.'cmp'.PKIFreeText[] reason>;

        $r6 = $r5[i0];

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r6);

     label2:
        $r7 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r7.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r2);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r7);

        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r7.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r7;
    }
