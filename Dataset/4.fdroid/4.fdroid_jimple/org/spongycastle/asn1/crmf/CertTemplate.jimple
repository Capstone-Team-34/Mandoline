org.spongycastle.asn1.crmf.CertTemplate extends org.spongycastle.asn1.ASN1Object
private org.spongycastle.asn1.x509.Extensions extensions
private org.spongycastle.asn1.x500.X500Name issuer
private org.spongycastle.asn1.DERBitString issuerUID
private org.spongycastle.asn1.x509.SubjectPublicKeyInfo publicKey
private org.spongycastle.asn1.ASN1Sequence seq
private org.spongycastle.asn1.ASN1Integer serialNumber
private org.spongycastle.asn1.x509.AlgorithmIdentifier signingAlg
private org.spongycastle.asn1.x500.X500Name subject
private org.spongycastle.asn1.DERBitString subjectUID
private org.spongycastle.asn1.crmf.OptionalValidity validity
private org.spongycastle.asn1.ASN1Integer version
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.crmf.CertTemplate r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        java.util.Enumeration $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.spongycastle.asn1.ASN1TaggedObject r4;
        int $i0;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        org.spongycastle.asn1.ASN1Integer $r8;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r9;
        org.spongycastle.asn1.x500.X500Name $r10;
        org.spongycastle.asn1.crmf.OptionalValidity $r11;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r12;
        org.spongycastle.asn1.DERBitString $r13;
        org.spongycastle.asn1.x509.Extensions $r14;

        r0 := @this: org.spongycastle.asn1.crmf.CertTemplate;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.ASN1Sequence seq> = $r1;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label13;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (org.spongycastle.asn1.ASN1TaggedObject) $r3;

        $i0 = virtualinvoke r4.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        lookupswitch($i0)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label12;
            default: goto label02;
        };

     label02:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown tag: ");

        $i0 = virtualinvoke r4.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label03:
        $r8 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r4, 0);

        r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.ASN1Integer version> = $r8;

        goto label01;

     label04:
        $r8 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r4, 0);

        r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.ASN1Integer serialNumber> = $r8;

        goto label01;

     label05:
        $r9 = staticinvoke <org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.x509.AlgorithmIdentifier getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r4, 0);

        r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x509.AlgorithmIdentifier signingAlg> = $r9;

        goto label01;

     label06:
        $r10 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r4, 1);

        r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x500.X500Name issuer> = $r10;

        goto label01;

     label07:
        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r4, 0);

        $r11 = staticinvoke <org.spongycastle.asn1.crmf.OptionalValidity: org.spongycastle.asn1.crmf.OptionalValidity getInstance(java.lang.Object)>($r1);

        r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.crmf.OptionalValidity validity> = $r11;

        goto label01;

     label08:
        $r10 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r4, 1);

        r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x500.X500Name subject> = $r10;

        goto label01;

     label09:
        $r12 = staticinvoke <org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r4, 0);

        r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x509.SubjectPublicKeyInfo publicKey> = $r12;

        goto label01;

     label10:
        $r13 = staticinvoke <org.spongycastle.asn1.DERBitString: org.spongycastle.asn1.DERBitString getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r4, 0);

        r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.DERBitString issuerUID> = $r13;

        goto label01;

     label11:
        $r13 = staticinvoke <org.spongycastle.asn1.DERBitString: org.spongycastle.asn1.DERBitString getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r4, 0);

        r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.DERBitString subjectUID> = $r13;

        goto label01;

     label12:
        $r14 = staticinvoke <org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extensions getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>(r4, 0);

        r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x509.Extensions extensions> = $r14;

        goto label01;

     label13:
        return;
    }
    public static org.spongycastle.asn1.crmf.CertTemplate getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.crmf.CertTemplate r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.crmf.CertTemplate;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.crmf.CertTemplate) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.crmf.CertTemplate;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.crmf.CertTemplate: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public org.spongycastle.asn1.x509.Extensions getExtensions()
    {
        org.spongycastle.asn1.crmf.CertTemplate r0;
        org.spongycastle.asn1.x509.Extensions r1;

        r0 := @this: org.spongycastle.asn1.crmf.CertTemplate;

        r1 = r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x509.Extensions extensions>;

        return r1;
    }
    public org.spongycastle.asn1.x500.X500Name getIssuer()
    {
        org.spongycastle.asn1.crmf.CertTemplate r0;
        org.spongycastle.asn1.x500.X500Name r1;

        r0 := @this: org.spongycastle.asn1.crmf.CertTemplate;

        r1 = r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x500.X500Name issuer>;

        return r1;
    }
    public org.spongycastle.asn1.DERBitString getIssuerUID()
    {
        org.spongycastle.asn1.crmf.CertTemplate r0;
        org.spongycastle.asn1.DERBitString r1;

        r0 := @this: org.spongycastle.asn1.crmf.CertTemplate;

        r1 = r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.DERBitString issuerUID>;

        return r1;
    }
    public org.spongycastle.asn1.x509.SubjectPublicKeyInfo getPublicKey()
    {
        org.spongycastle.asn1.crmf.CertTemplate r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo r1;

        r0 := @this: org.spongycastle.asn1.crmf.CertTemplate;

        r1 = r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x509.SubjectPublicKeyInfo publicKey>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Integer getSerialNumber()
    {
        org.spongycastle.asn1.crmf.CertTemplate r0;
        org.spongycastle.asn1.ASN1Integer r1;

        r0 := @this: org.spongycastle.asn1.crmf.CertTemplate;

        r1 = r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.ASN1Integer serialNumber>;

        return r1;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getSigningAlg()
    {
        org.spongycastle.asn1.crmf.CertTemplate r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.asn1.crmf.CertTemplate;

        r1 = r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x509.AlgorithmIdentifier signingAlg>;

        return r1;
    }
    public org.spongycastle.asn1.x500.X500Name getSubject()
    {
        org.spongycastle.asn1.crmf.CertTemplate r0;
        org.spongycastle.asn1.x500.X500Name r1;

        r0 := @this: org.spongycastle.asn1.crmf.CertTemplate;

        r1 = r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x500.X500Name subject>;

        return r1;
    }
    public org.spongycastle.asn1.DERBitString getSubjectUID()
    {
        org.spongycastle.asn1.crmf.CertTemplate r0;
        org.spongycastle.asn1.DERBitString r1;

        r0 := @this: org.spongycastle.asn1.crmf.CertTemplate;

        r1 = r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.DERBitString subjectUID>;

        return r1;
    }
    public org.spongycastle.asn1.crmf.OptionalValidity getValidity()
    {
        org.spongycastle.asn1.crmf.CertTemplate r0;
        org.spongycastle.asn1.crmf.OptionalValidity r1;

        r0 := @this: org.spongycastle.asn1.crmf.CertTemplate;

        r1 = r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.crmf.OptionalValidity validity>;

        return r1;
    }
    public int getVersion()
    {
        org.spongycastle.asn1.crmf.CertTemplate r0;
        org.spongycastle.asn1.ASN1Integer $r1;
        java.math.BigInteger $r2;
        int $i0;

        r0 := @this: org.spongycastle.asn1.crmf.CertTemplate;

        $r1 = r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.ASN1Integer version>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        return $i0;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.crmf.CertTemplate r0;
        org.spongycastle.asn1.ASN1Sequence r1;

        r0 := @this: org.spongycastle.asn1.crmf.CertTemplate;

        r1 = r0.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.ASN1Sequence seq>;

        return r1;
    }
