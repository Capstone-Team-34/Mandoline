org.spongycastle.asn1.esf.OtherHash extends org.spongycastle.asn1.ASN1Object implements org.spongycastle.asn1.ASN1Choice
private org.spongycastle.asn1.esf.OtherHashAlgAndValue otherHash
private org.spongycastle.asn1.ASN1OctetString sha1Hash
    private void <init>(org.spongycastle.asn1.ASN1OctetString)
    {
        org.spongycastle.asn1.esf.OtherHash r0;
        org.spongycastle.asn1.ASN1OctetString $r1;

        r0 := @this: org.spongycastle.asn1.esf.OtherHash;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1OctetString;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.esf.OtherHash: org.spongycastle.asn1.ASN1OctetString sha1Hash> = $r1;

        return;
    }
    public void <init>(org.spongycastle.asn1.esf.OtherHashAlgAndValue)
    {
        org.spongycastle.asn1.esf.OtherHash r0;
        org.spongycastle.asn1.esf.OtherHashAlgAndValue $r1;

        r0 := @this: org.spongycastle.asn1.esf.OtherHash;

        $r1 := @parameter0: org.spongycastle.asn1.esf.OtherHashAlgAndValue;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.esf.OtherHash: org.spongycastle.asn1.esf.OtherHashAlgAndValue otherHash> = $r1;

        return;
    }
    public void <init>(byte[])
    {
        org.spongycastle.asn1.esf.OtherHash r0;
        byte[] $r1;
        org.spongycastle.asn1.DEROctetString $r2;

        r0 := @this: org.spongycastle.asn1.esf.OtherHash;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = new org.spongycastle.asn1.DEROctetString;

        specialinvoke $r2.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r1);

        r0.<org.spongycastle.asn1.esf.OtherHash: org.spongycastle.asn1.ASN1OctetString sha1Hash> = $r2;

        return;
    }
    public static org.spongycastle.asn1.esf.OtherHash getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.esf.OtherHashAlgAndValue $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.esf.OtherHash r2;
        org.spongycastle.asn1.ASN1OctetString r3;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.esf.OtherHash;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.esf.OtherHash) r1;

        return r2;

     label1:
        $z0 = r1 instanceof org.spongycastle.asn1.ASN1OctetString;

        if $z0 == 0 goto label2;

        r2 = new org.spongycastle.asn1.esf.OtherHash;

        r3 = (org.spongycastle.asn1.ASN1OctetString) r1;

        specialinvoke r2.<org.spongycastle.asn1.esf.OtherHash: void <init>(org.spongycastle.asn1.ASN1OctetString)>(r3);

        return r2;

     label2:
        r2 = new org.spongycastle.asn1.esf.OtherHash;

        $r0 = staticinvoke <org.spongycastle.asn1.esf.OtherHashAlgAndValue: org.spongycastle.asn1.esf.OtherHashAlgAndValue getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.esf.OtherHash: void <init>(org.spongycastle.asn1.esf.OtherHashAlgAndValue)>($r0);

        return r2;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()
    {
        org.spongycastle.asn1.esf.OtherHash r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.esf.OtherHashAlgAndValue $r3;

        r0 := @this: org.spongycastle.asn1.esf.OtherHash;

        $r3 = r0.<org.spongycastle.asn1.esf.OtherHash: org.spongycastle.asn1.esf.OtherHashAlgAndValue otherHash>;

        if $r3 != null goto label1;

        $r2 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r1 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier idSHA1>;

        specialinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        return $r2;

     label1:
        $r3 = r0.<org.spongycastle.asn1.esf.OtherHash: org.spongycastle.asn1.esf.OtherHashAlgAndValue otherHash>;

        $r2 = virtualinvoke $r3.<org.spongycastle.asn1.esf.OtherHashAlgAndValue: org.spongycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()>();

        return $r2;
    }
    public byte[] getHashValue()
    {
        org.spongycastle.asn1.esf.OtherHash r0;
        org.spongycastle.asn1.esf.OtherHashAlgAndValue $r1;
        org.spongycastle.asn1.ASN1OctetString $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.asn1.esf.OtherHash;

        $r1 = r0.<org.spongycastle.asn1.esf.OtherHash: org.spongycastle.asn1.esf.OtherHashAlgAndValue otherHash>;

        if $r1 != null goto label1;

        $r2 = r0.<org.spongycastle.asn1.esf.OtherHash: org.spongycastle.asn1.ASN1OctetString sha1Hash>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        return $r3;

     label1:
        $r1 = r0.<org.spongycastle.asn1.esf.OtherHash: org.spongycastle.asn1.esf.OtherHashAlgAndValue otherHash>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.esf.OtherHashAlgAndValue: org.spongycastle.asn1.ASN1OctetString getHashValue()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        return $r3;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.esf.OtherHash r0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.esf.OtherHashAlgAndValue $r2;
        org.spongycastle.asn1.ASN1OctetString r3;

        r0 := @this: org.spongycastle.asn1.esf.OtherHash;

        $r2 = r0.<org.spongycastle.asn1.esf.OtherHash: org.spongycastle.asn1.esf.OtherHashAlgAndValue otherHash>;

        if $r2 != null goto label1;

        r3 = r0.<org.spongycastle.asn1.esf.OtherHash: org.spongycastle.asn1.ASN1OctetString sha1Hash>;

        return r3;

     label1:
        $r2 = r0.<org.spongycastle.asn1.esf.OtherHash: org.spongycastle.asn1.esf.OtherHashAlgAndValue otherHash>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.esf.OtherHashAlgAndValue: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        return $r1;
    }
