org.spongycastle.asn1.esf.OtherRevVals extends org.spongycastle.asn1.ASN1Object
private org.spongycastle.asn1.ASN1ObjectIdentifier otherRevValType
private org.spongycastle.asn1.ASN1Encodable otherRevVals
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.asn1.esf.OtherRevVals r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;

        r0 := @this: org.spongycastle.asn1.esf.OtherRevVals;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1Encodable;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.esf.OtherRevVals: org.spongycastle.asn1.ASN1ObjectIdentifier otherRevValType> = $r1;

        r0.<org.spongycastle.asn1.esf.OtherRevVals: org.spongycastle.asn1.ASN1Encodable otherRevVals> = $r2;

        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.esf.OtherRevVals r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        java.io.IOException r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        org.spongycastle.asn1.ASN1Encodable $r6;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r7;
        org.spongycastle.asn1.ASN1Primitive $r8;
        byte[] $r9;
        java.lang.IllegalStateException $r10;

        r0 := @this: org.spongycastle.asn1.esf.OtherRevVals;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 == 2 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad sequence size: ");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r6 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r7 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r6;

        r0.<org.spongycastle.asn1.esf.OtherRevVals: org.spongycastle.asn1.ASN1ObjectIdentifier otherRevValType> = $r7;

     label2:
        $r6 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r8 = interfaceinvoke $r6.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded(java.lang.String)>("DER");

        $r8 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r9);

     label3:
        r0.<org.spongycastle.asn1.esf.OtherRevVals: org.spongycastle.asn1.ASN1Encodable otherRevVals> = $r8;

        return;

     label4:
        r2 := @caughtexception;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>()>();

        throw $r10;

        catch java.io.IOException from label2 to label3 with label4;
    }
    public static org.spongycastle.asn1.esf.OtherRevVals getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.esf.OtherRevVals r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.esf.OtherRevVals;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.esf.OtherRevVals) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.esf.OtherRevVals;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.esf.OtherRevVals: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getOtherRevValType()
    {
        org.spongycastle.asn1.esf.OtherRevVals r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier r1;

        r0 := @this: org.spongycastle.asn1.esf.OtherRevVals;

        r1 = r0.<org.spongycastle.asn1.esf.OtherRevVals: org.spongycastle.asn1.ASN1ObjectIdentifier otherRevValType>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Encodable getOtherRevVals()
    {
        org.spongycastle.asn1.esf.OtherRevVals r0;
        org.spongycastle.asn1.ASN1Encodable r1;

        r0 := @this: org.spongycastle.asn1.esf.OtherRevVals;

        r1 = r0.<org.spongycastle.asn1.esf.OtherRevVals: org.spongycastle.asn1.ASN1Encodable otherRevVals>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.esf.OtherRevVals r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.DERSequence $r4;

        r0 := @this: org.spongycastle.asn1.esf.OtherRevVals;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.esf.OtherRevVals: org.spongycastle.asn1.ASN1ObjectIdentifier otherRevValType>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r3 = r0.<org.spongycastle.asn1.esf.OtherRevVals: org.spongycastle.asn1.ASN1Encodable otherRevVals>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r4 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r4.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r4;
    }
