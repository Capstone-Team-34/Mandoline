org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial extends org.spongycastle.asn1.ASN1Object
private org.spongycastle.asn1.ASN1OctetString addedukm
private org.spongycastle.asn1.cms.OriginatorPublicKey ephemeralPublicKey
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.cms.OriginatorPublicKey $r4;
        org.spongycastle.asn1.ASN1TaggedObject $r5;
        org.spongycastle.asn1.ASN1OctetString $r6;

        r0 := @this: org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 == 1 goto label1;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 == 2 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Sequence has incorrect number of elements");

        throw $r2;

     label1:
        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r4 = staticinvoke <org.spongycastle.asn1.cms.OriginatorPublicKey: org.spongycastle.asn1.cms.OriginatorPublicKey getInstance(java.lang.Object)>($r3);

        r0.<org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.cms.OriginatorPublicKey ephemeralPublicKey> = $r4;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 <= 1 goto label2;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r5 = (org.spongycastle.asn1.ASN1TaggedObject) $r3;

        $r6 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r5, 1);

        r0.<org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.ASN1OctetString addedukm> = $r6;

     label2:
        return;
    }
    public void <init>(org.spongycastle.asn1.cms.OriginatorPublicKey, org.spongycastle.asn1.ASN1OctetString)
    {
        org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial r0;
        org.spongycastle.asn1.cms.OriginatorPublicKey $r1;
        org.spongycastle.asn1.ASN1OctetString $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial;

        $r1 := @parameter0: org.spongycastle.asn1.cms.OriginatorPublicKey;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1OctetString;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Ephemeral public key cannot be null");

        throw $r3;

     label1:
        r0.<org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.cms.OriginatorPublicKey ephemeralPublicKey> = $r1;

        r0.<org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.ASN1OctetString addedukm> = $r2;

        return;
    }
    public static org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public static org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial $r2;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r0, $z0);

        $r2 = staticinvoke <org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial getInstance(java.lang.Object)>($r1);

        return $r2;
    }
    public org.spongycastle.asn1.ASN1OctetString getAddedukm()
    {
        org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial r0;
        org.spongycastle.asn1.ASN1OctetString r1;

        r0 := @this: org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial;

        r1 = r0.<org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.ASN1OctetString addedukm>;

        return r1;
    }
    public org.spongycastle.asn1.cms.OriginatorPublicKey getEphemeralPublicKey()
    {
        org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial r0;
        org.spongycastle.asn1.cms.OriginatorPublicKey r1;

        r0 := @this: org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial;

        r1 = r0.<org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.cms.OriginatorPublicKey ephemeralPublicKey>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.ASN1OctetString $r2;
        org.spongycastle.asn1.cms.OriginatorPublicKey $r3;
        org.spongycastle.asn1.DERTaggedObject $r4;
        org.spongycastle.asn1.DERSequence $r5;

        r0 := @this: org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = r0.<org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.cms.OriginatorPublicKey ephemeralPublicKey>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r2 = r0.<org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.ASN1OctetString addedukm>;

        if $r2 == null goto label1;

        $r4 = new org.spongycastle.asn1.DERTaggedObject;

        $r2 = r0.<org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.ASN1OctetString addedukm>;

        specialinvoke $r4.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(1, 0, $r2);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

     label1:
        $r5 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r5.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r5;
    }
