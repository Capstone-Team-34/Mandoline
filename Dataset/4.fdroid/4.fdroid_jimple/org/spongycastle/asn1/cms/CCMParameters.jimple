org.spongycastle.asn1.cms.CCMParameters extends org.spongycastle.asn1.ASN1Object
private int icvLen
private byte[] nonce
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.cms.CCMParameters r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.ASN1OctetString $r3;
        byte[] $r4;
        int $i0;
        org.spongycastle.asn1.ASN1Integer $r5;
        java.math.BigInteger $r6;

        r0 := @this: org.spongycastle.asn1.cms.CCMParameters;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r0.<org.spongycastle.asn1.cms.CCMParameters: byte[] nonce> = $r4;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 != 2 goto label1;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r5 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        r0.<org.spongycastle.asn1.cms.CCMParameters: int icvLen> = $i0;

        return;

     label1:
        r0.<org.spongycastle.asn1.cms.CCMParameters: int icvLen> = 12;

        return;
    }
    public void <init>(byte[], int)
    {
        org.spongycastle.asn1.cms.CCMParameters r0;
        byte[] $r1;
        int $i0;

        r0 := @this: org.spongycastle.asn1.cms.CCMParameters;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        r0.<org.spongycastle.asn1.cms.CCMParameters: byte[] nonce> = $r1;

        r0.<org.spongycastle.asn1.cms.CCMParameters: int icvLen> = $i0;

        return;
    }
    public static org.spongycastle.asn1.cms.CCMParameters getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.cms.CCMParameters r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.cms.CCMParameters;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.cms.CCMParameters) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.cms.CCMParameters;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.cms.CCMParameters: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public int getIcvLen()
    {
        org.spongycastle.asn1.cms.CCMParameters r0;
        int i0;

        r0 := @this: org.spongycastle.asn1.cms.CCMParameters;

        i0 = r0.<org.spongycastle.asn1.cms.CCMParameters: int icvLen>;

        return i0;
    }
    public byte[] getNonce()
    {
        org.spongycastle.asn1.cms.CCMParameters r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.cms.CCMParameters;

        $r1 = r0.<org.spongycastle.asn1.cms.CCMParameters: byte[] nonce>;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        return $r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.cms.CCMParameters r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.DEROctetString $r2;
        byte[] $r3;
        int $i0;
        org.spongycastle.asn1.ASN1Integer $r4;
        long $l1;
        org.spongycastle.asn1.DERSequence $r5;

        r0 := @this: org.spongycastle.asn1.cms.CCMParameters;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = new org.spongycastle.asn1.DEROctetString;

        $r3 = r0.<org.spongycastle.asn1.cms.CCMParameters: byte[] nonce>;

        specialinvoke $r2.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r3);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $i0 = r0.<org.spongycastle.asn1.cms.CCMParameters: int icvLen>;

        if $i0 == 12 goto label1;

        $r4 = new org.spongycastle.asn1.ASN1Integer;

        $i0 = r0.<org.spongycastle.asn1.cms.CCMParameters: int icvLen>;

        $l1 = (long) $i0;

        specialinvoke $r4.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>($l1);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

     label1:
        $r5 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r5.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r5;
    }
