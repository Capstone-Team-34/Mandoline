org.spongycastle.asn1.cms.Evidence extends org.spongycastle.asn1.ASN1Object implements org.spongycastle.asn1.ASN1Choice
private org.spongycastle.asn1.cms.TimeStampTokenEvidence tstEvidence
    private void <init>(org.spongycastle.asn1.ASN1TaggedObject)
    {
        org.spongycastle.asn1.cms.Evidence r0;
        org.spongycastle.asn1.ASN1TaggedObject $r1;
        int $i0;
        org.spongycastle.asn1.cms.TimeStampTokenEvidence $r2;

        r0 := @this: org.spongycastle.asn1.cms.Evidence;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        if $i0 != 0 goto label1;

        $r2 = staticinvoke <org.spongycastle.asn1.cms.TimeStampTokenEvidence: org.spongycastle.asn1.cms.TimeStampTokenEvidence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r1, 0);

        r0.<org.spongycastle.asn1.cms.Evidence: org.spongycastle.asn1.cms.TimeStampTokenEvidence tstEvidence> = $r2;

     label1:
        return;
    }
    public void <init>(org.spongycastle.asn1.cms.TimeStampTokenEvidence)
    {
        org.spongycastle.asn1.cms.Evidence r0;
        org.spongycastle.asn1.cms.TimeStampTokenEvidence $r1;

        r0 := @this: org.spongycastle.asn1.cms.Evidence;

        $r1 := @parameter0: org.spongycastle.asn1.cms.TimeStampTokenEvidence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.cms.Evidence: org.spongycastle.asn1.cms.TimeStampTokenEvidence tstEvidence> = $r1;

        return;
    }
    public static org.spongycastle.asn1.cms.Evidence getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.cms.Evidence r2;
        java.lang.IllegalArgumentException $r3;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z0 = r1 instanceof org.spongycastle.asn1.cms.Evidence;

        if $z0 == 0 goto label2;

     label1:
        r2 = (org.spongycastle.asn1.cms.Evidence) r1;

        return r2;

     label2:
        $z0 = r1 instanceof org.spongycastle.asn1.ASN1TaggedObject;

        if $z0 == 0 goto label3;

        r2 = new org.spongycastle.asn1.cms.Evidence;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.cms.Evidence: void <init>(org.spongycastle.asn1.ASN1TaggedObject)>($r0);

        return r2;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown object in getInstance");

        throw $r3;
    }
    public org.spongycastle.asn1.cms.TimeStampTokenEvidence getTstEvidence()
    {
        org.spongycastle.asn1.cms.Evidence r0;
        org.spongycastle.asn1.cms.TimeStampTokenEvidence r1;

        r0 := @this: org.spongycastle.asn1.cms.Evidence;

        r1 = r0.<org.spongycastle.asn1.cms.Evidence: org.spongycastle.asn1.cms.TimeStampTokenEvidence tstEvidence>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.cms.Evidence r0;
        org.spongycastle.asn1.cms.TimeStampTokenEvidence $r1;
        org.spongycastle.asn1.DERTaggedObject $r2;

        r0 := @this: org.spongycastle.asn1.cms.Evidence;

        $r1 = r0.<org.spongycastle.asn1.cms.Evidence: org.spongycastle.asn1.cms.TimeStampTokenEvidence tstEvidence>;

        if $r1 == null goto label1;

        $r2 = new org.spongycastle.asn1.DERTaggedObject;

        $r1 = r0.<org.spongycastle.asn1.cms.Evidence: org.spongycastle.asn1.cms.TimeStampTokenEvidence tstEvidence>;

        specialinvoke $r2.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 0, $r1);

        return $r2;

     label1:
        return null;
    }
