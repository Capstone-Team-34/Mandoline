org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge extends org.spongycastle.asn1.ASN1Object
private final org.spongycastle.asn1.ASN1Sequence pkacSeq
private final org.spongycastle.asn1.mozilla.PublicKeyAndChallenge pubKeyAndChal
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.mozilla.PublicKeyAndChallenge $r3;

        r0 := @this: org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge: org.spongycastle.asn1.ASN1Sequence pkacSeq> = $r1;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r3 = staticinvoke <org.spongycastle.asn1.mozilla.PublicKeyAndChallenge: org.spongycastle.asn1.mozilla.PublicKeyAndChallenge getInstance(java.lang.Object)>($r2);

        r0.<org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge: org.spongycastle.asn1.mozilla.PublicKeyAndChallenge pubKeyAndChal> = $r3;

        return;
    }
    public static org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public org.spongycastle.asn1.mozilla.PublicKeyAndChallenge getPublicKeyAndChallenge()
    {
        org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge r0;
        org.spongycastle.asn1.mozilla.PublicKeyAndChallenge r1;

        r0 := @this: org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge;

        r1 = r0.<org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge: org.spongycastle.asn1.mozilla.PublicKeyAndChallenge pubKeyAndChal>;

        return r1;
    }
    public org.spongycastle.asn1.DERBitString getSignature()
    {
        org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.DERBitString $r3;

        r0 := @this: org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge;

        $r1 = r0.<org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge: org.spongycastle.asn1.ASN1Sequence pkacSeq>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(2);

        $r3 = staticinvoke <org.spongycastle.asn1.DERBitString: org.spongycastle.asn1.DERBitString getInstance(java.lang.Object)>($r2);

        return $r3;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()
    {
        org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;

        r0 := @this: org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge;

        $r1 = r0.<org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge: org.spongycastle.asn1.ASN1Sequence pkacSeq>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r3 = staticinvoke <org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)>($r2);

        return $r3;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge r0;
        org.spongycastle.asn1.ASN1Sequence r1;

        r0 := @this: org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge;

        r1 = r0.<org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge: org.spongycastle.asn1.ASN1Sequence pkacSeq>;

        return r1;
    }
