org.spongycastle.asn1.ASN1GeneralizedTime extends org.spongycastle.asn1.ASN1Primitive
private byte[] time
    public void <init>(java.lang.String)
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        java.lang.String $r1;
        java.text.ParseException r2;
        byte[] $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        $r3 = staticinvoke <org.spongycastle.util.Strings: byte[] toByteArray(java.lang.String)>($r1);

        r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time> = $r3;

     label1:
        virtualinvoke r0.<org.spongycastle.asn1.ASN1GeneralizedTime: java.util.Date getDate()>();

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid date string: ");

        $r1 = virtualinvoke r2.<java.text.ParseException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.text.ParseException from label1 to label2 with label3;
    }
    public void <init>(java.util.Date)
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        java.util.Date $r1;
        java.text.SimpleDateFormat r2;
        java.util.SimpleTimeZone $r3;
        java.lang.String $r4;
        byte[] $r5;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        $r1 := @parameter0: java.util.Date;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        r2 = new java.text.SimpleDateFormat;

        specialinvoke r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMddHHmmss\'Z\'");

        $r3 = new java.util.SimpleTimeZone;

        specialinvoke $r3.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "Z");

        virtualinvoke r2.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r3);

        $r4 = virtualinvoke r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r1);

        $r5 = staticinvoke <org.spongycastle.util.Strings: byte[] toByteArray(java.lang.String)>($r4);

        r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time> = $r5;

        return;
    }
    public void <init>(java.util.Date, java.util.Locale)
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        java.util.Date $r1;
        java.util.Locale $r2;
        java.text.SimpleDateFormat r3;
        java.util.SimpleTimeZone $r4;
        java.lang.String $r5;
        byte[] $r6;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: java.util.Locale;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        r3 = new java.text.SimpleDateFormat;

        specialinvoke r3.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyyMMddHHmmss\'Z\'", $r2);

        $r4 = new java.util.SimpleTimeZone;

        specialinvoke $r4.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "Z");

        virtualinvoke r3.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r4);

        $r5 = virtualinvoke r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r1);

        $r6 = staticinvoke <org.spongycastle.util.Strings: byte[] toByteArray(java.lang.String)>($r5);

        r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time> = $r6;

        return;
    }
    void <init>(byte[])
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Primitive: void <init>()>();

        r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time> = $r1;

        return;
    }
    private java.lang.String calculateGMTOffset()
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        int i0, $i1, $i2;
        java.lang.String r1;
        java.util.TimeZone $r2;
        boolean $z0;
        java.util.Date $r3;
        java.lang.StringBuilder $r4;
        java.text.ParseException $r5;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        r1 = "+";

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $i1 = virtualinvoke $r2.<java.util.TimeZone: int getRawOffset()>();

        i0 = $i1;

        if $i1 >= 0 goto label01;

        r1 = "-";

        i0 = neg $i1;

     label01:
        $i1 = i0 / 3600000;

        $i2 = $i1 * 60;

        $i2 = $i2 * 60;

        $i2 = $i2 * 1000;

        i0 = i0 - $i2;

        i0 = i0 / 60000;

     label02:
        $z0 = virtualinvoke $r2.<java.util.TimeZone: boolean useDaylightTime()>();

     label03:
        if $z0 == 0 goto label09;

     label04:
        $r3 = virtualinvoke r0.<org.spongycastle.asn1.ASN1GeneralizedTime: java.util.Date getDate()>();

        $z0 = virtualinvoke $r2.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>($r3);

     label05:
        if $z0 == 0 goto label09;

     label06:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("+");

     label07:
        if $z0 == 0 goto label10;

        $i2 = 1;

     label08:
        $i1 = $i1 + $i2;

     label09:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = specialinvoke r0.<org.spongycastle.asn1.ASN1GeneralizedTime: java.lang.String convert(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        r1 = specialinvoke r0.<org.spongycastle.asn1.ASN1GeneralizedTime: java.lang.String convert(int)>(i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return r1;

     label10:
        $i2 = -1;

        goto label08;

     label11:
        $r5 := @caughtexception;

        goto label09;

        catch java.text.ParseException from label02 to label03 with label11;
        catch java.text.ParseException from label04 to label05 with label11;
        catch java.text.ParseException from label06 to label07 with label11;
    }
    private java.lang.String convert(int)
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        $i0 := @parameter0: int;

        if $i0 >= 10 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r2;
    }
    public static org.spongycastle.asn1.ASN1GeneralizedTime getInstance(java.lang.Object)
    {
        java.lang.Exception r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1GeneralizedTime r2;
        byte[] r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.Class $r8;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z0 = r1 instanceof org.spongycastle.asn1.ASN1GeneralizedTime;

        if $z0 == 0 goto label2;

     label1:
        r2 = (org.spongycastle.asn1.ASN1GeneralizedTime) r1;

        return r2;

     label2:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label7;

     label3:
        r3 = (byte[]) r1;

     label4:
        $r4 = staticinvoke <org.spongycastle.asn1.ASN1GeneralizedTime: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>(r3);

        r2 = (org.spongycastle.asn1.ASN1GeneralizedTime) $r4;

     label5:
        return r2;

     label6:
        r0 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encoding error in getInstance: ");

        $r7 = virtualinvoke r0.<java.lang.Exception: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label7:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal object in getInstance: ");

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

        catch java.lang.Exception from label3 to label4 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }
    public static org.spongycastle.asn1.ASN1GeneralizedTime getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.ASN1GeneralizedTime $r2;
        org.spongycastle.asn1.ASN1OctetString r3;
        byte[] $r4;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1Primitive getObject()>();

        if $z0 != 0 goto label1;

        $z0 = $r1 instanceof org.spongycastle.asn1.ASN1GeneralizedTime;

        if $z0 == 0 goto label2;

     label1:
        $r2 = staticinvoke <org.spongycastle.asn1.ASN1GeneralizedTime: org.spongycastle.asn1.ASN1GeneralizedTime getInstance(java.lang.Object)>($r1);

        return $r2;

     label2:
        $r2 = new org.spongycastle.asn1.ASN1GeneralizedTime;

        r3 = (org.spongycastle.asn1.ASN1OctetString) $r1;

        $r4 = virtualinvoke r3.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r2.<org.spongycastle.asn1.ASN1GeneralizedTime: void <init>(byte[])>($r4);

        return $r2;
    }
    private boolean hasFractionalSeconds()
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        int i0, $i1;
        byte[] $r1;
        byte $b2;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        i0 = 0;

     label1:
        $r1 = r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time>;

        $i1 = lengthof $r1;

        if i0 == $i1 goto label3;

        $r1 = r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time>;

        $b2 = $r1[i0];

        if $b2 != 46 goto label2;

        if i0 != 14 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }
    boolean asn1Equals(org.spongycastle.asn1.ASN1Primitive)
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        byte[] $r1, $r3;
        boolean $z0;
        org.spongycastle.asn1.ASN1Primitive r2;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        r2 := @parameter0: org.spongycastle.asn1.ASN1Primitive;

        $z0 = r2 instanceof org.spongycastle.asn1.ASN1GeneralizedTime;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time>;

        r0 = (org.spongycastle.asn1.ASN1GeneralizedTime) r2;

        $r1 = r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time>;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r3, $r1);

        return $z0;
    }
    void encode(org.spongycastle.asn1.ASN1OutputStream) throws java.io.IOException
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        org.spongycastle.asn1.ASN1OutputStream $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1OutputStream;

        $r2 = r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time>;

        virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])>(24, $r2);

        return;
    }
    int encodedLength()
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        int i0, $i1;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        $r1 = r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.spongycastle.asn1.StreamUtil: int calculateBodyLength(int)>(i0);

        $i1 = $i1 + 1;

        i0 = $i1 + i0;

        return i0;
    }
    public java.util.Date getDate() throws java.text.ParseException
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        byte[] $r1;
        java.lang.String $r2, r3, $r7;
        boolean $z0;
        java.text.SimpleDateFormat r4;
        java.util.SimpleTimeZone $r5;
        int i0, $i1;
        char $c2;
        java.lang.StringBuilder $r6;
        java.util.Date $r8;
        java.util.TimeZone $r9;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        $r1 = r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time>;

        $r2 = staticinvoke <org.spongycastle.util.Strings: java.lang.String fromByteArray(byte[])>($r1);

        r3 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("Z");

        if $z0 == 0 goto label07;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.ASN1GeneralizedTime: boolean hasFractionalSeconds()>();

        if $z0 == 0 goto label06;

        r4 = new java.text.SimpleDateFormat;

        specialinvoke r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMddHHmmss.SSS\'Z\'");

     label01:
        $r5 = new java.util.SimpleTimeZone;

        specialinvoke $r5.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "Z");

        virtualinvoke r4.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r5);

     label02:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.ASN1GeneralizedTime: boolean hasFractionalSeconds()>();

        if $z0 == 0 goto label05;

        $r2 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(14);

        i0 = 1;

     label03:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i0 >= $i1 goto label04;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i0);

        if 48 > $c2 goto label04;

        if $c2 <= 57 goto label14;

     label04:
        $i1 = i0 + -1;

        if $i1 <= 3 goto label15;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, 14);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r8 = virtualinvoke r4.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r3);

        return $r8;

     label06:
        r4 = new java.text.SimpleDateFormat;

        specialinvoke r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMddHHmmss\'Z\'");

        goto label01;

     label07:
        i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(45);

        if i0 > 0 goto label08;

        i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(43);

        if i0 <= 0 goto label11;

     label08:
        r3 = virtualinvoke r0.<org.spongycastle.asn1.ASN1GeneralizedTime: java.lang.String getTime()>();

        $z0 = specialinvoke r0.<org.spongycastle.asn1.ASN1GeneralizedTime: boolean hasFractionalSeconds()>();

        if $z0 == 0 goto label10;

        r4 = new java.text.SimpleDateFormat;

        specialinvoke r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMddHHmmss.SSSz");

     label09:
        $r5 = new java.util.SimpleTimeZone;

        specialinvoke $r5.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "Z");

        virtualinvoke r4.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r5);

        goto label02;

     label10:
        r4 = new java.text.SimpleDateFormat;

        specialinvoke r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMddHHmmssz");

        goto label09;

     label11:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.ASN1GeneralizedTime: boolean hasFractionalSeconds()>();

        if $z0 == 0 goto label13;

        r4 = new java.text.SimpleDateFormat;

        specialinvoke r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMddHHmmss.SSS");

     label12:
        $r5 = new java.util.SimpleTimeZone;

        $r9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = virtualinvoke $r9.<java.util.TimeZone: java.lang.String getID()>();

        specialinvoke $r5.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, $r2);

        virtualinvoke r4.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r5);

        goto label02;

     label13:
        r4 = new java.text.SimpleDateFormat;

        specialinvoke r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMddHHmmss");

        goto label12;

     label14:
        i0 = i0 + 1;

        goto label03;

     label15:
        $i1 = i0 + -1;

        if $i1 != 1 goto label16;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, 14);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label05;

     label16:
        $i1 = i0 + -1;

        if $i1 != 2 goto label05;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, 14);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label05;
    }
    public java.lang.String getTime()
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        byte[] $r1;
        java.lang.String $r2, $r4;
        int $i0, $i2;
        char $c1;
        java.lang.StringBuilder $r3;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        $r1 = r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time>;

        $r2 = staticinvoke <org.spongycastle.util.Strings: java.lang.String fromByteArray(byte[])>($r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        if $c1 != 90 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT+00:00");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label1:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + -5;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        if $c1 == 45 goto label2;

        if $c1 != 43 goto label3;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT");

        $i2 = $i0 + 3;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = $i0 + 3;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label3:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + -3;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        if $c1 == 45 goto label4;

        if $c1 != 43 goto label5;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":00");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = specialinvoke r0.<org.spongycastle.asn1.ASN1GeneralizedTime: java.lang.String calculateGMTOffset()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public java.lang.String getTimeString()
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        java.lang.String $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        $r2 = r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time>;

        $r1 = staticinvoke <org.spongycastle.util.Strings: java.lang.String fromByteArray(byte[])>($r2);

        return $r1;
    }
    public int hashCode()
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;
        int $i0;
        byte[] $r1;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        $r1 = r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] time>;

        $i0 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(byte[])>($r1);

        return $i0;
    }
    boolean isConstructed()
    {
        org.spongycastle.asn1.ASN1GeneralizedTime r0;

        r0 := @this: org.spongycastle.asn1.ASN1GeneralizedTime;

        return 0;
    }
