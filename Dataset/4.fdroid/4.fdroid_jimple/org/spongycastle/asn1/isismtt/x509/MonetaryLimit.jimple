org.spongycastle.asn1.isismtt.x509.MonetaryLimit extends org.spongycastle.asn1.ASN1Object
org.spongycastle.asn1.ASN1Integer amount
org.spongycastle.asn1.DERPrintableString currency
org.spongycastle.asn1.ASN1Integer exponent
    public void <init>(java.lang.String, int, int)
    {
        org.spongycastle.asn1.isismtt.x509.MonetaryLimit r0;
        java.lang.String $r1;
        int $i0, $i1;
        org.spongycastle.asn1.DERPrintableString $r2;
        org.spongycastle.asn1.ASN1Integer $r3;
        long $l2;

        r0 := @this: org.spongycastle.asn1.isismtt.x509.MonetaryLimit;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = new org.spongycastle.asn1.DERPrintableString;

        specialinvoke $r2.<org.spongycastle.asn1.DERPrintableString: void <init>(java.lang.String,boolean)>($r1, 1);

        r0.<org.spongycastle.asn1.isismtt.x509.MonetaryLimit: org.spongycastle.asn1.DERPrintableString currency> = $r2;

        $r3 = new org.spongycastle.asn1.ASN1Integer;

        $l2 = (long) $i0;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>($l2);

        r0.<org.spongycastle.asn1.isismtt.x509.MonetaryLimit: org.spongycastle.asn1.ASN1Integer amount> = $r3;

        $r3 = new org.spongycastle.asn1.ASN1Integer;

        $l2 = (long) $i1;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>($l2);

        r0.<org.spongycastle.asn1.isismtt.x509.MonetaryLimit: org.spongycastle.asn1.ASN1Integer exponent> = $r3;

        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.isismtt.x509.MonetaryLimit r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.util.Enumeration $r5;
        java.lang.Object $r6;
        org.spongycastle.asn1.DERPrintableString $r7;
        org.spongycastle.asn1.ASN1Integer $r8;

        r0 := @this: org.spongycastle.asn1.isismtt.x509.MonetaryLimit;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 == 3 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad sequence size: ");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r7 = staticinvoke <org.spongycastle.asn1.DERPrintableString: org.spongycastle.asn1.DERPrintableString getInstance(java.lang.Object)>($r6);

        r0.<org.spongycastle.asn1.isismtt.x509.MonetaryLimit: org.spongycastle.asn1.DERPrintableString currency> = $r7;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r8 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r6);

        r0.<org.spongycastle.asn1.isismtt.x509.MonetaryLimit: org.spongycastle.asn1.ASN1Integer amount> = $r8;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r8 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r6);

        r0.<org.spongycastle.asn1.isismtt.x509.MonetaryLimit: org.spongycastle.asn1.ASN1Integer exponent> = $r8;

        return;
    }
    public static org.spongycastle.asn1.isismtt.x509.MonetaryLimit getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.isismtt.x509.MonetaryLimit r2;
        java.lang.IllegalArgumentException $r3;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $z0 = r1 instanceof org.spongycastle.asn1.isismtt.x509.MonetaryLimit;

        if $z0 == 0 goto label2;

     label1:
        r2 = (org.spongycastle.asn1.isismtt.x509.MonetaryLimit) r1;

        return r2;

     label2:
        $z0 = r1 instanceof org.spongycastle.asn1.ASN1Sequence;

        if $z0 == 0 goto label3;

        r2 = new org.spongycastle.asn1.isismtt.x509.MonetaryLimit;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.isismtt.x509.MonetaryLimit: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown object in getInstance");

        throw $r3;
    }
    public java.math.BigInteger getAmount()
    {
        org.spongycastle.asn1.isismtt.x509.MonetaryLimit r0;
        java.math.BigInteger $r1;
        org.spongycastle.asn1.ASN1Integer $r2;

        r0 := @this: org.spongycastle.asn1.isismtt.x509.MonetaryLimit;

        $r2 = r0.<org.spongycastle.asn1.isismtt.x509.MonetaryLimit: org.spongycastle.asn1.ASN1Integer amount>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        return $r1;
    }
    public java.lang.String getCurrency()
    {
        org.spongycastle.asn1.isismtt.x509.MonetaryLimit r0;
        java.lang.String $r1;
        org.spongycastle.asn1.DERPrintableString $r2;

        r0 := @this: org.spongycastle.asn1.isismtt.x509.MonetaryLimit;

        $r2 = r0.<org.spongycastle.asn1.isismtt.x509.MonetaryLimit: org.spongycastle.asn1.DERPrintableString currency>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.DERPrintableString: java.lang.String getString()>();

        return $r1;
    }
    public java.math.BigInteger getExponent()
    {
        org.spongycastle.asn1.isismtt.x509.MonetaryLimit r0;
        java.math.BigInteger $r1;
        org.spongycastle.asn1.ASN1Integer $r2;

        r0 := @this: org.spongycastle.asn1.isismtt.x509.MonetaryLimit;

        $r2 = r0.<org.spongycastle.asn1.isismtt.x509.MonetaryLimit: org.spongycastle.asn1.ASN1Integer exponent>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        return $r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.isismtt.x509.MonetaryLimit r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.DERPrintableString $r2;
        org.spongycastle.asn1.ASN1Integer $r3;
        org.spongycastle.asn1.DERSequence $r4;

        r0 := @this: org.spongycastle.asn1.isismtt.x509.MonetaryLimit;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.isismtt.x509.MonetaryLimit: org.spongycastle.asn1.DERPrintableString currency>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        $r3 = r0.<org.spongycastle.asn1.isismtt.x509.MonetaryLimit: org.spongycastle.asn1.ASN1Integer amount>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r3 = r0.<org.spongycastle.asn1.isismtt.x509.MonetaryLimit: org.spongycastle.asn1.ASN1Integer exponent>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r4 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r4.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r4;
    }
