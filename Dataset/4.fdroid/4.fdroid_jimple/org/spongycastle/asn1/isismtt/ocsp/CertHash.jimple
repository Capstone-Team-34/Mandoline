org.spongycastle.asn1.isismtt.ocsp.CertHash extends org.spongycastle.asn1.ASN1Object
private byte[] certificateHash
private org.spongycastle.asn1.x509.AlgorithmIdentifier hashAlgorithm
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.isismtt.ocsp.CertHash r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        org.spongycastle.asn1.ASN1Encodable $r5;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r6;
        org.spongycastle.asn1.ASN1OctetString $r7;
        byte[] $r8;

        r0 := @this: org.spongycastle.asn1.isismtt.ocsp.CertHash;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 == 2 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad sequence size: ");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r6 = staticinvoke <org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)>($r5);

        r0.<org.spongycastle.asn1.isismtt.ocsp.CertHash: org.spongycastle.asn1.x509.AlgorithmIdentifier hashAlgorithm> = $r6;

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r7 = staticinvoke <org.spongycastle.asn1.DEROctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r5);

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r0.<org.spongycastle.asn1.isismtt.ocsp.CertHash: byte[] certificateHash> = $r8;

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier, byte[])
    {
        org.spongycastle.asn1.isismtt.ocsp.CertHash r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        byte[] $r2, $r3;
        int $i0;

        r0 := @this: org.spongycastle.asn1.isismtt.ocsp.CertHash;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: byte[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.isismtt.ocsp.CertHash: org.spongycastle.asn1.x509.AlgorithmIdentifier hashAlgorithm> = $r1;

        $i0 = lengthof $r2;

        $r3 = newarray (byte)[$i0];

        r0.<org.spongycastle.asn1.isismtt.ocsp.CertHash: byte[] certificateHash> = $r3;

        $r3 = r0.<org.spongycastle.asn1.isismtt.ocsp.CertHash: byte[] certificateHash>;

        $i0 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i0);

        return;
    }
    public static org.spongycastle.asn1.isismtt.ocsp.CertHash getInstance(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        org.spongycastle.asn1.isismtt.ocsp.CertHash r1;
        org.spongycastle.asn1.ASN1Sequence r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.Class $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.spongycastle.asn1.isismtt.ocsp.CertHash;

        if $z0 == 0 goto label2;

     label1:
        r1 = (org.spongycastle.asn1.isismtt.ocsp.CertHash) r0;

        return r1;

     label2:
        $z0 = r0 instanceof org.spongycastle.asn1.ASN1Sequence;

        if $z0 == 0 goto label3;

        r1 = new org.spongycastle.asn1.isismtt.ocsp.CertHash;

        r2 = (org.spongycastle.asn1.ASN1Sequence) r0;

        specialinvoke r1.<org.spongycastle.asn1.isismtt.ocsp.CertHash: void <init>(org.spongycastle.asn1.ASN1Sequence)>(r2);

        return r1;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal object in getInstance: ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r3;
    }
    public byte[] getCertificateHash()
    {
        org.spongycastle.asn1.isismtt.ocsp.CertHash r0;
        byte[] r1;

        r0 := @this: org.spongycastle.asn1.isismtt.ocsp.CertHash;

        r1 = r0.<org.spongycastle.asn1.isismtt.ocsp.CertHash: byte[] certificateHash>;

        return r1;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()
    {
        org.spongycastle.asn1.isismtt.ocsp.CertHash r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.asn1.isismtt.ocsp.CertHash;

        r1 = r0.<org.spongycastle.asn1.isismtt.ocsp.CertHash: org.spongycastle.asn1.x509.AlgorithmIdentifier hashAlgorithm>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.isismtt.ocsp.CertHash r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        byte[] $r2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.spongycastle.asn1.DEROctetString $r4;
        org.spongycastle.asn1.DERSequence $r5;

        r0 := @this: org.spongycastle.asn1.isismtt.ocsp.CertHash;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = r0.<org.spongycastle.asn1.isismtt.ocsp.CertHash: org.spongycastle.asn1.x509.AlgorithmIdentifier hashAlgorithm>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r4 = new org.spongycastle.asn1.DEROctetString;

        $r2 = r0.<org.spongycastle.asn1.isismtt.ocsp.CertHash: byte[] certificateHash>;

        specialinvoke $r4.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r2);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r5 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r5.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r5;
    }
