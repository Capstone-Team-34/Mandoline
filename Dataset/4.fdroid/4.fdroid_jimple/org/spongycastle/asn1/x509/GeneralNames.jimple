org.spongycastle.asn1.x509.GeneralNames extends org.spongycastle.asn1.ASN1Object
private final org.spongycastle.asn1.x509.GeneralName[] names
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x509.GeneralNames r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        int $i0, $i1;
        org.spongycastle.asn1.x509.GeneralName[] $r2;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.x509.GeneralName $r4;

        r0 := @this: org.spongycastle.asn1.x509.GeneralNames;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r2 = newarray (org.spongycastle.asn1.x509.GeneralName)[$i0];

        r0.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] names> = $r2;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 == $i1 goto label2;

        $r2 = r0.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] names>;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r4 = staticinvoke <org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.x509.GeneralName getInstance(java.lang.Object)>($r3);

        $r2[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
    public void <init>(org.spongycastle.asn1.x509.GeneralName)
    {
        org.spongycastle.asn1.x509.GeneralNames r0;
        org.spongycastle.asn1.x509.GeneralName $r1;
        org.spongycastle.asn1.x509.GeneralName[] $r2;

        r0 := @this: org.spongycastle.asn1.x509.GeneralNames;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralName;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = newarray (org.spongycastle.asn1.x509.GeneralName)[1];

        $r2[0] = $r1;

        r0.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] names> = $r2;

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.GeneralName[])
    {
        org.spongycastle.asn1.x509.GeneralNames r0;
        org.spongycastle.asn1.x509.GeneralName[] $r1;

        r0 := @this: org.spongycastle.asn1.x509.GeneralNames;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralName[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] names> = $r1;

        return;
    }
    public static org.spongycastle.asn1.x509.GeneralNames fromExtensions(org.spongycastle.asn1.x509.Extensions, org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.asn1.x509.Extensions $r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.x509.GeneralNames $r3;

        $r0 := @parameter0: org.spongycastle.asn1.x509.Extensions;

        $r1 := @parameter1: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.ASN1Encodable getExtensionParsedValue(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        $r3 = staticinvoke <org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r2);

        return $r3;
    }
    public static org.spongycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.x509.GeneralNames r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.x509.GeneralNames;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.x509.GeneralNames) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.x509.GeneralNames;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.x509.GeneralNames: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public static org.spongycastle.asn1.x509.GeneralNames getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.x509.GeneralNames $r2;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r0, $z0);

        $r2 = staticinvoke <org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r1);

        return $r2;
    }
    public org.spongycastle.asn1.x509.GeneralName[] getNames()
    {
        org.spongycastle.asn1.x509.GeneralNames r0;
        org.spongycastle.asn1.x509.GeneralName[] r1, $r2, $r3;
        int $i0;

        r0 := @this: org.spongycastle.asn1.x509.GeneralNames;

        r1 = r0.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] names>;

        $i0 = lengthof r1;

        r1 = newarray (org.spongycastle.asn1.x509.GeneralName)[$i0];

        $r2 = r0.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] names>;

        $r3 = r0.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] names>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i0);

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.x509.GeneralNames r0;
        org.spongycastle.asn1.DERSequence $r1;
        org.spongycastle.asn1.x509.GeneralName[] $r2;

        r0 := @this: org.spongycastle.asn1.x509.GeneralNames;

        $r1 = new org.spongycastle.asn1.DERSequence;

        $r2 = r0.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] names>;

        specialinvoke $r1.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1Encodable[])>($r2);

        return $r1;
    }
    public java.lang.String toString()
    {
        org.spongycastle.asn1.x509.GeneralNames r0;
        java.lang.StringBuffer r1;
        java.lang.String $r2;
        int i0, $i1;
        org.spongycastle.asn1.x509.GeneralName[] $r3;
        org.spongycastle.asn1.x509.GeneralName $r4;

        r0 := @this: org.spongycastle.asn1.x509.GeneralNames;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = staticinvoke <org.spongycastle.util.Strings: java.lang.String lineSeparator()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("GeneralNames:");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        i0 = 0;

     label1:
        $r3 = r0.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] names>;

        $i1 = lengthof $r3;

        if i0 == $i1 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r3 = r0.<org.spongycastle.asn1.x509.GeneralNames: org.spongycastle.asn1.x509.GeneralName[] names>;

        $r4 = $r3[i0];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
