org.spongycastle.asn1.x509.qualified.SemanticsInformation extends org.spongycastle.asn1.ASN1Object
private org.spongycastle.asn1.x509.GeneralName[] nameRegistrationAuthorities
private org.spongycastle.asn1.ASN1ObjectIdentifier semanticsIdentifier
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.asn1.x509.qualified.SemanticsInformation r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;

        r0 := @this: org.spongycastle.asn1.x509.qualified.SemanticsInformation;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.ASN1ObjectIdentifier semanticsIdentifier> = $r1;

        r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.x509.GeneralName[] nameRegistrationAuthorities> = null;

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.asn1.x509.GeneralName[])
    {
        org.spongycastle.asn1.x509.qualified.SemanticsInformation r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.x509.GeneralName[] $r2;

        r0 := @this: org.spongycastle.asn1.x509.qualified.SemanticsInformation;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.x509.GeneralName[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.ASN1ObjectIdentifier semanticsIdentifier> = $r1;

        r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.x509.GeneralName[] nameRegistrationAuthorities> = $r2;

        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x509.qualified.SemanticsInformation r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        java.util.Enumeration $r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object $r4, r5;
        boolean $z0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r6;
        org.spongycastle.asn1.x509.GeneralName[] $r7;
        org.spongycastle.asn1.ASN1Encodable $r8;
        org.spongycastle.asn1.x509.GeneralName $r9;

        r0 := @this: org.spongycastle.asn1.x509.qualified.SemanticsInformation;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 >= 1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no objects in SemanticsInformation");

        throw $r3;

     label1:
        $r4 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = $r4;

        $z0 = $r4 instanceof org.spongycastle.asn1.ASN1ObjectIdentifier;

        if $z0 == 0 goto label2;

        $r6 = staticinvoke <org.spongycastle.asn1.ASN1ObjectIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>($r4);

        r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.ASN1ObjectIdentifier semanticsIdentifier> = $r6;

        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label4;

        r5 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

     label2:
        if r5 == null goto label5;

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r5);

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r7 = newarray (org.spongycastle.asn1.x509.GeneralName)[$i0];

        r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.x509.GeneralName[] nameRegistrationAuthorities> = $r7;

        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 >= $i1 goto label5;

        $r7 = r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.x509.GeneralName[] nameRegistrationAuthorities>;

        $r8 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r9 = staticinvoke <org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.x509.GeneralName getInstance(java.lang.Object)>($r8);

        $r7[$i0] = $r9;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        r5 = null;

        goto label2;

     label5:
        return;
    }
    public void <init>(org.spongycastle.asn1.x509.GeneralName[])
    {
        org.spongycastle.asn1.x509.qualified.SemanticsInformation r0;
        org.spongycastle.asn1.x509.GeneralName[] $r1;

        r0 := @this: org.spongycastle.asn1.x509.qualified.SemanticsInformation;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralName[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.ASN1ObjectIdentifier semanticsIdentifier> = null;

        r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.x509.GeneralName[] nameRegistrationAuthorities> = $r1;

        return;
    }
    public static org.spongycastle.asn1.x509.qualified.SemanticsInformation getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.x509.qualified.SemanticsInformation r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.x509.qualified.SemanticsInformation;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.x509.qualified.SemanticsInformation) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.x509.qualified.SemanticsInformation;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public org.spongycastle.asn1.x509.GeneralName[] getNameRegistrationAuthorities()
    {
        org.spongycastle.asn1.x509.qualified.SemanticsInformation r0;
        org.spongycastle.asn1.x509.GeneralName[] r1;

        r0 := @this: org.spongycastle.asn1.x509.qualified.SemanticsInformation;

        r1 = r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.x509.GeneralName[] nameRegistrationAuthorities>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getSemanticsIdentifier()
    {
        org.spongycastle.asn1.x509.qualified.SemanticsInformation r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier r1;

        r0 := @this: org.spongycastle.asn1.x509.qualified.SemanticsInformation;

        r1 = r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.ASN1ObjectIdentifier semanticsIdentifier>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.x509.qualified.SemanticsInformation r0;
        org.spongycastle.asn1.ASN1EncodableVector r1, r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        org.spongycastle.asn1.x509.GeneralName[] $r4;
        int i0, $i1;
        org.spongycastle.asn1.x509.GeneralName $r5;
        org.spongycastle.asn1.DERSequence $r6;

        r0 := @this: org.spongycastle.asn1.x509.qualified.SemanticsInformation;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.ASN1ObjectIdentifier semanticsIdentifier>;

        if $r3 == null goto label1;

        $r3 = r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.ASN1ObjectIdentifier semanticsIdentifier>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label1:
        $r4 = r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.x509.GeneralName[] nameRegistrationAuthorities>;

        if $r4 == null goto label4;

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        i0 = 0;

     label2:
        $r4 = r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.x509.GeneralName[] nameRegistrationAuthorities>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label3;

        $r4 = r0.<org.spongycastle.asn1.x509.qualified.SemanticsInformation: org.spongycastle.asn1.x509.GeneralName[] nameRegistrationAuthorities>;

        $r5 = $r4[i0];

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r6 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r6.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r2);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r6);

     label4:
        $r6 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r6.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r6;
    }
