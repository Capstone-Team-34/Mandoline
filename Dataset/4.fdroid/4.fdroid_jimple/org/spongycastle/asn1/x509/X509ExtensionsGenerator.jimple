org.spongycastle.asn1.x509.X509ExtensionsGenerator extends java.lang.Object
private java.util.Vector extOrdering
private java.util.Hashtable extensions
    public void <init>()
    {
        org.spongycastle.asn1.x509.X509ExtensionsGenerator r0;
        java.util.Hashtable $r1;
        java.util.Vector $r2;

        r0 := @this: org.spongycastle.asn1.x509.X509ExtensionsGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.asn1.x509.X509ExtensionsGenerator: java.util.Hashtable extensions> = $r1;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<org.spongycastle.asn1.x509.X509ExtensionsGenerator: java.util.Vector extOrdering> = $r2;

        return;
    }
    public void addExtension(org.spongycastle.asn1.ASN1ObjectIdentifier, boolean, org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.asn1.x509.X509ExtensionsGenerator r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1Encodable $r2;
        java.io.IOException r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        byte[] $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        r0 := @this: org.spongycastle.asn1.x509.X509ExtensionsGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: org.spongycastle.asn1.ASN1Encodable;

     label1:
        $r4 = interfaceinvoke $r2.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded(java.lang.String)>("DER");

        virtualinvoke r0.<org.spongycastle.asn1.x509.X509ExtensionsGenerator: void addExtension(org.spongycastle.asn1.ASN1ObjectIdentifier,boolean,byte[])>($r1, $z0, $r5);

     label2:
        return;

     label3:
        r3 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error encoding value: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public void addExtension(org.spongycastle.asn1.ASN1ObjectIdentifier, boolean, byte[])
    {
        org.spongycastle.asn1.x509.X509ExtensionsGenerator r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        boolean $z0, $z1;
        byte[] $r2;
        java.util.Hashtable $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.util.Vector $r7;
        org.spongycastle.asn1.x509.X509Extension $r8;
        org.spongycastle.asn1.DEROctetString $r9;

        r0 := @this: org.spongycastle.asn1.x509.X509ExtensionsGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: byte[];

        $r3 = r0.<org.spongycastle.asn1.x509.X509ExtensionsGenerator: java.util.Hashtable extensions>;

        $z1 = virtualinvoke $r3.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r1);

        if $z1 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("extension ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already added");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        $r7 = r0.<org.spongycastle.asn1.x509.X509ExtensionsGenerator: java.util.Vector extOrdering>;

        virtualinvoke $r7.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        $r3 = r0.<org.spongycastle.asn1.x509.X509ExtensionsGenerator: java.util.Hashtable extensions>;

        $r8 = new org.spongycastle.asn1.x509.X509Extension;

        $r9 = new org.spongycastle.asn1.DEROctetString;

        specialinvoke $r9.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r2);

        specialinvoke $r8.<org.spongycastle.asn1.x509.X509Extension: void <init>(boolean,org.spongycastle.asn1.ASN1OctetString)>($z0, $r9);

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r8);

        return;
    }
    public org.spongycastle.asn1.x509.X509Extensions generate()
    {
        org.spongycastle.asn1.x509.X509ExtensionsGenerator r0;
        org.spongycastle.asn1.x509.X509Extensions $r1;
        java.util.Vector $r2;
        java.util.Hashtable $r3;

        r0 := @this: org.spongycastle.asn1.x509.X509ExtensionsGenerator;

        $r1 = new org.spongycastle.asn1.x509.X509Extensions;

        $r2 = r0.<org.spongycastle.asn1.x509.X509ExtensionsGenerator: java.util.Vector extOrdering>;

        $r3 = r0.<org.spongycastle.asn1.x509.X509ExtensionsGenerator: java.util.Hashtable extensions>;

        specialinvoke $r1.<org.spongycastle.asn1.x509.X509Extensions: void <init>(java.util.Vector,java.util.Hashtable)>($r2, $r3);

        return $r1;
    }
    public boolean isEmpty()
    {
        org.spongycastle.asn1.x509.X509ExtensionsGenerator r0;
        boolean $z0;
        java.util.Vector $r1;

        r0 := @this: org.spongycastle.asn1.x509.X509ExtensionsGenerator;

        $r1 = r0.<org.spongycastle.asn1.x509.X509ExtensionsGenerator: java.util.Vector extOrdering>;

        $z0 = virtualinvoke $r1.<java.util.Vector: boolean isEmpty()>();

        return $z0;
    }
    public void reset()
    {
        org.spongycastle.asn1.x509.X509ExtensionsGenerator r0;
        java.util.Hashtable $r1;
        java.util.Vector $r2;

        r0 := @this: org.spongycastle.asn1.x509.X509ExtensionsGenerator;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.asn1.x509.X509ExtensionsGenerator: java.util.Hashtable extensions> = $r1;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<org.spongycastle.asn1.x509.X509ExtensionsGenerator: java.util.Vector extOrdering> = $r2;

        return;
    }
