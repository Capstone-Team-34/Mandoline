org.spongycastle.asn1.x509.ExtendedKeyUsage extends org.spongycastle.asn1.ASN1Object
org.spongycastle.asn1.ASN1Sequence seq
java.util.Hashtable usageTable
    public void <init>(java.util.Vector)
    {
        org.spongycastle.asn1.x509.ExtendedKeyUsage r0;
        java.util.Vector $r1;
        org.spongycastle.asn1.ASN1EncodableVector r2;
        java.util.Hashtable $r3;
        java.util.Enumeration $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.asn1.x509.KeyPurposeId $r6;
        org.spongycastle.asn1.DERSequence $r7;

        r0 := @this: org.spongycastle.asn1.x509.ExtendedKeyUsage;

        $r1 := @parameter0: java.util.Vector;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: java.util.Hashtable usageTable> = $r3;

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r4 = virtualinvoke $r1.<java.util.Vector: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = staticinvoke <org.spongycastle.asn1.x509.KeyPurposeId: org.spongycastle.asn1.x509.KeyPurposeId getInstance(java.lang.Object)>($r5);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r6);

        $r3 = r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: java.util.Hashtable usageTable>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r6);

        goto label1;

     label2:
        $r7 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r7.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r2);

        r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: org.spongycastle.asn1.ASN1Sequence seq> = $r7;

        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x509.ExtendedKeyUsage r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        java.util.Hashtable $r2;
        java.util.Enumeration $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.spongycastle.asn1.ASN1Encodable r5;
        org.spongycastle.asn1.ASN1Primitive $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.spongycastle.asn1.x509.ExtendedKeyUsage;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: java.util.Hashtable usageTable> = $r2;

        r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: org.spongycastle.asn1.ASN1Sequence seq> = $r1;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = (org.spongycastle.asn1.ASN1Encodable) $r4;

        $r6 = interfaceinvoke r5.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $z0 = $r6 instanceof org.spongycastle.asn1.ASN1ObjectIdentifier;

        if $z0 != 0 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only ASN1ObjectIdentifiers allowed in ExtendedKeyUsage.");

        throw $r7;

     label2:
        $r2 = r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: java.util.Hashtable usageTable>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r5);

        goto label1;

     label3:
        return;
    }
    public void <init>(org.spongycastle.asn1.x509.KeyPurposeId)
    {
        org.spongycastle.asn1.x509.ExtendedKeyUsage r0;
        org.spongycastle.asn1.x509.KeyPurposeId $r1;
        java.util.Hashtable $r2;
        org.spongycastle.asn1.DERSequence $r3;

        r0 := @this: org.spongycastle.asn1.x509.ExtendedKeyUsage;

        $r1 := @parameter0: org.spongycastle.asn1.x509.KeyPurposeId;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: java.util.Hashtable usageTable> = $r2;

        $r3 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r3.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r1);

        r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: org.spongycastle.asn1.ASN1Sequence seq> = $r3;

        $r2 = r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: java.util.Hashtable usageTable>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r1);

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.KeyPurposeId[])
    {
        org.spongycastle.asn1.x509.ExtendedKeyUsage r0;
        org.spongycastle.asn1.x509.KeyPurposeId[] $r1;
        org.spongycastle.asn1.ASN1EncodableVector r2;
        org.spongycastle.asn1.x509.KeyPurposeId $r3, $r4;
        java.util.Hashtable $r5;
        int i0, $i1;
        org.spongycastle.asn1.DERSequence $r6;

        r0 := @this: org.spongycastle.asn1.x509.ExtendedKeyUsage;

        $r1 := @parameter0: org.spongycastle.asn1.x509.KeyPurposeId[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: java.util.Hashtable usageTable> = $r5;

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if i0 == $i1 goto label2;

        $r3 = $r1[i0];

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r5 = r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: java.util.Hashtable usageTable>;

        $r3 = $r1[i0];

        $r4 = $r1[i0];

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r6 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r6.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r2);

        r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: org.spongycastle.asn1.ASN1Sequence seq> = $r6;

        return;
    }
    public static org.spongycastle.asn1.x509.ExtendedKeyUsage fromExtensions(org.spongycastle.asn1.x509.Extensions)
    {
        org.spongycastle.asn1.x509.Extensions $r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.x509.ExtendedKeyUsage $r3;

        $r0 := @parameter0: org.spongycastle.asn1.x509.Extensions;

        $r1 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier extendedKeyUsage>;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.ASN1Encodable getExtensionParsedValue(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        $r3 = staticinvoke <org.spongycastle.asn1.x509.ExtendedKeyUsage: org.spongycastle.asn1.x509.ExtendedKeyUsage getInstance(java.lang.Object)>($r2);

        return $r3;
    }
    public static org.spongycastle.asn1.x509.ExtendedKeyUsage getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.x509.ExtendedKeyUsage r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.x509.ExtendedKeyUsage;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.x509.ExtendedKeyUsage) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.x509.ExtendedKeyUsage;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.x509.ExtendedKeyUsage: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public static org.spongycastle.asn1.x509.ExtendedKeyUsage getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.x509.ExtendedKeyUsage $r2;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r0, $z0);

        $r2 = staticinvoke <org.spongycastle.asn1.x509.ExtendedKeyUsage: org.spongycastle.asn1.x509.ExtendedKeyUsage getInstance(java.lang.Object)>($r1);

        return $r2;
    }
    public org.spongycastle.asn1.x509.KeyPurposeId[] getUsages()
    {
        org.spongycastle.asn1.x509.ExtendedKeyUsage r0;
        int i0, i1;
        org.spongycastle.asn1.x509.KeyPurposeId[] r1;
        org.spongycastle.asn1.ASN1Sequence $r2;
        java.util.Enumeration $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.spongycastle.asn1.x509.KeyPurposeId $r5;

        r0 := @this: org.spongycastle.asn1.x509.ExtendedKeyUsage;

        $r2 = r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: org.spongycastle.asn1.ASN1Sequence seq>;

        i0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        r1 = newarray (org.spongycastle.asn1.x509.KeyPurposeId)[i0];

        i1 = 0;

        $r2 = r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: org.spongycastle.asn1.ASN1Sequence seq>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r5 = staticinvoke <org.spongycastle.asn1.x509.KeyPurposeId: org.spongycastle.asn1.x509.KeyPurposeId getInstance(java.lang.Object)>($r4);

        r1[i1] = $r5;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }
    public boolean hasKeyPurposeId(org.spongycastle.asn1.x509.KeyPurposeId)
    {
        org.spongycastle.asn1.x509.ExtendedKeyUsage r0;
        org.spongycastle.asn1.x509.KeyPurposeId $r1;
        java.lang.Object $r2;
        java.util.Hashtable $r3;

        r0 := @this: org.spongycastle.asn1.x509.ExtendedKeyUsage;

        $r1 := @parameter0: org.spongycastle.asn1.x509.KeyPurposeId;

        $r3 = r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: java.util.Hashtable usageTable>;

        $r2 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public int size()
    {
        org.spongycastle.asn1.x509.ExtendedKeyUsage r0;
        int $i0;
        java.util.Hashtable $r1;

        r0 := @this: org.spongycastle.asn1.x509.ExtendedKeyUsage;

        $r1 = r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: java.util.Hashtable usageTable>;

        $i0 = virtualinvoke $r1.<java.util.Hashtable: int size()>();

        return $i0;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.x509.ExtendedKeyUsage r0;
        org.spongycastle.asn1.ASN1Sequence r1;

        r0 := @this: org.spongycastle.asn1.x509.ExtendedKeyUsage;

        r1 = r0.<org.spongycastle.asn1.x509.ExtendedKeyUsage: org.spongycastle.asn1.ASN1Sequence seq>;

        return r1;
    }
