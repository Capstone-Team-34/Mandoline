org.spongycastle.asn1.x509.NameConstraints extends org.spongycastle.asn1.ASN1Object
private org.spongycastle.asn1.x509.GeneralSubtree[] excluded
private org.spongycastle.asn1.x509.GeneralSubtree[] permitted
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x509.NameConstraints r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        java.util.Enumeration $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.spongycastle.asn1.ASN1TaggedObject $r4;
        int $i0;
        org.spongycastle.asn1.x509.GeneralSubtree[] $r5;

        r0 := @this: org.spongycastle.asn1.x509.NameConstraints;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = staticinvoke <org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)>($r3);

        $i0 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label2;
        };

     label2:
        goto label1;

     label3:
        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r4, 0);

        $r5 = specialinvoke r0.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] createArray(org.spongycastle.asn1.ASN1Sequence)>($r1);

        r0.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] permitted> = $r5;

        goto label1;

     label4:
        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r4, 0);

        $r5 = specialinvoke r0.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] createArray(org.spongycastle.asn1.ASN1Sequence)>($r1);

        r0.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] excluded> = $r5;

        goto label1;

     label5:
        return;
    }
    public void <init>(org.spongycastle.asn1.x509.GeneralSubtree[], org.spongycastle.asn1.x509.GeneralSubtree[])
    {
        org.spongycastle.asn1.x509.NameConstraints r0;
        org.spongycastle.asn1.x509.GeneralSubtree[] $r1, $r2;

        r0 := @this: org.spongycastle.asn1.x509.NameConstraints;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralSubtree[];

        $r2 := @parameter1: org.spongycastle.asn1.x509.GeneralSubtree[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        if $r1 == null goto label1;

        r0.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] permitted> = $r1;

     label1:
        if $r2 == null goto label2;

        r0.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] excluded> = $r2;

     label2:
        return;
    }
    private org.spongycastle.asn1.x509.GeneralSubtree[] createArray(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x509.NameConstraints r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.x509.GeneralSubtree[] r2;
        int $i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.x509.GeneralSubtree $r4;

        r0 := @this: org.spongycastle.asn1.x509.NameConstraints;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        r2 = newarray (org.spongycastle.asn1.x509.GeneralSubtree)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r2;

        if $i0 == $i1 goto label2;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r4 = staticinvoke <org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.x509.GeneralSubtree getInstance(java.lang.Object)>($r3);

        r2[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r2;
    }
    public static org.spongycastle.asn1.x509.NameConstraints getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.x509.NameConstraints r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.x509.NameConstraints;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.x509.NameConstraints) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.x509.NameConstraints;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.x509.NameConstraints: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public org.spongycastle.asn1.x509.GeneralSubtree[] getExcludedSubtrees()
    {
        org.spongycastle.asn1.x509.NameConstraints r0;
        org.spongycastle.asn1.x509.GeneralSubtree[] r1;

        r0 := @this: org.spongycastle.asn1.x509.NameConstraints;

        r1 = r0.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] excluded>;

        return r1;
    }
    public org.spongycastle.asn1.x509.GeneralSubtree[] getPermittedSubtrees()
    {
        org.spongycastle.asn1.x509.NameConstraints r0;
        org.spongycastle.asn1.x509.GeneralSubtree[] r1;

        r0 := @this: org.spongycastle.asn1.x509.NameConstraints;

        r1 = r0.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] permitted>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.x509.NameConstraints r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.x509.GeneralSubtree[] $r2;
        org.spongycastle.asn1.DERTaggedObject $r3;
        org.spongycastle.asn1.DERSequence $r4;

        r0 := @this: org.spongycastle.asn1.x509.NameConstraints;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] permitted>;

        if $r2 == null goto label1;

        $r3 = new org.spongycastle.asn1.DERTaggedObject;

        $r4 = new org.spongycastle.asn1.DERSequence;

        $r2 = r0.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] permitted>;

        specialinvoke $r4.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1Encodable[])>($r2);

        specialinvoke $r3.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 0, $r4);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label1:
        $r2 = r0.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] excluded>;

        if $r2 == null goto label2;

        $r3 = new org.spongycastle.asn1.DERTaggedObject;

        $r4 = new org.spongycastle.asn1.DERSequence;

        $r2 = r0.<org.spongycastle.asn1.x509.NameConstraints: org.spongycastle.asn1.x509.GeneralSubtree[] excluded>;

        specialinvoke $r4.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1Encodable[])>($r2);

        specialinvoke $r3.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 1, $r4);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label2:
        $r4 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r4.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r4;
    }
