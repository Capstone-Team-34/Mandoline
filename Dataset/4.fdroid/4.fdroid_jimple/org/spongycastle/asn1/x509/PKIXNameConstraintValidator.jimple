org.spongycastle.asn1.x509.PKIXNameConstraintValidator extends java.lang.Object implements org.spongycastle.asn1.x509.NameConstraintValidator
private java.util.Set excludedSubtreesDN
private java.util.Set excludedSubtreesDNS
private java.util.Set excludedSubtreesEmail
private java.util.Set excludedSubtreesIP
private java.util.Set excludedSubtreesURI
private java.util.Set permittedSubtreesDN
private java.util.Set permittedSubtreesDNS
private java.util.Set permittedSubtreesEmail
private java.util.Set permittedSubtreesIP
private java.util.Set permittedSubtreesURI
    public void <init>()
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.HashSet $r1;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDN> = $r1;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDNS> = $r1;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesEmail> = $r1;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesURI> = $r1;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesIP> = $r1;

        return;
    }
    private void checkExcludedDN(java.util.Set, org.spongycastle.asn1.ASN1Sequence) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1;
        org.spongycastle.asn1.ASN1Sequence $r2, r5;
        boolean $z0;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        org.spongycastle.asn1.x509.NameConstraintValidatorException $r6;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1Sequence;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.spongycastle.asn1.ASN1Sequence) $r4;

        $z0 = staticinvoke <org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDNSubtree(org.spongycastle.asn1.ASN1Sequence,org.spongycastle.asn1.ASN1Sequence)>($r2, r5);

        if $z0 == 0 goto label2;

        $r6 = new org.spongycastle.asn1.x509.NameConstraintValidatorException;

        specialinvoke $r6.<org.spongycastle.asn1.x509.NameConstraintValidatorException: void <init>(java.lang.String)>("Subject distinguished name is from an excluded subtree");

        throw $r6;

     label3:
        return;
    }
    private void checkExcludedDN(org.spongycastle.asn1.x500.X500Name) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        org.spongycastle.asn1.x500.X500Name $r1;
        java.util.Set $r2;
        org.spongycastle.asn1.ASN1Sequence $r3;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: org.spongycastle.asn1.x500.X500Name;

        $r2 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDN>;

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r1);

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void checkExcludedDN(java.util.Set,org.spongycastle.asn1.ASN1Sequence)>($r2, $r3);

        return;
    }
    private void checkExcludedDNS(java.util.Set, java.lang.String) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1;
        java.lang.String $r2, r5;
        boolean $z0;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        org.spongycastle.asn1.x509.NameConstraintValidatorException $r6;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r2, r5);

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5);

        if $z0 == 0 goto label2;

     label3:
        $r6 = new org.spongycastle.asn1.x509.NameConstraintValidatorException;

        specialinvoke $r6.<org.spongycastle.asn1.x509.NameConstraintValidatorException: void <init>(java.lang.String)>("DNS is from an excluded subtree.");

        throw $r6;

     label4:
        return;
    }
    private void checkExcludedEmail(java.util.Set, java.lang.String) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1;
        java.lang.String $r2, r5;
        boolean $z0;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        org.spongycastle.asn1.x509.NameConstraintValidatorException $r6;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean emailIsConstrained(java.lang.String,java.lang.String)>($r2, r5);

        if $z0 == 0 goto label2;

        $r6 = new org.spongycastle.asn1.x509.NameConstraintValidatorException;

        specialinvoke $r6.<org.spongycastle.asn1.x509.NameConstraintValidatorException: void <init>(java.lang.String)>("Email address is from an excluded subtree.");

        throw $r6;

     label3:
        return;
    }
    private void checkExcludedIP(java.util.Set, byte[]) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1;
        byte[] $r2, $r5;
        boolean $z0;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        org.spongycastle.asn1.x509.NameConstraintValidatorException $r6;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: byte[];

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (byte[]) $r4;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean isIPConstrained(byte[],byte[])>($r2, $r5);

        if $z0 == 0 goto label2;

        $r6 = new org.spongycastle.asn1.x509.NameConstraintValidatorException;

        specialinvoke $r6.<org.spongycastle.asn1.x509.NameConstraintValidatorException: void <init>(java.lang.String)>("IP is from an excluded subtree.");

        throw $r6;

     label3:
        return;
    }
    private void checkExcludedURI(java.util.Set, java.lang.String) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1;
        java.lang.String $r2, r5;
        boolean $z0;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        org.spongycastle.asn1.x509.NameConstraintValidatorException $r6;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean isUriConstrained(java.lang.String,java.lang.String)>($r2, r5);

        if $z0 == 0 goto label2;

        $r6 = new org.spongycastle.asn1.x509.NameConstraintValidatorException;

        specialinvoke $r6.<org.spongycastle.asn1.x509.NameConstraintValidatorException: void <init>(java.lang.String)>("URI is from an excluded subtree.");

        throw $r6;

     label3:
        return;
    }
    private void checkPermittedDN(java.util.Set, org.spongycastle.asn1.ASN1Sequence) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1;
        org.spongycastle.asn1.ASN1Sequence $r2, r5;
        boolean $z0;
        int $i0;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        org.spongycastle.asn1.x509.NameConstraintValidatorException $r6;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1Sequence;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 == 0 goto label5;

     label2:
        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.spongycastle.asn1.ASN1Sequence) $r4;

        $z0 = staticinvoke <org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDNSubtree(org.spongycastle.asn1.ASN1Sequence,org.spongycastle.asn1.ASN1Sequence)>($r2, r5);

        if $z0 == 0 goto label3;

        return;

     label4:
        $r6 = new org.spongycastle.asn1.x509.NameConstraintValidatorException;

        specialinvoke $r6.<org.spongycastle.asn1.x509.NameConstraintValidatorException: void <init>(java.lang.String)>("Subject distinguished name is not from a permitted subtree");

        throw $r6;

     label5:
        return;
    }
    private void checkPermittedDN(org.spongycastle.asn1.x500.X500Name) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        org.spongycastle.asn1.x500.X500Name $r1;
        java.util.Set $r2;
        org.spongycastle.asn1.ASN1Primitive $r3;
        org.spongycastle.asn1.ASN1Sequence $r4;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: org.spongycastle.asn1.x500.X500Name;

        $r2 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDN>;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r3);

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void checkPermittedDN(java.util.Set,org.spongycastle.asn1.ASN1Sequence)>($r2, $r4);

        return;
    }
    private void checkPermittedDNS(java.util.Set, java.lang.String) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1;
        java.lang.String $r2, r5;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0;
        org.spongycastle.asn1.x509.NameConstraintValidatorException $r6;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r2, r5);

        if $z0 != 0 goto label5;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5);

        if $z0 == 0 goto label2;

        return;

     label3:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        if $i0 == 0 goto label5;

     label4:
        $r6 = new org.spongycastle.asn1.x509.NameConstraintValidatorException;

        specialinvoke $r6.<org.spongycastle.asn1.x509.NameConstraintValidatorException: void <init>(java.lang.String)>("DNS is not from a permitted subtree.");

        throw $r6;

     label5:
        return;
    }
    private void checkPermittedEmail(java.util.Set, java.lang.String) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1;
        java.lang.String $r2, r5;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0;
        org.spongycastle.asn1.x509.NameConstraintValidatorException $r6;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean emailIsConstrained(java.lang.String,java.lang.String)>($r2, r5);

        if $z0 == 0 goto label2;

        return;

     label3:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        if $i0 == 0 goto label5;

     label4:
        $r6 = new org.spongycastle.asn1.x509.NameConstraintValidatorException;

        specialinvoke $r6.<org.spongycastle.asn1.x509.NameConstraintValidatorException: void <init>(java.lang.String)>("Subject email address is not from a permitted subtree.");

        throw $r6;

     label5:
        return;
    }
    private void checkPermittedIP(java.util.Set, byte[]) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1;
        byte[] $r2, $r5;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0;
        org.spongycastle.asn1.x509.NameConstraintValidatorException $r6;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: byte[];

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (byte[]) $r4;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean isIPConstrained(byte[],byte[])>($r2, $r5);

        if $z0 == 0 goto label2;

        return;

     label3:
        $i0 = lengthof $r2;

        if $i0 != 0 goto label4;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        if $i0 == 0 goto label5;

     label4:
        $r6 = new org.spongycastle.asn1.x509.NameConstraintValidatorException;

        specialinvoke $r6.<org.spongycastle.asn1.x509.NameConstraintValidatorException: void <init>(java.lang.String)>("IP is not from a permitted subtree.");

        throw $r6;

     label5:
        return;
    }
    private void checkPermittedURI(java.util.Set, java.lang.String) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1;
        java.lang.String $r2, r5;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0;
        org.spongycastle.asn1.x509.NameConstraintValidatorException $r6;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean isUriConstrained(java.lang.String,java.lang.String)>($r2, r5);

        if $z0 == 0 goto label2;

        return;

     label3:
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        if $i0 == 0 goto label5;

     label4:
        $r6 = new org.spongycastle.asn1.x509.NameConstraintValidatorException;

        specialinvoke $r6.<org.spongycastle.asn1.x509.NameConstraintValidatorException: void <init>(java.lang.String)>("URI is not from a permitted subtree.");

        throw $r6;

     label5:
        return;
    }
    private boolean collectionsAreEqual(java.util.Collection, java.util.Collection)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Collection $r1, $r2;
        int $i0, $i1;
        java.util.Iterator $r3, $r5;
        boolean $z0, $z1;
        java.lang.Object $r4, $r6;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Collection;

        $r2 := @parameter1: java.util.Collection;

        if $r1 != $r2 goto label1;

        return 1;

     label1:
        if $r1 == null goto label2;

        if $r2 != null goto label3;

     label2:
        return 0;

     label3:
        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $i1 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        if $i0 == $i1 goto label4;

        return 0;

     label4:
        $r3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $z0 = 0;

     label6:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $z1 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r6);

        if $z1 == 0 goto label6;

        $z0 = 1;

     label7:
        if $z0 != 0 goto label5;

        return 0;

     label8:
        return 1;
    }
    private static int compareTo(byte[], byte[])
    {
        byte[] $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r0, $r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <org.spongycastle.asn1.x509.PKIXNameConstraintValidator: byte[] max(byte[],byte[])>($r0, $r1);

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r1, $r0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return -1;
    }
    private boolean emailIsConstrained(java.lang.String, java.lang.String)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.lang.String $r1, $r2, $r3;
        int $i0;
        boolean $z0;
        char $c1;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label1:
        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        if $c1 == 46 goto label3;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 != 0 goto label4;

     label2:
        return 0;

     label3:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r3, $r2);

        if $z0 == 0 goto label2;

     label4:
        return 1;
    }
    private boolean equals(java.lang.Object, java.lang.Object)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.lang.Object r1, r2;
        boolean $z0;
        byte[] r3, r4;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 != r2 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        if r2 != null goto label3;

     label2:
        return 0;

     label3:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label4;

        $z0 = r2 instanceof byte[];

        if $z0 == 0 goto label4;

        r3 = (byte[]) r1;

        r4 = (byte[]) r2;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>(r3, r4);

        return $z0;

     label4:
        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        return $z0;
    }
    private static java.lang.String extractHostFromURL(java.lang.String)
    {
        java.lang.String $r0, r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(58);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        r1 = $r0;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("//");

        if $i0 == -1 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("//");

        $i0 = $i0 + 2;

        r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(58);

        if $i0 == -1 goto label2;

        $i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(58);

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(47);

        if $i0 == -1 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(47);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label3:
        return $r0;
    }
    private byte[][] extractIPsAndSubnetMasks(byte[], byte[])
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        byte[] $r1, $r2, r3, r4, r5;
        int i0;
        byte[][] $r6;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        i0 = lengthof $r1;

        i0 = i0 / 2;

        r3 = newarray (byte)[i0];

        r4 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r3, 0, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, i0, r4, 0, i0);

        $r1 = newarray (byte)[i0];

        r5 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, i0, r5, 0, i0);

        $r6 = newarray (byte[])[4];

        $r6[0] = r3;

        $r6[1] = r4;

        $r6[2] = $r1;

        $r6[3] = r5;

        return $r6;
    }
    private java.lang.String extractNameAsString(org.spongycastle.asn1.x509.GeneralName)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        org.spongycastle.asn1.x509.GeneralName $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.DERIA5String $r3;
        java.lang.String $r4;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralName;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r3 = staticinvoke <org.spongycastle.asn1.DERIA5String: org.spongycastle.asn1.DERIA5String getInstance(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.DERIA5String: java.lang.String getString()>();

        return $r4;
    }
    private int hashCollection(java.util.Collection)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Collection $r1;
        int i0, $i1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        byte[] r4;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Collection;

        if $r1 != null goto label1;

        return 0;

     label1:
        i0 = 0;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r3 instanceof byte[];

        if $z0 == 0 goto label3;

        r4 = (byte[]) $r3;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(byte[])>(r4);

        i0 = i0 + $i1;

        goto label2;

     label3:
        $i1 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        i0 = i0 + $i1;

        goto label2;

     label4:
        return i0;
    }
    private java.util.Set intersectDN(java.util.Set, java.util.Set)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1, $r2;
        java.util.HashSet r3;
        java.util.Iterator $r4, $r11;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.asn1.x509.GeneralSubtree $r6;
        org.spongycastle.asn1.x509.GeneralName $r7;
        org.spongycastle.asn1.ASN1Encodable $r8;
        org.spongycastle.asn1.ASN1Primitive $r9;
        org.spongycastle.asn1.ASN1Sequence $r10, r12;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: java.util.Set;

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.spongycastle.asn1.x509.GeneralSubtree) $r5;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.x509.GeneralName getBase()>();

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r9 = interfaceinvoke $r8.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r10 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r9);

        if $r1 != null goto label2;

        if $r10 == null goto label1;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r11 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.spongycastle.asn1.ASN1Sequence) $r5;

        $z0 = staticinvoke <org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDNSubtree(org.spongycastle.asn1.ASN1Sequence,org.spongycastle.asn1.ASN1Sequence)>($r10, r12);

        if $z0 == 0 goto label4;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r10);

        goto label3;

     label4:
        $z0 = staticinvoke <org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDNSubtree(org.spongycastle.asn1.ASN1Sequence,org.spongycastle.asn1.ASN1Sequence)>(r12, $r10);

        if $z0 == 0 goto label3;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r12);

        goto label3;

     label5:
        return r3;
    }
    private java.util.Set intersectDNS(java.util.Set, java.util.Set)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1, $r2;
        java.util.HashSet r3;
        java.util.Iterator $r4, $r9;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.asn1.x509.GeneralSubtree $r6;
        org.spongycastle.asn1.x509.GeneralName $r7;
        java.lang.String $r8, r10;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: java.util.Set;

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.spongycastle.asn1.x509.GeneralSubtree) $r5;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.x509.GeneralName getBase()>();

        $r8 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.lang.String extractNameAsString(org.spongycastle.asn1.x509.GeneralName)>($r7);

        if $r1 != null goto label2;

        if $r8 == null goto label1;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $r9 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r5;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>(r10, $r8);

        if $z0 == 0 goto label4;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r10);

        goto label3;

     label4:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r8, r10);

        if $z0 == 0 goto label3;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label3;

     label5:
        return r3;
    }
    private java.util.Set intersectEmail(java.util.Set, java.util.Set)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1, $r2;
        java.util.HashSet r3;
        java.util.Iterator $r4, $r9;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.asn1.x509.GeneralSubtree $r6;
        org.spongycastle.asn1.x509.GeneralName $r7;
        java.lang.String $r8, r10;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: java.util.Set;

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.spongycastle.asn1.x509.GeneralSubtree) $r5;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.x509.GeneralName getBase()>();

        $r8 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.lang.String extractNameAsString(org.spongycastle.asn1.x509.GeneralName)>($r7);

        if $r1 != null goto label2;

        if $r8 == null goto label1;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $r9 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r5;

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void intersectEmail(java.lang.String,java.lang.String,java.util.Set)>($r8, r10, r3);

        goto label3;

     label4:
        return r3;
    }
    private void intersectEmail(java.lang.String, java.lang.String, java.util.Set)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.lang.String $r1, $r2, $r4;
        java.util.Set $r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Set;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label03;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label01;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label01:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label02;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r4, $r2);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label02:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label08;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label04;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r4, $r1);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label04:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label07;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r1, $r2);

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label06;

     label05:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label06:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r2, $r1);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label07:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r2, $r1);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label08:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label09;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label09:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label10;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r1, $r2);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label10:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

     label11:
        return;
    }
    private java.util.Set intersectIP(java.util.Set, java.util.Set)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1, $r2;
        java.util.HashSet r3;
        java.util.Iterator $r4, $r11;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.asn1.x509.GeneralSubtree $r6;
        org.spongycastle.asn1.x509.GeneralName $r7;
        org.spongycastle.asn1.ASN1Encodable $r8;
        org.spongycastle.asn1.ASN1OctetString $r9;
        byte[] $r10, $r12;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: java.util.Set;

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.spongycastle.asn1.x509.GeneralSubtree) $r5;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.x509.GeneralName getBase()>();

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r9 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        if $r1 != null goto label2;

        if $r10 == null goto label1;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r11 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (byte[]) $r5;

        $r2 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set intersectIPRange(byte[],byte[])>($r12, $r10);

        interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r2);

        goto label3;

     label4:
        return r3;
    }
    private java.util.Set intersectIPRange(byte[], byte[])
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        byte[] $r1, $r2, r3, r4, $r6;
        int $i0, $i1;
        byte[][] $r5;
        java.util.Set $r7;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        if $i0 == $i1 goto label1;

        $r7 = <java.util.Collections: java.util.Set EMPTY_SET>;

        return $r7;

     label1:
        $r5 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: byte[][] extractIPsAndSubnetMasks(byte[],byte[])>($r1, $r2);

        r3 = $r5[0];

        $r1 = $r5[1];

        r4 = $r5[2];

        $r2 = $r5[3];

        $r5 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: byte[][] minMaxIPs(byte[],byte[],byte[],byte[])>(r3, $r1, r4, $r2);

        r3 = $r5[1];

        r4 = $r5[3];

        r3 = staticinvoke <org.spongycastle.asn1.x509.PKIXNameConstraintValidator: byte[] min(byte[],byte[])>(r3, r4);

        r4 = $r5[0];

        $r6 = $r5[2];

        r4 = staticinvoke <org.spongycastle.asn1.x509.PKIXNameConstraintValidator: byte[] max(byte[],byte[])>(r4, $r6);

        $i0 = staticinvoke <org.spongycastle.asn1.x509.PKIXNameConstraintValidator: int compareTo(byte[],byte[])>(r4, r3);

        if $i0 != 1 goto label2;

        $r7 = <java.util.Collections: java.util.Set EMPTY_SET>;

        return $r7;

     label2:
        r3 = $r5[0];

        r4 = $r5[2];

        r3 = staticinvoke <org.spongycastle.asn1.x509.PKIXNameConstraintValidator: byte[] or(byte[],byte[])>(r3, r4);

        $r1 = staticinvoke <org.spongycastle.asn1.x509.PKIXNameConstraintValidator: byte[] or(byte[],byte[])>($r1, $r2);

        $r1 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: byte[] ipWithSubnetMask(byte[],byte[])>(r3, $r1);

        $r7 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1);

        return $r7;
    }
    private java.util.Set intersectURI(java.util.Set, java.util.Set)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1, $r2;
        java.util.HashSet r3;
        java.util.Iterator $r4, $r9;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.asn1.x509.GeneralSubtree $r6;
        org.spongycastle.asn1.x509.GeneralName $r7;
        java.lang.String $r8, r10;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: java.util.Set;

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.spongycastle.asn1.x509.GeneralSubtree) $r5;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.x509.GeneralName getBase()>();

        $r8 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.lang.String extractNameAsString(org.spongycastle.asn1.x509.GeneralName)>($r7);

        if $r1 != null goto label2;

        if $r8 == null goto label1;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $r9 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r5;

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void intersectURI(java.lang.String,java.lang.String,java.util.Set)>(r10, $r8, r3);

        goto label3;

     label4:
        return r3;
    }
    private void intersectURI(java.lang.String, java.lang.String, java.util.Set)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.lang.String $r1, $r2, $r4;
        java.util.Set $r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Set;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label03;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label01;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label01:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label02;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r4, $r2);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label02:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label08;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label04;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r4, $r1);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label04:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label07;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r1, $r2);

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label06;

     label05:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label06:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r2, $r1);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label07:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r2, $r1);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label08:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label09;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label09:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label10;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r1, $r2);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label10:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

     label11:
        return;
    }
    private byte[] ipWithSubnetMask(byte[], byte[])
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        byte[] $r1, $r2, r3;
        int i0, $i1;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        i0 = lengthof $r1;

        $i1 = i0 * 2;

        r3 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r3, 0, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r3, i0, i0);

        return r3;
    }
    private boolean isIPConstrained(byte[], byte[])
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        byte[] $r1, $r2, r3, r4, r5;
        int i0, $i1, $i4;
        boolean $z0;
        byte $b2, $b3;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        i0 = lengthof $r1;

        $i1 = lengthof $r2;

        $i1 = $i1 / 2;

        if i0 == $i1 goto label1;

        return 0;

     label1:
        r5 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, i0, r5, 0, i0);

        r4 = newarray (byte)[i0];

        r3 = newarray (byte)[i0];

        $i1 = 0;

     label2:
        if $i1 >= i0 goto label3;

        $b2 = $r2[$i1];

        $b3 = r5[$i1];

        $i4 = $b2 & $b3;

        $b2 = (byte) $i4;

        r4[$i1] = $b2;

        $b2 = $r1[$i1];

        $b3 = r5[$i1];

        $i4 = $b2 & $b3;

        $b2 = (byte) $i4;

        r3[$i1] = $b2;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>(r4, r3);

        return $z0;
    }
    private boolean isUriConstrained(java.lang.String, java.lang.String)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.lang.String extractHostFromURL(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label1:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r1, $r2);

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    private static byte[] max(byte[], byte[])
    {
        byte[] $r0, r1;
        int i0, $i1, $i3;
        byte $b2;

        r1 := @parameter0: byte[];

        $r0 := @parameter1: byte[];

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label3;

        $b2 = r1[i0];

        $i1 = $b2 & 65535;

        $b2 = $r0[i0];

        $i3 = $b2 & 65535;

        if $i1 <= $i3 goto label2;

        return r1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return $r0;
    }
    private static byte[] min(byte[], byte[])
    {
        byte[] $r0, r1;
        int i0, $i1, $i3;
        byte $b2;

        r1 := @parameter0: byte[];

        $r0 := @parameter1: byte[];

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label3;

        $b2 = r1[i0];

        $i1 = $b2 & 65535;

        $b2 = $r0[i0];

        $i3 = $b2 & 65535;

        if $i1 >= $i3 goto label2;

        return r1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return $r0;
    }
    private byte[][] minMaxIPs(byte[], byte[], byte[], byte[])
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        byte[] $r1, $r2, $r3, $r4, r5, r6, r7, r8;
        int i0, i1, $i4, $i5;
        byte $b2, $b3;
        byte[][] $r9;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: byte[];

        $r4 := @parameter3: byte[];

        i0 = lengthof $r1;

        r7 = newarray (byte)[i0];

        r5 = newarray (byte)[i0];

        r8 = newarray (byte)[i0];

        r6 = newarray (byte)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $b2 = $r1[i1];

        $b3 = $r2[i1];

        $i4 = $b2 & $b3;

        $b2 = (byte) $i4;

        r7[i1] = $b2;

        $b2 = $r1[i1];

        $b3 = $r2[i1];

        $i4 = $b2 & $b3;

        $b2 = $r2[i1];

        $i5 = $b2 ^ -1;

        $i4 = $i4 | $i5;

        $b2 = (byte) $i4;

        r5[i1] = $b2;

        $b2 = $r3[i1];

        $b3 = $r4[i1];

        $i4 = $b2 & $b3;

        $b2 = (byte) $i4;

        r8[i1] = $b2;

        $b2 = $r3[i1];

        $b3 = $r4[i1];

        $i4 = $b2 & $b3;

        $b2 = $r4[i1];

        $i5 = $b2 ^ -1;

        $i4 = $i4 | $i5;

        $b2 = (byte) $i4;

        r6[i1] = $b2;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r9 = newarray (byte[])[4];

        $r9[0] = r7;

        $r9[1] = r5;

        $r9[2] = r8;

        $r9[3] = r6;

        return $r9;
    }
    private static byte[] or(byte[], byte[])
    {
        byte[] $r0, $r1, r2;
        byte $b0, $b3;
        int $i1, $i2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i1 = lengthof $r0;

        r2 = newarray (byte)[$i1];

        $i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label2;

        $b3 = $r0[$i1];

        $b0 = $r1[$i1];

        $i2 = $b3 | $b0;

        $b0 = (byte) $i2;

        r2[$i1] = $b0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return r2;
    }
    private java.lang.String stringifyIP(byte[])
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        byte[] $r1;
        java.lang.String r2;
        int i0, $i1;
        java.lang.StringBuilder $r3;
        byte $b2;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: byte[];

        r2 = "";

        i0 = 0;

     label1:
        $i1 = lengthof $r1;

        $i1 = $i1 / 2;

        if i0 >= $i1 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $b2 = $r1[i0];

        $i1 = $b2 & 255;

        r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        i0 = virtualinvoke r2.<java.lang.String: int length()>();

        i0 = i0 + -1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = lengthof $r1;

        i0 = i0 / 2;

     label3:
        $i1 = lengthof $r1;

        if i0 >= $i1 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $b2 = $r1[i0];

        $i1 = $b2 & 255;

        r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label3;

     label4:
        i0 = virtualinvoke r2.<java.lang.String: int length()>();

        i0 = i0 + -1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return r2;
    }
    private java.lang.String stringifyIPCollection(java.util.Set)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        byte[] $r6;
        int $i0;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.util.Set;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (byte[]) $r5;

        $r3 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.lang.String stringifyIP(byte[])>($r6);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 1 goto label3;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
    private java.util.Set unionDN(java.util.Set, org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        org.spongycastle.asn1.ASN1Sequence $r1, r6;
        java.util.HashSet r2;
        java.util.Set r3;
        boolean $z0;
        java.util.Iterator $r4;
        java.lang.Object $r5;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        r3 := @parameter0: java.util.Set;

        $r1 := @parameter1: org.spongycastle.asn1.ASN1Sequence;

        $z0 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        if $r1 != null goto label1;

        return r3;

     label1:
        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return r3;

     label2:
        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.spongycastle.asn1.ASN1Sequence) $r5;

        $z0 = staticinvoke <org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDNSubtree(org.spongycastle.asn1.ASN1Sequence,org.spongycastle.asn1.ASN1Sequence)>($r1, r6);

        if $z0 == 0 goto label4;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6);

        goto label3;

     label4:
        $z0 = staticinvoke <org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDNSubtree(org.spongycastle.asn1.ASN1Sequence,org.spongycastle.asn1.ASN1Sequence)>(r6, $r1);

        if $z0 == 0 goto label5;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        goto label3;

     label5:
        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        goto label3;

     label6:
        return r2;
    }
    private java.util.Set unionDNS(java.util.Set, java.lang.String)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.lang.String $r1, r6;
        java.util.HashSet r2;
        java.util.Set r3;
        boolean $z0;
        java.util.Iterator $r4;
        java.lang.Object $r5;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        r3 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        if $r1 != null goto label1;

        return r3;

     label1:
        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return r3;

     label2:
        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>(r6, $r1);

        if $z0 == 0 goto label4;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        goto label3;

     label4:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r1, r6);

        if $z0 == 0 goto label5;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6);

        goto label3;

     label5:
        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        goto label3;

     label6:
        return r2;
    }
    private java.util.Set unionEmail(java.util.Set, java.lang.String)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.lang.String $r1, r6;
        java.util.HashSet r2;
        java.util.Set r3;
        boolean $z0;
        java.util.Iterator $r4;
        java.lang.Object $r5;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        r3 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        if $r1 != null goto label1;

        return r3;

     label1:
        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return r3;

     label2:
        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void unionEmail(java.lang.String,java.lang.String,java.util.Set)>(r6, $r1, r2);

        goto label3;

     label4:
        return r2;
    }
    private void unionEmail(java.lang.String, java.lang.String, java.util.Set)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.lang.String $r1, $r2, $r4;
        java.util.Set $r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Set;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label06;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label02;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label01;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label01:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label02:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label04;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r4, $r2);

        if $z0 == 0 goto label03;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label03:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label04:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label05;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label05:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label06:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label14;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label08;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r4, $r1);

        if $z0 == 0 goto label07;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label07:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label08:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label12;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r1, $r2);

        if $z0 != 0 goto label09;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label10;

     label09:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label10:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r2, $r1);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label11:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label12:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r2, $r1);

        if $z0 == 0 goto label13;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label13:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label14:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label16;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label15;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label15:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label16:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label18;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r1, $r2);

        if $z0 == 0 goto label17;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label17:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label18:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label19;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label19:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;
    }
    private java.util.Set unionIP(java.util.Set, byte[])
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        byte[] $r1, $r6;
        java.util.HashSet r2;
        java.util.Set r3;
        boolean $z0;
        java.util.Iterator $r4;
        java.lang.Object $r5;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        r3 := @parameter0: java.util.Set;

        $r1 := @parameter1: byte[];

        $z0 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        if $r1 != null goto label1;

        return r3;

     label1:
        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return r3;

     label2:
        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (byte[]) $r5;

        r3 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set unionIPRange(byte[],byte[])>($r6, $r1);

        interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>(r3);

        goto label3;

     label4:
        return r2;
    }
    private java.util.Set unionIPRange(byte[], byte[])
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        byte[] $r1, $r2;
        java.util.HashSet r3;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r1, $r2);

        if $z0 == 0 goto label1;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return r3;

     label1:
        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return r3;
    }
    private java.util.Set unionURI(java.util.Set, java.lang.String)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.lang.String $r1, r6;
        java.util.HashSet r2;
        java.util.Set r3;
        boolean $z0;
        java.util.Iterator $r4;
        java.lang.Object $r5;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        r3 := @parameter0: java.util.Set;

        $r1 := @parameter1: java.lang.String;

        $z0 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        if $r1 != null goto label1;

        return r3;

     label1:
        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return r3;

     label2:
        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void unionURI(java.lang.String,java.lang.String,java.util.Set)>(r6, $r1, r2);

        goto label3;

     label4:
        return r2;
    }
    private void unionURI(java.lang.String, java.lang.String, java.util.Set)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.lang.String $r1, $r2, $r4;
        java.util.Set $r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Set;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label06;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label02;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label01;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label01:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label02:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label04;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r4, $r2);

        if $z0 == 0 goto label03;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label03:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label04:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label05;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label05:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label06:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label14;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label08;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r4, $r1);

        if $z0 == 0 goto label07;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label07:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label08:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label12;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r1, $r2);

        if $z0 != 0 goto label09;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label10;

     label09:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label10:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r2, $r1);

        if $z0 == 0 goto label11;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label11:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label12:
        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r2, $r1);

        if $z0 == 0 goto label13;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label13:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label14:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        if $i0 == -1 goto label16;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label15;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label15:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label16:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label18;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean withinDomain(java.lang.String,java.lang.String)>($r1, $r2);

        if $z0 == 0 goto label17;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label17:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;

     label18:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label19;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        return;

     label19:
        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        return;
    }
    private static boolean withinDNSubtree(org.spongycastle.asn1.ASN1Sequence, org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.ASN1Sequence $r0, $r1;
        int $i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        $r1 := @parameter1: org.spongycastle.asn1.ASN1Sequence;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $i1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 > $i1 goto label4;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $i0 = $i0 + -1;

     label2:
        if $i0 < 0 goto label3;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r3 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        $i0 = $i0 + -1;

        goto label2;

     label3:
        return 1;

     label4:
        return 0;
    }
    private boolean withinDomain(java.lang.String, java.lang.String)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.lang.String $r1, $r2, r3;
        int i0, $i1, $i2;
        boolean $z0;
        java.lang.String[] $r4, $r5;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r3 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label1;

        r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        $r4 = staticinvoke <org.spongycastle.util.Strings: java.lang.String[] split(java.lang.String,char)>(r3, 46);

        $r5 = staticinvoke <org.spongycastle.util.Strings: java.lang.String[] split(java.lang.String,char)>($r1, 46);

        i0 = lengthof $r5;

        $i1 = lengthof $r4;

        if i0 > $i1 goto label2;

        return 0;

     label2:
        i0 = lengthof $r5;

        $i1 = lengthof $r4;

        i0 = i0 - $i1;

        $i1 = -1;

     label3:
        $i2 = lengthof $r4;

        if $i1 >= $i2 goto label6;

        if $i1 != -1 goto label5;

        $i2 = $i1 + i0;

        $r1 = $r5[$i2];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label7;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        $r1 = $r4[$i1];

        $i2 = $i1 + i0;

        $r2 = $r5[$i2];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 != 0 goto label4;

        return 0;

     label6:
        return 1;

     label7:
        return 0;
    }
    public void addExcludedSubtree(org.spongycastle.asn1.x509.GeneralSubtree)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        org.spongycastle.asn1.x509.GeneralSubtree $r1;
        org.spongycastle.asn1.x509.GeneralName $r2;
        int $i0;
        java.util.Set $r3;
        java.lang.String $r4;
        org.spongycastle.asn1.ASN1Encodable $r5;
        org.spongycastle.asn1.ASN1Primitive $r6;
        org.spongycastle.asn1.ASN1Sequence $r7;
        org.spongycastle.asn1.ASN1OctetString $r8;
        byte[] $r9;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralSubtree;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.x509.GeneralName getBase()>();

        $i0 = virtualinvoke $r2.<org.spongycastle.asn1.x509.GeneralName: int getTagNo()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label4;
            case 5: goto label1;
            case 6: goto label5;
            case 7: goto label6;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r3 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesEmail>;

        $r4 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.lang.String extractNameAsString(org.spongycastle.asn1.x509.GeneralName)>($r2);

        $r3 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set unionEmail(java.util.Set,java.lang.String)>($r3, $r4);

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesEmail> = $r3;

        return;

     label3:
        $r3 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDNS>;

        $r4 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.lang.String extractNameAsString(org.spongycastle.asn1.x509.GeneralName)>($r2);

        $r3 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set unionDNS(java.util.Set,java.lang.String)>($r3, $r4);

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDNS> = $r3;

        return;

     label4:
        $r3 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDN>;

        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r6 = interfaceinvoke $r5.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r7 = (org.spongycastle.asn1.ASN1Sequence) $r6;

        $r3 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set unionDN(java.util.Set,org.spongycastle.asn1.ASN1Sequence)>($r3, $r7);

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDN> = $r3;

        return;

     label5:
        $r3 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesURI>;

        $r4 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.lang.String extractNameAsString(org.spongycastle.asn1.x509.GeneralName)>($r2);

        $r3 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set unionURI(java.util.Set,java.lang.String)>($r3, $r4);

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesURI> = $r3;

        return;

     label6:
        $r3 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesIP>;

        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r8 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r3 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set unionIP(java.util.Set,byte[])>($r3, $r9);

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesIP> = $r3;

        return;
    }
    public void checkExcluded(org.spongycastle.asn1.x509.GeneralName) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        org.spongycastle.asn1.x509.GeneralName $r1;
        int $i0;
        java.util.Set $r2;
        java.lang.String $r3;
        org.spongycastle.asn1.ASN1Encodable $r4;
        org.spongycastle.asn1.DERIA5String $r5;
        org.spongycastle.asn1.x500.X500Name $r6;
        org.spongycastle.asn1.ASN1OctetString $r7;
        byte[] $r8;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralName;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.x509.GeneralName: int getTagNo()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label4;
            case 5: goto label1;
            case 6: goto label5;
            case 7: goto label6;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r2 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesEmail>;

        $r3 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.lang.String extractNameAsString(org.spongycastle.asn1.x509.GeneralName)>($r1);

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void checkExcludedEmail(java.util.Set,java.lang.String)>($r2, $r3);

        return;

     label3:
        $r2 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDNS>;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r5 = staticinvoke <org.spongycastle.asn1.DERIA5String: org.spongycastle.asn1.DERIA5String getInstance(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r5.<org.spongycastle.asn1.DERIA5String: java.lang.String getString()>();

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void checkExcludedDNS(java.util.Set,java.lang.String)>($r2, $r3);

        return;

     label4:
        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r6 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r4);

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void checkExcludedDN(org.spongycastle.asn1.x500.X500Name)>($r6);

        return;

     label5:
        $r2 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesURI>;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r5 = staticinvoke <org.spongycastle.asn1.DERIA5String: org.spongycastle.asn1.DERIA5String getInstance(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r5.<org.spongycastle.asn1.DERIA5String: java.lang.String getString()>();

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void checkExcludedURI(java.util.Set,java.lang.String)>($r2, $r3);

        return;

     label6:
        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r2 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesIP>;

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void checkExcludedIP(java.util.Set,byte[])>($r2, $r8);

        return;
    }
    public void checkPermitted(org.spongycastle.asn1.x509.GeneralName) throws org.spongycastle.asn1.x509.NameConstraintValidatorException
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        org.spongycastle.asn1.x509.GeneralName $r1;
        int $i0;
        java.util.Set $r2;
        java.lang.String $r3;
        org.spongycastle.asn1.ASN1Encodable $r4;
        org.spongycastle.asn1.DERIA5String $r5;
        org.spongycastle.asn1.x500.X500Name $r6;
        org.spongycastle.asn1.ASN1OctetString $r7;
        byte[] $r8;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralName;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.x509.GeneralName: int getTagNo()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label4;
            case 5: goto label1;
            case 6: goto label5;
            case 7: goto label6;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r2 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesEmail>;

        $r3 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.lang.String extractNameAsString(org.spongycastle.asn1.x509.GeneralName)>($r1);

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void checkPermittedEmail(java.util.Set,java.lang.String)>($r2, $r3);

        return;

     label3:
        $r2 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDNS>;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r5 = staticinvoke <org.spongycastle.asn1.DERIA5String: org.spongycastle.asn1.DERIA5String getInstance(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r5.<org.spongycastle.asn1.DERIA5String: java.lang.String getString()>();

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void checkPermittedDNS(java.util.Set,java.lang.String)>($r2, $r3);

        return;

     label4:
        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r6 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r4);

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void checkPermittedDN(org.spongycastle.asn1.x500.X500Name)>($r6);

        return;

     label5:
        $r2 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesURI>;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r5 = staticinvoke <org.spongycastle.asn1.DERIA5String: org.spongycastle.asn1.DERIA5String getInstance(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r5.<org.spongycastle.asn1.DERIA5String: java.lang.String getString()>();

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void checkPermittedURI(java.util.Set,java.lang.String)>($r2, $r3);

        return;

     label6:
        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.ASN1Encodable getName()>();

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r2 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesIP>;

        specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void checkPermittedIP(java.util.Set,byte[])>($r2, $r8);

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        java.util.Set $r3, $r4;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.asn1.x509.PKIXNameConstraintValidator) $r1;

        $r3 = r2.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDN>;

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDN>;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean collectionsAreEqual(java.util.Collection,java.util.Collection)>($r3, $r4);

        if $z0 == 0 goto label2;

        $r3 = r2.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDNS>;

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDNS>;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean collectionsAreEqual(java.util.Collection,java.util.Collection)>($r3, $r4);

        if $z0 == 0 goto label2;

        $r3 = r2.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesEmail>;

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesEmail>;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean collectionsAreEqual(java.util.Collection,java.util.Collection)>($r3, $r4);

        if $z0 == 0 goto label2;

        $r3 = r2.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesIP>;

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesIP>;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean collectionsAreEqual(java.util.Collection,java.util.Collection)>($r3, $r4);

        if $z0 == 0 goto label2;

        $r3 = r2.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesURI>;

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesURI>;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean collectionsAreEqual(java.util.Collection,java.util.Collection)>($r3, $r4);

        if $z0 == 0 goto label2;

        $r3 = r2.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDN>;

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDN>;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean collectionsAreEqual(java.util.Collection,java.util.Collection)>($r3, $r4);

        if $z0 == 0 goto label2;

        $r3 = r2.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDNS>;

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDNS>;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean collectionsAreEqual(java.util.Collection,java.util.Collection)>($r3, $r4);

        if $z0 == 0 goto label2;

        $r3 = r2.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesEmail>;

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesEmail>;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean collectionsAreEqual(java.util.Collection,java.util.Collection)>($r3, $r4);

        if $z0 == 0 goto label2;

        $r3 = r2.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesIP>;

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesIP>;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean collectionsAreEqual(java.util.Collection,java.util.Collection)>($r3, $r4);

        if $z0 == 0 goto label2;

        $r3 = r2.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesURI>;

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesURI>;

        $z0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: boolean collectionsAreEqual(java.util.Collection,java.util.Collection)>($r3, $r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public int hashCode()
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.util.Set $r1;
        int $i0, $i1;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDN>;

        $i0 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: int hashCollection(java.util.Collection)>($r1);

        $r1 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDNS>;

        $i1 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: int hashCollection(java.util.Collection)>($r1);

        $i0 = $i0 + $i1;

        $r1 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesEmail>;

        $i1 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: int hashCollection(java.util.Collection)>($r1);

        $i0 = $i0 + $i1;

        $r1 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesIP>;

        $i1 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: int hashCollection(java.util.Collection)>($r1);

        $i0 = $i0 + $i1;

        $r1 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesURI>;

        $i1 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: int hashCollection(java.util.Collection)>($r1);

        $i0 = $i0 + $i1;

        $r1 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDN>;

        $i1 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: int hashCollection(java.util.Collection)>($r1);

        $i0 = $i0 + $i1;

        $r1 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDNS>;

        $i1 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: int hashCollection(java.util.Collection)>($r1);

        $i0 = $i0 + $i1;

        $r1 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesEmail>;

        $i1 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: int hashCollection(java.util.Collection)>($r1);

        $i0 = $i0 + $i1;

        $r1 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesIP>;

        $i1 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: int hashCollection(java.util.Collection)>($r1);

        $i0 = $i0 + $i1;

        $r1 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesURI>;

        $i1 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: int hashCollection(java.util.Collection)>($r1);

        $i0 = $i0 + $i1;

        return $i0;
    }
    public void intersectEmptyPermittedSubtree(int)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        int $i0;
        java.util.HashSet $r1;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label4;
            case 5: goto label1;
            case 6: goto label5;
            case 7: goto label6;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesEmail> = $r1;

        return;

     label3:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDNS> = $r1;

        return;

     label4:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDN> = $r1;

        return;

     label5:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesURI> = $r1;

        return;

     label6:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesIP> = $r1;

        return;
    }
    public void intersectPermittedSubtree(org.spongycastle.asn1.x509.GeneralSubtree)
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        org.spongycastle.asn1.x509.GeneralSubtree $r1;
        org.spongycastle.asn1.x509.GeneralSubtree[] $r2;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralSubtree;

        $r2 = newarray (org.spongycastle.asn1.x509.GeneralSubtree)[1];

        $r2[0] = $r1;

        virtualinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: void intersectPermittedSubtree(org.spongycastle.asn1.x509.GeneralSubtree[])>($r2);

        return;
    }
    public void intersectPermittedSubtree(org.spongycastle.asn1.x509.GeneralSubtree[])
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        org.spongycastle.asn1.x509.GeneralSubtree[] $r1;
        org.spongycastle.asn1.x509.GeneralSubtree r2;
        java.util.HashMap r3;
        int i0, $i1;
        org.spongycastle.asn1.x509.GeneralName $r4;
        java.lang.Integer $r5;
        java.lang.Object $r6;
        java.util.HashSet $r7;
        java.util.Set $r8, $r11;
        java.util.Iterator $r9;
        boolean $z0;
        java.util.Map$Entry r10;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralSubtree[];

        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        i0 = 0;

     label01:
        $i1 = lengthof $r1;

        if i0 == $i1 goto label03;

        r2 = $r1[i0];

        $r4 = virtualinvoke r2.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.x509.GeneralName getBase()>();

        $i1 = virtualinvoke $r4.<org.spongycastle.asn1.x509.GeneralName: int getTagNo()>();

        $r5 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>($i1);

        $r6 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        if $r6 != null goto label02;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label02:
        $r6 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r8 = (java.util.Set) $r6;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r2);

        i0 = i0 + 1;

        goto label01;

     label03:
        $r8 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r6 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.Integer) $r6;

        i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        lookupswitch(i0)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label05;
            case 4: goto label08;
            case 5: goto label05;
            case 6: goto label09;
            case 7: goto label10;
            default: goto label05;
        };

     label05:
        goto label04;

     label06:
        $r8 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesEmail>;

        $r6 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.util.Set) $r6;

        $r8 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set intersectEmail(java.util.Set,java.util.Set)>($r8, $r11);

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesEmail> = $r8;

        goto label04;

     label07:
        $r8 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDNS>;

        $r6 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.util.Set) $r6;

        $r8 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set intersectDNS(java.util.Set,java.util.Set)>($r8, $r11);

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDNS> = $r8;

        goto label04;

     label08:
        $r8 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDN>;

        $r6 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.util.Set) $r6;

        $r8 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set intersectDN(java.util.Set,java.util.Set)>($r8, $r11);

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDN> = $r8;

        goto label04;

     label09:
        $r8 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesURI>;

        $r6 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.util.Set) $r6;

        $r8 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set intersectURI(java.util.Set,java.util.Set)>($r8, $r11);

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesURI> = $r8;

        goto label04;

     label10:
        $r8 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesIP>;

        $r6 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.util.Set) $r6;

        $r8 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set intersectIP(java.util.Set,java.util.Set)>($r8, $r11);

        r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesIP> = $r8;

        goto label04;

     label11:
        return;
    }
    public java.lang.String toString()
    {
        org.spongycastle.asn1.x509.PKIXNameConstraintValidator r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, r3;
        java.util.Set $r4;
        boolean $z0;

        r0 := @this: org.spongycastle.asn1.x509.PKIXNameConstraintValidator;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("permitted:\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = $r2;

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDN>;

        if $r4 == null goto label01;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DN:\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDN>;

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDNS>;

        if $r4 == null goto label02;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DNS:\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesDNS>;

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesEmail>;

        if $r4 == null goto label03;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Email:\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesEmail>;

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesURI>;

        if $r4 == null goto label04;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URI:\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesURI>;

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesIP>;

        if $r4 == null goto label05;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IP:\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set permittedSubtreesIP>;

        $r2 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.lang.String stringifyIPCollection(java.util.Set)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("excluded:\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = $r2;

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDN>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label06;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DN:\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDN>;

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDNS>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label07;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DNS:\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesDNS>;

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesEmail>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label08;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Email:\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesEmail>;

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesURI>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label09;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URI:\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesURI>;

        $r2 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesIP>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label10;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IP:\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.util.Set excludedSubtreesIP>;

        $r2 = specialinvoke r0.<org.spongycastle.asn1.x509.PKIXNameConstraintValidator: java.lang.String stringifyIPCollection(java.util.Set)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label10:
        return r3;
    }
