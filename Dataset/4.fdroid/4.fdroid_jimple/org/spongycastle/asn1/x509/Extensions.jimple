org.spongycastle.asn1.x509.Extensions extends org.spongycastle.asn1.ASN1Object
private java.util.Hashtable extensions
private java.util.Vector ordering
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x509.Extensions r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        java.util.Hashtable $r2;
        java.util.Vector $r3;
        java.util.Enumeration $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.asn1.x509.Extension $r6;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r7;

        r0 := @this: org.spongycastle.asn1.x509.Extensions;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions> = $r2;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<org.spongycastle.asn1.x509.Extensions: java.util.Vector ordering> = $r3;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = staticinvoke <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.x509.Extension getInstance(java.lang.Object)>($r5);

        $r2 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions>;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier getExtnId()>();

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r6);

        $r3 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Vector ordering>;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier getExtnId()>();

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r7);

        goto label1;

     label2:
        return;
    }
    public void <init>(org.spongycastle.asn1.x509.Extension)
    {
        org.spongycastle.asn1.x509.Extensions r0;
        org.spongycastle.asn1.x509.Extension $r1;
        java.util.Hashtable $r2;
        java.util.Vector $r3;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r4;

        r0 := @this: org.spongycastle.asn1.x509.Extensions;

        $r1 := @parameter0: org.spongycastle.asn1.x509.Extension;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions> = $r2;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<org.spongycastle.asn1.x509.Extensions: java.util.Vector ordering> = $r3;

        $r3 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Vector ordering>;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier getExtnId()>();

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r2 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions>;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier getExtnId()>();

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r1);

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.Extension[])
    {
        org.spongycastle.asn1.x509.Extensions r0;
        org.spongycastle.asn1.x509.Extension[] $r1;
        org.spongycastle.asn1.x509.Extension r2;
        java.util.Hashtable $r3;
        java.util.Vector $r4;
        int i0, $i1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;

        r0 := @this: org.spongycastle.asn1.x509.Extensions;

        $r1 := @parameter0: org.spongycastle.asn1.x509.Extension[];

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        r0.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions> = $r3;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.spongycastle.asn1.x509.Extensions: java.util.Vector ordering> = $r4;

        i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if i0 == $i1 goto label2;

        r2 = $r1[i0];

        $r4 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Vector ordering>;

        $r5 = virtualinvoke r2.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier getExtnId()>();

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r3 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions>;

        $r5 = virtualinvoke r2.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier getExtnId()>();

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    private org.spongycastle.asn1.ASN1ObjectIdentifier[] getExtensionOIDs(boolean)
    {
        org.spongycastle.asn1.x509.Extensions r0;
        boolean $z0, $z1;
        java.util.Vector r1, $r2;
        int i0, $i1;
        java.lang.Object $r3, $r5;
        java.util.Hashtable $r4;
        org.spongycastle.asn1.x509.Extension $r6;
        org.spongycastle.asn1.ASN1ObjectIdentifier[] $r7;

        r0 := @this: org.spongycastle.asn1.x509.Extensions;

        $z0 := @parameter0: boolean;

        r1 = new java.util.Vector;

        specialinvoke r1.<java.util.Vector: void <init>()>();

        i0 = 0;

     label1:
        $r2 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Vector ordering>;

        $i1 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if i0 == $i1 goto label3;

        $r2 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Vector ordering>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r3);

        $r6 = (org.spongycastle.asn1.x509.Extension) $r5;

        $z1 = virtualinvoke $r6.<org.spongycastle.asn1.x509.Extension: boolean isCritical()>();

        if $z1 != $z0 goto label2;

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r3);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r7 = specialinvoke r0.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier[] toOidArray(java.util.Vector)>(r1);

        return $r7;
    }
    public static org.spongycastle.asn1.x509.Extensions getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.x509.Extensions r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.x509.Extensions;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.x509.Extensions) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.x509.Extensions;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.x509.Extensions: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public static org.spongycastle.asn1.x509.Extensions getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.x509.Extensions $r2;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r0, $z0);

        $r2 = staticinvoke <org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extensions getInstance(java.lang.Object)>($r1);

        return $r2;
    }
    private org.spongycastle.asn1.ASN1ObjectIdentifier[] toOidArray(java.util.Vector)
    {
        org.spongycastle.asn1.x509.Extensions r0;
        java.util.Vector $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier[] r2;
        int $i0, $i1;
        java.lang.Object $r3;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r4;

        r0 := @this: org.spongycastle.asn1.x509.Extensions;

        $r1 := @parameter0: java.util.Vector;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        r2 = newarray (org.spongycastle.asn1.ASN1ObjectIdentifier)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r2;

        if $i0 == $i1 goto label2;

        $r3 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r4 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r3;

        r2[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r2;
    }
    public boolean equivalent(org.spongycastle.asn1.x509.Extensions)
    {
        org.spongycastle.asn1.x509.Extensions r0, $r1;
        java.util.Hashtable $r2;
        int $i0, $i1;
        java.util.Enumeration $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;

        r0 := @this: org.spongycastle.asn1.x509.Extensions;

        $r1 := @parameter0: org.spongycastle.asn1.x509.Extensions;

        $r2 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions>;

        $i0 = virtualinvoke $r2.<java.util.Hashtable: int size()>();

        $r2 = $r1.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions>;

        $i1 = virtualinvoke $r2.<java.util.Hashtable: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r2 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions>;

        $r5 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r4);

        $r2 = $r1.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions>;

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r4);

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        return 0;

     label3:
        return 1;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier[] getCriticalExtensionOIDs()
    {
        org.spongycastle.asn1.x509.Extensions r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier[] $r1;

        r0 := @this: org.spongycastle.asn1.x509.Extensions;

        $r1 = specialinvoke r0.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier[] getExtensionOIDs(boolean)>(1);

        return $r1;
    }
    public org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.asn1.x509.Extensions r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.lang.Object $r2;
        java.util.Hashtable $r3;
        org.spongycastle.asn1.x509.Extension $r4;

        r0 := @this: org.spongycastle.asn1.x509.Extensions;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions>;

        $r2 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (org.spongycastle.asn1.x509.Extension) $r2;

        return $r4;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier[] getExtensionOIDs()
    {
        org.spongycastle.asn1.x509.Extensions r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier[] $r1;
        java.util.Vector $r2;

        r0 := @this: org.spongycastle.asn1.x509.Extensions;

        $r2 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Vector ordering>;

        $r1 = specialinvoke r0.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier[] toOidArray(java.util.Vector)>($r2);

        return $r1;
    }
    public org.spongycastle.asn1.ASN1Encodable getExtensionParsedValue(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.asn1.x509.Extensions r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.x509.Extension $r2;
        org.spongycastle.asn1.ASN1Encodable $r3;

        r0 := @this: org.spongycastle.asn1.x509.Extensions;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = virtualinvoke r0.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1Encodable getParsedValue()>();

        return $r3;

     label1:
        return null;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier[] getNonCriticalExtensionOIDs()
    {
        org.spongycastle.asn1.x509.Extensions r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier[] $r1;

        r0 := @this: org.spongycastle.asn1.x509.Extensions;

        $r1 = specialinvoke r0.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.ASN1ObjectIdentifier[] getExtensionOIDs(boolean)>(0);

        return $r1;
    }
    public java.util.Enumeration oids()
    {
        org.spongycastle.asn1.x509.Extensions r0;
        java.util.Enumeration $r1;
        java.util.Vector $r2;

        r0 := @this: org.spongycastle.asn1.x509.Extensions;

        $r2 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Vector ordering>;

        $r1 = virtualinvoke $r2.<java.util.Vector: java.util.Enumeration elements()>();

        return $r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.x509.Extensions r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        java.util.Vector $r2;
        java.util.Enumeration $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier r5;
        java.util.Hashtable $r6;
        org.spongycastle.asn1.x509.Extension r7;
        org.spongycastle.asn1.DERSequence $r8;

        r0 := @this: org.spongycastle.asn1.x509.Extensions;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Vector ordering>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r4;

        $r6 = r0.<org.spongycastle.asn1.x509.Extensions: java.util.Hashtable extensions>;

        $r4 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (org.spongycastle.asn1.x509.Extension) $r4;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>(r7);

        goto label1;

     label2:
        $r8 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r8.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r8;
    }
