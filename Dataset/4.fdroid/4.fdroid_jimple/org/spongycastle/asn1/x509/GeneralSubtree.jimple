org.spongycastle.asn1.x509.GeneralSubtree extends org.spongycastle.asn1.ASN1Object
private static final java.math.BigInteger ZERO
private org.spongycastle.asn1.x509.GeneralName base
private org.spongycastle.asn1.ASN1Integer maximum
private org.spongycastle.asn1.ASN1Integer minimum
    static void <clinit>()
    {
        java.math.BigInteger $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(0L);

        <org.spongycastle.asn1.x509.GeneralSubtree: java.math.BigInteger ZERO> = $r0;

        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x509.GeneralSubtree r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.x509.GeneralName $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        org.spongycastle.asn1.ASN1TaggedObject $r7;
        org.spongycastle.asn1.ASN1Integer $r8;

        r0 := @this: org.spongycastle.asn1.x509.GeneralSubtree;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r3 = staticinvoke <org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.x509.GeneralName getInstance(java.lang.Object)>($r2);

        r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.x509.GeneralName base> = $r3;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        lookupswitch($i0)
        {
            case 1: goto label5;
            case 2: goto label2;
            case 3: goto label7;
            default: goto label1;
        };

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad sequence size: ");

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label6;
            default: goto label3;
        };

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad tag number: ");

        $i0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label4:
        $r8 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r7, 0);

        r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer minimum> = $r8;

     label5:
        return;

     label6:
        $r8 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r7, 0);

        r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer maximum> = $r8;

        return;

     label7:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        if $i0 == 0 goto label8;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad tag number for \'minimum\': ");

        $i0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label8:
        $r8 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r7, 0);

        r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer minimum> = $r8;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(2);

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        if $i0 == 1 goto label9;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad tag number for \'maximum\': ");

        $i0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label9:
        $r8 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r7, 0);

        r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer maximum> = $r8;

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.GeneralName)
    {
        org.spongycastle.asn1.x509.GeneralSubtree r0;
        org.spongycastle.asn1.x509.GeneralName $r1;

        r0 := @this: org.spongycastle.asn1.x509.GeneralSubtree;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralName;

        specialinvoke r0.<org.spongycastle.asn1.x509.GeneralSubtree: void <init>(org.spongycastle.asn1.x509.GeneralName,java.math.BigInteger,java.math.BigInteger)>($r1, null, null);

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.GeneralName, java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.asn1.x509.GeneralSubtree r0;
        org.spongycastle.asn1.x509.GeneralName $r1;
        java.math.BigInteger $r2, $r3;
        org.spongycastle.asn1.ASN1Integer $r4;

        r0 := @this: org.spongycastle.asn1.x509.GeneralSubtree;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralName;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.x509.GeneralName base> = $r1;

        if $r3 == null goto label1;

        $r4 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r4.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r3);

        r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer maximum> = $r4;

     label1:
        if $r2 != null goto label2;

        r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer minimum> = null;

        return;

     label2:
        $r4 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r4.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r2);

        r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer minimum> = $r4;

        return;
    }
    public static org.spongycastle.asn1.x509.GeneralSubtree getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.x509.GeneralSubtree r2;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = r1 instanceof org.spongycastle.asn1.x509.GeneralSubtree;

        if $z0 == 0 goto label2;

        r2 = (org.spongycastle.asn1.x509.GeneralSubtree) r1;

        return r2;

     label2:
        r2 = new org.spongycastle.asn1.x509.GeneralSubtree;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.x509.GeneralSubtree: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;
    }
    public static org.spongycastle.asn1.x509.GeneralSubtree getInstance(org.spongycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.spongycastle.asn1.ASN1TaggedObject $r0;
        boolean $z0;
        org.spongycastle.asn1.x509.GeneralSubtree $r1;
        org.spongycastle.asn1.ASN1Sequence $r2;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1TaggedObject;

        $z0 := @parameter1: boolean;

        $r1 = new org.spongycastle.asn1.x509.GeneralSubtree;

        $r2 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r0, $z0);

        specialinvoke $r1.<org.spongycastle.asn1.x509.GeneralSubtree: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r2);

        return $r1;
    }
    public org.spongycastle.asn1.x509.GeneralName getBase()
    {
        org.spongycastle.asn1.x509.GeneralSubtree r0;
        org.spongycastle.asn1.x509.GeneralName r1;

        r0 := @this: org.spongycastle.asn1.x509.GeneralSubtree;

        r1 = r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.x509.GeneralName base>;

        return r1;
    }
    public java.math.BigInteger getMaximum()
    {
        org.spongycastle.asn1.x509.GeneralSubtree r0;
        java.math.BigInteger $r1;
        org.spongycastle.asn1.ASN1Integer $r2;

        r0 := @this: org.spongycastle.asn1.x509.GeneralSubtree;

        $r2 = r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer maximum>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer maximum>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        return $r1;
    }
    public java.math.BigInteger getMinimum()
    {
        org.spongycastle.asn1.x509.GeneralSubtree r0;
        java.math.BigInteger $r1;
        org.spongycastle.asn1.ASN1Integer $r2;

        r0 := @this: org.spongycastle.asn1.x509.GeneralSubtree;

        $r2 = r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer minimum>;

        if $r2 != null goto label1;

        $r1 = <org.spongycastle.asn1.x509.GeneralSubtree: java.math.BigInteger ZERO>;

        return $r1;

     label1:
        $r2 = r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer minimum>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        return $r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.x509.GeneralSubtree r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.ASN1Integer $r2;
        org.spongycastle.asn1.x509.GeneralName $r3;
        java.math.BigInteger $r4, $r5;
        boolean $z0;
        org.spongycastle.asn1.DERTaggedObject $r6;
        org.spongycastle.asn1.DERSequence $r7;

        r0 := @this: org.spongycastle.asn1.x509.GeneralSubtree;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.x509.GeneralName base>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r2 = r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer minimum>;

        if $r2 == null goto label1;

        $r2 = r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer minimum>;

        $r4 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $r5 = <org.spongycastle.asn1.x509.GeneralSubtree: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke $r4.<java.math.BigInteger: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r6 = new org.spongycastle.asn1.DERTaggedObject;

        $r2 = r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer minimum>;

        specialinvoke $r6.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 0, $r2);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r6);

     label1:
        $r2 = r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer maximum>;

        if $r2 == null goto label2;

        $r6 = new org.spongycastle.asn1.DERTaggedObject;

        $r2 = r0.<org.spongycastle.asn1.x509.GeneralSubtree: org.spongycastle.asn1.ASN1Integer maximum>;

        specialinvoke $r6.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 1, $r2);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r6);

     label2:
        $r7 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r7.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r7;
    }
