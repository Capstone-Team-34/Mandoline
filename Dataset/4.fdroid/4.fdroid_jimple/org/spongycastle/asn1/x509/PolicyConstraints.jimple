org.spongycastle.asn1.x509.PolicyConstraints extends org.spongycastle.asn1.ASN1Object
private java.math.BigInteger inhibitPolicyMapping
private java.math.BigInteger requireExplicitPolicyMapping
    public void <init>(java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.asn1.x509.PolicyConstraints r0;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.spongycastle.asn1.x509.PolicyConstraints;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.spongycastle.asn1.x509.PolicyConstraints: java.math.BigInteger requireExplicitPolicyMapping> = $r1;

        r0.<org.spongycastle.asn1.x509.PolicyConstraints: java.math.BigInteger inhibitPolicyMapping> = $r2;

        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x509.PolicyConstraints r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        int i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.ASN1TaggedObject $r3;
        org.spongycastle.asn1.ASN1Integer $r4;
        java.math.BigInteger $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.spongycastle.asn1.x509.PolicyConstraints;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        specialinvoke r0.<org.spongycastle.asn1.ASN1Object: void <init>()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if i0 == $i1 goto label5;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(i0);

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1TaggedObject: org.spongycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)>($r2);

        $i1 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        if $i1 != 0 goto label3;

        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r3, 0);

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.asn1.x509.PolicyConstraints: java.math.BigInteger requireExplicitPolicyMapping> = $r5;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $i1 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        if $i1 != 1 goto label4;

        $r4 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)>($r3, 0);

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        r0.<org.spongycastle.asn1.x509.PolicyConstraints: java.math.BigInteger inhibitPolicyMapping> = $r5;

        goto label2;

     label4:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown tag encountered.");

        throw $r6;

     label5:
        return;
    }
    public static org.spongycastle.asn1.x509.PolicyConstraints fromExtensions(org.spongycastle.asn1.x509.Extensions)
    {
        org.spongycastle.asn1.x509.Extensions $r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.x509.PolicyConstraints $r3;

        $r0 := @parameter0: org.spongycastle.asn1.x509.Extensions;

        $r1 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier policyConstraints>;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.ASN1Encodable getExtensionParsedValue(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        $r3 = staticinvoke <org.spongycastle.asn1.x509.PolicyConstraints: org.spongycastle.asn1.x509.PolicyConstraints getInstance(java.lang.Object)>($r2);

        return $r3;
    }
    public static org.spongycastle.asn1.x509.PolicyConstraints getInstance(java.lang.Object)
    {
        org.spongycastle.asn1.ASN1Sequence $r0;
        java.lang.Object r1;
        boolean $z0;
        org.spongycastle.asn1.x509.PolicyConstraints r2;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.asn1.x509.PolicyConstraints;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.asn1.x509.PolicyConstraints) r1;

        return r2;

     label1:
        if r1 == null goto label2;

        r2 = new org.spongycastle.asn1.x509.PolicyConstraints;

        $r0 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>(r1);

        specialinvoke r2.<org.spongycastle.asn1.x509.PolicyConstraints: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r0);

        return r2;

     label2:
        return null;
    }
    public java.math.BigInteger getInhibitPolicyMapping()
    {
        org.spongycastle.asn1.x509.PolicyConstraints r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.x509.PolicyConstraints;

        r1 = r0.<org.spongycastle.asn1.x509.PolicyConstraints: java.math.BigInteger inhibitPolicyMapping>;

        return r1;
    }
    public java.math.BigInteger getRequireExplicitPolicyMapping()
    {
        org.spongycastle.asn1.x509.PolicyConstraints r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.asn1.x509.PolicyConstraints;

        r1 = r0.<org.spongycastle.asn1.x509.PolicyConstraints: java.math.BigInteger requireExplicitPolicyMapping>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Primitive toASN1Primitive()
    {
        org.spongycastle.asn1.x509.PolicyConstraints r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        java.math.BigInteger $r2;
        org.spongycastle.asn1.DERTaggedObject $r3;
        org.spongycastle.asn1.ASN1Integer $r4;
        org.spongycastle.asn1.DERSequence $r5;

        r0 := @this: org.spongycastle.asn1.x509.PolicyConstraints;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = r0.<org.spongycastle.asn1.x509.PolicyConstraints: java.math.BigInteger requireExplicitPolicyMapping>;

        if $r2 == null goto label1;

        $r3 = new org.spongycastle.asn1.DERTaggedObject;

        $r4 = new org.spongycastle.asn1.ASN1Integer;

        $r2 = r0.<org.spongycastle.asn1.x509.PolicyConstraints: java.math.BigInteger requireExplicitPolicyMapping>;

        specialinvoke $r4.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r2);

        specialinvoke $r3.<org.spongycastle.asn1.DERTaggedObject: void <init>(int,org.spongycastle.asn1.ASN1Encodable)>(0, $r4);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label1:
        $r2 = r0.<org.spongycastle.asn1.x509.PolicyConstraints: java.math.BigInteger inhibitPolicyMapping>;

        if $r2 == null goto label2;

        $r3 = new org.spongycastle.asn1.DERTaggedObject;

        $r4 = new org.spongycastle.asn1.ASN1Integer;

        $r2 = r0.<org.spongycastle.asn1.x509.PolicyConstraints: java.math.BigInteger inhibitPolicyMapping>;

        specialinvoke $r4.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r2);

        specialinvoke $r3.<org.spongycastle.asn1.DERTaggedObject: void <init>(int,org.spongycastle.asn1.ASN1Encodable)>(1, $r4);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label2:
        $r5 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r5.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r5;
    }
