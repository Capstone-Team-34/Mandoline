org.spongycastle.asn1.x509.V2TBSCertListGenerator extends java.lang.Object
private static final org.spongycastle.asn1.ASN1Sequence[] reasons
private org.spongycastle.asn1.ASN1EncodableVector crlentries
private org.spongycastle.asn1.x509.Extensions extensions
private org.spongycastle.asn1.x500.X500Name issuer
private org.spongycastle.asn1.x509.Time nextUpdate
private org.spongycastle.asn1.x509.AlgorithmIdentifier signature
private org.spongycastle.asn1.x509.Time thisUpdate
private org.spongycastle.asn1.ASN1Integer version
    static void <clinit>()
    {
        org.spongycastle.asn1.ASN1Sequence[] $r0;
        org.spongycastle.asn1.ASN1Sequence $r1;

        $r0 = newarray (org.spongycastle.asn1.ASN1Sequence)[11];

        <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons> = $r0;

        $r0 = <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons>;

        $r1 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createReasonExtension(int)>(0);

        $r0[0] = $r1;

        $r0 = <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons>;

        $r1 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createReasonExtension(int)>(1);

        $r0[1] = $r1;

        $r0 = <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons>;

        $r1 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createReasonExtension(int)>(2);

        $r0[2] = $r1;

        $r0 = <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons>;

        $r1 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createReasonExtension(int)>(3);

        $r0[3] = $r1;

        $r0 = <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons>;

        $r1 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createReasonExtension(int)>(4);

        $r0[4] = $r1;

        $r0 = <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons>;

        $r1 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createReasonExtension(int)>(5);

        $r0[5] = $r1;

        $r0 = <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons>;

        $r1 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createReasonExtension(int)>(6);

        $r0[6] = $r1;

        $r0 = <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons>;

        $r1 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createReasonExtension(int)>(7);

        $r0[7] = $r1;

        $r0 = <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons>;

        $r1 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createReasonExtension(int)>(8);

        $r0[8] = $r1;

        $r0 = <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons>;

        $r1 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createReasonExtension(int)>(9);

        $r0[9] = $r1;

        $r0 = <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons>;

        $r1 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createReasonExtension(int)>(10);

        $r0[10] = $r1;

        return;
    }
    public void <init>()
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.ASN1Integer $r1;
        org.spongycastle.asn1.ASN1EncodableVector $r2;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r1.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(1L);

        r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Integer version> = $r1;

        r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.Time nextUpdate> = null;

        r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.Extensions extensions> = null;

        $r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1EncodableVector crlentries> = $r2;

        return;
    }
    private static org.spongycastle.asn1.ASN1Sequence createInvalidityDateExtension(org.spongycastle.asn1.ASN1GeneralizedTime)
    {
        org.spongycastle.asn1.ASN1GeneralizedTime $r0;
        java.io.IOException r1;
        org.spongycastle.asn1.ASN1EncodableVector r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        org.spongycastle.asn1.DEROctetString $r4;
        byte[] $r5;
        org.spongycastle.asn1.DERSequence $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1GeneralizedTime;

        r2 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier invalidityDate>;

     label1:
        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label2:
        $r4 = new org.spongycastle.asn1.DEROctetString;

     label3:
        $r5 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1GeneralizedTime: byte[] getEncoded()>();

        specialinvoke $r4.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r5);

        virtualinvoke r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

     label4:
        $r6 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r6.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r2);

        return $r6;

     label5:
        r1 := @caughtexception;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error encoding reason: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    private static org.spongycastle.asn1.ASN1Sequence createReasonExtension(int)
    {
        int $i0;
        java.io.IOException r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.x509.CRLReason $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        org.spongycastle.asn1.DEROctetString $r4;
        byte[] $r5;
        org.spongycastle.asn1.DERSequence $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        $i0 := @parameter0: int;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = staticinvoke <org.spongycastle.asn1.x509.CRLReason: org.spongycastle.asn1.x509.CRLReason lookup(int)>($i0);

        $r3 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier reasonCode>;

     label1:
        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label2:
        $r4 = new org.spongycastle.asn1.DEROctetString;

     label3:
        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.x509.CRLReason: byte[] getEncoded()>();

        specialinvoke $r4.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r5);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

     label4:
        $r6 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r6.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r6;

     label5:
        r0 := @caughtexception;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error encoding reason: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    private void internalAddCRLEntry(org.spongycastle.asn1.ASN1Integer, org.spongycastle.asn1.x509.Time, org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.ASN1Integer $r1;
        org.spongycastle.asn1.x509.Time $r2;
        org.spongycastle.asn1.ASN1Sequence $r3;
        org.spongycastle.asn1.ASN1EncodableVector r4;
        org.spongycastle.asn1.DERSequence $r5;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Integer;

        $r2 := @parameter1: org.spongycastle.asn1.x509.Time;

        $r3 := @parameter2: org.spongycastle.asn1.ASN1Sequence;

        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r1);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        if $r3 == null goto label1;

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label1:
        $r5 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r5.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        virtualinvoke r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: void addCRLEntry(org.spongycastle.asn1.ASN1Sequence)>($r5);

        return;
    }
    public void addCRLEntry(org.spongycastle.asn1.ASN1Integer, org.spongycastle.asn1.ASN1UTCTime, int)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.ASN1Integer $r1;
        org.spongycastle.asn1.ASN1UTCTime $r2;
        int $i0;
        org.spongycastle.asn1.x509.Time $r3;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Integer;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1UTCTime;

        $i0 := @parameter2: int;

        $r3 = new org.spongycastle.asn1.x509.Time;

        specialinvoke $r3.<org.spongycastle.asn1.x509.Time: void <init>(org.spongycastle.asn1.ASN1Primitive)>($r2);

        virtualinvoke r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: void addCRLEntry(org.spongycastle.asn1.ASN1Integer,org.spongycastle.asn1.x509.Time,int)>($r1, $r3, $i0);

        return;
    }
    public void addCRLEntry(org.spongycastle.asn1.ASN1Integer, org.spongycastle.asn1.x509.Time, int)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.ASN1Integer $r1;
        org.spongycastle.asn1.x509.Time $r2;
        int $i0;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Integer;

        $r2 := @parameter1: org.spongycastle.asn1.x509.Time;

        $i0 := @parameter2: int;

        virtualinvoke r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: void addCRLEntry(org.spongycastle.asn1.ASN1Integer,org.spongycastle.asn1.x509.Time,int,org.spongycastle.asn1.ASN1GeneralizedTime)>($r1, $r2, $i0, null);

        return;
    }
    public void addCRLEntry(org.spongycastle.asn1.ASN1Integer, org.spongycastle.asn1.x509.Time, int, org.spongycastle.asn1.ASN1GeneralizedTime)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.ASN1Integer $r1;
        org.spongycastle.asn1.x509.Time $r2;
        int $i0, $i1;
        org.spongycastle.asn1.ASN1GeneralizedTime $r3;
        org.spongycastle.asn1.ASN1EncodableVector r4;
        org.spongycastle.asn1.ASN1Sequence[] $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        org.spongycastle.asn1.ASN1Sequence $r9;
        org.spongycastle.asn1.DERSequence $r10;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Integer;

        $r2 := @parameter1: org.spongycastle.asn1.x509.Time;

        $i0 := @parameter2: int;

        $r3 := @parameter3: org.spongycastle.asn1.ASN1GeneralizedTime;

        if $i0 == 0 goto label5;

        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r5 = <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons>;

        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label4;

        if $i0 >= 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid reason value: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label1:
        $r5 = <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence[] reasons>;

        $r9 = $r5[$i0];

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r9);

     label2:
        if $r3 == null goto label3;

        $r9 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createInvalidityDateExtension(org.spongycastle.asn1.ASN1GeneralizedTime)>($r3);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r9);

     label3:
        $r10 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r10.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        specialinvoke r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: void internalAddCRLEntry(org.spongycastle.asn1.ASN1Integer,org.spongycastle.asn1.x509.Time,org.spongycastle.asn1.ASN1Sequence)>($r1, $r2, $r10);

        return;

     label4:
        $r9 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createReasonExtension(int)>($i0);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r9);

        goto label2;

     label5:
        if $r3 == null goto label6;

        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r9 = staticinvoke <org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Sequence createInvalidityDateExtension(org.spongycastle.asn1.ASN1GeneralizedTime)>($r3);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r9);

        $r10 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r10.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        specialinvoke r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: void internalAddCRLEntry(org.spongycastle.asn1.ASN1Integer,org.spongycastle.asn1.x509.Time,org.spongycastle.asn1.ASN1Sequence)>($r1, $r2, $r10);

        return;

     label6:
        virtualinvoke r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: void addCRLEntry(org.spongycastle.asn1.ASN1Integer,org.spongycastle.asn1.x509.Time,org.spongycastle.asn1.x509.Extensions)>($r1, $r2, null);

        return;
    }
    public void addCRLEntry(org.spongycastle.asn1.ASN1Integer, org.spongycastle.asn1.x509.Time, org.spongycastle.asn1.x509.Extensions)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.ASN1Integer $r1;
        org.spongycastle.asn1.x509.Time $r2;
        org.spongycastle.asn1.x509.Extensions $r3;
        org.spongycastle.asn1.ASN1EncodableVector r4;
        org.spongycastle.asn1.DERSequence $r5;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Integer;

        $r2 := @parameter1: org.spongycastle.asn1.x509.Time;

        $r3 := @parameter2: org.spongycastle.asn1.x509.Extensions;

        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r1);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        if $r3 == null goto label1;

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label1:
        $r5 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r5.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        virtualinvoke r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: void addCRLEntry(org.spongycastle.asn1.ASN1Sequence)>($r5);

        return;
    }
    public void addCRLEntry(org.spongycastle.asn1.ASN1Sequence)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.ASN1EncodableVector $r2;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Sequence;

        $r2 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1EncodableVector crlentries>;

        virtualinvoke $r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r1);

        return;
    }
    public org.spongycastle.asn1.x509.TBSCertList generateTBSCertList()
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.ASN1EncodableVector r1, $r8;
        org.spongycastle.asn1.x509.Extensions $r2;
        int $i0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.spongycastle.asn1.x500.X500Name $r4;
        org.spongycastle.asn1.x509.Time $r5;
        java.lang.IllegalStateException $r6;
        org.spongycastle.asn1.ASN1Integer $r7;
        org.spongycastle.asn1.DERSequence $r9;
        org.spongycastle.asn1.DERTaggedObject $r10;
        org.spongycastle.asn1.x509.TBSCertList $r11;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r3 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.AlgorithmIdentifier signature>;

        if $r3 == null goto label1;

        $r4 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x500.X500Name issuer>;

        if $r4 == null goto label1;

        $r5 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.Time thisUpdate>;

        if $r5 != null goto label2;

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not all mandatory fields set in V2 TBSCertList generator.");

        throw $r6;

     label2:
        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r7 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1Integer version>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r7);

        $r3 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.AlgorithmIdentifier signature>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r4 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x500.X500Name issuer>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r5 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.Time thisUpdate>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $r5 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.Time nextUpdate>;

        if $r5 == null goto label3;

        $r5 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.Time nextUpdate>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

     label3:
        $r8 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1EncodableVector crlentries>;

        $i0 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1EncodableVector: int size()>();

        if $i0 == 0 goto label4;

        $r9 = new org.spongycastle.asn1.DERSequence;

        $r8 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.ASN1EncodableVector crlentries>;

        specialinvoke $r9.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r8);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r9);

     label4:
        $r2 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.Extensions extensions>;

        if $r2 == null goto label5;

        $r10 = new org.spongycastle.asn1.DERTaggedObject;

        $r2 = r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.Extensions extensions>;

        specialinvoke $r10.<org.spongycastle.asn1.DERTaggedObject: void <init>(int,org.spongycastle.asn1.ASN1Encodable)>(0, $r2);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r10);

     label5:
        $r11 = new org.spongycastle.asn1.x509.TBSCertList;

        $r9 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r9.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        specialinvoke $r11.<org.spongycastle.asn1.x509.TBSCertList: void <init>(org.spongycastle.asn1.ASN1Sequence)>($r9);

        return $r11;
    }
    public void setExtensions(org.spongycastle.asn1.x509.Extensions)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.x509.Extensions $r1;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.x509.Extensions;

        r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.Extensions extensions> = $r1;

        return;
    }
    public void setExtensions(org.spongycastle.asn1.x509.X509Extensions)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.x509.X509Extensions $r1;
        org.spongycastle.asn1.x509.Extensions $r2;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.x509.X509Extensions;

        $r2 = staticinvoke <org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extensions getInstance(java.lang.Object)>($r1);

        virtualinvoke r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: void setExtensions(org.spongycastle.asn1.x509.Extensions)>($r2);

        return;
    }
    public void setIssuer(org.spongycastle.asn1.x500.X500Name)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.x500.X500Name $r1;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.x500.X500Name;

        r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x500.X500Name issuer> = $r1;

        return;
    }
    public void setIssuer(org.spongycastle.asn1.x509.X509Name)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.x509.X509Name $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        org.spongycastle.asn1.x500.X500Name $r3;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.x509.X509Name;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.X509Name: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r3 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r2);

        r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x500.X500Name issuer> = $r3;

        return;
    }
    public void setNextUpdate(org.spongycastle.asn1.ASN1UTCTime)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.ASN1UTCTime $r1;
        org.spongycastle.asn1.x509.Time $r2;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1UTCTime;

        $r2 = new org.spongycastle.asn1.x509.Time;

        specialinvoke $r2.<org.spongycastle.asn1.x509.Time: void <init>(org.spongycastle.asn1.ASN1Primitive)>($r1);

        r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.Time nextUpdate> = $r2;

        return;
    }
    public void setNextUpdate(org.spongycastle.asn1.x509.Time)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.x509.Time $r1;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.x509.Time;

        r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.Time nextUpdate> = $r1;

        return;
    }
    public void setSignature(org.spongycastle.asn1.x509.AlgorithmIdentifier)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.AlgorithmIdentifier signature> = $r1;

        return;
    }
    public void setThisUpdate(org.spongycastle.asn1.ASN1UTCTime)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.ASN1UTCTime $r1;
        org.spongycastle.asn1.x509.Time $r2;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1UTCTime;

        $r2 = new org.spongycastle.asn1.x509.Time;

        specialinvoke $r2.<org.spongycastle.asn1.x509.Time: void <init>(org.spongycastle.asn1.ASN1Primitive)>($r1);

        r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.Time thisUpdate> = $r2;

        return;
    }
    public void setThisUpdate(org.spongycastle.asn1.x509.Time)
    {
        org.spongycastle.asn1.x509.V2TBSCertListGenerator r0;
        org.spongycastle.asn1.x509.Time $r1;

        r0 := @this: org.spongycastle.asn1.x509.V2TBSCertListGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.x509.Time;

        r0.<org.spongycastle.asn1.x509.V2TBSCertListGenerator: org.spongycastle.asn1.x509.Time thisUpdate> = $r1;

        return;
    }
