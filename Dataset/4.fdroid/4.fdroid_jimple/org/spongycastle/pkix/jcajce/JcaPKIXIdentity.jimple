org.spongycastle.pkix.jcajce.JcaPKIXIdentity extends org.spongycastle.pkix.PKIXIdentity
private final java.security.cert.X509Certificate[] certs
private final java.security.PrivateKey privKey
    public void <init>(java.security.PrivateKey, java.security.cert.X509Certificate[])
    {
        org.spongycastle.pkix.jcajce.JcaPKIXIdentity r0;
        java.security.PrivateKey $r1;
        java.security.cert.X509Certificate[] $r2, $r5;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r3;
        org.spongycastle.cert.X509CertificateHolder[] $r4;
        int $i0;

        r0 := @this: org.spongycastle.pkix.jcajce.JcaPKIXIdentity;

        $r1 := @parameter0: java.security.PrivateKey;

        $r2 := @parameter1: java.security.cert.X509Certificate[];

        $r3 = staticinvoke <org.spongycastle.pkix.jcajce.JcaPKIXIdentity: org.spongycastle.asn1.pkcs.PrivateKeyInfo getPrivateKeyInfo(java.security.PrivateKey)>($r1);

        $r4 = staticinvoke <org.spongycastle.pkix.jcajce.JcaPKIXIdentity: org.spongycastle.cert.X509CertificateHolder[] getCertificates(java.security.cert.X509Certificate[])>($r2);

        specialinvoke r0.<org.spongycastle.pkix.PKIXIdentity: void <init>(org.spongycastle.asn1.pkcs.PrivateKeyInfo,org.spongycastle.cert.X509CertificateHolder[])>($r3, $r4);

        r0.<org.spongycastle.pkix.jcajce.JcaPKIXIdentity: java.security.PrivateKey privKey> = $r1;

        $i0 = lengthof $r2;

        $r5 = newarray (java.security.cert.X509Certificate)[$i0];

        r0.<org.spongycastle.pkix.jcajce.JcaPKIXIdentity: java.security.cert.X509Certificate[] certs> = $r5;

        $r5 = r0.<org.spongycastle.pkix.jcajce.JcaPKIXIdentity: java.security.cert.X509Certificate[] certs>;

        $i0 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r5, 0, $i0);

        return;
    }
    private static org.spongycastle.cert.X509CertificateHolder[] getCertificates(java.security.cert.X509Certificate[])
    {
        java.security.cert.X509Certificate[] $r0;
        java.lang.Object[] r1;
        java.security.cert.CertificateEncodingException r2;
        int $i0, $i1;
        java.security.cert.X509Certificate $r3;
        java.lang.StringBuilder $r4, $r7;
        java.lang.String $r5;
        org.spongycastle.cert.jcajce.JcaX509CertificateHolder $r6;
        java.lang.IllegalArgumentException $r8;
        org.spongycastle.cert.X509CertificateHolder[] $r9;

        $r0 := @parameter0: java.security.cert.X509Certificate[];

        $i0 = lengthof $r0;

        r1 = newarray (org.spongycastle.cert.X509CertificateHolder)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 == $i1 goto label5;

        $r6 = new org.spongycastle.cert.jcajce.JcaX509CertificateHolder;

        $r3 = $r0[$i0];

     label2:
        specialinvoke $r6.<org.spongycastle.cert.jcajce.JcaX509CertificateHolder: void <init>(java.security.cert.X509Certificate)>($r3);

     label3:
        r1[$i0] = $r6;

        $i0 = $i0 + 1;

        goto label1;

     label4:
        r2 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to process certificates: ");

        $r5 = virtualinvoke r2.<java.security.cert.CertificateEncodingException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label5:
        $r9 = (org.spongycastle.cert.X509CertificateHolder[]) r1;

        return $r9;

        catch java.security.cert.CertificateEncodingException from label2 to label3 with label4;
    }
    private static org.spongycastle.asn1.pkcs.PrivateKeyInfo getPrivateKeyInfo(java.security.PrivateKey)
    {
        java.security.PrivateKey $r0;
        java.lang.Exception r1;
        byte[] $r2;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r3;

        $r0 := @parameter0: java.security.PrivateKey;

     label1:
        $r2 = interfaceinvoke $r0.<java.security.PrivateKey: byte[] getEncoded()>();

        $r3 = staticinvoke <org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)>($r2);

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public java.security.PrivateKey getPrivateKey()
    {
        org.spongycastle.pkix.jcajce.JcaPKIXIdentity r0;
        java.security.PrivateKey r1;

        r0 := @this: org.spongycastle.pkix.jcajce.JcaPKIXIdentity;

        r1 = r0.<org.spongycastle.pkix.jcajce.JcaPKIXIdentity: java.security.PrivateKey privKey>;

        return r1;
    }
    public java.security.cert.X509Certificate getX509Certificate()
    {
        org.spongycastle.pkix.jcajce.JcaPKIXIdentity r0;
        java.security.cert.X509Certificate[] $r1;
        java.security.cert.X509Certificate $r2;

        r0 := @this: org.spongycastle.pkix.jcajce.JcaPKIXIdentity;

        $r1 = r0.<org.spongycastle.pkix.jcajce.JcaPKIXIdentity: java.security.cert.X509Certificate[] certs>;

        $r2 = $r1[0];

        return $r2;
    }
