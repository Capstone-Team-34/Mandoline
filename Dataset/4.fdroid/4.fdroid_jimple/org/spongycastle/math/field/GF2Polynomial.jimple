org.spongycastle.math.field.GF2Polynomial extends java.lang.Object implements org.spongycastle.math.field.Polynomial
protected final int[] exponents
    void <init>(int[])
    {
        org.spongycastle.math.field.GF2Polynomial r0;
        int[] $r1;

        r0 := @this: org.spongycastle.math.field.GF2Polynomial;

        $r1 := @parameter0: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.spongycastle.util.Arrays: int[] clone(int[])>($r1);

        r0.<org.spongycastle.math.field.GF2Polynomial: int[] exponents> = $r1;

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.math.field.GF2Polynomial r0, r3;
        java.lang.Object $r1;
        int[] $r2, $r4;
        boolean $z0;

        r0 := @this: org.spongycastle.math.field.GF2Polynomial;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.spongycastle.math.field.GF2Polynomial;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = (org.spongycastle.math.field.GF2Polynomial) $r1;

        $r4 = r0.<org.spongycastle.math.field.GF2Polynomial: int[] exponents>;

        $r2 = r3.<org.spongycastle.math.field.GF2Polynomial: int[] exponents>;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(int[],int[])>($r4, $r2);

        return $z0;
    }
    public int getDegree()
    {
        org.spongycastle.math.field.GF2Polynomial r0;
        int[] $r1, $r2;
        int $i0;

        r0 := @this: org.spongycastle.math.field.GF2Polynomial;

        $r1 = r0.<org.spongycastle.math.field.GF2Polynomial: int[] exponents>;

        $r2 = r0.<org.spongycastle.math.field.GF2Polynomial: int[] exponents>;

        $i0 = lengthof $r2;

        $i0 = $i0 + -1;

        $i0 = $r1[$i0];

        return $i0;
    }
    public int[] getExponentsPresent()
    {
        org.spongycastle.math.field.GF2Polynomial r0;
        int[] $r1;

        r0 := @this: org.spongycastle.math.field.GF2Polynomial;

        $r1 = r0.<org.spongycastle.math.field.GF2Polynomial: int[] exponents>;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: int[] clone(int[])>($r1);

        return $r1;
    }
    public int hashCode()
    {
        org.spongycastle.math.field.GF2Polynomial r0;
        int $i0;
        int[] $r1;

        r0 := @this: org.spongycastle.math.field.GF2Polynomial;

        $r1 = r0.<org.spongycastle.math.field.GF2Polynomial: int[] exponents>;

        $i0 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(int[])>($r1);

        return $i0;
    }
