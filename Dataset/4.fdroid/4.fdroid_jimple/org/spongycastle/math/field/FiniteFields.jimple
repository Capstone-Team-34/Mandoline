org.spongycastle.math.field.FiniteFields extends java.lang.Object
static final org.spongycastle.math.field.FiniteField GF_2
static final org.spongycastle.math.field.FiniteField GF_3
    static void <clinit>()
    {
        org.spongycastle.math.field.PrimeField $r0;
        java.math.BigInteger $r1;

        $r0 = new org.spongycastle.math.field.PrimeField;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2L);

        specialinvoke $r0.<org.spongycastle.math.field.PrimeField: void <init>(java.math.BigInteger)>($r1);

        <org.spongycastle.math.field.FiniteFields: org.spongycastle.math.field.FiniteField GF_2> = $r0;

        $r0 = new org.spongycastle.math.field.PrimeField;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(3L);

        specialinvoke $r0.<org.spongycastle.math.field.PrimeField: void <init>(java.math.BigInteger)>($r1);

        <org.spongycastle.math.field.FiniteFields: org.spongycastle.math.field.FiniteField GF_3> = $r0;

        return;
    }
    public void <init>()
    {
        org.spongycastle.math.field.FiniteFields r0;

        r0 := @this: org.spongycastle.math.field.FiniteFields;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static org.spongycastle.math.field.PolynomialExtensionField getBinaryExtensionField(int[])
    {
        int[] $r0;
        org.spongycastle.math.field.GF2Polynomial $r1;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r2;
        org.spongycastle.math.field.GenericPolynomialExtensionField $r3;
        org.spongycastle.math.field.FiniteField $r4;

        $r0 := @parameter0: int[];

        $i0 = $r0[0];

        if $i0 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Irreducible polynomials in GF(2) must have constant term");

        throw $r2;

     label1:
        $i0 = 1;

     label2:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label4;

        $i1 = $r0[$i0];

        $i2 = $i0 + -1;

        $i2 = $r0[$i2];

        if $i1 > $i2 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Polynomial exponents must be montonically increasing");

        throw $r2;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r3 = new org.spongycastle.math.field.GenericPolynomialExtensionField;

        $r4 = <org.spongycastle.math.field.FiniteFields: org.spongycastle.math.field.FiniteField GF_2>;

        $r1 = new org.spongycastle.math.field.GF2Polynomial;

        specialinvoke $r1.<org.spongycastle.math.field.GF2Polynomial: void <init>(int[])>($r0);

        specialinvoke $r3.<org.spongycastle.math.field.GenericPolynomialExtensionField: void <init>(org.spongycastle.math.field.FiniteField,org.spongycastle.math.field.Polynomial)>($r4, $r1);

        return $r3;
    }
    public static org.spongycastle.math.field.FiniteField getPrimeField(java.math.BigInteger)
    {
        java.math.BigInteger $r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        org.spongycastle.math.field.PrimeField $r2;
        org.spongycastle.math.field.FiniteField r3;

        $r0 := @parameter0: java.math.BigInteger;

        $i0 = virtualinvoke $r0.<java.math.BigInteger: int bitLength()>();

        $i1 = virtualinvoke $r0.<java.math.BigInteger: int signum()>();

        if $i1 <= 0 goto label1;

        if $i0 >= 2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'characteristic\' must be >= 2");

        throw $r1;

     label2:
        if $i0 >= 3 goto label3;

        $i0 = virtualinvoke $r0.<java.math.BigInteger: int intValue()>();

        lookupswitch($i0)
        {
            case 2: goto label4;
            case 3: goto label5;
            default: goto label3;
        };

     label3:
        $r2 = new org.spongycastle.math.field.PrimeField;

        specialinvoke $r2.<org.spongycastle.math.field.PrimeField: void <init>(java.math.BigInteger)>($r0);

        return $r2;

     label4:
        r3 = <org.spongycastle.math.field.FiniteFields: org.spongycastle.math.field.FiniteField GF_2>;

        return r3;

     label5:
        r3 = <org.spongycastle.math.field.FiniteFields: org.spongycastle.math.field.FiniteField GF_3>;

        return r3;
    }
