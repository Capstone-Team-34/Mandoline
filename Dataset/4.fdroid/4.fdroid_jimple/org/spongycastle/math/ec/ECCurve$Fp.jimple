org.spongycastle.math.ec.ECCurve$Fp extends org.spongycastle.math.ec.ECCurve$AbstractFp
private static final int FP_DEFAULT_COORDS
org.spongycastle.math.ec.ECPoint$Fp infinity
java.math.BigInteger q
java.math.BigInteger r
    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.math.ec.ECCurve$Fp r0;
        java.math.BigInteger $r1, $r2, $r3;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Fp;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.math.ec.ECCurve$Fp: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r1, $r2, $r3, null, null);

        return;
    }
    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.math.ec.ECCurve$Fp r0;
        java.math.BigInteger $r1, $r2, $r3, $r4, $r5;
        org.spongycastle.math.ec.ECPoint$Fp $r6;
        org.spongycastle.math.ec.ECFieldElement $r7;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Fp;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 := @parameter3: java.math.BigInteger;

        $r5 := @parameter4: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.math.ec.ECCurve$AbstractFp: void <init>(java.math.BigInteger)>($r1);

        r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger q> = $r1;

        $r1 = staticinvoke <org.spongycastle.math.ec.ECFieldElement$Fp: java.math.BigInteger calculateResidue(java.math.BigInteger)>($r1);

        r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger r> = $r1;

        $r6 = new org.spongycastle.math.ec.ECPoint$Fp;

        specialinvoke $r6.<org.spongycastle.math.ec.ECPoint$Fp: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>(r0, null, null);

        r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECPoint$Fp infinity> = $r6;

        $r7 = virtualinvoke r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)>($r2);

        r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECFieldElement a> = $r7;

        $r7 = virtualinvoke r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)>($r3);

        r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECFieldElement b> = $r7;

        r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger order> = $r4;

        r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger cofactor> = $r5;

        r0.<org.spongycastle.math.ec.ECCurve$Fp: int coord> = 4;

        return;
    }
    protected void <init>(java.math.BigInteger, java.math.BigInteger, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECCurve$Fp r0;
        java.math.BigInteger $r1, $r2;
        org.spongycastle.math.ec.ECFieldElement $r3, $r4;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Fp;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        $r4 := @parameter3: org.spongycastle.math.ec.ECFieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.ECCurve$Fp: void <init>(java.math.BigInteger,java.math.BigInteger,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,java.math.BigInteger,java.math.BigInteger)>($r1, $r2, $r3, $r4, null, null);

        return;
    }
    protected void <init>(java.math.BigInteger, java.math.BigInteger, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.math.ec.ECCurve$Fp r0;
        java.math.BigInteger $r1, $r2, $r5, $r6;
        org.spongycastle.math.ec.ECFieldElement $r3, $r4;
        org.spongycastle.math.ec.ECPoint$Fp $r7;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Fp;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        $r4 := @parameter3: org.spongycastle.math.ec.ECFieldElement;

        $r5 := @parameter4: java.math.BigInteger;

        $r6 := @parameter5: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.math.ec.ECCurve$AbstractFp: void <init>(java.math.BigInteger)>($r1);

        r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger q> = $r1;

        r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger r> = $r2;

        $r7 = new org.spongycastle.math.ec.ECPoint$Fp;

        specialinvoke $r7.<org.spongycastle.math.ec.ECPoint$Fp: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>(r0, null, null);

        r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECPoint$Fp infinity> = $r7;

        r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECFieldElement a> = $r3;

        r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECFieldElement b> = $r4;

        r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger order> = $r5;

        r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger cofactor> = $r6;

        r0.<org.spongycastle.math.ec.ECCurve$Fp: int coord> = 4;

        return;
    }
    protected org.spongycastle.math.ec.ECCurve cloneCurve()
    {
        org.spongycastle.math.ec.ECCurve$Fp r0, $r1;
        java.math.BigInteger $r2, $r3, $r6, $r7;
        org.spongycastle.math.ec.ECFieldElement $r4, $r5;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Fp;

        $r1 = new org.spongycastle.math.ec.ECCurve$Fp;

        $r2 = r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger q>;

        $r3 = r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger r>;

        $r4 = r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECFieldElement a>;

        $r5 = r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECFieldElement b>;

        $r6 = r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger order>;

        $r7 = r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger cofactor>;

        specialinvoke $r1.<org.spongycastle.math.ec.ECCurve$Fp: void <init>(java.math.BigInteger,java.math.BigInteger,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,java.math.BigInteger,java.math.BigInteger)>($r2, $r3, $r4, $r5, $r6, $r7);

        return $r1;
    }
    protected org.spongycastle.math.ec.ECPoint createRawPoint(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, boolean)
    {
        org.spongycastle.math.ec.ECCurve$Fp r0;
        org.spongycastle.math.ec.ECFieldElement $r1, $r2;
        boolean $z0;
        org.spongycastle.math.ec.ECPoint$Fp $r3;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Fp;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $z0 := @parameter2: boolean;

        $r3 = new org.spongycastle.math.ec.ECPoint$Fp;

        specialinvoke $r3.<org.spongycastle.math.ec.ECPoint$Fp: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>(r0, $r1, $r2, $z0);

        return $r3;
    }
    protected org.spongycastle.math.ec.ECPoint createRawPoint(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement[], boolean)
    {
        org.spongycastle.math.ec.ECCurve$Fp r0;
        org.spongycastle.math.ec.ECFieldElement $r1, $r2;
        org.spongycastle.math.ec.ECFieldElement[] $r3;
        boolean $z0;
        org.spongycastle.math.ec.ECPoint$Fp $r4;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Fp;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement[];

        $z0 := @parameter3: boolean;

        $r4 = new org.spongycastle.math.ec.ECPoint$Fp;

        specialinvoke $r4.<org.spongycastle.math.ec.ECPoint$Fp: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>(r0, $r1, $r2, $r3, $z0);

        return $r4;
    }
    public org.spongycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)
    {
        org.spongycastle.math.ec.ECCurve$Fp r0;
        java.math.BigInteger $r1, $r3, $r4;
        org.spongycastle.math.ec.ECFieldElement$Fp $r2;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Fp;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 = new org.spongycastle.math.ec.ECFieldElement$Fp;

        $r3 = r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger q>;

        $r4 = r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger r>;

        specialinvoke $r2.<org.spongycastle.math.ec.ECFieldElement$Fp: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r3, $r4, $r1);

        return $r2;
    }
    public int getFieldSize()
    {
        org.spongycastle.math.ec.ECCurve$Fp r0;
        int $i0;
        java.math.BigInteger $r1;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Fp;

        $r1 = r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger q>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        return $i0;
    }
    public org.spongycastle.math.ec.ECPoint getInfinity()
    {
        org.spongycastle.math.ec.ECCurve$Fp r0;
        org.spongycastle.math.ec.ECPoint$Fp r1;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Fp;

        r1 = r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECPoint$Fp infinity>;

        return r1;
    }
    public java.math.BigInteger getQ()
    {
        org.spongycastle.math.ec.ECCurve$Fp r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Fp;

        r1 = r0.<org.spongycastle.math.ec.ECCurve$Fp: java.math.BigInteger q>;

        return r1;
    }
    public org.spongycastle.math.ec.ECPoint importPoint(org.spongycastle.math.ec.ECPoint)
    {
        org.spongycastle.math.ec.ECCurve$Fp r0;
        org.spongycastle.math.ec.ECPoint $r1;
        org.spongycastle.math.ec.ECFieldElement[] $r2, $r8;
        org.spongycastle.math.ec.ECCurve $r3;
        int $i0;
        boolean $z0;
        org.spongycastle.math.ec.ECPoint$Fp $r4;
        org.spongycastle.math.ec.ECFieldElement $r5, $r7, $r9;
        java.math.BigInteger $r6;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Fp;

        $r1 := @parameter0: org.spongycastle.math.ec.ECPoint;

        $r3 = virtualinvoke $r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECCurve getCurve()>();

        if r0 == $r3 goto label1;

        $i0 = virtualinvoke r0.<org.spongycastle.math.ec.ECCurve$Fp: int getCoordinateSystem()>();

        if $i0 != 2 goto label1;

        $z0 = virtualinvoke $r1.<org.spongycastle.math.ec.ECPoint: boolean isInfinity()>();

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke $r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECCurve getCurve()>();

        $i0 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: int getCoordinateSystem()>();

        lookupswitch($i0)
        {
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = specialinvoke r0.<org.spongycastle.math.ec.ECCurve$AbstractFp: org.spongycastle.math.ec.ECPoint importPoint(org.spongycastle.math.ec.ECPoint)>($r1);

        return $r1;

     label2:
        $r4 = new org.spongycastle.math.ec.ECPoint$Fp;

        $r5 = $r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement x>;

        $r6 = virtualinvoke $r5.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r5 = virtualinvoke r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)>($r6);

        $r7 = $r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement y>;

        $r6 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r7 = virtualinvoke r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)>($r6);

        $r2 = newarray (org.spongycastle.math.ec.ECFieldElement)[1];

        $r8 = $r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement[] zs>;

        $r9 = $r8[0];

        $r6 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r9 = virtualinvoke r0.<org.spongycastle.math.ec.ECCurve$Fp: org.spongycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)>($r6);

        $r2[0] = $r9;

        $z0 = $r1.<org.spongycastle.math.ec.ECPoint: boolean withCompression>;

        specialinvoke $r4.<org.spongycastle.math.ec.ECPoint$Fp: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>(r0, $r5, $r7, $r2, $z0);

        return $r4;
    }
    public boolean supportsCoordinateSystem(int)
    {
        org.spongycastle.math.ec.ECCurve$Fp r0;
        int $i0;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Fp;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }
