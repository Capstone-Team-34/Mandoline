org.spongycastle.math.ec.ECCurve$Config extends java.lang.Object
protected int coord
protected org.spongycastle.math.ec.endo.ECEndomorphism endomorphism
protected org.spongycastle.math.ec.ECMultiplier multiplier
final org.spongycastle.math.ec.ECCurve this$0
    void <init>(org.spongycastle.math.ec.ECCurve, int, org.spongycastle.math.ec.endo.ECEndomorphism, org.spongycastle.math.ec.ECMultiplier)
    {
        org.spongycastle.math.ec.ECCurve$Config r0;
        org.spongycastle.math.ec.ECCurve $r1;
        int $i0;
        org.spongycastle.math.ec.endo.ECEndomorphism $r2;
        org.spongycastle.math.ec.ECMultiplier $r3;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Config;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.spongycastle.math.ec.endo.ECEndomorphism;

        $r3 := @parameter3: org.spongycastle.math.ec.ECMultiplier;

        r0.<org.spongycastle.math.ec.ECCurve$Config: org.spongycastle.math.ec.ECCurve this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.math.ec.ECCurve$Config: int coord> = $i0;

        r0.<org.spongycastle.math.ec.ECCurve$Config: org.spongycastle.math.ec.endo.ECEndomorphism endomorphism> = $r2;

        r0.<org.spongycastle.math.ec.ECCurve$Config: org.spongycastle.math.ec.ECMultiplier multiplier> = $r3;

        return;
    }
    public org.spongycastle.math.ec.ECCurve create()
    {
        org.spongycastle.math.ec.ECCurve$Config r0;
        org.spongycastle.math.ec.ECCurve $r1, $r3;
        int $i0;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        org.spongycastle.math.ec.endo.ECEndomorphism $r4;
        org.spongycastle.math.ec.ECMultiplier $r5;
        java.lang.Throwable $r6;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Config;

        $r1 = r0.<org.spongycastle.math.ec.ECCurve$Config: org.spongycastle.math.ec.ECCurve this$0>;

        $i0 = r0.<org.spongycastle.math.ec.ECCurve$Config: int coord>;

        $z0 = virtualinvoke $r1.<org.spongycastle.math.ec.ECCurve: boolean supportsCoordinateSystem(int)>($i0);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unsupported coordinate system");

        throw $r2;

     label1:
        $r1 = r0.<org.spongycastle.math.ec.ECCurve$Config: org.spongycastle.math.ec.ECCurve this$0>;

        $r1 = virtualinvoke $r1.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECCurve cloneCurve()>();

        $r3 = r0.<org.spongycastle.math.ec.ECCurve$Config: org.spongycastle.math.ec.ECCurve this$0>;

        if $r1 != $r3 goto label2;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("implementation returned current curve");

        throw $r2;

     label2:
        entermonitor $r1;

     label3:
        $i0 = r0.<org.spongycastle.math.ec.ECCurve$Config: int coord>;

        $r1.<org.spongycastle.math.ec.ECCurve: int coord> = $i0;

        $r4 = r0.<org.spongycastle.math.ec.ECCurve$Config: org.spongycastle.math.ec.endo.ECEndomorphism endomorphism>;

        $r1.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.endo.ECEndomorphism endomorphism> = $r4;

        $r5 = r0.<org.spongycastle.math.ec.ECCurve$Config: org.spongycastle.math.ec.ECMultiplier multiplier>;

        $r1.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECMultiplier multiplier> = $r5;

        exitmonitor $r1;

     label4:
        return $r1;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
    public org.spongycastle.math.ec.ECCurve$Config setCoordinateSystem(int)
    {
        org.spongycastle.math.ec.ECCurve$Config r0;
        int $i0;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Config;

        $i0 := @parameter0: int;

        r0.<org.spongycastle.math.ec.ECCurve$Config: int coord> = $i0;

        return r0;
    }
    public org.spongycastle.math.ec.ECCurve$Config setEndomorphism(org.spongycastle.math.ec.endo.ECEndomorphism)
    {
        org.spongycastle.math.ec.ECCurve$Config r0;
        org.spongycastle.math.ec.endo.ECEndomorphism $r1;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Config;

        $r1 := @parameter0: org.spongycastle.math.ec.endo.ECEndomorphism;

        r0.<org.spongycastle.math.ec.ECCurve$Config: org.spongycastle.math.ec.endo.ECEndomorphism endomorphism> = $r1;

        return r0;
    }
    public org.spongycastle.math.ec.ECCurve$Config setMultiplier(org.spongycastle.math.ec.ECMultiplier)
    {
        org.spongycastle.math.ec.ECCurve$Config r0;
        org.spongycastle.math.ec.ECMultiplier $r1;

        r0 := @this: org.spongycastle.math.ec.ECCurve$Config;

        $r1 := @parameter0: org.spongycastle.math.ec.ECMultiplier;

        r0.<org.spongycastle.math.ec.ECCurve$Config: org.spongycastle.math.ec.ECMultiplier multiplier> = $r1;

        return r0;
    }
