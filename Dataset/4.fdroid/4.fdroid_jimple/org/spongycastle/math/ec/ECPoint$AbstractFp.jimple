org.spongycastle.math.ec.ECPoint$AbstractFp extends org.spongycastle.math.ec.ECPoint
    protected void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECPoint$AbstractFp r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECFieldElement $r2, $r3;

        r0 := @this: org.spongycastle.math.ec.ECPoint$AbstractFp;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.ECPoint: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r1, $r2, $r3);

        return;
    }
    protected void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement[])
    {
        org.spongycastle.math.ec.ECPoint$AbstractFp r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECFieldElement $r2, $r3;
        org.spongycastle.math.ec.ECFieldElement[] $r4;

        r0 := @this: org.spongycastle.math.ec.ECPoint$AbstractFp;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        $r4 := @parameter3: org.spongycastle.math.ec.ECFieldElement[];

        specialinvoke r0.<org.spongycastle.math.ec.ECPoint: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[])>($r1, $r2, $r3, $r4);

        return;
    }
    protected boolean getCompressionYTilde()
    {
        org.spongycastle.math.ec.ECPoint$AbstractFp r0;
        org.spongycastle.math.ec.ECFieldElement $r1;
        boolean $z0;

        r0 := @this: org.spongycastle.math.ec.ECPoint$AbstractFp;

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$AbstractFp: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        $z0 = virtualinvoke $r1.<org.spongycastle.math.ec.ECFieldElement: boolean testBitZero()>();

        return $z0;
    }
    protected boolean satisfiesCurveEquation()
    {
        org.spongycastle.math.ec.ECPoint$AbstractFp r0;
        org.spongycastle.math.ec.ECFieldElement r1, r2, $r4, r5, $r6, r7, $r8, r11;
        org.spongycastle.math.ec.ECCurve $r3;
        int $i0;
        java.lang.IllegalStateException $r9;
        org.spongycastle.math.ec.ECFieldElement[] $r10;
        boolean $z0;

        r0 := @this: org.spongycastle.math.ec.ECPoint$AbstractFp;

        r1 = r0.<org.spongycastle.math.ec.ECPoint$AbstractFp: org.spongycastle.math.ec.ECFieldElement x>;

        r2 = r0.<org.spongycastle.math.ec.ECPoint$AbstractFp: org.spongycastle.math.ec.ECFieldElement y>;

        $r3 = r0.<org.spongycastle.math.ec.ECPoint$AbstractFp: org.spongycastle.math.ec.ECCurve curve>;

        $r4 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        r5 = $r4;

        $r3 = r0.<org.spongycastle.math.ec.ECPoint$AbstractFp: org.spongycastle.math.ec.ECCurve curve>;

        $r6 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getB()>();

        r7 = $r6;

        $r8 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r2 = $r8;

        $i0 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$AbstractFp: int getCurveCoordinateSystem()>();

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label4;
            case 4: goto label4;
            default: goto label1;
        };

     label1:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unsupported coordinate system");

        throw $r9;

     label2:
        $r10 = r0.<org.spongycastle.math.ec.ECPoint$AbstractFp: org.spongycastle.math.ec.ECFieldElement[] zs>;

        r11 = $r10[0];

        $z0 = virtualinvoke r11.<org.spongycastle.math.ec.ECFieldElement: boolean isOne()>();

        if $z0 != 0 goto label3;

        r5 = virtualinvoke r11.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r7 = virtualinvoke r11.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r5);

        r2 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r11);

        r5 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r5);

        r7 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r7);

     label3:
        $r6 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r6 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r5);

        r1 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r1);

        r1 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r7);

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;

     label4:
        $r10 = r0.<org.spongycastle.math.ec.ECPoint$AbstractFp: org.spongycastle.math.ec.ECFieldElement[] zs>;

        $r8 = $r10[0];

        $z0 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: boolean isOne()>();

        if $z0 != 0 goto label3;

        r7 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r5 = virtualinvoke r7.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r7 = virtualinvoke r7.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r5);

        r5 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r5);

        r7 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r7);

        goto label3;
    }
    public org.spongycastle.math.ec.ECPoint subtract(org.spongycastle.math.ec.ECPoint)
    {
        org.spongycastle.math.ec.ECPoint $r0;
        org.spongycastle.math.ec.ECPoint$AbstractFp r1;
        boolean $z0;

        r1 := @this: org.spongycastle.math.ec.ECPoint$AbstractFp;

        $r0 := @parameter0: org.spongycastle.math.ec.ECPoint;

        $z0 = virtualinvoke $r0.<org.spongycastle.math.ec.ECPoint: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r0 = virtualinvoke $r0.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint negate()>();

        $r0 = virtualinvoke r1.<org.spongycastle.math.ec.ECPoint$AbstractFp: org.spongycastle.math.ec.ECPoint add(org.spongycastle.math.ec.ECPoint)>($r0);

        return $r0;
    }
