org.spongycastle.math.ec.WNafL2RMultiplier extends org.spongycastle.math.ec.AbstractECMultiplier
    public void <init>()
    {
        org.spongycastle.math.ec.WNafL2RMultiplier r0;

        r0 := @this: org.spongycastle.math.ec.WNafL2RMultiplier;

        specialinvoke r0.<org.spongycastle.math.ec.AbstractECMultiplier: void <init>()>();

        return;
    }
    protected int getWindowSize(int)
    {
        org.spongycastle.math.ec.WNafL2RMultiplier r0;
        int $i0;

        r0 := @this: org.spongycastle.math.ec.WNafL2RMultiplier;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <org.spongycastle.math.ec.WNafUtil: int getWindowSize(int)>($i0);

        return $i0;
    }
    protected org.spongycastle.math.ec.ECPoint multiplyPositive(org.spongycastle.math.ec.ECPoint, java.math.BigInteger)
    {
        org.spongycastle.math.ec.WNafL2RMultiplier r0;
        org.spongycastle.math.ec.ECPoint $r1, r8;
        java.math.BigInteger $r2;
        byte b0;
        int i1, i2, i3, $i4, i5, $i6;
        org.spongycastle.math.ec.WNafPreCompInfo $r3;
        org.spongycastle.math.ec.ECPoint[] $r4, $r5, r9;
        int[] $r6;
        org.spongycastle.math.ec.ECCurve $r7;
        byte[] $r10;

        r0 := @this: org.spongycastle.math.ec.WNafL2RMultiplier;

        $r1 := @parameter0: org.spongycastle.math.ec.ECPoint;

        $r2 := @parameter1: java.math.BigInteger;

        $i4 = virtualinvoke $r2.<java.math.BigInteger: int bitLength()>();

        $i4 = virtualinvoke r0.<org.spongycastle.math.ec.WNafL2RMultiplier: int getWindowSize(int)>($i4);

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(16, $i4);

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(2, $i4);

        $r3 = staticinvoke <org.spongycastle.math.ec.WNafUtil: org.spongycastle.math.ec.WNafPreCompInfo precompute(org.spongycastle.math.ec.ECPoint,int,boolean)>($r1, i1, 1);

        $r4 = virtualinvoke $r3.<org.spongycastle.math.ec.WNafPreCompInfo: org.spongycastle.math.ec.ECPoint[] getPreComp()>();

        $r5 = virtualinvoke $r3.<org.spongycastle.math.ec.WNafPreCompInfo: org.spongycastle.math.ec.ECPoint[] getPreCompNeg()>();

        $r6 = staticinvoke <org.spongycastle.math.ec.WNafUtil: int[] generateCompactWindowNaf(int,java.math.BigInteger)>(i1, $r2);

        $r7 = virtualinvoke $r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECCurve getCurve()>();

        r8 = virtualinvoke $r7.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint getInfinity()>();

        $i4 = lengthof $r6;

        if $i4 <= 1 goto label3;

        $i4 = $i4 + -1;

        i5 = $r6[$i4];

        i3 = i5 >> 16;

        i5 = i5 & 65535;

        i2 = staticinvoke <java.lang.Math: int abs(int)>(i3);

        if i3 >= 0 goto label5;

        r9 = $r5;

     label1:
        i3 = i2 << 2;

        $i6 = 1 << i1;

        if i3 >= $i6 goto label6;

        $r10 = <org.spongycastle.math.ec.LongArray: byte[] bitLengths>;

        b0 = $r10[i2];

        i3 = i1 - b0;

        $i6 = b0 + -1;

        $i6 = 1 << $i6;

        i2 = i2 ^ $i6;

        i1 = i1 + -1;

        i1 = 1 << i1;

        i1 = i1 + -1;

        i2 = i2 << i3;

        i2 = i2 + 1;

        i1 = i1 >>> 1;

        $r1 = r9[i1];

        i1 = i2 >>> 1;

        r8 = r9[i1];

        $r1 = virtualinvoke $r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint add(org.spongycastle.math.ec.ECPoint)>(r8);

        i5 = i5 - i3;

     label2:
        r8 = virtualinvoke $r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint timesPow2(int)>(i5);

     label3:
        if $i4 <= 0 goto label8;

        $i4 = $i4 + -1;

        i3 = $r6[$i4];

        i5 = i3 >> 16;

        i3 = i3 & 65535;

        i1 = staticinvoke <java.lang.Math: int abs(int)>(i5);

        if i5 >= 0 goto label7;

        r9 = $r5;

     label4:
        i5 = i1 >>> 1;

        $r1 = r9[i5];

        $r1 = virtualinvoke r8.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint twicePlus(org.spongycastle.math.ec.ECPoint)>($r1);

        r8 = virtualinvoke $r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint timesPow2(int)>(i3);

        goto label3;

     label5:
        r9 = $r4;

        goto label1;

     label6:
        i3 = i2 >>> 1;

        $r1 = r9[i3];

        goto label2;

     label7:
        r9 = $r4;

        goto label4;

     label8:
        return r8;
    }
