org.spongycastle.math.ec.ECFieldElement$F2m extends org.spongycastle.math.ec.ECFieldElement
public static final int GNB
public static final int PPB
public static final int TPB
private int[] ks
private int m
private int representation
private org.spongycastle.math.ec.LongArray x
    public void <init>(int, int, int, int, java.math.BigInteger)
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.math.BigInteger $r1;
        java.lang.IllegalArgumentException $r2;
        int[] $r3;
        org.spongycastle.math.ec.LongArray $r4;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.math.ec.ECFieldElement: void <init>()>();

        if $r1 == null goto label1;

        $i4 = virtualinvoke $r1.<java.math.BigInteger: int signum()>();

        if $i4 < 0 goto label1;

        $i4 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        if $i4 <= $i0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("x value invalid in F2m field element");

        throw $r2;

     label2:
        if $i2 != 0 goto label4;

        if $i3 != 0 goto label4;

        r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int representation> = 2;

        $r3 = newarray (int)[1];

        $r3[0] = $i1;

        r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks> = $r3;

     label3:
        r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m> = $i0;

        $r4 = new org.spongycastle.math.ec.LongArray;

        specialinvoke $r4.<org.spongycastle.math.ec.LongArray: void <init>(java.math.BigInteger)>($r1);

        r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x> = $r4;

        return;

     label4:
        if $i2 < $i3 goto label5;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("k2 must be smaller than k3");

        throw $r2;

     label5:
        if $i2 > 0 goto label6;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("k2 must be larger than 0");

        throw $r2;

     label6:
        r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int representation> = 3;

        $r3 = newarray (int)[3];

        $r3[0] = $i1;

        $r3[1] = $i2;

        $r3[2] = $i3;

        r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks> = $r3;

        goto label3;
    }
    public void <init>(int, int, java.math.BigInteger)
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        int $i0, $i1;
        java.math.BigInteger $r1;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.math.ec.ECFieldElement$F2m: void <init>(int,int,int,int,java.math.BigInteger)>($i0, $i1, 0, 0, $r1);

        return;
    }
    private void <init>(int, int[], org.spongycastle.math.ec.LongArray)
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        int $i0;
        int[] $r1;
        org.spongycastle.math.ec.LongArray $r2;
        byte $b1;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $i0 := @parameter0: int;

        $r1 := @parameter1: int[];

        $r2 := @parameter2: org.spongycastle.math.ec.LongArray;

        specialinvoke r0.<org.spongycastle.math.ec.ECFieldElement: void <init>()>();

        r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m> = $i0;

        $i0 = lengthof $r1;

        if $i0 != 1 goto label2;

        $b1 = 2;

     label1:
        r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int representation> = $b1;

        r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks> = $r1;

        r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x> = $r2;

        return;

     label2:
        $b1 = 3;

        goto label1;
    }
    public static void checkFieldElements(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement $r0, $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        org.spongycastle.math.ec.ECFieldElement$F2m r3, r4;
        int $i0, $i1;
        int[] $r5, $r6;

        $r0 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r1 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $z0 = $r0 instanceof org.spongycastle.math.ec.ECFieldElement$F2m;

        if $z0 == 0 goto label1;

        $z0 = $r1 instanceof org.spongycastle.math.ec.ECFieldElement$F2m;

        if $z0 != 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Field elements are not both instances of ECFieldElement.F2m");

        throw $r2;

     label2:
        r3 = (org.spongycastle.math.ec.ECFieldElement$F2m) $r0;

        r4 = (org.spongycastle.math.ec.ECFieldElement$F2m) $r1;

        $i0 = r3.<org.spongycastle.math.ec.ECFieldElement$F2m: int representation>;

        $i1 = r4.<org.spongycastle.math.ec.ECFieldElement$F2m: int representation>;

        if $i0 == $i1 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("One of the F2m field elements has incorrect representation");

        throw $r2;

     label3:
        $i0 = r3.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $i1 = r4.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        if $i0 != $i1 goto label4;

        $r5 = r3.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $r6 = r4.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(int[],int[])>($r5, $r6);

        if $z0 != 0 goto label5;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Field elements are not elements of the same field F2m");

        throw $r2;

     label5:
        return;
    }
    public org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0, r5;
        org.spongycastle.math.ec.ECFieldElement $r1;
        int[] $r2;
        java.lang.Object $r3;
        org.spongycastle.math.ec.LongArray $r4, $r6;
        int $i0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r4 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $r3 = virtualinvoke $r4.<org.spongycastle.math.ec.LongArray: java.lang.Object clone()>();

        $r4 = (org.spongycastle.math.ec.LongArray) $r3;

        r5 = (org.spongycastle.math.ec.ECFieldElement$F2m) $r1;

        $r6 = r5.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        virtualinvoke $r4.<org.spongycastle.math.ec.LongArray: void addShiftedByWords(org.spongycastle.math.ec.LongArray,int)>($r6, 0);

        r5 = new org.spongycastle.math.ec.ECFieldElement$F2m;

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r2 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        specialinvoke r5.<org.spongycastle.math.ec.ECFieldElement$F2m: void <init>(int,int[],org.spongycastle.math.ec.LongArray)>($i0, $r2, $r4);

        return r5;
    }
    public org.spongycastle.math.ec.ECFieldElement addOne()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0, $r1;
        int $i0;
        int[] $r2;
        org.spongycastle.math.ec.LongArray $r3;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 = new org.spongycastle.math.ec.ECFieldElement$F2m;

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r2 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $r3 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.LongArray: org.spongycastle.math.ec.LongArray addOne()>();

        specialinvoke $r1.<org.spongycastle.math.ec.ECFieldElement$F2m: void <init>(int,int[],org.spongycastle.math.ec.LongArray)>($i0, $r2, $r3);

        return $r1;
    }
    public int bitLength()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        int $i0;
        org.spongycastle.math.ec.LongArray $r1;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $i0 = virtualinvoke $r1.<org.spongycastle.math.ec.LongArray: int degree()>();

        return $i0;
    }
    public org.spongycastle.math.ec.ECFieldElement divide(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        org.spongycastle.math.ec.ECFieldElement $r1;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r1 = virtualinvoke $r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement invert()>();

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r1);

        return $r1;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;
        int[] $r3, $r4;
        org.spongycastle.math.ec.LongArray $r5, $r6;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.spongycastle.math.ec.ECFieldElement$F2m;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.spongycastle.math.ec.ECFieldElement$F2m) $r1;

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $i1 = r2.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        if $i0 != $i1 goto label3;

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int representation>;

        $i1 = r2.<org.spongycastle.math.ec.ECFieldElement$F2m: int representation>;

        if $i0 != $i1 goto label3;

        $r3 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $r4 = r2.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(int[],int[])>($r3, $r4);

        if $z0 == 0 goto label3;

        $r5 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $r6 = r2.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $z0 = virtualinvoke $r5.<org.spongycastle.math.ec.LongArray: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label4;

     label3:
        return 0;

     label4:
        return 1;
    }
    public java.lang.String getFieldName()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        return "F2m";
    }
    public int getFieldSize()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        int i0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        return i0;
    }
    public int getK1()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        int[] $r1;
        int $i0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $i0 = $r1[0];

        return $i0;
    }
    public int getK2()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        int[] $r1;
        int $i0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $i0 = lengthof $r1;

        if $i0 < 2 goto label1;

        $r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $i0 = $r1[1];

        return $i0;

     label1:
        return 0;
    }
    public int getK3()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        int[] $r1;
        int $i0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $i0 = lengthof $r1;

        if $i0 < 3 goto label1;

        $r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $i0 = $r1[2];

        return $i0;

     label1:
        return 0;
    }
    public int getM()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        int i0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        return i0;
    }
    public int getRepresentation()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        int i0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int representation>;

        return i0;
    }
    public int hashCode()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        org.spongycastle.math.ec.LongArray $r1;
        int $i0, $i1;
        int[] $r2;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $i0 = virtualinvoke $r1.<org.spongycastle.math.ec.LongArray: int hashCode()>();

        $i1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $i0 = $i0 ^ $i1;

        $r2 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(int[])>($r2);

        $i0 = $i0 ^ $i1;

        return $i0;
    }
    public org.spongycastle.math.ec.ECFieldElement invert()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0, $r1;
        int $i0, $i1;
        int[] $r2, $r3;
        org.spongycastle.math.ec.LongArray $r4;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 = new org.spongycastle.math.ec.ECFieldElement$F2m;

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r2 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $r4 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $i1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r3 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.LongArray: org.spongycastle.math.ec.LongArray modInverse(int,int[])>($i1, $r3);

        specialinvoke $r1.<org.spongycastle.math.ec.ECFieldElement$F2m: void <init>(int,int[],org.spongycastle.math.ec.LongArray)>($i0, $r2, $r4);

        return $r1;
    }
    public boolean isOne()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        boolean $z0;
        org.spongycastle.math.ec.LongArray $r1;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $z0 = virtualinvoke $r1.<org.spongycastle.math.ec.LongArray: boolean isOne()>();

        return $z0;
    }
    public boolean isZero()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        boolean $z0;
        org.spongycastle.math.ec.LongArray $r1;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $z0 = virtualinvoke $r1.<org.spongycastle.math.ec.LongArray: boolean isZero()>();

        return $z0;
    }
    public org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0, $r1, $r7;
        int $i0, $i1;
        int[] $r2, $r4;
        org.spongycastle.math.ec.LongArray $r3, $r6;
        org.spongycastle.math.ec.ECFieldElement $r5;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r5 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r1 = new org.spongycastle.math.ec.ECFieldElement$F2m;

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r2 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $r6 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $r7 = (org.spongycastle.math.ec.ECFieldElement$F2m) $r5;

        $r3 = $r7.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $i1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r4 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $r3 = virtualinvoke $r6.<org.spongycastle.math.ec.LongArray: org.spongycastle.math.ec.LongArray modMultiply(org.spongycastle.math.ec.LongArray,int,int[])>($r3, $i1, $r4);

        specialinvoke $r1.<org.spongycastle.math.ec.ECFieldElement$F2m: void <init>(int,int[],org.spongycastle.math.ec.LongArray)>($i0, $r2, $r3);

        return $r1;
    }
    public org.spongycastle.math.ec.ECFieldElement multiplyMinusProduct(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        org.spongycastle.math.ec.ECFieldElement $r1, $r2, $r3;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.ECFieldElement multiplyPlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r1, $r2, $r3);

        return $r1;
    }
    public org.spongycastle.math.ec.ECFieldElement multiplyPlusProduct(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0, $r9;
        org.spongycastle.math.ec.LongArray r1, r2, r3, r4, $r10, r11;
        int[] $r5;
        org.spongycastle.math.ec.ECFieldElement $r6, $r7, $r8;
        int $i0;
        java.lang.Object $r12;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r6 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r7 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r8 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $r9 = (org.spongycastle.math.ec.ECFieldElement$F2m) $r6;

        r2 = $r9.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $r9 = (org.spongycastle.math.ec.ECFieldElement$F2m) $r7;

        r3 = $r9.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $r9 = (org.spongycastle.math.ec.ECFieldElement$F2m) $r8;

        r4 = $r9.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r5 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $r10 = virtualinvoke r1.<org.spongycastle.math.ec.LongArray: org.spongycastle.math.ec.LongArray multiply(org.spongycastle.math.ec.LongArray,int,int[])>(r2, $i0, $r5);

        r11 = $r10;

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r5 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        r3 = virtualinvoke r3.<org.spongycastle.math.ec.LongArray: org.spongycastle.math.ec.LongArray multiply(org.spongycastle.math.ec.LongArray,int,int[])>(r4, $i0, $r5);

        if $r10 == r1 goto label1;

        if $r10 != r2 goto label2;

     label1:
        $r12 = virtualinvoke $r10.<org.spongycastle.math.ec.LongArray: java.lang.Object clone()>();

        r11 = (org.spongycastle.math.ec.LongArray) $r12;

     label2:
        virtualinvoke r11.<org.spongycastle.math.ec.LongArray: void addShiftedByWords(org.spongycastle.math.ec.LongArray,int)>(r3, 0);

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r5 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        virtualinvoke r11.<org.spongycastle.math.ec.LongArray: void reduce(int,int[])>($i0, $r5);

        $r9 = new org.spongycastle.math.ec.ECFieldElement$F2m;

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r5 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        specialinvoke $r9.<org.spongycastle.math.ec.ECFieldElement$F2m: void <init>(int,int[],org.spongycastle.math.ec.LongArray)>($i0, $r5, r11);

        return $r9;
    }
    public org.spongycastle.math.ec.ECFieldElement negate()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        return r0;
    }
    public org.spongycastle.math.ec.ECFieldElement sqrt()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        org.spongycastle.math.ec.LongArray $r1;
        boolean $z0;
        int $i0;
        org.spongycastle.math.ec.ECFieldElement $r2;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $z0 = virtualinvoke $r1.<org.spongycastle.math.ec.LongArray: boolean isZero()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $z0 = virtualinvoke $r1.<org.spongycastle.math.ec.LongArray: boolean isOne()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $i0 = $i0 + -1;

        $r2 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.ECFieldElement squarePow(int)>($i0);

        return $r2;

     label2:
        return r0;
    }
    public org.spongycastle.math.ec.ECFieldElement square()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0, $r1;
        int $i0, $i1;
        int[] $r2, $r3;
        org.spongycastle.math.ec.LongArray $r4;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 = new org.spongycastle.math.ec.ECFieldElement$F2m;

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r2 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $r4 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $i1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r3 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.LongArray: org.spongycastle.math.ec.LongArray modSquare(int,int[])>($i1, $r3);

        specialinvoke $r1.<org.spongycastle.math.ec.ECFieldElement$F2m: void <init>(int,int[],org.spongycastle.math.ec.LongArray)>($i0, $r2, $r4);

        return $r1;
    }
    public org.spongycastle.math.ec.ECFieldElement squareMinusProduct(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        org.spongycastle.math.ec.ECFieldElement $r1, $r2;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.ECFieldElement squarePlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r1, $r2);

        return $r1;
    }
    public org.spongycastle.math.ec.ECFieldElement squarePlusProduct(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0, $r7;
        org.spongycastle.math.ec.LongArray r1, r2, r3, $r8, r9;
        int[] $r4;
        org.spongycastle.math.ec.ECFieldElement $r5, $r6;
        int $i0;
        java.lang.Object $r10;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r5 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r6 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $r7 = (org.spongycastle.math.ec.ECFieldElement$F2m) $r5;

        r2 = $r7.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $r7 = (org.spongycastle.math.ec.ECFieldElement$F2m) $r6;

        r3 = $r7.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r4 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $r8 = virtualinvoke r1.<org.spongycastle.math.ec.LongArray: org.spongycastle.math.ec.LongArray square(int,int[])>($i0, $r4);

        r9 = $r8;

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r4 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        r2 = virtualinvoke r2.<org.spongycastle.math.ec.LongArray: org.spongycastle.math.ec.LongArray multiply(org.spongycastle.math.ec.LongArray,int,int[])>(r3, $i0, $r4);

        if $r8 != r1 goto label1;

        $r10 = virtualinvoke $r8.<org.spongycastle.math.ec.LongArray: java.lang.Object clone()>();

        r9 = (org.spongycastle.math.ec.LongArray) $r10;

     label1:
        virtualinvoke r9.<org.spongycastle.math.ec.LongArray: void addShiftedByWords(org.spongycastle.math.ec.LongArray,int)>(r2, 0);

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r4 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        virtualinvoke r9.<org.spongycastle.math.ec.LongArray: void reduce(int,int[])>($i0, $r4);

        $r7 = new org.spongycastle.math.ec.ECFieldElement$F2m;

        $i0 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r4 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        specialinvoke $r7.<org.spongycastle.math.ec.ECFieldElement$F2m: void <init>(int,int[],org.spongycastle.math.ec.LongArray)>($i0, $r4, r9);

        return $r7;
    }
    public org.spongycastle.math.ec.ECFieldElement squarePow(int)
    {
        int $i0, $i1, $i2;
        int[] $r0, $r1;
        org.spongycastle.math.ec.LongArray $r2;
        org.spongycastle.math.ec.ECFieldElement$F2m r3, $r4;

        r3 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $i0 := @parameter0: int;

        if $i0 >= 1 goto label1;

        return r3;

     label1:
        $r4 = new org.spongycastle.math.ec.ECFieldElement$F2m;

        $i1 = r3.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r0 = r3.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $r2 = r3.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $i2 = r3.<org.spongycastle.math.ec.ECFieldElement$F2m: int m>;

        $r1 = r3.<org.spongycastle.math.ec.ECFieldElement$F2m: int[] ks>;

        $r2 = virtualinvoke $r2.<org.spongycastle.math.ec.LongArray: org.spongycastle.math.ec.LongArray modSquareN(int,int,int[])>($i0, $i2, $r1);

        specialinvoke $r4.<org.spongycastle.math.ec.ECFieldElement$F2m: void <init>(int,int[],org.spongycastle.math.ec.LongArray)>($i1, $r0, $r2);

        return $r4;
    }
    public org.spongycastle.math.ec.ECFieldElement subtract(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        org.spongycastle.math.ec.ECFieldElement $r1;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r1);

        return $r1;
    }
    public boolean testBitZero()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        boolean $z0;
        org.spongycastle.math.ec.LongArray $r1;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r1 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $z0 = virtualinvoke $r1.<org.spongycastle.math.ec.LongArray: boolean testBitZero()>();

        return $z0;
    }
    public java.math.BigInteger toBigInteger()
    {
        org.spongycastle.math.ec.ECFieldElement$F2m r0;
        java.math.BigInteger $r1;
        org.spongycastle.math.ec.LongArray $r2;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement$F2m;

        $r2 = r0.<org.spongycastle.math.ec.ECFieldElement$F2m: org.spongycastle.math.ec.LongArray x>;

        $r1 = virtualinvoke $r2.<org.spongycastle.math.ec.LongArray: java.math.BigInteger toBigInteger()>();

        return $r1;
    }
