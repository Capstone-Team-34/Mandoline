org.spongycastle.math.ec.ECCurve$AbstractFp extends org.spongycastle.math.ec.ECCurve
    protected void <init>(java.math.BigInteger)
    {
        org.spongycastle.math.ec.ECCurve$AbstractFp r0;
        java.math.BigInteger $r1;
        org.spongycastle.math.field.FiniteField $r2;

        r0 := @this: org.spongycastle.math.ec.ECCurve$AbstractFp;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 = staticinvoke <org.spongycastle.math.field.FiniteFields: org.spongycastle.math.field.FiniteField getPrimeField(java.math.BigInteger)>($r1);

        specialinvoke r0.<org.spongycastle.math.ec.ECCurve: void <init>(org.spongycastle.math.field.FiniteField)>($r2);

        return;
    }
    protected org.spongycastle.math.ec.ECPoint decompressPoint(int, java.math.BigInteger)
    {
        org.spongycastle.math.ec.ECCurve$AbstractFp r0;
        int $i0;
        java.math.BigInteger $r1;
        org.spongycastle.math.ec.ECFieldElement $r2, $r3, $r4;
        java.lang.IllegalArgumentException $r5;
        boolean $z0, $z1;
        org.spongycastle.math.ec.ECPoint $r6;

        r0 := @this: org.spongycastle.math.ec.ECCurve$AbstractFp;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.math.BigInteger;

        $r2 = virtualinvoke r0.<org.spongycastle.math.ec.ECCurve$AbstractFp: org.spongycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)>($r1);

        $r3 = virtualinvoke $r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r4 = r0.<org.spongycastle.math.ec.ECCurve$AbstractFp: org.spongycastle.math.ec.ECFieldElement a>;

        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r4);

        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r2);

        $r4 = r0.<org.spongycastle.math.ec.ECCurve$AbstractFp: org.spongycastle.math.ec.ECFieldElement b>;

        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r4);

        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement sqrt()>();

        $r4 = $r3;

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid point compression");

        throw $r5;

     label1:
        $z0 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: boolean testBitZero()>();

        if $i0 != 1 goto label4;

        $z1 = 1;

     label2:
        if $z0 == $z1 goto label3;

        $r4 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement negate()>();

     label3:
        $r6 = virtualinvoke r0.<org.spongycastle.math.ec.ECCurve$AbstractFp: org.spongycastle.math.ec.ECPoint createRawPoint(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>($r2, $r4, 1);

        return $r6;

     label4:
        $z1 = 0;

        goto label2;
    }
