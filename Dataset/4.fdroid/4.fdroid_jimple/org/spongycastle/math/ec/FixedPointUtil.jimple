org.spongycastle.math.ec.FixedPointUtil extends java.lang.Object
public static final java.lang.String PRECOMP_NAME
    public void <init>()
    {
        org.spongycastle.math.ec.FixedPointUtil r0;

        r0 := @this: org.spongycastle.math.ec.FixedPointUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static int getCombSize(org.spongycastle.math.ec.ECCurve)
    {
        org.spongycastle.math.ec.ECCurve $r0;
        java.math.BigInteger $r1;
        int $i0;

        $r0 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r1 = virtualinvoke $r0.<org.spongycastle.math.ec.ECCurve: java.math.BigInteger getOrder()>();

        if $r1 != null goto label1;

        $i0 = virtualinvoke $r0.<org.spongycastle.math.ec.ECCurve: int getFieldSize()>();

        $i0 = $i0 + 1;

        return $i0;

     label1:
        $i0 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        return $i0;
    }
    public static org.spongycastle.math.ec.FixedPointPreCompInfo getFixedPointPreCompInfo(org.spongycastle.math.ec.PreCompInfo)
    {
        boolean $z0;
        org.spongycastle.math.ec.PreCompInfo r0;
        org.spongycastle.math.ec.FixedPointPreCompInfo r1;

        r0 := @parameter0: org.spongycastle.math.ec.PreCompInfo;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.spongycastle.math.ec.FixedPointPreCompInfo;

        if $z0 == 0 goto label1;

        r1 = (org.spongycastle.math.ec.FixedPointPreCompInfo) r0;

        return r1;

     label1:
        r1 = new org.spongycastle.math.ec.FixedPointPreCompInfo;

        specialinvoke r1.<org.spongycastle.math.ec.FixedPointPreCompInfo: void <init>()>();

        return r1;
    }
    public static org.spongycastle.math.ec.FixedPointPreCompInfo precompute(org.spongycastle.math.ec.ECPoint, int)
    {
        org.spongycastle.math.ec.ECPoint $r0, r1, $r7;
        int $i0, i1, i2, i3, $i4, $i5;
        org.spongycastle.math.ec.ECPoint[] r2, r6;
        org.spongycastle.math.ec.ECCurve $r3;
        org.spongycastle.math.ec.PreCompInfo $r4;
        org.spongycastle.math.ec.FixedPointPreCompInfo $r5;

        $r0 := @parameter0: org.spongycastle.math.ec.ECPoint;

        $i0 := @parameter1: int;

        $r3 = virtualinvoke $r0.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECCurve getCurve()>();

        i2 = 1 << $i0;

        $r4 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.PreCompInfo getPreCompInfo(org.spongycastle.math.ec.ECPoint,java.lang.String)>($r0, "bc_fixed_point");

        $r5 = staticinvoke <org.spongycastle.math.ec.FixedPointUtil: org.spongycastle.math.ec.FixedPointPreCompInfo getFixedPointPreCompInfo(org.spongycastle.math.ec.PreCompInfo)>($r4);

        r2 = virtualinvoke $r5.<org.spongycastle.math.ec.FixedPointPreCompInfo: org.spongycastle.math.ec.ECPoint[] getPreComp()>();

        if r2 == null goto label1;

        i1 = lengthof r2;

        if i1 >= i2 goto label8;

     label1:
        i1 = staticinvoke <org.spongycastle.math.ec.FixedPointUtil: int getCombSize(org.spongycastle.math.ec.ECCurve)>($r3);

        i1 = i1 + $i0;

        i1 = i1 + -1;

        i1 = i1 / $i0;

        r2 = newarray (org.spongycastle.math.ec.ECPoint)[$i0];

        r2[0] = $r0;

        i3 = 1;

     label2:
        if i3 >= $i0 goto label3;

        $i4 = i3 + -1;

        r1 = r2[$i4];

        r1 = virtualinvoke r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint timesPow2(int)>(i1);

        r2[i3] = r1;

        i3 = i3 + 1;

        goto label2;

     label3:
        virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: void normalizeAll(org.spongycastle.math.ec.ECPoint[])>(r2);

        r6 = newarray (org.spongycastle.math.ec.ECPoint)[i2];

        r1 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint getInfinity()>();

        r6[0] = r1;

        i3 = $i0 + -1;

     label4:
        if i3 < 0 goto label7;

        r1 = r2[i3];

        i1 = 1 << i3;

        $i4 = i1;

     label5:
        if $i4 >= i2 goto label6;

        $i5 = $i4 - i1;

        $r7 = r6[$i5];

        $r7 = virtualinvoke $r7.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint add(org.spongycastle.math.ec.ECPoint)>(r1);

        r6[$i4] = $r7;

        $i5 = i1 << 1;

        $i4 = $i4 + $i5;

        goto label5;

     label6:
        i3 = i3 + -1;

        goto label4;

     label7:
        virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: void normalizeAll(org.spongycastle.math.ec.ECPoint[])>(r6);

        virtualinvoke $r5.<org.spongycastle.math.ec.FixedPointPreCompInfo: void setPreComp(org.spongycastle.math.ec.ECPoint[])>(r6);

        virtualinvoke $r5.<org.spongycastle.math.ec.FixedPointPreCompInfo: void setWidth(int)>($i0);

        virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: void setPreCompInfo(org.spongycastle.math.ec.ECPoint,java.lang.String,org.spongycastle.math.ec.PreCompInfo)>($r0, "bc_fixed_point", $r5);

     label8:
        return $r5;
    }
