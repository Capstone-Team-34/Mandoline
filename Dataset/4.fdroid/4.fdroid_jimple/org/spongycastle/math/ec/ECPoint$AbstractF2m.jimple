org.spongycastle.math.ec.ECPoint$AbstractF2m extends org.spongycastle.math.ec.ECPoint
    protected void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECPoint$AbstractF2m r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECFieldElement $r2, $r3;

        r0 := @this: org.spongycastle.math.ec.ECPoint$AbstractF2m;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.ECPoint: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r1, $r2, $r3);

        return;
    }
    protected void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement[])
    {
        org.spongycastle.math.ec.ECPoint$AbstractF2m r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECFieldElement $r2, $r3;
        org.spongycastle.math.ec.ECFieldElement[] $r4;

        r0 := @this: org.spongycastle.math.ec.ECPoint$AbstractF2m;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        $r4 := @parameter3: org.spongycastle.math.ec.ECFieldElement[];

        specialinvoke r0.<org.spongycastle.math.ec.ECPoint: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[])>($r1, $r2, $r3, $r4);

        return;
    }
    protected boolean satisfiesCurveEquation()
    {
        org.spongycastle.math.ec.ECPoint$AbstractF2m r0;
        org.spongycastle.math.ec.ECFieldElement r1, r2, $r4, r5, $r6, r8, $r9, $r10;
        org.spongycastle.math.ec.ECCurve $r3;
        int $i0;
        org.spongycastle.math.ec.ECFieldElement[] $r7;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r11;

        r0 := @this: org.spongycastle.math.ec.ECPoint$AbstractF2m;

        $r3 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECCurve getCurve()>();

        r2 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement x>;

        $r4 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        r5 = $r4;

        $r6 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getB()>();

        r1 = $r6;

        $i0 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: int getCoordinateSystem()>();

        if $i0 != 6 goto label5;

        $r7 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement[] zs>;

        r8 = $r7[0];

        $z0 = virtualinvoke r8.<org.spongycastle.math.ec.ECFieldElement: boolean isOne()>();

        $z1 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r2 = $r6;

        if $z0 != 0 goto label1;

        r2 = virtualinvoke r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r2 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r2);

     label1:
        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        return $z0;

     label2:
        r1 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement y>;

        r2 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        if $z0 == 0 goto label4;

        r8 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r8 = virtualinvoke r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r1);

        $r4 = virtualinvoke r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r4);

        r8 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r6 = virtualinvoke r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r6);

     label3:
        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r2);

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        return $z0;

     label4:
        $r9 = virtualinvoke r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r5 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r8 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r8);

        $r4 = virtualinvoke r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiplyPlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>(r1, $r4, $r9);

        $r6 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement squarePlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r6, r5);

        goto label3;

     label5:
        r8 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r9 = virtualinvoke r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r2);

        $r10 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r8);

        r8 = $r10;

        lookupswitch($i0)
        {
            case 0: goto label8;
            case 1: goto label7;
            default: goto label6;
        };

     label6:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unsupported coordinate system");

        throw $r11;

     label7:
        $r7 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement[] zs>;

        $r9 = $r7[0];

        $z0 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: boolean isOne()>();

        if $z0 != 0 goto label8;

        r8 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r1 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r8);

        r8 = virtualinvoke $r10.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r9);

        r5 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r9);

        r1 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r1);

     label8:
        $r6 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r5);

        $r4 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r6 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r4);

        $r6 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r1);

        $z0 = virtualinvoke r8.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        return $z0;
    }
    public org.spongycastle.math.ec.ECPoint scaleX(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement $r0, r1, $r4, $r5, $r8;
        org.spongycastle.math.ec.ECPoint$AbstractF2m r2;
        boolean $z0;
        int $i0;
        org.spongycastle.math.ec.ECPoint $r3;
        org.spongycastle.math.ec.ECCurve $r6;
        org.spongycastle.math.ec.ECFieldElement[] $r7;

        r2 := @this: org.spongycastle.math.ec.ECPoint$AbstractF2m;

        $r0 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $z0 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint$AbstractF2m: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        return r2;

     label1:
        $i0 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint$AbstractF2m: int getCurveCoordinateSystem()>();

        lookupswitch($i0)
        {
            case 5: goto label3;
            case 6: goto label4;
            default: goto label2;
        };

     label2:
        $r3 = specialinvoke r2.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint scaleX(org.spongycastle.math.ec.ECFieldElement)>($r0);

        return $r3;

     label3:
        r1 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement getRawXCoord()>();

        $r4 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement getRawYCoord()>();

        $r5 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r0);

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r1);

        $r0 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement divide(org.spongycastle.math.ec.ECFieldElement)>($r0);

        $r0 = virtualinvoke $r0.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r5);

        $r6 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r7 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement[] getRawZCoords()>();

        $z0 = r2.<org.spongycastle.math.ec.ECPoint$AbstractF2m: boolean withCompression>;

        $r3 = virtualinvoke $r6.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint createRawPoint(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>(r1, $r0, $r7, $z0);

        return $r3;

     label4:
        $r4 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement getRawXCoord()>();

        $r8 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement getRawYCoord()>();

        $r7 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement[] getRawZCoords()>();

        r1 = $r7[0];

        $r5 = virtualinvoke $r0.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r5);

        $r4 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r4);

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r5);

        $r0 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r0);

        $r6 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r7 = newarray (org.spongycastle.math.ec.ECFieldElement)[1];

        $r7[0] = $r0;

        $z0 = r2.<org.spongycastle.math.ec.ECPoint$AbstractF2m: boolean withCompression>;

        $r3 = virtualinvoke $r6.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint createRawPoint(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>($r5, $r4, $r7, $z0);

        return $r3;
    }
    public org.spongycastle.math.ec.ECPoint scaleY(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement $r0, $r3, $r4;
        boolean $z0;
        org.spongycastle.math.ec.ECPoint$AbstractF2m r1;
        int $i0;
        org.spongycastle.math.ec.ECPoint $r2;
        org.spongycastle.math.ec.ECCurve $r5;
        org.spongycastle.math.ec.ECFieldElement[] $r6;

        r1 := @this: org.spongycastle.math.ec.ECPoint$AbstractF2m;

        $r0 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $z0 = virtualinvoke r1.<org.spongycastle.math.ec.ECPoint$AbstractF2m: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $i0 = virtualinvoke r1.<org.spongycastle.math.ec.ECPoint$AbstractF2m: int getCurveCoordinateSystem()>();

        lookupswitch($i0)
        {
            case 5: goto label3;
            case 6: goto label3;
            default: goto label2;
        };

     label2:
        $r2 = specialinvoke r1.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint scaleY(org.spongycastle.math.ec.ECFieldElement)>($r0);

        return $r2;

     label3:
        $r3 = virtualinvoke r1.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement getRawXCoord()>();

        $r4 = virtualinvoke r1.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement getRawYCoord()>();

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r3);

        $r0 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r0);

        $r0 = virtualinvoke $r0.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r3);

        $r5 = virtualinvoke r1.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r6 = virtualinvoke r1.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement[] getRawZCoords()>();

        $z0 = r1.<org.spongycastle.math.ec.ECPoint$AbstractF2m: boolean withCompression>;

        $r2 = virtualinvoke $r5.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint createRawPoint(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>($r3, $r0, $r6, $z0);

        return $r2;
    }
    public org.spongycastle.math.ec.ECPoint subtract(org.spongycastle.math.ec.ECPoint)
    {
        org.spongycastle.math.ec.ECPoint $r0;
        org.spongycastle.math.ec.ECPoint$AbstractF2m r1;
        boolean $z0;

        r1 := @this: org.spongycastle.math.ec.ECPoint$AbstractF2m;

        $r0 := @parameter0: org.spongycastle.math.ec.ECPoint;

        $z0 = virtualinvoke $r0.<org.spongycastle.math.ec.ECPoint: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r0 = virtualinvoke $r0.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint negate()>();

        $r0 = virtualinvoke r1.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECPoint add(org.spongycastle.math.ec.ECPoint)>($r0);

        return $r0;
    }
    public org.spongycastle.math.ec.ECPoint$AbstractF2m tau()
    {
        org.spongycastle.math.ec.ECPoint$AbstractF2m r0;
        org.spongycastle.math.ec.ECFieldElement r1, r2, r6;
        boolean $z0;
        org.spongycastle.math.ec.ECCurve $r3;
        int $i0;
        java.lang.IllegalStateException $r4;
        org.spongycastle.math.ec.ECPoint $r5;
        org.spongycastle.math.ec.ECFieldElement[] $r7;

        r0 := @this: org.spongycastle.math.ec.ECPoint$AbstractF2m;

        $z0 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r3 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECCurve getCurve()>();

        $i0 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: int getCoordinateSystem()>();

        r1 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement x>;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label4;
            default: goto label2;
        };

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unsupported coordinate system");

        throw $r4;

     label3:
        r2 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement y>;

        r1 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r2 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $z0 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: boolean withCompression>;

        $r5 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint createRawPoint(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>(r1, r2, $z0);

        r0 = (org.spongycastle.math.ec.ECPoint$AbstractF2m) $r5;

        return r0;

     label4:
        r6 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r7 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement[] zs>;

        r2 = $r7[0];

        r1 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r6 = virtualinvoke r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r7 = newarray (org.spongycastle.math.ec.ECFieldElement)[1];

        r2 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r7[0] = r2;

        $z0 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: boolean withCompression>;

        $r5 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint createRawPoint(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>(r1, r6, $r7, $z0);

        r0 = (org.spongycastle.math.ec.ECPoint$AbstractF2m) $r5;

        return r0;
    }
    public org.spongycastle.math.ec.ECPoint$AbstractF2m tauPow(int)
    {
        org.spongycastle.math.ec.ECPoint$AbstractF2m r0;
        int $i0, $i1;
        org.spongycastle.math.ec.ECFieldElement r1, r2, r6;
        boolean $z0;
        org.spongycastle.math.ec.ECCurve $r3;
        java.lang.IllegalStateException $r4;
        org.spongycastle.math.ec.ECPoint $r5;
        org.spongycastle.math.ec.ECFieldElement[] $r7;

        r0 := @this: org.spongycastle.math.ec.ECPoint$AbstractF2m;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r3 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECCurve getCurve()>();

        $i1 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: int getCoordinateSystem()>();

        r1 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement x>;

        lookupswitch($i1)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label4;
            default: goto label2;
        };

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unsupported coordinate system");

        throw $r4;

     label3:
        r2 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement y>;

        r1 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement squarePow(int)>($i0);

        r2 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement squarePow(int)>($i0);

        $z0 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: boolean withCompression>;

        $r5 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint createRawPoint(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>(r1, r2, $z0);

        r0 = (org.spongycastle.math.ec.ECPoint$AbstractF2m) $r5;

        return r0;

     label4:
        r6 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r7 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: org.spongycastle.math.ec.ECFieldElement[] zs>;

        r2 = $r7[0];

        r1 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement squarePow(int)>($i0);

        r6 = virtualinvoke r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement squarePow(int)>($i0);

        $r7 = newarray (org.spongycastle.math.ec.ECFieldElement)[1];

        r2 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement squarePow(int)>($i0);

        $r7[0] = r2;

        $z0 = r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: boolean withCompression>;

        $r5 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint createRawPoint(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>(r1, r6, $r7, $z0);

        r0 = (org.spongycastle.math.ec.ECPoint$AbstractF2m) $r5;

        return r0;
    }
