org.spongycastle.math.ec.ECFieldElement extends java.lang.Object implements org.spongycastle.math.ec.ECConstants
    public void <init>()
    {
        org.spongycastle.math.ec.ECFieldElement r0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
public abstract org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement) { 
// no body
} 
public abstract org.spongycastle.math.ec.ECFieldElement addOne() { 
// no body
} 
    public int bitLength()
    {
        org.spongycastle.math.ec.ECFieldElement r0;
        java.math.BigInteger $r1;
        int $i0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement;

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        return $i0;
    }
public abstract org.spongycastle.math.ec.ECFieldElement divide(org.spongycastle.math.ec.ECFieldElement) { 
// no body
} 
    public byte[] getEncoded()
    {
        org.spongycastle.math.ec.ECFieldElement r0;
        int $i0;
        java.math.BigInteger $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement;

        $i0 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: int getFieldSize()>();

        $i0 = $i0 + 7;

        $i0 = $i0 / 8;

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r2 = staticinvoke <org.spongycastle.util.BigIntegers: byte[] asUnsignedByteArray(int,java.math.BigInteger)>($i0, $r1);

        return $r2;
    }
public abstract java.lang.String getFieldName() { 
// no body
} 
public abstract int getFieldSize() { 
// no body
} 
public abstract org.spongycastle.math.ec.ECFieldElement invert() { 
// no body
} 
    public boolean isOne()
    {
        org.spongycastle.math.ec.ECFieldElement r0;
        int $i0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement;

        $i0 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: int bitLength()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isZero()
    {
        org.spongycastle.math.ec.ECFieldElement r0;
        java.math.BigInteger $r1;
        int $i0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement;

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int signum()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
public abstract org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement) { 
// no body
} 
    public org.spongycastle.math.ec.ECFieldElement multiplyMinusProduct(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement r0, $r1, $r2, $r3;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        r0 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r1);

        $r1 = virtualinvoke $r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r3);

        r0 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement subtract(org.spongycastle.math.ec.ECFieldElement)>($r1);

        return r0;
    }
    public org.spongycastle.math.ec.ECFieldElement multiplyPlusProduct(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement r0, $r1, $r2, $r3;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        r0 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r1);

        $r1 = virtualinvoke $r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r3);

        r0 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r1);

        return r0;
    }
public abstract org.spongycastle.math.ec.ECFieldElement negate() { 
// no body
} 
public abstract org.spongycastle.math.ec.ECFieldElement sqrt() { 
// no body
} 
public abstract org.spongycastle.math.ec.ECFieldElement square() { 
// no body
} 
    public org.spongycastle.math.ec.ECFieldElement squareMinusProduct(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement r0, $r1, $r2;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        r0 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r1 = virtualinvoke $r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r2);

        r0 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement subtract(org.spongycastle.math.ec.ECFieldElement)>($r1);

        return r0;
    }
    public org.spongycastle.math.ec.ECFieldElement squarePlusProduct(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECFieldElement r0, $r1, $r2;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        r0 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r1 = virtualinvoke $r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r2);

        r0 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r1);

        return r0;
    }
    public org.spongycastle.math.ec.ECFieldElement squarePow(int)
    {
        org.spongycastle.math.ec.ECFieldElement r0;
        int $i0, i1;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement;

        $i0 := @parameter0: int;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        r0 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }
public abstract org.spongycastle.math.ec.ECFieldElement subtract(org.spongycastle.math.ec.ECFieldElement) { 
// no body
} 
    public boolean testBitZero()
    {
        org.spongycastle.math.ec.ECFieldElement r0;
        java.math.BigInteger $r1;
        boolean $z0;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement;

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $z0 = virtualinvoke $r1.<java.math.BigInteger: boolean testBit(int)>(0);

        return $z0;
    }
public abstract java.math.BigInteger toBigInteger() { 
// no body
} 
    public java.lang.String toString()
    {
        org.spongycastle.math.ec.ECFieldElement r0;
        java.math.BigInteger $r1;
        java.lang.String $r2;

        r0 := @this: org.spongycastle.math.ec.ECFieldElement;

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.lang.String toString(int)>(16);

        return $r2;
    }
