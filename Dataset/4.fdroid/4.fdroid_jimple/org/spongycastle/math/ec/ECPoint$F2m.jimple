org.spongycastle.math.ec.ECPoint$F2m extends org.spongycastle.math.ec.ECPoint$AbstractF2m
    public void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.ECPoint$F2m r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECFieldElement $r2, $r3;

        r0 := @this: org.spongycastle.math.ec.ECPoint$F2m;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>($r1, $r2, $r3, 0);

        return;
    }
    public void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, boolean)
    {
        org.spongycastle.math.ec.ECPoint$F2m r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECFieldElement $r2, $r3;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.spongycastle.math.ec.ECPoint$F2m;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        $z0 := @parameter3: boolean;

        $z1 = 1;

        specialinvoke r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r1, $r2, $r3);

        if $r2 != null goto label3;

        $z2 = 1;

     label1:
        if $r3 != null goto label4;

     label2:
        if $z2 == $z1 goto label5;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Exactly one of the field elements is null");

        throw $r4;

     label3:
        $z2 = 0;

        goto label1;

     label4:
        $z1 = 0;

        goto label2;

     label5:
        if $r2 == null goto label6;

        $r2 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement x>;

        $r3 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        staticinvoke <org.spongycastle.math.ec.ECFieldElement$F2m: void checkFieldElements(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r2, $r3);

        if $r1 == null goto label6;

        $r3 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement x>;

        $r1 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECCurve curve>;

        $r2 = virtualinvoke $r1.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        staticinvoke <org.spongycastle.math.ec.ECFieldElement$F2m: void checkFieldElements(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r3, $r2);

     label6:
        r0.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression> = $z0;

        return;
    }
    void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement[], boolean)
    {
        org.spongycastle.math.ec.ECPoint$F2m r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECFieldElement $r2, $r3;
        org.spongycastle.math.ec.ECFieldElement[] $r4;
        boolean $z0;

        r0 := @this: org.spongycastle.math.ec.ECPoint$F2m;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        $r4 := @parameter3: org.spongycastle.math.ec.ECFieldElement[];

        $z0 := @parameter4: boolean;

        specialinvoke r0.<org.spongycastle.math.ec.ECPoint$AbstractF2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[])>($r1, $r2, $r3, $r4);

        r0.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression> = $z0;

        return;
    }
    public org.spongycastle.math.ec.ECPoint add(org.spongycastle.math.ec.ECPoint)
    {
        org.spongycastle.math.ec.ECPoint$F2m r0, r10;
        org.spongycastle.math.ec.ECFieldElement[] $r1;
        boolean $z0, $z1, $z2;
        org.spongycastle.math.ec.ECPoint r2;
        org.spongycastle.math.ec.ECCurve $r3;
        int $i0;
        org.spongycastle.math.ec.ECFieldElement $r4, $r5, $r7, $r8, $r9, r11, r12, $r13, $r14, $r15, $r16;
        java.lang.IllegalStateException $r6;
        java.math.BigInteger $r17;

        r0 := @this: org.spongycastle.math.ec.ECPoint$F2m;

        r2 := @parameter0: org.spongycastle.math.ec.ECPoint;

        $z0 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: boolean isInfinity()>();

        if $z0 == 0 goto label01;

        return r2;

     label01:
        $z0 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint: boolean isInfinity()>();

        if $z0 == 0 goto label02;

        return r0;

     label02:
        $r3 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECCurve getCurve()>();

        $i0 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: int getCoordinateSystem()>();

        $r4 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement x>;

        $r5 = r2.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement x>;

        lookupswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label07;
            case 6: goto label18;
            default: goto label03;
        };

     label03:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unsupported coordinate system");

        throw $r6;

     label04:
        $r7 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r8 = r2.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement y>;

        $r9 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r5);

        $r5 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r8);

        $z0 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label06;

        $z0 = virtualinvoke $r5.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label05;

        r2 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECPoint twice()>();

        return r2;

     label05:
        r2 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint getInfinity()>();

        return r2;

     label06:
        $r5 = virtualinvoke $r5.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement divide(org.spongycastle.math.ec.ECFieldElement)>($r9);

        $r8 = virtualinvoke $r5.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r8 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r5);

        $r9 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r9);

        $r8 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        $r9 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r8);

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r9);

        $r4 = virtualinvoke $r5.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r4);

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r9);

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r7);

        r10 = new org.spongycastle.math.ec.ECPoint$F2m;

        $z0 = r0.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke r10.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>($r3, $r9, $r4, $z0);

        return r10;

     label07:
        $r7 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r1 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement[] zs>;

        r11 = $r1[0];

        $r8 = r2.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement y>;

        $r1 = r2.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement[] zs>;

        $r9 = $r1[0];

        $z0 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: boolean isOne()>();

        $r8 = virtualinvoke r11.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r8);

        if $z0 == 0 goto label10;

        r12 = $r7;

     label08:
        $r8 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r12);

        $r5 = virtualinvoke r11.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r5);

        if $z0 == 0 goto label11;

        r12 = $r4;

     label09:
        r12 = virtualinvoke $r5.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r12);

        $z1 = virtualinvoke r12.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z1 == 0 goto label13;

        $z0 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label12;

        r2 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECPoint twice()>();

        return r2;

     label10:
        r12 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r9);

        goto label08;

     label11:
        r12 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r9);

        goto label09;

     label12:
        r2 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint getInfinity()>();

        return r2;

     label13:
        $r13 = virtualinvoke r12.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r5 = virtualinvoke $r13.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r12);

        if $z0 == 0 goto label16;

     label14:
        $r14 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r12);

        $r15 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        $r15 = virtualinvoke $r14.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiplyPlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r8, $r13, $r15);

        $r15 = virtualinvoke $r15.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r11);

        $r16 = virtualinvoke $r15.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r5);

        $r15 = virtualinvoke r12.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r16);

        if $z0 == 0 goto label17;

        $r9 = $r13;

     label15:
        $r4 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiplyPlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r4, r12, $r7);

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiplyPlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r9, $r14, $r16);

        $r7 = virtualinvoke $r5.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r11);

        r10 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r1 = newarray (org.spongycastle.math.ec.ECFieldElement)[1];

        $r1[0] = $r7;

        $z0 = r0.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke r10.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>($r3, $r15, $r4, $r1, $z0);

        return r10;

     label16:
        r11 = virtualinvoke r11.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r9);

        goto label14;

     label17:
        $r9 = virtualinvoke $r13.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r9);

        goto label15;

     label18:
        $z0 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label20;

        $z0 = virtualinvoke $r5.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label19;

        r2 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint getInfinity()>();

        return r2;

     label19:
        r2 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint add(org.spongycastle.math.ec.ECPoint)>(r0);

        return r2;

     label20:
        $r9 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r1 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement[] zs>;

        $r7 = $r1[0];

        r12 = r2.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement y>;

        $r1 = r2.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement[] zs>;

        $r8 = $r1[0];

        $z0 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: boolean isOne()>();

        r11 = $r5;

        $r13 = r12;

        if $z0 != 0 goto label21;

        r11 = virtualinvoke $r5.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r7);

        $r13 = virtualinvoke r12.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r7);

     label21:
        $z1 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: boolean isOne()>();

        $r14 = $r4;

        $r15 = $r9;

        if $z1 != 0 goto label22;

        $r14 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r8);

        $r15 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r8);

     label22:
        $r13 = virtualinvoke $r15.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r13);

        $r4 = virtualinvoke $r14.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r11);

        $z2 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z2 == 0 goto label24;

        $z0 = virtualinvoke $r13.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label23;

        r2 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECPoint twice()>();

        return r2;

     label23:
        r2 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint getInfinity()>();

        return r2;

     label24:
        $z2 = virtualinvoke $r5.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z2 == 0 goto label27;

        r2 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECPoint normalize()>();

        $r9 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getXCoord()>();

        $r7 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getYCoord()>();

        $r4 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r12);

        $r8 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement divide(org.spongycastle.math.ec.ECFieldElement)>($r9);

        $r4 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r8);

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r9);

        $r5 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r5);

        $r4 = $r5;

        $z0 = virtualinvoke $r5.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label25;

        r10 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r4 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getB()>();

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement sqrt()>();

        $z0 = r0.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke r10.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>($r3, $r5, $r4, $z0);

        return r10;

     label25:
        $r9 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r5);

        $r9 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r9);

        $r9 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r5);

        $r7 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r7);

        $r7 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement divide(org.spongycastle.math.ec.ECFieldElement)>($r5);

        $r5 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r5);

        $r17 = <org.spongycastle.math.ec.ECConstants: java.math.BigInteger ONE>;

        $r9 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)>($r17);

     label26:
        r10 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r1 = newarray (org.spongycastle.math.ec.ECFieldElement)[1];

        $r1[0] = $r9;

        $z0 = r0.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke r10.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>($r3, $r4, $r5, $r1, $z0);

        return r10;

     label27:
        $r5 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r4 = virtualinvoke $r13.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r14);

        r11 = virtualinvoke $r13.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r11);

        r12 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r11);

        $r4 = r12;

        $z2 = virtualinvoke r12.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z2 == 0 goto label28;

        r10 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r4 = virtualinvoke $r3.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getB()>();

        $r4 = virtualinvoke $r4.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement sqrt()>();

        $z0 = r0.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke r10.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>($r3, r12, $r4, $z0);

        return r10;

     label28:
        $r14 = virtualinvoke $r13.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r5);

        r12 = $r14;

        if $z1 != 0 goto label29;

        r12 = virtualinvoke $r14.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r8);

     label29:
        $r5 = virtualinvoke r11.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r5);

        $r9 = virtualinvoke $r9.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r7);

        $r5 = virtualinvoke $r5.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement squarePlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>(r12, $r9);

        $r9 = r12;

        if $z0 != 0 goto label26;

        $r9 = virtualinvoke r12.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r7);

        goto label26;
    }
    protected org.spongycastle.math.ec.ECPoint detach()
    {
        org.spongycastle.math.ec.ECPoint$F2m r0, $r1;
        org.spongycastle.math.ec.ECFieldElement $r2, $r3;

        r0 := @this: org.spongycastle.math.ec.ECPoint$F2m;

        $r1 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r2 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r3 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        specialinvoke $r1.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>(null, $r2, $r3);

        return $r1;
    }
    protected boolean getCompressionYTilde()
    {
        org.spongycastle.math.ec.ECPoint$F2m r0;
        org.spongycastle.math.ec.ECFieldElement $r1, $r2;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: org.spongycastle.math.ec.ECPoint$F2m;

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement getRawXCoord()>();

        $z0 = virtualinvoke $r1.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement getRawYCoord()>();

        $i0 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: int getCurveCoordinateSystem()>();

        lookupswitch($i0)
        {
            case 5: goto label3;
            case 6: goto label3;
            default: goto label2;
        };

     label2:
        $r1 = virtualinvoke $r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement divide(org.spongycastle.math.ec.ECFieldElement)>($r1);

        $z0 = virtualinvoke $r1.<org.spongycastle.math.ec.ECFieldElement: boolean testBitZero()>();

        return $z0;

     label3:
        $z0 = virtualinvoke $r2.<org.spongycastle.math.ec.ECFieldElement: boolean testBitZero()>();

        $z1 = virtualinvoke $r1.<org.spongycastle.math.ec.ECFieldElement: boolean testBitZero()>();

        if $z0 == $z1 goto label4;

        return 1;

     label4:
        return 0;
    }
    public org.spongycastle.math.ec.ECFieldElement getYCoord()
    {
        org.spongycastle.math.ec.ECPoint$F2m r0;
        org.spongycastle.math.ec.ECFieldElement r1, r2;
        int $i0;
        boolean $z0;
        org.spongycastle.math.ec.ECFieldElement[] $r3;

        r0 := @this: org.spongycastle.math.ec.ECPoint$F2m;

        $i0 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: int getCurveCoordinateSystem()>();

        lookupswitch($i0)
        {
            case 5: goto label2;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        r2 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        return r2;

     label2:
        r2 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement x>;

        r1 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        $z0 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: boolean isInfinity()>();

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label4;

     label3:
        return r1;

     label4:
        r1 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r2);

        r1 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r2);

        if 6 != $i0 goto label5;

        $r3 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement[] zs>;

        r2 = $r3[0];

        $z0 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: boolean isOne()>();

        if $z0 != 0 goto label5;

        r2 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement divide(org.spongycastle.math.ec.ECFieldElement)>(r2);

        return r2;

     label5:
        return r1;
    }
    public org.spongycastle.math.ec.ECPoint negate()
    {
        org.spongycastle.math.ec.ECFieldElement r0, r3, r6;
        org.spongycastle.math.ec.ECPoint$F2m r1, $r4;
        boolean $z0;
        int $i0;
        java.lang.IllegalStateException $r2;
        org.spongycastle.math.ec.ECCurve $r5;
        org.spongycastle.math.ec.ECFieldElement[] $r7;

        r1 := @this: org.spongycastle.math.ec.ECPoint$F2m;

        $z0 = virtualinvoke r1.<org.spongycastle.math.ec.ECPoint$F2m: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        r0 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement x>;

        $z0 = virtualinvoke r0.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 != 0 goto label7;

        $i0 = virtualinvoke r1.<org.spongycastle.math.ec.ECPoint$F2m: int getCurveCoordinateSystem()>();

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label2;
        };

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unsupported coordinate system");

        throw $r2;

     label3:
        r3 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r4 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r5 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECCurve curve>;

        r3 = virtualinvoke r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r0);

        $z0 = r1.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke $r4.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>($r5, r0, r3, $z0);

        return $r4;

     label4:
        r6 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r7 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement[] zs>;

        r3 = $r7[0];

        $r4 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r5 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECCurve curve>;

        r6 = virtualinvoke r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r0);

        $r7 = newarray (org.spongycastle.math.ec.ECFieldElement)[1];

        $r7[0] = r3;

        $z0 = r1.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke $r4.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>($r5, r0, r6, $r7, $z0);

        return $r4;

     label5:
        r3 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r4 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r5 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECCurve curve>;

        r3 = virtualinvoke r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement addOne()>();

        $z0 = r1.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke $r4.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>($r5, r0, r3, $z0);

        return $r4;

     label6:
        r6 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r7 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement[] zs>;

        r3 = $r7[0];

        $r4 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r5 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECCurve curve>;

        r6 = virtualinvoke r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r3);

        $r7 = newarray (org.spongycastle.math.ec.ECFieldElement)[1];

        $r7[0] = r3;

        $z0 = r1.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke $r4.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>($r5, r0, r6, $r7, $z0);

        return $r4;

     label7:
        return r1;
    }
    public org.spongycastle.math.ec.ECPoint twice()
    {
        org.spongycastle.math.ec.ECFieldElement[] $r0;
        boolean $z0, $z1;
        org.spongycastle.math.ec.ECPoint$F2m r1, $r9;
        org.spongycastle.math.ec.ECCurve $r2;
        org.spongycastle.math.ec.ECFieldElement $r3, $r6, $r7, $r8, $r10, $r11, r12, r13, r14, r15, $r16;
        org.spongycastle.math.ec.ECPoint $r4;
        int $i0, $i1;
        java.lang.IllegalStateException $r5;

        r1 := @this: org.spongycastle.math.ec.ECPoint$F2m;

        $z0 = virtualinvoke r1.<org.spongycastle.math.ec.ECPoint$F2m: boolean isInfinity()>();

        if $z0 == 0 goto label01;

        return r1;

     label01:
        $r2 = virtualinvoke r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r3 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement x>;

        $z0 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label02;

        $r4 = virtualinvoke $r2.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint getInfinity()>();

        return $r4;

     label02:
        $i0 = virtualinvoke $r2.<org.spongycastle.math.ec.ECCurve: int getCoordinateSystem()>();

        lookupswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label05;
            case 6: goto label10;
            default: goto label03;
        };

     label03:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unsupported coordinate system");

        throw $r5;

     label04:
        $r6 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r6 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement divide(org.spongycastle.math.ec.ECFieldElement)>($r3);

        $r6 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r3);

        $r7 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r7 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r6);

        $r8 = virtualinvoke $r2.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        $r7 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r8);

        $r6 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement addOne()>();

        $r6 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement squarePlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r7, $r6);

        $r9 = new org.spongycastle.math.ec.ECPoint$F2m;

        $z0 = r1.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke $r9.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>($r2, $r7, $r6, $z0);

        return $r9;

     label05:
        $r7 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r0 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement[] zs>;

        $r8 = $r0[0];

        $z0 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: boolean isOne()>();

        if $z0 == 0 goto label08;

        $r6 = $r3;

     label06:
        if $z0 == 0 goto label09;

     label07:
        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r10 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r7);

        $r7 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r8 = virtualinvoke $r10.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r6);

        $r11 = virtualinvoke $r2.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        $r11 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiplyPlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r10, $r7, $r11);

        $r10 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r11);

        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiplyPlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r6, $r11, $r8);

        $r6 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r7);

        $r9 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r0 = newarray (org.spongycastle.math.ec.ECFieldElement)[1];

        $r0[0] = $r6;

        $z0 = r1.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke $r9.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>($r2, $r10, $r3, $r0, $z0);

        return $r9;

     label08:
        $r6 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r8);

        goto label06;

     label09:
        $r7 = virtualinvoke $r7.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r8);

        goto label07;

     label10:
        r12 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r0 = r1.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement[] zs>;

        r13 = $r0[0];

        $z0 = virtualinvoke r13.<org.spongycastle.math.ec.ECFieldElement: boolean isOne()>();

        if $z0 == 0 goto label14;

        r14 = r12;

     label11:
        if $z0 == 0 goto label15;

        $r10 = r13;

     label12:
        $r8 = virtualinvoke $r2.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        if $z0 == 0 goto label16;

        r15 = $r8;

     label13:
        $r6 = virtualinvoke r12.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r6 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r14);

        $r11 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r15);

        $z1 = virtualinvoke $r11.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z1 == 0 goto label17;

        $r9 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r6 = virtualinvoke $r2.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getB()>();

        $r6 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement sqrt()>();

        $z0 = r1.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke $r9.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>($r2, $r11, $r6, $z0);

        return $r9;

     label14:
        r14 = virtualinvoke r12.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r13);

        goto label11;

     label15:
        $r10 = virtualinvoke r13.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        goto label12;

     label16:
        r15 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r10);

        goto label13;

     label17:
        $r6 = virtualinvoke $r11.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        if $z0 == 0 goto label21;

        $r7 = $r11;

     label18:
        $r16 = virtualinvoke $r2.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getB()>();

        $i0 = virtualinvoke $r16.<org.spongycastle.math.ec.ECFieldElement: int bitLength()>();

        $i1 = virtualinvoke $r2.<org.spongycastle.math.ec.ECCurve: int getFieldSize()>();

        $i1 = $i1 >> 1;

        if $i0 >= $i1 goto label24;

        $r3 = virtualinvoke r12.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r3);

        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $z0 = virtualinvoke $r16.<org.spongycastle.math.ec.ECFieldElement: boolean isOne()>();

        if $z0 == 0 goto label22;

        r14 = virtualinvoke r15.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r10);

        r14 = virtualinvoke r14.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

     label19:
        $r11 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r11);

        $r10 = virtualinvoke $r11.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r10);

        $r3 = virtualinvoke $r10.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r3);

        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r14);

        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r6);

        $r10 = $r3;

        $z0 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label23;

        $r10 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r7);

     label20:
        $r9 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r0 = newarray (org.spongycastle.math.ec.ECFieldElement)[1];

        $r0[0] = $r7;

        $z0 = r1.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke $r9.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>($r2, $r6, $r10, $r0, $z0);

        return $r9;

     label21:
        $r7 = virtualinvoke $r11.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r10);

        goto label18;

     label22:
        r14 = virtualinvoke $r10.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r14 = virtualinvoke r15.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement squarePlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r16, r14);

        goto label19;

     label23:
        $z0 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: boolean isOne()>();

        if $z0 != 0 goto label20;

        $r8 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement addOne()>();

        $r8 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r7);

        $r10 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r8);

        goto label20;

     label24:
        if $z0 == 0 goto label26;

     label25:
        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement squarePlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r11, r14);

        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r6);

        $r10 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r7);

        goto label20;

     label26:
        $r3 = virtualinvoke $r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r13);

        goto label25;
    }
    public org.spongycastle.math.ec.ECPoint twicePlus(org.spongycastle.math.ec.ECPoint)
    {
        org.spongycastle.math.ec.ECPoint$F2m r0, r12;
        org.spongycastle.math.ec.ECFieldElement r1, r2, r3, $r6, $r8, $r10, $r11;
        org.spongycastle.math.ec.ECPoint r4, $r7;
        boolean $z0;
        org.spongycastle.math.ec.ECCurve $r5;
        int $i0;
        org.spongycastle.math.ec.ECFieldElement[] $r9;

        r0 := @this: org.spongycastle.math.ec.ECPoint$F2m;

        r4 := @parameter0: org.spongycastle.math.ec.ECPoint;

        $z0 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: boolean isInfinity()>();

        if $z0 == 0 goto label01;

        return r4;

     label01:
        $z0 = virtualinvoke r4.<org.spongycastle.math.ec.ECPoint: boolean isInfinity()>();

        if $z0 == 0 goto label02;

        r4 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECPoint twice()>();

        return r4;

     label02:
        $r5 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r6 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement x>;

        $z0 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 != 0 goto label10;

        $i0 = virtualinvoke $r5.<org.spongycastle.math.ec.ECCurve: int getCoordinateSystem()>();

        lookupswitch($i0)
        {
            case 6: goto label04;
            default: goto label03;
        };

     label03:
        $r7 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECPoint twice()>();

        r4 = virtualinvoke $r7.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint add(org.spongycastle.math.ec.ECPoint)>(r4);

        return r4;

     label04:
        $r8 = r4.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement x>;

        $r9 = r4.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement[] zs>;

        r1 = $r9[0];

        $z0 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: boolean isOne()>();

        if $z0 != 0 goto label06;

     label05:
        $r7 = virtualinvoke r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECPoint twice()>();

        r4 = virtualinvoke $r7.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint add(org.spongycastle.math.ec.ECPoint)>(r4);

        return r4;

     label06:
        r1 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement y>;

        $r9 = r0.<org.spongycastle.math.ec.ECPoint$F2m: org.spongycastle.math.ec.ECFieldElement[] zs>;

        r3 = $r9[0];

        r2 = r4.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement y>;

        $r10 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r11 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r6 = virtualinvoke r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r1 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>(r3);

        r3 = virtualinvoke $r5.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        r3 = virtualinvoke r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r6);

        r3 = virtualinvoke r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r11);

        r1 = virtualinvoke r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r1);

        r2 = virtualinvoke r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement addOne()>();

        r3 = virtualinvoke $r5.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getA()>();

        r3 = virtualinvoke r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r2);

        r3 = virtualinvoke r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r6);

        $r11 = virtualinvoke r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r11);

        $r10 = virtualinvoke $r11.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiplyPlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>(r1, $r10, $r6);

        $r8 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r6);

        $r11 = virtualinvoke $r8.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>(r1);

        $r11 = virtualinvoke $r11.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $z0 = virtualinvoke $r11.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label08;

        $z0 = virtualinvoke $r10.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label07;

        r4 = virtualinvoke r4.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint twice()>();

        return r4;

     label07:
        r4 = virtualinvoke $r5.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint getInfinity()>();

        return r4;

     label08:
        $z0 = virtualinvoke $r10.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label09;

        r12 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r6 = virtualinvoke $r5.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECFieldElement getB()>();

        $r6 = virtualinvoke $r6.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement sqrt()>();

        $z0 = r0.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke r12.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>($r5, $r10, $r6, $z0);

        return r12;

     label09:
        r3 = virtualinvoke $r10.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r8 = virtualinvoke r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r8);

        r3 = virtualinvoke $r10.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r11);

        $r6 = virtualinvoke r3.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)>($r6);

        $r10 = virtualinvoke $r10.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r11);

        $r10 = virtualinvoke $r10.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        r1 = virtualinvoke $r10.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement multiplyPlusProduct(org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>(r1, r2, $r6);

        r12 = new org.spongycastle.math.ec.ECPoint$F2m;

        $r9 = newarray (org.spongycastle.math.ec.ECFieldElement)[1];

        $r9[0] = $r6;

        $z0 = r0.<org.spongycastle.math.ec.ECPoint$F2m: boolean withCompression>;

        specialinvoke r12.<org.spongycastle.math.ec.ECPoint$F2m: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>($r5, $r8, r1, $r9, $z0);

        return r12;

     label10:
        return r4;
    }
