org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement extends org.spongycastle.math.ec.ECFieldElement
private static final int[] PRECOMP_POW2
public static final java.math.BigInteger Q
protected int[] x
    static void <clinit>()
    {
        java.math.BigInteger $r0;
        int[] $r1;

        $r0 = <org.spongycastle.math.ec.custom.sec.SecP224K1Curve: java.math.BigInteger q>;

        <org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: java.math.BigInteger Q> = $r0;

        $r1 = newarray (int)[7];

        $r1[0] = 868209154;

        $r1[1] = -587542221;

        $r1[2] = 579297866;

        $r1[3] = -1014948952;

        $r1[4] = -1470801668;

        $r1[5] = 514782679;

        $r1[6] = -1897982644;

        <org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] PRECOMP_POW2> = $r1;

        return;
    }
    public void <init>()
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        int[] $r1;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.ECFieldElement: void <init>()>();

        $r1 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x> = $r1;

        return;
    }
    public void <init>(java.math.BigInteger)
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        java.math.BigInteger $r1, $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        int[] $r4;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r1 := @parameter0: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.math.ec.ECFieldElement: void <init>()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int signum()>();

        if $i0 < 0 goto label1;

        $r2 = <org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: java.math.BigInteger Q>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r2);

        if $i0 < 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("x value invalid for SecP224K1FieldElement");

        throw $r3;

     label2:
        $r4 = staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: int[] fromBigInteger(java.math.BigInteger)>($r1);

        r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x> = $r4;

        return;
    }
    protected void <init>(int[])
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        int[] $r1;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r1 := @parameter0: int[];

        specialinvoke r0.<org.spongycastle.math.ec.ECFieldElement: void <init>()>();

        r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x> = $r1;

        return;
    }
    public org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        int[] $r1, $r2, $r4;
        org.spongycastle.math.ec.ECFieldElement $r3;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r3 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        $r4 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        r0 = (org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement) $r3;

        $r1 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void add(int[],int[],int[])>($r4, $r1, $r2);

        r0 = new org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: void <init>(int[])>($r2);

        return r0;
    }
    public org.spongycastle.math.ec.ECFieldElement addOne()
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        int[] $r1, $r2;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r1 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        $r2 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void addOne(int[],int[])>($r2, $r1);

        r0 = new org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: void <init>(int[])>($r1);

        return r0;
    }
    public org.spongycastle.math.ec.ECFieldElement divide(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0, $r5;
        int[] $r1, $r2, $r4;
        org.spongycastle.math.ec.ECFieldElement $r3;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r3 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        $r4 = <org.spongycastle.math.ec.custom.sec.SecP224K1Field: int[] P>;

        $r5 = (org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement) $r3;

        $r1 = $r5.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.raw.Mod: void invert(int[],int[],int[])>($r4, $r1, $r2);

        $r1 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r2, $r1, $r2);

        r0 = new org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: void <init>(int[])>($r2);

        return r0;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0, r3;
        java.lang.Object $r1;
        int[] $r2, $r4;
        boolean $z0;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = (org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement) $r1;

        $r4 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        $r2 = r3.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        $z0 = staticinvoke <org.spongycastle.math.raw.Nat224: boolean eq(int[],int[])>($r4, $r2);

        return $z0;
    }
    public java.lang.String getFieldName()
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        return "SecP224K1Field";
    }
    public int getFieldSize()
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        int $i0;
        java.math.BigInteger $r1;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r1 = <org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: java.math.BigInteger Q>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        return $i0;
    }
    public int hashCode()
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        java.math.BigInteger $r1;
        int $i0, $i1;
        int[] $r2;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r1 = <org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: java.math.BigInteger Q>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $r2 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        $i1 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(int[],int,int)>($r2, 0, 7);

        $i0 = $i0 ^ $i1;

        return $i0;
    }
    public org.spongycastle.math.ec.ECFieldElement invert()
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        int[] $r1, $r2, $r3;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r2 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        $r3 = <org.spongycastle.math.ec.custom.sec.SecP224K1Field: int[] P>;

        $r1 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.raw.Mod: void invert(int[],int[],int[])>($r3, $r1, $r2);

        r0 = new org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: void <init>(int[])>($r2);

        return r0;
    }
    public boolean isOne()
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        boolean $z0;
        int[] $r1;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r1 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        $z0 = staticinvoke <org.spongycastle.math.raw.Nat224: boolean isOne(int[])>($r1);

        return $z0;
    }
    public boolean isZero()
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        boolean $z0;
        int[] $r1;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r1 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        $z0 = staticinvoke <org.spongycastle.math.raw.Nat224: boolean isZero(int[])>($r1);

        return $z0;
    }
    public org.spongycastle.math.ec.ECFieldElement multiply(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        int[] $r1, $r2, $r4;
        org.spongycastle.math.ec.ECFieldElement $r3;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r3 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        $r4 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        r0 = (org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement) $r3;

        $r1 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r4, $r1, $r2);

        r0 = new org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: void <init>(int[])>($r2);

        return r0;
    }
    public org.spongycastle.math.ec.ECFieldElement negate()
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        int[] $r1, $r2;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r1 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        $r2 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void negate(int[],int[])>($r2, $r1);

        r0 = new org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: void <init>(int[])>($r1);

        return r0;
    }
    public org.spongycastle.math.ec.ECFieldElement sqrt()
    {
        int[] r0, $r2, $r3, $r4, $r5, $r6;
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r1;
        boolean $z0;

        r1 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        r0 = r1.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        $z0 = staticinvoke <org.spongycastle.math.raw.Nat224: boolean isZero(int[])>(r0);

        if $z0 != 0 goto label4;

        $z0 = staticinvoke <org.spongycastle.math.raw.Nat224: boolean isOne(int[])>(r0);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r2 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void square(int[],int[])>(r0, $r2);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r2, r0, $r2);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void square(int[],int[])>($r2, $r2);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r2, r0, $r2);

        $r3 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void square(int[],int[])>($r2, $r3);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r3, r0, $r3);

        $r4 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void squareN(int[],int,int[])>($r3, 4, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r4, $r3, $r4);

        $r5 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void squareN(int[],int,int[])>($r4, 3, $r5);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r5, $r2, $r5);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void squareN(int[],int,int[])>($r5, 8, $r5);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r5, $r4, $r5);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void squareN(int[],int,int[])>($r5, 4, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r4, $r3, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void squareN(int[],int,int[])>($r4, 19, $r3);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r3, $r5, $r3);

        $r6 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void squareN(int[],int,int[])>($r3, 42, $r6);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r6, $r3, $r6);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void squareN(int[],int,int[])>($r6, 23, $r3);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r3, $r4, $r3);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void squareN(int[],int,int[])>($r3, 84, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r4, $r6, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void squareN(int[],int,int[])>($r4, 20, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r4, $r5, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void squareN(int[],int,int[])>($r4, 3, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r4, r0, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void squareN(int[],int,int[])>($r4, 2, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r4, r0, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void squareN(int[],int,int[])>($r4, 4, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r4, $r2, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void square(int[],int[])>($r4, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void square(int[],int[])>($r4, $r6);

        $z0 = staticinvoke <org.spongycastle.math.raw.Nat224: boolean eq(int[],int[])>(r0, $r6);

        if $z0 == 0 goto label2;

        r1 = new org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        specialinvoke r1.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: void <init>(int[])>($r4);

        return r1;

     label2:
        $r2 = <org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] PRECOMP_POW2>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void multiply(int[],int[],int[])>($r4, $r2, $r4);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void square(int[],int[])>($r4, $r6);

        $z0 = staticinvoke <org.spongycastle.math.raw.Nat224: boolean eq(int[],int[])>(r0, $r6);

        if $z0 == 0 goto label3;

        r1 = new org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        specialinvoke r1.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: void <init>(int[])>($r4);

        return r1;

     label3:
        return null;

     label4:
        return r1;
    }
    public org.spongycastle.math.ec.ECFieldElement square()
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        int[] $r1, $r2;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r1 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        $r2 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void square(int[],int[])>($r2, $r1);

        r0 = new org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: void <init>(int[])>($r1);

        return r0;
    }
    public org.spongycastle.math.ec.ECFieldElement subtract(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        int[] $r1, $r2, $r4;
        org.spongycastle.math.ec.ECFieldElement $r3;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r3 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 = staticinvoke <org.spongycastle.math.raw.Nat224: int[] create()>();

        $r4 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        r0 = (org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement) $r3;

        $r1 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP224K1Field: void subtract(int[],int[],int[])>($r4, $r1, $r2);

        r0 = new org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: void <init>(int[])>($r2);

        return r0;
    }
    public boolean testBitZero()
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        int $i0;
        int[] $r1;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r1 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        $i0 = staticinvoke <org.spongycastle.math.raw.Nat224: int getBit(int[],int)>($r1, 0);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.math.BigInteger toBigInteger()
    {
        org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement r0;
        java.math.BigInteger $r1;
        int[] $r2;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement;

        $r2 = r0.<org.spongycastle.math.ec.custom.sec.SecP224K1FieldElement: int[] x>;

        $r1 = staticinvoke <org.spongycastle.math.raw.Nat224: java.math.BigInteger toBigInteger(int[])>($r2);

        return $r1;
    }
