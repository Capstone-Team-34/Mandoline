org.spongycastle.math.ec.custom.sec.SecP160R1Curve extends org.spongycastle.math.ec.ECCurve$AbstractFp
private static final int SecP160R1_DEFAULT_COORDS
public static final java.math.BigInteger q
protected org.spongycastle.math.ec.custom.sec.SecP160R1Point infinity
    static void <clinit>()
    {
        java.math.BigInteger $r0;
        byte[] $r1;

        $r0 = new java.math.BigInteger;

        $r1 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] decode(java.lang.String)>("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF");

        specialinvoke $r0.<java.math.BigInteger: void <init>(int,byte[])>(1, $r1);

        <org.spongycastle.math.ec.custom.sec.SecP160R1Curve: java.math.BigInteger q> = $r0;

        return;
    }
    public void <init>()
    {
        org.spongycastle.math.ec.custom.sec.SecP160R1Curve r0;
        java.math.BigInteger $r1;
        org.spongycastle.math.ec.custom.sec.SecP160R1Point $r2;
        byte[] $r3;
        org.spongycastle.math.ec.ECFieldElement $r4;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP160R1Curve;

        $r1 = <org.spongycastle.math.ec.custom.sec.SecP160R1Curve: java.math.BigInteger q>;

        specialinvoke r0.<org.spongycastle.math.ec.ECCurve$AbstractFp: void <init>(java.math.BigInteger)>($r1);

        $r2 = new org.spongycastle.math.ec.custom.sec.SecP160R1Point;

        specialinvoke $r2.<org.spongycastle.math.ec.custom.sec.SecP160R1Point: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>(r0, null, null);

        r0.<org.spongycastle.math.ec.custom.sec.SecP160R1Curve: org.spongycastle.math.ec.custom.sec.SecP160R1Point infinity> = $r2;

        $r1 = new java.math.BigInteger;

        $r3 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] decode(java.lang.String)>("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC");

        specialinvoke $r1.<java.math.BigInteger: void <init>(int,byte[])>(1, $r3);

        $r4 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP160R1Curve: org.spongycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)>($r1);

        r0.<org.spongycastle.math.ec.custom.sec.SecP160R1Curve: org.spongycastle.math.ec.ECFieldElement a> = $r4;

        $r1 = new java.math.BigInteger;

        $r3 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] decode(java.lang.String)>("1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45");

        specialinvoke $r1.<java.math.BigInteger: void <init>(int,byte[])>(1, $r3);

        $r4 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP160R1Curve: org.spongycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)>($r1);

        r0.<org.spongycastle.math.ec.custom.sec.SecP160R1Curve: org.spongycastle.math.ec.ECFieldElement b> = $r4;

        $r1 = new java.math.BigInteger;

        $r3 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] decode(java.lang.String)>("0100000000000000000001F4C8F927AED3CA752257");

        specialinvoke $r1.<java.math.BigInteger: void <init>(int,byte[])>(1, $r3);

        r0.<org.spongycastle.math.ec.custom.sec.SecP160R1Curve: java.math.BigInteger order> = $r1;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        r0.<org.spongycastle.math.ec.custom.sec.SecP160R1Curve: java.math.BigInteger cofactor> = $r1;

        r0.<org.spongycastle.math.ec.custom.sec.SecP160R1Curve: int coord> = 2;

        return;
    }
    protected org.spongycastle.math.ec.ECCurve cloneCurve()
    {
        org.spongycastle.math.ec.custom.sec.SecP160R1Curve r0;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP160R1Curve;

        r0 = new org.spongycastle.math.ec.custom.sec.SecP160R1Curve;

        specialinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP160R1Curve: void <init>()>();

        return r0;
    }
    protected org.spongycastle.math.ec.ECPoint createRawPoint(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, boolean)
    {
        org.spongycastle.math.ec.custom.sec.SecP160R1Curve r0;
        org.spongycastle.math.ec.ECFieldElement $r1, $r2;
        boolean $z0;
        org.spongycastle.math.ec.custom.sec.SecP160R1Point $r3;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP160R1Curve;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $z0 := @parameter2: boolean;

        $r3 = new org.spongycastle.math.ec.custom.sec.SecP160R1Point;

        specialinvoke $r3.<org.spongycastle.math.ec.custom.sec.SecP160R1Point: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>(r0, $r1, $r2, $z0);

        return $r3;
    }
    protected org.spongycastle.math.ec.ECPoint createRawPoint(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement[], boolean)
    {
        org.spongycastle.math.ec.custom.sec.SecP160R1Curve r0;
        org.spongycastle.math.ec.ECFieldElement $r1, $r2;
        org.spongycastle.math.ec.ECFieldElement[] $r3;
        boolean $z0;
        org.spongycastle.math.ec.custom.sec.SecP160R1Point $r4;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP160R1Curve;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement[];

        $z0 := @parameter3: boolean;

        $r4 = new org.spongycastle.math.ec.custom.sec.SecP160R1Point;

        specialinvoke $r4.<org.spongycastle.math.ec.custom.sec.SecP160R1Point: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>(r0, $r1, $r2, $r3, $z0);

        return $r4;
    }
    public org.spongycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger)
    {
        org.spongycastle.math.ec.custom.sec.SecP160R1Curve r0;
        java.math.BigInteger $r1;
        org.spongycastle.math.ec.custom.sec.SecP160R1FieldElement $r2;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP160R1Curve;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 = new org.spongycastle.math.ec.custom.sec.SecP160R1FieldElement;

        specialinvoke $r2.<org.spongycastle.math.ec.custom.sec.SecP160R1FieldElement: void <init>(java.math.BigInteger)>($r1);

        return $r2;
    }
    public int getFieldSize()
    {
        org.spongycastle.math.ec.custom.sec.SecP160R1Curve r0;
        int $i0;
        java.math.BigInteger $r1;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP160R1Curve;

        $r1 = <org.spongycastle.math.ec.custom.sec.SecP160R1Curve: java.math.BigInteger q>;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        return $i0;
    }
    public org.spongycastle.math.ec.ECPoint getInfinity()
    {
        org.spongycastle.math.ec.custom.sec.SecP160R1Curve r0;
        org.spongycastle.math.ec.custom.sec.SecP160R1Point r1;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP160R1Curve;

        r1 = r0.<org.spongycastle.math.ec.custom.sec.SecP160R1Curve: org.spongycastle.math.ec.custom.sec.SecP160R1Point infinity>;

        return r1;
    }
    public java.math.BigInteger getQ()
    {
        org.spongycastle.math.ec.custom.sec.SecP160R1Curve r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP160R1Curve;

        r1 = <org.spongycastle.math.ec.custom.sec.SecP160R1Curve: java.math.BigInteger q>;

        return r1;
    }
    public boolean supportsCoordinateSystem(int)
    {
        org.spongycastle.math.ec.custom.sec.SecP160R1Curve r0;
        int $i0;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP160R1Curve;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }
