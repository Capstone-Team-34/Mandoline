org.spongycastle.math.ec.custom.sec.SecP521R1Point extends org.spongycastle.math.ec.ECPoint$AbstractFp
    public void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECFieldElement $r2, $r3;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        specialinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,boolean)>($r1, $r2, $r3, 0);

        return;
    }
    public void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, boolean)
    {
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECFieldElement $r2, $r3;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        $z0 := @parameter3: boolean;

        $z1 = 1;

        specialinvoke r0.<org.spongycastle.math.ec.ECPoint$AbstractFp: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>($r1, $r2, $r3);

        if $r2 != null goto label3;

        $z2 = 1;

     label1:
        if $r3 != null goto label4;

     label2:
        if $z2 == $z1 goto label5;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Exactly one of the field elements is null");

        throw $r4;

     label3:
        $z2 = 0;

        goto label1;

     label4:
        $z1 = 0;

        goto label2;

     label5:
        r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: boolean withCompression> = $z0;

        return;
    }
    void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement[], boolean)
    {
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECFieldElement $r2, $r3;
        org.spongycastle.math.ec.ECFieldElement[] $r4;
        boolean $z0;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        $r4 := @parameter3: org.spongycastle.math.ec.ECFieldElement[];

        $z0 := @parameter4: boolean;

        specialinvoke r0.<org.spongycastle.math.ec.ECPoint$AbstractFp: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[])>($r1, $r2, $r3, $r4);

        r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: boolean withCompression> = $z0;

        return;
    }
    public org.spongycastle.math.ec.ECPoint add(org.spongycastle.math.ec.ECPoint)
    {
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r0, $r21;
        org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement r1, r2, r4, r8, r10, r11;
        java.lang.Object[] r3;
        org.spongycastle.math.ec.ECPoint r5;
        boolean $z0, $z1, $z2;
        org.spongycastle.math.ec.ECCurve $r6;
        org.spongycastle.math.ec.ECFieldElement $r7;
        org.spongycastle.math.ec.ECFieldElement[] $r9;
        int[] $r12, $r13, $r14, $r15, r16, r17, r18, r19, $r20;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        r5 := @parameter0: org.spongycastle.math.ec.ECPoint;

        $z0 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: boolean isInfinity()>();

        if $z0 == 0 goto label01;

        return r5;

     label01:
        $z0 = virtualinvoke r5.<org.spongycastle.math.ec.ECPoint: boolean isInfinity()>();

        if $z0 == 0 goto label02;

        return r0;

     label02:
        if r0 != r5 goto label03;

        r5 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECPoint twice()>();

        return r5;

     label03:
        $r6 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r7 = r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement x>;

        r1 = (org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement) $r7;

        $r7 = r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement y>;

        r2 = (org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement) $r7;

        $r7 = virtualinvoke r5.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getXCoord()>();

        r4 = (org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement) $r7;

        $r7 = virtualinvoke r5.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getYCoord()>();

        r8 = (org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement) $r7;

        $r9 = r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement[] zs>;

        $r7 = $r9[0];

        r10 = (org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement) $r7;

        $r7 = virtualinvoke r5.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECFieldElement getZCoord(int)>(0);

        r11 = (org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement) $r7;

        $r12 = staticinvoke <org.spongycastle.math.raw.Nat: int[] create(int)>(17);

        $r13 = staticinvoke <org.spongycastle.math.raw.Nat: int[] create(int)>(17);

        $r14 = staticinvoke <org.spongycastle.math.raw.Nat: int[] create(int)>(17);

        $r15 = staticinvoke <org.spongycastle.math.raw.Nat: int[] create(int)>(17);

        $z0 = virtualinvoke r10.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: boolean isOne()>();

        if $z0 == 0 goto label06;

        r16 = r4.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        r17 = r8.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

     label04:
        $z1 = virtualinvoke r11.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: boolean isOne()>();

        if $z1 == 0 goto label07;

        r18 = r1.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        r19 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

     label05:
        $r20 = staticinvoke <org.spongycastle.math.raw.Nat: int[] create(int)>(17);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void subtract(int[],int[],int[])>(r18, r16, $r20);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void subtract(int[],int[],int[])>(r19, r17, $r13);

        $z2 = staticinvoke <org.spongycastle.math.raw.Nat: boolean isZero(int,int[])>(17, $r20);

        if $z2 == 0 goto label09;

        $z0 = staticinvoke <org.spongycastle.math.raw.Nat: boolean isZero(int,int[])>(17, $r13);

        if $z0 == 0 goto label08;

        r5 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECPoint twice()>();

        return r5;

     label06:
        r17 = $r14;

        $r20 = r10.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void square(int[],int[])>($r20, $r14);

        r16 = $r13;

        $r20 = r4.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r14, $r20, $r13);

        $r20 = r10.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r14, $r20, $r14);

        $r20 = r8.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r14, $r20, $r14);

        goto label04;

     label07:
        r19 = $r15;

        $r20 = r11.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void square(int[],int[])>($r20, $r15);

        r18 = $r12;

        $r20 = r1.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r15, $r20, $r12);

        $r20 = r11.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r15, $r20, $r15);

        $r20 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r15, $r20, $r15);

        goto label05;

     label08:
        r5 = virtualinvoke $r6.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint getInfinity()>();

        return r5;

     label09:
        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void square(int[],int[])>($r20, $r14);

        r17 = staticinvoke <org.spongycastle.math.raw.Nat: int[] create(int)>(17);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r14, $r20, r17);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r14, r18, $r14);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>(r19, r17, $r12);

        r2 = new org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement;

        r1 = r2;

        specialinvoke r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: void <init>(int[])>($r15);

        $r15 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void square(int[],int[])>($r13, $r15);

        $r15 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        r16 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void add(int[],int[],int[])>($r15, r17, r16);

        $r15 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        r16 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void subtract(int[],int[],int[])>($r15, $r14, r16);

        $r15 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        r16 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void subtract(int[],int[],int[])>($r15, $r14, r16);

        r4 = new org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement;

        r2 = r4;

        specialinvoke r4.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: void <init>(int[])>(r17);

        $r15 = r1.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        r17 = r4.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void subtract(int[],int[],int[])>($r14, $r15, r17);

        $r14 = r4.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r14, $r13, $r13);

        $r14 = r4.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void subtract(int[],int[],int[])>($r13, $r12, $r14);

        r8 = new org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement;

        r4 = r8;

        specialinvoke r8.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: void <init>(int[])>($r20);

        if $z0 != 0 goto label10;

        $r12 = r8.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        $r13 = r10.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        $r14 = r8.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r12, $r13, $r14);

     label10:
        if $z1 != 0 goto label11;

        $r12 = r4.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        $r13 = r11.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        $r14 = r4.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r12, $r13, $r14);

     label11:
        r3 = newarray (org.spongycastle.math.ec.ECFieldElement)[1];

        r3[0] = r4;

        $r21 = new org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $z0 = r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: boolean withCompression>;

        $r9 = (org.spongycastle.math.ec.ECFieldElement[]) r3;

        specialinvoke $r21.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>($r6, r1, r2, $r9, $z0);

        return $r21;
    }
    protected org.spongycastle.math.ec.ECPoint detach()
    {
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r0, $r1;
        org.spongycastle.math.ec.ECFieldElement $r2, $r3;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $r1 = new org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $r2 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement getAffineXCoord()>();

        $r3 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement getAffineYCoord()>();

        specialinvoke $r1.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement)>(null, $r2, $r3);

        return $r1;
    }
    protected org.spongycastle.math.ec.ECFieldElement doubleProductFromSquares(org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement, org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r0;
        org.spongycastle.math.ec.ECFieldElement $r1, $r2, $r3, $r4;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 := @parameter1: org.spongycastle.math.ec.ECFieldElement;

        $r3 := @parameter2: org.spongycastle.math.ec.ECFieldElement;

        $r4 := @parameter3: org.spongycastle.math.ec.ECFieldElement;

        $r1 = virtualinvoke $r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r2);

        $r1 = virtualinvoke $r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement square()>();

        $r1 = virtualinvoke $r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement subtract(org.spongycastle.math.ec.ECFieldElement)>($r3);

        $r1 = virtualinvoke $r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement subtract(org.spongycastle.math.ec.ECFieldElement)>($r4);

        return $r1;
    }
    protected org.spongycastle.math.ec.ECFieldElement eight(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r0;
        org.spongycastle.math.ec.ECFieldElement $r1;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement two(org.spongycastle.math.ec.ECFieldElement)>($r1);

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement four(org.spongycastle.math.ec.ECFieldElement)>($r1);

        return $r1;
    }
    protected org.spongycastle.math.ec.ECFieldElement four(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r0;
        org.spongycastle.math.ec.ECFieldElement $r1;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement two(org.spongycastle.math.ec.ECFieldElement)>($r1);

        $r1 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement two(org.spongycastle.math.ec.ECFieldElement)>($r1);

        return $r1;
    }
    public org.spongycastle.math.ec.ECPoint negate()
    {
        org.spongycastle.math.ec.ECCurve $r0;
        org.spongycastle.math.ec.ECFieldElement $r1, $r5;
        org.spongycastle.math.ec.ECFieldElement[] $r2;
        boolean $z0;
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r3, $r4;

        r3 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $z0 = virtualinvoke r3.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        return r3;

     label1:
        $r4 = new org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $r0 = r3.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECCurve curve>;

        $r1 = r3.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement x>;

        $r5 = r3.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement y>;

        $r5 = virtualinvoke $r5.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement negate()>();

        $r2 = r3.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement[] zs>;

        $z0 = r3.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: boolean withCompression>;

        specialinvoke $r4.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>($r0, $r1, $r5, $r2, $z0);

        return $r4;
    }
    protected org.spongycastle.math.ec.ECFieldElement three(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r0;
        org.spongycastle.math.ec.ECFieldElement $r1, $r2;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r2 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement two(org.spongycastle.math.ec.ECFieldElement)>($r1);

        $r1 = virtualinvoke $r2.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r1);

        return $r1;
    }
    public org.spongycastle.math.ec.ECPoint threeTimes()
    {
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r0;
        boolean $z0;
        org.spongycastle.math.ec.ECFieldElement $r1;
        org.spongycastle.math.ec.ECPoint $r2;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $z0 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: boolean isInfinity()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement y>;

        $z0 = virtualinvoke $r1.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r2 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECPoint twice()>();

        $r2 = virtualinvoke $r2.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint add(org.spongycastle.math.ec.ECPoint)>(r0);

        return $r2;

     label2:
        return r0;
    }
    public org.spongycastle.math.ec.ECPoint twice()
    {
        org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement r0, r1, r2, r6, r9, $r17;
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r3, $r18;
        boolean $z0;
        org.spongycastle.math.ec.ECCurve $r4;
        org.spongycastle.math.ec.ECFieldElement r5;
        org.spongycastle.math.ec.ECPoint $r7;
        org.spongycastle.math.ec.ECFieldElement[] $r8;
        int[] $r10, $r11, $r12, $r13, r14, $r15;
        java.lang.Object[] $r16;

        r3 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $z0 = virtualinvoke r3.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: boolean isInfinity()>();

        if $z0 == 0 goto label1;

        return r3;

     label1:
        $r4 = virtualinvoke r3.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECCurve getCurve()>();

        r5 = r3.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement y>;

        r6 = (org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement) r5;

        $z0 = virtualinvoke r6.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: boolean isZero()>();

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke $r4.<org.spongycastle.math.ec.ECCurve: org.spongycastle.math.ec.ECPoint getInfinity()>();

        return $r7;

     label2:
        r5 = r3.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement x>;

        r0 = (org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement) r5;

        $r8 = r3.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement[] zs>;

        r5 = $r8[0];

        r9 = (org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement) r5;

        $r10 = staticinvoke <org.spongycastle.math.raw.Nat: int[] create(int)>(17);

        $r11 = staticinvoke <org.spongycastle.math.raw.Nat: int[] create(int)>(17);

        $r12 = staticinvoke <org.spongycastle.math.raw.Nat: int[] create(int)>(17);

        $r13 = r6.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void square(int[],int[])>($r13, $r12);

        $r13 = staticinvoke <org.spongycastle.math.raw.Nat: int[] create(int)>(17);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void square(int[],int[])>($r12, $r13);

        $z0 = virtualinvoke r9.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: boolean isOne()>();

        r14 = r9.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        if $z0 != 0 goto label3;

        r14 = $r11;

        $r15 = r9.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void square(int[],int[])>($r15, $r11);

     label3:
        $r15 = r0.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void subtract(int[],int[],int[])>($r15, r14, $r10);

        $r15 = r0.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void add(int[],int[],int[])>($r15, r14, $r11);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r11, $r10, $r11);

        staticinvoke <org.spongycastle.math.raw.Nat: int addBothTo(int,int[],int[],int[])>(17, $r11, $r11, $r11);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void reduce23(int[])>($r11);

        r14 = r0.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r12, r14, $r12);

        staticinvoke <org.spongycastle.math.raw.Nat: int shiftUpBits(int,int[],int,int)>(17, $r12, 2, 0);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void reduce23(int[])>($r12);

        staticinvoke <org.spongycastle.math.raw.Nat: int shiftUpBits(int,int[],int,int,int[])>(17, $r13, 3, 0, $r10);

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void reduce23(int[])>($r10);

        r1 = new org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement;

        r0 = r1;

        specialinvoke r1.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: void <init>(int[])>($r13);

        $r13 = r1.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void square(int[],int[])>($r11, $r13);

        $r13 = r1.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        r14 = r1.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void subtract(int[],int[],int[])>($r13, $r12, r14);

        $r13 = r1.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        r14 = r1.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void subtract(int[],int[],int[])>($r13, $r12, r14);

        r2 = new org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement;

        r1 = r2;

        specialinvoke r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: void <init>(int[])>($r12);

        $r13 = r0.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        r14 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void subtract(int[],int[],int[])>($r12, $r13, r14);

        $r12 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        $r13 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r12, $r11, $r13);

        $r12 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        $r13 = r2.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void subtract(int[],int[],int[])>($r12, $r10, $r13);

        $r17 = new org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement;

        specialinvoke $r17.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: void <init>(int[])>($r11);

        $r10 = r6.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        $r11 = $r17.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void twice(int[],int[])>($r10, $r11);

        if $z0 != 0 goto label4;

        $r10 = $r17.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        $r11 = r9.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        $r12 = $r17.<org.spongycastle.math.ec.custom.sec.SecP521R1FieldElement: int[] x>;

        staticinvoke <org.spongycastle.math.ec.custom.sec.SecP521R1Field: void multiply(int[],int[],int[])>($r10, $r11, $r12);

     label4:
        $r18 = new org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $r16 = newarray (org.spongycastle.math.ec.ECFieldElement)[1];

        $r16[0] = $r17;

        $z0 = r3.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: boolean withCompression>;

        $r8 = (org.spongycastle.math.ec.ECFieldElement[]) $r16;

        specialinvoke $r18.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement,org.spongycastle.math.ec.ECFieldElement[],boolean)>($r4, r0, r1, $r8, $z0);

        return $r18;
    }
    public org.spongycastle.math.ec.ECPoint twicePlus(org.spongycastle.math.ec.ECPoint)
    {
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r0;
        org.spongycastle.math.ec.ECFieldElement r1;
        org.spongycastle.math.ec.ECPoint r2, $r3;
        boolean $z0;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        r2 := @parameter0: org.spongycastle.math.ec.ECPoint;

        if r0 != r2 goto label1;

        r2 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECPoint threeTimes()>();

        return r2;

     label1:
        $z0 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: boolean isInfinity()>();

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r2.<org.spongycastle.math.ec.ECPoint: boolean isInfinity()>();

        if $z0 == 0 goto label2;

        r2 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECPoint twice()>();

        return r2;

     label2:
        r1 = r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECFieldElement y>;

        $z0 = virtualinvoke r1.<org.spongycastle.math.ec.ECFieldElement: boolean isZero()>();

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke r0.<org.spongycastle.math.ec.custom.sec.SecP521R1Point: org.spongycastle.math.ec.ECPoint twice()>();

        r2 = virtualinvoke $r3.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint add(org.spongycastle.math.ec.ECPoint)>(r2);

     label3:
        return r2;
    }
    protected org.spongycastle.math.ec.ECFieldElement two(org.spongycastle.math.ec.ECFieldElement)
    {
        org.spongycastle.math.ec.custom.sec.SecP521R1Point r0;
        org.spongycastle.math.ec.ECFieldElement $r1;

        r0 := @this: org.spongycastle.math.ec.custom.sec.SecP521R1Point;

        $r1 := @parameter0: org.spongycastle.math.ec.ECFieldElement;

        $r1 = virtualinvoke $r1.<org.spongycastle.math.ec.ECFieldElement: org.spongycastle.math.ec.ECFieldElement add(org.spongycastle.math.ec.ECFieldElement)>($r1);

        return $r1;
    }
