org.spongycastle.crypto.examples.DESExample extends java.lang.Object
private org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher cipher
private boolean encrypt
private java.io.BufferedInputStream in
private byte[] key
private java.io.BufferedOutputStream out
    public void <init>()
    {
        org.spongycastle.crypto.examples.DESExample r0;

        r0 := @this: org.spongycastle.crypto.examples.DESExample;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.examples.DESExample: boolean encrypt> = 1;

        r0.<org.spongycastle.crypto.examples.DESExample: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher cipher> = null;

        r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedInputStream in> = null;

        r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out> = null;

        r0.<org.spongycastle.crypto.examples.DESExample: byte[] key> = null;

        return;
    }
    public void <init>(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        org.spongycastle.crypto.examples.DESExample r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        java.io.IOException r4, r17, r19;
        org.spongycastle.crypto.generators.DESedeKeyGenerator r5;
        org.spongycastle.crypto.KeyGenerationParameters r6;
        java.security.SecureRandom r7, r12;
        java.io.BufferedInputStream $r8;
        java.io.FileInputStream $r9;
        java.io.BufferedOutputStream $r10;
        java.io.FileOutputStream $r11;
        byte[] $r13;
        int $i0;
        java.io.FileNotFoundException r14;
        java.io.PrintStream $r15;
        java.lang.StringBuilder $r16;
        java.lang.Exception r18, r20;

        r0 := @this: org.spongycastle.crypto.examples.DESExample;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.examples.DESExample: boolean encrypt> = 1;

        r0.<org.spongycastle.crypto.examples.DESExample: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher cipher> = null;

        r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedInputStream in> = null;

        r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out> = null;

        r0.<org.spongycastle.crypto.examples.DESExample: byte[] key> = null;

        r0.<org.spongycastle.crypto.examples.DESExample: boolean encrypt> = $z0;

        $r8 = new java.io.BufferedInputStream;

        $r9 = new java.io.FileInputStream;

     label01:
        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.lang.String)>($r1);

        specialinvoke $r8.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r9);

     label02:
        r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedInputStream in> = $r8;

     label03:
        $r10 = new java.io.BufferedOutputStream;

        $r11 = new java.io.FileOutputStream;

     label04:
        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.lang.String)>($r2);

        specialinvoke $r10.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r11);

     label05:
        r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out> = $r10;

     label06:
        if $z0 == 0 goto label29;

        r12 = null;

        r7 = new java.security.SecureRandom;

     label07:
        specialinvoke r7.<java.security.SecureRandom: void <init>()>();

     label08:
        $r1 = "www.bouncycastle.org";

     label09:
        $r13 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r7.<java.security.SecureRandom: void setSeed(byte[])>($r13);

     label10:
        r12 = r7;

     label11:
        r6 = new org.spongycastle.crypto.KeyGenerationParameters;

     label12:
        specialinvoke r6.<org.spongycastle.crypto.KeyGenerationParameters: void <init>(java.security.SecureRandom,int)>(r12, 192);

     label13:
        r5 = new org.spongycastle.crypto.generators.DESedeKeyGenerator;

     label14:
        specialinvoke r5.<org.spongycastle.crypto.generators.DESedeKeyGenerator: void <init>()>();

        virtualinvoke r5.<org.spongycastle.crypto.generators.DESedeKeyGenerator: void init(org.spongycastle.crypto.KeyGenerationParameters)>(r6);

        $r13 = virtualinvoke r5.<org.spongycastle.crypto.generators.DESedeKeyGenerator: byte[] generateKey()>();

     label15:
        r0.<org.spongycastle.crypto.examples.DESExample: byte[] key> = $r13;

        $r10 = new java.io.BufferedOutputStream;

        $r11 = new java.io.FileOutputStream;

     label16:
        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.lang.String)>($r3);

        specialinvoke $r10.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r11);

     label17:
        $r13 = r0.<org.spongycastle.crypto.examples.DESExample: byte[] key>;

     label18:
        $r13 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[])>($r13);

     label19:
        $i0 = lengthof $r13;

     label20:
        virtualinvoke $r10.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r13, 0, $i0);

        virtualinvoke $r10.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke $r10.<java.io.BufferedOutputStream: void close()>();

     label21:
        return;

     label22:
        r14 := @caughtexception;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input file not found [");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r1);

        staticinvoke <java.lang.System: void exit(int)>(1);

        goto label03;

     label23:
        r17 := @caughtexception;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Output file not created [");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r1);

        staticinvoke <java.lang.System: void exit(int)>(1);

        goto label06;

     label24:
        r18 := @caughtexception;

     label25:
        $r15 = <java.lang.System: java.io.PrintStream err>;

     label26:
        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Hmmm, no SHA1PRNG, you need the Sun implementation");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label27:
        goto label11;

     label28:
        r19 := @caughtexception;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not decryption create key file [");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r1);

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;

     label29:
        $r8 = new java.io.BufferedInputStream;

        $r9 = new java.io.FileInputStream;

     label30:
        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.lang.String)>($r3);

        specialinvoke $r8.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r9);

        $i0 = virtualinvoke $r8.<java.io.BufferedInputStream: int available()>();

     label31:
        $r13 = newarray (byte)[$i0];

     label32:
        virtualinvoke $r8.<java.io.BufferedInputStream: int read(byte[],int,int)>($r13, 0, $i0);

        $r13 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] decode(byte[])>($r13);

     label33:
        r0.<org.spongycastle.crypto.examples.DESExample: byte[] key> = $r13;

        return;

     label34:
        r4 := @caughtexception;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decryption key file not found, or not valid [");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r1);

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;

     label35:
        r20 := @caughtexception;

        r12 = r7;

        goto label25;

        catch java.io.FileNotFoundException from label01 to label02 with label22;
        catch java.io.IOException from label04 to label05 with label23;
        catch java.lang.Exception from label07 to label08 with label24;
        catch java.lang.Exception from label09 to label10 with label35;
        catch java.io.IOException from label12 to label13 with label28;
        catch java.io.IOException from label14 to label15 with label28;
        catch java.io.IOException from label16 to label17 with label28;
        catch java.io.IOException from label18 to label19 with label28;
        catch java.io.IOException from label20 to label21 with label28;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.io.IOException from label30 to label31 with label34;
        catch java.io.IOException from label32 to label33 with label34;
    }
    public static void main(java.lang.String[])
    {
        java.lang.String[] $r0;
        boolean z0;
        int $i0;
        org.spongycastle.crypto.examples.DESExample r1;
        java.io.PrintStream $r2;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r5, r6, r7;

        $r0 := @parameter0: java.lang.String[];

        z0 = 1;

        $i0 = lengthof $r0;

        if $i0 >= 2 goto label1;

        r1 = new org.spongycastle.crypto.examples.DESExample;

        specialinvoke r1.<org.spongycastle.crypto.examples.DESExample: void <init>()>();

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Usage: java ");

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" infile outfile [keyfile]");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label1:
        $r5 = "deskey.dat";

        r6 = $r0[0];

        r7 = $r0[1];

        $i0 = lengthof $r0;

        if $i0 <= 2 goto label2;

        z0 = 0;

        $r5 = $r0[2];

     label2:
        r1 = new org.spongycastle.crypto.examples.DESExample;

        specialinvoke r1.<org.spongycastle.crypto.examples.DESExample: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>(r6, r7, $r5, z0);

        specialinvoke r1.<org.spongycastle.crypto.examples.DESExample: void process()>();

        return;
    }
    private void performDecrypt(byte[])
    {
        org.spongycastle.crypto.examples.DESExample r0;
        byte[] $r1, $r9;
        java.io.BufferedReader r2;
        java.io.IOException r3;
        org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher $r4;
        org.spongycastle.crypto.params.KeyParameter $r5;
        java.io.InputStreamReader $r6;
        java.io.BufferedInputStream $r7;
        java.lang.String $r8;
        int $i0;
        java.io.BufferedOutputStream $r10;
        org.spongycastle.crypto.CryptoException $r11;

        r0 := @this: org.spongycastle.crypto.examples.DESExample;

        $r1 := @parameter0: byte[];

        $r4 = r0.<org.spongycastle.crypto.examples.DESExample: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

        $r5 = new org.spongycastle.crypto.params.KeyParameter;

        specialinvoke $r5.<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[])>($r1);

        virtualinvoke $r4.<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(0, $r5);

        r2 = new java.io.BufferedReader;

        $r6 = new java.io.InputStreamReader;

        $r7 = r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedInputStream in>;

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r7);

        specialinvoke r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

        $r1 = null;

     label01:
        $r8 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label02:
        if $r8 == null goto label12;

     label03:
        $r9 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] decode(java.lang.String)>($r8);

     label04:
        $r4 = r0.<org.spongycastle.crypto.examples.DESExample: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

        $i0 = lengthof $r9;

     label05:
        $i0 = virtualinvoke $r4.<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int getOutputSize(int)>($i0);

     label06:
        $r1 = newarray (byte)[$i0];

        $r4 = r0.<org.spongycastle.crypto.examples.DESExample: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

        $i0 = lengthof $r9;

     label07:
        $i0 = virtualinvoke $r4.<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r9, 0, $i0, $r1, 0);

     label08:
        if $i0 <= 0 goto label01;

        $r10 = r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

     label09:
        virtualinvoke $r10.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r1, 0, $i0);

     label10:
        goto label01;

     label11:
        r3 := @caughtexception;

        virtualinvoke r3.<java.io.IOException: void printStackTrace()>();

        return;

     label12:
        $r4 = r0.<org.spongycastle.crypto.examples.DESExample: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

     label13:
        $i0 = virtualinvoke $r4.<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int doFinal(byte[],int)>($r1, 0);

     label14:
        if $i0 <= 0 goto label18;

        $r10 = r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

     label15:
        virtualinvoke $r10.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r1, 0, $i0);

     label16:
        return;

     label17:
        $r11 := @caughtexception;

     label18:
        return;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
        catch org.spongycastle.crypto.CryptoException from label13 to label14 with label17;
        catch org.spongycastle.crypto.CryptoException from label15 to label16 with label17;
        catch java.io.IOException from label13 to label14 with label11;
        catch java.io.IOException from label15 to label16 with label11;
    }
    private void performEncrypt(byte[])
    {
        org.spongycastle.crypto.examples.DESExample r0;
        byte[] $r1, r2, $r7;
        java.io.IOException r3;
        org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher $r4;
        org.spongycastle.crypto.params.KeyParameter $r5;
        int $i0;
        java.io.BufferedInputStream $r6;
        java.io.BufferedOutputStream $r8;
        org.spongycastle.crypto.CryptoException $r9;

        r0 := @this: org.spongycastle.crypto.examples.DESExample;

        $r1 := @parameter0: byte[];

        $r4 = r0.<org.spongycastle.crypto.examples.DESExample: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

        $r5 = new org.spongycastle.crypto.params.KeyParameter;

        specialinvoke $r5.<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[])>($r1);

        virtualinvoke $r4.<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, $r5);

        $r4 = r0.<org.spongycastle.crypto.examples.DESExample: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

        $i0 = virtualinvoke $r4.<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int getOutputSize(int)>(47);

        $r1 = newarray (byte)[47];

        r2 = newarray (byte)[$i0];

     label01:
        $r6 = r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedInputStream in>;

     label02:
        $i0 = virtualinvoke $r6.<java.io.BufferedInputStream: int read(byte[],int,int)>($r1, 0, 47);

     label03:
        if $i0 <= 0 goto label13;

        $r4 = r0.<org.spongycastle.crypto.examples.DESExample: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

     label04:
        $i0 = virtualinvoke $r4.<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r1, 0, $i0, r2, 0);

     label05:
        if $i0 <= 0 goto label01;

     label06:
        $r7 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>(r2, 0, $i0);

     label07:
        $r8 = r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

        $i0 = lengthof $r7;

     label08:
        virtualinvoke $r8.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r7, 0, $i0);

     label09:
        $r8 = r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

     label10:
        virtualinvoke $r8.<java.io.BufferedOutputStream: void write(int)>(10);

     label11:
        goto label01;

     label12:
        r3 := @caughtexception;

        virtualinvoke r3.<java.io.IOException: void printStackTrace()>();

        return;

     label13:
        $r4 = r0.<org.spongycastle.crypto.examples.DESExample: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher cipher>;

     label14:
        $i0 = virtualinvoke $r4.<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int doFinal(byte[],int)>(r2, 0);

     label15:
        if $i0 <= 0 goto label23;

     label16:
        $r1 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[],int,int)>(r2, 0, $i0);

     label17:
        $r8 = r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

        $i0 = lengthof $r1;

     label18:
        virtualinvoke $r8.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r1, 0, $i0);

     label19:
        $r8 = r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

     label20:
        virtualinvoke $r8.<java.io.BufferedOutputStream: void write(int)>(10);

     label21:
        return;

     label22:
        $r9 := @caughtexception;

     label23:
        return;

        catch java.io.IOException from label02 to label03 with label12;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.io.IOException from label10 to label11 with label12;
        catch org.spongycastle.crypto.CryptoException from label14 to label15 with label22;
        catch org.spongycastle.crypto.CryptoException from label16 to label17 with label22;
        catch org.spongycastle.crypto.CryptoException from label18 to label19 with label22;
        catch org.spongycastle.crypto.CryptoException from label20 to label21 with label22;
        catch java.io.IOException from label14 to label15 with label12;
        catch java.io.IOException from label16 to label17 with label12;
        catch java.io.IOException from label18 to label19 with label12;
        catch java.io.IOException from label20 to label21 with label12;
    }
    private void process()
    {
        org.spongycastle.crypto.examples.DESExample r0;
        org.spongycastle.crypto.modes.CBCBlockCipher $r1;
        org.spongycastle.crypto.engines.DESedeEngine $r2;
        org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher $r3;
        boolean $z0;
        byte[] $r4;
        java.io.BufferedInputStream $r5;
        java.io.BufferedOutputStream $r6;
        java.io.IOException $r7;

        r0 := @this: org.spongycastle.crypto.examples.DESExample;

        $r3 = new org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r1 = new org.spongycastle.crypto.modes.CBCBlockCipher;

        $r2 = new org.spongycastle.crypto.engines.DESedeEngine;

        specialinvoke $r2.<org.spongycastle.crypto.engines.DESedeEngine: void <init>()>();

        specialinvoke $r1.<org.spongycastle.crypto.modes.CBCBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>($r2);

        specialinvoke $r3.<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>($r1);

        r0.<org.spongycastle.crypto.examples.DESExample: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher cipher> = $r3;

        $z0 = r0.<org.spongycastle.crypto.examples.DESExample: boolean encrypt>;

        if $z0 == 0 goto label8;

        $r4 = r0.<org.spongycastle.crypto.examples.DESExample: byte[] key>;

        specialinvoke r0.<org.spongycastle.crypto.examples.DESExample: void performEncrypt(byte[])>($r4);

     label1:
        $r5 = r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedInputStream in>;

     label2:
        virtualinvoke $r5.<java.io.BufferedInputStream: void close()>();

     label3:
        $r6 = r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

     label4:
        virtualinvoke $r6.<java.io.BufferedOutputStream: void flush()>();

     label5:
        $r6 = r0.<org.spongycastle.crypto.examples.DESExample: java.io.BufferedOutputStream out>;

     label6:
        virtualinvoke $r6.<java.io.BufferedOutputStream: void close()>();

     label7:
        return;

     label8:
        $r4 = r0.<org.spongycastle.crypto.examples.DESExample: byte[] key>;

        specialinvoke r0.<org.spongycastle.crypto.examples.DESExample: void performDecrypt(byte[])>($r4);

        goto label1;

     label9:
        $r7 := @caughtexception;

        return;

        catch java.io.IOException from label2 to label3 with label9;
        catch java.io.IOException from label4 to label5 with label9;
        catch java.io.IOException from label6 to label7 with label9;
    }
