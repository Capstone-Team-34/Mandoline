org.spongycastle.crypto.parsers.DHIESPublicKeyParser extends java.lang.Object implements org.spongycastle.crypto.KeyParser
private org.spongycastle.crypto.params.DHParameters dhParams
    public void <init>(org.spongycastle.crypto.params.DHParameters)
    {
        org.spongycastle.crypto.parsers.DHIESPublicKeyParser r0;
        org.spongycastle.crypto.params.DHParameters $r1;

        r0 := @this: org.spongycastle.crypto.parsers.DHIESPublicKeyParser;

        $r1 := @parameter0: org.spongycastle.crypto.params.DHParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.parsers.DHIESPublicKeyParser: org.spongycastle.crypto.params.DHParameters dhParams> = $r1;

        return;
    }
    public org.spongycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream) throws java.io.IOException
    {
        org.spongycastle.crypto.parsers.DHIESPublicKeyParser r0;
        java.io.InputStream $r1;
        byte[] r2;
        org.spongycastle.crypto.params.DHParameters $r3;
        java.math.BigInteger $r4;
        int $i0;
        org.spongycastle.crypto.params.DHPublicKeyParameters $r5;

        r0 := @this: org.spongycastle.crypto.parsers.DHIESPublicKeyParser;

        $r1 := @parameter0: java.io.InputStream;

        $r3 = r0.<org.spongycastle.crypto.parsers.DHIESPublicKeyParser: org.spongycastle.crypto.params.DHParameters dhParams>;

        $r4 = virtualinvoke $r3.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger getP()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int bitLength()>();

        $i0 = $i0 + 7;

        $i0 = $i0 / 8;

        r2 = newarray (byte)[$i0];

        $i0 = lengthof r2;

        virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>(r2, 0, $i0);

        $r5 = new org.spongycastle.crypto.params.DHPublicKeyParameters;

        $r4 = new java.math.BigInteger;

        specialinvoke $r4.<java.math.BigInteger: void <init>(int,byte[])>(1, r2);

        $r3 = r0.<org.spongycastle.crypto.parsers.DHIESPublicKeyParser: org.spongycastle.crypto.params.DHParameters dhParams>;

        specialinvoke $r5.<org.spongycastle.crypto.params.DHPublicKeyParameters: void <init>(java.math.BigInteger,org.spongycastle.crypto.params.DHParameters)>($r4, $r3);

        return $r5;
    }
