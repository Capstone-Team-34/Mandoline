org.spongycastle.crypto.tls.PSKTlsServer extends org.spongycastle.crypto.tls.AbstractTlsServer
protected org.spongycastle.crypto.tls.TlsPSKIdentityManager pskIdentityManager
    public void <init>(org.spongycastle.crypto.tls.TlsCipherFactory, org.spongycastle.crypto.tls.TlsPSKIdentityManager)
    {
        org.spongycastle.crypto.tls.PSKTlsServer r0;
        org.spongycastle.crypto.tls.TlsCipherFactory $r1;
        org.spongycastle.crypto.tls.TlsPSKIdentityManager $r2;

        r0 := @this: org.spongycastle.crypto.tls.PSKTlsServer;

        $r1 := @parameter0: org.spongycastle.crypto.tls.TlsCipherFactory;

        $r2 := @parameter1: org.spongycastle.crypto.tls.TlsPSKIdentityManager;

        specialinvoke r0.<org.spongycastle.crypto.tls.AbstractTlsServer: void <init>(org.spongycastle.crypto.tls.TlsCipherFactory)>($r1);

        r0.<org.spongycastle.crypto.tls.PSKTlsServer: org.spongycastle.crypto.tls.TlsPSKIdentityManager pskIdentityManager> = $r2;

        return;
    }
    public void <init>(org.spongycastle.crypto.tls.TlsPSKIdentityManager)
    {
        org.spongycastle.crypto.tls.PSKTlsServer r0;
        org.spongycastle.crypto.tls.TlsPSKIdentityManager $r1;
        org.spongycastle.crypto.tls.DefaultTlsCipherFactory $r2;

        r0 := @this: org.spongycastle.crypto.tls.PSKTlsServer;

        $r1 := @parameter0: org.spongycastle.crypto.tls.TlsPSKIdentityManager;

        $r2 = new org.spongycastle.crypto.tls.DefaultTlsCipherFactory;

        specialinvoke $r2.<org.spongycastle.crypto.tls.DefaultTlsCipherFactory: void <init>()>();

        specialinvoke r0.<org.spongycastle.crypto.tls.PSKTlsServer: void <init>(org.spongycastle.crypto.tls.TlsCipherFactory,org.spongycastle.crypto.tls.TlsPSKIdentityManager)>($r2, $r1);

        return;
    }
    protected org.spongycastle.crypto.tls.TlsKeyExchange createPSKKeyExchange(int)
    {
        org.spongycastle.crypto.tls.PSKTlsServer r0;
        int $i0;
        org.spongycastle.crypto.tls.TlsPSKKeyExchange $r1;
        java.util.Vector $r2;
        org.spongycastle.crypto.tls.TlsPSKIdentityManager $r3;
        int[] $r4;
        short[] $r5, $r6;
        org.spongycastle.crypto.params.DHParameters $r7;

        r0 := @this: org.spongycastle.crypto.tls.PSKTlsServer;

        $i0 := @parameter0: int;

        $r1 = new org.spongycastle.crypto.tls.TlsPSKKeyExchange;

        $r2 = r0.<org.spongycastle.crypto.tls.PSKTlsServer: java.util.Vector supportedSignatureAlgorithms>;

        $r3 = r0.<org.spongycastle.crypto.tls.PSKTlsServer: org.spongycastle.crypto.tls.TlsPSKIdentityManager pskIdentityManager>;

        $r7 = virtualinvoke r0.<org.spongycastle.crypto.tls.PSKTlsServer: org.spongycastle.crypto.params.DHParameters getDHParameters()>();

        $r4 = r0.<org.spongycastle.crypto.tls.PSKTlsServer: int[] namedCurves>;

        $r5 = r0.<org.spongycastle.crypto.tls.PSKTlsServer: short[] clientECPointFormats>;

        $r6 = r0.<org.spongycastle.crypto.tls.PSKTlsServer: short[] serverECPointFormats>;

        specialinvoke $r1.<org.spongycastle.crypto.tls.TlsPSKKeyExchange: void <init>(int,java.util.Vector,org.spongycastle.crypto.tls.TlsPSKIdentity,org.spongycastle.crypto.tls.TlsPSKIdentityManager,org.spongycastle.crypto.params.DHParameters,int[],short[],short[])>($i0, $r2, null, $r3, $r7, $r4, $r5, $r6);

        return $r1;
    }
    protected int[] getCipherSuites()
    {
        org.spongycastle.crypto.tls.PSKTlsServer r0;
        int[] $r1;

        r0 := @this: org.spongycastle.crypto.tls.PSKTlsServer;

        $r1 = newarray (int)[4];

        $r1[0] = 49207;

        $r1[1] = 49205;

        $r1[2] = 178;

        $r1[3] = 144;

        return $r1;
    }
    public org.spongycastle.crypto.tls.TlsCredentials getCredentials() throws java.io.IOException
    {
        org.spongycastle.crypto.tls.PSKTlsServer r0;
        int $i0;
        org.spongycastle.crypto.tls.TlsFatalAlert $r1;
        org.spongycastle.crypto.tls.TlsEncryptionCredentials $r2;

        r0 := @this: org.spongycastle.crypto.tls.PSKTlsServer;

        $i0 = r0.<org.spongycastle.crypto.tls.PSKTlsServer: int selectedCipherSuite>;

        $i0 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: int getKeyExchangeAlgorithm(int)>($i0);

        lookupswitch($i0)
        {
            case 13: goto label2;
            case 14: goto label2;
            case 15: goto label3;
            case 24: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r1.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(80);

        throw $r1;

     label2:
        return null;

     label3:
        $r2 = virtualinvoke r0.<org.spongycastle.crypto.tls.PSKTlsServer: org.spongycastle.crypto.tls.TlsEncryptionCredentials getRSAEncryptionCredentials()>();

        return $r2;
    }
    protected org.spongycastle.crypto.params.DHParameters getDHParameters()
    {
        org.spongycastle.crypto.tls.PSKTlsServer r0;
        org.spongycastle.crypto.params.DHParameters r1;

        r0 := @this: org.spongycastle.crypto.tls.PSKTlsServer;

        r1 = <org.spongycastle.crypto.agreement.DHStandardGroups: org.spongycastle.crypto.params.DHParameters rfc5114_2048_256>;

        return r1;
    }
    public org.spongycastle.crypto.tls.TlsKeyExchange getKeyExchange() throws java.io.IOException
    {
        org.spongycastle.crypto.tls.PSKTlsServer r0;
        int $i0;
        org.spongycastle.crypto.tls.TlsFatalAlert $r1;
        org.spongycastle.crypto.tls.TlsKeyExchange $r2;

        r0 := @this: org.spongycastle.crypto.tls.PSKTlsServer;

        $i0 = r0.<org.spongycastle.crypto.tls.PSKTlsServer: int selectedCipherSuite>;

        $i0 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: int getKeyExchangeAlgorithm(int)>($i0);

        lookupswitch($i0)
        {
            case 13: goto label2;
            case 14: goto label2;
            case 15: goto label2;
            case 24: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r1.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(80);

        throw $r1;

     label2:
        $r2 = virtualinvoke r0.<org.spongycastle.crypto.tls.PSKTlsServer: org.spongycastle.crypto.tls.TlsKeyExchange createPSKKeyExchange(int)>($i0);

        return $r2;
    }
    protected org.spongycastle.crypto.tls.TlsEncryptionCredentials getRSAEncryptionCredentials() throws java.io.IOException
    {
        org.spongycastle.crypto.tls.PSKTlsServer r0;
        org.spongycastle.crypto.tls.TlsFatalAlert $r1;

        r0 := @this: org.spongycastle.crypto.tls.PSKTlsServer;

        $r1 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r1.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(80);

        throw $r1;
    }
