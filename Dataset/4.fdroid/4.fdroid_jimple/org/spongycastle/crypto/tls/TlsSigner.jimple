org.spongycastle.crypto.tls.TlsSigner extends java.lang.Object
public abstract org.spongycastle.crypto.Signer createSigner(org.spongycastle.crypto.params.AsymmetricKeyParameter) { 
// no body
} 
public abstract org.spongycastle.crypto.Signer createSigner(org.spongycastle.crypto.tls.SignatureAndHashAlgorithm, org.spongycastle.crypto.params.AsymmetricKeyParameter) { 
// no body
} 
public abstract org.spongycastle.crypto.Signer createVerifyer(org.spongycastle.crypto.params.AsymmetricKeyParameter) { 
// no body
} 
public abstract org.spongycastle.crypto.Signer createVerifyer(org.spongycastle.crypto.tls.SignatureAndHashAlgorithm, org.spongycastle.crypto.params.AsymmetricKeyParameter) { 
// no body
} 
public abstract byte[] generateRawSignature(org.spongycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.spongycastle.crypto.CryptoException { 
// no body
} 
public abstract byte[] generateRawSignature(org.spongycastle.crypto.tls.SignatureAndHashAlgorithm, org.spongycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.spongycastle.crypto.CryptoException { 
// no body
} 
public abstract void init(org.spongycastle.crypto.tls.TlsContext) { 
// no body
} 
public abstract boolean isValidPublicKey(org.spongycastle.crypto.params.AsymmetricKeyParameter) { 
// no body
} 
public abstract boolean verifyRawSignature(org.spongycastle.crypto.tls.SignatureAndHashAlgorithm, byte[], org.spongycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.spongycastle.crypto.CryptoException { 
// no body
} 
public abstract boolean verifyRawSignature(byte[], org.spongycastle.crypto.params.AsymmetricKeyParameter, byte[]) throws org.spongycastle.crypto.CryptoException { 
// no body
} 
