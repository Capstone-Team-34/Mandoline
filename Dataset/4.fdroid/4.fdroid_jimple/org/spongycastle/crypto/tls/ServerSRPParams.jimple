org.spongycastle.crypto.tls.ServerSRPParams extends java.lang.Object
protected java.math.BigInteger B
protected java.math.BigInteger N
protected java.math.BigInteger g
protected byte[] s
    public void <init>(java.math.BigInteger, java.math.BigInteger, byte[], java.math.BigInteger)
    {
        org.spongycastle.crypto.tls.ServerSRPParams r0;
        java.math.BigInteger $r1, $r2, $r4;
        byte[] $r3;

        r0 := @this: org.spongycastle.crypto.tls.ServerSRPParams;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: byte[];

        $r4 := @parameter3: java.math.BigInteger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.tls.ServerSRPParams: java.math.BigInteger N> = $r1;

        r0.<org.spongycastle.crypto.tls.ServerSRPParams: java.math.BigInteger g> = $r2;

        $r3 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r3);

        r0.<org.spongycastle.crypto.tls.ServerSRPParams: byte[] s> = $r3;

        r0.<org.spongycastle.crypto.tls.ServerSRPParams: java.math.BigInteger B> = $r4;

        return;
    }
    public static org.spongycastle.crypto.tls.ServerSRPParams parse(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        org.spongycastle.crypto.tls.ServerSRPParams $r1;
        java.math.BigInteger $r2, $r3, $r5;
        byte[] $r4;

        $r0 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <org.spongycastle.crypto.tls.TlsSRPUtils: java.math.BigInteger readSRPParameter(java.io.InputStream)>($r0);

        $r3 = staticinvoke <org.spongycastle.crypto.tls.TlsSRPUtils: java.math.BigInteger readSRPParameter(java.io.InputStream)>($r0);

        $r4 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: byte[] readOpaque8(java.io.InputStream)>($r0);

        $r5 = staticinvoke <org.spongycastle.crypto.tls.TlsSRPUtils: java.math.BigInteger readSRPParameter(java.io.InputStream)>($r0);

        $r1 = new org.spongycastle.crypto.tls.ServerSRPParams;

        specialinvoke $r1.<org.spongycastle.crypto.tls.ServerSRPParams: void <init>(java.math.BigInteger,java.math.BigInteger,byte[],java.math.BigInteger)>($r2, $r3, $r4, $r5);

        return $r1;
    }
    public void encode(java.io.OutputStream) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.ServerSRPParams r0;
        java.io.OutputStream $r1;
        java.math.BigInteger $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.crypto.tls.ServerSRPParams;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = r0.<org.spongycastle.crypto.tls.ServerSRPParams: java.math.BigInteger N>;

        staticinvoke <org.spongycastle.crypto.tls.TlsSRPUtils: void writeSRPParameter(java.math.BigInteger,java.io.OutputStream)>($r2, $r1);

        $r2 = r0.<org.spongycastle.crypto.tls.ServerSRPParams: java.math.BigInteger g>;

        staticinvoke <org.spongycastle.crypto.tls.TlsSRPUtils: void writeSRPParameter(java.math.BigInteger,java.io.OutputStream)>($r2, $r1);

        $r3 = r0.<org.spongycastle.crypto.tls.ServerSRPParams: byte[] s>;

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeOpaque8(byte[],java.io.OutputStream)>($r3, $r1);

        $r2 = r0.<org.spongycastle.crypto.tls.ServerSRPParams: java.math.BigInteger B>;

        staticinvoke <org.spongycastle.crypto.tls.TlsSRPUtils: void writeSRPParameter(java.math.BigInteger,java.io.OutputStream)>($r2, $r1);

        return;
    }
    public java.math.BigInteger getB()
    {
        org.spongycastle.crypto.tls.ServerSRPParams r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.crypto.tls.ServerSRPParams;

        r1 = r0.<org.spongycastle.crypto.tls.ServerSRPParams: java.math.BigInteger B>;

        return r1;
    }
    public java.math.BigInteger getG()
    {
        org.spongycastle.crypto.tls.ServerSRPParams r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.crypto.tls.ServerSRPParams;

        r1 = r0.<org.spongycastle.crypto.tls.ServerSRPParams: java.math.BigInteger g>;

        return r1;
    }
    public java.math.BigInteger getN()
    {
        org.spongycastle.crypto.tls.ServerSRPParams r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.crypto.tls.ServerSRPParams;

        r1 = r0.<org.spongycastle.crypto.tls.ServerSRPParams: java.math.BigInteger N>;

        return r1;
    }
    public byte[] getS()
    {
        org.spongycastle.crypto.tls.ServerSRPParams r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.tls.ServerSRPParams;

        r1 = r0.<org.spongycastle.crypto.tls.ServerSRPParams: byte[] s>;

        return r1;
    }
