org.spongycastle.crypto.tls.TlsInputStream extends java.io.InputStream
private byte[] buf
private org.spongycastle.crypto.tls.TlsProtocol handler
    void <init>(org.spongycastle.crypto.tls.TlsProtocol)
    {
        org.spongycastle.crypto.tls.TlsInputStream r0;
        org.spongycastle.crypto.tls.TlsProtocol $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.crypto.tls.TlsInputStream;

        $r1 := @parameter0: org.spongycastle.crypto.tls.TlsProtocol;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r2 = newarray (byte)[1];

        r0.<org.spongycastle.crypto.tls.TlsInputStream: byte[] buf> = $r2;

        r0.<org.spongycastle.crypto.tls.TlsInputStream: org.spongycastle.crypto.tls.TlsProtocol handler> = null;

        r0.<org.spongycastle.crypto.tls.TlsInputStream: org.spongycastle.crypto.tls.TlsProtocol handler> = $r1;

        return;
    }
    public int available() throws java.io.IOException
    {
        org.spongycastle.crypto.tls.TlsInputStream r0;
        int $i0;
        org.spongycastle.crypto.tls.TlsProtocol $r1;

        r0 := @this: org.spongycastle.crypto.tls.TlsInputStream;

        $r1 = r0.<org.spongycastle.crypto.tls.TlsInputStream: org.spongycastle.crypto.tls.TlsProtocol handler>;

        $i0 = virtualinvoke $r1.<org.spongycastle.crypto.tls.TlsProtocol: int applicationDataAvailable()>();

        return $i0;
    }
    public void close() throws java.io.IOException
    {
        org.spongycastle.crypto.tls.TlsInputStream r0;
        org.spongycastle.crypto.tls.TlsProtocol $r1;

        r0 := @this: org.spongycastle.crypto.tls.TlsInputStream;

        $r1 = r0.<org.spongycastle.crypto.tls.TlsInputStream: org.spongycastle.crypto.tls.TlsProtocol handler>;

        virtualinvoke $r1.<org.spongycastle.crypto.tls.TlsProtocol: void close()>();

        return;
    }
    public int read() throws java.io.IOException
    {
        org.spongycastle.crypto.tls.TlsInputStream r0;
        int $i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: org.spongycastle.crypto.tls.TlsInputStream;

        $r1 = r0.<org.spongycastle.crypto.tls.TlsInputStream: byte[] buf>;

        $i0 = virtualinvoke r0.<org.spongycastle.crypto.tls.TlsInputStream: int read(byte[])>($r1);

        if $i0 >= 0 goto label1;

        return -1;

     label1:
        $r1 = r0.<org.spongycastle.crypto.tls.TlsInputStream: byte[] buf>;

        $b1 = $r1[0];

        $i0 = $b1 & 255;

        return $i0;
    }
    public int read(byte[], int, int) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.TlsInputStream r0;
        byte[] $r1;
        int $i0, $i1;
        org.spongycastle.crypto.tls.TlsProtocol $r2;

        r0 := @this: org.spongycastle.crypto.tls.TlsInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<org.spongycastle.crypto.tls.TlsInputStream: org.spongycastle.crypto.tls.TlsProtocol handler>;

        $i0 = virtualinvoke $r2.<org.spongycastle.crypto.tls.TlsProtocol: int readApplicationData(byte[],int,int)>($r1, $i0, $i1);

        return $i0;
    }
