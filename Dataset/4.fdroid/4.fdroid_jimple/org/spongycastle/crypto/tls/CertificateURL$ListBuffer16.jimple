org.spongycastle.crypto.tls.CertificateURL$ListBuffer16 extends java.io.ByteArrayOutputStream
final org.spongycastle.crypto.tls.CertificateURL this$0
    void <init>(org.spongycastle.crypto.tls.CertificateURL) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.CertificateURL$ListBuffer16 r0;
        org.spongycastle.crypto.tls.CertificateURL $r1;

        r0 := @this: org.spongycastle.crypto.tls.CertificateURL$ListBuffer16;

        $r1 := @parameter0: org.spongycastle.crypto.tls.CertificateURL;

        r0.<org.spongycastle.crypto.tls.CertificateURL$ListBuffer16: org.spongycastle.crypto.tls.CertificateURL this$0> = $r1;

        specialinvoke r0.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint16(int,java.io.OutputStream)>(0, r0);

        return;
    }
    void encodeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.CertificateURL$ListBuffer16 r0;
        java.io.OutputStream $r1;
        int i0;
        byte[] $r2;

        r0 := @this: org.spongycastle.crypto.tls.CertificateURL$ListBuffer16;

        $r1 := @parameter0: java.io.OutputStream;

        i0 = r0.<org.spongycastle.crypto.tls.CertificateURL$ListBuffer16: int count>;

        i0 = i0 + -2;

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void checkUint16(int)>(i0);

        $r2 = r0.<org.spongycastle.crypto.tls.CertificateURL$ListBuffer16: byte[] buf>;

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint16(int,byte[],int)>(i0, $r2, 0);

        $r2 = r0.<org.spongycastle.crypto.tls.CertificateURL$ListBuffer16: byte[] buf>;

        i0 = r0.<org.spongycastle.crypto.tls.CertificateURL$ListBuffer16: int count>;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, i0);

        r0.<org.spongycastle.crypto.tls.CertificateURL$ListBuffer16: byte[] buf> = null;

        return;
    }
