org.spongycastle.crypto.tls.DTLSEpoch extends java.lang.Object
private final org.spongycastle.crypto.tls.TlsCipher cipher
private final int epoch
private final org.spongycastle.crypto.tls.DTLSReplayWindow replayWindow
private long sequenceNumber
    void <init>(int, org.spongycastle.crypto.tls.TlsCipher)
    {
        org.spongycastle.crypto.tls.DTLSEpoch r0;
        int $i0;
        org.spongycastle.crypto.tls.TlsCipher $r1;
        org.spongycastle.crypto.tls.DTLSReplayWindow $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.spongycastle.crypto.tls.DTLSEpoch;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.spongycastle.crypto.tls.TlsCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.spongycastle.crypto.tls.DTLSReplayWindow;

        specialinvoke $r2.<org.spongycastle.crypto.tls.DTLSReplayWindow: void <init>()>();

        r0.<org.spongycastle.crypto.tls.DTLSEpoch: org.spongycastle.crypto.tls.DTLSReplayWindow replayWindow> = $r2;

        r0.<org.spongycastle.crypto.tls.DTLSEpoch: long sequenceNumber> = 0L;

        if $i0 >= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'epoch\' must be >= 0");

        throw $r3;

     label1:
        if $r1 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'cipher\' cannot be null");

        throw $r3;

     label2:
        r0.<org.spongycastle.crypto.tls.DTLSEpoch: int epoch> = $i0;

        r0.<org.spongycastle.crypto.tls.DTLSEpoch: org.spongycastle.crypto.tls.TlsCipher cipher> = $r1;

        return;
    }
    long allocateSequenceNumber()
    {
        org.spongycastle.crypto.tls.DTLSEpoch r0;
        long $l0, $l1;

        r0 := @this: org.spongycastle.crypto.tls.DTLSEpoch;

        $l0 = r0.<org.spongycastle.crypto.tls.DTLSEpoch: long sequenceNumber>;

        $l1 = 1L + $l0;

        r0.<org.spongycastle.crypto.tls.DTLSEpoch: long sequenceNumber> = $l1;

        return $l0;
    }
    org.spongycastle.crypto.tls.TlsCipher getCipher()
    {
        org.spongycastle.crypto.tls.DTLSEpoch r0;
        org.spongycastle.crypto.tls.TlsCipher r1;

        r0 := @this: org.spongycastle.crypto.tls.DTLSEpoch;

        r1 = r0.<org.spongycastle.crypto.tls.DTLSEpoch: org.spongycastle.crypto.tls.TlsCipher cipher>;

        return r1;
    }
    int getEpoch()
    {
        org.spongycastle.crypto.tls.DTLSEpoch r0;
        int i0;

        r0 := @this: org.spongycastle.crypto.tls.DTLSEpoch;

        i0 = r0.<org.spongycastle.crypto.tls.DTLSEpoch: int epoch>;

        return i0;
    }
    org.spongycastle.crypto.tls.DTLSReplayWindow getReplayWindow()
    {
        org.spongycastle.crypto.tls.DTLSEpoch r0;
        org.spongycastle.crypto.tls.DTLSReplayWindow r1;

        r0 := @this: org.spongycastle.crypto.tls.DTLSEpoch;

        r1 = r0.<org.spongycastle.crypto.tls.DTLSEpoch: org.spongycastle.crypto.tls.DTLSReplayWindow replayWindow>;

        return r1;
    }
    long getSequenceNumber()
    {
        org.spongycastle.crypto.tls.DTLSEpoch r0;
        long l0;

        r0 := @this: org.spongycastle.crypto.tls.DTLSEpoch;

        l0 = r0.<org.spongycastle.crypto.tls.DTLSEpoch: long sequenceNumber>;

        return l0;
    }
