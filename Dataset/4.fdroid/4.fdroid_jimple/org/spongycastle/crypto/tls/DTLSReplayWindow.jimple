org.spongycastle.crypto.tls.DTLSReplayWindow extends java.lang.Object
private static final long VALID_SEQ_MASK
private static final long WINDOW_SIZE
private long bitmap
private long latestConfirmedSeq
    void <init>()
    {
        org.spongycastle.crypto.tls.DTLSReplayWindow r0;

        r0 := @this: org.spongycastle.crypto.tls.DTLSReplayWindow;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long latestConfirmedSeq> = -1L;

        r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long bitmap> = 0L;

        return;
    }
    void reportAuthenticated(long)
    {
        org.spongycastle.crypto.tls.DTLSReplayWindow r0;
        long $l0, $l1, $l4;
        byte $b2;
        java.lang.IllegalArgumentException $r1;
        int $i3;

        r0 := @this: org.spongycastle.crypto.tls.DTLSReplayWindow;

        $l0 := @parameter0: long;

        $l1 = 281474976710655L & $l0;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'seq\' out of range");

        throw $r1;

     label1:
        $l1 = r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long latestConfirmedSeq>;

        $b2 = $l0 cmp $l1;

        if $b2 > 0 goto label2;

        $l1 = r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long latestConfirmedSeq>;

        $l1 = $l1 - $l0;

        $b2 = $l1 cmp 64L;

        if $b2 >= 0 goto label5;

        $l0 = r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long bitmap>;

        $i3 = (int) $l1;

        $l1 = 1L << $i3;

        $l0 = $l0 | $l1;

        r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long bitmap> = $l0;

        return;

     label2:
        $l1 = r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long latestConfirmedSeq>;

        $l1 = $l0 - $l1;

        $b2 = $l1 cmp 64L;

        if $b2 < 0 goto label4;

        r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long bitmap> = 1L;

     label3:
        r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long latestConfirmedSeq> = $l0;

        return;

     label4:
        $l4 = r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long bitmap>;

        $i3 = (int) $l1;

        $l1 = $l4 << $i3;

        r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long bitmap> = $l1;

        $l1 = r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long bitmap>;

        $l1 = $l1 | 1L;

        r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long bitmap> = $l1;

        goto label3;

     label5:
        return;
    }
    void reset()
    {
        org.spongycastle.crypto.tls.DTLSReplayWindow r0;

        r0 := @this: org.spongycastle.crypto.tls.DTLSReplayWindow;

        r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long latestConfirmedSeq> = -1L;

        r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long bitmap> = 0L;

        return;
    }
    boolean shouldDiscard(long)
    {
        org.spongycastle.crypto.tls.DTLSReplayWindow r0;
        long $l0, l1;
        byte $b2;
        int $i3;

        r0 := @this: org.spongycastle.crypto.tls.DTLSReplayWindow;

        $l0 := @parameter0: long;

        l1 = 281474976710655L & $l0;

        $b2 = l1 cmp $l0;

        if $b2 == 0 goto label1;

        return 1;

     label1:
        l1 = r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long latestConfirmedSeq>;

        $b2 = $l0 cmp l1;

        if $b2 > 0 goto label2;

        l1 = r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long latestConfirmedSeq>;

        l1 = l1 - $l0;

        $b2 = l1 cmp 64L;

        if $b2 >= 0 goto label3;

        $l0 = r0.<org.spongycastle.crypto.tls.DTLSReplayWindow: long bitmap>;

        $i3 = (int) l1;

        l1 = 1L << $i3;

        $l0 = $l0 & l1;

        $b2 = $l0 cmp 0L;

        if $b2 != 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
