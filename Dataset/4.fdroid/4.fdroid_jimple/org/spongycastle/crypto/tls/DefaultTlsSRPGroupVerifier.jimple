org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier extends java.lang.Object implements org.spongycastle.crypto.tls.TlsSRPGroupVerifier
protected static final java.util.Vector DEFAULT_GROUPS
protected java.util.Vector groups
    static void <clinit>()
    {
        java.util.Vector $r0;
        org.spongycastle.crypto.params.SRP6GroupParameters $r1;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        <org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: java.util.Vector DEFAULT_GROUPS> = $r0;

        $r0 = <org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: java.util.Vector DEFAULT_GROUPS>;

        $r1 = <org.spongycastle.crypto.agreement.srp.SRP6StandardGroups: org.spongycastle.crypto.params.SRP6GroupParameters rfc5054_1024>;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        $r0 = <org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: java.util.Vector DEFAULT_GROUPS>;

        $r1 = <org.spongycastle.crypto.agreement.srp.SRP6StandardGroups: org.spongycastle.crypto.params.SRP6GroupParameters rfc5054_1536>;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        $r0 = <org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: java.util.Vector DEFAULT_GROUPS>;

        $r1 = <org.spongycastle.crypto.agreement.srp.SRP6StandardGroups: org.spongycastle.crypto.params.SRP6GroupParameters rfc5054_2048>;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        $r0 = <org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: java.util.Vector DEFAULT_GROUPS>;

        $r1 = <org.spongycastle.crypto.agreement.srp.SRP6StandardGroups: org.spongycastle.crypto.params.SRP6GroupParameters rfc5054_3072>;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        $r0 = <org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: java.util.Vector DEFAULT_GROUPS>;

        $r1 = <org.spongycastle.crypto.agreement.srp.SRP6StandardGroups: org.spongycastle.crypto.params.SRP6GroupParameters rfc5054_4096>;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        $r0 = <org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: java.util.Vector DEFAULT_GROUPS>;

        $r1 = <org.spongycastle.crypto.agreement.srp.SRP6StandardGroups: org.spongycastle.crypto.params.SRP6GroupParameters rfc5054_6144>;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        $r0 = <org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: java.util.Vector DEFAULT_GROUPS>;

        $r1 = <org.spongycastle.crypto.agreement.srp.SRP6StandardGroups: org.spongycastle.crypto.params.SRP6GroupParameters rfc5054_8192>;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        return;
    }
    public void <init>()
    {
        org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier r0;
        java.util.Vector $r1;

        r0 := @this: org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier;

        $r1 = <org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: java.util.Vector DEFAULT_GROUPS>;

        specialinvoke r0.<org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: void <init>(java.util.Vector)>($r1);

        return;
    }
    public void <init>(java.util.Vector)
    {
        org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier r0;
        java.util.Vector $r1;

        r0 := @this: org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier;

        $r1 := @parameter0: java.util.Vector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: java.util.Vector groups> = $r1;

        return;
    }
    public boolean accept(org.spongycastle.crypto.params.SRP6GroupParameters)
    {
        org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier r0;
        org.spongycastle.crypto.params.SRP6GroupParameters $r1, $r4;
        int i0, $i1;
        java.util.Vector $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier;

        $r1 := @parameter0: org.spongycastle.crypto.params.SRP6GroupParameters;

        i0 = 0;

     label1:
        $r2 = r0.<org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: java.util.Vector groups>;

        $i1 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if i0 >= $i1 goto label3;

        $r2 = r0.<org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: java.util.Vector groups>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.spongycastle.crypto.params.SRP6GroupParameters) $r3;

        $z0 = virtualinvoke r0.<org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: boolean areGroupsEqual(org.spongycastle.crypto.params.SRP6GroupParameters,org.spongycastle.crypto.params.SRP6GroupParameters)>($r1, $r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }
    protected boolean areGroupsEqual(org.spongycastle.crypto.params.SRP6GroupParameters, org.spongycastle.crypto.params.SRP6GroupParameters)
    {
        org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier r0;
        org.spongycastle.crypto.params.SRP6GroupParameters $r1, $r2;
        java.math.BigInteger $r3, $r4;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier;

        $r1 := @parameter0: org.spongycastle.crypto.params.SRP6GroupParameters;

        $r2 := @parameter1: org.spongycastle.crypto.params.SRP6GroupParameters;

        if $r1 == $r2 goto label1;

        $r3 = virtualinvoke $r1.<org.spongycastle.crypto.params.SRP6GroupParameters: java.math.BigInteger getN()>();

        $r4 = virtualinvoke $r2.<org.spongycastle.crypto.params.SRP6GroupParameters: java.math.BigInteger getN()>();

        $z0 = virtualinvoke r0.<org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: boolean areParametersEqual(java.math.BigInteger,java.math.BigInteger)>($r3, $r4);

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r1.<org.spongycastle.crypto.params.SRP6GroupParameters: java.math.BigInteger getG()>();

        $r4 = virtualinvoke $r2.<org.spongycastle.crypto.params.SRP6GroupParameters: java.math.BigInteger getG()>();

        $z0 = virtualinvoke r0.<org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier: boolean areParametersEqual(java.math.BigInteger,java.math.BigInteger)>($r3, $r4);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    protected boolean areParametersEqual(java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier r0;
        java.math.BigInteger $r1, $r2;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        if $r1 == $r2 goto label1;

        $z0 = virtualinvoke $r1.<java.math.BigInteger: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
