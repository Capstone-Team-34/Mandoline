org.spongycastle.crypto.tls.CertificateStatusRequest extends java.lang.Object
protected java.lang.Object request
protected short statusType
    public void <init>(short, java.lang.Object)
    {
        org.spongycastle.crypto.tls.CertificateStatusRequest r0;
        short $s0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.spongycastle.crypto.tls.CertificateStatusRequest;

        $s0 := @parameter0: short;

        $r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <org.spongycastle.crypto.tls.CertificateStatusRequest: boolean isCorrectType(short,java.lang.Object)>($s0, $r1);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'request\' is not an instance of the correct type");

        throw $r2;

     label1:
        r0.<org.spongycastle.crypto.tls.CertificateStatusRequest: short statusType> = $s0;

        r0.<org.spongycastle.crypto.tls.CertificateStatusRequest: java.lang.Object request> = $r1;

        return;
    }
    protected static boolean isCorrectType(short, java.lang.Object)
    {
        short $s0;
        java.lang.Object $r0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        $s0 := @parameter0: short;

        $r0 := @parameter1: java.lang.Object;

        lookupswitch($s0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'statusType\' is an unsupported value");

        throw $r1;

     label2:
        $z0 = $r0 instanceof org.spongycastle.crypto.tls.OCSPStatusRequest;

        return $z0;
    }
    public static org.spongycastle.crypto.tls.CertificateStatusRequest parse(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        short $s0;
        org.spongycastle.crypto.tls.TlsFatalAlert $r1;
        org.spongycastle.crypto.tls.OCSPStatusRequest $r2;
        org.spongycastle.crypto.tls.CertificateStatusRequest $r3;

        $r0 := @parameter0: java.io.InputStream;

        $s0 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: short readUint8(java.io.InputStream)>($r0);

        lookupswitch($s0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r1.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(50);

        throw $r1;

     label2:
        $r2 = staticinvoke <org.spongycastle.crypto.tls.OCSPStatusRequest: org.spongycastle.crypto.tls.OCSPStatusRequest parse(java.io.InputStream)>($r0);

        $r3 = new org.spongycastle.crypto.tls.CertificateStatusRequest;

        specialinvoke $r3.<org.spongycastle.crypto.tls.CertificateStatusRequest: void <init>(short,java.lang.Object)>($s0, $r2);

        return $r3;
    }
    public void encode(java.io.OutputStream) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.CertificateStatusRequest r0;
        java.io.OutputStream $r1;
        short $s0;
        org.spongycastle.crypto.tls.TlsFatalAlert $r2;
        java.lang.Object $r3;
        org.spongycastle.crypto.tls.OCSPStatusRequest $r4;

        r0 := @this: org.spongycastle.crypto.tls.CertificateStatusRequest;

        $r1 := @parameter0: java.io.OutputStream;

        $s0 = r0.<org.spongycastle.crypto.tls.CertificateStatusRequest: short statusType>;

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint8(short,java.io.OutputStream)>($s0, $r1);

        $s0 = r0.<org.spongycastle.crypto.tls.CertificateStatusRequest: short statusType>;

        lookupswitch($s0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r2.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(80);

        throw $r2;

     label2:
        $r3 = r0.<org.spongycastle.crypto.tls.CertificateStatusRequest: java.lang.Object request>;

        $r4 = (org.spongycastle.crypto.tls.OCSPStatusRequest) $r3;

        virtualinvoke $r4.<org.spongycastle.crypto.tls.OCSPStatusRequest: void encode(java.io.OutputStream)>($r1);

        return;
    }
    public org.spongycastle.crypto.tls.OCSPStatusRequest getOCSPStatusRequest()
    {
        org.spongycastle.crypto.tls.CertificateStatusRequest r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.IllegalStateException $r2;
        org.spongycastle.crypto.tls.OCSPStatusRequest $r3;

        r0 := @this: org.spongycastle.crypto.tls.CertificateStatusRequest;

        $r1 = r0.<org.spongycastle.crypto.tls.CertificateStatusRequest: java.lang.Object request>;

        $z0 = staticinvoke <org.spongycastle.crypto.tls.CertificateStatusRequest: boolean isCorrectType(short,java.lang.Object)>(1, $r1);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("\'request\' is not an OCSPStatusRequest");

        throw $r2;

     label1:
        $r1 = r0.<org.spongycastle.crypto.tls.CertificateStatusRequest: java.lang.Object request>;

        $r3 = (org.spongycastle.crypto.tls.OCSPStatusRequest) $r1;

        return $r3;
    }
    public java.lang.Object getRequest()
    {
        org.spongycastle.crypto.tls.CertificateStatusRequest r0;
        java.lang.Object r1;

        r0 := @this: org.spongycastle.crypto.tls.CertificateStatusRequest;

        r1 = r0.<org.spongycastle.crypto.tls.CertificateStatusRequest: java.lang.Object request>;

        return r1;
    }
    public short getStatusType()
    {
        org.spongycastle.crypto.tls.CertificateStatusRequest r0;
        short s0;

        r0 := @this: org.spongycastle.crypto.tls.CertificateStatusRequest;

        s0 = r0.<org.spongycastle.crypto.tls.CertificateStatusRequest: short statusType>;

        return s0;
    }
