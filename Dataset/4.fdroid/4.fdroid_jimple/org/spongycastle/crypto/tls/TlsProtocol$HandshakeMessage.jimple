org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage extends java.io.ByteArrayOutputStream
final org.spongycastle.crypto.tls.TlsProtocol this$0
    void <init>(org.spongycastle.crypto.tls.TlsProtocol, short) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage r0;
        org.spongycastle.crypto.tls.TlsProtocol $r1;
        short $s0;

        r0 := @this: org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage;

        $r1 := @parameter0: org.spongycastle.crypto.tls.TlsProtocol;

        $s0 := @parameter1: short;

        specialinvoke r0.<org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage: void <init>(org.spongycastle.crypto.tls.TlsProtocol,short,int)>($r1, $s0, 60);

        return;
    }
    void <init>(org.spongycastle.crypto.tls.TlsProtocol, short, int) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage r0;
        org.spongycastle.crypto.tls.TlsProtocol $r1;
        short $s0;
        int $i1;

        r0 := @this: org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage;

        $r1 := @parameter0: org.spongycastle.crypto.tls.TlsProtocol;

        $s0 := @parameter1: short;

        $i1 := @parameter2: int;

        r0.<org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage: org.spongycastle.crypto.tls.TlsProtocol this$0> = $r1;

        $i1 = $i1 + 4;

        specialinvoke r0.<java.io.ByteArrayOutputStream: void <init>(int)>($i1);

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint8(short,java.io.OutputStream)>($s0, r0);

        $i1 = r0.<org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage: int count>;

        $i1 = $i1 + 3;

        r0.<org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage: int count> = $i1;

        return;
    }
    void writeToRecordStream() throws java.io.IOException
    {
        org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage r0;
        int i0;
        byte[] $r1;
        org.spongycastle.crypto.tls.TlsProtocol $r2;

        r0 := @this: org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage;

        i0 = r0.<org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage: int count>;

        i0 = i0 + -4;

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void checkUint24(int)>(i0);

        $r1 = r0.<org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage: byte[] buf>;

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint24(int,byte[],int)>(i0, $r1, 1);

        $r2 = r0.<org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage: org.spongycastle.crypto.tls.TlsProtocol this$0>;

        $r1 = r0.<org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage: byte[] buf>;

        i0 = r0.<org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage: int count>;

        virtualinvoke $r2.<org.spongycastle.crypto.tls.TlsProtocol: void writeHandshakeMessage(byte[],int,int)>($r1, 0, i0);

        r0.<org.spongycastle.crypto.tls.TlsProtocol$HandshakeMessage: byte[] buf> = null;

        return;
    }
