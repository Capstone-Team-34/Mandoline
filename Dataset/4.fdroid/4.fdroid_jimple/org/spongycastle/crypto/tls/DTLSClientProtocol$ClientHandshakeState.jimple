org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState extends java.lang.Object
boolean allowCertificateStatus
org.spongycastle.crypto.tls.TlsAuthentication authentication
org.spongycastle.crypto.tls.CertificateRequest certificateRequest
org.spongycastle.crypto.tls.CertificateStatus certificateStatus
org.spongycastle.crypto.tls.TlsClient client
org.spongycastle.crypto.tls.TlsClientContextImpl clientContext
org.spongycastle.crypto.tls.TlsCredentials clientCredentials
java.util.Hashtable clientExtensions
boolean expectSessionTicket
org.spongycastle.crypto.tls.TlsKeyExchange keyExchange
int[] offeredCipherSuites
short[] offeredCompressionMethods
boolean resumedSession
boolean secure_renegotiation
byte[] selectedSessionID
java.util.Hashtable serverExtensions
org.spongycastle.crypto.tls.SessionParameters sessionParameters
org.spongycastle.crypto.tls.SessionParameters$Builder sessionParametersBuilder
org.spongycastle.crypto.tls.TlsSession tlsSession
    protected void <init>()
    {
        org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState r0;

        r0 := @this: org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: org.spongycastle.crypto.tls.TlsClient client> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: org.spongycastle.crypto.tls.TlsClientContextImpl clientContext> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: org.spongycastle.crypto.tls.TlsSession tlsSession> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: org.spongycastle.crypto.tls.SessionParameters sessionParameters> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: org.spongycastle.crypto.tls.SessionParameters$Builder sessionParametersBuilder> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: int[] offeredCipherSuites> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: short[] offeredCompressionMethods> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: java.util.Hashtable clientExtensions> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: java.util.Hashtable serverExtensions> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: byte[] selectedSessionID> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: boolean resumedSession> = 0;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: boolean secure_renegotiation> = 0;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: boolean allowCertificateStatus> = 0;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: boolean expectSessionTicket> = 0;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: org.spongycastle.crypto.tls.TlsKeyExchange keyExchange> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: org.spongycastle.crypto.tls.TlsAuthentication authentication> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: org.spongycastle.crypto.tls.CertificateStatus certificateStatus> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: org.spongycastle.crypto.tls.CertificateRequest certificateRequest> = null;

        r0.<org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState: org.spongycastle.crypto.tls.TlsCredentials clientCredentials> = null;

        return;
    }
