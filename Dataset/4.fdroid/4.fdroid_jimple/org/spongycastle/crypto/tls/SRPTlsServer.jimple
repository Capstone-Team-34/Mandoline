org.spongycastle.crypto.tls.SRPTlsServer extends org.spongycastle.crypto.tls.AbstractTlsServer
protected org.spongycastle.crypto.tls.TlsSRPLoginParameters loginParameters
protected byte[] srpIdentity
protected org.spongycastle.crypto.tls.TlsSRPIdentityManager srpIdentityManager
    public void <init>(org.spongycastle.crypto.tls.TlsCipherFactory, org.spongycastle.crypto.tls.TlsSRPIdentityManager)
    {
        org.spongycastle.crypto.tls.SRPTlsServer r0;
        org.spongycastle.crypto.tls.TlsCipherFactory $r1;
        org.spongycastle.crypto.tls.TlsSRPIdentityManager $r2;

        r0 := @this: org.spongycastle.crypto.tls.SRPTlsServer;

        $r1 := @parameter0: org.spongycastle.crypto.tls.TlsCipherFactory;

        $r2 := @parameter1: org.spongycastle.crypto.tls.TlsSRPIdentityManager;

        specialinvoke r0.<org.spongycastle.crypto.tls.AbstractTlsServer: void <init>(org.spongycastle.crypto.tls.TlsCipherFactory)>($r1);

        r0.<org.spongycastle.crypto.tls.SRPTlsServer: byte[] srpIdentity> = null;

        r0.<org.spongycastle.crypto.tls.SRPTlsServer: org.spongycastle.crypto.tls.TlsSRPLoginParameters loginParameters> = null;

        r0.<org.spongycastle.crypto.tls.SRPTlsServer: org.spongycastle.crypto.tls.TlsSRPIdentityManager srpIdentityManager> = $r2;

        return;
    }
    public void <init>(org.spongycastle.crypto.tls.TlsSRPIdentityManager)
    {
        org.spongycastle.crypto.tls.SRPTlsServer r0;
        org.spongycastle.crypto.tls.TlsSRPIdentityManager $r1;
        org.spongycastle.crypto.tls.DefaultTlsCipherFactory $r2;

        r0 := @this: org.spongycastle.crypto.tls.SRPTlsServer;

        $r1 := @parameter0: org.spongycastle.crypto.tls.TlsSRPIdentityManager;

        $r2 = new org.spongycastle.crypto.tls.DefaultTlsCipherFactory;

        specialinvoke $r2.<org.spongycastle.crypto.tls.DefaultTlsCipherFactory: void <init>()>();

        specialinvoke r0.<org.spongycastle.crypto.tls.SRPTlsServer: void <init>(org.spongycastle.crypto.tls.TlsCipherFactory,org.spongycastle.crypto.tls.TlsSRPIdentityManager)>($r2, $r1);

        return;
    }
    protected org.spongycastle.crypto.tls.TlsKeyExchange createSRPKeyExchange(int)
    {
        org.spongycastle.crypto.tls.SRPTlsServer r0;
        int $i0;
        org.spongycastle.crypto.tls.TlsSRPKeyExchange $r1;
        java.util.Vector $r2;
        byte[] $r3;
        org.spongycastle.crypto.tls.TlsSRPLoginParameters $r4;

        r0 := @this: org.spongycastle.crypto.tls.SRPTlsServer;

        $i0 := @parameter0: int;

        $r1 = new org.spongycastle.crypto.tls.TlsSRPKeyExchange;

        $r2 = r0.<org.spongycastle.crypto.tls.SRPTlsServer: java.util.Vector supportedSignatureAlgorithms>;

        $r3 = r0.<org.spongycastle.crypto.tls.SRPTlsServer: byte[] srpIdentity>;

        $r4 = r0.<org.spongycastle.crypto.tls.SRPTlsServer: org.spongycastle.crypto.tls.TlsSRPLoginParameters loginParameters>;

        specialinvoke $r1.<org.spongycastle.crypto.tls.TlsSRPKeyExchange: void <init>(int,java.util.Vector,byte[],org.spongycastle.crypto.tls.TlsSRPLoginParameters)>($i0, $r2, $r3, $r4);

        return $r1;
    }
    protected int[] getCipherSuites()
    {
        org.spongycastle.crypto.tls.SRPTlsServer r0;
        int[] $r1;

        r0 := @this: org.spongycastle.crypto.tls.SRPTlsServer;

        $r1 = newarray (int)[6];

        $r1[0] = 49186;

        $r1[1] = 49183;

        $r1[2] = 49185;

        $r1[3] = 49182;

        $r1[4] = 49184;

        $r1[5] = 49181;

        return $r1;
    }
    public org.spongycastle.crypto.tls.TlsCredentials getCredentials() throws java.io.IOException
    {
        org.spongycastle.crypto.tls.SRPTlsServer r0;
        int $i0;
        org.spongycastle.crypto.tls.TlsFatalAlert $r1;
        org.spongycastle.crypto.tls.TlsSignerCredentials $r2;

        r0 := @this: org.spongycastle.crypto.tls.SRPTlsServer;

        $i0 = r0.<org.spongycastle.crypto.tls.SRPTlsServer: int selectedCipherSuite>;

        $i0 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: int getKeyExchangeAlgorithm(int)>($i0);

        lookupswitch($i0)
        {
            case 21: goto label2;
            case 22: goto label3;
            case 23: goto label4;
            default: goto label1;
        };

     label1:
        $r1 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r1.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(80);

        throw $r1;

     label2:
        return null;

     label3:
        $r2 = virtualinvoke r0.<org.spongycastle.crypto.tls.SRPTlsServer: org.spongycastle.crypto.tls.TlsSignerCredentials getDSASignerCredentials()>();

        return $r2;

     label4:
        $r2 = virtualinvoke r0.<org.spongycastle.crypto.tls.SRPTlsServer: org.spongycastle.crypto.tls.TlsSignerCredentials getRSASignerCredentials()>();

        return $r2;
    }
    protected org.spongycastle.crypto.tls.TlsSignerCredentials getDSASignerCredentials() throws java.io.IOException
    {
        org.spongycastle.crypto.tls.SRPTlsServer r0;
        org.spongycastle.crypto.tls.TlsFatalAlert $r1;

        r0 := @this: org.spongycastle.crypto.tls.SRPTlsServer;

        $r1 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r1.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(80);

        throw $r1;
    }
    public org.spongycastle.crypto.tls.TlsKeyExchange getKeyExchange() throws java.io.IOException
    {
        org.spongycastle.crypto.tls.SRPTlsServer r0;
        int $i0;
        org.spongycastle.crypto.tls.TlsFatalAlert $r1;
        org.spongycastle.crypto.tls.TlsKeyExchange $r2;

        r0 := @this: org.spongycastle.crypto.tls.SRPTlsServer;

        $i0 = r0.<org.spongycastle.crypto.tls.SRPTlsServer: int selectedCipherSuite>;

        $i0 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: int getKeyExchangeAlgorithm(int)>($i0);

        lookupswitch($i0)
        {
            case 21: goto label2;
            case 22: goto label2;
            case 23: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r1.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(80);

        throw $r1;

     label2:
        $r2 = virtualinvoke r0.<org.spongycastle.crypto.tls.SRPTlsServer: org.spongycastle.crypto.tls.TlsKeyExchange createSRPKeyExchange(int)>($i0);

        return $r2;
    }
    protected org.spongycastle.crypto.tls.TlsSignerCredentials getRSASignerCredentials() throws java.io.IOException
    {
        org.spongycastle.crypto.tls.SRPTlsServer r0;
        org.spongycastle.crypto.tls.TlsFatalAlert $r1;

        r0 := @this: org.spongycastle.crypto.tls.SRPTlsServer;

        $r1 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r1.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(80);

        throw $r1;
    }
    public int getSelectedCipherSuite() throws java.io.IOException
    {
        org.spongycastle.crypto.tls.SRPTlsServer r0;
        int $i0;
        boolean $z0;
        byte[] $r1;
        org.spongycastle.crypto.tls.TlsSRPIdentityManager $r2;
        org.spongycastle.crypto.tls.TlsSRPLoginParameters $r3;
        org.spongycastle.crypto.tls.TlsFatalAlert $r4;

        r0 := @this: org.spongycastle.crypto.tls.SRPTlsServer;

        $i0 = specialinvoke r0.<org.spongycastle.crypto.tls.AbstractTlsServer: int getSelectedCipherSuite()>();

        $z0 = staticinvoke <org.spongycastle.crypto.tls.TlsSRPUtils: boolean isSRPCipherSuite(int)>($i0);

        if $z0 == 0 goto label2;

        $r1 = r0.<org.spongycastle.crypto.tls.SRPTlsServer: byte[] srpIdentity>;

        if $r1 == null goto label1;

        $r2 = r0.<org.spongycastle.crypto.tls.SRPTlsServer: org.spongycastle.crypto.tls.TlsSRPIdentityManager srpIdentityManager>;

        $r1 = r0.<org.spongycastle.crypto.tls.SRPTlsServer: byte[] srpIdentity>;

        $r3 = interfaceinvoke $r2.<org.spongycastle.crypto.tls.TlsSRPIdentityManager: org.spongycastle.crypto.tls.TlsSRPLoginParameters getLoginParameters(byte[])>($r1);

        r0.<org.spongycastle.crypto.tls.SRPTlsServer: org.spongycastle.crypto.tls.TlsSRPLoginParameters loginParameters> = $r3;

     label1:
        $r3 = r0.<org.spongycastle.crypto.tls.SRPTlsServer: org.spongycastle.crypto.tls.TlsSRPLoginParameters loginParameters>;

        if $r3 != null goto label2;

        $r4 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r4.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(115);

        throw $r4;

     label2:
        return $i0;
    }
    public void processClientExtensions(java.util.Hashtable) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.SRPTlsServer r0;
        java.util.Hashtable $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.crypto.tls.SRPTlsServer;

        $r1 := @parameter0: java.util.Hashtable;

        specialinvoke r0.<org.spongycastle.crypto.tls.AbstractTlsServer: void processClientExtensions(java.util.Hashtable)>($r1);

        $r2 = staticinvoke <org.spongycastle.crypto.tls.TlsSRPUtils: byte[] getSRPExtension(java.util.Hashtable)>($r1);

        r0.<org.spongycastle.crypto.tls.SRPTlsServer: byte[] srpIdentity> = $r2;

        return;
    }
