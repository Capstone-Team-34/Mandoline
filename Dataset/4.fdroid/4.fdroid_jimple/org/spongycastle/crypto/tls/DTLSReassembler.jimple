org.spongycastle.crypto.tls.DTLSReassembler extends java.lang.Object
private final byte[] body
private java.util.Vector missing
private final short msg_type
    void <init>(short, int)
    {
        org.spongycastle.crypto.tls.DTLSReassembler r0;
        short $s0;
        int $i1;
        org.spongycastle.crypto.tls.DTLSReassembler$Range $r1;
        java.util.Vector $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.crypto.tls.DTLSReassembler;

        $s0 := @parameter0: short;

        $i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<org.spongycastle.crypto.tls.DTLSReassembler: java.util.Vector missing> = $r2;

        r0.<org.spongycastle.crypto.tls.DTLSReassembler: short msg_type> = $s0;

        $r3 = newarray (byte)[$i1];

        r0.<org.spongycastle.crypto.tls.DTLSReassembler: byte[] body> = $r3;

        $r2 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: java.util.Vector missing>;

        $r1 = new org.spongycastle.crypto.tls.DTLSReassembler$Range;

        specialinvoke $r1.<org.spongycastle.crypto.tls.DTLSReassembler$Range: void <init>(int,int)>(0, $i1);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        return;
    }
    void contributeFragment(short, int, byte[], int, int, int)
    {
        org.spongycastle.crypto.tls.DTLSReassembler r0;
        short $s0, $s7;
        int $i1, $i2, $i3, $i4, i5, i6, $i8, $i9;
        byte[] $r1, $r2;
        java.util.Vector $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.spongycastle.crypto.tls.DTLSReassembler$Range r5, $r6;

        r0 := @this: org.spongycastle.crypto.tls.DTLSReassembler;

        $s0 := @parameter0: short;

        $i1 := @parameter1: int;

        $r1 := @parameter2: byte[];

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        i6 = $i3 + $i4;

        $s7 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: short msg_type>;

        if $s7 != $s0 goto label8;

        $r2 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: byte[] body>;

        $i8 = lengthof $r2;

        if $i8 != $i1 goto label8;

        if i6 <= $i1 goto label1;

        return;

     label1:
        if $i4 != 0 goto label2;

        if $i3 != 0 goto label8;

        $r3 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: java.util.Vector missing>;

        $z0 = virtualinvoke $r3.<java.util.Vector: boolean isEmpty()>();

        if $z0 != 0 goto label8;

        $r3 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: java.util.Vector missing>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object firstElement()>();

        r5 = (org.spongycastle.crypto.tls.DTLSReassembler$Range) $r4;

        $i1 = virtualinvoke r5.<org.spongycastle.crypto.tls.DTLSReassembler$Range: int getEnd()>();

        if $i1 != 0 goto label8;

        $r3 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: java.util.Vector missing>;

        virtualinvoke $r3.<java.util.Vector: void removeElementAt(int)>(0);

        return;

     label2:
        $i1 = 0;

     label3:
        $r3 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: java.util.Vector missing>;

        $i4 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if $i1 >= $i4 goto label8;

        $r3 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: java.util.Vector missing>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        r5 = (org.spongycastle.crypto.tls.DTLSReassembler$Range) $r4;

        $i4 = virtualinvoke r5.<org.spongycastle.crypto.tls.DTLSReassembler$Range: int getStart()>();

        if $i4 >= i6 goto label8;

        $i4 = virtualinvoke r5.<org.spongycastle.crypto.tls.DTLSReassembler$Range: int getEnd()>();

        if $i4 <= $i3 goto label4;

        $i4 = virtualinvoke r5.<org.spongycastle.crypto.tls.DTLSReassembler$Range: int getStart()>();

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i3);

        $i8 = virtualinvoke r5.<org.spongycastle.crypto.tls.DTLSReassembler$Range: int getEnd()>();

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i8, i6);

        i5 = $i8 - $i4;

        $i9 = $i2 + $i4;

        $i9 = $i9 - $i3;

        $r2 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: byte[] body>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i9, $r2, $i4, i5);

        i5 = virtualinvoke r5.<org.spongycastle.crypto.tls.DTLSReassembler$Range: int getStart()>();

        if $i4 != i5 goto label6;

        $i4 = virtualinvoke r5.<org.spongycastle.crypto.tls.DTLSReassembler$Range: int getEnd()>();

        if $i8 != $i4 goto label5;

        $r3 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: java.util.Vector missing>;

        virtualinvoke $r3.<java.util.Vector: void removeElementAt(int)>($i1);

        $i1 = $i1 + -1;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        virtualinvoke r5.<org.spongycastle.crypto.tls.DTLSReassembler$Range: void setStart(int)>($i8);

        goto label4;

     label6:
        i5 = virtualinvoke r5.<org.spongycastle.crypto.tls.DTLSReassembler$Range: int getEnd()>();

        if $i8 == i5 goto label7;

        $r3 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: java.util.Vector missing>;

        $r6 = new org.spongycastle.crypto.tls.DTLSReassembler$Range;

        i5 = virtualinvoke r5.<org.spongycastle.crypto.tls.DTLSReassembler$Range: int getEnd()>();

        specialinvoke $r6.<org.spongycastle.crypto.tls.DTLSReassembler$Range: void <init>(int,int)>($i8, i5);

        $i1 = $i1 + 1;

        virtualinvoke $r3.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r6, $i1);

     label7:
        virtualinvoke r5.<org.spongycastle.crypto.tls.DTLSReassembler$Range: void setEnd(int)>($i4);

        goto label4;

     label8:
        return;
    }
    byte[] getBodyIfComplete()
    {
        org.spongycastle.crypto.tls.DTLSReassembler r0;
        boolean $z0;
        java.util.Vector $r1;
        byte[] r2;

        r0 := @this: org.spongycastle.crypto.tls.DTLSReassembler;

        $r1 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: java.util.Vector missing>;

        $z0 = virtualinvoke $r1.<java.util.Vector: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r2 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: byte[] body>;

        return r2;

     label1:
        return null;
    }
    short getMsgType()
    {
        org.spongycastle.crypto.tls.DTLSReassembler r0;
        short s0;

        r0 := @this: org.spongycastle.crypto.tls.DTLSReassembler;

        s0 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: short msg_type>;

        return s0;
    }
    void reset()
    {
        org.spongycastle.crypto.tls.DTLSReassembler r0;
        org.spongycastle.crypto.tls.DTLSReassembler$Range $r1;
        java.util.Vector $r2;
        byte[] $r3;
        int $i0;

        r0 := @this: org.spongycastle.crypto.tls.DTLSReassembler;

        $r2 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: java.util.Vector missing>;

        virtualinvoke $r2.<java.util.Vector: void removeAllElements()>();

        $r2 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: java.util.Vector missing>;

        $r1 = new org.spongycastle.crypto.tls.DTLSReassembler$Range;

        $r3 = r0.<org.spongycastle.crypto.tls.DTLSReassembler: byte[] body>;

        $i0 = lengthof $r3;

        specialinvoke $r1.<org.spongycastle.crypto.tls.DTLSReassembler$Range: void <init>(int,int)>(0, $i0);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        return;
    }
