org.spongycastle.crypto.tls.TlsSRTPUtils extends java.lang.Object
public static final java.lang.Integer EXT_use_srtp
    static void <clinit>()
    {
        java.lang.Integer $r0;

        $r0 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(14);

        <org.spongycastle.crypto.tls.TlsSRTPUtils: java.lang.Integer EXT_use_srtp> = $r0;

        return;
    }
    public void <init>()
    {
        org.spongycastle.crypto.tls.TlsSRTPUtils r0;

        r0 := @this: org.spongycastle.crypto.tls.TlsSRTPUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static void addUseSRTPExtension(java.util.Hashtable, org.spongycastle.crypto.tls.UseSRTPData) throws java.io.IOException
    {
        java.util.Hashtable $r0;
        org.spongycastle.crypto.tls.UseSRTPData $r1;
        java.lang.Integer $r2;
        byte[] $r3;

        $r0 := @parameter0: java.util.Hashtable;

        $r1 := @parameter1: org.spongycastle.crypto.tls.UseSRTPData;

        $r2 = <org.spongycastle.crypto.tls.TlsSRTPUtils: java.lang.Integer EXT_use_srtp>;

        $r3 = staticinvoke <org.spongycastle.crypto.tls.TlsSRTPUtils: byte[] createUseSRTPExtension(org.spongycastle.crypto.tls.UseSRTPData)>($r1);

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        return;
    }
    public static byte[] createUseSRTPExtension(org.spongycastle.crypto.tls.UseSRTPData) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.UseSRTPData $r0;
        java.io.ByteArrayOutputStream r1;
        java.lang.IllegalArgumentException $r2;
        int[] $r3;
        byte[] $r4;

        $r0 := @parameter0: org.spongycastle.crypto.tls.UseSRTPData;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'useSRTPData\' cannot be null");

        throw $r2;

     label1:
        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = virtualinvoke $r0.<org.spongycastle.crypto.tls.UseSRTPData: int[] getProtectionProfiles()>();

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint16ArrayWithUint16Length(int[],java.io.OutputStream)>($r3, r1);

        $r4 = virtualinvoke $r0.<org.spongycastle.crypto.tls.UseSRTPData: byte[] getMki()>();

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeOpaque8(byte[],java.io.OutputStream)>($r4, r1);

        $r4 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;
    }
    public static org.spongycastle.crypto.tls.UseSRTPData getUseSRTPExtension(java.util.Hashtable) throws java.io.IOException
    {
        java.util.Hashtable $r0;
        java.lang.Integer $r1;
        byte[] $r2;
        org.spongycastle.crypto.tls.UseSRTPData $r3;

        $r0 := @parameter0: java.util.Hashtable;

        $r1 = <org.spongycastle.crypto.tls.TlsSRTPUtils: java.lang.Integer EXT_use_srtp>;

        $r2 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: byte[] getExtensionData(java.util.Hashtable,java.lang.Integer)>($r0, $r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <org.spongycastle.crypto.tls.TlsSRTPUtils: org.spongycastle.crypto.tls.UseSRTPData readUseSRTPExtension(byte[])>($r2);

        return $r3;
    }
    public static org.spongycastle.crypto.tls.UseSRTPData readUseSRTPExtension(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        java.io.ByteArrayInputStream r1;
        java.lang.IllegalArgumentException $r2;
        int $i0, $i1;
        org.spongycastle.crypto.tls.TlsFatalAlert $r3;
        int[] $r4;
        org.spongycastle.crypto.tls.UseSRTPData $r5;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'extensionData\' cannot be null");

        throw $r2;

     label1:
        r1 = new java.io.ByteArrayInputStream;

        specialinvoke r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        $i0 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: int readUint16(java.io.InputStream)>(r1);

        if $i0 < 2 goto label2;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label3;

     label2:
        $r3 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r3.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(50);

        throw $r3;

     label3:
        $i0 = $i0 / 2;

        $r4 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: int[] readUint16Array(int,java.io.InputStream)>($i0, r1);

        $r0 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: byte[] readOpaque8(java.io.InputStream)>(r1);

        staticinvoke <org.spongycastle.crypto.tls.TlsProtocol: void assertEmpty(java.io.ByteArrayInputStream)>(r1);

        $r5 = new org.spongycastle.crypto.tls.UseSRTPData;

        specialinvoke $r5.<org.spongycastle.crypto.tls.UseSRTPData: void <init>(int[],byte[])>($r4, $r0);

        return $r5;
    }
