org.spongycastle.crypto.tls.TlsAEADCipher extends java.lang.Object implements org.spongycastle.crypto.tls.TlsCipher
protected org.spongycastle.crypto.tls.TlsContext context
protected org.spongycastle.crypto.modes.AEADBlockCipher decryptCipher
protected byte[] decryptImplicitNonce
protected org.spongycastle.crypto.modes.AEADBlockCipher encryptCipher
protected byte[] encryptImplicitNonce
protected int macSize
protected int nonce_explicit_length
    public void <init>(org.spongycastle.crypto.tls.TlsContext, org.spongycastle.crypto.modes.AEADBlockCipher, org.spongycastle.crypto.modes.AEADBlockCipher, int, int) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.TlsAEADCipher r0;
        org.spongycastle.crypto.tls.TlsContext $r1;
        org.spongycastle.crypto.modes.AEADBlockCipher $r2, $r3;
        int $i0, $i1, i2, i3;
        org.spongycastle.crypto.params.KeyParameter r4, r6, r9;
        byte[] r5, $r8;
        boolean $z0;
        org.spongycastle.crypto.tls.TlsFatalAlert $r7;
        org.spongycastle.crypto.params.AEADParameters $r10;

        r0 := @this: org.spongycastle.crypto.tls.TlsAEADCipher;

        $r1 := @parameter0: org.spongycastle.crypto.tls.TlsContext;

        $r2 := @parameter1: org.spongycastle.crypto.modes.AEADBlockCipher;

        $r3 := @parameter2: org.spongycastle.crypto.modes.AEADBlockCipher;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: boolean isTLSv12(org.spongycastle.crypto.tls.TlsContext)>($r1);

        if $z0 != 0 goto label1;

        $r7 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r7.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(80);

        throw $r7;

     label1:
        r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.tls.TlsContext context> = $r1;

        r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int macSize> = $i1;

        r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int nonce_explicit_length> = 8;

        i2 = $i0 * 2;

        i2 = i2 + 8;

        $r8 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: byte[] calculateKeyBlock(org.spongycastle.crypto.tls.TlsContext,int)>($r1, i2);

        r4 = new org.spongycastle.crypto.params.KeyParameter;

        specialinvoke r4.<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r8, 0, $i0);

        r6 = new org.spongycastle.crypto.params.KeyParameter;

        specialinvoke r6.<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r8, $i0, $i0);

        $i0 = $i0 + $i0;

        i3 = $i0 + 4;

        r5 = staticinvoke <org.spongycastle.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r8, $i0, i3);

        $i0 = $i0 + 4;

        i3 = $i0 + 4;

        $r8 = staticinvoke <org.spongycastle.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r8, $i0, i3);

        $i0 = $i0 + 4;

        if $i0 == i2 goto label2;

        $r7 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r7.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(80);

        throw $r7;

     label2:
        $z0 = interfaceinvoke $r1.<org.spongycastle.crypto.tls.TlsContext: boolean isServer()>();

        if $z0 == 0 goto label4;

        r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher encryptCipher> = $r3;

        r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher decryptCipher> = $r2;

        r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] encryptImplicitNonce> = $r8;

        r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] decryptImplicitNonce> = r5;

        r9 = r6;

     label3:
        $i0 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int nonce_explicit_length>;

        $i0 = $i0 + 4;

        r5 = newarray (byte)[$i0];

        $r2 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher encryptCipher>;

        $r10 = new org.spongycastle.crypto.params.AEADParameters;

        $i0 = $i1 * 8;

        specialinvoke $r10.<org.spongycastle.crypto.params.AEADParameters: void <init>(org.spongycastle.crypto.params.KeyParameter,int,byte[])>(r9, $i0, r5);

        interfaceinvoke $r2.<org.spongycastle.crypto.modes.AEADBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, $r10);

        $r2 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher decryptCipher>;

        $r10 = new org.spongycastle.crypto.params.AEADParameters;

        $i0 = $i1 * 8;

        specialinvoke $r10.<org.spongycastle.crypto.params.AEADParameters: void <init>(org.spongycastle.crypto.params.KeyParameter,int,byte[])>(r4, $i0, r5);

        interfaceinvoke $r2.<org.spongycastle.crypto.modes.AEADBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(0, $r10);

        return;

     label4:
        r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher encryptCipher> = $r2;

        r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher decryptCipher> = $r3;

        r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] encryptImplicitNonce> = r5;

        r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] decryptImplicitNonce> = $r8;

        r9 = r4;

        r4 = r6;

        goto label3;
    }
    public byte[] decodeCiphertext(long, short, byte[], int, int) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.TlsAEADCipher r0;
        long $l0;
        short $s1;
        byte[] $r1, r2, r4, $r7;
        int $i2, $i3, $i4, $i5;
        java.lang.Exception r3;
        org.spongycastle.crypto.params.AEADParameters r5;
        org.spongycastle.crypto.tls.TlsFatalAlert $r6;
        org.spongycastle.crypto.modes.AEADBlockCipher $r8;

        r0 := @this: org.spongycastle.crypto.tls.TlsAEADCipher;

        $l0 := @parameter0: long;

        $s1 := @parameter1: short;

        $r1 := @parameter2: byte[];

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 = virtualinvoke r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int getPlaintextLimit(int)>($i3);

        if $i4 >= 0 goto label1;

        $r6 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r6.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(50);

        throw $r6;

     label1:
        r4 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] decryptImplicitNonce>;

        $i4 = lengthof r4;

        $i5 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int nonce_explicit_length>;

        $i4 = $i4 + $i5;

        r4 = newarray (byte)[$i4];

        r2 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] decryptImplicitNonce>;

        $r7 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] decryptImplicitNonce>;

        $i4 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, $i4);

        r2 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] decryptImplicitNonce>;

        $i4 = lengthof r2;

        $i5 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int nonce_explicit_length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i2, r4, $i4, $i5);

        $i4 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int nonce_explicit_length>;

        $i2 = $i2 + $i4;

        $i4 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int nonce_explicit_length>;

        $i3 = $i3 - $i4;

        $r8 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher decryptCipher>;

        $i4 = interfaceinvoke $r8.<org.spongycastle.crypto.modes.AEADBlockCipher: int getOutputSize(int)>($i3);

        r2 = newarray (byte)[$i4];

        $r7 = virtualinvoke r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] getAdditionalData(long,short,int)>($l0, $s1, $i4);

        r5 = new org.spongycastle.crypto.params.AEADParameters;

        $i4 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int macSize>;

        $i4 = $i4 * 8;

        specialinvoke r5.<org.spongycastle.crypto.params.AEADParameters: void <init>(org.spongycastle.crypto.params.KeyParameter,int,byte[],byte[])>(null, $i4, r4, $r7);

     label2:
        $r8 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher decryptCipher>;

        interfaceinvoke $r8.<org.spongycastle.crypto.modes.AEADBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(0, r5);

        $r8 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher decryptCipher>;

        $i2 = interfaceinvoke $r8.<org.spongycastle.crypto.modes.AEADBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r1, $i2, $i3, r2, 0);

     label3:
        $r8 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher decryptCipher>;

        $i3 = interfaceinvoke $r8.<org.spongycastle.crypto.modes.AEADBlockCipher: int doFinal(byte[],int)>(r2, $i2);

     label4:
        $i2 = $i2 + $i3;

        $i3 = lengthof r2;

        if $i2 == $i3 goto label6;

        $r6 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r6.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(80);

        throw $r6;

     label5:
        r3 := @caughtexception;

        $r6 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r6.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short,java.lang.Throwable)>(20, r3);

        throw $r6;

     label6:
        return r2;

        catch java.lang.Exception from label2 to label3 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    public byte[] encodePlaintext(long, short, byte[], int, int) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.TlsAEADCipher r0;
        long $l0;
        short $s1;
        byte[] $r1, r2, r4, $r6;
        int $i2, $i3, $i4, $i5;
        java.lang.Exception r3;
        org.spongycastle.crypto.params.AEADParameters r5;
        org.spongycastle.crypto.modes.AEADBlockCipher $r7;
        org.spongycastle.crypto.tls.TlsFatalAlert $r8;

        r0 := @this: org.spongycastle.crypto.tls.TlsAEADCipher;

        $l0 := @parameter0: long;

        $s1 := @parameter1: short;

        $r1 := @parameter2: byte[];

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        r4 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] encryptImplicitNonce>;

        $i4 = lengthof r4;

        $i5 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int nonce_explicit_length>;

        $i4 = $i4 + $i5;

        r4 = newarray (byte)[$i4];

        r2 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] encryptImplicitNonce>;

        $r6 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] encryptImplicitNonce>;

        $i4 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r4, 0, $i4);

        r2 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] encryptImplicitNonce>;

        $i4 = lengthof r2;

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint64(long,byte[],int)>($l0, r4, $i4);

        $r7 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher encryptCipher>;

        $i4 = interfaceinvoke $r7.<org.spongycastle.crypto.modes.AEADBlockCipher: int getOutputSize(int)>($i3);

        $i5 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int nonce_explicit_length>;

        $i4 = $i5 + $i4;

        r2 = newarray (byte)[$i4];

        $r6 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] encryptImplicitNonce>;

        $i4 = lengthof $r6;

        $i5 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int nonce_explicit_length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, $i4, r2, 0, $i5);

        $i4 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int nonce_explicit_length>;

        $r6 = virtualinvoke r0.<org.spongycastle.crypto.tls.TlsAEADCipher: byte[] getAdditionalData(long,short,int)>($l0, $s1, $i3);

        r5 = new org.spongycastle.crypto.params.AEADParameters;

        $i5 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int macSize>;

        $i5 = $i5 * 8;

        specialinvoke r5.<org.spongycastle.crypto.params.AEADParameters: void <init>(org.spongycastle.crypto.params.KeyParameter,int,byte[],byte[])>(null, $i5, r4, $r6);

     label1:
        $r7 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher encryptCipher>;

        interfaceinvoke $r7.<org.spongycastle.crypto.modes.AEADBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, r5);

        $r7 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher encryptCipher>;

        $i2 = interfaceinvoke $r7.<org.spongycastle.crypto.modes.AEADBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r1, $i2, $i3, r2, $i4);

     label2:
        $i2 = $i4 + $i2;

     label3:
        $r7 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.modes.AEADBlockCipher encryptCipher>;

        $i3 = interfaceinvoke $r7.<org.spongycastle.crypto.modes.AEADBlockCipher: int doFinal(byte[],int)>(r2, $i2);

     label4:
        $i2 = $i2 + $i3;

        $i3 = lengthof r2;

        if $i2 == $i3 goto label6;

        $r8 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r8.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short)>(80);

        throw $r8;

     label5:
        r3 := @caughtexception;

        $r8 = new org.spongycastle.crypto.tls.TlsFatalAlert;

        specialinvoke $r8.<org.spongycastle.crypto.tls.TlsFatalAlert: void <init>(short,java.lang.Throwable)>(80, r3);

        throw $r8;

     label6:
        return r2;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    protected byte[] getAdditionalData(long, short, int) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.TlsAEADCipher r0;
        long $l0;
        short $s1;
        int $i2;
        byte[] r1;
        org.spongycastle.crypto.tls.ProtocolVersion $r2;
        org.spongycastle.crypto.tls.TlsContext $r3;

        r0 := @this: org.spongycastle.crypto.tls.TlsAEADCipher;

        $l0 := @parameter0: long;

        $s1 := @parameter1: short;

        $i2 := @parameter2: int;

        r1 = newarray (byte)[13];

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint64(long,byte[],int)>($l0, r1, 0);

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint8(short,byte[],int)>($s1, r1, 8);

        $r3 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: org.spongycastle.crypto.tls.TlsContext context>;

        $r2 = interfaceinvoke $r3.<org.spongycastle.crypto.tls.TlsContext: org.spongycastle.crypto.tls.ProtocolVersion getServerVersion()>();

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeVersion(org.spongycastle.crypto.tls.ProtocolVersion,byte[],int)>($r2, r1, 9);

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint16(int,byte[],int)>($i2, r1, 11);

        return r1;
    }
    public int getPlaintextLimit(int)
    {
        org.spongycastle.crypto.tls.TlsAEADCipher r0;
        int $i0, $i1;

        r0 := @this: org.spongycastle.crypto.tls.TlsAEADCipher;

        $i0 := @parameter0: int;

        $i1 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int macSize>;

        $i1 = $i0 - $i1;

        $i0 = r0.<org.spongycastle.crypto.tls.TlsAEADCipher: int nonce_explicit_length>;

        $i0 = $i1 - $i0;

        return $i0;
    }
