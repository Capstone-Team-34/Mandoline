org.spongycastle.crypto.tls.DTLSReliableHandshake$1 extends java.lang.Object implements org.spongycastle.crypto.tls.DTLSHandshakeRetransmit
final org.spongycastle.crypto.tls.DTLSReliableHandshake this$0
    void <init>(org.spongycastle.crypto.tls.DTLSReliableHandshake)
    {
        org.spongycastle.crypto.tls.DTLSReliableHandshake$1 r0;
        org.spongycastle.crypto.tls.DTLSReliableHandshake $r1;

        r0 := @this: org.spongycastle.crypto.tls.DTLSReliableHandshake$1;

        $r1 := @parameter0: org.spongycastle.crypto.tls.DTLSReliableHandshake;

        r0.<org.spongycastle.crypto.tls.DTLSReliableHandshake$1: org.spongycastle.crypto.tls.DTLSReliableHandshake this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void receivedHandshakeRecord(int, byte[], int, int) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.DTLSReliableHandshake$1 r0;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        byte[] $r1;
        org.spongycastle.crypto.tls.DTLSReliableHandshake $r2;
        short $s5;
        java.util.Hashtable $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        org.spongycastle.crypto.tls.DTLSReassembler r6;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.tls.DTLSReliableHandshake$1;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        if $i2 >= 12 goto label1;

        return;

     label1:
        $i3 = $i1 + 9;

        $i3 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: int readUint24(byte[],int)>($r1, $i3);

        $i4 = $i3 + 12;

        if $i2 != $i4 goto label4;

        $i2 = $i1 + 4;

        $i2 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: int readUint16(byte[],int)>($r1, $i2);

        $r2 = r0.<org.spongycastle.crypto.tls.DTLSReliableHandshake$1: org.spongycastle.crypto.tls.DTLSReliableHandshake this$0>;

        $i4 = staticinvoke <org.spongycastle.crypto.tls.DTLSReliableHandshake: int access$100(org.spongycastle.crypto.tls.DTLSReliableHandshake)>($r2);

        if $i2 >= $i4 goto label4;

        $s5 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: short readUint8(byte[],int)>($r1, $i1);

        if $s5 != 20 goto label3;

        $i4 = 1;

     label2:
        if $i0 != $i4 goto label4;

        $i0 = $i1 + 1;

        $i0 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: int readUint24(byte[],int)>($r1, $i0);

        $i4 = $i1 + 6;

        $i4 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: int readUint24(byte[],int)>($r1, $i4);

        $i6 = $i4 + $i3;

        if $i6 > $i0 goto label4;

        $r2 = r0.<org.spongycastle.crypto.tls.DTLSReliableHandshake$1: org.spongycastle.crypto.tls.DTLSReliableHandshake this$0>;

        $r3 = staticinvoke <org.spongycastle.crypto.tls.DTLSReliableHandshake: java.util.Hashtable access$200(org.spongycastle.crypto.tls.DTLSReliableHandshake)>($r2);

        $r4 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>($i2);

        $r5 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (org.spongycastle.crypto.tls.DTLSReassembler) $r5;

        if r6 == null goto label4;

        $i1 = $i1 + 12;

        virtualinvoke r6.<org.spongycastle.crypto.tls.DTLSReassembler: void contributeFragment(short,int,byte[],int,int,int)>($s5, $i0, $r1, $i1, $i4, $i3);

        $r2 = r0.<org.spongycastle.crypto.tls.DTLSReliableHandshake$1: org.spongycastle.crypto.tls.DTLSReliableHandshake this$0>;

        $r3 = staticinvoke <org.spongycastle.crypto.tls.DTLSReliableHandshake: java.util.Hashtable access$200(org.spongycastle.crypto.tls.DTLSReliableHandshake)>($r2);

        $z0 = staticinvoke <org.spongycastle.crypto.tls.DTLSReliableHandshake: boolean access$300(java.util.Hashtable)>($r3);

        if $z0 == 0 goto label4;

        $r2 = r0.<org.spongycastle.crypto.tls.DTLSReliableHandshake$1: org.spongycastle.crypto.tls.DTLSReliableHandshake this$0>;

        staticinvoke <org.spongycastle.crypto.tls.DTLSReliableHandshake: void access$400(org.spongycastle.crypto.tls.DTLSReliableHandshake)>($r2);

        $r2 = r0.<org.spongycastle.crypto.tls.DTLSReliableHandshake$1: org.spongycastle.crypto.tls.DTLSReliableHandshake this$0>;

        $r3 = staticinvoke <org.spongycastle.crypto.tls.DTLSReliableHandshake: java.util.Hashtable access$200(org.spongycastle.crypto.tls.DTLSReliableHandshake)>($r2);

        staticinvoke <org.spongycastle.crypto.tls.DTLSReliableHandshake: void access$500(java.util.Hashtable)>($r3);

        return;

     label3:
        $i4 = 0;

        goto label2;

     label4:
        return;
    }
