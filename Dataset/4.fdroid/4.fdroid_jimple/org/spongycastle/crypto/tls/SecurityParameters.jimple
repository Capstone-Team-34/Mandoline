org.spongycastle.crypto.tls.SecurityParameters extends java.lang.Object
int cipherSuite
byte[] clientRandom
short compressionAlgorithm
boolean encryptThenMAC
int entity
boolean extendedMasterSecret
byte[] masterSecret
short maxFragmentLength
int prfAlgorithm
byte[] pskIdentity
byte[] serverRandom
byte[] sessionHash
byte[] srpIdentity
boolean truncatedHMac
int verifyDataLength
    public void <init>()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.tls.SecurityParameters: int entity> = -1;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: int cipherSuite> = -1;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: short compressionAlgorithm> = 0;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: int prfAlgorithm> = -1;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: int verifyDataLength> = -1;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] masterSecret> = null;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] clientRandom> = null;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] serverRandom> = null;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] sessionHash> = null;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] pskIdentity> = null;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] srpIdentity> = null;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: short maxFragmentLength> = -1;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: boolean truncatedHMac> = 0;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: boolean encryptThenMAC> = 0;

        r0.<org.spongycastle.crypto.tls.SecurityParameters: boolean extendedMasterSecret> = 0;

        return;
    }
    void clear()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        $r1 = r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] masterSecret>;

        if $r1 == null goto label1;

        $r1 = r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] masterSecret>;

        staticinvoke <org.spongycastle.util.Arrays: void fill(byte[],byte)>($r1, 0);

        r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] masterSecret> = null;

     label1:
        return;
    }
    public int getCipherSuite()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;
        int i0;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        i0 = r0.<org.spongycastle.crypto.tls.SecurityParameters: int cipherSuite>;

        return i0;
    }
    public byte[] getClientRandom()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        r1 = r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] clientRandom>;

        return r1;
    }
    public short getCompressionAlgorithm()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;
        short s0;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        s0 = r0.<org.spongycastle.crypto.tls.SecurityParameters: short compressionAlgorithm>;

        return s0;
    }
    public int getEntity()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;
        int i0;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        i0 = r0.<org.spongycastle.crypto.tls.SecurityParameters: int entity>;

        return i0;
    }
    public byte[] getMasterSecret()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        r1 = r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] masterSecret>;

        return r1;
    }
    public byte[] getPSKIdentity()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        r1 = r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] pskIdentity>;

        return r1;
    }
    public int getPrfAlgorithm()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;
        int i0;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        i0 = r0.<org.spongycastle.crypto.tls.SecurityParameters: int prfAlgorithm>;

        return i0;
    }
    public byte[] getPskIdentity()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        r1 = r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] pskIdentity>;

        return r1;
    }
    public byte[] getSRPIdentity()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        r1 = r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] srpIdentity>;

        return r1;
    }
    public byte[] getServerRandom()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        r1 = r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] serverRandom>;

        return r1;
    }
    public byte[] getSessionHash()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        r1 = r0.<org.spongycastle.crypto.tls.SecurityParameters: byte[] sessionHash>;

        return r1;
    }
    public int getVerifyDataLength()
    {
        org.spongycastle.crypto.tls.SecurityParameters r0;
        int i0;

        r0 := @this: org.spongycastle.crypto.tls.SecurityParameters;

        i0 = r0.<org.spongycastle.crypto.tls.SecurityParameters: int verifyDataLength>;

        return i0;
    }
