org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager extends java.lang.Object implements org.spongycastle.crypto.tls.TlsSRPIdentityManager
private static final byte[] PREFIX_PASSWORD
private static final byte[] PREFIX_SALT
protected org.spongycastle.crypto.params.SRP6GroupParameters group
protected org.spongycastle.crypto.Mac mac
protected org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator verifierGenerator
    static void <clinit>()
    {
        byte[] $r0;

        $r0 = staticinvoke <org.spongycastle.util.Strings: byte[] toByteArray(java.lang.String)>("password");

        <org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: byte[] PREFIX_PASSWORD> = $r0;

        $r0 = staticinvoke <org.spongycastle.util.Strings: byte[] toByteArray(java.lang.String)>("salt");

        <org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: byte[] PREFIX_SALT> = $r0;

        return;
    }
    public void <init>(org.spongycastle.crypto.params.SRP6GroupParameters, org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator, org.spongycastle.crypto.Mac)
    {
        org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager r0;
        org.spongycastle.crypto.params.SRP6GroupParameters $r1;
        org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator $r2;
        org.spongycastle.crypto.Mac $r3;

        r0 := @this: org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager;

        $r1 := @parameter0: org.spongycastle.crypto.params.SRP6GroupParameters;

        $r2 := @parameter1: org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator;

        $r3 := @parameter2: org.spongycastle.crypto.Mac;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: org.spongycastle.crypto.params.SRP6GroupParameters group> = $r1;

        r0.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator verifierGenerator> = $r2;

        r0.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: org.spongycastle.crypto.Mac mac> = $r3;

        return;
    }
    public static org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager getRFC5054Default(org.spongycastle.crypto.params.SRP6GroupParameters, byte[])
    {
        org.spongycastle.crypto.params.SRP6GroupParameters $r0;
        byte[] $r1;
        org.spongycastle.crypto.macs.HMac r2;
        org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator r3;
        org.spongycastle.crypto.Digest $r4;
        org.spongycastle.crypto.params.KeyParameter $r5;
        org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager $r6;

        $r0 := @parameter0: org.spongycastle.crypto.params.SRP6GroupParameters;

        $r1 := @parameter1: byte[];

        r3 = new org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator;

        specialinvoke r3.<org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator: void <init>()>();

        $r4 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: org.spongycastle.crypto.Digest createHash(short)>(2);

        virtualinvoke r3.<org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator: void init(org.spongycastle.crypto.params.SRP6GroupParameters,org.spongycastle.crypto.Digest)>($r0, $r4);

        r2 = new org.spongycastle.crypto.macs.HMac;

        $r4 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: org.spongycastle.crypto.Digest createHash(short)>(2);

        specialinvoke r2.<org.spongycastle.crypto.macs.HMac: void <init>(org.spongycastle.crypto.Digest)>($r4);

        $r5 = new org.spongycastle.crypto.params.KeyParameter;

        specialinvoke $r5.<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[])>($r1);

        virtualinvoke r2.<org.spongycastle.crypto.macs.HMac: void init(org.spongycastle.crypto.CipherParameters)>($r5);

        $r6 = new org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager;

        specialinvoke $r6.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: void <init>(org.spongycastle.crypto.params.SRP6GroupParameters,org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator,org.spongycastle.crypto.Mac)>($r0, r3, r2);

        return $r6;
    }
    public org.spongycastle.crypto.tls.TlsSRPLoginParameters getLoginParameters(byte[])
    {
        org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager r0;
        byte[] $r1, r2, r3, $r5;
        org.spongycastle.crypto.Mac $r4;
        int $i0;
        org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator $r6;
        java.math.BigInteger $r7;
        org.spongycastle.crypto.tls.TlsSRPLoginParameters $r8;
        org.spongycastle.crypto.params.SRP6GroupParameters $r9;

        r0 := @this: org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager;

        $r1 := @parameter0: byte[];

        $r4 = r0.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: org.spongycastle.crypto.Mac mac>;

        r3 = <org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: byte[] PREFIX_SALT>;

        r2 = <org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: byte[] PREFIX_SALT>;

        $i0 = lengthof r2;

        interfaceinvoke $r4.<org.spongycastle.crypto.Mac: void update(byte[],int,int)>(r3, 0, $i0);

        $r4 = r0.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: org.spongycastle.crypto.Mac mac>;

        $i0 = lengthof $r1;

        interfaceinvoke $r4.<org.spongycastle.crypto.Mac: void update(byte[],int,int)>($r1, 0, $i0);

        $r4 = r0.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: org.spongycastle.crypto.Mac mac>;

        $i0 = interfaceinvoke $r4.<org.spongycastle.crypto.Mac: int getMacSize()>();

        r3 = newarray (byte)[$i0];

        $r4 = r0.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: org.spongycastle.crypto.Mac mac>;

        interfaceinvoke $r4.<org.spongycastle.crypto.Mac: int doFinal(byte[],int)>(r3, 0);

        $r4 = r0.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: org.spongycastle.crypto.Mac mac>;

        r2 = <org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: byte[] PREFIX_PASSWORD>;

        $r5 = <org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: byte[] PREFIX_PASSWORD>;

        $i0 = lengthof $r5;

        interfaceinvoke $r4.<org.spongycastle.crypto.Mac: void update(byte[],int,int)>(r2, 0, $i0);

        $r4 = r0.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: org.spongycastle.crypto.Mac mac>;

        $i0 = lengthof $r1;

        interfaceinvoke $r4.<org.spongycastle.crypto.Mac: void update(byte[],int,int)>($r1, 0, $i0);

        $r4 = r0.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: org.spongycastle.crypto.Mac mac>;

        $i0 = interfaceinvoke $r4.<org.spongycastle.crypto.Mac: int getMacSize()>();

        r2 = newarray (byte)[$i0];

        $r4 = r0.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: org.spongycastle.crypto.Mac mac>;

        interfaceinvoke $r4.<org.spongycastle.crypto.Mac: int doFinal(byte[],int)>(r2, 0);

        $r6 = r0.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator verifierGenerator>;

        $r7 = virtualinvoke $r6.<org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator: java.math.BigInteger generateVerifier(byte[],byte[],byte[])>(r3, $r1, r2);

        $r8 = new org.spongycastle.crypto.tls.TlsSRPLoginParameters;

        $r9 = r0.<org.spongycastle.crypto.tls.SimulatedTlsSRPIdentityManager: org.spongycastle.crypto.params.SRP6GroupParameters group>;

        specialinvoke $r8.<org.spongycastle.crypto.tls.TlsSRPLoginParameters: void <init>(org.spongycastle.crypto.params.SRP6GroupParameters,java.math.BigInteger,byte[])>($r9, $r7, r3);

        return $r8;
    }
