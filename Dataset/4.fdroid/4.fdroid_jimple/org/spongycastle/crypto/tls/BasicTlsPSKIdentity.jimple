org.spongycastle.crypto.tls.BasicTlsPSKIdentity extends java.lang.Object implements org.spongycastle.crypto.tls.TlsPSKIdentity
protected byte[] identity
protected byte[] psk
    public void <init>(java.lang.String, byte[])
    {
        org.spongycastle.crypto.tls.BasicTlsPSKIdentity r0;
        java.lang.String $r1;
        byte[] $r2, $r3;

        r0 := @this: org.spongycastle.crypto.tls.BasicTlsPSKIdentity;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <org.spongycastle.util.Strings: byte[] toUTF8ByteArray(java.lang.String)>($r1);

        r0.<org.spongycastle.crypto.tls.BasicTlsPSKIdentity: byte[] identity> = $r3;

        $r2 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r2);

        r0.<org.spongycastle.crypto.tls.BasicTlsPSKIdentity: byte[] psk> = $r2;

        return;
    }
    public void <init>(byte[], byte[])
    {
        org.spongycastle.crypto.tls.BasicTlsPSKIdentity r0;
        byte[] $r1, $r2;

        r0 := @this: org.spongycastle.crypto.tls.BasicTlsPSKIdentity;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        r0.<org.spongycastle.crypto.tls.BasicTlsPSKIdentity: byte[] identity> = $r1;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r2);

        r0.<org.spongycastle.crypto.tls.BasicTlsPSKIdentity: byte[] psk> = $r1;

        return;
    }
    public byte[] getPSK()
    {
        org.spongycastle.crypto.tls.BasicTlsPSKIdentity r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.tls.BasicTlsPSKIdentity;

        r1 = r0.<org.spongycastle.crypto.tls.BasicTlsPSKIdentity: byte[] psk>;

        return r1;
    }
    public byte[] getPSKIdentity()
    {
        org.spongycastle.crypto.tls.BasicTlsPSKIdentity r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.tls.BasicTlsPSKIdentity;

        r1 = r0.<org.spongycastle.crypto.tls.BasicTlsPSKIdentity: byte[] identity>;

        return r1;
    }
    public void notifyIdentityHint(byte[])
    {
        org.spongycastle.crypto.tls.BasicTlsPSKIdentity r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.tls.BasicTlsPSKIdentity;

        $r1 := @parameter0: byte[];

        return;
    }
    public void skipIdentityHint()
    {
        org.spongycastle.crypto.tls.BasicTlsPSKIdentity r0;

        r0 := @this: org.spongycastle.crypto.tls.BasicTlsPSKIdentity;

        return;
    }
