org.spongycastle.crypto.tls.TlsClient extends java.lang.Object implements org.spongycastle.crypto.tls.TlsPeer
public abstract org.spongycastle.crypto.tls.TlsAuthentication getAuthentication() throws java.io.IOException { 
// no body
} 
public abstract int[] getCipherSuites() { 
// no body
} 
public abstract java.util.Hashtable getClientExtensions() throws java.io.IOException { 
// no body
} 
public abstract org.spongycastle.crypto.tls.ProtocolVersion getClientHelloRecordLayerVersion() { 
// no body
} 
public abstract java.util.Vector getClientSupplementalData() throws java.io.IOException { 
// no body
} 
public abstract org.spongycastle.crypto.tls.ProtocolVersion getClientVersion() { 
// no body
} 
public abstract short[] getCompressionMethods() { 
// no body
} 
public abstract org.spongycastle.crypto.tls.TlsKeyExchange getKeyExchange() throws java.io.IOException { 
// no body
} 
public abstract org.spongycastle.crypto.tls.TlsSession getSessionToResume() { 
// no body
} 
public abstract void init(org.spongycastle.crypto.tls.TlsClientContext) { 
// no body
} 
public abstract boolean isFallback() { 
// no body
} 
public abstract void notifyNewSessionTicket(org.spongycastle.crypto.tls.NewSessionTicket) throws java.io.IOException { 
// no body
} 
public abstract void notifySelectedCipherSuite(int) { 
// no body
} 
public abstract void notifySelectedCompressionMethod(short) { 
// no body
} 
public abstract void notifyServerVersion(org.spongycastle.crypto.tls.ProtocolVersion) throws java.io.IOException { 
// no body
} 
public abstract void notifySessionID(byte[]) { 
// no body
} 
public abstract void processServerExtensions(java.util.Hashtable) throws java.io.IOException { 
// no body
} 
public abstract void processServerSupplementalData(java.util.Vector) throws java.io.IOException { 
// no body
} 
