org.spongycastle.crypto.tls.OCSPStatusRequest extends java.lang.Object
protected org.spongycastle.asn1.x509.Extensions requestExtensions
protected java.util.Vector responderIDList
    public void <init>(java.util.Vector, org.spongycastle.asn1.x509.Extensions)
    {
        org.spongycastle.crypto.tls.OCSPStatusRequest r0;
        java.util.Vector $r1;
        org.spongycastle.asn1.x509.Extensions $r2;

        r0 := @this: org.spongycastle.crypto.tls.OCSPStatusRequest;

        $r1 := @parameter0: java.util.Vector;

        $r2 := @parameter1: org.spongycastle.asn1.x509.Extensions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.tls.OCSPStatusRequest: java.util.Vector responderIDList> = $r1;

        r0.<org.spongycastle.crypto.tls.OCSPStatusRequest: org.spongycastle.asn1.x509.Extensions requestExtensions> = $r2;

        return;
    }
    public static org.spongycastle.crypto.tls.OCSPStatusRequest parse(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.io.ByteArrayInputStream r1;
        java.util.Vector r2;
        int $i0;
        byte[] $r3;
        org.spongycastle.asn1.ASN1Primitive $r4;
        org.spongycastle.asn1.ocsp.ResponderID $r5;
        org.spongycastle.asn1.x509.Extensions r6;
        org.spongycastle.crypto.tls.OCSPStatusRequest $r7;

        $r0 := @parameter0: java.io.InputStream;

        r2 = new java.util.Vector;

        specialinvoke r2.<java.util.Vector: void <init>()>();

        $i0 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: int readUint16(java.io.InputStream)>($r0);

        if $i0 <= 0 goto label2;

        $r3 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: byte[] readFully(int,java.io.InputStream)>($i0, $r0);

        r1 = new java.io.ByteArrayInputStream;

        specialinvoke r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

     label1:
        $r3 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: byte[] readOpaque16(java.io.InputStream)>(r1);

        $r4 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: org.spongycastle.asn1.ASN1Primitive readDERObject(byte[])>($r3);

        $r5 = staticinvoke <org.spongycastle.asn1.ocsp.ResponderID: org.spongycastle.asn1.ocsp.ResponderID getInstance(java.lang.Object)>($r4);

        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $i0 = virtualinvoke r1.<java.io.ByteArrayInputStream: int available()>();

        if $i0 > 0 goto label1;

     label2:
        r6 = null;

        $i0 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: int readUint16(java.io.InputStream)>($r0);

        if $i0 <= 0 goto label3;

        $r3 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: byte[] readFully(int,java.io.InputStream)>($i0, $r0);

        $r4 = staticinvoke <org.spongycastle.crypto.tls.TlsUtils: org.spongycastle.asn1.ASN1Primitive readDERObject(byte[])>($r3);

        r6 = staticinvoke <org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extensions getInstance(java.lang.Object)>($r4);

     label3:
        $r7 = new org.spongycastle.crypto.tls.OCSPStatusRequest;

        specialinvoke $r7.<org.spongycastle.crypto.tls.OCSPStatusRequest: void <init>(java.util.Vector,org.spongycastle.asn1.x509.Extensions)>(r2, r6);

        return $r7;
    }
    public void encode(java.io.OutputStream) throws java.io.IOException
    {
        org.spongycastle.crypto.tls.OCSPStatusRequest r0;
        java.io.OutputStream $r1;
        java.io.ByteArrayOutputStream r2;
        java.util.Vector $r3;
        boolean $z0;
        org.spongycastle.asn1.x509.Extensions $r4;
        int i0, $i1;
        java.lang.Object $r5;
        org.spongycastle.asn1.ocsp.ResponderID r6;
        byte[] $r7;

        r0 := @this: org.spongycastle.crypto.tls.OCSPStatusRequest;

        $r1 := @parameter0: java.io.OutputStream;

        $r3 = r0.<org.spongycastle.crypto.tls.OCSPStatusRequest: java.util.Vector responderIDList>;

        if $r3 == null goto label1;

        $r3 = r0.<org.spongycastle.crypto.tls.OCSPStatusRequest: java.util.Vector responderIDList>;

        $z0 = virtualinvoke $r3.<java.util.Vector: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label1:
        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint16(int,java.io.OutputStream)>(0, $r1);

     label2:
        $r4 = r0.<org.spongycastle.crypto.tls.OCSPStatusRequest: org.spongycastle.asn1.x509.Extensions requestExtensions>;

        if $r4 != null goto label6;

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint16(int,java.io.OutputStream)>(0, $r1);

        return;

     label3:
        r2 = new java.io.ByteArrayOutputStream;

        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>()>();

        i0 = 0;

     label4:
        $r3 = r0.<org.spongycastle.crypto.tls.OCSPStatusRequest: java.util.Vector responderIDList>;

        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if i0 >= $i1 goto label5;

        $r3 = r0.<org.spongycastle.crypto.tls.OCSPStatusRequest: java.util.Vector responderIDList>;

        $r5 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        r6 = (org.spongycastle.asn1.ocsp.ResponderID) $r5;

        $r7 = virtualinvoke r6.<org.spongycastle.asn1.ocsp.ResponderID: byte[] getEncoded(java.lang.String)>("DER");

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeOpaque16(byte[],java.io.OutputStream)>($r7, r2);

        i0 = i0 + 1;

        goto label4;

     label5:
        i0 = virtualinvoke r2.<java.io.ByteArrayOutputStream: int size()>();

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void checkUint16(int)>(i0);

        i0 = virtualinvoke r2.<java.io.ByteArrayOutputStream: int size()>();

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint16(int,java.io.OutputStream)>(i0, $r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>($r1);

        goto label2;

     label6:
        $r4 = r0.<org.spongycastle.crypto.tls.OCSPStatusRequest: org.spongycastle.asn1.x509.Extensions requestExtensions>;

        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.x509.Extensions: byte[] getEncoded(java.lang.String)>("DER");

        i0 = lengthof $r7;

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void checkUint16(int)>(i0);

        i0 = lengthof $r7;

        staticinvoke <org.spongycastle.crypto.tls.TlsUtils: void writeUint16(int,java.io.OutputStream)>(i0, $r1);

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r7);

        return;
    }
    public org.spongycastle.asn1.x509.Extensions getRequestExtensions()
    {
        org.spongycastle.crypto.tls.OCSPStatusRequest r0;
        org.spongycastle.asn1.x509.Extensions r1;

        r0 := @this: org.spongycastle.crypto.tls.OCSPStatusRequest;

        r1 = r0.<org.spongycastle.crypto.tls.OCSPStatusRequest: org.spongycastle.asn1.x509.Extensions requestExtensions>;

        return r1;
    }
    public java.util.Vector getResponderIDList()
    {
        org.spongycastle.crypto.tls.OCSPStatusRequest r0;
        java.util.Vector r1;

        r0 := @this: org.spongycastle.crypto.tls.OCSPStatusRequest;

        r1 = r0.<org.spongycastle.crypto.tls.OCSPStatusRequest: java.util.Vector responderIDList>;

        return r1;
    }
