org.spongycastle.crypto.ec.ECPair extends java.lang.Object
private final org.spongycastle.math.ec.ECPoint x
private final org.spongycastle.math.ec.ECPoint y
    public void <init>(org.spongycastle.math.ec.ECPoint, org.spongycastle.math.ec.ECPoint)
    {
        org.spongycastle.crypto.ec.ECPair r0;
        org.spongycastle.math.ec.ECPoint $r1, $r2;

        r0 := @this: org.spongycastle.crypto.ec.ECPair;

        $r1 := @parameter0: org.spongycastle.math.ec.ECPoint;

        $r2 := @parameter1: org.spongycastle.math.ec.ECPoint;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.ec.ECPair: org.spongycastle.math.ec.ECPoint x> = $r1;

        r0.<org.spongycastle.crypto.ec.ECPair: org.spongycastle.math.ec.ECPoint y> = $r2;

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.crypto.ec.ECPair r0, r2;
        boolean $z0;
        java.lang.Object r1;

        r0 := @this: org.spongycastle.crypto.ec.ECPair;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.spongycastle.crypto.ec.ECPair;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.crypto.ec.ECPair) r1;

        $z0 = virtualinvoke r0.<org.spongycastle.crypto.ec.ECPair: boolean equals(org.spongycastle.crypto.ec.ECPair)>(r2);

        return $z0;

     label1:
        return 0;
    }
    public boolean equals(org.spongycastle.crypto.ec.ECPair)
    {
        org.spongycastle.crypto.ec.ECPair r0, $r1;
        org.spongycastle.math.ec.ECPoint $r2, $r3;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.ec.ECPair;

        $r1 := @parameter0: org.spongycastle.crypto.ec.ECPair;

        $r2 = virtualinvoke $r1.<org.spongycastle.crypto.ec.ECPair: org.spongycastle.math.ec.ECPoint getX()>();

        $r3 = virtualinvoke r0.<org.spongycastle.crypto.ec.ECPair: org.spongycastle.math.ec.ECPoint getX()>();

        $z0 = virtualinvoke $r2.<org.spongycastle.math.ec.ECPoint: boolean equals(org.spongycastle.math.ec.ECPoint)>($r3);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<org.spongycastle.crypto.ec.ECPair: org.spongycastle.math.ec.ECPoint getY()>();

        $r3 = virtualinvoke r0.<org.spongycastle.crypto.ec.ECPair: org.spongycastle.math.ec.ECPoint getY()>();

        $z0 = virtualinvoke $r2.<org.spongycastle.math.ec.ECPoint: boolean equals(org.spongycastle.math.ec.ECPoint)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public org.spongycastle.math.ec.ECPoint getX()
    {
        org.spongycastle.crypto.ec.ECPair r0;
        org.spongycastle.math.ec.ECPoint r1;

        r0 := @this: org.spongycastle.crypto.ec.ECPair;

        r1 = r0.<org.spongycastle.crypto.ec.ECPair: org.spongycastle.math.ec.ECPoint x>;

        return r1;
    }
    public org.spongycastle.math.ec.ECPoint getY()
    {
        org.spongycastle.crypto.ec.ECPair r0;
        org.spongycastle.math.ec.ECPoint r1;

        r0 := @this: org.spongycastle.crypto.ec.ECPair;

        r1 = r0.<org.spongycastle.crypto.ec.ECPair: org.spongycastle.math.ec.ECPoint y>;

        return r1;
    }
    public int hashCode()
    {
        org.spongycastle.crypto.ec.ECPair r0;
        org.spongycastle.math.ec.ECPoint $r1;
        int $i0, $i1;

        r0 := @this: org.spongycastle.crypto.ec.ECPair;

        $r1 = r0.<org.spongycastle.crypto.ec.ECPair: org.spongycastle.math.ec.ECPoint x>;

        $i0 = virtualinvoke $r1.<org.spongycastle.math.ec.ECPoint: int hashCode()>();

        $r1 = r0.<org.spongycastle.crypto.ec.ECPair: org.spongycastle.math.ec.ECPoint y>;

        $i1 = virtualinvoke $r1.<org.spongycastle.math.ec.ECPoint: int hashCode()>();

        $i1 = $i1 * 37;

        $i0 = $i0 + $i1;

        return $i0;
    }
