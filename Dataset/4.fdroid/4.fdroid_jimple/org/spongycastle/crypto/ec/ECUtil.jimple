org.spongycastle.crypto.ec.ECUtil extends java.lang.Object
    void <init>()
    {
        org.spongycastle.crypto.ec.ECUtil r0;

        r0 := @this: org.spongycastle.crypto.ec.ECUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static java.math.BigInteger generateK(java.math.BigInteger, java.security.SecureRandom)
    {
        java.math.BigInteger $r0, r2, $r3;
        java.security.SecureRandom $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.math.BigInteger;

        $r1 := @parameter1: java.security.SecureRandom;

        $i0 = virtualinvoke $r0.<java.math.BigInteger: int bitLength()>();

     label1:
        r2 = new java.math.BigInteger;

        specialinvoke r2.<java.math.BigInteger: void <init>(int,java.util.Random)>($i0, $r1);

        $r3 = <org.spongycastle.math.ec.ECConstants: java.math.BigInteger ZERO>;

        $z0 = virtualinvoke r2.<java.math.BigInteger: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $i1 = virtualinvoke r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r0);

        if $i1 >= 0 goto label1;

        return r2;
    }
