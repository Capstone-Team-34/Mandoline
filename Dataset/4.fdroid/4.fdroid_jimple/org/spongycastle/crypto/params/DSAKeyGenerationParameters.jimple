org.spongycastle.crypto.params.DSAKeyGenerationParameters extends org.spongycastle.crypto.KeyGenerationParameters
private org.spongycastle.crypto.params.DSAParameters params
    public void <init>(java.security.SecureRandom, org.spongycastle.crypto.params.DSAParameters)
    {
        org.spongycastle.crypto.params.DSAKeyGenerationParameters r0;
        java.security.SecureRandom $r1;
        org.spongycastle.crypto.params.DSAParameters $r2;
        java.math.BigInteger $r3;
        int $i0;

        r0 := @this: org.spongycastle.crypto.params.DSAKeyGenerationParameters;

        $r1 := @parameter0: java.security.SecureRandom;

        $r2 := @parameter1: org.spongycastle.crypto.params.DSAParameters;

        $r3 = virtualinvoke $r2.<org.spongycastle.crypto.params.DSAParameters: java.math.BigInteger getP()>();

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int bitLength()>();

        $i0 = $i0 + -1;

        specialinvoke r0.<org.spongycastle.crypto.KeyGenerationParameters: void <init>(java.security.SecureRandom,int)>($r1, $i0);

        r0.<org.spongycastle.crypto.params.DSAKeyGenerationParameters: org.spongycastle.crypto.params.DSAParameters params> = $r2;

        return;
    }
    public org.spongycastle.crypto.params.DSAParameters getParameters()
    {
        org.spongycastle.crypto.params.DSAKeyGenerationParameters r0;
        org.spongycastle.crypto.params.DSAParameters r1;

        r0 := @this: org.spongycastle.crypto.params.DSAKeyGenerationParameters;

        r1 = r0.<org.spongycastle.crypto.params.DSAKeyGenerationParameters: org.spongycastle.crypto.params.DSAParameters params>;

        return r1;
    }
