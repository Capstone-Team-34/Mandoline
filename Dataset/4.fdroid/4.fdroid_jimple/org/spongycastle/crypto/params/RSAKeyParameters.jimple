org.spongycastle.crypto.params.RSAKeyParameters extends org.spongycastle.crypto.params.AsymmetricKeyParameter
private java.math.BigInteger exponent
private java.math.BigInteger modulus
    public void <init>(boolean, java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.crypto.params.RSAKeyParameters r0;
        boolean $z0;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.spongycastle.crypto.params.RSAKeyParameters;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.math.BigInteger;

        $r2 := @parameter2: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.crypto.params.AsymmetricKeyParameter: void <init>(boolean)>($z0);

        r0.<org.spongycastle.crypto.params.RSAKeyParameters: java.math.BigInteger modulus> = $r1;

        r0.<org.spongycastle.crypto.params.RSAKeyParameters: java.math.BigInteger exponent> = $r2;

        return;
    }
    public java.math.BigInteger getExponent()
    {
        org.spongycastle.crypto.params.RSAKeyParameters r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.crypto.params.RSAKeyParameters;

        r1 = r0.<org.spongycastle.crypto.params.RSAKeyParameters: java.math.BigInteger exponent>;

        return r1;
    }
    public java.math.BigInteger getModulus()
    {
        org.spongycastle.crypto.params.RSAKeyParameters r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.crypto.params.RSAKeyParameters;

        r1 = r0.<org.spongycastle.crypto.params.RSAKeyParameters: java.math.BigInteger modulus>;

        return r1;
    }
