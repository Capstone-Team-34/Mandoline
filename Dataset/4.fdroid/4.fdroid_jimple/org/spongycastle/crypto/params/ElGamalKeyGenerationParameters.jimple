org.spongycastle.crypto.params.ElGamalKeyGenerationParameters extends org.spongycastle.crypto.KeyGenerationParameters
private org.spongycastle.crypto.params.ElGamalParameters params
    public void <init>(java.security.SecureRandom, org.spongycastle.crypto.params.ElGamalParameters)
    {
        org.spongycastle.crypto.params.ElGamalKeyGenerationParameters r0;
        java.security.SecureRandom $r1;
        org.spongycastle.crypto.params.ElGamalParameters $r2;
        int $i0;

        r0 := @this: org.spongycastle.crypto.params.ElGamalKeyGenerationParameters;

        $r1 := @parameter0: java.security.SecureRandom;

        $r2 := @parameter1: org.spongycastle.crypto.params.ElGamalParameters;

        $i0 = staticinvoke <org.spongycastle.crypto.params.ElGamalKeyGenerationParameters: int getStrength(org.spongycastle.crypto.params.ElGamalParameters)>($r2);

        specialinvoke r0.<org.spongycastle.crypto.KeyGenerationParameters: void <init>(java.security.SecureRandom,int)>($r1, $i0);

        r0.<org.spongycastle.crypto.params.ElGamalKeyGenerationParameters: org.spongycastle.crypto.params.ElGamalParameters params> = $r2;

        return;
    }
    static int getStrength(org.spongycastle.crypto.params.ElGamalParameters)
    {
        org.spongycastle.crypto.params.ElGamalParameters $r0;
        int $i0;
        java.math.BigInteger $r1;

        $r0 := @parameter0: org.spongycastle.crypto.params.ElGamalParameters;

        $i0 = virtualinvoke $r0.<org.spongycastle.crypto.params.ElGamalParameters: int getL()>();

        if $i0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<org.spongycastle.crypto.params.ElGamalParameters: int getL()>();

        return $i0;

     label1:
        $r1 = virtualinvoke $r0.<org.spongycastle.crypto.params.ElGamalParameters: java.math.BigInteger getP()>();

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        return $i0;
    }
    public org.spongycastle.crypto.params.ElGamalParameters getParameters()
    {
        org.spongycastle.crypto.params.ElGamalKeyGenerationParameters r0;
        org.spongycastle.crypto.params.ElGamalParameters r1;

        r0 := @this: org.spongycastle.crypto.params.ElGamalKeyGenerationParameters;

        r1 = r0.<org.spongycastle.crypto.params.ElGamalKeyGenerationParameters: org.spongycastle.crypto.params.ElGamalParameters params>;

        return r1;
    }
