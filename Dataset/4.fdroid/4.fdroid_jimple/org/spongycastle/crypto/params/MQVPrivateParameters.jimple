org.spongycastle.crypto.params.MQVPrivateParameters extends java.lang.Object implements org.spongycastle.crypto.CipherParameters
private org.spongycastle.crypto.params.ECPrivateKeyParameters ephemeralPrivateKey
private org.spongycastle.crypto.params.ECPublicKeyParameters ephemeralPublicKey
private org.spongycastle.crypto.params.ECPrivateKeyParameters staticPrivateKey
    public void <init>(org.spongycastle.crypto.params.ECPrivateKeyParameters, org.spongycastle.crypto.params.ECPrivateKeyParameters)
    {
        org.spongycastle.crypto.params.MQVPrivateParameters r0;
        org.spongycastle.crypto.params.ECPrivateKeyParameters $r1, $r2;

        r0 := @this: org.spongycastle.crypto.params.MQVPrivateParameters;

        $r1 := @parameter0: org.spongycastle.crypto.params.ECPrivateKeyParameters;

        $r2 := @parameter1: org.spongycastle.crypto.params.ECPrivateKeyParameters;

        specialinvoke r0.<org.spongycastle.crypto.params.MQVPrivateParameters: void <init>(org.spongycastle.crypto.params.ECPrivateKeyParameters,org.spongycastle.crypto.params.ECPrivateKeyParameters,org.spongycastle.crypto.params.ECPublicKeyParameters)>($r1, $r2, null);

        return;
    }
    public void <init>(org.spongycastle.crypto.params.ECPrivateKeyParameters, org.spongycastle.crypto.params.ECPrivateKeyParameters, org.spongycastle.crypto.params.ECPublicKeyParameters)
    {
        org.spongycastle.crypto.params.MQVPrivateParameters r0;
        org.spongycastle.crypto.params.ECPrivateKeyParameters $r1, $r2;
        org.spongycastle.crypto.params.ECPublicKeyParameters $r3;

        r0 := @this: org.spongycastle.crypto.params.MQVPrivateParameters;

        $r1 := @parameter0: org.spongycastle.crypto.params.ECPrivateKeyParameters;

        $r2 := @parameter1: org.spongycastle.crypto.params.ECPrivateKeyParameters;

        $r3 := @parameter2: org.spongycastle.crypto.params.ECPublicKeyParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.params.MQVPrivateParameters: org.spongycastle.crypto.params.ECPrivateKeyParameters staticPrivateKey> = $r1;

        r0.<org.spongycastle.crypto.params.MQVPrivateParameters: org.spongycastle.crypto.params.ECPrivateKeyParameters ephemeralPrivateKey> = $r2;

        r0.<org.spongycastle.crypto.params.MQVPrivateParameters: org.spongycastle.crypto.params.ECPublicKeyParameters ephemeralPublicKey> = $r3;

        return;
    }
    public org.spongycastle.crypto.params.ECPrivateKeyParameters getEphemeralPrivateKey()
    {
        org.spongycastle.crypto.params.MQVPrivateParameters r0;
        org.spongycastle.crypto.params.ECPrivateKeyParameters r1;

        r0 := @this: org.spongycastle.crypto.params.MQVPrivateParameters;

        r1 = r0.<org.spongycastle.crypto.params.MQVPrivateParameters: org.spongycastle.crypto.params.ECPrivateKeyParameters ephemeralPrivateKey>;

        return r1;
    }
    public org.spongycastle.crypto.params.ECPublicKeyParameters getEphemeralPublicKey()
    {
        org.spongycastle.crypto.params.MQVPrivateParameters r0;
        org.spongycastle.crypto.params.ECPublicKeyParameters r1;

        r0 := @this: org.spongycastle.crypto.params.MQVPrivateParameters;

        r1 = r0.<org.spongycastle.crypto.params.MQVPrivateParameters: org.spongycastle.crypto.params.ECPublicKeyParameters ephemeralPublicKey>;

        return r1;
    }
    public org.spongycastle.crypto.params.ECPrivateKeyParameters getStaticPrivateKey()
    {
        org.spongycastle.crypto.params.MQVPrivateParameters r0;
        org.spongycastle.crypto.params.ECPrivateKeyParameters r1;

        r0 := @this: org.spongycastle.crypto.params.MQVPrivateParameters;

        r1 = r0.<org.spongycastle.crypto.params.MQVPrivateParameters: org.spongycastle.crypto.params.ECPrivateKeyParameters staticPrivateKey>;

        return r1;
    }
