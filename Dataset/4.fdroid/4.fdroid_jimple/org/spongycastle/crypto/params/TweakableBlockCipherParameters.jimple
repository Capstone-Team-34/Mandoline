org.spongycastle.crypto.params.TweakableBlockCipherParameters extends java.lang.Object implements org.spongycastle.crypto.CipherParameters
private final org.spongycastle.crypto.params.KeyParameter key
private final byte[] tweak
    public void <init>(org.spongycastle.crypto.params.KeyParameter, byte[])
    {
        org.spongycastle.crypto.params.TweakableBlockCipherParameters r0;
        org.spongycastle.crypto.params.KeyParameter $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.crypto.params.TweakableBlockCipherParameters;

        $r1 := @parameter0: org.spongycastle.crypto.params.KeyParameter;

        $r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.params.TweakableBlockCipherParameters: org.spongycastle.crypto.params.KeyParameter key> = $r1;

        $r2 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r2);

        r0.<org.spongycastle.crypto.params.TweakableBlockCipherParameters: byte[] tweak> = $r2;

        return;
    }
    public org.spongycastle.crypto.params.KeyParameter getKey()
    {
        org.spongycastle.crypto.params.TweakableBlockCipherParameters r0;
        org.spongycastle.crypto.params.KeyParameter r1;

        r0 := @this: org.spongycastle.crypto.params.TweakableBlockCipherParameters;

        r1 = r0.<org.spongycastle.crypto.params.TweakableBlockCipherParameters: org.spongycastle.crypto.params.KeyParameter key>;

        return r1;
    }
    public byte[] getTweak()
    {
        org.spongycastle.crypto.params.TweakableBlockCipherParameters r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.params.TweakableBlockCipherParameters;

        r1 = r0.<org.spongycastle.crypto.params.TweakableBlockCipherParameters: byte[] tweak>;

        return r1;
    }
