org.spongycastle.crypto.params.DHParameters extends java.lang.Object implements org.spongycastle.crypto.CipherParameters
private static final int DEFAULT_MINIMUM_LENGTH
private java.math.BigInteger g
private java.math.BigInteger j
private int l
private int m
private java.math.BigInteger p
private java.math.BigInteger q
private org.spongycastle.crypto.params.DHValidationParameters validation
    public void <init>(java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.crypto.params.DHParameters r0;
        java.math.BigInteger $r1, $r2;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int)>($r1, $r2, null, 0);

        return;
    }
    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.crypto.params.DHParameters r0;
        java.math.BigInteger $r1, $r2, $r3;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int)>($r1, $r2, $r3, 0);

        return;
    }
    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int)
    {
        org.spongycastle.crypto.params.DHParameters r0;
        java.math.BigInteger $r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: java.math.BigInteger;

        $i0 := @parameter3: int;

        $i1 = staticinvoke <org.spongycastle.crypto.params.DHParameters: int getDefaultMParam(int)>($i0);

        specialinvoke r0.<org.spongycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int,java.math.BigInteger,org.spongycastle.crypto.params.DHValidationParameters)>($r1, $r2, $r3, $i1, $i0, null, null);

        return;
    }
    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int, int)
    {
        org.spongycastle.crypto.params.DHParameters r0;
        java.math.BigInteger $r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: java.math.BigInteger;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        specialinvoke r0.<org.spongycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int,java.math.BigInteger,org.spongycastle.crypto.params.DHValidationParameters)>($r1, $r2, $r3, $i0, $i1, null, null);

        return;
    }
    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, int, int, java.math.BigInteger, org.spongycastle.crypto.params.DHValidationParameters)
    {
        org.spongycastle.crypto.params.DHParameters r0;
        java.math.BigInteger $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;
        org.spongycastle.crypto.params.DHValidationParameters $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: java.math.BigInteger;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 := @parameter5: java.math.BigInteger;

        $r5 := @parameter6: org.spongycastle.crypto.params.DHValidationParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i1 == 0 goto label2;

        $i2 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        if $i1 <= $i2 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("when l value specified, it must satisfy 2^(l-1) <= p");

        throw $r6;

     label1:
        if $i1 >= $i0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("when l value specified, it may not be less than m value");

        throw $r6;

     label2:
        r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger g> = $r2;

        r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger p> = $r1;

        r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger q> = $r3;

        r0.<org.spongycastle.crypto.params.DHParameters: int m> = $i0;

        r0.<org.spongycastle.crypto.params.DHParameters: int l> = $i1;

        r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger j> = $r4;

        r0.<org.spongycastle.crypto.params.DHParameters: org.spongycastle.crypto.params.DHValidationParameters validation> = $r5;

        return;
    }
    public void <init>(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.spongycastle.crypto.params.DHValidationParameters)
    {
        org.spongycastle.crypto.params.DHParameters r0;
        java.math.BigInteger $r1, $r2, $r3, $r4;
        org.spongycastle.crypto.params.DHValidationParameters $r5;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 := @parameter3: java.math.BigInteger;

        $r5 := @parameter4: org.spongycastle.crypto.params.DHValidationParameters;

        specialinvoke r0.<org.spongycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int,java.math.BigInteger,org.spongycastle.crypto.params.DHValidationParameters)>($r1, $r2, $r3, 160, 0, $r4, $r5);

        return;
    }
    private static int getDefaultMParam(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return 160;

     label1:
        if i0 >= 160 goto label3;

     label2:
        return i0;

     label3:
        i0 = 160;

        goto label2;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.crypto.params.DHParameters r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        java.math.BigInteger $r3, $r4;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.spongycastle.crypto.params.DHParameters;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.crypto.params.DHParameters) $r1;

        $r3 = virtualinvoke r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger getQ()>();

        if $r3 == null goto label3;

        $r3 = virtualinvoke r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger getQ()>();

        $r4 = virtualinvoke r2.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger getQ()>();

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

     label2:
        $r3 = virtualinvoke r2.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger getP()>();

        $r4 = r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger p>;

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke r2.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger getG()>();

        $r4 = r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger g>;

        $z0 = virtualinvoke $r3.<java.math.BigInteger: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        return 1;

     label3:
        $r3 = virtualinvoke r2.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger getQ()>();

        if $r3 == null goto label2;

     label4:
        return 0;
    }
    public java.math.BigInteger getG()
    {
        org.spongycastle.crypto.params.DHParameters r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        r1 = r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger g>;

        return r1;
    }
    public java.math.BigInteger getJ()
    {
        org.spongycastle.crypto.params.DHParameters r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        r1 = r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger j>;

        return r1;
    }
    public int getL()
    {
        org.spongycastle.crypto.params.DHParameters r0;
        int i0;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        i0 = r0.<org.spongycastle.crypto.params.DHParameters: int l>;

        return i0;
    }
    public int getM()
    {
        org.spongycastle.crypto.params.DHParameters r0;
        int i0;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        i0 = r0.<org.spongycastle.crypto.params.DHParameters: int m>;

        return i0;
    }
    public java.math.BigInteger getP()
    {
        org.spongycastle.crypto.params.DHParameters r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        r1 = r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger p>;

        return r1;
    }
    public java.math.BigInteger getQ()
    {
        org.spongycastle.crypto.params.DHParameters r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        r1 = r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger q>;

        return r1;
    }
    public org.spongycastle.crypto.params.DHValidationParameters getValidationParameters()
    {
        org.spongycastle.crypto.params.DHParameters r0;
        org.spongycastle.crypto.params.DHValidationParameters r1;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        r1 = r0.<org.spongycastle.crypto.params.DHParameters: org.spongycastle.crypto.params.DHValidationParameters validation>;

        return r1;
    }
    public int hashCode()
    {
        org.spongycastle.crypto.params.DHParameters r0;
        java.math.BigInteger $r1;
        int $i0, $i1;

        r0 := @this: org.spongycastle.crypto.params.DHParameters;

        $r1 = virtualinvoke r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger getP()>();

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $r1 = virtualinvoke r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger getG()>();

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

        $i0 = $i1 ^ $i0;

        $r1 = virtualinvoke r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger getQ()>();

        if $r1 == null goto label2;

        $r1 = virtualinvoke r0.<org.spongycastle.crypto.params.DHParameters: java.math.BigInteger getQ()>();

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int hashCode()>();

     label1:
        $i0 = $i1 ^ $i0;

        return $i0;

     label2:
        $i1 = 0;

        goto label1;
    }
