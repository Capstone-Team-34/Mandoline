org.spongycastle.crypto.params.MGFParameters extends java.lang.Object implements org.spongycastle.crypto.DerivationParameters
byte[] seed
    public void <init>(byte[])
    {
        org.spongycastle.crypto.params.MGFParameters r0;
        byte[] $r1;
        int $i0;

        r0 := @this: org.spongycastle.crypto.params.MGFParameters;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        specialinvoke r0.<org.spongycastle.crypto.params.MGFParameters: void <init>(byte[],int,int)>($r1, 0, $i0);

        return;
    }
    public void <init>(byte[], int, int)
    {
        org.spongycastle.crypto.params.MGFParameters r0;
        byte[] $r1, $r2;
        int $i0, $i1;

        r0 := @this: org.spongycastle.crypto.params.MGFParameters;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[$i1];

        r0.<org.spongycastle.crypto.params.MGFParameters: byte[] seed> = $r2;

        $r2 = r0.<org.spongycastle.crypto.params.MGFParameters: byte[] seed>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, 0, $i1);

        return;
    }
    public byte[] getSeed()
    {
        org.spongycastle.crypto.params.MGFParameters r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.params.MGFParameters;

        r1 = r0.<org.spongycastle.crypto.params.MGFParameters: byte[] seed>;

        return r1;
    }
