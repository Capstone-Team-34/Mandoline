org.spongycastle.crypto.params.DSAValidationParameters extends java.lang.Object
private int counter
private byte[] seed
private int usageIndex
    public void <init>(byte[], int)
    {
        org.spongycastle.crypto.params.DSAValidationParameters r0;
        byte[] $r1;
        int $i0;

        r0 := @this: org.spongycastle.crypto.params.DSAValidationParameters;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        specialinvoke r0.<org.spongycastle.crypto.params.DSAValidationParameters: void <init>(byte[],int,int)>($r1, $i0, -1);

        return;
    }
    public void <init>(byte[], int, int)
    {
        org.spongycastle.crypto.params.DSAValidationParameters r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: org.spongycastle.crypto.params.DSAValidationParameters;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.params.DSAValidationParameters: byte[] seed> = $r1;

        r0.<org.spongycastle.crypto.params.DSAValidationParameters: int counter> = $i0;

        r0.<org.spongycastle.crypto.params.DSAValidationParameters: int usageIndex> = $i1;

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.crypto.params.DSAValidationParameters r0, r2;
        java.lang.Object $r1;
        int $i0, $i1;
        boolean $z0;
        byte[] $r3, $r4;

        r0 := @this: org.spongycastle.crypto.params.DSAValidationParameters;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.spongycastle.crypto.params.DSAValidationParameters;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.crypto.params.DSAValidationParameters) $r1;

        $i1 = r2.<org.spongycastle.crypto.params.DSAValidationParameters: int counter>;

        $i0 = r0.<org.spongycastle.crypto.params.DSAValidationParameters: int counter>;

        if $i1 != $i0 goto label2;

        $r3 = r0.<org.spongycastle.crypto.params.DSAValidationParameters: byte[] seed>;

        $r4 = r2.<org.spongycastle.crypto.params.DSAValidationParameters: byte[] seed>;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r3, $r4);

        return $z0;

     label2:
        return 0;
    }
    public int getCounter()
    {
        org.spongycastle.crypto.params.DSAValidationParameters r0;
        int i0;

        r0 := @this: org.spongycastle.crypto.params.DSAValidationParameters;

        i0 = r0.<org.spongycastle.crypto.params.DSAValidationParameters: int counter>;

        return i0;
    }
    public byte[] getSeed()
    {
        org.spongycastle.crypto.params.DSAValidationParameters r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.params.DSAValidationParameters;

        r1 = r0.<org.spongycastle.crypto.params.DSAValidationParameters: byte[] seed>;

        return r1;
    }
    public int getUsageIndex()
    {
        org.spongycastle.crypto.params.DSAValidationParameters r0;
        int i0;

        r0 := @this: org.spongycastle.crypto.params.DSAValidationParameters;

        i0 = r0.<org.spongycastle.crypto.params.DSAValidationParameters: int usageIndex>;

        return i0;
    }
    public int hashCode()
    {
        org.spongycastle.crypto.params.DSAValidationParameters r0;
        int $i0, $i1;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.params.DSAValidationParameters;

        $i1 = r0.<org.spongycastle.crypto.params.DSAValidationParameters: int counter>;

        $r1 = r0.<org.spongycastle.crypto.params.DSAValidationParameters: byte[] seed>;

        $i0 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(byte[])>($r1);

        $i0 = $i1 ^ $i0;

        return $i0;
    }
