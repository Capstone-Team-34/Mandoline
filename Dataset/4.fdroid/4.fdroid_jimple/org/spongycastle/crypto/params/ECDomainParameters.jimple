org.spongycastle.crypto.params.ECDomainParameters extends java.lang.Object implements org.spongycastle.math.ec.ECConstants
private org.spongycastle.math.ec.ECPoint G
private org.spongycastle.math.ec.ECCurve curve
private java.math.BigInteger h
private java.math.BigInteger n
private byte[] seed
    public void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECPoint, java.math.BigInteger)
    {
        org.spongycastle.crypto.params.ECDomainParameters r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECPoint $r2;
        java.math.BigInteger $r3, $r4;

        r0 := @this: org.spongycastle.crypto.params.ECDomainParameters;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECPoint;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 = <org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger ONE>;

        specialinvoke r0.<org.spongycastle.crypto.params.ECDomainParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r1, $r2, $r3, $r4, null);

        return;
    }
    public void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.crypto.params.ECDomainParameters r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECPoint $r2;
        java.math.BigInteger $r3, $r4;

        r0 := @this: org.spongycastle.crypto.params.ECDomainParameters;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECPoint;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 := @parameter3: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.crypto.params.ECDomainParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r1, $r2, $r3, $r4, null);

        return;
    }
    public void <init>(org.spongycastle.math.ec.ECCurve, org.spongycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])
    {
        org.spongycastle.crypto.params.ECDomainParameters r0;
        org.spongycastle.math.ec.ECCurve $r1;
        org.spongycastle.math.ec.ECPoint $r2;
        java.math.BigInteger $r3, $r4;
        byte[] $r5;

        r0 := @this: org.spongycastle.crypto.params.ECDomainParameters;

        $r1 := @parameter0: org.spongycastle.math.ec.ECCurve;

        $r2 := @parameter1: org.spongycastle.math.ec.ECPoint;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 := @parameter3: java.math.BigInteger;

        $r5 := @parameter4: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve curve> = $r1;

        $r2 = virtualinvoke $r2.<org.spongycastle.math.ec.ECPoint: org.spongycastle.math.ec.ECPoint normalize()>();

        r0.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECPoint G> = $r2;

        r0.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger n> = $r3;

        r0.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger h> = $r4;

        r0.<org.spongycastle.crypto.params.ECDomainParameters: byte[] seed> = $r5;

        return;
    }
    public org.spongycastle.math.ec.ECCurve getCurve()
    {
        org.spongycastle.crypto.params.ECDomainParameters r0;
        org.spongycastle.math.ec.ECCurve r1;

        r0 := @this: org.spongycastle.crypto.params.ECDomainParameters;

        r1 = r0.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve curve>;

        return r1;
    }
    public org.spongycastle.math.ec.ECPoint getG()
    {
        org.spongycastle.crypto.params.ECDomainParameters r0;
        org.spongycastle.math.ec.ECPoint r1;

        r0 := @this: org.spongycastle.crypto.params.ECDomainParameters;

        r1 = r0.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECPoint G>;

        return r1;
    }
    public java.math.BigInteger getH()
    {
        org.spongycastle.crypto.params.ECDomainParameters r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.crypto.params.ECDomainParameters;

        r1 = r0.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger h>;

        return r1;
    }
    public java.math.BigInteger getN()
    {
        org.spongycastle.crypto.params.ECDomainParameters r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.crypto.params.ECDomainParameters;

        r1 = r0.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger n>;

        return r1;
    }
    public byte[] getSeed()
    {
        org.spongycastle.crypto.params.ECDomainParameters r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.params.ECDomainParameters;

        $r1 = r0.<org.spongycastle.crypto.params.ECDomainParameters: byte[] seed>;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        return $r1;
    }
