org.spongycastle.crypto.params.DESedeParameters extends org.spongycastle.crypto.params.DESParameters
public static final int DES_EDE_KEY_LENGTH
    public void <init>(byte[])
    {
        org.spongycastle.crypto.params.DESedeParameters r0;
        byte[] $r1;
        boolean $z0;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.spongycastle.crypto.params.DESedeParameters;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.spongycastle.crypto.params.DESParameters: void <init>(byte[])>($r1);

        $i0 = lengthof $r1;

        $z0 = staticinvoke <org.spongycastle.crypto.params.DESedeParameters: boolean isWeakKey(byte[],int,int)>($r1, 0, $i0);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("attempt to create weak DESede key");

        throw $r2;

     label1:
        return;
    }
    public static boolean isReal2Key(byte[], int)
    {
        byte[] $r0;
        int $i0, i1, $i2;
        boolean z0;
        byte $b3, $b4;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        z0 = 0;

        i1 = $i0;

     label1:
        $i2 = $i0 + 8;

        if i1 == $i2 goto label3;

        $b3 = $r0[i1];

        $i2 = i1 + 8;

        $b4 = $r0[$i2];

        if $b3 == $b4 goto label2;

        z0 = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return z0;
    }
    public static boolean isReal3Key(byte[], int)
    {
        byte[] $r0;
        int $i0, i1, $i2;
        boolean z0;
        byte $b3, $b4;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        z0 = 0;

        i1 = $i0;

     label1:
        $i2 = $i0 + 8;

        if i1 == $i2 goto label3;

        $b3 = $r0[i1];

        $i2 = i1 + 8;

        $b4 = $r0[$i2];

        if $b3 == $b4 goto label2;

        $b3 = $r0[i1];

        $i2 = i1 + 16;

        $b4 = $r0[$i2];

        if $b3 == $b4 goto label2;

        $i2 = i1 + 8;

        $b3 = $r0[$i2];

        $i2 = i1 + 16;

        $b4 = $r0[$i2];

        if $b3 == $b4 goto label2;

        z0 = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return z0;
    }
    public static boolean isRealEDEKey(byte[], int)
    {
        byte[] $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = lengthof $r0;

        if $i1 != 16 goto label1;

        $z0 = staticinvoke <org.spongycastle.crypto.params.DESedeParameters: boolean isReal2Key(byte[],int)>($r0, $i0);

        return $z0;

     label1:
        $z0 = staticinvoke <org.spongycastle.crypto.params.DESedeParameters: boolean isReal3Key(byte[],int)>($r0, $i0);

        return $z0;
    }
    public static boolean isWeakKey(byte[], int)
    {
        byte[] $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = lengthof $r0;

        $i1 = $i1 - $i0;

        $z0 = staticinvoke <org.spongycastle.crypto.params.DESedeParameters: boolean isWeakKey(byte[],int,int)>($r0, $i0, $i1);

        return $z0;
    }
    public static boolean isWeakKey(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        if $i0 >= $i1 goto label3;

        $z0 = staticinvoke <org.spongycastle.crypto.params.DESParameters: boolean isWeakKey(byte[],int)>($r0, $i0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i0 = $i0 + 8;

        goto label1;

     label3:
        return 0;
    }
