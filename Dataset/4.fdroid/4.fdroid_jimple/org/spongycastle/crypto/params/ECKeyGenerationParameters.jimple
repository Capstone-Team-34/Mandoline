org.spongycastle.crypto.params.ECKeyGenerationParameters extends org.spongycastle.crypto.KeyGenerationParameters
private org.spongycastle.crypto.params.ECDomainParameters domainParams
    public void <init>(org.spongycastle.crypto.params.ECDomainParameters, java.security.SecureRandom)
    {
        org.spongycastle.crypto.params.ECKeyGenerationParameters r0;
        org.spongycastle.crypto.params.ECDomainParameters $r1;
        java.security.SecureRandom $r2;
        java.math.BigInteger $r3;
        int $i0;

        r0 := @this: org.spongycastle.crypto.params.ECKeyGenerationParameters;

        $r1 := @parameter0: org.spongycastle.crypto.params.ECDomainParameters;

        $r2 := @parameter1: java.security.SecureRandom;

        $r3 = virtualinvoke $r1.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int bitLength()>();

        specialinvoke r0.<org.spongycastle.crypto.KeyGenerationParameters: void <init>(java.security.SecureRandom,int)>($r2, $i0);

        r0.<org.spongycastle.crypto.params.ECKeyGenerationParameters: org.spongycastle.crypto.params.ECDomainParameters domainParams> = $r1;

        return;
    }
    public org.spongycastle.crypto.params.ECDomainParameters getDomainParameters()
    {
        org.spongycastle.crypto.params.ECKeyGenerationParameters r0;
        org.spongycastle.crypto.params.ECDomainParameters r1;

        r0 := @this: org.spongycastle.crypto.params.ECKeyGenerationParameters;

        r1 = r0.<org.spongycastle.crypto.params.ECKeyGenerationParameters: org.spongycastle.crypto.params.ECDomainParameters domainParams>;

        return r1;
    }
