org.spongycastle.crypto.digests.SHA224Digest extends org.spongycastle.crypto.digests.GeneralDigest implements org.spongycastle.crypto.digests.EncodableDigest
private static final int DIGEST_LENGTH
static final int[] K
private int H1
private int H2
private int H3
private int H4
private int H5
private int H6
private int H7
private int H8
private int[] X
private int xOff
    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[64];

        $r0[0] = 1116352408;

        $r0[1] = 1899447441;

        $r0[2] = -1245643825;

        $r0[3] = -373957723;

        $r0[4] = 961987163;

        $r0[5] = 1508970993;

        $r0[6] = -1841331548;

        $r0[7] = -1424204075;

        $r0[8] = -670586216;

        $r0[9] = 310598401;

        $r0[10] = 607225278;

        $r0[11] = 1426881987;

        $r0[12] = 1925078388;

        $r0[13] = -2132889090;

        $r0[14] = -1680079193;

        $r0[15] = -1046744716;

        $r0[16] = -459576895;

        $r0[17] = -272742522;

        $r0[18] = 264347078;

        $r0[19] = 604807628;

        $r0[20] = 770255983;

        $r0[21] = 1249150122;

        $r0[22] = 1555081692;

        $r0[23] = 1996064986;

        $r0[24] = -1740746414;

        $r0[25] = -1473132947;

        $r0[26] = -1341970488;

        $r0[27] = -1084653625;

        $r0[28] = -958395405;

        $r0[29] = -710438585;

        $r0[30] = 113926993;

        $r0[31] = 338241895;

        $r0[32] = 666307205;

        $r0[33] = 773529912;

        $r0[34] = 1294757372;

        $r0[35] = 1396182291;

        $r0[36] = 1695183700;

        $r0[37] = 1986661051;

        $r0[38] = -2117940946;

        $r0[39] = -1838011259;

        $r0[40] = -1564481375;

        $r0[41] = -1474664885;

        $r0[42] = -1035236496;

        $r0[43] = -949202525;

        $r0[44] = -778901479;

        $r0[45] = -694614492;

        $r0[46] = -200395387;

        $r0[47] = 275423344;

        $r0[48] = 430227734;

        $r0[49] = 506948616;

        $r0[50] = 659060556;

        $r0[51] = 883997877;

        $r0[52] = 958139571;

        $r0[53] = 1322822218;

        $r0[54] = 1537002063;

        $r0[55] = 1747873779;

        $r0[56] = 1955562222;

        $r0[57] = 2024104815;

        $r0[58] = -2067236844;

        $r0[59] = -1933114872;

        $r0[60] = -1866530822;

        $r0[61] = -1538233109;

        $r0[62] = -1090935817;

        $r0[63] = -965641998;

        <org.spongycastle.crypto.digests.SHA224Digest: int[] K> = $r0;

        return;
    }
    public void <init>()
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        int[] $r1;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        specialinvoke r0.<org.spongycastle.crypto.digests.GeneralDigest: void <init>()>();

        $r1 = newarray (int)[64];

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X> = $r1;

        virtualinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: void reset()>();

        return;
    }
    public void <init>(org.spongycastle.crypto.digests.SHA224Digest)
    {
        org.spongycastle.crypto.digests.SHA224Digest r0, $r1;
        int[] $r2;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $r1 := @parameter0: org.spongycastle.crypto.digests.SHA224Digest;

        specialinvoke r0.<org.spongycastle.crypto.digests.GeneralDigest: void <init>(org.spongycastle.crypto.digests.GeneralDigest)>($r1);

        $r2 = newarray (int)[64];

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X> = $r2;

        specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: void doCopy(org.spongycastle.crypto.digests.SHA224Digest)>($r1);

        return;
    }
    public void <init>(byte[])
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        byte[] $r1;
        int[] $r2;
        int $i0, $i1;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.spongycastle.crypto.digests.GeneralDigest: void <init>(byte[])>($r1);

        $r2 = newarray (int)[64];

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X> = $r2;

        $i0 = staticinvoke <org.spongycastle.util.Pack: int bigEndianToInt(byte[],int)>($r1, 16);

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H1> = $i0;

        $i0 = staticinvoke <org.spongycastle.util.Pack: int bigEndianToInt(byte[],int)>($r1, 20);

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H2> = $i0;

        $i0 = staticinvoke <org.spongycastle.util.Pack: int bigEndianToInt(byte[],int)>($r1, 24);

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H3> = $i0;

        $i0 = staticinvoke <org.spongycastle.util.Pack: int bigEndianToInt(byte[],int)>($r1, 28);

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H4> = $i0;

        $i0 = staticinvoke <org.spongycastle.util.Pack: int bigEndianToInt(byte[],int)>($r1, 32);

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H5> = $i0;

        $i0 = staticinvoke <org.spongycastle.util.Pack: int bigEndianToInt(byte[],int)>($r1, 36);

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H6> = $i0;

        $i0 = staticinvoke <org.spongycastle.util.Pack: int bigEndianToInt(byte[],int)>($r1, 40);

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H7> = $i0;

        $i0 = staticinvoke <org.spongycastle.util.Pack: int bigEndianToInt(byte[],int)>($r1, 44);

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H8> = $i0;

        $i0 = staticinvoke <org.spongycastle.util.Pack: int bigEndianToInt(byte[],int)>($r1, 48);

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int xOff> = $i0;

        $i0 = 0;

     label1:
        $i1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int xOff>;

        if $i0 == $i1 goto label2;

        $r2 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i1 = $i0 * 4;

        $i1 = $i1 + 52;

        $i1 = staticinvoke <org.spongycastle.util.Pack: int bigEndianToInt(byte[],int)>($r1, $i1);

        $r2[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
    private int Ch(int, int, int)
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        int $i0, $i1, $i2;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i1 = $i0 & $i1;

        $i0 = $i0 ^ -1;

        $i0 = $i0 & $i2;

        $i0 = $i1 ^ $i0;

        return $i0;
    }
    private int Maj(int, int, int)
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = $i0 & $i1;

        $i0 = $i0 & $i2;

        $i0 = $i3 ^ $i0;

        $i1 = $i1 & $i2;

        $i0 = $i0 ^ $i1;

        return $i0;
    }
    private int Sum0(int)
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $i0 := @parameter0: int;

        $i1 = $i0 >>> 2;

        $i2 = $i0 << 30;

        $i1 = $i1 | $i2;

        $i2 = $i0 >>> 13;

        $i3 = $i0 << 19;

        $i2 = $i2 | $i3;

        $i1 = $i1 ^ $i2;

        $i2 = $i0 >>> 22;

        $i0 = $i0 << 10;

        $i0 = $i2 | $i0;

        $i0 = $i1 ^ $i0;

        return $i0;
    }
    private int Sum1(int)
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $i0 := @parameter0: int;

        $i1 = $i0 >>> 6;

        $i2 = $i0 << 26;

        $i1 = $i1 | $i2;

        $i2 = $i0 >>> 11;

        $i3 = $i0 << 21;

        $i2 = $i2 | $i3;

        $i1 = $i1 ^ $i2;

        $i2 = $i0 >>> 25;

        $i0 = $i0 << 7;

        $i0 = $i2 | $i0;

        $i0 = $i1 ^ $i0;

        return $i0;
    }
    private int Theta0(int)
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $i0 := @parameter0: int;

        $i2 = $i0 >>> 7;

        $i1 = $i0 << 25;

        $i2 = $i2 | $i1;

        $i3 = $i0 >>> 18;

        $i1 = $i0 << 14;

        $i1 = $i3 | $i1;

        $i2 = $i2 ^ $i1;

        $i0 = $i0 >>> 3;

        $i0 = $i2 ^ $i0;

        return $i0;
    }
    private int Theta1(int)
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $i0 := @parameter0: int;

        $i2 = $i0 >>> 17;

        $i1 = $i0 << 15;

        $i2 = $i2 | $i1;

        $i3 = $i0 >>> 19;

        $i1 = $i0 << 13;

        $i1 = $i3 | $i1;

        $i2 = $i2 ^ $i1;

        $i0 = $i0 >>> 10;

        $i0 = $i2 ^ $i0;

        return $i0;
    }
    private void doCopy(org.spongycastle.crypto.digests.SHA224Digest)
    {
        org.spongycastle.crypto.digests.SHA224Digest r0, $r1;
        int[] $r2, $r3, $r4;
        int $i0;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $r1 := @parameter0: org.spongycastle.crypto.digests.SHA224Digest;

        specialinvoke r0.<org.spongycastle.crypto.digests.GeneralDigest: void copyIn(org.spongycastle.crypto.digests.GeneralDigest)>($r1);

        $i0 = $r1.<org.spongycastle.crypto.digests.SHA224Digest: int H1>;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H1> = $i0;

        $i0 = $r1.<org.spongycastle.crypto.digests.SHA224Digest: int H2>;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H2> = $i0;

        $i0 = $r1.<org.spongycastle.crypto.digests.SHA224Digest: int H3>;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H3> = $i0;

        $i0 = $r1.<org.spongycastle.crypto.digests.SHA224Digest: int H4>;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H4> = $i0;

        $i0 = $r1.<org.spongycastle.crypto.digests.SHA224Digest: int H5>;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H5> = $i0;

        $i0 = $r1.<org.spongycastle.crypto.digests.SHA224Digest: int H6>;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H6> = $i0;

        $i0 = $r1.<org.spongycastle.crypto.digests.SHA224Digest: int H7>;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H7> = $i0;

        $i0 = $r1.<org.spongycastle.crypto.digests.SHA224Digest: int H8>;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H8> = $i0;

        $r3 = $r1.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $r2 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $r4 = $r1.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i0 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, $i0);

        $i0 = $r1.<org.spongycastle.crypto.digests.SHA224Digest: int xOff>;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int xOff> = $i0;

        return;
    }
    public org.spongycastle.util.Memoable copy()
    {
        org.spongycastle.crypto.digests.SHA224Digest r0, $r1;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $r1 = new org.spongycastle.crypto.digests.SHA224Digest;

        specialinvoke $r1.<org.spongycastle.crypto.digests.SHA224Digest: void <init>(org.spongycastle.crypto.digests.SHA224Digest)>(r0);

        return $r1;
    }
    public int doFinal(byte[], int)
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        byte[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        virtualinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: void finish()>();

        $i1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H1>;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i1, $r1, $i0);

        $i1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H2>;

        $i2 = $i0 + 4;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i1, $r1, $i2);

        $i1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H3>;

        $i2 = $i0 + 8;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i1, $r1, $i2);

        $i1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H4>;

        $i2 = $i0 + 12;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i1, $r1, $i2);

        $i1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H5>;

        $i2 = $i0 + 16;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i1, $r1, $i2);

        $i1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H6>;

        $i2 = $i0 + 20;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i1, $r1, $i2);

        $i1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H7>;

        $i0 = $i0 + 24;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i1, $r1, $i0);

        virtualinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: void reset()>();

        return 28;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        return "SHA-224";
    }
    public int getDigestSize()
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        return 28;
    }
    public byte[] getEncodedState()
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        byte[] r1;
        int $i0, $i1, $i2;
        int[] $r2;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int xOff>;

        $i0 = $i0 * 4;

        $i0 = $i0 + 52;

        r1 = newarray (byte)[$i0];

        specialinvoke r0.<org.spongycastle.crypto.digests.GeneralDigest: void populateState(byte[])>(r1);

        $i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H1>;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i0, r1, 16);

        $i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H2>;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i0, r1, 20);

        $i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H3>;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i0, r1, 24);

        $i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H4>;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i0, r1, 28);

        $i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H5>;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i0, r1, 32);

        $i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H6>;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i0, r1, 36);

        $i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H7>;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i0, r1, 40);

        $i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H8>;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i0, r1, 44);

        $i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int xOff>;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i0, r1, 48);

        $i0 = 0;

     label1:
        $i1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int xOff>;

        if $i0 == $i1 goto label2;

        $r2 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i1 = $r2[$i0];

        $i2 = $i0 * 4;

        $i2 = $i2 + 52;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i1, r1, $i2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    protected void processBlock()
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        int i0, $i1, $i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11;
        int[] $r1, $r2;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        i0 = 16;

     label1:
        if i0 > 63 goto label2;

        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $r2 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i1 = i0 + -2;

        $i1 = $r2[$i1];

        $i1 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Theta1(int)>($i1);

        $r2 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i2 = i0 + -7;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r2 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i2 = i0 + -15;

        $i2 = $r2[$i2];

        $i2 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Theta0(int)>($i2);

        $i1 = $i1 + $i2;

        $r2 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i2 = i0 + -16;

        $i2 = $r2[$i2];

        $i1 = $i1 + $i2;

        $r1[i0] = $i1;

        i0 = i0 + 1;

        goto label1;

     label2:
        i3 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H1>;

        i4 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H2>;

        i5 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H3>;

        i6 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H4>;

        i7 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H5>;

        i8 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H6>;

        $i2 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H7>;

        $i1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H8>;

        i9 = 0;

        i0 = 0;

     label3:
        if i0 >= 8 goto label4;

        $i10 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum1(int)>(i7);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Ch(int,int,int)>(i7, i8, $i2);

        $i10 = $i10 + $i11;

        $r1 = <org.spongycastle.crypto.digests.SHA224Digest: int[] K>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $i10 = $i1 + $i10;

        $i1 = i6 + $i10;

        i6 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum0(int)>(i3);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Maj(int,int,int)>(i3, i4, i5);

        i6 = i6 + $i11;

        i6 = $i10 + i6;

        i9 = i9 + 1;

        $i10 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum1(int)>($i1);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Ch(int,int,int)>($i1, i7, i8);

        $i10 = $i10 + $i11;

        $r1 = <org.spongycastle.crypto.digests.SHA224Digest: int[] K>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $i10 = $i2 + $i10;

        $i2 = i5 + $i10;

        i5 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum0(int)>(i6);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Maj(int,int,int)>(i6, i3, i4);

        i5 = i5 + $i11;

        i5 = $i10 + i5;

        i9 = i9 + 1;

        $i10 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum1(int)>($i2);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Ch(int,int,int)>($i2, $i1, i7);

        $i10 = $i10 + $i11;

        $r1 = <org.spongycastle.crypto.digests.SHA224Digest: int[] K>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $i10 = i8 + $i10;

        i8 = i4 + $i10;

        i4 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum0(int)>(i5);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Maj(int,int,int)>(i5, i6, i3);

        i4 = i4 + $i11;

        i4 = $i10 + i4;

        i9 = i9 + 1;

        $i10 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum1(int)>(i8);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Ch(int,int,int)>(i8, $i2, $i1);

        $i10 = $i10 + $i11;

        $r1 = <org.spongycastle.crypto.digests.SHA224Digest: int[] K>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $i10 = i7 + $i10;

        i7 = i3 + $i10;

        i3 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum0(int)>(i4);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Maj(int,int,int)>(i4, i5, i6);

        i3 = i3 + $i11;

        i3 = $i10 + i3;

        i9 = i9 + 1;

        $i10 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum1(int)>(i7);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Ch(int,int,int)>(i7, i8, $i2);

        $i10 = $i10 + $i11;

        $r1 = <org.spongycastle.crypto.digests.SHA224Digest: int[] K>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $i10 = $i1 + $i10;

        $i1 = i6 + $i10;

        i6 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum0(int)>(i3);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Maj(int,int,int)>(i3, i4, i5);

        i6 = i6 + $i11;

        i6 = $i10 + i6;

        i9 = i9 + 1;

        $i10 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum1(int)>($i1);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Ch(int,int,int)>($i1, i7, i8);

        $i10 = $i10 + $i11;

        $r1 = <org.spongycastle.crypto.digests.SHA224Digest: int[] K>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $i10 = $i2 + $i10;

        $i2 = i5 + $i10;

        i5 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum0(int)>(i6);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Maj(int,int,int)>(i6, i3, i4);

        i5 = i5 + $i11;

        i5 = $i10 + i5;

        i9 = i9 + 1;

        $i10 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum1(int)>($i2);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Ch(int,int,int)>($i2, $i1, i7);

        $i10 = $i10 + $i11;

        $r1 = <org.spongycastle.crypto.digests.SHA224Digest: int[] K>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $i10 = i8 + $i10;

        i8 = i4 + $i10;

        i4 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum0(int)>(i5);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Maj(int,int,int)>(i5, i6, i3);

        i4 = i4 + $i11;

        i4 = $i10 + i4;

        i9 = i9 + 1;

        $i10 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum1(int)>(i8);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Ch(int,int,int)>(i8, $i2, $i1);

        $i10 = $i10 + $i11;

        $r1 = <org.spongycastle.crypto.digests.SHA224Digest: int[] K>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i11 = $r1[i9];

        $i10 = $i10 + $i11;

        $i10 = i7 + $i10;

        i7 = i3 + $i10;

        i3 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Sum0(int)>(i4);

        $i11 = specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: int Maj(int,int,int)>(i4, i5, i6);

        i3 = i3 + $i11;

        i3 = $i10 + i3;

        i9 = i9 + 1;

        i0 = i0 + 1;

        goto label3;

     label4:
        i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H1>;

        i0 = i0 + i3;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H1> = i0;

        i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H2>;

        i0 = i0 + i4;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H2> = i0;

        i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H3>;

        i0 = i0 + i5;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H3> = i0;

        i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H4>;

        i0 = i0 + i6;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H4> = i0;

        i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H5>;

        i0 = i0 + i7;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H5> = i0;

        i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H6>;

        i0 = i0 + i8;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H6> = i0;

        i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H7>;

        i0 = i0 + $i2;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H7> = i0;

        i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int H8>;

        i0 = i0 + $i1;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H8> = i0;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int xOff> = 0;

        i0 = 0;

     label5:
        if i0 >= 16 goto label6;

        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $r1[i0] = 0;

        i0 = i0 + 1;

        goto label5;

     label6:
        return;
    }
    protected void processLength(long)
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        long $l0, $l2;
        int $i1;
        int[] $r1;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $l0 := @parameter0: long;

        $i1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int xOff>;

        if $i1 <= 14 goto label1;

        virtualinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: void processBlock()>();

     label1:
        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $l2 = $l0 >>> 32;

        $i1 = (int) $l2;

        $r1[14] = $i1;

        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $l0 = -1L & $l0;

        $i1 = (int) $l0;

        $r1[15] = $i1;

        return;
    }
    protected void processWord(byte[], int)
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        byte[] $r1;
        int $i0, i2, $i3;
        byte $b1;
        int[] $r2;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $b1 = $r1[$i0];

        i2 = $b1 << 24;

        $i0 = $i0 + 1;

        $b1 = $r1[$i0];

        $i3 = $b1 & 255;

        $i3 = $i3 << 16;

        i2 = i2 | $i3;

        $i0 = $i0 + 1;

        $b1 = $r1[$i0];

        $i3 = $b1 & 255;

        $i3 = $i3 << 8;

        i2 = i2 | $i3;

        $i0 = $i0 + 1;

        $b1 = $r1[$i0];

        $i0 = $b1 & 255;

        $i0 = i2 | $i0;

        $r2 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        i2 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int xOff>;

        $r2[i2] = $i0;

        $i0 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int xOff>;

        $i0 = $i0 + 1;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int xOff> = $i0;

        if $i0 != 16 goto label1;

        virtualinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: void processBlock()>();

     label1:
        return;
    }
    public void reset()
    {
        org.spongycastle.crypto.digests.SHA224Digest r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        specialinvoke r0.<org.spongycastle.crypto.digests.GeneralDigest: void reset()>();

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H1> = -1056596264;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H2> = 914150663;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H3> = 812702999;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H4> = -150054599;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H5> = -4191439;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H6> = 1750603025;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H7> = 1694076839;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int H8> = -1090891868;

        r0.<org.spongycastle.crypto.digests.SHA224Digest: int xOff> = 0;

        i0 = 0;

     label1:
        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $i1 = lengthof $r1;

        if i0 == $i1 goto label2;

        $r1 = r0.<org.spongycastle.crypto.digests.SHA224Digest: int[] X>;

        $r1[i0] = 0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
    public void reset(org.spongycastle.util.Memoable)
    {
        org.spongycastle.crypto.digests.SHA224Digest r0, r2;
        org.spongycastle.util.Memoable $r1;

        r0 := @this: org.spongycastle.crypto.digests.SHA224Digest;

        $r1 := @parameter0: org.spongycastle.util.Memoable;

        r2 = (org.spongycastle.crypto.digests.SHA224Digest) $r1;

        specialinvoke r0.<org.spongycastle.crypto.digests.SHA224Digest: void doCopy(org.spongycastle.crypto.digests.SHA224Digest)>(r2);

        return;
    }
