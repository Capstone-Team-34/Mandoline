org.spongycastle.crypto.digests.WhirlpoolDigest extends java.lang.Object implements org.spongycastle.crypto.ExtendedDigest org.spongycastle.util.Memoable
private static final int BITCOUNT_ARRAY_SIZE
private static final int BYTE_LENGTH
private static final long[] C0
private static final long[] C1
private static final long[] C2
private static final long[] C3
private static final long[] C4
private static final long[] C5
private static final long[] C6
private static final long[] C7
private static final int DIGEST_LENGTH_BYTES
private static final short[] EIGHT
private static final int REDUCTION_POLYNOMIAL
private static final int ROUNDS
private static final int[] SBOX
private long[] _K
private long[] _L
private short[] _bitCount
private long[] _block
private byte[] _buffer
private int _bufferPos
private long[] _hash
private final long[] _rc
private long[] _state
    static void <clinit>()
    {
        int[] $r0;
        long[] $r1;
        short[] $r2;

        $r0 = newarray (int)[256];

        $r0[0] = 24;

        $r0[1] = 35;

        $r0[2] = 198;

        $r0[3] = 232;

        $r0[4] = 135;

        $r0[5] = 184;

        $r0[6] = 1;

        $r0[7] = 79;

        $r0[8] = 54;

        $r0[9] = 166;

        $r0[10] = 210;

        $r0[11] = 245;

        $r0[12] = 121;

        $r0[13] = 111;

        $r0[14] = 145;

        $r0[15] = 82;

        $r0[16] = 96;

        $r0[17] = 188;

        $r0[18] = 155;

        $r0[19] = 142;

        $r0[20] = 163;

        $r0[21] = 12;

        $r0[22] = 123;

        $r0[23] = 53;

        $r0[24] = 29;

        $r0[25] = 224;

        $r0[26] = 215;

        $r0[27] = 194;

        $r0[28] = 46;

        $r0[29] = 75;

        $r0[30] = 254;

        $r0[31] = 87;

        $r0[32] = 21;

        $r0[33] = 119;

        $r0[34] = 55;

        $r0[35] = 229;

        $r0[36] = 159;

        $r0[37] = 240;

        $r0[38] = 74;

        $r0[39] = 218;

        $r0[40] = 88;

        $r0[41] = 201;

        $r0[42] = 41;

        $r0[43] = 10;

        $r0[44] = 177;

        $r0[45] = 160;

        $r0[46] = 107;

        $r0[47] = 133;

        $r0[48] = 189;

        $r0[49] = 93;

        $r0[50] = 16;

        $r0[51] = 244;

        $r0[52] = 203;

        $r0[53] = 62;

        $r0[54] = 5;

        $r0[55] = 103;

        $r0[56] = 228;

        $r0[57] = 39;

        $r0[58] = 65;

        $r0[59] = 139;

        $r0[60] = 167;

        $r0[61] = 125;

        $r0[62] = 149;

        $r0[63] = 216;

        $r0[64] = 251;

        $r0[65] = 238;

        $r0[66] = 124;

        $r0[67] = 102;

        $r0[68] = 221;

        $r0[69] = 23;

        $r0[70] = 71;

        $r0[71] = 158;

        $r0[72] = 202;

        $r0[73] = 45;

        $r0[74] = 191;

        $r0[75] = 7;

        $r0[76] = 173;

        $r0[77] = 90;

        $r0[78] = 131;

        $r0[79] = 51;

        $r0[80] = 99;

        $r0[81] = 2;

        $r0[82] = 170;

        $r0[83] = 113;

        $r0[84] = 200;

        $r0[85] = 25;

        $r0[86] = 73;

        $r0[87] = 217;

        $r0[88] = 242;

        $r0[89] = 227;

        $r0[90] = 91;

        $r0[91] = 136;

        $r0[92] = 154;

        $r0[93] = 38;

        $r0[94] = 50;

        $r0[95] = 176;

        $r0[96] = 233;

        $r0[97] = 15;

        $r0[98] = 213;

        $r0[99] = 128;

        $r0[100] = 190;

        $r0[101] = 205;

        $r0[102] = 52;

        $r0[103] = 72;

        $r0[104] = 255;

        $r0[105] = 122;

        $r0[106] = 144;

        $r0[107] = 95;

        $r0[108] = 32;

        $r0[109] = 104;

        $r0[110] = 26;

        $r0[111] = 174;

        $r0[112] = 180;

        $r0[113] = 84;

        $r0[114] = 147;

        $r0[115] = 34;

        $r0[116] = 100;

        $r0[117] = 241;

        $r0[118] = 115;

        $r0[119] = 18;

        $r0[120] = 64;

        $r0[121] = 8;

        $r0[122] = 195;

        $r0[123] = 236;

        $r0[124] = 219;

        $r0[125] = 161;

        $r0[126] = 141;

        $r0[127] = 61;

        $r0[128] = 151;

        $r0[129] = 0;

        $r0[130] = 207;

        $r0[131] = 43;

        $r0[132] = 118;

        $r0[133] = 130;

        $r0[134] = 214;

        $r0[135] = 27;

        $r0[136] = 181;

        $r0[137] = 175;

        $r0[138] = 106;

        $r0[139] = 80;

        $r0[140] = 69;

        $r0[141] = 243;

        $r0[142] = 48;

        $r0[143] = 239;

        $r0[144] = 63;

        $r0[145] = 85;

        $r0[146] = 162;

        $r0[147] = 234;

        $r0[148] = 101;

        $r0[149] = 186;

        $r0[150] = 47;

        $r0[151] = 192;

        $r0[152] = 222;

        $r0[153] = 28;

        $r0[154] = 253;

        $r0[155] = 77;

        $r0[156] = 146;

        $r0[157] = 117;

        $r0[158] = 6;

        $r0[159] = 138;

        $r0[160] = 178;

        $r0[161] = 230;

        $r0[162] = 14;

        $r0[163] = 31;

        $r0[164] = 98;

        $r0[165] = 212;

        $r0[166] = 168;

        $r0[167] = 150;

        $r0[168] = 249;

        $r0[169] = 197;

        $r0[170] = 37;

        $r0[171] = 89;

        $r0[172] = 132;

        $r0[173] = 114;

        $r0[174] = 57;

        $r0[175] = 76;

        $r0[176] = 94;

        $r0[177] = 120;

        $r0[178] = 56;

        $r0[179] = 140;

        $r0[180] = 209;

        $r0[181] = 165;

        $r0[182] = 226;

        $r0[183] = 97;

        $r0[184] = 179;

        $r0[185] = 33;

        $r0[186] = 156;

        $r0[187] = 30;

        $r0[188] = 67;

        $r0[189] = 199;

        $r0[190] = 252;

        $r0[191] = 4;

        $r0[192] = 81;

        $r0[193] = 153;

        $r0[194] = 109;

        $r0[195] = 13;

        $r0[196] = 250;

        $r0[197] = 223;

        $r0[198] = 126;

        $r0[199] = 36;

        $r0[200] = 59;

        $r0[201] = 171;

        $r0[202] = 206;

        $r0[203] = 17;

        $r0[204] = 143;

        $r0[205] = 78;

        $r0[206] = 183;

        $r0[207] = 235;

        $r0[208] = 60;

        $r0[209] = 129;

        $r0[210] = 148;

        $r0[211] = 247;

        $r0[212] = 185;

        $r0[213] = 19;

        $r0[214] = 44;

        $r0[215] = 211;

        $r0[216] = 231;

        $r0[217] = 110;

        $r0[218] = 196;

        $r0[219] = 3;

        $r0[220] = 86;

        $r0[221] = 68;

        $r0[222] = 127;

        $r0[223] = 169;

        $r0[224] = 42;

        $r0[225] = 187;

        $r0[226] = 193;

        $r0[227] = 83;

        $r0[228] = 220;

        $r0[229] = 11;

        $r0[230] = 157;

        $r0[231] = 108;

        $r0[232] = 49;

        $r0[233] = 116;

        $r0[234] = 246;

        $r0[235] = 70;

        $r0[236] = 172;

        $r0[237] = 137;

        $r0[238] = 20;

        $r0[239] = 225;

        $r0[240] = 22;

        $r0[241] = 58;

        $r0[242] = 105;

        $r0[243] = 9;

        $r0[244] = 112;

        $r0[245] = 182;

        $r0[246] = 208;

        $r0[247] = 237;

        $r0[248] = 204;

        $r0[249] = 66;

        $r0[250] = 152;

        $r0[251] = 164;

        $r0[252] = 40;

        $r0[253] = 92;

        $r0[254] = 248;

        $r0[255] = 134;

        <org.spongycastle.crypto.digests.WhirlpoolDigest: int[] SBOX> = $r0;

        $r1 = newarray (long)[256];

        <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C0> = $r1;

        $r1 = newarray (long)[256];

        <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C1> = $r1;

        $r1 = newarray (long)[256];

        <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C2> = $r1;

        $r1 = newarray (long)[256];

        <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C3> = $r1;

        $r1 = newarray (long)[256];

        <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C4> = $r1;

        $r1 = newarray (long)[256];

        <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C5> = $r1;

        $r1 = newarray (long)[256];

        <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C6> = $r1;

        $r1 = newarray (long)[256];

        <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C7> = $r1;

        $r2 = newarray (short)[32];

        <org.spongycastle.crypto.digests.WhirlpoolDigest: short[] EIGHT> = $r2;

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: short[] EIGHT>;

        $r2[31] = 8;

        return;
    }
    public void <init>()
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        long[] $r1, $r5;
        byte[] $r2;
        short[] $r3;
        int[] $r4;
        long $l7, $l8;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (long)[11];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _rc> = $r1;

        $r2 = newarray (byte)[64];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer> = $r2;

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = 0;

        $r3 = newarray (short)[32];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount> = $r3;

        $r1 = newarray (long)[8];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _hash> = $r1;

        $r1 = newarray (long)[8];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K> = $r1;

        $r1 = newarray (long)[8];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L> = $r1;

        $r1 = newarray (long)[8];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _block> = $r1;

        $r1 = newarray (long)[8];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state> = $r1;

        i3 = 0;

     label1:
        if i3 >= 256 goto label2;

        $r4 = <org.spongycastle.crypto.digests.WhirlpoolDigest: int[] SBOX>;

        i0 = $r4[i3];

        $i4 = i0 << 1;

        $i4 = specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int maskWithReductionPolynomial(int)>($i4);

        i1 = $i4 << 1;

        $i5 = specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int maskWithReductionPolynomial(int)>(i1);

        i1 = $i5 ^ i0;

        i2 = $i5 << 1;

        $i6 = specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int maskWithReductionPolynomial(int)>(i2);

        i2 = $i6 ^ i0;

        $r1 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C0>;

        $l7 = specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>(i0, i0, $i5, i0, $i6, i1, $i4, i2);

        $r1[i3] = $l7;

        $r1 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C1>;

        $l7 = specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>(i2, i0, i0, $i5, i0, $i6, i1, $i4);

        $r1[i3] = $l7;

        $r1 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C2>;

        $l7 = specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>($i4, i2, i0, i0, $i5, i0, $i6, i1);

        $r1[i3] = $l7;

        $r1 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C3>;

        $l7 = specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>(i1, $i4, i2, i0, i0, $i5, i0, $i6);

        $r1[i3] = $l7;

        $r1 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C4>;

        $l7 = specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>($i6, i1, $i4, i2, i0, i0, $i5, i0);

        $r1[i3] = $l7;

        $r1 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C5>;

        $l7 = specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>(i0, $i6, i1, $i4, i2, i0, i0, $i5);

        $r1[i3] = $l7;

        $r1 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C6>;

        $l7 = specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>($i5, i0, $i6, i1, $i4, i2, i0, i0);

        $r1[i3] = $l7;

        $r1 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C7>;

        $l7 = specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long packIntoLong(int,int,int,int,int,int,int,int)>(i0, $i5, i0, $i6, i1, $i4, i2, i0);

        $r1[i3] = $l7;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _rc>;

        $r1[0] = 0L;

        i0 = 1;

     label3:
        if i0 > 10 goto label4;

        i3 = i0 + -1;

        i3 = i3 * 8;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _rc>;

        $r5 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C0>;

        $l7 = $r5[i3];

        $l7 = $l7 & -72057594037927936L;

        $r5 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C1>;

        $i4 = i3 + 1;

        $l8 = $r5[$i4];

        $l8 = $l8 & 71776119061217280L;

        $l7 = $l7 ^ $l8;

        $r5 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C2>;

        $i4 = i3 + 2;

        $l8 = $r5[$i4];

        $l8 = $l8 & 280375465082880L;

        $l7 = $l7 ^ $l8;

        $r5 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C3>;

        $i4 = i3 + 3;

        $l8 = $r5[$i4];

        $l8 = $l8 & 1095216660480L;

        $l7 = $l7 ^ $l8;

        $r5 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C4>;

        $i4 = i3 + 4;

        $l8 = $r5[$i4];

        $l8 = $l8 & 4278190080L;

        $l7 = $l7 ^ $l8;

        $r5 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C5>;

        $i4 = i3 + 5;

        $l8 = $r5[$i4];

        $l8 = $l8 & 16711680L;

        $l7 = $l7 ^ $l8;

        $r5 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C6>;

        $i4 = i3 + 6;

        $l8 = $r5[$i4];

        $l8 = $l8 & 65280L;

        $l7 = $l7 ^ $l8;

        $r5 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C7>;

        i3 = i3 + 7;

        $l8 = $r5[i3];

        $l8 = $l8 & 255L;

        $l7 = $l7 ^ $l8;

        $r1[i0] = $l7;

        i0 = i0 + 1;

        goto label3;

     label4:
        return;
    }
    public void <init>(org.spongycastle.crypto.digests.WhirlpoolDigest)
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0, $r1;
        long[] $r2;
        byte[] $r3;
        short[] $r4;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        $r1 := @parameter0: org.spongycastle.crypto.digests.WhirlpoolDigest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (long)[11];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _rc> = $r2;

        $r3 = newarray (byte)[64];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer> = $r3;

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = 0;

        $r4 = newarray (short)[32];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount> = $r4;

        $r2 = newarray (long)[8];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _hash> = $r2;

        $r2 = newarray (long)[8];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K> = $r2;

        $r2 = newarray (long)[8];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L> = $r2;

        $r2 = newarray (long)[8];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _block> = $r2;

        $r2 = newarray (long)[8];

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state> = $r2;

        virtualinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: void reset(org.spongycastle.util.Memoable)>($r1);

        return;
    }
    private long bytesToLongFromBuffer(byte[], int)
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        byte[] $r1;
        int $i0, $i2;
        long l1, $l4;
        byte $b3;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $b3 = $r1[$i0];

        l1 = (long) $b3;

        l1 = l1 & 255L;

        l1 = l1 << 56;

        $i2 = $i0 + 1;

        $b3 = $r1[$i2];

        $l4 = (long) $b3;

        $l4 = $l4 & 255L;

        $l4 = $l4 << 48;

        l1 = l1 | $l4;

        $i2 = $i0 + 2;

        $b3 = $r1[$i2];

        $l4 = (long) $b3;

        $l4 = $l4 & 255L;

        $l4 = $l4 << 40;

        l1 = l1 | $l4;

        $i2 = $i0 + 3;

        $b3 = $r1[$i2];

        $l4 = (long) $b3;

        $l4 = $l4 & 255L;

        $l4 = $l4 << 32;

        l1 = l1 | $l4;

        $i2 = $i0 + 4;

        $b3 = $r1[$i2];

        $l4 = (long) $b3;

        $l4 = $l4 & 255L;

        $l4 = $l4 << 24;

        l1 = l1 | $l4;

        $i2 = $i0 + 5;

        $b3 = $r1[$i2];

        $l4 = (long) $b3;

        $l4 = $l4 & 255L;

        $l4 = $l4 << 16;

        l1 = l1 | $l4;

        $i2 = $i0 + 6;

        $b3 = $r1[$i2];

        $l4 = (long) $b3;

        $l4 = $l4 & 255L;

        $l4 = $l4 << 8;

        l1 = l1 | $l4;

        $i0 = $i0 + 7;

        $b3 = $r1[$i0];

        $l4 = (long) $b3;

        $l4 = $l4 & 255L;

        l1 = l1 | $l4;

        return l1;
    }
    private void convertLongToByteArray(long, byte[], int)
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        long $l0, $l5;
        byte[] $r1;
        int $i1, i2, $i3, $i4;
        byte $b6;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        $l0 := @parameter0: long;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        i2 = 0;

     label1:
        if i2 >= 8 goto label2;

        $i3 = $i1 + i2;

        $i4 = i2 * 8;

        $i4 = 56 - $i4;

        $l5 = $l0 >> $i4;

        $l5 = $l5 & 255L;

        $i4 = (int) $l5;

        $b6 = (byte) $i4;

        $r1[$i3] = $b6;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
    private byte[] copyBitLength()
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        byte[] r1;
        int i0, $i1;
        short[] $r2;
        short $s2;
        byte $b3;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        r1 = newarray (byte)[32];

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        $s2 = $r2[i0];

        $i1 = $s2 & 255;

        $b3 = (byte) $i1;

        r1[i0] = $b3;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    private void finish()
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        byte[] $r1, $r2;
        int $i0, $i1;
        byte $b2;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        $r1 = specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] copyBitLength()>();

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i0 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        $i1 = $i0 + 1;

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = $i1;

        $b2 = $r2[$i0];

        $i1 = $b2 | 128;

        $b2 = (byte) $i1;

        $r2[$i0] = $b2;

        $i0 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i1 = lengthof $r2;

        if $i0 != $i1 goto label1;

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: void processFilledBuffer(byte[],int)>($r2, 0);

     label1:
        $i0 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        if $i0 <= 32 goto label3;

     label2:
        $i0 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        if $i0 == 0 goto label3;

        virtualinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: void update(byte)>(0);

        goto label2;

     label3:
        $i0 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        if $i0 > 32 goto label4;

        virtualinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: void update(byte)>(0);

        goto label3;

     label4:
        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 32, $i0);

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: void processFilledBuffer(byte[],int)>($r1, 0);

        return;
    }
    private void increment()
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        int i0, i1, $i2;
        short[] $r1;
        short $s3;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        i1 = 0;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        $i2 = lengthof $r1;

        $i2 = $i2 + -1;

     label1:
        if $i2 < 0 goto label2;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        $s3 = $r1[$i2];

        i0 = $s3 & 255;

        $r1 = <org.spongycastle.crypto.digests.WhirlpoolDigest: short[] EIGHT>;

        $s3 = $r1[$i2];

        i0 = i0 + $s3;

        i0 = i0 + i1;

        i1 = i0 >>> 8;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        i0 = i0 & 255;

        $s3 = (short) i0;

        $r1[$i2] = $s3;

        $i2 = $i2 + -1;

        goto label1;

     label2:
        return;
    }
    private int maskWithReductionPolynomial(int)
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        int $i0;
        byte $b1;
        long $l2;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        $i0 := @parameter0: int;

        $l2 = (long) $i0;

        $b1 = $l2 cmp 256L;

        if $b1 < 0 goto label1;

        $i0 = $i0 ^ 285;

     label1:
        return $i0;
    }
    private long packIntoLong(int, int, int, int, int, int, int, int)
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        long $l8, $l9;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        $i6 := @parameter6: int;

        $i7 := @parameter7: int;

        $l8 = (long) $i0;

        $l8 = $l8 << 56;

        $l9 = (long) $i1;

        $l9 = $l9 << 48;

        $l8 = $l8 ^ $l9;

        $l9 = (long) $i2;

        $l9 = $l9 << 40;

        $l8 = $l8 ^ $l9;

        $l9 = (long) $i3;

        $l9 = $l9 << 32;

        $l8 = $l8 ^ $l9;

        $l9 = (long) $i4;

        $l9 = $l9 << 24;

        $l8 = $l8 ^ $l9;

        $l9 = (long) $i5;

        $l9 = $l9 << 16;

        $l8 = $l8 ^ $l9;

        $l9 = (long) $i6;

        $l9 = $l9 << 8;

        $l8 = $l8 ^ $l9;

        $l9 = (long) $i7;

        $l8 = $l8 ^ $l9;

        return $l8;
    }
    private void processFilledBuffer(byte[], int)
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        byte[] $r1;
        int $i0, $i1;
        long $l2;
        long[] $r2;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i0 = 0;

     label1:
        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label2;

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i1 = $i0 * 8;

        $l2 = specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long bytesToLongFromBuffer(byte[],int)>($r1, $i1);

        $r2[$i0] = $l2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: void processBlock()>();

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = 0;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        staticinvoke <org.spongycastle.util.Arrays: void fill(byte[],byte)>($r1, 0);

        return;
    }
    public org.spongycastle.util.Memoable copy()
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0, $r1;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        $r1 = new org.spongycastle.crypto.digests.WhirlpoolDigest;

        specialinvoke $r1.<org.spongycastle.crypto.digests.WhirlpoolDigest: void <init>(org.spongycastle.crypto.digests.WhirlpoolDigest)>(r0);

        return $r1;
    }
    public int doFinal(byte[], int)
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        byte[] $r1;
        int $i0, i2, $i3;
        long $l1;
        long[] $r2;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: void finish()>();

        i2 = 0;

     label1:
        if i2 >= 8 goto label2;

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        $l1 = $r2[i2];

        $i3 = i2 * 8;

        $i3 = $i3 + $i0;

        specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: void convertLongToByteArray(long,byte[],int)>($l1, $r1, $i3);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: void reset()>();

        $i0 = virtualinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int getDigestSize()>();

        return $i0;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        return "Whirlpool";
    }
    public int getByteLength()
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        return 64;
    }
    public int getDigestSize()
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        return 64;
    }
    protected void processBlock()
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        int i0, i3, $i4;
        long[] $r1, $r2, $r3;
        long $l1, $l2, $l5;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        i0 = 0;

     label01:
        if i0 >= 8 goto label02;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        $l1 = $r2[i0];

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        $l2 = $r3[i0];

        $r2[i0] = $l2;

        $l1 = $l1 ^ $l2;

        $r1[i0] = $l1;

        i0 = i0 + 1;

        goto label01;

     label02:
        i0 = 1;

     label03:
        if i0 > 10 goto label08;

        i3 = 0;

     label04:
        if i3 >= 8 goto label05;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $r1[i3] = 0L;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C0>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i4 = i3 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 56;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C1>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i4 = i3 + -1;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 48;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C2>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i4 = i3 + -2;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 40;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C3>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i4 = i3 + -3;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 32;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C4>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i4 = i3 + -4;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 24;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C5>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i4 = i3 + -5;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 16;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C6>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i4 = i3 + -6;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 8;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C7>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i4 = i3 + -7;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        i3 = i3 + 1;

        goto label04;

     label05:
        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        i3 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, i3);

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $l1 = $r1[0];

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _rc>;

        $l2 = $r2[i0];

        $l1 = $l1 ^ $l2;

        $r1[0] = $l1;

        i3 = 0;

     label06:
        if i3 >= 8 goto label07;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $l1 = $r2[i3];

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C0>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i4 = i3 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 56;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C1>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i4 = i3 + -1;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 48;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C2>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i4 = i3 + -2;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 40;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C3>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i4 = i3 + -3;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 32;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C4>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i4 = i3 + -4;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 24;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C5>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i4 = i3 + -5;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 16;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C6>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i4 = i3 + -6;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $l2 = $l2 >>> 8;

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $l1 = $r1[i3];

        $r2 = <org.spongycastle.crypto.digests.WhirlpoolDigest: long[] C7>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i4 = i3 + -7;

        $i4 = $i4 & 7;

        $l2 = $r3[$i4];

        $i4 = (int) $l2;

        $i4 = $i4 & 255;

        $l2 = $r2[$i4];

        $l1 = $l1 ^ $l2;

        $r1[i3] = $l1;

        i3 = i3 + 1;

        goto label06;

     label07:
        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        i3 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, i3);

        i0 = i0 + 1;

        goto label03;

     label08:
        i0 = 0;

     label09:
        if i0 >= 8 goto label10;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        $l1 = $r1[i0];

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $l2 = $r2[i0];

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        $l5 = $r2[i0];

        $l2 = $l2 ^ $l5;

        $l1 = $l1 ^ $l2;

        $r1[i0] = $l1;

        i0 = i0 + 1;

        goto label09;

     label10:
        return;
    }
    public void reset()
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        short[] $r1;
        byte[] $r2;
        long[] $r3;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = 0;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        staticinvoke <org.spongycastle.util.Arrays: void fill(short[],short)>($r1, 0);

        $r2 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        staticinvoke <org.spongycastle.util.Arrays: void fill(byte[],byte)>($r2, 0);

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        staticinvoke <org.spongycastle.util.Arrays: void fill(long[],long)>($r3, 0L);

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        staticinvoke <org.spongycastle.util.Arrays: void fill(long[],long)>($r3, 0L);

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        staticinvoke <org.spongycastle.util.Arrays: void fill(long[],long)>($r3, 0L);

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        staticinvoke <org.spongycastle.util.Arrays: void fill(long[],long)>($r3, 0L);

        $r3 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        staticinvoke <org.spongycastle.util.Arrays: void fill(long[],long)>($r3, 0L);

        return;
    }
    public void reset(org.spongycastle.util.Memoable)
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0, r2;
        org.spongycastle.util.Memoable $r1;
        long[] $r3, $r4, $r5;
        int $i0;
        byte[] $r6, $r7, $r8;
        short[] $r9, $r10, $r11;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        $r1 := @parameter0: org.spongycastle.util.Memoable;

        r2 = (org.spongycastle.crypto.digests.WhirlpoolDigest) $r1;

        $r3 = r2.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _rc>;

        $r4 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _rc>;

        $r5 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _rc>;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

        $r6 = r2.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $r7 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $r8 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i0 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 0, $i0);

        $i0 = r2.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = $i0;

        $r9 = r2.<org.spongycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        $r10 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        $r11 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: short[] _bitCount>;

        $i0 = lengthof $r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r10, 0, $i0);

        $r3 = r2.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        $r4 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        $r5 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _hash>;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

        $r3 = r2.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $r4 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $r5 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _K>;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

        $r3 = r2.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $r4 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $r5 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _L>;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

        $r3 = r2.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        $r4 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        $r5 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _block>;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

        $r3 = r2.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $r4 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $r5 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: long[] _state>;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

        return;
    }
    public void update(byte)
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        byte $b0;
        byte[] $r1;
        int $i1, $i2;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        $b0 := @parameter0: byte;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        $r1[$i1] = $b0;

        $i1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        $i1 = $i1 + 1;

        r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos> = $i1;

        $i1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: int _bufferPos>;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        $i2 = lengthof $r1;

        if $i1 != $i2 goto label1;

        $r1 = r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: byte[] _buffer>;

        specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: void processFilledBuffer(byte[],int)>($r1, 0);

     label1:
        specialinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: void increment()>();

        return;
    }
    public void update(byte[], int, int)
    {
        org.spongycastle.crypto.digests.WhirlpoolDigest r0;
        byte[] $r1;
        byte $b0;
        int $i1, $i2;

        r0 := @this: org.spongycastle.crypto.digests.WhirlpoolDigest;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

     label1:
        if $i2 <= 0 goto label2;

        $b0 = $r1[$i1];

        virtualinvoke r0.<org.spongycastle.crypto.digests.WhirlpoolDigest: void update(byte)>($b0);

        $i1 = $i1 + 1;

        $i2 = $i2 + -1;

        goto label1;

     label2:
        return;
    }
