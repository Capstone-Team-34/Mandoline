org.spongycastle.crypto.digests.SkeinEngine$UBI extends java.lang.Object
private byte[] currentBlock
private int currentOffset
private long[] message
final org.spongycastle.crypto.digests.SkeinEngine this$0
private final org.spongycastle.crypto.digests.SkeinEngine$UbiTweak tweak
    public void <init>(org.spongycastle.crypto.digests.SkeinEngine, int)
    {
        org.spongycastle.crypto.digests.SkeinEngine$UBI r0;
        org.spongycastle.crypto.digests.SkeinEngine $r1;
        int $i0;
        org.spongycastle.crypto.digests.SkeinEngine$UbiTweak $r2;
        byte[] $r3;
        long[] $r4;

        r0 := @this: org.spongycastle.crypto.digests.SkeinEngine$UBI;

        $r1 := @parameter0: org.spongycastle.crypto.digests.SkeinEngine;

        $i0 := @parameter1: int;

        r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: org.spongycastle.crypto.digests.SkeinEngine this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.spongycastle.crypto.digests.SkeinEngine$UbiTweak;

        specialinvoke $r2.<org.spongycastle.crypto.digests.SkeinEngine$UbiTweak: void <init>()>();

        r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: org.spongycastle.crypto.digests.SkeinEngine$UbiTweak tweak> = $r2;

        $r3 = newarray (byte)[$i0];

        r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: byte[] currentBlock> = $r3;

        $r3 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: byte[] currentBlock>;

        $i0 = lengthof $r3;

        $i0 = $i0 / 8;

        $r4 = newarray (long)[$i0];

        r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: long[] message> = $r4;

        return;
    }
    private void processBlock(long[])
    {
        org.spongycastle.crypto.digests.SkeinEngine$UBI r0;
        long[] $r1, $r4, $r6;
        org.spongycastle.crypto.digests.SkeinEngine $r2;
        org.spongycastle.crypto.engines.ThreefishEngine $r3;
        org.spongycastle.crypto.digests.SkeinEngine$UbiTweak $r5;
        int i0, $i1;
        byte[] $r7;
        long $l2, $l3;

        r0 := @this: org.spongycastle.crypto.digests.SkeinEngine$UBI;

        $r1 := @parameter0: long[];

        $r2 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: org.spongycastle.crypto.digests.SkeinEngine this$0>;

        $r3 = $r2.<org.spongycastle.crypto.digests.SkeinEngine: org.spongycastle.crypto.engines.ThreefishEngine threefish>;

        $r2 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: org.spongycastle.crypto.digests.SkeinEngine this$0>;

        $r4 = $r2.<org.spongycastle.crypto.digests.SkeinEngine: long[] chain>;

        $r5 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: org.spongycastle.crypto.digests.SkeinEngine$UbiTweak tweak>;

        $r6 = virtualinvoke $r5.<org.spongycastle.crypto.digests.SkeinEngine$UbiTweak: long[] getWords()>();

        virtualinvoke $r3.<org.spongycastle.crypto.engines.ThreefishEngine: void init(boolean,long[],long[])>(1, $r4, $r6);

        i0 = 0;

     label1:
        $r4 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: long[] message>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label2;

        $r4 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: long[] message>;

        $r7 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: byte[] currentBlock>;

        $i1 = i0 * 8;

        $l2 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long bytesToWord(byte[],int)>($r7, $i1);

        $r4[i0] = $l2;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: org.spongycastle.crypto.digests.SkeinEngine this$0>;

        $r3 = $r2.<org.spongycastle.crypto.digests.SkeinEngine: org.spongycastle.crypto.engines.ThreefishEngine threefish>;

        $r4 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: long[] message>;

        virtualinvoke $r3.<org.spongycastle.crypto.engines.ThreefishEngine: int processBlock(long[],long[])>($r4, $r1);

        i0 = 0;

     label3:
        $i1 = lengthof $r1;

        if i0 >= $i1 goto label4;

        $l2 = $r1[i0];

        $r4 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: long[] message>;

        $l3 = $r4[i0];

        $l2 = $l2 ^ $l3;

        $r1[i0] = $l2;

        i0 = i0 + 1;

        goto label3;

     label4:
        return;
    }
    public void doFinal(long[])
    {
        org.spongycastle.crypto.digests.SkeinEngine$UBI r0;
        long[] $r1;
        int i0, $i1;
        byte[] $r2;
        org.spongycastle.crypto.digests.SkeinEngine$UbiTweak $r3;

        r0 := @this: org.spongycastle.crypto.digests.SkeinEngine$UBI;

        $r1 := @parameter0: long[];

        i0 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: int currentOffset>;

     label1:
        $r2 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: byte[] currentBlock>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r2 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: byte[] currentBlock>;

        $r2[i0] = 0;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: org.spongycastle.crypto.digests.SkeinEngine$UbiTweak tweak>;

        virtualinvoke $r3.<org.spongycastle.crypto.digests.SkeinEngine$UbiTweak: void setFinal(boolean)>(1);

        specialinvoke r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: void processBlock(long[])>($r1);

        return;
    }
    public void reset(int)
    {
        org.spongycastle.crypto.digests.SkeinEngine$UBI r0;
        int $i0;
        org.spongycastle.crypto.digests.SkeinEngine$UbiTweak $r1;

        r0 := @this: org.spongycastle.crypto.digests.SkeinEngine$UBI;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: org.spongycastle.crypto.digests.SkeinEngine$UbiTweak tweak>;

        virtualinvoke $r1.<org.spongycastle.crypto.digests.SkeinEngine$UbiTweak: void reset()>();

        $r1 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: org.spongycastle.crypto.digests.SkeinEngine$UbiTweak tweak>;

        virtualinvoke $r1.<org.spongycastle.crypto.digests.SkeinEngine$UbiTweak: void setType(int)>($i0);

        r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: int currentOffset> = 0;

        return;
    }
    public void reset(org.spongycastle.crypto.digests.SkeinEngine$UBI)
    {
        org.spongycastle.crypto.digests.SkeinEngine$UBI r0, $r1;
        byte[] $r2, $r3;
        int $i0;
        long[] $r4, $r5;
        org.spongycastle.crypto.digests.SkeinEngine$UbiTweak $r6, $r7;

        r0 := @this: org.spongycastle.crypto.digests.SkeinEngine$UBI;

        $r1 := @parameter0: org.spongycastle.crypto.digests.SkeinEngine$UBI;

        $r2 = $r1.<org.spongycastle.crypto.digests.SkeinEngine$UBI: byte[] currentBlock>;

        $r3 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: byte[] currentBlock>;

        $r2 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[],byte[])>($r2, $r3);

        r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: byte[] currentBlock> = $r2;

        $i0 = $r1.<org.spongycastle.crypto.digests.SkeinEngine$UBI: int currentOffset>;

        r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: int currentOffset> = $i0;

        $r4 = $r1.<org.spongycastle.crypto.digests.SkeinEngine$UBI: long[] message>;

        $r5 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: long[] message>;

        $r4 = staticinvoke <org.spongycastle.util.Arrays: long[] clone(long[],long[])>($r4, $r5);

        r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: long[] message> = $r4;

        $r6 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: org.spongycastle.crypto.digests.SkeinEngine$UbiTweak tweak>;

        $r7 = $r1.<org.spongycastle.crypto.digests.SkeinEngine$UBI: org.spongycastle.crypto.digests.SkeinEngine$UbiTweak tweak>;

        virtualinvoke $r6.<org.spongycastle.crypto.digests.SkeinEngine$UbiTweak: void reset(org.spongycastle.crypto.digests.SkeinEngine$UbiTweak)>($r7);

        return;
    }
    public void update(byte[], int, int, long[])
    {
        org.spongycastle.crypto.digests.SkeinEngine$UBI r0;
        byte[] $r1, $r3;
        int $i0, $i1, $i2, i3, $i4, $i5;
        long[] $r2;
        org.spongycastle.crypto.digests.SkeinEngine$UbiTweak $r4;

        r0 := @this: org.spongycastle.crypto.digests.SkeinEngine$UBI;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: long[];

        i3 = 0;

     label1:
        if $i1 <= i3 goto label3;

        $i2 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: int currentOffset>;

        $r3 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: byte[] currentBlock>;

        $i4 = lengthof $r3;

        if $i2 != $i4 goto label2;

        specialinvoke r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: void processBlock(long[])>($r2);

        $r4 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: org.spongycastle.crypto.digests.SkeinEngine$UbiTweak tweak>;

        virtualinvoke $r4.<org.spongycastle.crypto.digests.SkeinEngine$UbiTweak: void setFirst(boolean)>(0);

        r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: int currentOffset> = 0;

     label2:
        $i2 = $i1 - i3;

        $r3 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: byte[] currentBlock>;

        $i4 = lengthof $r3;

        $i5 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: int currentOffset>;

        $i4 = $i4 - $i5;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i4);

        $i4 = $i0 + i3;

        $r3 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: byte[] currentBlock>;

        $i5 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: int currentOffset>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i4, $r3, $i5, $i2);

        i3 = i3 + $i2;

        $i4 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: int currentOffset>;

        $i4 = $i4 + $i2;

        r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: int currentOffset> = $i4;

        $r4 = r0.<org.spongycastle.crypto.digests.SkeinEngine$UBI: org.spongycastle.crypto.digests.SkeinEngine$UbiTweak tweak>;

        virtualinvoke $r4.<org.spongycastle.crypto.digests.SkeinEngine$UbiTweak: void advancePosition(int)>($i2);

        goto label1;

     label3:
        return;
    }
