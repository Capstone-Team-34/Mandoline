org.spongycastle.crypto.digests.SkeinEngine$Configuration extends java.lang.Object
private byte[] bytes
    public void <init>(long)
    {
        org.spongycastle.crypto.digests.SkeinEngine$Configuration r0;
        long $l0;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.digests.SkeinEngine$Configuration;

        $l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[32];

        r0.<org.spongycastle.crypto.digests.SkeinEngine$Configuration: byte[] bytes> = $r1;

        $r1 = r0.<org.spongycastle.crypto.digests.SkeinEngine$Configuration: byte[] bytes>;

        $r1[0] = 83;

        $r1 = r0.<org.spongycastle.crypto.digests.SkeinEngine$Configuration: byte[] bytes>;

        $r1[1] = 72;

        $r1 = r0.<org.spongycastle.crypto.digests.SkeinEngine$Configuration: byte[] bytes>;

        $r1[2] = 65;

        $r1 = r0.<org.spongycastle.crypto.digests.SkeinEngine$Configuration: byte[] bytes>;

        $r1[3] = 51;

        $r1 = r0.<org.spongycastle.crypto.digests.SkeinEngine$Configuration: byte[] bytes>;

        $r1[4] = 1;

        $r1 = r0.<org.spongycastle.crypto.digests.SkeinEngine$Configuration: byte[] bytes>;

        $r1[5] = 0;

        $r1 = r0.<org.spongycastle.crypto.digests.SkeinEngine$Configuration: byte[] bytes>;

        staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: void wordToBytes(long,byte[],int)>($l0, $r1, 8);

        return;
    }
    public byte[] getBytes()
    {
        org.spongycastle.crypto.digests.SkeinEngine$Configuration r0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.digests.SkeinEngine$Configuration;

        r1 = r0.<org.spongycastle.crypto.digests.SkeinEngine$Configuration: byte[] bytes>;

        return r1;
    }
