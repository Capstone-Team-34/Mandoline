org.spongycastle.crypto.digests.LongDigest extends java.lang.Object implements org.spongycastle.crypto.ExtendedDigest org.spongycastle.crypto.digests.EncodableDigest org.spongycastle.util.Memoable
private static final int BYTE_LENGTH
static final long[] K
protected long H1
protected long H2
protected long H3
protected long H4
protected long H5
protected long H6
protected long H7
protected long H8
private long[] W
private long byteCount1
private long byteCount2
private int wOff
private byte[] xBuf
private int xBufOff
    static void <clinit>()
    {
        long[] $r0;

        $r0 = newarray (long)[80];

        $r0[0] = 4794697086780616226L;

        $r0[1] = 8158064640168781261L;

        $r0[2] = -5349999486874862801L;

        $r0[3] = -1606136188198331460L;

        $r0[4] = 4131703408338449720L;

        $r0[5] = 6480981068601479193L;

        $r0[6] = -7908458776815382629L;

        $r0[7] = -6116909921290321640L;

        $r0[8] = -2880145864133508542L;

        $r0[9] = 1334009975649890238L;

        $r0[10] = 2608012711638119052L;

        $r0[11] = 6128411473006802146L;

        $r0[12] = 8268148722764581231L;

        $r0[13] = -9160688886553864527L;

        $r0[14] = -7215885187991268811L;

        $r0[15] = -4495734319001033068L;

        $r0[16] = -1973867731355612462L;

        $r0[17] = -1171420211273849373L;

        $r0[18] = 1135362057144423861L;

        $r0[19] = 2597628984639134821L;

        $r0[20] = 3308224258029322869L;

        $r0[21] = 5365058923640841347L;

        $r0[22] = 6679025012923562964L;

        $r0[23] = 8573033837759648693L;

        $r0[24] = -7476448914759557205L;

        $r0[25] = -6327057829258317296L;

        $r0[26] = -5763719355590565569L;

        $r0[27] = -4658551843659510044L;

        $r0[28] = -4116276920077217854L;

        $r0[29] = -3051310485924567259L;

        $r0[30] = 489312712824947311L;

        $r0[31] = 1452737877330783856L;

        $r0[32] = 2861767655752347644L;

        $r0[33] = 3322285676063803686L;

        $r0[34] = 5560940570517711597L;

        $r0[35] = 5996557281743188959L;

        $r0[36] = 7280758554555802590L;

        $r0[37] = 8532644243296465576L;

        $r0[38] = -9096487096722542874L;

        $r0[39] = -7894198246740708037L;

        $r0[40] = -6719396339535248540L;

        $r0[41] = -6333637450476146687L;

        $r0[42] = -4446306890439682159L;

        $r0[43] = -4076793802049405392L;

        $r0[44] = -3345356375505022440L;

        $r0[45] = -2983346525034927856L;

        $r0[46] = -860691631967231958L;

        $r0[47] = 1182934255886127544L;

        $r0[48] = 1847814050463011016L;

        $r0[49] = 2177327727835720531L;

        $r0[50] = 2830643537854262169L;

        $r0[51] = 3796741975233480872L;

        $r0[52] = 4115178125766777443L;

        $r0[53] = 5681478168544905931L;

        $r0[54] = 6601373596472566643L;

        $r0[55] = 7507060721942968483L;

        $r0[56] = 8399075790359081724L;

        $r0[57] = 8693463985226723168L;

        $r0[58] = -8878714635349349518L;

        $r0[59] = -8302665154208450068L;

        $r0[60] = -8016688836872298968L;

        $r0[61] = -6606660893046293015L;

        $r0[62] = -4685533653050689259L;

        $r0[63] = -4147400797238176981L;

        $r0[64] = -3880063495543823972L;

        $r0[65] = -3348786107499101689L;

        $r0[66] = -1523767162380948706L;

        $r0[67] = -757361751448694408L;

        $r0[68] = 500013540394364858L;

        $r0[69] = 748580250866718886L;

        $r0[70] = 1242879168328830382L;

        $r0[71] = 1977374033974150939L;

        $r0[72] = 2944078676154940804L;

        $r0[73] = 3659926193048069267L;

        $r0[74] = 4368137639120453308L;

        $r0[75] = 4836135668995329356L;

        $r0[76] = 5532061633213252278L;

        $r0[77] = 6448918945643986474L;

        $r0[78] = 6902733635092675308L;

        $r0[79] = 7801388544844847127L;

        <org.spongycastle.crypto.digests.LongDigest: long[] K> = $r0;

        return;
    }
    protected void <init>()
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        byte[] $r1;
        long[] $r2;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf> = $r1;

        $r2 = newarray (long)[80];

        r0.<org.spongycastle.crypto.digests.LongDigest: long[] W> = $r2;

        r0.<org.spongycastle.crypto.digests.LongDigest: int xBufOff> = 0;

        virtualinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void reset()>();

        return;
    }
    protected void <init>(org.spongycastle.crypto.digests.LongDigest)
    {
        org.spongycastle.crypto.digests.LongDigest r0, $r1;
        byte[] $r2;
        long[] $r3;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $r1 := @parameter0: org.spongycastle.crypto.digests.LongDigest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[8];

        r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf> = $r2;

        $r3 = newarray (long)[80];

        r0.<org.spongycastle.crypto.digests.LongDigest: long[] W> = $r3;

        virtualinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void copyIn(org.spongycastle.crypto.digests.LongDigest)>($r1);

        return;
    }
    private long Ch(long, long, long)
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        long $l0, $l1, $l2;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        $l1 = $l0 & $l1;

        $l0 = -1L ^ $l0;

        $l0 = $l0 & $l2;

        $l0 = $l1 ^ $l0;

        return $l0;
    }
    private long Maj(long, long, long)
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        long $l0, $l1, $l2, $l3;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        $l3 = $l0 & $l1;

        $l0 = $l0 & $l2;

        $l0 = $l3 ^ $l0;

        $l1 = $l1 & $l2;

        $l0 = $l0 ^ $l1;

        return $l0;
    }
    private long Sigma0(long)
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        long $l0, $l1, $l2, $l3;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $l0 := @parameter0: long;

        $l1 = $l0 << 63;

        $l2 = $l0 >>> 1;

        $l1 = $l1 | $l2;

        $l2 = $l0 << 56;

        $l3 = $l0 >>> 8;

        $l2 = $l2 | $l3;

        $l1 = $l1 ^ $l2;

        $l0 = $l0 >>> 7;

        $l0 = $l1 ^ $l0;

        return $l0;
    }
    private long Sigma1(long)
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        long $l0, $l1, $l2, $l3;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $l0 := @parameter0: long;

        $l1 = $l0 << 45;

        $l2 = $l0 >>> 19;

        $l1 = $l1 | $l2;

        $l2 = $l0 << 3;

        $l3 = $l0 >>> 61;

        $l2 = $l2 | $l3;

        $l1 = $l1 ^ $l2;

        $l0 = $l0 >>> 6;

        $l0 = $l1 ^ $l0;

        return $l0;
    }
    private long Sum0(long)
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        long $l0, $l1, $l2, $l3;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $l0 := @parameter0: long;

        $l1 = $l0 << 36;

        $l2 = $l0 >>> 28;

        $l1 = $l1 | $l2;

        $l2 = $l0 << 30;

        $l3 = $l0 >>> 34;

        $l2 = $l2 | $l3;

        $l1 = $l1 ^ $l2;

        $l2 = $l0 << 25;

        $l0 = $l0 >>> 39;

        $l0 = $l2 | $l0;

        $l0 = $l1 ^ $l0;

        return $l0;
    }
    private long Sum1(long)
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        long $l0, $l1, $l2, $l3;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $l0 := @parameter0: long;

        $l1 = $l0 << 50;

        $l2 = $l0 >>> 14;

        $l1 = $l1 | $l2;

        $l2 = $l0 << 46;

        $l3 = $l0 >>> 18;

        $l2 = $l2 | $l3;

        $l1 = $l1 ^ $l2;

        $l2 = $l0 << 23;

        $l0 = $l0 >>> 41;

        $l0 = $l2 | $l0;

        $l0 = $l1 ^ $l0;

        return $l0;
    }
    private void adjustByteCounts()
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $l0 = r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount1>;

        $b1 = $l0 cmp 2305843009213693951L;

        if $b1 <= 0 goto label1;

        $l0 = r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount2>;

        $l2 = r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount1>;

        $l2 = $l2 >>> 61;

        $l0 = $l0 + $l2;

        r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount2> = $l0;

        $l0 = r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount1>;

        $l0 = $l0 & 2305843009213693951L;

        r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount1> = $l0;

     label1:
        return;
    }
    protected void copyIn(org.spongycastle.crypto.digests.LongDigest)
    {
        org.spongycastle.crypto.digests.LongDigest r0, $r1;
        byte[] $r2, $r3, $r4;
        int $i0;
        long $l1;
        long[] $r5, $r6, $r7;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $r1 := @parameter0: org.spongycastle.crypto.digests.LongDigest;

        $r2 = $r1.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        $r3 = r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        $r4 = $r1.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        $i0 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i0);

        $i0 = $r1.<org.spongycastle.crypto.digests.LongDigest: int xBufOff>;

        r0.<org.spongycastle.crypto.digests.LongDigest: int xBufOff> = $i0;

        $l1 = $r1.<org.spongycastle.crypto.digests.LongDigest: long byteCount1>;

        r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount1> = $l1;

        $l1 = $r1.<org.spongycastle.crypto.digests.LongDigest: long byteCount2>;

        r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount2> = $l1;

        $l1 = $r1.<org.spongycastle.crypto.digests.LongDigest: long H1>;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H1> = $l1;

        $l1 = $r1.<org.spongycastle.crypto.digests.LongDigest: long H2>;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H2> = $l1;

        $l1 = $r1.<org.spongycastle.crypto.digests.LongDigest: long H3>;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H3> = $l1;

        $l1 = $r1.<org.spongycastle.crypto.digests.LongDigest: long H4>;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H4> = $l1;

        $l1 = $r1.<org.spongycastle.crypto.digests.LongDigest: long H5>;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H5> = $l1;

        $l1 = $r1.<org.spongycastle.crypto.digests.LongDigest: long H6>;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H6> = $l1;

        $l1 = $r1.<org.spongycastle.crypto.digests.LongDigest: long H7>;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H7> = $l1;

        $l1 = $r1.<org.spongycastle.crypto.digests.LongDigest: long H8>;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H8> = $l1;

        $r5 = $r1.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $r6 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $r7 = $r1.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $i0 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r6, 0, $i0);

        $i0 = $r1.<org.spongycastle.crypto.digests.LongDigest: int wOff>;

        r0.<org.spongycastle.crypto.digests.LongDigest: int wOff> = $i0;

        return;
    }
    public void finish()
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        long l0, l1;
        int $i2;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void adjustByteCounts()>();

        l0 = r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount1>;

        l1 = l0 << 3;

        l0 = r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount2>;

        virtualinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void update(byte)>(-128);

     label1:
        $i2 = r0.<org.spongycastle.crypto.digests.LongDigest: int xBufOff>;

        if $i2 == 0 goto label2;

        virtualinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void update(byte)>(0);

        goto label1;

     label2:
        virtualinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void processLength(long,long)>(l1, l0);

        virtualinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void processBlock()>();

        return;
    }
    public int getByteLength()
    {
        org.spongycastle.crypto.digests.LongDigest r0;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        return 128;
    }
    protected int getEncodedStateSize()
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        int $i0;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $i0 = r0.<org.spongycastle.crypto.digests.LongDigest: int wOff>;

        $i0 = $i0 * 8;

        $i0 = $i0 + 96;

        return $i0;
    }
    protected void populateState(byte[])
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        byte[] $r1, $r2;
        int $i0, $i2;
        long $l1;
        long[] $r3;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $r1 := @parameter0: byte[];

        $r2 = r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        $i0 = r0.<org.spongycastle.crypto.digests.LongDigest: int xBufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        $i0 = r0.<org.spongycastle.crypto.digests.LongDigest: int xBufOff>;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i0, $r1, 8);

        $l1 = r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount1>;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, 12);

        $l1 = r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount2>;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, 20);

        $l1 = r0.<org.spongycastle.crypto.digests.LongDigest: long H1>;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, 28);

        $l1 = r0.<org.spongycastle.crypto.digests.LongDigest: long H2>;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, 36);

        $l1 = r0.<org.spongycastle.crypto.digests.LongDigest: long H3>;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, 44);

        $l1 = r0.<org.spongycastle.crypto.digests.LongDigest: long H4>;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, 52);

        $l1 = r0.<org.spongycastle.crypto.digests.LongDigest: long H5>;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, 60);

        $l1 = r0.<org.spongycastle.crypto.digests.LongDigest: long H6>;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, 68);

        $l1 = r0.<org.spongycastle.crypto.digests.LongDigest: long H7>;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, 76);

        $l1 = r0.<org.spongycastle.crypto.digests.LongDigest: long H8>;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, 84);

        $i0 = r0.<org.spongycastle.crypto.digests.LongDigest: int wOff>;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i0, $r1, 92);

        $i0 = 0;

     label1:
        $i2 = r0.<org.spongycastle.crypto.digests.LongDigest: int wOff>;

        if $i0 >= $i2 goto label2;

        $r3 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $l1 = $r3[$i0];

        $i2 = $i0 * 8;

        $i2 = $i2 + 96;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
    protected void processBlock()
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        long l0, $l3, $l4, l5, l6, l7, l8, l9, $l10, $l11;
        int i1, $i2, i12;
        long[] $r1, $r2;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void adjustByteCounts()>();

        i1 = 16;

     label1:
        if i1 > 79 goto label2;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $r2 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $i2 = i1 + -2;

        $l3 = $r2[$i2];

        $l3 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sigma1(long)>($l3);

        $r2 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $i2 = i1 + -7;

        $l4 = $r2[$i2];

        $l3 = $l3 + $l4;

        $r2 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $i2 = i1 + -15;

        $l4 = $r2[$i2];

        $l4 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sigma0(long)>($l4);

        $l3 = $l3 + $l4;

        $r2 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $i2 = i1 + -16;

        $l4 = $r2[$i2];

        $l3 = $l3 + $l4;

        $r1[i1] = $l3;

        i1 = i1 + 1;

        goto label1;

     label2:
        l5 = r0.<org.spongycastle.crypto.digests.LongDigest: long H1>;

        l6 = r0.<org.spongycastle.crypto.digests.LongDigest: long H2>;

        l7 = r0.<org.spongycastle.crypto.digests.LongDigest: long H3>;

        l0 = r0.<org.spongycastle.crypto.digests.LongDigest: long H4>;

        l8 = r0.<org.spongycastle.crypto.digests.LongDigest: long H5>;

        l9 = r0.<org.spongycastle.crypto.digests.LongDigest: long H6>;

        $l4 = r0.<org.spongycastle.crypto.digests.LongDigest: long H7>;

        $l3 = r0.<org.spongycastle.crypto.digests.LongDigest: long H8>;

        i1 = 0;

        $i2 = 0;

     label3:
        if i1 >= 10 goto label4;

        $l10 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum1(long)>(l8);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Ch(long,long,long)>(l8, l9, $l4);

        $l10 = $l10 + $l11;

        $r1 = <org.spongycastle.crypto.digests.LongDigest: long[] K>;

        $l11 = $r1[$i2];

        $l10 = $l10 + $l11;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        i12 = $i2 + 1;

        $l11 = $r1[$i2];

        $l10 = $l10 + $l11;

        $l10 = $l3 + $l10;

        $l3 = l0 + $l10;

        l0 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum0(long)>(l5);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Maj(long,long,long)>(l5, l6, l7);

        l0 = l0 + $l11;

        l0 = $l10 + l0;

        $l10 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum1(long)>($l3);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Ch(long,long,long)>($l3, l8, l9);

        $l10 = $l11 + $l10;

        $r1 = <org.spongycastle.crypto.digests.LongDigest: long[] K>;

        $l11 = $r1[i12];

        $l10 = $l10 + $l11;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $i2 = i12 + 1;

        $l11 = $r1[i12];

        $l10 = $l10 + $l11;

        $l10 = $l4 + $l10;

        $l4 = l7 + $l10;

        l7 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum0(long)>(l0);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Maj(long,long,long)>(l0, l5, l6);

        l7 = $l11 + l7;

        l7 = $l10 + l7;

        $l10 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum1(long)>($l4);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Ch(long,long,long)>($l4, $l3, l8);

        $l10 = $l11 + $l10;

        $r1 = <org.spongycastle.crypto.digests.LongDigest: long[] K>;

        $l11 = $r1[$i2];

        $l10 = $l10 + $l11;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        i12 = $i2 + 1;

        $l11 = $r1[$i2];

        $l10 = $l10 + $l11;

        $l10 = l9 + $l10;

        l9 = l6 + $l10;

        l6 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum0(long)>(l7);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Maj(long,long,long)>(l7, l0, l5);

        l6 = $l11 + l6;

        l6 = $l10 + l6;

        $l10 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum1(long)>(l9);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Ch(long,long,long)>(l9, $l4, $l3);

        $l10 = $l11 + $l10;

        $r1 = <org.spongycastle.crypto.digests.LongDigest: long[] K>;

        $l11 = $r1[i12];

        $l10 = $l10 + $l11;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $i2 = i12 + 1;

        $l11 = $r1[i12];

        $l10 = $l10 + $l11;

        $l10 = l8 + $l10;

        l8 = l5 + $l10;

        l5 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum0(long)>(l6);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Maj(long,long,long)>(l6, l7, l0);

        l5 = $l11 + l5;

        l5 = $l10 + l5;

        $l10 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum1(long)>(l8);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Ch(long,long,long)>(l8, l9, $l4);

        $l10 = $l10 + $l11;

        $r1 = <org.spongycastle.crypto.digests.LongDigest: long[] K>;

        $l11 = $r1[$i2];

        $l10 = $l10 + $l11;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        i12 = $i2 + 1;

        $l11 = $r1[$i2];

        $l10 = $l10 + $l11;

        $l10 = $l3 + $l10;

        $l3 = l0 + $l10;

        l0 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum0(long)>(l5);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Maj(long,long,long)>(l5, l6, l7);

        l0 = l0 + $l11;

        l0 = $l10 + l0;

        $l10 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum1(long)>($l3);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Ch(long,long,long)>($l3, l8, l9);

        $l10 = $l11 + $l10;

        $r1 = <org.spongycastle.crypto.digests.LongDigest: long[] K>;

        $l11 = $r1[i12];

        $l10 = $l10 + $l11;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $i2 = i12 + 1;

        $l11 = $r1[i12];

        $l10 = $l10 + $l11;

        $l10 = $l4 + $l10;

        $l4 = l7 + $l10;

        l7 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum0(long)>(l0);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Maj(long,long,long)>(l0, l5, l6);

        l7 = l7 + $l11;

        l7 = $l10 + l7;

        $l10 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum1(long)>($l4);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Ch(long,long,long)>($l4, $l3, l8);

        $l10 = $l10 + $l11;

        $r1 = <org.spongycastle.crypto.digests.LongDigest: long[] K>;

        $l11 = $r1[$i2];

        $l10 = $l10 + $l11;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        i12 = $i2 + 1;

        $l11 = $r1[$i2];

        $l10 = $l10 + $l11;

        $l10 = l9 + $l10;

        l9 = l6 + $l10;

        l6 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum0(long)>(l7);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Maj(long,long,long)>(l7, l0, l5);

        l6 = l6 + $l11;

        l6 = $l10 + l6;

        $l10 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum1(long)>(l9);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Ch(long,long,long)>(l9, $l4, $l3);

        $l10 = $l10 + $l11;

        $r1 = <org.spongycastle.crypto.digests.LongDigest: long[] K>;

        $l11 = $r1[i12];

        $l10 = $l10 + $l11;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $i2 = i12 + 1;

        $l11 = $r1[i12];

        $l10 = $l10 + $l11;

        $l10 = l8 + $l10;

        l8 = l5 + $l10;

        l5 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Sum0(long)>(l6);

        $l11 = specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: long Maj(long,long,long)>(l6, l7, l0);

        l5 = l5 + $l11;

        l5 = $l10 + l5;

        i1 = i1 + 1;

        goto label3;

     label4:
        $l10 = r0.<org.spongycastle.crypto.digests.LongDigest: long H1>;

        l5 = $l10 + l5;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H1> = l5;

        l5 = r0.<org.spongycastle.crypto.digests.LongDigest: long H2>;

        l6 = l5 + l6;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H2> = l6;

        l6 = r0.<org.spongycastle.crypto.digests.LongDigest: long H3>;

        l7 = l6 + l7;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H3> = l7;

        l7 = r0.<org.spongycastle.crypto.digests.LongDigest: long H4>;

        l0 = l7 + l0;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H4> = l0;

        l0 = r0.<org.spongycastle.crypto.digests.LongDigest: long H5>;

        l8 = l0 + l8;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H5> = l8;

        l8 = r0.<org.spongycastle.crypto.digests.LongDigest: long H6>;

        l9 = l8 + l9;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H6> = l9;

        l9 = r0.<org.spongycastle.crypto.digests.LongDigest: long H7>;

        $l4 = l9 + $l4;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H7> = $l4;

        $l4 = r0.<org.spongycastle.crypto.digests.LongDigest: long H8>;

        $l3 = $l4 + $l3;

        r0.<org.spongycastle.crypto.digests.LongDigest: long H8> = $l3;

        r0.<org.spongycastle.crypto.digests.LongDigest: int wOff> = 0;

        i1 = 0;

     label5:
        if i1 >= 16 goto label6;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $r1[i1] = 0L;

        i1 = i1 + 1;

        goto label5;

     label6:
        return;
    }
    protected void processLength(long, long)
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        long $l0, $l1;
        int $i2;
        long[] $r1;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $i2 = r0.<org.spongycastle.crypto.digests.LongDigest: int wOff>;

        if $i2 <= 14 goto label1;

        virtualinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void processBlock()>();

     label1:
        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $r1[14] = $l1;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $r1[15] = $l0;

        return;
    }
    protected void processWord(byte[], int)
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        byte[] $r1;
        int $i0, $i2;
        long $l1;
        long[] $r2;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $i2 = r0.<org.spongycastle.crypto.digests.LongDigest: int wOff>;

        $l1 = staticinvoke <org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>($r1, $i0);

        $r2[$i2] = $l1;

        $i0 = r0.<org.spongycastle.crypto.digests.LongDigest: int wOff>;

        $i0 = $i0 + 1;

        r0.<org.spongycastle.crypto.digests.LongDigest: int wOff> = $i0;

        if $i0 != 16 goto label1;

        virtualinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void processBlock()>();

     label1:
        return;
    }
    public void reset()
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        int i0, $i1;
        byte[] $r1;
        long[] $r2;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount1> = 0L;

        r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount2> = 0L;

        r0.<org.spongycastle.crypto.digests.LongDigest: int xBufOff> = 0;

        i0 = 0;

     label1:
        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label2;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        $r1[i0] = 0;

        i0 = i0 + 1;

        goto label1;

     label2:
        r0.<org.spongycastle.crypto.digests.LongDigest: int wOff> = 0;

        i0 = 0;

     label3:
        $r2 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $i1 = lengthof $r2;

        if i0 == $i1 goto label4;

        $r2 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $r2[i0] = 0L;

        i0 = i0 + 1;

        goto label3;

     label4:
        return;
    }
    protected void restoreState(byte[])
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        byte[] $r1, $r2;
        int $i0, $i2;
        long $l1;
        long[] $r3;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $r1 := @parameter0: byte[];

        $i0 = staticinvoke <org.spongycastle.util.Pack: int bigEndianToInt(byte[],int)>($r1, 8);

        r0.<org.spongycastle.crypto.digests.LongDigest: int xBufOff> = $i0;

        $r2 = r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        $i0 = r0.<org.spongycastle.crypto.digests.LongDigest: int xBufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        $l1 = staticinvoke <org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>($r1, 12);

        r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount1> = $l1;

        $l1 = staticinvoke <org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>($r1, 20);

        r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount2> = $l1;

        $l1 = staticinvoke <org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>($r1, 28);

        r0.<org.spongycastle.crypto.digests.LongDigest: long H1> = $l1;

        $l1 = staticinvoke <org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>($r1, 36);

        r0.<org.spongycastle.crypto.digests.LongDigest: long H2> = $l1;

        $l1 = staticinvoke <org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>($r1, 44);

        r0.<org.spongycastle.crypto.digests.LongDigest: long H3> = $l1;

        $l1 = staticinvoke <org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>($r1, 52);

        r0.<org.spongycastle.crypto.digests.LongDigest: long H4> = $l1;

        $l1 = staticinvoke <org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>($r1, 60);

        r0.<org.spongycastle.crypto.digests.LongDigest: long H5> = $l1;

        $l1 = staticinvoke <org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>($r1, 68);

        r0.<org.spongycastle.crypto.digests.LongDigest: long H6> = $l1;

        $l1 = staticinvoke <org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>($r1, 76);

        r0.<org.spongycastle.crypto.digests.LongDigest: long H7> = $l1;

        $l1 = staticinvoke <org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>($r1, 84);

        r0.<org.spongycastle.crypto.digests.LongDigest: long H8> = $l1;

        $i0 = staticinvoke <org.spongycastle.util.Pack: int bigEndianToInt(byte[],int)>($r1, 92);

        r0.<org.spongycastle.crypto.digests.LongDigest: int wOff> = $i0;

        $i0 = 0;

     label1:
        $i2 = r0.<org.spongycastle.crypto.digests.LongDigest: int wOff>;

        if $i0 >= $i2 goto label2;

        $r3 = r0.<org.spongycastle.crypto.digests.LongDigest: long[] W>;

        $i2 = $i0 * 8;

        $i2 = $i2 + 96;

        $l1 = staticinvoke <org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>($r1, $i2);

        $r3[$i0] = $l1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
    public void update(byte)
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        byte $b0;
        byte[] $r1;
        int $i1, $i2;
        long $l3;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $b0 := @parameter0: byte;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        $i1 = r0.<org.spongycastle.crypto.digests.LongDigest: int xBufOff>;

        $i2 = $i1 + 1;

        r0.<org.spongycastle.crypto.digests.LongDigest: int xBufOff> = $i2;

        $r1[$i1] = $b0;

        $i1 = r0.<org.spongycastle.crypto.digests.LongDigest: int xBufOff>;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        $i2 = lengthof $r1;

        if $i1 != $i2 goto label1;

        $r1 = r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        virtualinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void processWord(byte[],int)>($r1, 0);

        r0.<org.spongycastle.crypto.digests.LongDigest: int xBufOff> = 0;

     label1:
        $l3 = r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount1>;

        $l3 = $l3 + 1L;

        r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount1> = $l3;

        return;
    }
    public void update(byte[], int, int)
    {
        org.spongycastle.crypto.digests.LongDigest r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;
        byte $b3;
        long $l4, $l5;

        r0 := @this: org.spongycastle.crypto.digests.LongDigest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        $i2 = r0.<org.spongycastle.crypto.digests.LongDigest: int xBufOff>;

        if $i2 == 0 goto label2;

        if $i1 <= 0 goto label2;

        $b3 = $r1[$i0];

        virtualinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void update(byte)>($b3);

        $i0 = $i0 + 1;

        $i1 = $i1 + -1;

        goto label1;

     label2:
        $r2 = r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        $i2 = lengthof $r2;

        if $i1 <= $i2 goto label3;

        virtualinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void processWord(byte[],int)>($r1, $i0);

        $r2 = r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        $i2 = lengthof $r2;

        $i0 = $i0 + $i2;

        $r2 = r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        $i2 = lengthof $r2;

        $i1 = $i1 - $i2;

        $l4 = r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount1>;

        $r2 = r0.<org.spongycastle.crypto.digests.LongDigest: byte[] xBuf>;

        $i2 = lengthof $r2;

        $l5 = (long) $i2;

        $l4 = $l4 + $l5;

        r0.<org.spongycastle.crypto.digests.LongDigest: long byteCount1> = $l4;

        goto label2;

     label3:
        if $i1 <= 0 goto label4;

        $b3 = $r1[$i0];

        virtualinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void update(byte)>($b3);

        $i0 = $i0 + 1;

        $i1 = $i1 + -1;

        goto label3;

     label4:
        return;
    }
