org.spongycastle.crypto.digests.SHA512Digest extends org.spongycastle.crypto.digests.LongDigest
private static final int DIGEST_LENGTH
    public void <init>()
    {
        org.spongycastle.crypto.digests.SHA512Digest r0;

        r0 := @this: org.spongycastle.crypto.digests.SHA512Digest;

        specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void <init>()>();

        return;
    }
    public void <init>(org.spongycastle.crypto.digests.SHA512Digest)
    {
        org.spongycastle.crypto.digests.SHA512Digest r0, $r1;

        r0 := @this: org.spongycastle.crypto.digests.SHA512Digest;

        $r1 := @parameter0: org.spongycastle.crypto.digests.SHA512Digest;

        specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void <init>(org.spongycastle.crypto.digests.LongDigest)>($r1);

        return;
    }
    public void <init>(byte[])
    {
        org.spongycastle.crypto.digests.SHA512Digest r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.digests.SHA512Digest;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void <init>()>();

        virtualinvoke r0.<org.spongycastle.crypto.digests.SHA512Digest: void restoreState(byte[])>($r1);

        return;
    }
    public org.spongycastle.util.Memoable copy()
    {
        org.spongycastle.crypto.digests.SHA512Digest r0, $r1;

        r0 := @this: org.spongycastle.crypto.digests.SHA512Digest;

        $r1 = new org.spongycastle.crypto.digests.SHA512Digest;

        specialinvoke $r1.<org.spongycastle.crypto.digests.SHA512Digest: void <init>(org.spongycastle.crypto.digests.SHA512Digest)>(r0);

        return $r1;
    }
    public int doFinal(byte[], int)
    {
        org.spongycastle.crypto.digests.SHA512Digest r0;
        byte[] $r1;
        int $i0, $i2;
        long $l1;

        r0 := @this: org.spongycastle.crypto.digests.SHA512Digest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        virtualinvoke r0.<org.spongycastle.crypto.digests.SHA512Digest: void finish()>();

        $l1 = r0.<org.spongycastle.crypto.digests.SHA512Digest: long H1>;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i0);

        $l1 = r0.<org.spongycastle.crypto.digests.SHA512Digest: long H2>;

        $i2 = $i0 + 8;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i2);

        $l1 = r0.<org.spongycastle.crypto.digests.SHA512Digest: long H3>;

        $i2 = $i0 + 16;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i2);

        $l1 = r0.<org.spongycastle.crypto.digests.SHA512Digest: long H4>;

        $i2 = $i0 + 24;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i2);

        $l1 = r0.<org.spongycastle.crypto.digests.SHA512Digest: long H5>;

        $i2 = $i0 + 32;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i2);

        $l1 = r0.<org.spongycastle.crypto.digests.SHA512Digest: long H6>;

        $i2 = $i0 + 40;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i2);

        $l1 = r0.<org.spongycastle.crypto.digests.SHA512Digest: long H7>;

        $i2 = $i0 + 48;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i2);

        $l1 = r0.<org.spongycastle.crypto.digests.SHA512Digest: long H8>;

        $i0 = $i0 + 56;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i0);

        virtualinvoke r0.<org.spongycastle.crypto.digests.SHA512Digest: void reset()>();

        return 64;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.digests.SHA512Digest r0;

        r0 := @this: org.spongycastle.crypto.digests.SHA512Digest;

        return "SHA-512";
    }
    public int getDigestSize()
    {
        org.spongycastle.crypto.digests.SHA512Digest r0;

        r0 := @this: org.spongycastle.crypto.digests.SHA512Digest;

        return 64;
    }
    public byte[] getEncodedState()
    {
        org.spongycastle.crypto.digests.SHA512Digest r0;
        byte[] r1;
        int $i0;

        r0 := @this: org.spongycastle.crypto.digests.SHA512Digest;

        $i0 = virtualinvoke r0.<org.spongycastle.crypto.digests.SHA512Digest: int getEncodedStateSize()>();

        r1 = newarray (byte)[$i0];

        specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void populateState(byte[])>(r1);

        return r1;
    }
    public void reset()
    {
        org.spongycastle.crypto.digests.SHA512Digest r0;

        r0 := @this: org.spongycastle.crypto.digests.SHA512Digest;

        specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void reset()>();

        r0.<org.spongycastle.crypto.digests.SHA512Digest: long H1> = 7640891576956012808L;

        r0.<org.spongycastle.crypto.digests.SHA512Digest: long H2> = -4942790177534073029L;

        r0.<org.spongycastle.crypto.digests.SHA512Digest: long H3> = 4354685564936845355L;

        r0.<org.spongycastle.crypto.digests.SHA512Digest: long H4> = -6534734903238641935L;

        r0.<org.spongycastle.crypto.digests.SHA512Digest: long H5> = 5840696475078001361L;

        r0.<org.spongycastle.crypto.digests.SHA512Digest: long H6> = -7276294671716946913L;

        r0.<org.spongycastle.crypto.digests.SHA512Digest: long H7> = 2270897969802886507L;

        r0.<org.spongycastle.crypto.digests.SHA512Digest: long H8> = 6620516959819538809L;

        return;
    }
    public void reset(org.spongycastle.util.Memoable)
    {
        org.spongycastle.crypto.digests.SHA512Digest r0, r2;
        org.spongycastle.util.Memoable $r1;

        r0 := @this: org.spongycastle.crypto.digests.SHA512Digest;

        $r1 := @parameter0: org.spongycastle.util.Memoable;

        r2 = (org.spongycastle.crypto.digests.SHA512Digest) $r1;

        virtualinvoke r0.<org.spongycastle.crypto.digests.SHA512Digest: void copyIn(org.spongycastle.crypto.digests.LongDigest)>(r2);

        return;
    }
