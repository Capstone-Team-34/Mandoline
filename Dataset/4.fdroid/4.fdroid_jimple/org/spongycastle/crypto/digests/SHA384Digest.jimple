org.spongycastle.crypto.digests.SHA384Digest extends org.spongycastle.crypto.digests.LongDigest
private static final int DIGEST_LENGTH
    public void <init>()
    {
        org.spongycastle.crypto.digests.SHA384Digest r0;

        r0 := @this: org.spongycastle.crypto.digests.SHA384Digest;

        specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void <init>()>();

        return;
    }
    public void <init>(org.spongycastle.crypto.digests.SHA384Digest)
    {
        org.spongycastle.crypto.digests.SHA384Digest r0, $r1;

        r0 := @this: org.spongycastle.crypto.digests.SHA384Digest;

        $r1 := @parameter0: org.spongycastle.crypto.digests.SHA384Digest;

        specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void <init>(org.spongycastle.crypto.digests.LongDigest)>($r1);

        return;
    }
    public void <init>(byte[])
    {
        org.spongycastle.crypto.digests.SHA384Digest r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.digests.SHA384Digest;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void <init>()>();

        virtualinvoke r0.<org.spongycastle.crypto.digests.SHA384Digest: void restoreState(byte[])>($r1);

        return;
    }
    public org.spongycastle.util.Memoable copy()
    {
        org.spongycastle.crypto.digests.SHA384Digest r0, $r1;

        r0 := @this: org.spongycastle.crypto.digests.SHA384Digest;

        $r1 = new org.spongycastle.crypto.digests.SHA384Digest;

        specialinvoke $r1.<org.spongycastle.crypto.digests.SHA384Digest: void <init>(org.spongycastle.crypto.digests.SHA384Digest)>(r0);

        return $r1;
    }
    public int doFinal(byte[], int)
    {
        org.spongycastle.crypto.digests.SHA384Digest r0;
        byte[] $r1;
        int $i0, $i2;
        long $l1;

        r0 := @this: org.spongycastle.crypto.digests.SHA384Digest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        virtualinvoke r0.<org.spongycastle.crypto.digests.SHA384Digest: void finish()>();

        $l1 = r0.<org.spongycastle.crypto.digests.SHA384Digest: long H1>;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i0);

        $l1 = r0.<org.spongycastle.crypto.digests.SHA384Digest: long H2>;

        $i2 = $i0 + 8;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i2);

        $l1 = r0.<org.spongycastle.crypto.digests.SHA384Digest: long H3>;

        $i2 = $i0 + 16;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i2);

        $l1 = r0.<org.spongycastle.crypto.digests.SHA384Digest: long H4>;

        $i2 = $i0 + 24;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i2);

        $l1 = r0.<org.spongycastle.crypto.digests.SHA384Digest: long H5>;

        $i2 = $i0 + 32;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i2);

        $l1 = r0.<org.spongycastle.crypto.digests.SHA384Digest: long H6>;

        $i0 = $i0 + 40;

        staticinvoke <org.spongycastle.util.Pack: void longToBigEndian(long,byte[],int)>($l1, $r1, $i0);

        virtualinvoke r0.<org.spongycastle.crypto.digests.SHA384Digest: void reset()>();

        return 48;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.digests.SHA384Digest r0;

        r0 := @this: org.spongycastle.crypto.digests.SHA384Digest;

        return "SHA-384";
    }
    public int getDigestSize()
    {
        org.spongycastle.crypto.digests.SHA384Digest r0;

        r0 := @this: org.spongycastle.crypto.digests.SHA384Digest;

        return 48;
    }
    public byte[] getEncodedState()
    {
        org.spongycastle.crypto.digests.SHA384Digest r0;
        byte[] r1;
        int $i0;

        r0 := @this: org.spongycastle.crypto.digests.SHA384Digest;

        $i0 = virtualinvoke r0.<org.spongycastle.crypto.digests.SHA384Digest: int getEncodedStateSize()>();

        r1 = newarray (byte)[$i0];

        specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void populateState(byte[])>(r1);

        return r1;
    }
    public void reset()
    {
        org.spongycastle.crypto.digests.SHA384Digest r0;

        r0 := @this: org.spongycastle.crypto.digests.SHA384Digest;

        specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void reset()>();

        r0.<org.spongycastle.crypto.digests.SHA384Digest: long H1> = -3766243637369397544L;

        r0.<org.spongycastle.crypto.digests.SHA384Digest: long H2> = 7105036623409894663L;

        r0.<org.spongycastle.crypto.digests.SHA384Digest: long H3> = -7973340178411365097L;

        r0.<org.spongycastle.crypto.digests.SHA384Digest: long H4> = 1526699215303891257L;

        r0.<org.spongycastle.crypto.digests.SHA384Digest: long H5> = 7436329637833083697L;

        r0.<org.spongycastle.crypto.digests.SHA384Digest: long H6> = -8163818279084223215L;

        r0.<org.spongycastle.crypto.digests.SHA384Digest: long H7> = -2662702644619276377L;

        r0.<org.spongycastle.crypto.digests.SHA384Digest: long H8> = 5167115440072839076L;

        return;
    }
    public void reset(org.spongycastle.util.Memoable)
    {
        org.spongycastle.crypto.digests.SHA384Digest r0, r2;
        org.spongycastle.util.Memoable $r1;

        r0 := @this: org.spongycastle.crypto.digests.SHA384Digest;

        $r1 := @parameter0: org.spongycastle.util.Memoable;

        r2 = (org.spongycastle.crypto.digests.SHA384Digest) $r1;

        specialinvoke r0.<org.spongycastle.crypto.digests.LongDigest: void copyIn(org.spongycastle.crypto.digests.LongDigest)>(r2);

        return;
    }
