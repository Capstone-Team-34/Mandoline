org.spongycastle.crypto.digests.MD2Digest extends java.lang.Object implements org.spongycastle.crypto.ExtendedDigest org.spongycastle.util.Memoable
private static final int DIGEST_LENGTH
private static final byte[] S
private byte[] C
private int COff
private byte[] M
private byte[] X
private int mOff
private int xOff
    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[256];

        $r0[0] = 41;

        $r0[1] = 46;

        $r0[2] = 67;

        $r0[3] = -55;

        $r0[4] = -94;

        $r0[5] = -40;

        $r0[6] = 124;

        $r0[7] = 1;

        $r0[8] = 61;

        $r0[9] = 54;

        $r0[10] = 84;

        $r0[11] = -95;

        $r0[12] = -20;

        $r0[13] = -16;

        $r0[14] = 6;

        $r0[15] = 19;

        $r0[16] = 98;

        $r0[17] = -89;

        $r0[18] = 5;

        $r0[19] = -13;

        $r0[20] = -64;

        $r0[21] = -57;

        $r0[22] = 115;

        $r0[23] = -116;

        $r0[24] = -104;

        $r0[25] = -109;

        $r0[26] = 43;

        $r0[27] = -39;

        $r0[28] = -68;

        $r0[29] = 76;

        $r0[30] = -126;

        $r0[31] = -54;

        $r0[32] = 30;

        $r0[33] = -101;

        $r0[34] = 87;

        $r0[35] = 60;

        $r0[36] = -3;

        $r0[37] = -44;

        $r0[38] = -32;

        $r0[39] = 22;

        $r0[40] = 103;

        $r0[41] = 66;

        $r0[42] = 111;

        $r0[43] = 24;

        $r0[44] = -118;

        $r0[45] = 23;

        $r0[46] = -27;

        $r0[47] = 18;

        $r0[48] = -66;

        $r0[49] = 78;

        $r0[50] = -60;

        $r0[51] = -42;

        $r0[52] = -38;

        $r0[53] = -98;

        $r0[54] = -34;

        $r0[55] = 73;

        $r0[56] = -96;

        $r0[57] = -5;

        $r0[58] = -11;

        $r0[59] = -114;

        $r0[60] = -69;

        $r0[61] = 47;

        $r0[62] = -18;

        $r0[63] = 122;

        $r0[64] = -87;

        $r0[65] = 104;

        $r0[66] = 121;

        $r0[67] = -111;

        $r0[68] = 21;

        $r0[69] = -78;

        $r0[70] = 7;

        $r0[71] = 63;

        $r0[72] = -108;

        $r0[73] = -62;

        $r0[74] = 16;

        $r0[75] = -119;

        $r0[76] = 11;

        $r0[77] = 34;

        $r0[78] = 95;

        $r0[79] = 33;

        $r0[80] = -128;

        $r0[81] = 127;

        $r0[82] = 93;

        $r0[83] = -102;

        $r0[84] = 90;

        $r0[85] = -112;

        $r0[86] = 50;

        $r0[87] = 39;

        $r0[88] = 53;

        $r0[89] = 62;

        $r0[90] = -52;

        $r0[91] = -25;

        $r0[92] = -65;

        $r0[93] = -9;

        $r0[94] = -105;

        $r0[95] = 3;

        $r0[96] = -1;

        $r0[97] = 25;

        $r0[98] = 48;

        $r0[99] = -77;

        $r0[100] = 72;

        $r0[101] = -91;

        $r0[102] = -75;

        $r0[103] = -47;

        $r0[104] = -41;

        $r0[105] = 94;

        $r0[106] = -110;

        $r0[107] = 42;

        $r0[108] = -84;

        $r0[109] = 86;

        $r0[110] = -86;

        $r0[111] = -58;

        $r0[112] = 79;

        $r0[113] = -72;

        $r0[114] = 56;

        $r0[115] = -46;

        $r0[116] = -106;

        $r0[117] = -92;

        $r0[118] = 125;

        $r0[119] = -74;

        $r0[120] = 118;

        $r0[121] = -4;

        $r0[122] = 107;

        $r0[123] = -30;

        $r0[124] = -100;

        $r0[125] = 116;

        $r0[126] = 4;

        $r0[127] = -15;

        $r0[128] = 69;

        $r0[129] = -99;

        $r0[130] = 112;

        $r0[131] = 89;

        $r0[132] = 100;

        $r0[133] = 113;

        $r0[134] = -121;

        $r0[135] = 32;

        $r0[136] = -122;

        $r0[137] = 91;

        $r0[138] = -49;

        $r0[139] = 101;

        $r0[140] = -26;

        $r0[141] = 45;

        $r0[142] = -88;

        $r0[143] = 2;

        $r0[144] = 27;

        $r0[145] = 96;

        $r0[146] = 37;

        $r0[147] = -83;

        $r0[148] = -82;

        $r0[149] = -80;

        $r0[150] = -71;

        $r0[151] = -10;

        $r0[152] = 28;

        $r0[153] = 70;

        $r0[154] = 97;

        $r0[155] = 105;

        $r0[156] = 52;

        $r0[157] = 64;

        $r0[158] = 126;

        $r0[159] = 15;

        $r0[160] = 85;

        $r0[161] = 71;

        $r0[162] = -93;

        $r0[163] = 35;

        $r0[164] = -35;

        $r0[165] = 81;

        $r0[166] = -81;

        $r0[167] = 58;

        $r0[168] = -61;

        $r0[169] = 92;

        $r0[170] = -7;

        $r0[171] = -50;

        $r0[172] = -70;

        $r0[173] = -59;

        $r0[174] = -22;

        $r0[175] = 38;

        $r0[176] = 44;

        $r0[177] = 83;

        $r0[178] = 13;

        $r0[179] = 110;

        $r0[180] = -123;

        $r0[181] = 40;

        $r0[182] = -124;

        $r0[183] = 9;

        $r0[184] = -45;

        $r0[185] = -33;

        $r0[186] = -51;

        $r0[187] = -12;

        $r0[188] = 65;

        $r0[189] = -127;

        $r0[190] = 77;

        $r0[191] = 82;

        $r0[192] = 106;

        $r0[193] = -36;

        $r0[194] = 55;

        $r0[195] = -56;

        $r0[196] = 108;

        $r0[197] = -63;

        $r0[198] = -85;

        $r0[199] = -6;

        $r0[200] = 36;

        $r0[201] = -31;

        $r0[202] = 123;

        $r0[203] = 8;

        $r0[204] = 12;

        $r0[205] = -67;

        $r0[206] = -79;

        $r0[207] = 74;

        $r0[208] = 120;

        $r0[209] = -120;

        $r0[210] = -107;

        $r0[211] = -117;

        $r0[212] = -29;

        $r0[213] = 99;

        $r0[214] = -24;

        $r0[215] = 109;

        $r0[216] = -23;

        $r0[217] = -53;

        $r0[218] = -43;

        $r0[219] = -2;

        $r0[220] = 59;

        $r0[221] = 0;

        $r0[222] = 29;

        $r0[223] = 57;

        $r0[224] = -14;

        $r0[225] = -17;

        $r0[226] = -73;

        $r0[227] = 14;

        $r0[228] = 102;

        $r0[229] = 88;

        $r0[230] = -48;

        $r0[231] = -28;

        $r0[232] = -90;

        $r0[233] = 119;

        $r0[234] = 114;

        $r0[235] = -8;

        $r0[236] = -21;

        $r0[237] = 117;

        $r0[238] = 75;

        $r0[239] = 10;

        $r0[240] = 49;

        $r0[241] = 68;

        $r0[242] = 80;

        $r0[243] = -76;

        $r0[244] = -113;

        $r0[245] = -19;

        $r0[246] = 31;

        $r0[247] = 26;

        $r0[248] = -37;

        $r0[249] = -103;

        $r0[250] = -115;

        $r0[251] = 51;

        $r0[252] = -97;

        $r0[253] = 17;

        $r0[254] = -125;

        $r0[255] = 20;

        <org.spongycastle.crypto.digests.MD2Digest: byte[] S> = $r0;

        return;
    }
    public void <init>()
    {
        org.spongycastle.crypto.digests.MD2Digest r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[48];

        r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] X> = $r1;

        $r1 = newarray (byte)[16];

        r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M> = $r1;

        $r1 = newarray (byte)[16];

        r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] C> = $r1;

        virtualinvoke r0.<org.spongycastle.crypto.digests.MD2Digest: void reset()>();

        return;
    }
    public void <init>(org.spongycastle.crypto.digests.MD2Digest)
    {
        org.spongycastle.crypto.digests.MD2Digest r0, $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        $r1 := @parameter0: org.spongycastle.crypto.digests.MD2Digest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[48];

        r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] X> = $r2;

        $r2 = newarray (byte)[16];

        r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M> = $r2;

        $r2 = newarray (byte)[16];

        r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] C> = $r2;

        specialinvoke r0.<org.spongycastle.crypto.digests.MD2Digest: void copyIn(org.spongycastle.crypto.digests.MD2Digest)>($r1);

        return;
    }
    private void copyIn(org.spongycastle.crypto.digests.MD2Digest)
    {
        org.spongycastle.crypto.digests.MD2Digest r0, $r1;
        byte[] $r2, $r3, $r4;
        int $i0;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        $r1 := @parameter0: org.spongycastle.crypto.digests.MD2Digest;

        $r2 = $r1.<org.spongycastle.crypto.digests.MD2Digest: byte[] X>;

        $r3 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] X>;

        $r4 = $r1.<org.spongycastle.crypto.digests.MD2Digest: byte[] X>;

        $i0 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i0);

        $i0 = $r1.<org.spongycastle.crypto.digests.MD2Digest: int xOff>;

        r0.<org.spongycastle.crypto.digests.MD2Digest: int xOff> = $i0;

        $r2 = $r1.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        $r3 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        $r4 = $r1.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        $i0 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i0);

        $i0 = $r1.<org.spongycastle.crypto.digests.MD2Digest: int mOff>;

        r0.<org.spongycastle.crypto.digests.MD2Digest: int mOff> = $i0;

        $r2 = $r1.<org.spongycastle.crypto.digests.MD2Digest: byte[] C>;

        $r3 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] C>;

        $r4 = $r1.<org.spongycastle.crypto.digests.MD2Digest: byte[] C>;

        $i0 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i0);

        $i0 = $r1.<org.spongycastle.crypto.digests.MD2Digest: int COff>;

        r0.<org.spongycastle.crypto.digests.MD2Digest: int COff> = $i0;

        return;
    }
    public org.spongycastle.util.Memoable copy()
    {
        org.spongycastle.crypto.digests.MD2Digest r0, $r1;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        $r1 = new org.spongycastle.crypto.digests.MD2Digest;

        specialinvoke $r1.<org.spongycastle.crypto.digests.MD2Digest: void <init>(org.spongycastle.crypto.digests.MD2Digest)>(r0);

        return $r1;
    }
    public int doFinal(byte[], int)
    {
        org.spongycastle.crypto.digests.MD2Digest r0;
        byte[] $r1, $r2;
        int $i0, $i2, $i3;
        byte b1;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        $i2 = lengthof $r2;

        $i3 = r0.<org.spongycastle.crypto.digests.MD2Digest: int mOff>;

        $i2 = $i2 - $i3;

        b1 = (byte) $i2;

        $i2 = r0.<org.spongycastle.crypto.digests.MD2Digest: int mOff>;

     label1:
        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        $i3 = lengthof $r2;

        if $i2 >= $i3 goto label2;

        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        $r2[$i2] = b1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        virtualinvoke r0.<org.spongycastle.crypto.digests.MD2Digest: void processCheckSum(byte[])>($r2);

        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        virtualinvoke r0.<org.spongycastle.crypto.digests.MD2Digest: void processBlock(byte[])>($r2);

        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] C>;

        virtualinvoke r0.<org.spongycastle.crypto.digests.MD2Digest: void processBlock(byte[])>($r2);

        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] X>;

        $i2 = r0.<org.spongycastle.crypto.digests.MD2Digest: int xOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r1, $i0, 16);

        virtualinvoke r0.<org.spongycastle.crypto.digests.MD2Digest: void reset()>();

        return 16;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.digests.MD2Digest r0;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        return "MD2";
    }
    public int getByteLength()
    {
        org.spongycastle.crypto.digests.MD2Digest r0;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        return 16;
    }
    public int getDigestSize()
    {
        org.spongycastle.crypto.digests.MD2Digest r0;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        return 16;
    }
    protected void processBlock(byte[])
    {
        org.spongycastle.crypto.digests.MD2Digest r0;
        byte[] $r1, $r2, $r3;
        int i0, $i1, $i4;
        byte $b2, $b3;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        $r1 := @parameter0: byte[];

        i0 = 0;

     label1:
        if i0 >= 16 goto label2;

        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] X>;

        $i1 = i0 + 16;

        $b2 = $r1[i0];

        $r2[$i1] = $b2;

        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] X>;

        $i1 = i0 + 32;

        $b2 = $r1[i0];

        $r3 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] X>;

        $b3 = $r3[i0];

        $i4 = $b2 ^ $b3;

        $b2 = (byte) $i4;

        $r2[$i1] = $b2;

        i0 = i0 + 1;

        goto label1;

     label2:
        $i4 = 0;

        i0 = 0;

     label3:
        if i0 >= 18 goto label6;

        $i1 = 0;

     label4:
        if $i1 >= 48 goto label5;

        $r1 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] X>;

        $b2 = $r1[$i1];

        $r2 = <org.spongycastle.crypto.digests.MD2Digest: byte[] S>;

        $b3 = $r2[$i4];

        $i4 = $b2 ^ $b3;

        $b2 = (byte) $i4;

        $r1[$i1] = $b2;

        $i4 = $b2 & 255;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $i1 = $i4 + i0;

        $i4 = $i1 % 256;

        i0 = i0 + 1;

        goto label3;

     label6:
        return;
    }
    protected void processCheckSum(byte[])
    {
        org.spongycastle.crypto.digests.MD2Digest r0;
        byte[] $r1, $r2, $r3;
        byte b0, $b2, $b3;
        int i1, $i4;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        $r1 := @parameter0: byte[];

        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] C>;

        b0 = $r2[15];

        i1 = 0;

     label1:
        if i1 >= 16 goto label2;

        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] C>;

        $b2 = $r2[i1];

        $r3 = <org.spongycastle.crypto.digests.MD2Digest: byte[] S>;

        $b3 = $r1[i1];

        $i4 = $b3 ^ b0;

        $i4 = $i4 & 255;

        b0 = $r3[$i4];

        $i4 = $b2 ^ b0;

        $b2 = (byte) $i4;

        $r2[i1] = $b2;

        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] C>;

        b0 = $r2[i1];

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    public void reset()
    {
        org.spongycastle.crypto.digests.MD2Digest r0;
        int i0, $i1;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        r0.<org.spongycastle.crypto.digests.MD2Digest: int xOff> = 0;

        i0 = 0;

     label1:
        $r1 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] X>;

        $i1 = lengthof $r1;

        if i0 == $i1 goto label2;

        $r1 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] X>;

        $r1[i0] = 0;

        i0 = i0 + 1;

        goto label1;

     label2:
        r0.<org.spongycastle.crypto.digests.MD2Digest: int mOff> = 0;

        i0 = 0;

     label3:
        $r1 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        $i1 = lengthof $r1;

        if i0 == $i1 goto label4;

        $r1 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        $r1[i0] = 0;

        i0 = i0 + 1;

        goto label3;

     label4:
        r0.<org.spongycastle.crypto.digests.MD2Digest: int COff> = 0;

        i0 = 0;

     label5:
        $r1 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] C>;

        $i1 = lengthof $r1;

        if i0 == $i1 goto label6;

        $r1 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] C>;

        $r1[i0] = 0;

        i0 = i0 + 1;

        goto label5;

     label6:
        return;
    }
    public void reset(org.spongycastle.util.Memoable)
    {
        org.spongycastle.crypto.digests.MD2Digest r0, r2;
        org.spongycastle.util.Memoable $r1;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        $r1 := @parameter0: org.spongycastle.util.Memoable;

        r2 = (org.spongycastle.crypto.digests.MD2Digest) $r1;

        specialinvoke r0.<org.spongycastle.crypto.digests.MD2Digest: void copyIn(org.spongycastle.crypto.digests.MD2Digest)>(r2);

        return;
    }
    public void update(byte)
    {
        org.spongycastle.crypto.digests.MD2Digest r0;
        byte $b0;
        int $i1, $i2;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        $b0 := @parameter0: byte;

        $r1 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        $i2 = r0.<org.spongycastle.crypto.digests.MD2Digest: int mOff>;

        $i1 = $i2 + 1;

        r0.<org.spongycastle.crypto.digests.MD2Digest: int mOff> = $i1;

        $r1[$i2] = $b0;

        $i1 = r0.<org.spongycastle.crypto.digests.MD2Digest: int mOff>;

        if $i1 != 16 goto label1;

        $r1 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        virtualinvoke r0.<org.spongycastle.crypto.digests.MD2Digest: void processCheckSum(byte[])>($r1);

        $r1 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        virtualinvoke r0.<org.spongycastle.crypto.digests.MD2Digest: void processBlock(byte[])>($r1);

        r0.<org.spongycastle.crypto.digests.MD2Digest: int mOff> = 0;

     label1:
        return;
    }
    public void update(byte[], int, int)
    {
        org.spongycastle.crypto.digests.MD2Digest r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;
        byte $b3;

        r0 := @this: org.spongycastle.crypto.digests.MD2Digest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        $i2 = r0.<org.spongycastle.crypto.digests.MD2Digest: int mOff>;

        if $i2 == 0 goto label2;

        if $i1 <= 0 goto label2;

        $b3 = $r1[$i0];

        virtualinvoke r0.<org.spongycastle.crypto.digests.MD2Digest: void update(byte)>($b3);

        $i0 = $i0 + 1;

        $i1 = $i1 + -1;

        goto label1;

     label2:
        if $i1 <= 16 goto label3;

        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, 0, 16);

        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        virtualinvoke r0.<org.spongycastle.crypto.digests.MD2Digest: void processCheckSum(byte[])>($r2);

        $r2 = r0.<org.spongycastle.crypto.digests.MD2Digest: byte[] M>;

        virtualinvoke r0.<org.spongycastle.crypto.digests.MD2Digest: void processBlock(byte[])>($r2);

        $i1 = $i1 + -16;

        $i0 = $i0 + 16;

        goto label2;

     label3:
        if $i1 <= 0 goto label4;

        $b3 = $r1[$i0];

        virtualinvoke r0.<org.spongycastle.crypto.digests.MD2Digest: void update(byte)>($b3);

        $i0 = $i0 + 1;

        $i1 = $i1 + -1;

        goto label3;

     label4:
        return;
    }
