org.spongycastle.crypto.io.CipherOutputStream extends java.io.FilterOutputStream
private org.spongycastle.crypto.modes.AEADBlockCipher aeadBlockCipher
private byte[] buf
private org.spongycastle.crypto.BufferedBlockCipher bufferedBlockCipher
private final byte[] oneByte
private org.spongycastle.crypto.StreamCipher streamCipher
    public void <init>(java.io.OutputStream, org.spongycastle.crypto.BufferedBlockCipher)
    {
        org.spongycastle.crypto.io.CipherOutputStream r0;
        java.io.OutputStream $r1;
        org.spongycastle.crypto.BufferedBlockCipher $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.crypto.io.CipherOutputStream;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: org.spongycastle.crypto.BufferedBlockCipher;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r1);

        $r3 = newarray (byte)[1];

        r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] oneByte> = $r3;

        r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.BufferedBlockCipher bufferedBlockCipher> = $r2;

        return;
    }
    public void <init>(java.io.OutputStream, org.spongycastle.crypto.StreamCipher)
    {
        org.spongycastle.crypto.io.CipherOutputStream r0;
        java.io.OutputStream $r1;
        org.spongycastle.crypto.StreamCipher $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.crypto.io.CipherOutputStream;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: org.spongycastle.crypto.StreamCipher;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r1);

        $r3 = newarray (byte)[1];

        r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] oneByte> = $r3;

        r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.StreamCipher streamCipher> = $r2;

        return;
    }
    public void <init>(java.io.OutputStream, org.spongycastle.crypto.modes.AEADBlockCipher)
    {
        org.spongycastle.crypto.io.CipherOutputStream r0;
        java.io.OutputStream $r1;
        org.spongycastle.crypto.modes.AEADBlockCipher $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.crypto.io.CipherOutputStream;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: org.spongycastle.crypto.modes.AEADBlockCipher;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r1);

        $r3 = newarray (byte)[1];

        r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] oneByte> = $r3;

        r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.modes.AEADBlockCipher aeadBlockCipher> = $r2;

        return;
    }
    private void ensureCapacity(int, boolean)
    {
        org.spongycastle.crypto.io.CipherOutputStream r0;
        int $i0, i1;
        boolean $z0;
        org.spongycastle.crypto.BufferedBlockCipher $r1;
        byte[] $r2;
        org.spongycastle.crypto.modes.AEADBlockCipher $r3;

        r0 := @this: org.spongycastle.crypto.io.CipherOutputStream;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        i1 = $i0;

        if $z0 == 0 goto label4;

        $r1 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.BufferedBlockCipher bufferedBlockCipher>;

        if $r1 == null goto label3;

        $r1 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.BufferedBlockCipher bufferedBlockCipher>;

        i1 = virtualinvoke $r1.<org.spongycastle.crypto.BufferedBlockCipher: int getOutputSize(int)>($i0);

     label1:
        $r2 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] buf>;

        if $r2 == null goto label2;

        $r2 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] buf>;

        $i0 = lengthof $r2;

        if $i0 >= i1 goto label6;

     label2:
        $r2 = newarray (byte)[i1];

        r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] buf> = $r2;

        return;

     label3:
        $r3 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.modes.AEADBlockCipher aeadBlockCipher>;

        if $r3 == null goto label1;

        $r3 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.modes.AEADBlockCipher aeadBlockCipher>;

        i1 = interfaceinvoke $r3.<org.spongycastle.crypto.modes.AEADBlockCipher: int getOutputSize(int)>($i0);

        goto label1;

     label4:
        $r1 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.BufferedBlockCipher bufferedBlockCipher>;

        if $r1 == null goto label5;

        $r1 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.BufferedBlockCipher bufferedBlockCipher>;

        i1 = virtualinvoke $r1.<org.spongycastle.crypto.BufferedBlockCipher: int getUpdateOutputSize(int)>($i0);

        goto label1;

     label5:
        $r3 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.modes.AEADBlockCipher aeadBlockCipher>;

        if $r3 == null goto label1;

        $r3 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.modes.AEADBlockCipher aeadBlockCipher>;

        i1 = interfaceinvoke $r3.<org.spongycastle.crypto.modes.AEADBlockCipher: int getUpdateOutputSize(int)>($i0);

        goto label1;

     label6:
        return;
    }
    public void close() throws java.io.IOException
    {
        org.spongycastle.crypto.io.CipherOutputStream r0;
        java.lang.Object r1;
        org.spongycastle.crypto.BufferedBlockCipher $r2;
        byte[] $r3;
        int $i0;
        java.io.OutputStream $r4;
        org.spongycastle.crypto.modes.AEADBlockCipher $r5;
        org.spongycastle.crypto.InvalidCipherTextException r6;
        org.spongycastle.crypto.StreamCipher $r7;
        java.lang.Exception r8;
        java.io.IOException r9;
        org.spongycastle.crypto.io.InvalidCipherTextIOException $r10;
        org.spongycastle.crypto.io.CipherIOException $r11;
        java.lang.Throwable $r12;

        r0 := @this: org.spongycastle.crypto.io.CipherOutputStream;

        specialinvoke r0.<org.spongycastle.crypto.io.CipherOutputStream: void ensureCapacity(int,boolean)>(0, 1);

        r1 = null;

     label01:
        $r2 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.BufferedBlockCipher bufferedBlockCipher>;

     label02:
        if $r2 == null goto label12;

     label03:
        $r2 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.BufferedBlockCipher bufferedBlockCipher>;

        $r3 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] buf>;

     label04:
        $i0 = virtualinvoke $r2.<org.spongycastle.crypto.BufferedBlockCipher: int doFinal(byte[],int)>($r3, 0);

     label05:
        if $i0 == 0 goto label08;

     label06:
        $r4 = r0.<org.spongycastle.crypto.io.CipherOutputStream: java.io.OutputStream out>;

        $r3 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] buf>;

     label07:
        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0);

     label08:
        virtualinvoke r0.<org.spongycastle.crypto.io.CipherOutputStream: void flush()>();

     label09:
        $r4 = r0.<org.spongycastle.crypto.io.CipherOutputStream: java.io.OutputStream out>;

     label10:
        virtualinvoke $r4.<java.io.OutputStream: void close()>();

     label11:
        if r1 == null goto label28;

        $r12 = (java.lang.Throwable) r1;

        throw $r12;

     label12:
        $r5 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.modes.AEADBlockCipher aeadBlockCipher>;

     label13:
        if $r5 == null goto label21;

     label14:
        $r5 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.modes.AEADBlockCipher aeadBlockCipher>;

        $r3 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] buf>;

     label15:
        $i0 = interfaceinvoke $r5.<org.spongycastle.crypto.modes.AEADBlockCipher: int doFinal(byte[],int)>($r3, 0);

     label16:
        if $i0 == 0 goto label08;

     label17:
        $r4 = r0.<org.spongycastle.crypto.io.CipherOutputStream: java.io.OutputStream out>;

        $r3 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] buf>;

     label18:
        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0);

     label19:
        goto label08;

     label20:
        r6 := @caughtexception;

        $r10 = new org.spongycastle.crypto.io.InvalidCipherTextIOException;

        r1 = $r10;

        specialinvoke $r10.<org.spongycastle.crypto.io.InvalidCipherTextIOException: void <init>(java.lang.String,java.lang.Throwable)>("Error finalising cipher data", r6);

        goto label08;

     label21:
        $r7 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.StreamCipher streamCipher>;

     label22:
        if $r7 == null goto label08;

     label23:
        $r7 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.StreamCipher streamCipher>;

     label24:
        interfaceinvoke $r7.<org.spongycastle.crypto.StreamCipher: void reset()>();

     label25:
        goto label08;

     label26:
        r8 := @caughtexception;

        $r11 = new org.spongycastle.crypto.io.CipherIOException;

        r1 = $r11;

        specialinvoke $r11.<org.spongycastle.crypto.io.CipherIOException: void <init>(java.lang.String,java.lang.Throwable)>("Error closing stream: ", r8);

        goto label08;

     label27:
        r9 := @caughtexception;

        if r1 != null goto label11;

        r1 = r9;

        goto label11;

     label28:
        return;

        catch org.spongycastle.crypto.InvalidCipherTextException from label04 to label05 with label20;
        catch org.spongycastle.crypto.InvalidCipherTextException from label07 to label08 with label20;
        catch java.lang.Exception from label01 to label02 with label26;
        catch java.lang.Exception from label03 to label05 with label26;
        catch java.lang.Exception from label06 to label08 with label26;
        catch java.io.IOException from label08 to label09 with label27;
        catch java.io.IOException from label10 to label11 with label27;
        catch org.spongycastle.crypto.InvalidCipherTextException from label15 to label16 with label20;
        catch org.spongycastle.crypto.InvalidCipherTextException from label18 to label19 with label20;
        catch java.lang.Exception from label12 to label13 with label26;
        catch java.lang.Exception from label14 to label16 with label26;
        catch java.lang.Exception from label17 to label19 with label26;
        catch org.spongycastle.crypto.InvalidCipherTextException from label24 to label25 with label20;
        catch java.lang.Exception from label21 to label22 with label26;
        catch java.lang.Exception from label23 to label25 with label26;
    }
    public void flush() throws java.io.IOException
    {
        org.spongycastle.crypto.io.CipherOutputStream r0;
        java.io.OutputStream $r1;

        r0 := @this: org.spongycastle.crypto.io.CipherOutputStream;

        $r1 = r0.<org.spongycastle.crypto.io.CipherOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }
    public void write(int) throws java.io.IOException
    {
        org.spongycastle.crypto.io.CipherOutputStream r0;
        int $i0;
        byte $b1;
        byte[] $r1;
        org.spongycastle.crypto.StreamCipher $r2;
        java.io.OutputStream $r3;

        r0 := @this: org.spongycastle.crypto.io.CipherOutputStream;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] oneByte>;

        $b1 = (byte) $i0;

        $r1[0] = $b1;

        $r2 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.StreamCipher streamCipher>;

        if $r2 == null goto label1;

        $r3 = r0.<org.spongycastle.crypto.io.CipherOutputStream: java.io.OutputStream out>;

        $r2 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.StreamCipher streamCipher>;

        $b1 = (byte) $i0;

        $b1 = interfaceinvoke $r2.<org.spongycastle.crypto.StreamCipher: byte returnByte(byte)>($b1);

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>($b1);

        return;

     label1:
        $r1 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] oneByte>;

        virtualinvoke r0.<org.spongycastle.crypto.io.CipherOutputStream: void write(byte[],int,int)>($r1, 0, 1);

        return;
    }
    public void write(byte[]) throws java.io.IOException
    {
        org.spongycastle.crypto.io.CipherOutputStream r0;
        byte[] $r1;
        int $i0;

        r0 := @this: org.spongycastle.crypto.io.CipherOutputStream;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<org.spongycastle.crypto.io.CipherOutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        return;
    }
    public void write(byte[], int, int) throws java.io.IOException
    {
        org.spongycastle.crypto.io.CipherOutputStream r0;
        byte[] $r1, $r3;
        int $i0, $i1;
        org.spongycastle.crypto.BufferedBlockCipher $r2;
        java.io.OutputStream $r4;
        org.spongycastle.crypto.modes.AEADBlockCipher $r5;
        org.spongycastle.crypto.StreamCipher $r6;

        r0 := @this: org.spongycastle.crypto.io.CipherOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<org.spongycastle.crypto.io.CipherOutputStream: void ensureCapacity(int,boolean)>($i1, 0);

        $r2 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.BufferedBlockCipher bufferedBlockCipher>;

        if $r2 == null goto label1;

        $r2 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.BufferedBlockCipher bufferedBlockCipher>;

        $r3 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] buf>;

        $i0 = virtualinvoke $r2.<org.spongycastle.crypto.BufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r1, $i0, $i1, $r3, 0);

        if $i0 == 0 goto label3;

        $r4 = r0.<org.spongycastle.crypto.io.CipherOutputStream: java.io.OutputStream out>;

        $r1 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] buf>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        return;

     label1:
        $r5 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.modes.AEADBlockCipher aeadBlockCipher>;

        if $r5 == null goto label2;

        $r5 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.modes.AEADBlockCipher aeadBlockCipher>;

        $r3 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] buf>;

        $i0 = interfaceinvoke $r5.<org.spongycastle.crypto.modes.AEADBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r1, $i0, $i1, $r3, 0);

        if $i0 == 0 goto label3;

        $r4 = r0.<org.spongycastle.crypto.io.CipherOutputStream: java.io.OutputStream out>;

        $r1 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] buf>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        return;

     label2:
        $r6 = r0.<org.spongycastle.crypto.io.CipherOutputStream: org.spongycastle.crypto.StreamCipher streamCipher>;

        $r3 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] buf>;

        interfaceinvoke $r6.<org.spongycastle.crypto.StreamCipher: int processBytes(byte[],int,int,byte[],int)>($r1, $i0, $i1, $r3, 0);

        $r4 = r0.<org.spongycastle.crypto.io.CipherOutputStream: java.io.OutputStream out>;

        $r1 = r0.<org.spongycastle.crypto.io.CipherOutputStream: byte[] buf>;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i1);

     label3:
        return;
    }
