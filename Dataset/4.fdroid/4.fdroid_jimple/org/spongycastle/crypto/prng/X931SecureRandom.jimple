org.spongycastle.crypto.prng.X931SecureRandom extends java.security.SecureRandom
private final org.spongycastle.crypto.prng.X931RNG drbg
private final boolean predictionResistant
private final java.security.SecureRandom randomSource
    void <init>(java.security.SecureRandom, org.spongycastle.crypto.prng.X931RNG, boolean)
    {
        org.spongycastle.crypto.prng.X931SecureRandom r0;
        java.security.SecureRandom $r1;
        org.spongycastle.crypto.prng.X931RNG $r2;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.prng.X931SecureRandom;

        $r1 := @parameter0: java.security.SecureRandom;

        $r2 := @parameter1: org.spongycastle.crypto.prng.X931RNG;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<java.security.SecureRandom: void <init>()>();

        r0.<org.spongycastle.crypto.prng.X931SecureRandom: java.security.SecureRandom randomSource> = $r1;

        r0.<org.spongycastle.crypto.prng.X931SecureRandom: org.spongycastle.crypto.prng.X931RNG drbg> = $r2;

        r0.<org.spongycastle.crypto.prng.X931SecureRandom: boolean predictionResistant> = $z0;

        return;
    }
    public byte[] generateSeed(int)
    {
        org.spongycastle.crypto.prng.X931SecureRandom r0;
        int $i0;
        byte[] r1;

        r0 := @this: org.spongycastle.crypto.prng.X931SecureRandom;

        $i0 := @parameter0: int;

        r1 = newarray (byte)[$i0];

        virtualinvoke r0.<org.spongycastle.crypto.prng.X931SecureRandom: void nextBytes(byte[])>(r1);

        return r1;
    }
    public void nextBytes(byte[])
    {
        org.spongycastle.crypto.prng.X931SecureRandom r0;
        byte[] $r1;
        int $i0;
        org.spongycastle.crypto.prng.X931RNG $r2;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @this: org.spongycastle.crypto.prng.X931SecureRandom;

        $r1 := @parameter0: byte[];

        entermonitor r0;

     label1:
        $r2 = r0.<org.spongycastle.crypto.prng.X931SecureRandom: org.spongycastle.crypto.prng.X931RNG drbg>;

        $z0 = r0.<org.spongycastle.crypto.prng.X931SecureRandom: boolean predictionResistant>;

        $i0 = virtualinvoke $r2.<org.spongycastle.crypto.prng.X931RNG: int generate(byte[],boolean)>($r1, $z0);

        if $i0 >= 0 goto label2;

        $r2 = r0.<org.spongycastle.crypto.prng.X931SecureRandom: org.spongycastle.crypto.prng.X931RNG drbg>;

        virtualinvoke $r2.<org.spongycastle.crypto.prng.X931RNG: void reseed()>();

        $r2 = r0.<org.spongycastle.crypto.prng.X931SecureRandom: org.spongycastle.crypto.prng.X931RNG drbg>;

        $z0 = r0.<org.spongycastle.crypto.prng.X931SecureRandom: boolean predictionResistant>;

        virtualinvoke $r2.<org.spongycastle.crypto.prng.X931RNG: int generate(byte[],boolean)>($r1, $z0);

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
    public void setSeed(long)
    {
        org.spongycastle.crypto.prng.X931SecureRandom r0;
        long $l0;
        java.security.SecureRandom $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.spongycastle.crypto.prng.X931SecureRandom;

        $l0 := @parameter0: long;

        entermonitor r0;

     label1:
        $r1 = r0.<org.spongycastle.crypto.prng.X931SecureRandom: java.security.SecureRandom randomSource>;

        if $r1 == null goto label2;

        $r1 = r0.<org.spongycastle.crypto.prng.X931SecureRandom: java.security.SecureRandom randomSource>;

        virtualinvoke $r1.<java.security.SecureRandom: void setSeed(long)>($l0);

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
    public void setSeed(byte[])
    {
        org.spongycastle.crypto.prng.X931SecureRandom r0;
        byte[] $r1;
        java.security.SecureRandom $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.spongycastle.crypto.prng.X931SecureRandom;

        $r1 := @parameter0: byte[];

        entermonitor r0;

     label1:
        $r2 = r0.<org.spongycastle.crypto.prng.X931SecureRandom: java.security.SecureRandom randomSource>;

        if $r2 == null goto label2;

        $r2 = r0.<org.spongycastle.crypto.prng.X931SecureRandom: java.security.SecureRandom randomSource>;

        virtualinvoke $r2.<java.security.SecureRandom: void setSeed(byte[])>($r1);

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
