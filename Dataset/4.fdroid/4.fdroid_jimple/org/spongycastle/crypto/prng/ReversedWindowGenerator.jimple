org.spongycastle.crypto.prng.ReversedWindowGenerator extends java.lang.Object implements org.spongycastle.crypto.prng.RandomGenerator
private final org.spongycastle.crypto.prng.RandomGenerator generator
private byte[] window
private int windowCount
    public void <init>(org.spongycastle.crypto.prng.RandomGenerator, int)
    {
        org.spongycastle.crypto.prng.ReversedWindowGenerator r0;
        org.spongycastle.crypto.prng.RandomGenerator $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.crypto.prng.ReversedWindowGenerator;

        $r1 := @parameter0: org.spongycastle.crypto.prng.RandomGenerator;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("generator cannot be null");

        throw $r2;

     label1:
        if $i0 >= 2 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("windowSize must be at least 2");

        throw $r2;

     label2:
        r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: org.spongycastle.crypto.prng.RandomGenerator generator> = $r1;

        $r3 = newarray (byte)[$i0];

        r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: byte[] window> = $r3;

        return;
    }
    private void doNextBytes(byte[], int, int)
    {
        org.spongycastle.crypto.prng.ReversedWindowGenerator r0;
        byte[] $r1, $r3, $r4;
        int $i0, $i1, i2, $i3, $i4;
        org.spongycastle.crypto.prng.RandomGenerator $r2;
        byte $b5;
        java.lang.Throwable $r5;

        r0 := @this: org.spongycastle.crypto.prng.ReversedWindowGenerator;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        entermonitor r0;

        i2 = 0;

     label01:
        if i2 >= $i1 goto label06;

     label02:
        $i3 = r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: int windowCount>;

        if $i3 >= 1 goto label03;

        $r2 = r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: org.spongycastle.crypto.prng.RandomGenerator generator>;

        $r3 = r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: byte[] window>;

        $r4 = r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: byte[] window>;

        $i3 = lengthof $r4;

        interfaceinvoke $r2.<org.spongycastle.crypto.prng.RandomGenerator: void nextBytes(byte[],int,int)>($r3, 0, $i3);

        $r3 = r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: byte[] window>;

        $i3 = lengthof $r3;

        r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: int windowCount> = $i3;

     label03:
        $i3 = i2 + 1;

        i2 = $i0 + i2;

     label04:
        $r3 = r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: byte[] window>;

        $i4 = r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: int windowCount>;

        $i4 = $i4 + -1;

        r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: int windowCount> = $i4;

        $b5 = $r3[$i4];

        $r1[i2] = $b5;

     label05:
        i2 = $i3;

        goto label01;

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r5 := @caughtexception;

     label09:
        exitmonitor r0;

     label10:
        throw $r5;

     label11:
        $r5 := @caughtexception;

        goto label09;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
    public void addSeedMaterial(long)
    {
        org.spongycastle.crypto.prng.ReversedWindowGenerator r0;
        long $l0;
        org.spongycastle.crypto.prng.RandomGenerator $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.spongycastle.crypto.prng.ReversedWindowGenerator;

        $l0 := @parameter0: long;

        entermonitor r0;

     label1:
        r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: int windowCount> = 0;

        $r1 = r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: org.spongycastle.crypto.prng.RandomGenerator generator>;

        interfaceinvoke $r1.<org.spongycastle.crypto.prng.RandomGenerator: void addSeedMaterial(long)>($l0);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public void addSeedMaterial(byte[])
    {
        org.spongycastle.crypto.prng.ReversedWindowGenerator r0;
        byte[] $r1;
        org.spongycastle.crypto.prng.RandomGenerator $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.spongycastle.crypto.prng.ReversedWindowGenerator;

        $r1 := @parameter0: byte[];

        entermonitor r0;

     label1:
        r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: int windowCount> = 0;

        $r2 = r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: org.spongycastle.crypto.prng.RandomGenerator generator>;

        interfaceinvoke $r2.<org.spongycastle.crypto.prng.RandomGenerator: void addSeedMaterial(byte[])>($r1);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public void nextBytes(byte[])
    {
        org.spongycastle.crypto.prng.ReversedWindowGenerator r0;
        byte[] $r1;
        int $i0;

        r0 := @this: org.spongycastle.crypto.prng.ReversedWindowGenerator;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        specialinvoke r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: void doNextBytes(byte[],int,int)>($r1, 0, $i0);

        return;
    }
    public void nextBytes(byte[], int, int)
    {
        org.spongycastle.crypto.prng.ReversedWindowGenerator r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: org.spongycastle.crypto.prng.ReversedWindowGenerator;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<org.spongycastle.crypto.prng.ReversedWindowGenerator: void doNextBytes(byte[],int,int)>($r1, $i0, $i1);

        return;
    }
