org.spongycastle.crypto.prng.BasicEntropySourceProvider extends java.lang.Object implements org.spongycastle.crypto.prng.EntropySourceProvider
private final boolean _predictionResistant
private final java.security.SecureRandom _sr
    public void <init>(java.security.SecureRandom, boolean)
    {
        org.spongycastle.crypto.prng.BasicEntropySourceProvider r0;
        java.security.SecureRandom $r1;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.prng.BasicEntropySourceProvider;

        $r1 := @parameter0: java.security.SecureRandom;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.prng.BasicEntropySourceProvider: java.security.SecureRandom _sr> = $r1;

        r0.<org.spongycastle.crypto.prng.BasicEntropySourceProvider: boolean _predictionResistant> = $z0;

        return;
    }
    static boolean access$000(org.spongycastle.crypto.prng.BasicEntropySourceProvider)
    {
        org.spongycastle.crypto.prng.BasicEntropySourceProvider $r0;
        boolean z0;

        $r0 := @parameter0: org.spongycastle.crypto.prng.BasicEntropySourceProvider;

        z0 = $r0.<org.spongycastle.crypto.prng.BasicEntropySourceProvider: boolean _predictionResistant>;

        return z0;
    }
    static java.security.SecureRandom access$100(org.spongycastle.crypto.prng.BasicEntropySourceProvider)
    {
        org.spongycastle.crypto.prng.BasicEntropySourceProvider $r0;
        java.security.SecureRandom r1;

        $r0 := @parameter0: org.spongycastle.crypto.prng.BasicEntropySourceProvider;

        r1 = $r0.<org.spongycastle.crypto.prng.BasicEntropySourceProvider: java.security.SecureRandom _sr>;

        return r1;
    }
    public org.spongycastle.crypto.prng.EntropySource get(int)
    {
        org.spongycastle.crypto.prng.BasicEntropySourceProvider r0;
        int $i0;
        org.spongycastle.crypto.prng.BasicEntropySourceProvider$1 $r1;

        r0 := @this: org.spongycastle.crypto.prng.BasicEntropySourceProvider;

        $i0 := @parameter0: int;

        $r1 = new org.spongycastle.crypto.prng.BasicEntropySourceProvider$1;

        specialinvoke $r1.<org.spongycastle.crypto.prng.BasicEntropySourceProvider$1: void <init>(org.spongycastle.crypto.prng.BasicEntropySourceProvider,int)>(r0, $i0);

        return $r1;
    }
