org.spongycastle.crypto.macs.GMac extends java.lang.Object implements org.spongycastle.crypto.Mac
private final org.spongycastle.crypto.modes.GCMBlockCipher cipher
private final int macSizeBits
    public void <init>(org.spongycastle.crypto.modes.GCMBlockCipher)
    {
        org.spongycastle.crypto.macs.GMac r0;
        org.spongycastle.crypto.modes.GCMBlockCipher $r1;

        r0 := @this: org.spongycastle.crypto.macs.GMac;

        $r1 := @parameter0: org.spongycastle.crypto.modes.GCMBlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.macs.GMac: org.spongycastle.crypto.modes.GCMBlockCipher cipher> = $r1;

        r0.<org.spongycastle.crypto.macs.GMac: int macSizeBits> = 128;

        return;
    }
    public void <init>(org.spongycastle.crypto.modes.GCMBlockCipher, int)
    {
        org.spongycastle.crypto.macs.GMac r0;
        org.spongycastle.crypto.modes.GCMBlockCipher $r1;
        int $i0;

        r0 := @this: org.spongycastle.crypto.macs.GMac;

        $r1 := @parameter0: org.spongycastle.crypto.modes.GCMBlockCipher;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.macs.GMac: org.spongycastle.crypto.modes.GCMBlockCipher cipher> = $r1;

        r0.<org.spongycastle.crypto.macs.GMac: int macSizeBits> = $i0;

        return;
    }
    public int doFinal(byte[], int) throws org.spongycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        org.spongycastle.crypto.macs.GMac r0;
        byte[] $r1;
        int $i0;
        org.spongycastle.crypto.InvalidCipherTextException r2;
        org.spongycastle.crypto.modes.GCMBlockCipher $r3;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;

        r0 := @this: org.spongycastle.crypto.macs.GMac;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r3 = r0.<org.spongycastle.crypto.macs.GMac: org.spongycastle.crypto.modes.GCMBlockCipher cipher>;

     label1:
        $i0 = virtualinvoke $r3.<org.spongycastle.crypto.modes.GCMBlockCipher: int doFinal(byte[],int)>($r1, $i0);

     label2:
        return $i0;

     label3:
        r2 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke r2.<org.spongycastle.crypto.InvalidCipherTextException: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch org.spongycastle.crypto.InvalidCipherTextException from label1 to label2 with label3;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.macs.GMac r0;
        java.lang.StringBuilder $r1;
        org.spongycastle.crypto.modes.GCMBlockCipher $r2;
        org.spongycastle.crypto.BlockCipher $r3;
        java.lang.String $r4;

        r0 := @this: org.spongycastle.crypto.macs.GMac;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.spongycastle.crypto.macs.GMac: org.spongycastle.crypto.modes.GCMBlockCipher cipher>;

        $r3 = virtualinvoke $r2.<org.spongycastle.crypto.modes.GCMBlockCipher: org.spongycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r4 = interfaceinvoke $r3.<org.spongycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-GMAC");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
    public int getMacSize()
    {
        org.spongycastle.crypto.macs.GMac r0;
        int $i0;

        r0 := @this: org.spongycastle.crypto.macs.GMac;

        $i0 = r0.<org.spongycastle.crypto.macs.GMac: int macSizeBits>;

        $i0 = $i0 / 8;

        return $i0;
    }
    public void init(org.spongycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.crypto.macs.GMac r0;
        org.spongycastle.crypto.CipherParameters $r1;
        org.spongycastle.crypto.params.AEADParameters $r2;
        int $i0;
        boolean $z0;
        org.spongycastle.crypto.params.ParametersWithIV r3;
        byte[] $r4;
        org.spongycastle.crypto.params.KeyParameter r5;
        org.spongycastle.crypto.modes.GCMBlockCipher $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.spongycastle.crypto.macs.GMac;

        $r1 := @parameter0: org.spongycastle.crypto.CipherParameters;

        $z0 = $r1 instanceof org.spongycastle.crypto.params.ParametersWithIV;

        if $z0 == 0 goto label1;

        r3 = (org.spongycastle.crypto.params.ParametersWithIV) $r1;

        $r4 = virtualinvoke r3.<org.spongycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        $r1 = virtualinvoke r3.<org.spongycastle.crypto.params.ParametersWithIV: org.spongycastle.crypto.CipherParameters getParameters()>();

        r5 = (org.spongycastle.crypto.params.KeyParameter) $r1;

        $r6 = r0.<org.spongycastle.crypto.macs.GMac: org.spongycastle.crypto.modes.GCMBlockCipher cipher>;

        $r2 = new org.spongycastle.crypto.params.AEADParameters;

        $i0 = r0.<org.spongycastle.crypto.macs.GMac: int macSizeBits>;

        specialinvoke $r2.<org.spongycastle.crypto.params.AEADParameters: void <init>(org.spongycastle.crypto.params.KeyParameter,int,byte[])>(r5, $i0, $r4);

        virtualinvoke $r6.<org.spongycastle.crypto.modes.GCMBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, $r2);

        return;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("GMAC requires ParametersWithIV");

        throw $r7;
    }
    public void reset()
    {
        org.spongycastle.crypto.macs.GMac r0;
        org.spongycastle.crypto.modes.GCMBlockCipher $r1;

        r0 := @this: org.spongycastle.crypto.macs.GMac;

        $r1 = r0.<org.spongycastle.crypto.macs.GMac: org.spongycastle.crypto.modes.GCMBlockCipher cipher>;

        virtualinvoke $r1.<org.spongycastle.crypto.modes.GCMBlockCipher: void reset()>();

        return;
    }
    public void update(byte) throws java.lang.IllegalStateException
    {
        org.spongycastle.crypto.macs.GMac r0;
        byte $b0;
        org.spongycastle.crypto.modes.GCMBlockCipher $r1;

        r0 := @this: org.spongycastle.crypto.macs.GMac;

        $b0 := @parameter0: byte;

        $r1 = r0.<org.spongycastle.crypto.macs.GMac: org.spongycastle.crypto.modes.GCMBlockCipher cipher>;

        virtualinvoke $r1.<org.spongycastle.crypto.modes.GCMBlockCipher: void processAADByte(byte)>($b0);

        return;
    }
    public void update(byte[], int, int) throws org.spongycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        org.spongycastle.crypto.macs.GMac r0;
        byte[] $r1;
        int $i0, $i1;
        org.spongycastle.crypto.modes.GCMBlockCipher $r2;

        r0 := @this: org.spongycastle.crypto.macs.GMac;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<org.spongycastle.crypto.macs.GMac: org.spongycastle.crypto.modes.GCMBlockCipher cipher>;

        virtualinvoke $r2.<org.spongycastle.crypto.modes.GCMBlockCipher: void processAADBytes(byte[],int,int)>($r1, $i0, $i1);

        return;
    }
