org.spongycastle.crypto.macs.Poly1305 extends java.lang.Object implements org.spongycastle.crypto.Mac
private static final int BLOCK_SIZE
private final org.spongycastle.crypto.BlockCipher cipher
private final byte[] currentBlock
private int currentBlockOffset
private int h0
private int h1
private int h2
private int h3
private int h4
private int k0
private int k1
private int k2
private int k3
private int r0
private int r1
private int r2
private int r3
private int r4
private int s1
private int s2
private int s3
private int s4
private final byte[] singleByte
    public void <init>()
    {
        org.spongycastle.crypto.macs.Poly1305 r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.macs.Poly1305;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[1];

        r0.<org.spongycastle.crypto.macs.Poly1305: byte[] singleByte> = $r1;

        $r1 = newarray (byte)[16];

        r0.<org.spongycastle.crypto.macs.Poly1305: byte[] currentBlock> = $r1;

        r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset> = 0;

        r0.<org.spongycastle.crypto.macs.Poly1305: org.spongycastle.crypto.BlockCipher cipher> = null;

        return;
    }
    public void <init>(org.spongycastle.crypto.BlockCipher)
    {
        org.spongycastle.crypto.macs.Poly1305 r0;
        org.spongycastle.crypto.BlockCipher $r1;
        int $i0;
        byte[] $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.spongycastle.crypto.macs.Poly1305;

        $r1 := @parameter0: org.spongycastle.crypto.BlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[1];

        r0.<org.spongycastle.crypto.macs.Poly1305: byte[] singleByte> = $r2;

        $r2 = newarray (byte)[16];

        r0.<org.spongycastle.crypto.macs.Poly1305: byte[] currentBlock> = $r2;

        r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset> = 0;

        $i0 = interfaceinvoke $r1.<org.spongycastle.crypto.BlockCipher: int getBlockSize()>();

        if $i0 == 16 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Poly1305 requires a 128 bit block cipher.");

        throw $r3;

     label1:
        r0.<org.spongycastle.crypto.macs.Poly1305: org.spongycastle.crypto.BlockCipher cipher> = $r1;

        return;
    }
    private static final long mul32x32_64(int, int)
    {
        int $i0, $i1;
        long $l2, $l3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l3 = (long) $i0;

        $l2 = (long) $i1;

        $l2 = $l3 * $l2;

        return $l2;
    }
    private void processBlock()
    {
        org.spongycastle.crypto.macs.Poly1305 r0;
        long l0, l1, l2, l3, $l5, $l6;
        int $i4, $i7;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.macs.Poly1305;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset>;

        if $i4 >= 16 goto label2;

        $r1 = r0.<org.spongycastle.crypto.macs.Poly1305: byte[] currentBlock>;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset>;

        $r1[$i4] = 1;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset>;

        $i4 = $i4 + 1;

     label1:
        if $i4 >= 16 goto label2;

        $r1 = r0.<org.spongycastle.crypto.macs.Poly1305: byte[] currentBlock>;

        $r1[$i4] = 0;

        $i4 = $i4 + 1;

        goto label1;

     label2:
        $r1 = r0.<org.spongycastle.crypto.macs.Poly1305: byte[] currentBlock>;

        $i4 = staticinvoke <org.spongycastle.util.Pack: int littleEndianToInt(byte[],int)>($r1, 0);

        l3 = (long) $i4;

        l0 = 4294967295L & l3;

        $r1 = r0.<org.spongycastle.crypto.macs.Poly1305: byte[] currentBlock>;

        $i4 = staticinvoke <org.spongycastle.util.Pack: int littleEndianToInt(byte[],int)>($r1, 4);

        l3 = (long) $i4;

        l1 = 4294967295L & l3;

        $r1 = r0.<org.spongycastle.crypto.macs.Poly1305: byte[] currentBlock>;

        $i4 = staticinvoke <org.spongycastle.util.Pack: int littleEndianToInt(byte[],int)>($r1, 8);

        l3 = (long) $i4;

        l2 = 4294967295L & l3;

        $r1 = r0.<org.spongycastle.crypto.macs.Poly1305: byte[] currentBlock>;

        $i4 = staticinvoke <org.spongycastle.util.Pack: int littleEndianToInt(byte[],int)>($r1, 12);

        l3 = (long) $i4;

        l3 = 4294967295L & l3;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h0>;

        $l5 = (long) $i4;

        $l6 = 67108863L & l0;

        $l5 = $l5 + $l6;

        $i4 = (int) $l5;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h0> = $i4;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h1>;

        $l5 = (long) $i4;

        $l6 = l1 << 32;

        l0 = $l6 | l0;

        l0 = l0 >>> 26;

        l0 = l0 & 67108863L;

        l0 = $l5 + l0;

        $i4 = (int) l0;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h1> = $i4;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h2>;

        l0 = (long) $i4;

        $l5 = l2 << 32;

        l1 = $l5 | l1;

        l1 = l1 >>> 20;

        l1 = l1 & 67108863L;

        l1 = l0 + l1;

        $i4 = (int) l1;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h2> = $i4;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h3>;

        l1 = (long) $i4;

        l0 = l3 << 32;

        l2 = l0 | l2;

        l2 = l2 >>> 14;

        l2 = l2 & 67108863L;

        l2 = l1 + l2;

        $i4 = (int) l2;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h3> = $i4;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h4>;

        l2 = (long) $i4;

        l3 = l3 >>> 8;

        l3 = l2 + l3;

        $i4 = (int) l3;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h4> = $i4;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset>;

        if $i4 != 16 goto label3;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h4>;

        $i4 = $i4 + 16777216;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h4> = $i4;

     label3:
        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h0>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r0>;

        l3 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h1>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int s4>;

        l2 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l3 = l3 + l2;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h2>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int s3>;

        l2 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l3 = l3 + l2;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h3>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int s2>;

        l2 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l3 = l3 + l2;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h4>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int s1>;

        l2 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l3 = l3 + l2;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h0>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r1>;

        l2 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h1>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r0>;

        l1 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l2 = l2 + l1;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h2>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int s4>;

        l1 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l2 = l2 + l1;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h3>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int s3>;

        l1 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l2 = l2 + l1;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h4>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int s2>;

        l1 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l2 = l2 + l1;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h0>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r2>;

        l1 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h1>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r1>;

        l0 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l1 = l1 + l0;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h2>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r0>;

        l0 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l1 = l1 + l0;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h3>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int s4>;

        l0 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l1 = l1 + l0;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h4>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int s3>;

        l0 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l1 = l1 + l0;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h0>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r3>;

        l0 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h1>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r2>;

        $l5 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l0 = l0 + $l5;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h2>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r1>;

        $l5 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l0 = l0 + $l5;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h3>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r0>;

        $l5 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l0 = l0 + $l5;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h4>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int s4>;

        $l5 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        l0 = l0 + $l5;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h0>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r4>;

        $l5 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h1>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r3>;

        $l6 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        $l5 = $l5 + $l6;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h2>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r2>;

        $l6 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        $l5 = $l5 + $l6;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h3>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r1>;

        $l6 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        $l5 = $l5 + $l6;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h4>;

        $i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int r0>;

        $l6 = staticinvoke <org.spongycastle.crypto.macs.Poly1305: long mul32x32_64(int,int)>($i4, $i7);

        $l5 = $l5 + $l6;

        $i4 = (int) l3;

        $i4 = $i4 & 67108863;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h0> = $i4;

        l3 = l3 >>> 26;

        l3 = l2 + l3;

        $i4 = (int) l3;

        $i4 = $i4 & 67108863;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h1> = $i4;

        l3 = l3 >>> 26;

        l3 = l3 & -1L;

        l3 = l1 + l3;

        $i4 = (int) l3;

        $i4 = $i4 & 67108863;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h2> = $i4;

        l3 = l3 >>> 26;

        l3 = l3 & -1L;

        l3 = l0 + l3;

        $i4 = (int) l3;

        $i4 = $i4 & 67108863;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h3> = $i4;

        l3 = l3 >>> 26;

        l3 = $l5 + l3;

        $i4 = (int) l3;

        $i4 = $i4 & 67108863;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h4> = $i4;

        l2 = l3 >>> 26;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h0>;

        l3 = (long) $i4;

        l2 = 5L * l2;

        l3 = l3 + l2;

        $i4 = (int) l3;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h0> = $i4;

        return;
    }
    private void setKey(byte[], byte[])
    {
        org.spongycastle.crypto.macs.Poly1305 r0;
        byte[] $r1, $r2, r6;
        org.spongycastle.crypto.params.KeyParameter $r3;
        org.spongycastle.crypto.BlockCipher $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.spongycastle.crypto.macs.Poly1305;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r4 = r0.<org.spongycastle.crypto.macs.Poly1305: org.spongycastle.crypto.BlockCipher cipher>;

        if $r4 == null goto label2;

        if $r2 == null goto label1;

        $i0 = lengthof $r2;

        if $i0 == 16 goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Poly1305 requires a 128 bit IV.");

        throw $r5;

     label2:
        staticinvoke <org.spongycastle.crypto.generators.Poly1305KeyGenerator: void checkKey(byte[])>($r1);

        $i1 = staticinvoke <org.spongycastle.util.Pack: int littleEndianToInt(byte[],int)>($r1, 16);

        $i2 = staticinvoke <org.spongycastle.util.Pack: int littleEndianToInt(byte[],int)>($r1, 20);

        $i3 = staticinvoke <org.spongycastle.util.Pack: int littleEndianToInt(byte[],int)>($r1, 24);

        $i0 = staticinvoke <org.spongycastle.util.Pack: int littleEndianToInt(byte[],int)>($r1, 28);

        $i4 = 67108863 & $i1;

        r0.<org.spongycastle.crypto.macs.Poly1305: int r0> = $i4;

        $i1 = $i1 >>> 26;

        $i4 = $i2 << 6;

        $i1 = $i1 | $i4;

        $i1 = 67108611 & $i1;

        r0.<org.spongycastle.crypto.macs.Poly1305: int r1> = $i1;

        $i2 = $i2 >>> 20;

        $i1 = $i3 << 12;

        $i2 = $i2 | $i1;

        $i2 = 67092735 & $i2;

        r0.<org.spongycastle.crypto.macs.Poly1305: int r2> = $i2;

        $i3 = $i3 >>> 14;

        $i2 = $i0 << 18;

        $i3 = $i3 | $i2;

        $i3 = 66076671 & $i3;

        r0.<org.spongycastle.crypto.macs.Poly1305: int r3> = $i3;

        $i0 = $i0 >>> 8;

        $i0 = 1048575 & $i0;

        r0.<org.spongycastle.crypto.macs.Poly1305: int r4> = $i0;

        $i0 = r0.<org.spongycastle.crypto.macs.Poly1305: int r1>;

        $i0 = $i0 * 5;

        r0.<org.spongycastle.crypto.macs.Poly1305: int s1> = $i0;

        $i0 = r0.<org.spongycastle.crypto.macs.Poly1305: int r2>;

        $i0 = $i0 * 5;

        r0.<org.spongycastle.crypto.macs.Poly1305: int s2> = $i0;

        $i0 = r0.<org.spongycastle.crypto.macs.Poly1305: int r3>;

        $i0 = $i0 * 5;

        r0.<org.spongycastle.crypto.macs.Poly1305: int s3> = $i0;

        $i0 = r0.<org.spongycastle.crypto.macs.Poly1305: int r4>;

        $i0 = $i0 * 5;

        r0.<org.spongycastle.crypto.macs.Poly1305: int s4> = $i0;

        $r4 = r0.<org.spongycastle.crypto.macs.Poly1305: org.spongycastle.crypto.BlockCipher cipher>;

        if $r4 != null goto label4;

        r6 = $r1;

     label3:
        $i0 = staticinvoke <org.spongycastle.util.Pack: int littleEndianToInt(byte[],int)>(r6, 0);

        r0.<org.spongycastle.crypto.macs.Poly1305: int k0> = $i0;

        $i0 = staticinvoke <org.spongycastle.util.Pack: int littleEndianToInt(byte[],int)>(r6, 4);

        r0.<org.spongycastle.crypto.macs.Poly1305: int k1> = $i0;

        $i0 = staticinvoke <org.spongycastle.util.Pack: int littleEndianToInt(byte[],int)>(r6, 8);

        r0.<org.spongycastle.crypto.macs.Poly1305: int k2> = $i0;

        $i0 = staticinvoke <org.spongycastle.util.Pack: int littleEndianToInt(byte[],int)>(r6, 12);

        r0.<org.spongycastle.crypto.macs.Poly1305: int k3> = $i0;

        return;

     label4:
        r6 = newarray (byte)[16];

        $r4 = r0.<org.spongycastle.crypto.macs.Poly1305: org.spongycastle.crypto.BlockCipher cipher>;

        $r3 = new org.spongycastle.crypto.params.KeyParameter;

        specialinvoke $r3.<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r1, 0, 16);

        interfaceinvoke $r4.<org.spongycastle.crypto.BlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, $r3);

        $r4 = r0.<org.spongycastle.crypto.macs.Poly1305: org.spongycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r4.<org.spongycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r2, 0, r6, 0);

        goto label3;
    }
    public int doFinal(byte[], int) throws org.spongycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        org.spongycastle.crypto.macs.Poly1305 r0;
        byte[] $r1;
        int $i0, i2, i3, $i4, i5, i6, i7, $i8, $i9;
        long l1, $l10, $l11, $l12, $l13;
        org.spongycastle.crypto.DataLengthException $r2;

        r0 := @this: org.spongycastle.crypto.macs.Poly1305;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        i2 = $i0 + 16;

        $i4 = lengthof $r1;

        if i2 <= $i4 goto label1;

        $r2 = new org.spongycastle.crypto.DataLengthException;

        specialinvoke $r2.<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>("Output buffer is too short.");

        throw $r2;

     label1:
        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset>;

        if i2 <= 0 goto label2;

        specialinvoke r0.<org.spongycastle.crypto.macs.Poly1305: void processBlock()>();

     label2:
        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int h0>;

        i2 = i2 >>> 26;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h0>;

        $i4 = $i4 & 67108863;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h0> = $i4;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h1>;

        i2 = $i4 + i2;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h1> = i2;

        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int h1>;

        i2 = i2 >>> 26;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h1>;

        $i4 = $i4 & 67108863;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h1> = $i4;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h2>;

        i2 = $i4 + i2;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h2> = i2;

        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int h2>;

        i2 = i2 >>> 26;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h2>;

        $i4 = $i4 & 67108863;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h2> = $i4;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h3>;

        i2 = $i4 + i2;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h3> = i2;

        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int h3>;

        i2 = i2 >>> 26;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h3>;

        $i4 = $i4 & 67108863;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h3> = $i4;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h4>;

        i2 = $i4 + i2;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h4> = i2;

        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int h4>;

        i2 = i2 >>> 26;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h4>;

        $i4 = $i4 & 67108863;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h4> = $i4;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h0>;

        i2 = i2 * 5;

        i2 = $i4 + i2;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h0> = i2;

        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int h0>;

        $i4 = i2 + 5;

        i2 = $i4 >>> 26;

        i5 = $i4 & 67108863;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h1>;

        $i4 = $i4 + i2;

        i2 = $i4 >>> 26;

        i6 = $i4 & 67108863;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h2>;

        $i4 = $i4 + i2;

        i2 = $i4 >>> 26;

        i7 = $i4 & 67108863;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h3>;

        $i4 = $i4 + i2;

        i2 = $i4 >>> 26;

        $i4 = $i4 & 67108863;

        $i8 = r0.<org.spongycastle.crypto.macs.Poly1305: int h4>;

        i2 = $i8 + i2;

        i2 = i2 - 67108864;

        $i8 = i2 >>> 31;

        $i8 = $i8 + -1;

        i3 = $i8 ^ -1;

        $i9 = r0.<org.spongycastle.crypto.macs.Poly1305: int h0>;

        $i9 = $i9 & i3;

        i5 = i5 & $i8;

        i5 = $i9 | i5;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h0> = i5;

        i5 = r0.<org.spongycastle.crypto.macs.Poly1305: int h1>;

        i5 = i5 & i3;

        i6 = i6 & $i8;

        i6 = i5 | i6;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h1> = i6;

        i6 = r0.<org.spongycastle.crypto.macs.Poly1305: int h2>;

        i6 = i6 & i3;

        i7 = i7 & $i8;

        i7 = i6 | i7;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h2> = i7;

        i7 = r0.<org.spongycastle.crypto.macs.Poly1305: int h3>;

        i7 = i7 & i3;

        $i4 = $i4 & $i8;

        $i4 = i7 | $i4;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h3> = $i4;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h4>;

        $i4 = $i4 & i3;

        i2 = i2 & $i8;

        i2 = $i4 | i2;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h4> = i2;

        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int h0>;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h1>;

        $i4 = $i4 << 26;

        i2 = i2 | $i4;

        l1 = (long) i2;

        l1 = l1 & 4294967295L;

        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int k0>;

        $l10 = (long) i2;

        $l10 = 4294967295L & $l10;

        l1 = l1 + $l10;

        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int h1>;

        i2 = i2 >>> 6;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h2>;

        $i4 = $i4 << 20;

        i2 = i2 | $i4;

        $l10 = (long) i2;

        $l10 = $l10 & 4294967295L;

        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int k1>;

        $l11 = (long) i2;

        $l11 = 4294967295L & $l11;

        $l10 = $l10 + $l11;

        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int h2>;

        i2 = i2 >>> 12;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h3>;

        $i4 = $i4 << 14;

        i2 = i2 | $i4;

        $l11 = (long) i2;

        $l11 = $l11 & 4294967295L;

        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int k2>;

        $l12 = (long) i2;

        $l12 = 4294967295L & $l12;

        $l11 = $l11 + $l12;

        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int h3>;

        i2 = i2 >>> 18;

        $i4 = r0.<org.spongycastle.crypto.macs.Poly1305: int h4>;

        $i4 = $i4 << 8;

        i2 = i2 | $i4;

        $l12 = (long) i2;

        $l12 = $l12 & 4294967295L;

        i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int k3>;

        $l13 = (long) i2;

        $l13 = 4294967295L & $l13;

        $l12 = $l12 + $l13;

        i2 = (int) l1;

        staticinvoke <org.spongycastle.util.Pack: void intToLittleEndian(int,byte[],int)>(i2, $r1, $i0);

        l1 = l1 >>> 32;

        l1 = $l10 + l1;

        i2 = (int) l1;

        $i4 = $i0 + 4;

        staticinvoke <org.spongycastle.util.Pack: void intToLittleEndian(int,byte[],int)>(i2, $r1, $i4);

        l1 = l1 >>> 32;

        l1 = $l11 + l1;

        i2 = (int) l1;

        $i4 = $i0 + 8;

        staticinvoke <org.spongycastle.util.Pack: void intToLittleEndian(int,byte[],int)>(i2, $r1, $i4);

        l1 = l1 >>> 32;

        l1 = $l12 + l1;

        i2 = (int) l1;

        $i0 = $i0 + 12;

        staticinvoke <org.spongycastle.util.Pack: void intToLittleEndian(int,byte[],int)>(i2, $r1, $i0);

        virtualinvoke r0.<org.spongycastle.crypto.macs.Poly1305: void reset()>();

        return 16;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.macs.Poly1305 r0;
        org.spongycastle.crypto.BlockCipher $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: org.spongycastle.crypto.macs.Poly1305;

        $r1 = r0.<org.spongycastle.crypto.macs.Poly1305: org.spongycastle.crypto.BlockCipher cipher>;

        if $r1 != null goto label1;

        return "Poly1305";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Poly1305-");

        $r1 = r0.<org.spongycastle.crypto.macs.Poly1305: org.spongycastle.crypto.BlockCipher cipher>;

        $r3 = interfaceinvoke $r1.<org.spongycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
    public int getMacSize()
    {
        org.spongycastle.crypto.macs.Poly1305 r0;

        r0 := @this: org.spongycastle.crypto.macs.Poly1305;

        return 16;
    }
    public void init(org.spongycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.crypto.macs.Poly1305 r0;
        org.spongycastle.crypto.CipherParameters $r1;
        byte[] r2, $r7;
        org.spongycastle.crypto.BlockCipher $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        org.spongycastle.crypto.params.ParametersWithIV r5;
        org.spongycastle.crypto.params.KeyParameter r6;

        r0 := @this: org.spongycastle.crypto.macs.Poly1305;

        $r1 := @parameter0: org.spongycastle.crypto.CipherParameters;

        r2 = null;

        $r3 = r0.<org.spongycastle.crypto.macs.Poly1305: org.spongycastle.crypto.BlockCipher cipher>;

        if $r3 == null goto label2;

        $z0 = $r1 instanceof org.spongycastle.crypto.params.ParametersWithIV;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Poly1305 requires an IV when used with a block cipher.");

        throw $r4;

     label1:
        r5 = (org.spongycastle.crypto.params.ParametersWithIV) $r1;

        r2 = virtualinvoke r5.<org.spongycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        $r1 = virtualinvoke r5.<org.spongycastle.crypto.params.ParametersWithIV: org.spongycastle.crypto.CipherParameters getParameters()>();

     label2:
        $z0 = $r1 instanceof org.spongycastle.crypto.params.KeyParameter;

        if $z0 != 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Poly1305 requires a key.");

        throw $r4;

     label3:
        r6 = (org.spongycastle.crypto.params.KeyParameter) $r1;

        $r7 = virtualinvoke r6.<org.spongycastle.crypto.params.KeyParameter: byte[] getKey()>();

        specialinvoke r0.<org.spongycastle.crypto.macs.Poly1305: void setKey(byte[],byte[])>($r7, r2);

        virtualinvoke r0.<org.spongycastle.crypto.macs.Poly1305: void reset()>();

        return;
    }
    public void reset()
    {
        org.spongycastle.crypto.macs.Poly1305 r0;

        r0 := @this: org.spongycastle.crypto.macs.Poly1305;

        r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset> = 0;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h4> = 0;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h3> = 0;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h2> = 0;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h1> = 0;

        r0.<org.spongycastle.crypto.macs.Poly1305: int h0> = 0;

        return;
    }
    public void update(byte) throws java.lang.IllegalStateException
    {
        org.spongycastle.crypto.macs.Poly1305 r0;
        byte $b0;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.macs.Poly1305;

        $b0 := @parameter0: byte;

        $r1 = r0.<org.spongycastle.crypto.macs.Poly1305: byte[] singleByte>;

        $r1[0] = $b0;

        $r1 = r0.<org.spongycastle.crypto.macs.Poly1305: byte[] singleByte>;

        virtualinvoke r0.<org.spongycastle.crypto.macs.Poly1305: void update(byte[],int,int)>($r1, 0, 1);

        return;
    }
    public void update(byte[], int, int) throws org.spongycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        org.spongycastle.crypto.macs.Poly1305 r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, i4, $i5;

        r0 := @this: org.spongycastle.crypto.macs.Poly1305;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        i4 = 0;

     label1:
        if $i1 <= i4 goto label3;

        $i3 = r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset>;

        if $i3 != 16 goto label2;

        specialinvoke r0.<org.spongycastle.crypto.macs.Poly1305: void processBlock()>();

        r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset> = 0;

     label2:
        $i3 = $i1 - i4;

        $i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset>;

        $i2 = 16 - $i2;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        $i5 = i4 + $i0;

        $r2 = r0.<org.spongycastle.crypto.macs.Poly1305: byte[] currentBlock>;

        $i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i5, $r2, $i2, $i3);

        i4 = i4 + $i3;

        $i2 = r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset>;

        $i3 = $i2 + $i3;

        r0.<org.spongycastle.crypto.macs.Poly1305: int currentBlockOffset> = $i3;

        goto label1;

     label3:
        return;
    }
