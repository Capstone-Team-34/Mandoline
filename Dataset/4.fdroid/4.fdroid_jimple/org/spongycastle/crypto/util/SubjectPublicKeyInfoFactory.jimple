org.spongycastle.crypto.util.SubjectPublicKeyInfoFactory extends java.lang.Object
    public void <init>()
    {
        org.spongycastle.crypto.util.SubjectPublicKeyInfoFactory r0;

        r0 := @this: org.spongycastle.crypto.util.SubjectPublicKeyInfoFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static org.spongycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(org.spongycastle.crypto.params.AsymmetricKeyParameter) throws java.io.IOException
    {
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r0;
        org.spongycastle.asn1.x9.X9ECParameters r1;
        boolean $z0;
        org.spongycastle.crypto.params.RSAKeyParameters r2;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;
        org.spongycastle.asn1.DERNull $r6;
        org.spongycastle.asn1.pkcs.RSAPublicKey $r7;
        java.math.BigInteger $r8, $r9, $r13;
        org.spongycastle.crypto.params.DSAPublicKeyParameters r10;
        org.spongycastle.asn1.x509.DSAParameter r11;
        org.spongycastle.crypto.params.DSAParameters $r12;
        org.spongycastle.asn1.ASN1Integer $r14;
        org.spongycastle.crypto.params.ECPublicKeyParameters r15;
        org.spongycastle.crypto.params.ECDomainParameters $r16;
        org.spongycastle.asn1.x9.X962Parameters r17;
        org.spongycastle.asn1.x9.X9ECPoint $r18;
        org.spongycastle.math.ec.ECPoint $r19;
        org.spongycastle.asn1.ASN1Primitive $r20;
        org.spongycastle.asn1.ASN1OctetString r21;
        byte[] $r22;
        org.spongycastle.crypto.params.ECNamedDomainParameters r23;
        org.spongycastle.math.ec.ECCurve $r24;
        java.io.IOException $r25;

        $r0 := @parameter0: org.spongycastle.crypto.params.AsymmetricKeyParameter;

        $z0 = $r0 instanceof org.spongycastle.crypto.params.RSAKeyParameters;

        if $z0 == 0 goto label1;

        r2 = (org.spongycastle.crypto.params.RSAKeyParameters) $r0;

        $r3 = new org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r4 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r5 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rsaEncryption>;

        $r6 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        specialinvoke $r4.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r5, $r6);

        $r7 = new org.spongycastle.asn1.pkcs.RSAPublicKey;

        $r8 = virtualinvoke r2.<org.spongycastle.crypto.params.RSAKeyParameters: java.math.BigInteger getModulus()>();

        $r9 = virtualinvoke r2.<org.spongycastle.crypto.params.RSAKeyParameters: java.math.BigInteger getExponent()>();

        specialinvoke $r7.<org.spongycastle.asn1.pkcs.RSAPublicKey: void <init>(java.math.BigInteger,java.math.BigInteger)>($r8, $r9);

        specialinvoke $r3.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r7);

        return $r3;

     label1:
        $z0 = $r0 instanceof org.spongycastle.crypto.params.DSAPublicKeyParameters;

        if $z0 == 0 goto label3;

        r10 = (org.spongycastle.crypto.params.DSAPublicKeyParameters) $r0;

        r11 = null;

        $r12 = virtualinvoke r10.<org.spongycastle.crypto.params.DSAPublicKeyParameters: org.spongycastle.crypto.params.DSAParameters getParameters()>();

        if $r12 == null goto label2;

        r11 = new org.spongycastle.asn1.x509.DSAParameter;

        $r8 = virtualinvoke $r12.<org.spongycastle.crypto.params.DSAParameters: java.math.BigInteger getP()>();

        $r9 = virtualinvoke $r12.<org.spongycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        $r13 = virtualinvoke $r12.<org.spongycastle.crypto.params.DSAParameters: java.math.BigInteger getG()>();

        specialinvoke r11.<org.spongycastle.asn1.x509.DSAParameter: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r8, $r9, $r13);

     label2:
        $r3 = new org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r4 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r5 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_dsa>;

        specialinvoke $r4.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r5, r11);

        $r14 = new org.spongycastle.asn1.ASN1Integer;

        $r8 = virtualinvoke r10.<org.spongycastle.crypto.params.DSAPublicKeyParameters: java.math.BigInteger getY()>();

        specialinvoke $r14.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r8);

        specialinvoke $r3.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r14);

        return $r3;

     label3:
        $z0 = $r0 instanceof org.spongycastle.crypto.params.ECPublicKeyParameters;

        if $z0 == 0 goto label7;

        r15 = (org.spongycastle.crypto.params.ECPublicKeyParameters) $r0;

        $r16 = virtualinvoke r15.<org.spongycastle.crypto.params.ECPublicKeyParameters: org.spongycastle.crypto.params.ECDomainParameters getParameters()>();

        if $r16 != null goto label5;

        r17 = new org.spongycastle.asn1.x9.X962Parameters;

        $r6 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        specialinvoke r17.<org.spongycastle.asn1.x9.X962Parameters: void <init>(org.spongycastle.asn1.ASN1Null)>($r6);

     label4:
        $r18 = new org.spongycastle.asn1.x9.X9ECPoint;

        $r19 = virtualinvoke r15.<org.spongycastle.crypto.params.ECPublicKeyParameters: org.spongycastle.math.ec.ECPoint getQ()>();

        specialinvoke $r18.<org.spongycastle.asn1.x9.X9ECPoint: void <init>(org.spongycastle.math.ec.ECPoint)>($r19);

        $r20 = virtualinvoke $r18.<org.spongycastle.asn1.x9.X9ECPoint: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        r21 = (org.spongycastle.asn1.ASN1OctetString) $r20;

        $r3 = new org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r4 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r5 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_ecPublicKey>;

        specialinvoke $r4.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r5, r17);

        $r22 = virtualinvoke r21.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r3.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r4, $r22);

        return $r3;

     label5:
        $z0 = $r16 instanceof org.spongycastle.crypto.params.ECNamedDomainParameters;

        if $z0 == 0 goto label6;

        r17 = new org.spongycastle.asn1.x9.X962Parameters;

        r23 = (org.spongycastle.crypto.params.ECNamedDomainParameters) $r16;

        $r5 = virtualinvoke r23.<org.spongycastle.crypto.params.ECNamedDomainParameters: org.spongycastle.asn1.ASN1ObjectIdentifier getName()>();

        specialinvoke r17.<org.spongycastle.asn1.x9.X962Parameters: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r5);

        goto label4;

     label6:
        r1 = new org.spongycastle.asn1.x9.X9ECParameters;

        $r24 = virtualinvoke $r16.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r19 = virtualinvoke $r16.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r8 = virtualinvoke $r16.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

        $r9 = virtualinvoke $r16.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getH()>();

        $r22 = virtualinvoke $r16.<org.spongycastle.crypto.params.ECDomainParameters: byte[] getSeed()>();

        specialinvoke r1.<org.spongycastle.asn1.x9.X9ECParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r24, $r19, $r8, $r9, $r22);

        r17 = new org.spongycastle.asn1.x9.X962Parameters;

        specialinvoke r17.<org.spongycastle.asn1.x9.X962Parameters: void <init>(org.spongycastle.asn1.x9.X9ECParameters)>(r1);

        goto label4;

     label7:
        $r25 = new java.io.IOException;

        specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String)>("key parameters not recognised.");

        throw $r25;
    }
