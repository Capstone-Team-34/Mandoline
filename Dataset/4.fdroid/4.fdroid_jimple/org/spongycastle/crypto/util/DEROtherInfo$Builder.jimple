org.spongycastle.crypto.util.DEROtherInfo$Builder extends java.lang.Object
private final org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmID
private final org.spongycastle.asn1.ASN1OctetString partyUVInfo
private final org.spongycastle.asn1.ASN1OctetString partyVInfo
private org.spongycastle.asn1.ASN1TaggedObject suppPrivInfo
private org.spongycastle.asn1.ASN1TaggedObject suppPubInfo
    public void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier, byte[], byte[])
    {
        org.spongycastle.crypto.util.DEROtherInfo$Builder r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        byte[] $r2, $r3;
        org.spongycastle.asn1.ASN1OctetString $r4;

        r0 := @this: org.spongycastle.crypto.util.DEROtherInfo$Builder;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmID> = $r1;

        $r4 = staticinvoke <org.spongycastle.crypto.util.DerUtil: org.spongycastle.asn1.ASN1OctetString getOctetString(byte[])>($r2);

        r0.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.asn1.ASN1OctetString partyUVInfo> = $r4;

        $r4 = staticinvoke <org.spongycastle.crypto.util.DerUtil: org.spongycastle.asn1.ASN1OctetString getOctetString(byte[])>($r3);

        r0.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.asn1.ASN1OctetString partyVInfo> = $r4;

        return;
    }
    public org.spongycastle.crypto.util.DEROtherInfo build()
    {
        org.spongycastle.crypto.util.DEROtherInfo$Builder r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        org.spongycastle.asn1.DERSequence $r2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.spongycastle.asn1.ASN1OctetString $r4;
        org.spongycastle.asn1.ASN1TaggedObject $r5;
        org.spongycastle.crypto.util.DEROtherInfo $r6;

        r0 := @this: org.spongycastle.crypto.util.DEROtherInfo$Builder;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r3 = r0.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmID>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r4 = r0.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.asn1.ASN1OctetString partyUVInfo>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r4 = r0.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.asn1.ASN1OctetString partyVInfo>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r5 = r0.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.asn1.ASN1TaggedObject suppPubInfo>;

        if $r5 == null goto label1;

        $r5 = r0.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.asn1.ASN1TaggedObject suppPubInfo>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

     label1:
        $r5 = r0.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.asn1.ASN1TaggedObject suppPrivInfo>;

        if $r5 == null goto label2;

        $r5 = r0.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.asn1.ASN1TaggedObject suppPrivInfo>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

     label2:
        $r6 = new org.spongycastle.crypto.util.DEROtherInfo;

        $r2 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r2.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        specialinvoke $r6.<org.spongycastle.crypto.util.DEROtherInfo: void <init>(org.spongycastle.asn1.DERSequence,org.spongycastle.crypto.util.DEROtherInfo$1)>($r2, null);

        return $r6;
    }
    public org.spongycastle.crypto.util.DEROtherInfo$Builder withSuppPrivInfo(byte[])
    {
        org.spongycastle.crypto.util.DEROtherInfo$Builder r0;
        byte[] $r1;
        org.spongycastle.asn1.DERTaggedObject $r2;
        org.spongycastle.asn1.ASN1OctetString $r3;

        r0 := @this: org.spongycastle.crypto.util.DEROtherInfo$Builder;

        $r1 := @parameter0: byte[];

        $r2 = new org.spongycastle.asn1.DERTaggedObject;

        $r3 = staticinvoke <org.spongycastle.crypto.util.DerUtil: org.spongycastle.asn1.ASN1OctetString getOctetString(byte[])>($r1);

        specialinvoke $r2.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 1, $r3);

        r0.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.asn1.ASN1TaggedObject suppPrivInfo> = $r2;

        return r0;
    }
    public org.spongycastle.crypto.util.DEROtherInfo$Builder withSuppPubInfo(byte[])
    {
        org.spongycastle.crypto.util.DEROtherInfo$Builder r0;
        byte[] $r1;
        org.spongycastle.asn1.DERTaggedObject $r2;
        org.spongycastle.asn1.ASN1OctetString $r3;

        r0 := @this: org.spongycastle.crypto.util.DEROtherInfo$Builder;

        $r1 := @parameter0: byte[];

        $r2 = new org.spongycastle.asn1.DERTaggedObject;

        $r3 = staticinvoke <org.spongycastle.crypto.util.DerUtil: org.spongycastle.asn1.ASN1OctetString getOctetString(byte[])>($r1);

        specialinvoke $r2.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 0, $r3);

        r0.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.asn1.ASN1TaggedObject suppPubInfo> = $r2;

        return r0;
    }
