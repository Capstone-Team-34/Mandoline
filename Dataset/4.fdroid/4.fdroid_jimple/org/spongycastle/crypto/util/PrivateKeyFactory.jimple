org.spongycastle.crypto.util.PrivateKeyFactory extends java.lang.Object
    public void <init>()
    {
        org.spongycastle.crypto.util.PrivateKeyFactory r0;

        r0 := @this: org.spongycastle.crypto.util.PrivateKeyFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static org.spongycastle.crypto.params.AsymmetricKeyParameter createKey(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        org.spongycastle.asn1.ASN1InputStream $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r3;
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r4;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = new org.spongycastle.asn1.ASN1InputStream;

        specialinvoke $r1.<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>($r0);

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r3 = staticinvoke <org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)>($r2);

        $r4 = staticinvoke <org.spongycastle.crypto.util.PrivateKeyFactory: org.spongycastle.crypto.params.AsymmetricKeyParameter createKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo)>($r3);

        return $r4;
    }
    public static org.spongycastle.crypto.params.AsymmetricKeyParameter createKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException
    {
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2, $r3;
        boolean $z0;
        org.spongycastle.asn1.ASN1Encodable $r4;
        org.spongycastle.asn1.pkcs.RSAPrivateKey $r5;
        java.math.BigInteger $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.spongycastle.asn1.pkcs.DHParameter $r14;
        org.spongycastle.asn1.ASN1Integer r15;
        int i0;
        org.spongycastle.asn1.oiw.ElGamalParameter $r16;
        org.spongycastle.crypto.params.DSAParameters r17, $r33;
        org.spongycastle.asn1.ASN1Primitive $r18;
        org.spongycastle.asn1.x509.DSAParameter $r19;
        org.spongycastle.asn1.x9.X9ECParameters $r21, r22;
        java.lang.Object r23;
        org.spongycastle.math.ec.ECCurve $r24;
        org.spongycastle.math.ec.ECPoint $r25;
        byte[] $r26;
        org.spongycastle.asn1.sec.ECPrivateKey $r27;
        org.spongycastle.crypto.params.RSAPrivateCrtKeyParameters $r28;
        org.spongycastle.crypto.params.DHParameters $r29;
        org.spongycastle.crypto.params.DHPrivateKeyParameters $r30;
        org.spongycastle.crypto.params.ElGamalParameters $r31;
        org.spongycastle.crypto.params.ElGamalPrivateKeyParameters $r32;
        org.spongycastle.crypto.params.DSAPrivateKeyParameters $r34;
        org.spongycastle.asn1.x9.X962Parameters $r35;
        org.spongycastle.crypto.params.ECNamedDomainParameters $r36;
        org.spongycastle.crypto.params.ECPrivateKeyParameters $r37;
        org.spongycastle.crypto.params.ECDomainParameters $r38;
        java.lang.RuntimeException $r39;

        $r0 := @parameter0: org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithm()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rsaEncryption>;

        $z0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label01;

        $r4 = virtualinvoke $r0.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.ASN1Encodable parsePrivateKey()>();

        $r5 = staticinvoke <org.spongycastle.asn1.pkcs.RSAPrivateKey: org.spongycastle.asn1.pkcs.RSAPrivateKey getInstance(java.lang.Object)>($r4);

        $r28 = new org.spongycastle.crypto.params.RSAPrivateCrtKeyParameters;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.RSAPrivateKey: java.math.BigInteger getModulus()>();

        $r7 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.RSAPrivateKey: java.math.BigInteger getPublicExponent()>();

        $r8 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.RSAPrivateKey: java.math.BigInteger getPrivateExponent()>();

        $r9 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.RSAPrivateKey: java.math.BigInteger getPrime1()>();

        $r10 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.RSAPrivateKey: java.math.BigInteger getPrime2()>();

        $r11 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.RSAPrivateKey: java.math.BigInteger getExponent1()>();

        $r12 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.RSAPrivateKey: java.math.BigInteger getExponent2()>();

        $r13 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.RSAPrivateKey: java.math.BigInteger getCoefficient()>();

        specialinvoke $r28.<org.spongycastle.crypto.params.RSAPrivateCrtKeyParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13);

        return $r28;

     label01:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dhKeyAgreement>;

        $z0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label04;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r14 = staticinvoke <org.spongycastle.asn1.pkcs.DHParameter: org.spongycastle.asn1.pkcs.DHParameter getInstance(java.lang.Object)>($r4);

        $r4 = virtualinvoke $r0.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.ASN1Encodable parsePrivateKey()>();

        r15 = (org.spongycastle.asn1.ASN1Integer) $r4;

        $r6 = virtualinvoke $r14.<org.spongycastle.asn1.pkcs.DHParameter: java.math.BigInteger getL()>();

        if $r6 != null goto label03;

        i0 = 0;

     label02:
        $r29 = new org.spongycastle.crypto.params.DHParameters;

        $r6 = virtualinvoke $r14.<org.spongycastle.asn1.pkcs.DHParameter: java.math.BigInteger getP()>();

        $r7 = virtualinvoke $r14.<org.spongycastle.asn1.pkcs.DHParameter: java.math.BigInteger getG()>();

        specialinvoke $r29.<org.spongycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int)>($r6, $r7, null, i0);

        $r30 = new org.spongycastle.crypto.params.DHPrivateKeyParameters;

        $r6 = virtualinvoke r15.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        specialinvoke $r30.<org.spongycastle.crypto.params.DHPrivateKeyParameters: void <init>(java.math.BigInteger,org.spongycastle.crypto.params.DHParameters)>($r6, $r29);

        return $r30;

     label03:
        i0 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        goto label02;

     label04:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r3 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier elGamalAlgorithm>;

        $z0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label05;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r16 = staticinvoke <org.spongycastle.asn1.oiw.ElGamalParameter: org.spongycastle.asn1.oiw.ElGamalParameter getInstance(java.lang.Object)>($r4);

        $r4 = virtualinvoke $r0.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.ASN1Encodable parsePrivateKey()>();

        r15 = (org.spongycastle.asn1.ASN1Integer) $r4;

        $r32 = new org.spongycastle.crypto.params.ElGamalPrivateKeyParameters;

        $r6 = virtualinvoke r15.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $r31 = new org.spongycastle.crypto.params.ElGamalParameters;

        $r7 = virtualinvoke $r16.<org.spongycastle.asn1.oiw.ElGamalParameter: java.math.BigInteger getP()>();

        $r8 = virtualinvoke $r16.<org.spongycastle.asn1.oiw.ElGamalParameter: java.math.BigInteger getG()>();

        specialinvoke $r31.<org.spongycastle.crypto.params.ElGamalParameters: void <init>(java.math.BigInteger,java.math.BigInteger)>($r7, $r8);

        specialinvoke $r32.<org.spongycastle.crypto.params.ElGamalPrivateKeyParameters: void <init>(java.math.BigInteger,org.spongycastle.crypto.params.ElGamalParameters)>($r6, $r31);

        return $r32;

     label05:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r3 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_dsa>;

        $z0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label07;

        $r4 = virtualinvoke $r0.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.ASN1Encodable parsePrivateKey()>();

        r15 = (org.spongycastle.asn1.ASN1Integer) $r4;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        r17 = null;

        if $r4 == null goto label06;

        $r18 = interfaceinvoke $r4.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r19 = staticinvoke <org.spongycastle.asn1.x509.DSAParameter: org.spongycastle.asn1.x509.DSAParameter getInstance(java.lang.Object)>($r18);

        $r33 = new org.spongycastle.crypto.params.DSAParameters;

        r17 = $r33;

        $r6 = virtualinvoke $r19.<org.spongycastle.asn1.x509.DSAParameter: java.math.BigInteger getP()>();

        $r7 = virtualinvoke $r19.<org.spongycastle.asn1.x509.DSAParameter: java.math.BigInteger getQ()>();

        $r8 = virtualinvoke $r19.<org.spongycastle.asn1.x509.DSAParameter: java.math.BigInteger getG()>();

        specialinvoke $r33.<org.spongycastle.crypto.params.DSAParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r6, $r7, $r8);

     label06:
        $r34 = new org.spongycastle.crypto.params.DSAPrivateKeyParameters;

        $r6 = virtualinvoke r15.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        specialinvoke $r34.<org.spongycastle.crypto.params.DSAPrivateKeyParameters: void <init>(java.math.BigInteger,org.spongycastle.crypto.params.DSAParameters)>($r6, r17);

        return $r34;

     label07:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r3 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_ecPublicKey>;

        $z0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label11;

        $r35 = new org.spongycastle.asn1.x9.X962Parameters;

        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r18 = (org.spongycastle.asn1.ASN1Primitive) $r4;

        specialinvoke $r35.<org.spongycastle.asn1.x9.X962Parameters: void <init>(org.spongycastle.asn1.ASN1Primitive)>($r18);

        $z0 = virtualinvoke $r35.<org.spongycastle.asn1.x9.X962Parameters: boolean isNamedCurve()>();

        if $z0 == 0 goto label10;

        $r18 = virtualinvoke $r35.<org.spongycastle.asn1.x9.X962Parameters: org.spongycastle.asn1.ASN1Primitive getParameters()>();

        $r2 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r18;

        $r21 = staticinvoke <org.spongycastle.crypto.ec.CustomNamedCurves: org.spongycastle.asn1.x9.X9ECParameters getByOID(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

        r22 = $r21;

        if $r21 != null goto label08;

        r22 = staticinvoke <org.spongycastle.asn1.x9.ECNamedCurveTable: org.spongycastle.asn1.x9.X9ECParameters getByOID(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

     label08:
        $r36 = new org.spongycastle.crypto.params.ECNamedDomainParameters;

        r23 = $r36;

        $r24 = virtualinvoke r22.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r25 = virtualinvoke r22.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r6 = virtualinvoke r22.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r7 = virtualinvoke r22.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        $r26 = virtualinvoke r22.<org.spongycastle.asn1.x9.X9ECParameters: byte[] getSeed()>();

        specialinvoke $r36.<org.spongycastle.crypto.params.ECNamedDomainParameters: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r2, $r24, $r25, $r6, $r7, $r26);

     label09:
        $r4 = virtualinvoke $r0.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.ASN1Encodable parsePrivateKey()>();

        $r27 = staticinvoke <org.spongycastle.asn1.sec.ECPrivateKey: org.spongycastle.asn1.sec.ECPrivateKey getInstance(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r27.<org.spongycastle.asn1.sec.ECPrivateKey: java.math.BigInteger getKey()>();

        $r37 = new org.spongycastle.crypto.params.ECPrivateKeyParameters;

        $r38 = (org.spongycastle.crypto.params.ECDomainParameters) r23;

        specialinvoke $r37.<org.spongycastle.crypto.params.ECPrivateKeyParameters: void <init>(java.math.BigInteger,org.spongycastle.crypto.params.ECDomainParameters)>($r6, $r38);

        return $r37;

     label10:
        $r18 = virtualinvoke $r35.<org.spongycastle.asn1.x9.X962Parameters: org.spongycastle.asn1.ASN1Primitive getParameters()>();

        $r21 = staticinvoke <org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.asn1.x9.X9ECParameters getInstance(java.lang.Object)>($r18);

        $r38 = new org.spongycastle.crypto.params.ECDomainParameters;

        r23 = $r38;

        $r24 = virtualinvoke $r21.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r25 = virtualinvoke $r21.<org.spongycastle.asn1.x9.X9ECParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r6 = virtualinvoke $r21.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r7 = virtualinvoke $r21.<org.spongycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        $r26 = virtualinvoke $r21.<org.spongycastle.asn1.x9.X9ECParameters: byte[] getSeed()>();

        specialinvoke $r38.<org.spongycastle.crypto.params.ECDomainParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r24, $r25, $r6, $r7, $r26);

        goto label09;

     label11:
        $r39 = new java.lang.RuntimeException;

        specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String)>("algorithm identifier in key not recognised");

        throw $r39;
    }
    public static org.spongycastle.crypto.params.AsymmetricKeyParameter createKey(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r2;
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r3;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r0);

        $r2 = staticinvoke <org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)>($r1);

        $r3 = staticinvoke <org.spongycastle.crypto.util.PrivateKeyFactory: org.spongycastle.crypto.params.AsymmetricKeyParameter createKey(org.spongycastle.asn1.pkcs.PrivateKeyInfo)>($r2);

        return $r3;
    }
