org.spongycastle.crypto.util.DERMacData$Type extends java.lang.Enum
private static final org.spongycastle.crypto.util.DERMacData$Type[] $VALUES
public static final enum org.spongycastle.crypto.util.DERMacData$Type BILATERALU
public static final enum org.spongycastle.crypto.util.DERMacData$Type BILATERALV
public static final enum org.spongycastle.crypto.util.DERMacData$Type UNILATERALU
public static final enum org.spongycastle.crypto.util.DERMacData$Type UNILATERALV
private final java.lang.String enc
    static void <clinit>()
    {
        org.spongycastle.crypto.util.DERMacData$Type $r0;
        org.spongycastle.crypto.util.DERMacData$Type[] $r1;

        $r0 = new org.spongycastle.crypto.util.DERMacData$Type;

        specialinvoke $r0.<org.spongycastle.crypto.util.DERMacData$Type: void <init>(java.lang.String,int,java.lang.String)>("UNILATERALU", 0, "KC_1_U");

        <org.spongycastle.crypto.util.DERMacData$Type: org.spongycastle.crypto.util.DERMacData$Type UNILATERALU> = $r0;

        $r0 = new org.spongycastle.crypto.util.DERMacData$Type;

        specialinvoke $r0.<org.spongycastle.crypto.util.DERMacData$Type: void <init>(java.lang.String,int,java.lang.String)>("UNILATERALV", 1, "KC_1_V");

        <org.spongycastle.crypto.util.DERMacData$Type: org.spongycastle.crypto.util.DERMacData$Type UNILATERALV> = $r0;

        $r0 = new org.spongycastle.crypto.util.DERMacData$Type;

        specialinvoke $r0.<org.spongycastle.crypto.util.DERMacData$Type: void <init>(java.lang.String,int,java.lang.String)>("BILATERALU", 2, "KC_2_U");

        <org.spongycastle.crypto.util.DERMacData$Type: org.spongycastle.crypto.util.DERMacData$Type BILATERALU> = $r0;

        $r0 = new org.spongycastle.crypto.util.DERMacData$Type;

        specialinvoke $r0.<org.spongycastle.crypto.util.DERMacData$Type: void <init>(java.lang.String,int,java.lang.String)>("BILATERALV", 3, "KC_2_V");

        <org.spongycastle.crypto.util.DERMacData$Type: org.spongycastle.crypto.util.DERMacData$Type BILATERALV> = $r0;

        $r1 = newarray (org.spongycastle.crypto.util.DERMacData$Type)[4];

        $r0 = <org.spongycastle.crypto.util.DERMacData$Type: org.spongycastle.crypto.util.DERMacData$Type UNILATERALU>;

        $r1[0] = $r0;

        $r0 = <org.spongycastle.crypto.util.DERMacData$Type: org.spongycastle.crypto.util.DERMacData$Type UNILATERALV>;

        $r1[1] = $r0;

        $r0 = <org.spongycastle.crypto.util.DERMacData$Type: org.spongycastle.crypto.util.DERMacData$Type BILATERALU>;

        $r1[2] = $r0;

        $r0 = <org.spongycastle.crypto.util.DERMacData$Type: org.spongycastle.crypto.util.DERMacData$Type BILATERALV>;

        $r1[3] = $r0;

        <org.spongycastle.crypto.util.DERMacData$Type: org.spongycastle.crypto.util.DERMacData$Type[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int, java.lang.String)
    {
        org.spongycastle.crypto.util.DERMacData$Type r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.spongycastle.crypto.util.DERMacData$Type;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<org.spongycastle.crypto.util.DERMacData$Type: java.lang.String enc> = $r2;

        return;
    }
    public static org.spongycastle.crypto.util.DERMacData$Type valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.spongycastle.crypto.util.DERMacData$Type $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/spongycastle/crypto/util/DERMacData$Type;", $r0);

        $r2 = (org.spongycastle.crypto.util.DERMacData$Type) $r1;

        return $r2;
    }
    public static org.spongycastle.crypto.util.DERMacData$Type[] values()
    {
        java.lang.Object $r0;
        org.spongycastle.crypto.util.DERMacData$Type[] $r1;

        $r1 = <org.spongycastle.crypto.util.DERMacData$Type: org.spongycastle.crypto.util.DERMacData$Type[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.spongycastle.crypto.util.DERMacData$Type[]) $r0;

        return $r1;
    }
    public byte[] getHeader()
    {
        org.spongycastle.crypto.util.DERMacData$Type r0;
        byte[] $r1;
        java.lang.String $r2;

        r0 := @this: org.spongycastle.crypto.util.DERMacData$Type;

        $r2 = r0.<org.spongycastle.crypto.util.DERMacData$Type: java.lang.String enc>;

        $r1 = staticinvoke <org.spongycastle.util.Strings: byte[] toByteArray(java.lang.String)>($r2);

        return $r1;
    }
