org.spongycastle.crypto.util.DerUtil extends java.lang.Object
    void <init>()
    {
        org.spongycastle.crypto.util.DerUtil r0;

        r0 := @this: org.spongycastle.crypto.util.DerUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static org.spongycastle.asn1.ASN1OctetString getOctetString(byte[])
    {
        byte[] $r0;
        org.spongycastle.asn1.DEROctetString $r1;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        $r1 = new org.spongycastle.asn1.DEROctetString;

        $r0 = newarray (byte)[0];

        specialinvoke $r1.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r0);

        return $r1;

     label1:
        $r1 = new org.spongycastle.asn1.DEROctetString;

        $r0 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r0);

        specialinvoke $r1.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r0);

        return $r1;
    }
    static byte[] toByteArray(org.spongycastle.asn1.ASN1Primitive)
    {
        org.spongycastle.asn1.ASN1Primitive $r0;
        java.io.IOException r1;
        byte[] $r2;
        org.spongycastle.crypto.util.DerUtil$1 $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1Primitive;

     label1:
        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded()>();

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new org.spongycastle.crypto.util.DerUtil$1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get encoding: ");

        $r5 = virtualinvoke r1.<java.io.IOException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.spongycastle.crypto.util.DerUtil$1: void <init>(java.lang.String,java.io.IOException)>($r5, r1);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }
