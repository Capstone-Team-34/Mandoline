org.spongycastle.crypto.util.PrivateKeyInfoFactory extends java.lang.Object
    public void <init>()
    {
        org.spongycastle.crypto.util.PrivateKeyInfoFactory r0;

        r0 := @this: org.spongycastle.crypto.util.PrivateKeyInfoFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static org.spongycastle.asn1.pkcs.PrivateKeyInfo createPrivateKeyInfo(org.spongycastle.crypto.params.AsymmetricKeyParameter) throws java.io.IOException
    {
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r0;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        boolean $z0;
        org.spongycastle.crypto.params.RSAPrivateCrtKeyParameters r3;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r4;
        org.spongycastle.asn1.DERNull $r5;
        org.spongycastle.asn1.pkcs.RSAPrivateKey r6;
        java.math.BigInteger $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        org.spongycastle.crypto.params.DSAPrivateKeyParameters r15;
        org.spongycastle.crypto.params.DSAParameters $r16;
        org.spongycastle.asn1.x509.DSAParameter $r17;
        org.spongycastle.asn1.ASN1Integer $r18;
        org.spongycastle.crypto.params.ECPrivateKeyParameters r19;
        org.spongycastle.crypto.params.ECDomainParameters $r20;
        org.spongycastle.asn1.x9.X962Parameters r21;
        int $i0;
        org.spongycastle.asn1.sec.ECPrivateKey $r22;
        org.spongycastle.crypto.params.ECNamedDomainParameters $r23;
        org.spongycastle.math.ec.ECCurve $r24;
        org.spongycastle.asn1.x9.X9ECParameters r25;
        org.spongycastle.math.ec.ECPoint $r26;
        byte[] $r27;
        java.io.IOException $r28;

        $r0 := @parameter0: org.spongycastle.crypto.params.AsymmetricKeyParameter;

        $z0 = $r0 instanceof org.spongycastle.crypto.params.RSAKeyParameters;

        if $z0 == 0 goto label1;

        r3 = (org.spongycastle.crypto.params.RSAPrivateCrtKeyParameters) $r0;

        $r1 = new org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        $r2 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r4 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rsaEncryption>;

        $r5 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        specialinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r5);

        r6 = new org.spongycastle.asn1.pkcs.RSAPrivateKey;

        $r7 = virtualinvoke r3.<org.spongycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getModulus()>();

        $r8 = virtualinvoke r3.<org.spongycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getPublicExponent()>();

        $r9 = virtualinvoke r3.<org.spongycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getExponent()>();

        $r10 = virtualinvoke r3.<org.spongycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getP()>();

        $r11 = virtualinvoke r3.<org.spongycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getQ()>();

        $r12 = virtualinvoke r3.<org.spongycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getDP()>();

        $r13 = virtualinvoke r3.<org.spongycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getDQ()>();

        $r14 = virtualinvoke r3.<org.spongycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getQInv()>();

        specialinvoke r6.<org.spongycastle.asn1.pkcs.RSAPrivateKey: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14);

        specialinvoke $r1.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r2, r6);

        return $r1;

     label1:
        $z0 = $r0 instanceof org.spongycastle.crypto.params.DSAPrivateKeyParameters;

        if $z0 == 0 goto label2;

        r15 = (org.spongycastle.crypto.params.DSAPrivateKeyParameters) $r0;

        $r16 = virtualinvoke r15.<org.spongycastle.crypto.params.DSAPrivateKeyParameters: org.spongycastle.crypto.params.DSAParameters getParameters()>();

        $r1 = new org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        $r2 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r4 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_dsa>;

        $r17 = new org.spongycastle.asn1.x509.DSAParameter;

        $r7 = virtualinvoke $r16.<org.spongycastle.crypto.params.DSAParameters: java.math.BigInteger getP()>();

        $r8 = virtualinvoke $r16.<org.spongycastle.crypto.params.DSAParameters: java.math.BigInteger getQ()>();

        $r9 = virtualinvoke $r16.<org.spongycastle.crypto.params.DSAParameters: java.math.BigInteger getG()>();

        specialinvoke $r17.<org.spongycastle.asn1.x509.DSAParameter: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r7, $r8, $r9);

        specialinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r17);

        $r18 = new org.spongycastle.asn1.ASN1Integer;

        $r7 = virtualinvoke r15.<org.spongycastle.crypto.params.DSAPrivateKeyParameters: java.math.BigInteger getX()>();

        specialinvoke $r18.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r7);

        specialinvoke $r1.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r2, $r18);

        return $r1;

     label2:
        $z0 = $r0 instanceof org.spongycastle.crypto.params.ECPrivateKeyParameters;

        if $z0 == 0 goto label6;

        r19 = (org.spongycastle.crypto.params.ECPrivateKeyParameters) $r0;

        $r20 = virtualinvoke r19.<org.spongycastle.crypto.params.ECPrivateKeyParameters: org.spongycastle.crypto.params.ECDomainParameters getParameters()>();

        if $r20 != null goto label4;

        r21 = new org.spongycastle.asn1.x9.X962Parameters;

        $r5 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        specialinvoke r21.<org.spongycastle.asn1.x9.X962Parameters: void <init>(org.spongycastle.asn1.ASN1Null)>($r5);

        $r7 = virtualinvoke r19.<org.spongycastle.crypto.params.ECPrivateKeyParameters: java.math.BigInteger getD()>();

        $i0 = virtualinvoke $r7.<java.math.BigInteger: int bitLength()>();

     label3:
        $r1 = new org.spongycastle.asn1.pkcs.PrivateKeyInfo;

        $r2 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r4 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_ecPublicKey>;

        specialinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, r21);

        $r22 = new org.spongycastle.asn1.sec.ECPrivateKey;

        $r7 = virtualinvoke r19.<org.spongycastle.crypto.params.ECPrivateKeyParameters: java.math.BigInteger getD()>();

        specialinvoke $r22.<org.spongycastle.asn1.sec.ECPrivateKey: void <init>(int,java.math.BigInteger,org.spongycastle.asn1.ASN1Encodable)>($i0, $r7, r21);

        specialinvoke $r1.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r2, $r22);

        return $r1;

     label4:
        $z0 = $r20 instanceof org.spongycastle.crypto.params.ECNamedDomainParameters;

        if $z0 == 0 goto label5;

        r21 = new org.spongycastle.asn1.x9.X962Parameters;

        $r23 = (org.spongycastle.crypto.params.ECNamedDomainParameters) $r20;

        $r4 = virtualinvoke $r23.<org.spongycastle.crypto.params.ECNamedDomainParameters: org.spongycastle.asn1.ASN1ObjectIdentifier getName()>();

        specialinvoke r21.<org.spongycastle.asn1.x9.X962Parameters: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

        $r24 = virtualinvoke $r20.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r7 = virtualinvoke $r24.<org.spongycastle.math.ec.ECCurve: java.math.BigInteger getOrder()>();

        $i0 = virtualinvoke $r7.<java.math.BigInteger: int bitLength()>();

        goto label3;

     label5:
        r25 = new org.spongycastle.asn1.x9.X9ECParameters;

        $r24 = virtualinvoke $r20.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r26 = virtualinvoke $r20.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECPoint getG()>();

        $r7 = virtualinvoke $r20.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

        $r8 = virtualinvoke $r20.<org.spongycastle.crypto.params.ECDomainParameters: java.math.BigInteger getH()>();

        $r27 = virtualinvoke $r20.<org.spongycastle.crypto.params.ECDomainParameters: byte[] getSeed()>();

        specialinvoke r25.<org.spongycastle.asn1.x9.X9ECParameters: void <init>(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r24, $r26, $r7, $r8, $r27);

        r21 = new org.spongycastle.asn1.x9.X962Parameters;

        specialinvoke r21.<org.spongycastle.asn1.x9.X962Parameters: void <init>(org.spongycastle.asn1.x9.X9ECParameters)>(r25);

        $r24 = virtualinvoke $r20.<org.spongycastle.crypto.params.ECDomainParameters: org.spongycastle.math.ec.ECCurve getCurve()>();

        $r7 = virtualinvoke $r24.<org.spongycastle.math.ec.ECCurve: java.math.BigInteger getOrder()>();

        $i0 = virtualinvoke $r7.<java.math.BigInteger: int bitLength()>();

        goto label3;

     label6:
        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("key parameters not recognised.");

        throw $r28;
    }
