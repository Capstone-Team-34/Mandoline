org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator extends org.spongycastle.crypto.PBEParametersGenerator
private org.spongycastle.crypto.Digest digest
    public void <init>(org.spongycastle.crypto.Digest)
    {
        org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator r0;
        org.spongycastle.crypto.Digest $r1;

        r0 := @this: org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator;

        $r1 := @parameter0: org.spongycastle.crypto.Digest;

        specialinvoke r0.<org.spongycastle.crypto.PBEParametersGenerator: void <init>()>();

        r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: org.spongycastle.crypto.Digest digest> = $r1;

        return;
    }
    private byte[] generateDerivedKey()
    {
        org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator r0;
        byte[] r1, $r3, $r4;
        int $i0, $i1;
        org.spongycastle.crypto.Digest $r2;

        r0 := @this: org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator;

        $r2 = r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: org.spongycastle.crypto.Digest digest>;

        $i0 = interfaceinvoke $r2.<org.spongycastle.crypto.Digest: int getDigestSize()>();

        r1 = newarray (byte)[$i0];

        $r2 = r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: org.spongycastle.crypto.Digest digest>;

        $r3 = r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: byte[] password>;

        $r4 = r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: byte[] password>;

        $i0 = lengthof $r4;

        interfaceinvoke $r2.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>($r3, 0, $i0);

        $r2 = r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: org.spongycastle.crypto.Digest digest>;

        $r3 = r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: byte[] salt>;

        $r4 = r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: byte[] salt>;

        $i0 = lengthof $r4;

        interfaceinvoke $r2.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>($r3, 0, $i0);

        $r2 = r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: org.spongycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<org.spongycastle.crypto.Digest: int doFinal(byte[],int)>(r1, 0);

        $i0 = 1;

     label1:
        $i1 = r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: int iterationCount>;

        if $i0 >= $i1 goto label2;

        $r2 = r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: org.spongycastle.crypto.Digest digest>;

        $i1 = lengthof r1;

        interfaceinvoke $r2.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>(r1, 0, $i1);

        $r2 = r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: org.spongycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<org.spongycastle.crypto.Digest: int doFinal(byte[],int)>(r1, 0);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public org.spongycastle.crypto.CipherParameters generateDerivedMacParameters(int)
    {
        org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator r0;
        int $i0;
        org.spongycastle.crypto.CipherParameters $r1;

        r0 := @this: org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: org.spongycastle.crypto.CipherParameters generateDerivedParameters(int)>($i0);

        return $r1;
    }
    public org.spongycastle.crypto.CipherParameters generateDerivedParameters(int)
    {
        org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator r0;
        int $i0, $i1;
        org.spongycastle.crypto.Digest $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        byte[] $r5;
        org.spongycastle.crypto.params.KeyParameter $r6;

        r0 := @this: org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator;

        $i0 := @parameter0: int;

        $i0 = $i0 / 8;

        $r1 = r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: org.spongycastle.crypto.Digest digest>;

        $i1 = interfaceinvoke $r1.<org.spongycastle.crypto.Digest: int getDigestSize()>();

        if $i0 <= $i1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t generate a derived key ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes long.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r5 = specialinvoke r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: byte[] generateDerivedKey()>();

        $r6 = new org.spongycastle.crypto.params.KeyParameter;

        specialinvoke $r6.<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r5, 0, $i0);

        return $r6;
    }
    public org.spongycastle.crypto.CipherParameters generateDerivedParameters(int, int)
    {
        org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator r0;
        int $i0, $i1, $i2, $i3;
        org.spongycastle.crypto.Digest $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        byte[] $r5;
        org.spongycastle.crypto.params.ParametersWithIV $r6;
        org.spongycastle.crypto.params.KeyParameter $r7;

        r0 := @this: org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i0 / 8;

        $i1 = $i1 / 8;

        $i2 = $i0 + $i1;

        $r1 = r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: org.spongycastle.crypto.Digest digest>;

        $i3 = interfaceinvoke $r1.<org.spongycastle.crypto.Digest: int getDigestSize()>();

        if $i2 <= $i3 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t generate a derived key ");

        $i0 = $i0 + $i1;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes long.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r5 = specialinvoke r0.<org.spongycastle.crypto.generators.PKCS5S1ParametersGenerator: byte[] generateDerivedKey()>();

        $r6 = new org.spongycastle.crypto.params.ParametersWithIV;

        $r7 = new org.spongycastle.crypto.params.KeyParameter;

        specialinvoke $r7.<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>($r5, 0, $i0);

        specialinvoke $r6.<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[],int,int)>($r7, $r5, $i0, $i1);

        return $r6;
    }
