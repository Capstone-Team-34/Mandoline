org.spongycastle.crypto.generators.DHParametersGenerator extends java.lang.Object
private static final java.math.BigInteger TWO
private int certainty
private java.security.SecureRandom random
private int size
    static void <clinit>()
    {
        java.math.BigInteger $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2L);

        <org.spongycastle.crypto.generators.DHParametersGenerator: java.math.BigInteger TWO> = $r0;

        return;
    }
    public void <init>()
    {
        org.spongycastle.crypto.generators.DHParametersGenerator r0;

        r0 := @this: org.spongycastle.crypto.generators.DHParametersGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.spongycastle.crypto.params.DHParameters generateParameters()
    {
        org.spongycastle.crypto.generators.DHParametersGenerator r0;
        java.math.BigInteger r1, r2, $r5, $r7;
        int $i0, $i1;
        java.security.SecureRandom $r3;
        java.math.BigInteger[] $r4;
        org.spongycastle.crypto.params.DHParameters $r6;

        r0 := @this: org.spongycastle.crypto.generators.DHParametersGenerator;

        $i0 = r0.<org.spongycastle.crypto.generators.DHParametersGenerator: int size>;

        $i1 = r0.<org.spongycastle.crypto.generators.DHParametersGenerator: int certainty>;

        $r3 = r0.<org.spongycastle.crypto.generators.DHParametersGenerator: java.security.SecureRandom random>;

        $r4 = staticinvoke <org.spongycastle.crypto.generators.DHParametersHelper: java.math.BigInteger[] generateSafePrimes(int,int,java.security.SecureRandom)>($i0, $i1, $r3);

        r1 = $r4[0];

        r2 = $r4[1];

        $r3 = r0.<org.spongycastle.crypto.generators.DHParametersGenerator: java.security.SecureRandom random>;

        $r5 = staticinvoke <org.spongycastle.crypto.generators.DHParametersHelper: java.math.BigInteger selectGenerator(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>(r1, r2, $r3);

        $r6 = new org.spongycastle.crypto.params.DHParameters;

        $r7 = <org.spongycastle.crypto.generators.DHParametersGenerator: java.math.BigInteger TWO>;

        specialinvoke $r6.<org.spongycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,org.spongycastle.crypto.params.DHValidationParameters)>(r1, $r5, r2, $r7, null);

        return $r6;
    }
    public void init(int, int, java.security.SecureRandom)
    {
        org.spongycastle.crypto.generators.DHParametersGenerator r0;
        int $i0, $i1;
        java.security.SecureRandom $r1;

        r0 := @this: org.spongycastle.crypto.generators.DHParametersGenerator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.security.SecureRandom;

        r0.<org.spongycastle.crypto.generators.DHParametersGenerator: int size> = $i0;

        r0.<org.spongycastle.crypto.generators.DHParametersGenerator: int certainty> = $i1;

        r0.<org.spongycastle.crypto.generators.DHParametersGenerator: java.security.SecureRandom random> = $r1;

        return;
    }
