org.spongycastle.crypto.generators.GOST3410KeyPairGenerator extends java.lang.Object implements org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator
private org.spongycastle.crypto.params.GOST3410KeyGenerationParameters param
    public void <init>()
    {
        org.spongycastle.crypto.generators.GOST3410KeyPairGenerator r0;

        r0 := @this: org.spongycastle.crypto.generators.GOST3410KeyPairGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.spongycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()
    {
        org.spongycastle.crypto.generators.GOST3410KeyPairGenerator r0;
        java.math.BigInteger r1, $r6, $r7, $r8;
        org.spongycastle.crypto.params.GOST3410PrivateKeyParameters $r2;
        org.spongycastle.crypto.params.GOST3410KeyGenerationParameters $r3;
        org.spongycastle.crypto.params.GOST3410Parameters $r4;
        java.security.SecureRandom $r5;
        int $i0;
        org.spongycastle.crypto.AsymmetricCipherKeyPair $r9;
        org.spongycastle.crypto.params.GOST3410PublicKeyParameters $r10;

        r0 := @this: org.spongycastle.crypto.generators.GOST3410KeyPairGenerator;

        $r3 = r0.<org.spongycastle.crypto.generators.GOST3410KeyPairGenerator: org.spongycastle.crypto.params.GOST3410KeyGenerationParameters param>;

        $r4 = virtualinvoke $r3.<org.spongycastle.crypto.params.GOST3410KeyGenerationParameters: org.spongycastle.crypto.params.GOST3410Parameters getParameters()>();

        $r3 = r0.<org.spongycastle.crypto.generators.GOST3410KeyPairGenerator: org.spongycastle.crypto.params.GOST3410KeyGenerationParameters param>;

        $r5 = virtualinvoke $r3.<org.spongycastle.crypto.params.GOST3410KeyGenerationParameters: java.security.SecureRandom getRandom()>();

        $r6 = virtualinvoke $r4.<org.spongycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getQ()>();

        $r7 = virtualinvoke $r4.<org.spongycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getP()>();

        $r8 = virtualinvoke $r4.<org.spongycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getA()>();

     label1:
        r1 = new java.math.BigInteger;

        specialinvoke r1.<java.math.BigInteger: void <init>(int,java.util.Random)>(256, $r5);

        $i0 = virtualinvoke r1.<java.math.BigInteger: int signum()>();

        if $i0 < 1 goto label1;

        $i0 = virtualinvoke r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r6);

        if $i0 >= 0 goto label1;

        $i0 = staticinvoke <org.spongycastle.math.ec.WNafUtil: int getNafWeight(java.math.BigInteger)>(r1);

        if $i0 < 64 goto label1;

        $r6 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r1, $r7);

        $r9 = new org.spongycastle.crypto.AsymmetricCipherKeyPair;

        $r10 = new org.spongycastle.crypto.params.GOST3410PublicKeyParameters;

        specialinvoke $r10.<org.spongycastle.crypto.params.GOST3410PublicKeyParameters: void <init>(java.math.BigInteger,org.spongycastle.crypto.params.GOST3410Parameters)>($r6, $r4);

        $r2 = new org.spongycastle.crypto.params.GOST3410PrivateKeyParameters;

        specialinvoke $r2.<org.spongycastle.crypto.params.GOST3410PrivateKeyParameters: void <init>(java.math.BigInteger,org.spongycastle.crypto.params.GOST3410Parameters)>(r1, $r4);

        specialinvoke $r9.<org.spongycastle.crypto.AsymmetricCipherKeyPair: void <init>(org.spongycastle.crypto.params.AsymmetricKeyParameter,org.spongycastle.crypto.params.AsymmetricKeyParameter)>($r10, $r2);

        return $r9;
    }
    public void init(org.spongycastle.crypto.KeyGenerationParameters)
    {
        org.spongycastle.crypto.generators.GOST3410KeyPairGenerator r0;
        org.spongycastle.crypto.KeyGenerationParameters $r1;
        org.spongycastle.crypto.params.GOST3410KeyGenerationParameters $r2;

        r0 := @this: org.spongycastle.crypto.generators.GOST3410KeyPairGenerator;

        $r1 := @parameter0: org.spongycastle.crypto.KeyGenerationParameters;

        $r2 = (org.spongycastle.crypto.params.GOST3410KeyGenerationParameters) $r1;

        r0.<org.spongycastle.crypto.generators.GOST3410KeyPairGenerator: org.spongycastle.crypto.params.GOST3410KeyGenerationParameters param> = $r2;

        return;
    }
