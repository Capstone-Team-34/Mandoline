org.spongycastle.crypto.generators.ElGamalParametersGenerator extends java.lang.Object
private int certainty
private java.security.SecureRandom random
private int size
    public void <init>()
    {
        org.spongycastle.crypto.generators.ElGamalParametersGenerator r0;

        r0 := @this: org.spongycastle.crypto.generators.ElGamalParametersGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.spongycastle.crypto.params.ElGamalParameters generateParameters()
    {
        org.spongycastle.crypto.generators.ElGamalParametersGenerator r0;
        java.math.BigInteger r1, r2;
        int $i0, $i1;
        java.security.SecureRandom $r3;
        java.math.BigInteger[] $r4;
        org.spongycastle.crypto.params.ElGamalParameters $r5;

        r0 := @this: org.spongycastle.crypto.generators.ElGamalParametersGenerator;

        $i1 = r0.<org.spongycastle.crypto.generators.ElGamalParametersGenerator: int size>;

        $i0 = r0.<org.spongycastle.crypto.generators.ElGamalParametersGenerator: int certainty>;

        $r3 = r0.<org.spongycastle.crypto.generators.ElGamalParametersGenerator: java.security.SecureRandom random>;

        $r4 = staticinvoke <org.spongycastle.crypto.generators.DHParametersHelper: java.math.BigInteger[] generateSafePrimes(int,int,java.security.SecureRandom)>($i1, $i0, $r3);

        r1 = $r4[0];

        r2 = $r4[1];

        $r3 = r0.<org.spongycastle.crypto.generators.ElGamalParametersGenerator: java.security.SecureRandom random>;

        r2 = staticinvoke <org.spongycastle.crypto.generators.DHParametersHelper: java.math.BigInteger selectGenerator(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>(r1, r2, $r3);

        $r5 = new org.spongycastle.crypto.params.ElGamalParameters;

        specialinvoke $r5.<org.spongycastle.crypto.params.ElGamalParameters: void <init>(java.math.BigInteger,java.math.BigInteger)>(r1, r2);

        return $r5;
    }
    public void init(int, int, java.security.SecureRandom)
    {
        org.spongycastle.crypto.generators.ElGamalParametersGenerator r0;
        int $i0, $i1;
        java.security.SecureRandom $r1;

        r0 := @this: org.spongycastle.crypto.generators.ElGamalParametersGenerator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.security.SecureRandom;

        r0.<org.spongycastle.crypto.generators.ElGamalParametersGenerator: int size> = $i0;

        r0.<org.spongycastle.crypto.generators.ElGamalParametersGenerator: int certainty> = $i1;

        r0.<org.spongycastle.crypto.generators.ElGamalParametersGenerator: java.security.SecureRandom random> = $r1;

        return;
    }
