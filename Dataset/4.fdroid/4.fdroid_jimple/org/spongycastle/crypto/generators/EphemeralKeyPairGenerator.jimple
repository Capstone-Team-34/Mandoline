org.spongycastle.crypto.generators.EphemeralKeyPairGenerator extends java.lang.Object
private org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator gen
private org.spongycastle.crypto.KeyEncoder keyEncoder
    public void <init>(org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator, org.spongycastle.crypto.KeyEncoder)
    {
        org.spongycastle.crypto.generators.EphemeralKeyPairGenerator r0;
        org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator $r1;
        org.spongycastle.crypto.KeyEncoder $r2;

        r0 := @this: org.spongycastle.crypto.generators.EphemeralKeyPairGenerator;

        $r1 := @parameter0: org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator;

        $r2 := @parameter1: org.spongycastle.crypto.KeyEncoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.generators.EphemeralKeyPairGenerator: org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator gen> = $r1;

        r0.<org.spongycastle.crypto.generators.EphemeralKeyPairGenerator: org.spongycastle.crypto.KeyEncoder keyEncoder> = $r2;

        return;
    }
    public org.spongycastle.crypto.EphemeralKeyPair generate()
    {
        org.spongycastle.crypto.generators.EphemeralKeyPairGenerator r0;
        org.spongycastle.crypto.KeyEncoder $r1;
        org.spongycastle.crypto.AsymmetricCipherKeyPair $r2;
        org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator $r3;
        org.spongycastle.crypto.EphemeralKeyPair $r4;

        r0 := @this: org.spongycastle.crypto.generators.EphemeralKeyPairGenerator;

        $r3 = r0.<org.spongycastle.crypto.generators.EphemeralKeyPairGenerator: org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator gen>;

        $r2 = interfaceinvoke $r3.<org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator: org.spongycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()>();

        $r4 = new org.spongycastle.crypto.EphemeralKeyPair;

        $r1 = r0.<org.spongycastle.crypto.generators.EphemeralKeyPairGenerator: org.spongycastle.crypto.KeyEncoder keyEncoder>;

        specialinvoke $r4.<org.spongycastle.crypto.EphemeralKeyPair: void <init>(org.spongycastle.crypto.AsymmetricCipherKeyPair,org.spongycastle.crypto.KeyEncoder)>($r2, $r1);

        return $r4;
    }
