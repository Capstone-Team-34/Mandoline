org.spongycastle.crypto.generators.GOST3410ParametersGenerator extends java.lang.Object
private static final java.math.BigInteger ONE
private static final java.math.BigInteger TWO
private java.security.SecureRandom init_random
private int size
private int typeproc
    static void <clinit>()
    {
        java.math.BigInteger $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE> = $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2L);

        <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO> = $r0;

        return;
    }
    public void <init>()
    {
        org.spongycastle.crypto.generators.GOST3410ParametersGenerator r0;

        r0 := @this: org.spongycastle.crypto.generators.GOST3410ParametersGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private int procedure_A(int, int, java.math.BigInteger[], int)
    {
        org.spongycastle.crypto.generators.GOST3410ParametersGenerator r0;
        java.math.BigInteger[] $r1, r4, r7, $r12, $r13;
        int $i0, i1, $i2, $i3, $i4, $i5;
        java.math.BigInteger r2, r3, $r8, $r14, $r15, $r16;
        java.security.SecureRandom $r5;
        java.lang.String $r6;
        int[] $r9, r10, $r11;
        long $l6;

        r0 := @this: org.spongycastle.crypto.generators.GOST3410ParametersGenerator;

        $i3 := @parameter0: int;

        $i4 := @parameter1: int;

        $r1 := @parameter2: java.math.BigInteger[];

        $i0 := @parameter3: int;

     label01:
        if $i3 < 0 goto label02;

        if $i3 <= 65536 goto label03;

     label02:
        $r5 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random>;

        $i3 = virtualinvoke $r5.<java.security.SecureRandom: int nextInt()>();

        $i3 = $i3 / 32768;

        goto label01;

     label03:
        if $i4 < 0 goto label04;

        if $i4 > 65536 goto label04;

        i1 = $i4 / 2;

        if i1 != 0 goto label05;

     label04:
        $r5 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random>;

        $i4 = virtualinvoke $r5.<java.security.SecureRandom: int nextInt()>();

        $i4 = $i4 / 32768;

        $i4 = $i4 + 1;

        goto label03;

     label05:
        r2 = new java.math.BigInteger;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        specialinvoke r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        r3 = new java.math.BigInteger;

        specialinvoke r3.<java.math.BigInteger: void <init>(java.lang.String)>("19381");

        r4 = newarray (java.math.BigInteger)[1];

        r7 = r4;

        $r8 = new java.math.BigInteger;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        specialinvoke $r8.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        r4[0] = $r8;

        $r9 = newarray (int)[1];

        r10 = $r9;

        $r9[0] = $i0;

        $i3 = 0;

        $i4 = 0;

     label06:
        $i0 = r10[$i4];

        if $i0 < 17 goto label07;

        $i3 = lengthof r10;

        $i3 = $i3 + 1;

        $r9 = newarray (int)[$i3];

        $i3 = lengthof r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, 0, $r9, 0, $i3);

        $i3 = lengthof $r9;

        $r11 = newarray (int)[$i3];

        r10 = $r11;

        $i3 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r11, 0, $i3);

        $i3 = $i4 + 1;

        $i0 = $r11[$i4];

        $i0 = $i0 / 2;

        $r11[$i3] = $i0;

        $i3 = $i4 + 1;

        $i4 = $i4 + 1;

        goto label06;

     label07:
        $i4 = $i3 + 1;

        r4 = newarray (java.math.BigInteger)[$i4];

        $r8 = new java.math.BigInteger;

        specialinvoke $r8.<java.math.BigInteger: void <init>(java.lang.String,int)>("8003", 16);

        r4[$i3] = $r8;

        $i4 = $i3 + -1;

        $i0 = 0;

     label08:
        if $i0 >= $i3 goto label18;

        i1 = r10[$i4];

        i1 = i1 / 16;

     label09:
        $i2 = lengthof r7;

        $r12 = newarray (java.math.BigInteger)[$i2];

        $i2 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, $r12, 0, $i2);

        $i2 = i1 + 1;

        $r13 = newarray (java.math.BigInteger)[$i2];

        r7 = $r13;

        $i2 = lengthof $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, $r13, 0, $i2);

        $i2 = 0;

     label10:
        if $i2 >= i1 goto label11;

        $i5 = $i2 + 1;

        $r8 = $r13[$i2];

        $r8 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r3);

        $r8 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r2);

        $r14 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger pow(int)>(16);

        $r8 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r14);

        $r13[$i5] = $r8;

        $i2 = $i2 + 1;

        goto label10;

     label11:
        $r8 = new java.math.BigInteger;

        specialinvoke $r8.<java.math.BigInteger: void <init>(java.lang.String)>("0");

        $i2 = 0;

     label12:
        if $i2 >= i1 goto label13;

        $r14 = $r13[$i2];

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i5 = $i2 * 16;

        $r15 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger pow(int)>($i5);

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r15);

        $r8 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r14);

        $i2 = $i2 + 1;

        goto label12;

     label13:
        $r14 = $r13[i1];

        $r13[0] = $r14;

        $r14 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i2 = r10[$i4];

        $i2 = $i2 + -1;

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger pow(int)>($i2);

        $i2 = $i4 + 1;

        $r15 = r4[$i2];

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r15);

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i2 = r10[$i4];

        $i2 = $i2 + -1;

        $r15 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger pow(int)>($i2);

        $r8 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r8);

        $i2 = $i4 + 1;

        $r15 = r4[$i2];

        $r16 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i2 = i1 * 16;

        $r16 = virtualinvoke $r16.<java.math.BigInteger: java.math.BigInteger pow(int)>($i2);

        $r15 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r16);

        $r8 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r15);

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r8);

        $r8 = $r14;

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r15 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r15);

        $r16 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i2 = virtualinvoke $r15.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r16);

        if $i2 != 0 goto label14;

        $r8 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $r8 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r8);

     label14:
        $i2 = 0;

     label15:
        $i5 = $i4 + 1;

        $r14 = r4[$i5];

        $l6 = (long) $i2;

        $r15 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l6);

        $r15 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r15);

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r15);

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r15);

        r4[$i4] = $r14;

        $r14 = r4[$i4];

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i5 = r10[$i4];

        $r15 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger pow(int)>($i5);

        $i5 = virtualinvoke $r14.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r15);

        if $i5 == 1 goto label09;

        $r14 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i5 = $i4 + 1;

        $r15 = r4[$i5];

        $l6 = (long) $i2;

        $r16 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l6);

        $r16 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r16);

        $r15 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r16);

        $r16 = r4[$i4];

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r15, $r16);

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i5 = virtualinvoke $r14.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r15);

        if $i5 != 0 goto label16;

        $r14 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $l6 = (long) $i2;

        $r15 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l6);

        $r15 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r15);

        $r16 = r4[$i4];

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r15, $r16);

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i5 = virtualinvoke $r14.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r15);

        if $i5 == 0 goto label16;

        $i4 = $i4 + -1;

        if $i4 < 0 goto label17;

        $i0 = $i0 + 1;

        goto label08;

     label16:
        $i2 = $i2 + 2;

        goto label15;

     label17:
        r2 = r4[0];

        $r1[0] = r2;

        r2 = r4[1];

        $r1[1] = r2;

        r2 = $r13[0];

        $i3 = virtualinvoke r2.<java.math.BigInteger: int intValue()>();

        return $i3;

     label18:
        r2 = r7[0];

        $i3 = virtualinvoke r2.<java.math.BigInteger: int intValue()>();

        return $i3;
    }
    private long procedure_Aa(long, long, java.math.BigInteger[], int)
    {
        org.spongycastle.crypto.generators.GOST3410ParametersGenerator r0;
        java.math.BigInteger[] $r1, r4, r7, $r12, $r13;
        int $i0, i1, $i2, $i6, $i8, $i9;
        java.math.BigInteger r2, r3, $r8, $r14, $r15, $r16;
        long $l3, $l4, $l7;
        byte $b5;
        java.security.SecureRandom $r5;
        java.lang.String $r6;
        int[] $r9, r10, $r11;

        r0 := @this: org.spongycastle.crypto.generators.GOST3410ParametersGenerator;

        $l3 := @parameter0: long;

        $l4 := @parameter1: long;

        $r1 := @parameter2: java.math.BigInteger[];

        $i0 := @parameter3: int;

     label01:
        $b5 = $l3 cmp 0L;

        if $b5 < 0 goto label02;

        $b5 = $l3 cmp 4294967296L;

        if $b5 <= 0 goto label03;

     label02:
        $r5 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random>;

        $i6 = virtualinvoke $r5.<java.security.SecureRandom: int nextInt()>();

        $i6 = $i6 * 2;

        $l3 = (long) $i6;

        goto label01;

     label03:
        $b5 = $l4 cmp 0L;

        if $b5 < 0 goto label04;

        $b5 = $l4 cmp 4294967296L;

        if $b5 > 0 goto label04;

        $l7 = $l4 / 2L;

        $b5 = $l7 cmp 0L;

        if $b5 != 0 goto label05;

     label04:
        $r5 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random>;

        $i6 = virtualinvoke $r5.<java.security.SecureRandom: int nextInt()>();

        $i6 = $i6 * 2;

        $i6 = $i6 + 1;

        $l4 = (long) $i6;

        goto label03;

     label05:
        r2 = new java.math.BigInteger;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        specialinvoke r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        r3 = new java.math.BigInteger;

        specialinvoke r3.<java.math.BigInteger: void <init>(java.lang.String)>("97781173");

        r4 = newarray (java.math.BigInteger)[1];

        r7 = r4;

        $r8 = new java.math.BigInteger;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l3);

        specialinvoke $r8.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        r4[0] = $r8;

        $r9 = newarray (int)[1];

        r10 = $r9;

        $r9[0] = $i0;

        $i0 = 0;

        $i6 = 0;

     label06:
        $i8 = r10[$i6];

        if $i8 < 33 goto label07;

        $i0 = lengthof r10;

        $i0 = $i0 + 1;

        $r9 = newarray (int)[$i0];

        $i0 = lengthof r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, 0, $r9, 0, $i0);

        $i0 = lengthof $r9;

        $r11 = newarray (int)[$i0];

        r10 = $r11;

        $i0 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r11, 0, $i0);

        $i0 = $i6 + 1;

        $i8 = $r11[$i6];

        $i8 = $i8 / 2;

        $r11[$i0] = $i8;

        $i0 = $i6 + 1;

        $i6 = $i6 + 1;

        goto label06;

     label07:
        $i6 = $i0 + 1;

        r4 = newarray (java.math.BigInteger)[$i6];

        $r8 = new java.math.BigInteger;

        specialinvoke $r8.<java.math.BigInteger: void <init>(java.lang.String,int)>("8000000B", 16);

        r4[$i0] = $r8;

        $i6 = $i0 + -1;

        $i8 = 0;

     label08:
        if $i8 >= $i0 goto label18;

        i1 = r10[$i6];

        i1 = i1 / 32;

     label09:
        $i2 = lengthof r7;

        $r12 = newarray (java.math.BigInteger)[$i2];

        $i2 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, $r12, 0, $i2);

        $i2 = i1 + 1;

        $r13 = newarray (java.math.BigInteger)[$i2];

        r7 = $r13;

        $i2 = lengthof $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, $r13, 0, $i2);

        $i2 = 0;

     label10:
        if $i2 >= i1 goto label11;

        $i9 = $i2 + 1;

        $r8 = $r13[$i2];

        $r8 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r3);

        $r8 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r2);

        $r14 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger pow(int)>(32);

        $r8 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r14);

        $r13[$i9] = $r8;

        $i2 = $i2 + 1;

        goto label10;

     label11:
        $r8 = new java.math.BigInteger;

        specialinvoke $r8.<java.math.BigInteger: void <init>(java.lang.String)>("0");

        $i2 = 0;

     label12:
        if $i2 >= i1 goto label13;

        $r14 = $r13[$i2];

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i9 = $i2 * 32;

        $r15 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger pow(int)>($i9);

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r15);

        $r8 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r14);

        $i2 = $i2 + 1;

        goto label12;

     label13:
        $r14 = $r13[i1];

        $r13[0] = $r14;

        $r14 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i2 = r10[$i6];

        $i2 = $i2 + -1;

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger pow(int)>($i2);

        $i2 = $i6 + 1;

        $r15 = r4[$i2];

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r15);

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i2 = r10[$i6];

        $i2 = $i2 + -1;

        $r15 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger pow(int)>($i2);

        $r8 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r8);

        $i2 = $i6 + 1;

        $r15 = r4[$i2];

        $r16 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i2 = i1 * 32;

        $r16 = virtualinvoke $r16.<java.math.BigInteger: java.math.BigInteger pow(int)>($i2);

        $r15 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r16);

        $r8 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r15);

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r8);

        $r8 = $r14;

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r15 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r15);

        $r16 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i2 = virtualinvoke $r15.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r16);

        if $i2 != 0 goto label14;

        $r8 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $r8 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r8);

     label14:
        $i2 = 0;

     label15:
        $i9 = $i6 + 1;

        $r14 = r4[$i9];

        $l3 = (long) $i2;

        $r15 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        $r15 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r15);

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r15);

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r15);

        r4[$i6] = $r14;

        $r14 = r4[$i6];

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i9 = r10[$i6];

        $r15 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger pow(int)>($i9);

        $i9 = virtualinvoke $r14.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r15);

        if $i9 == 1 goto label09;

        $r14 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i9 = $i6 + 1;

        $r15 = r4[$i9];

        $l3 = (long) $i2;

        $r16 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        $r16 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r16);

        $r15 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r16);

        $r16 = r4[$i6];

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r15, $r16);

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i9 = virtualinvoke $r14.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r15);

        if $i9 != 0 goto label16;

        $r14 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $l3 = (long) $i2;

        $r15 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        $r15 = virtualinvoke $r8.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r15);

        $r16 = r4[$i6];

        $r14 = virtualinvoke $r14.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r15, $r16);

        $r15 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i9 = virtualinvoke $r14.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r15);

        if $i9 == 0 goto label16;

        $i6 = $i6 + -1;

        if $i6 < 0 goto label17;

        $i8 = $i8 + 1;

        goto label08;

     label16:
        $i2 = $i2 + 2;

        goto label15;

     label17:
        r2 = r4[0];

        $r1[0] = r2;

        r2 = r4[1];

        $r1[1] = r2;

        r2 = $r13[0];

        $l3 = virtualinvoke r2.<java.math.BigInteger: long longValue()>();

        return $l3;

     label18:
        r2 = r7[0];

        $l3 = virtualinvoke r2.<java.math.BigInteger: long longValue()>();

        return $l3;
    }
    private void procedure_B(int, int, java.math.BigInteger[])
    {
        org.spongycastle.crypto.generators.GOST3410ParametersGenerator r0;
        java.math.BigInteger[] $r1, r4;
        java.math.BigInteger r2, r3, r7, r8, $r9, $r10, $r11, $r12, $r13;
        int $i0, $i1, $i2;
        java.security.SecureRandom $r5;
        java.lang.String $r6;
        long $l3;

        r0 := @this: org.spongycastle.crypto.generators.GOST3410ParametersGenerator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.math.BigInteger[];

     label01:
        if $i0 < 0 goto label02;

        if $i0 <= 65536 goto label03;

     label02:
        $r5 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random>;

        $i0 = virtualinvoke $r5.<java.security.SecureRandom: int nextInt()>();

        $i0 = $i0 / 32768;

        goto label01;

     label03:
        if $i1 < 0 goto label04;

        if $i1 > 65536 goto label04;

        $i2 = $i1 / 2;

        if $i2 != 0 goto label05;

     label04:
        $r5 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random>;

        $i1 = virtualinvoke $r5.<java.security.SecureRandom: int nextInt()>();

        $i1 = $i1 / 32768;

        $i1 = $i1 + 1;

        goto label03;

     label05:
        r4 = newarray (java.math.BigInteger)[2];

        r2 = new java.math.BigInteger;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        specialinvoke r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        r3 = new java.math.BigInteger;

        specialinvoke r3.<java.math.BigInteger: void <init>(java.lang.String)>("19381");

        $i0 = specialinvoke r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: int procedure_A(int,int,java.math.BigInteger[],int)>($i0, $i1, r4, 256);

        r7 = r4[0];

        $i0 = specialinvoke r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: int procedure_A(int,int,java.math.BigInteger[],int)>($i0, $i1, r4, 512);

        r8 = r4[0];

        r4 = newarray (java.math.BigInteger)[65];

        $r9 = new java.math.BigInteger;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        specialinvoke $r9.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        r4[0] = $r9;

     label06:
        $i0 = 0;

     label07:
        if $i0 >= 64 goto label08;

        $i1 = $i0 + 1;

        $r9 = r4[$i0];

        $r9 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r3);

        $r9 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r2);

        $r10 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger pow(int)>(16);

        $r9 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r10);

        r4[$i1] = $r9;

        $i0 = $i0 + 1;

        goto label07;

     label08:
        $r9 = new java.math.BigInteger;

        specialinvoke $r9.<java.math.BigInteger: void <init>(java.lang.String)>("0");

        $i0 = 0;

     label09:
        if $i0 >= 64 goto label10;

        $r10 = r4[$i0];

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i1 = $i0 * 16;

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger pow(int)>($i1);

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r11);

        $r9 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r10);

        $i0 = $i0 + 1;

        goto label09;

     label10:
        $r10 = r4[64];

        r4[0] = $r10;

        $r10 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger pow(int)>(1023);

        $r11 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r8);

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r11);

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger pow(int)>(1023);

        $r9 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r9);

        $r11 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r8);

        $r12 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r12 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger pow(int)>(1024);

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r12);

        $r9 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r11);

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r9);

        $r9 = $r10;

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r11 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r11);

        $r12 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i0 = virtualinvoke $r11.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r12);

        if $i0 != 0 goto label11;

        $r9 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $r9 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r9);

     label11:
        $i0 = 0;

     label12:
        $r10 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r8);

        $l3 = (long) $i0;

        $r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        $r11 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r11);

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r11);

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r11);

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger pow(int)>(1024);

        $i1 = virtualinvoke $r10.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r11);

        if $i1 == 1 goto label06;

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r12 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r8);

        $l3 = (long) $i0;

        $r13 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        $r13 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r13);

        $r12 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r13);

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r12, $r10);

        $r12 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i1 = virtualinvoke $r11.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r12);

        if $i1 != 0 goto label13;

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $l3 = (long) $i0;

        $r12 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        $r12 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r12);

        $r12 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r12);

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r12, $r10);

        $r12 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i1 = virtualinvoke $r11.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r12);

        if $i1 == 0 goto label13;

        $r1[0] = $r10;

        $r1[1] = r7;

        return;

     label13:
        $i0 = $i0 + 2;

        goto label12;
    }
    private void procedure_Bb(long, long, java.math.BigInteger[])
    {
        org.spongycastle.crypto.generators.GOST3410ParametersGenerator r0;
        java.math.BigInteger[] $r1, r3;
        java.math.BigInteger r2, r4, r7, r8, $r9, $r10, $r11, $r12, $r13;
        long $l0, $l1, $l4;
        byte $b2;
        java.security.SecureRandom $r5;
        int $i3, $i5;
        java.lang.String $r6;

        r0 := @this: org.spongycastle.crypto.generators.GOST3410ParametersGenerator;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 := @parameter2: java.math.BigInteger[];

     label01:
        $b2 = $l0 cmp 0L;

        if $b2 < 0 goto label02;

        $b2 = $l0 cmp 4294967296L;

        if $b2 <= 0 goto label03;

     label02:
        $r5 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random>;

        $i3 = virtualinvoke $r5.<java.security.SecureRandom: int nextInt()>();

        $i3 = $i3 * 2;

        $l0 = (long) $i3;

        goto label01;

     label03:
        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label04;

        $b2 = $l1 cmp 4294967296L;

        if $b2 > 0 goto label04;

        $l4 = $l1 / 2L;

        $b2 = $l4 cmp 0L;

        if $b2 != 0 goto label05;

     label04:
        $r5 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random>;

        $i3 = virtualinvoke $r5.<java.security.SecureRandom: int nextInt()>();

        $i3 = $i3 * 2;

        $i3 = $i3 + 1;

        $l1 = (long) $i3;

        goto label03;

     label05:
        r3 = newarray (java.math.BigInteger)[2];

        r2 = new java.math.BigInteger;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        specialinvoke r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        r4 = new java.math.BigInteger;

        specialinvoke r4.<java.math.BigInteger: void <init>(java.lang.String)>("97781173");

        $l0 = specialinvoke r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: long procedure_Aa(long,long,java.math.BigInteger[],int)>($l0, $l1, r3, 256);

        r7 = r3[0];

        $l0 = specialinvoke r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: long procedure_Aa(long,long,java.math.BigInteger[],int)>($l0, $l1, r3, 512);

        r8 = r3[0];

        r3 = newarray (java.math.BigInteger)[33];

        $r9 = new java.math.BigInteger;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        specialinvoke $r9.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        r3[0] = $r9;

     label06:
        $i3 = 0;

     label07:
        if $i3 >= 32 goto label08;

        $i5 = $i3 + 1;

        $r9 = r3[$i3];

        $r9 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r4);

        $r9 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r2);

        $r10 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger pow(int)>(32);

        $r9 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r10);

        r3[$i5] = $r9;

        $i3 = $i3 + 1;

        goto label07;

     label08:
        $r9 = new java.math.BigInteger;

        specialinvoke $r9.<java.math.BigInteger: void <init>(java.lang.String)>("0");

        $i3 = 0;

     label09:
        if $i3 >= 32 goto label10;

        $r10 = r3[$i3];

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $i5 = $i3 * 32;

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger pow(int)>($i5);

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r11);

        $r9 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r10);

        $i3 = $i3 + 1;

        goto label09;

     label10:
        $r10 = r3[32];

        r3[0] = $r10;

        $r10 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger pow(int)>(1023);

        $r11 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r8);

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r11);

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger pow(int)>(1023);

        $r9 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r9);

        $r11 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r8);

        $r12 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r12 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger pow(int)>(1024);

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r12);

        $r9 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r11);

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r9);

        $r9 = $r10;

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r11 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r11);

        $r12 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i3 = virtualinvoke $r11.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r12);

        if $i3 != 0 goto label11;

        $r9 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $r9 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r9);

     label11:
        $i3 = 0;

     label12:
        $r10 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r8);

        $l0 = (long) $i3;

        $r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        $r11 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r11);

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r11);

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r11);

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger pow(int)>(1024);

        $i5 = virtualinvoke $r10.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r11);

        if $i5 == 1 goto label06;

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $r12 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r8);

        $l0 = (long) $i3;

        $r13 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        $r13 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r13);

        $r12 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r13);

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r12, $r10);

        $r12 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i5 = virtualinvoke $r11.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r12);

        if $i5 != 0 goto label13;

        $r11 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger TWO>;

        $l0 = (long) $i3;

        $r12 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        $r12 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r12);

        $r12 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r12);

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r12, $r10);

        $r12 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i5 = virtualinvoke $r11.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r12);

        if $i5 == 0 goto label13;

        $r1[0] = $r10;

        $r1[1] = r7;

        return;

     label13:
        $i3 = $i3 + 2;

        goto label12;
    }
    private java.math.BigInteger procedure_C(java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.crypto.generators.GOST3410ParametersGenerator r0;
        java.math.BigInteger $r1, $r2, r3, $r4, $r6;
        int $i0, $i1;
        java.security.SecureRandom $r5;

        r0 := @this: org.spongycastle.crypto.generators.GOST3410ParametersGenerator;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r4 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $r4 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r4);

        $r2 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r2);

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

     label1:
        r3 = new java.math.BigInteger;

        $r5 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random>;

        specialinvoke r3.<java.math.BigInteger: void <init>(int,java.util.Random)>($i0, $r5);

        $r6 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i1 = virtualinvoke r3.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r6);

        if $i1 <= 0 goto label1;

        $i1 = virtualinvoke r3.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r4);

        if $i1 >= 0 goto label1;

        r3 = virtualinvoke r3.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r2, $r1);

        $r6 = <org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger ONE>;

        $i1 = virtualinvoke r3.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r6);

        if $i1 == 0 goto label1;

        return r3;
    }
    public org.spongycastle.crypto.params.GOST3410Parameters generateParameters()
    {
        org.spongycastle.crypto.generators.GOST3410ParametersGenerator r0;
        java.math.BigInteger[] r1;
        int $i0, $i1, $i2;
        java.security.SecureRandom $r2;
        java.lang.IllegalArgumentException $r3;
        java.math.BigInteger r4, r5, $r6;
        org.spongycastle.crypto.params.GOST3410Parameters $r7;
        org.spongycastle.crypto.params.GOST3410ValidationParameters $r8;
        long $l3, $l4;
        java.lang.IllegalStateException $r9;

        r0 := @this: org.spongycastle.crypto.generators.GOST3410ParametersGenerator;

        r1 = newarray (java.math.BigInteger)[2];

        $i0 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: int typeproc>;

        if $i0 != 1 goto label5;

        $r2 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random>;

        $i0 = virtualinvoke $r2.<java.security.SecureRandom: int nextInt()>();

        $r2 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random>;

        $i1 = virtualinvoke $r2.<java.security.SecureRandom: int nextInt()>();

        $i2 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: int size>;

        lookupswitch($i2)
        {
            case 512: goto label2;
            case 1024: goto label4;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Ooops! key size 512 or 1024 bit.");

        throw $r3;

     label2:
        specialinvoke r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: int procedure_A(int,int,java.math.BigInteger[],int)>($i0, $i1, r1, 512);

     label3:
        r4 = r1[0];

        r5 = r1[1];

        $r6 = specialinvoke r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger procedure_C(java.math.BigInteger,java.math.BigInteger)>(r4, r5);

        $r7 = new org.spongycastle.crypto.params.GOST3410Parameters;

        $r8 = new org.spongycastle.crypto.params.GOST3410ValidationParameters;

        specialinvoke $r8.<org.spongycastle.crypto.params.GOST3410ValidationParameters: void <init>(int,int)>($i0, $i1);

        specialinvoke $r7.<org.spongycastle.crypto.params.GOST3410Parameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,org.spongycastle.crypto.params.GOST3410ValidationParameters)>(r4, r5, $r6, $r8);

        return $r7;

     label4:
        specialinvoke r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: void procedure_B(int,int,java.math.BigInteger[])>($i0, $i1, r1);

        goto label3;

     label5:
        $r2 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random>;

        $l3 = virtualinvoke $r2.<java.security.SecureRandom: long nextLong()>();

        $r2 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random>;

        $l4 = virtualinvoke $r2.<java.security.SecureRandom: long nextLong()>();

        $i0 = r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: int size>;

        lookupswitch($i0)
        {
            case 512: goto label7;
            case 1024: goto label9;
            default: goto label6;
        };

     label6:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Ooops! key size 512 or 1024 bit.");

        throw $r9;

     label7:
        specialinvoke r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: long procedure_Aa(long,long,java.math.BigInteger[],int)>($l3, $l4, r1, 512);

     label8:
        r4 = r1[0];

        r5 = r1[1];

        $r6 = specialinvoke r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.math.BigInteger procedure_C(java.math.BigInteger,java.math.BigInteger)>(r4, r5);

        $r7 = new org.spongycastle.crypto.params.GOST3410Parameters;

        $r8 = new org.spongycastle.crypto.params.GOST3410ValidationParameters;

        specialinvoke $r8.<org.spongycastle.crypto.params.GOST3410ValidationParameters: void <init>(long,long)>($l3, $l4);

        specialinvoke $r7.<org.spongycastle.crypto.params.GOST3410Parameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,org.spongycastle.crypto.params.GOST3410ValidationParameters)>(r4, r5, $r6, $r8);

        return $r7;

     label9:
        specialinvoke r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: void procedure_Bb(long,long,java.math.BigInteger[])>($l3, $l4, r1);

        goto label8;
    }
    public void init(int, int, java.security.SecureRandom)
    {
        org.spongycastle.crypto.generators.GOST3410ParametersGenerator r0;
        int $i0, $i1;
        java.security.SecureRandom $r1;

        r0 := @this: org.spongycastle.crypto.generators.GOST3410ParametersGenerator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.security.SecureRandom;

        r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: int size> = $i0;

        r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: int typeproc> = $i1;

        r0.<org.spongycastle.crypto.generators.GOST3410ParametersGenerator: java.security.SecureRandom init_random> = $r1;

        return;
    }
