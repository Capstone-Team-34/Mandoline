org.spongycastle.crypto.generators.DESedeKeyGenerator extends org.spongycastle.crypto.generators.DESKeyGenerator
private static final int MAX_IT
    public void <init>()
    {
        org.spongycastle.crypto.generators.DESedeKeyGenerator r0;

        r0 := @this: org.spongycastle.crypto.generators.DESedeKeyGenerator;

        specialinvoke r0.<org.spongycastle.crypto.generators.DESKeyGenerator: void <init>()>();

        return;
    }
    public byte[] generateKey()
    {
        org.spongycastle.crypto.generators.DESedeKeyGenerator r0;
        byte[] r1;
        int $i0, $i1;
        java.security.SecureRandom $r2;
        boolean $z0;
        java.lang.IllegalStateException $r3;

        r0 := @this: org.spongycastle.crypto.generators.DESedeKeyGenerator;

        $i0 = r0.<org.spongycastle.crypto.generators.DESedeKeyGenerator: int strength>;

        r1 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $r2 = r0.<org.spongycastle.crypto.generators.DESedeKeyGenerator: java.security.SecureRandom random>;

        virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>(r1);

        staticinvoke <org.spongycastle.crypto.params.DESedeParameters: void setOddParity(byte[])>(r1);

        $i0 = $i0 + 1;

        if $i0 >= 20 goto label2;

        $i1 = lengthof r1;

        $z0 = staticinvoke <org.spongycastle.crypto.params.DESedeParameters: boolean isWeakKey(byte[],int,int)>(r1, 0, $i1);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <org.spongycastle.crypto.params.DESedeParameters: boolean isRealEDEKey(byte[],int)>(r1, 0);

        if $z0 == 0 goto label1;

     label2:
        $i0 = lengthof r1;

        $z0 = staticinvoke <org.spongycastle.crypto.params.DESedeParameters: boolean isWeakKey(byte[],int,int)>(r1, 0, $i0);

        if $z0 != 0 goto label3;

        $z0 = staticinvoke <org.spongycastle.crypto.params.DESedeParameters: boolean isRealEDEKey(byte[],int)>(r1, 0);

        if $z0 != 0 goto label4;

     label3:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unable to generate DES-EDE key");

        throw $r3;

     label4:
        return r1;
    }
    public void init(org.spongycastle.crypto.KeyGenerationParameters)
    {
        org.spongycastle.crypto.generators.DESedeKeyGenerator r0;
        org.spongycastle.crypto.KeyGenerationParameters $r1;
        java.security.SecureRandom $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.spongycastle.crypto.generators.DESedeKeyGenerator;

        $r1 := @parameter0: org.spongycastle.crypto.KeyGenerationParameters;

        $r2 = virtualinvoke $r1.<org.spongycastle.crypto.KeyGenerationParameters: java.security.SecureRandom getRandom()>();

        r0.<org.spongycastle.crypto.generators.DESedeKeyGenerator: java.security.SecureRandom random> = $r2;

        $i0 = virtualinvoke $r1.<org.spongycastle.crypto.KeyGenerationParameters: int getStrength()>();

        $i0 = $i0 + 7;

        $i0 = $i0 / 8;

        r0.<org.spongycastle.crypto.generators.DESedeKeyGenerator: int strength> = $i0;

        $i0 = r0.<org.spongycastle.crypto.generators.DESedeKeyGenerator: int strength>;

        if $i0 == 0 goto label1;

        $i0 = r0.<org.spongycastle.crypto.generators.DESedeKeyGenerator: int strength>;

        if $i0 != 21 goto label2;

     label1:
        r0.<org.spongycastle.crypto.generators.DESedeKeyGenerator: int strength> = 24;

        return;

     label2:
        $i0 = r0.<org.spongycastle.crypto.generators.DESedeKeyGenerator: int strength>;

        if $i0 != 14 goto label3;

        r0.<org.spongycastle.crypto.generators.DESedeKeyGenerator: int strength> = 16;

        return;

     label3:
        $i0 = r0.<org.spongycastle.crypto.generators.DESedeKeyGenerator: int strength>;

        if $i0 == 24 goto label4;

        $i0 = r0.<org.spongycastle.crypto.generators.DESedeKeyGenerator: int strength>;

        if $i0 == 16 goto label4;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DESede key must be 192 or 128 bits long.");

        throw $r3;

     label4:
        return;
    }
