org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator extends java.lang.Object implements org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator
private static final java.math.BigInteger ONE
private org.spongycastle.crypto.params.CramerShoupKeyGenerationParameters param
    static void <clinit>()
    {
        java.math.BigInteger $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        <org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator: java.math.BigInteger ONE> = $r0;

        return;
    }
    public void <init>()
    {
        org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator r0;

        r0 := @this: org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private org.spongycastle.crypto.params.CramerShoupPublicKeyParameters calculatePublicKey(org.spongycastle.crypto.params.CramerShoupParameters, org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters)
    {
        org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator r0;
        org.spongycastle.crypto.params.CramerShoupParameters $r1;
        org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters $r2;
        java.math.BigInteger $r3, $r4, $r5, $r6, $r7, $r8;
        org.spongycastle.crypto.params.CramerShoupPublicKeyParameters $r9;

        r0 := @this: org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator;

        $r1 := @parameter0: org.spongycastle.crypto.params.CramerShoupParameters;

        $r2 := @parameter1: org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters;

        $r3 = virtualinvoke $r1.<org.spongycastle.crypto.params.CramerShoupParameters: java.math.BigInteger getG1()>();

        $r4 = virtualinvoke $r1.<org.spongycastle.crypto.params.CramerShoupParameters: java.math.BigInteger getG2()>();

        $r5 = virtualinvoke $r1.<org.spongycastle.crypto.params.CramerShoupParameters: java.math.BigInteger getP()>();

        $r6 = virtualinvoke $r2.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: java.math.BigInteger getX1()>();

        $r6 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r6, $r5);

        $r7 = virtualinvoke $r2.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: java.math.BigInteger getX2()>();

        $r7 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r7, $r5);

        $r6 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r7);

        $r7 = virtualinvoke $r2.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: java.math.BigInteger getY1()>();

        $r7 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r7, $r5);

        $r8 = virtualinvoke $r2.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: java.math.BigInteger getY2()>();

        $r4 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r8, $r5);

        $r4 = virtualinvoke $r7.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r4);

        $r7 = virtualinvoke $r2.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: java.math.BigInteger getZ()>();

        $r3 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r7, $r5);

        $r9 = new org.spongycastle.crypto.params.CramerShoupPublicKeyParameters;

        specialinvoke $r9.<org.spongycastle.crypto.params.CramerShoupPublicKeyParameters: void <init>(org.spongycastle.crypto.params.CramerShoupParameters,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r1, $r6, $r4, $r3);

        return $r9;
    }
    private org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters generatePrivateKey(java.security.SecureRandom, org.spongycastle.crypto.params.CramerShoupParameters)
    {
        org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator r0;
        java.security.SecureRandom $r1;
        org.spongycastle.crypto.params.CramerShoupParameters $r2;
        org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters r3;
        java.math.BigInteger $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator;

        $r1 := @parameter0: java.security.SecureRandom;

        $r2 := @parameter1: org.spongycastle.crypto.params.CramerShoupParameters;

        $r4 = virtualinvoke $r2.<org.spongycastle.crypto.params.CramerShoupParameters: java.math.BigInteger getP()>();

        r3 = new org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters;

        $r5 = specialinvoke r0.<org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator: java.math.BigInteger generateRandomElement(java.math.BigInteger,java.security.SecureRandom)>($r4, $r1);

        $r6 = specialinvoke r0.<org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator: java.math.BigInteger generateRandomElement(java.math.BigInteger,java.security.SecureRandom)>($r4, $r1);

        $r7 = specialinvoke r0.<org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator: java.math.BigInteger generateRandomElement(java.math.BigInteger,java.security.SecureRandom)>($r4, $r1);

        $r8 = specialinvoke r0.<org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator: java.math.BigInteger generateRandomElement(java.math.BigInteger,java.security.SecureRandom)>($r4, $r1);

        $r4 = specialinvoke r0.<org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator: java.math.BigInteger generateRandomElement(java.math.BigInteger,java.security.SecureRandom)>($r4, $r1);

        specialinvoke r3.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: void <init>(org.spongycastle.crypto.params.CramerShoupParameters,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r2, $r5, $r6, $r7, $r8, $r4);

        return r3;
    }
    private java.math.BigInteger generateRandomElement(java.math.BigInteger, java.security.SecureRandom)
    {
        org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator r0;
        java.math.BigInteger $r1, $r3, $r4;
        java.security.SecureRandom $r2;

        r0 := @this: org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.security.SecureRandom;

        $r3 = <org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator: java.math.BigInteger ONE>;

        $r4 = <org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator: java.math.BigInteger ONE>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r4);

        $r1 = staticinvoke <org.spongycastle.util.BigIntegers: java.math.BigInteger createRandomInRange(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>($r3, $r1, $r2);

        return $r1;
    }
    public org.spongycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()
    {
        org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator r0;
        org.spongycastle.crypto.params.CramerShoupKeyGenerationParameters $r1;
        org.spongycastle.crypto.params.CramerShoupParameters $r2;
        java.security.SecureRandom $r3;
        org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters $r4;
        org.spongycastle.crypto.params.CramerShoupPublicKeyParameters $r5;
        org.spongycastle.crypto.AsymmetricCipherKeyPair $r6;

        r0 := @this: org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator;

        $r1 = r0.<org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator: org.spongycastle.crypto.params.CramerShoupKeyGenerationParameters param>;

        $r2 = virtualinvoke $r1.<org.spongycastle.crypto.params.CramerShoupKeyGenerationParameters: org.spongycastle.crypto.params.CramerShoupParameters getParameters()>();

        $r1 = r0.<org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator: org.spongycastle.crypto.params.CramerShoupKeyGenerationParameters param>;

        $r3 = virtualinvoke $r1.<org.spongycastle.crypto.params.CramerShoupKeyGenerationParameters: java.security.SecureRandom getRandom()>();

        $r4 = specialinvoke r0.<org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator: org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters generatePrivateKey(java.security.SecureRandom,org.spongycastle.crypto.params.CramerShoupParameters)>($r3, $r2);

        $r5 = specialinvoke r0.<org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator: org.spongycastle.crypto.params.CramerShoupPublicKeyParameters calculatePublicKey(org.spongycastle.crypto.params.CramerShoupParameters,org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters)>($r2, $r4);

        virtualinvoke $r4.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: void setPk(org.spongycastle.crypto.params.CramerShoupPublicKeyParameters)>($r5);

        $r6 = new org.spongycastle.crypto.AsymmetricCipherKeyPair;

        specialinvoke $r6.<org.spongycastle.crypto.AsymmetricCipherKeyPair: void <init>(org.spongycastle.crypto.params.AsymmetricKeyParameter,org.spongycastle.crypto.params.AsymmetricKeyParameter)>($r5, $r4);

        return $r6;
    }
    public void init(org.spongycastle.crypto.KeyGenerationParameters)
    {
        org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator r0;
        org.spongycastle.crypto.KeyGenerationParameters $r1;
        org.spongycastle.crypto.params.CramerShoupKeyGenerationParameters $r2;

        r0 := @this: org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator;

        $r1 := @parameter0: org.spongycastle.crypto.KeyGenerationParameters;

        $r2 = (org.spongycastle.crypto.params.CramerShoupKeyGenerationParameters) $r1;

        r0.<org.spongycastle.crypto.generators.CramerShoupKeyPairGenerator: org.spongycastle.crypto.params.CramerShoupKeyGenerationParameters param> = $r2;

        return;
    }
