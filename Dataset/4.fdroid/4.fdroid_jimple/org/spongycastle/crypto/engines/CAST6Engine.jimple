org.spongycastle.crypto.engines.CAST6Engine extends org.spongycastle.crypto.engines.CAST5Engine
protected static final int BLOCK_SIZE
protected static final int ROUNDS
protected int[] _Km
protected int[] _Kr
protected int[] _Tm
protected int[] _Tr
private int[] _workingKey
    public void <init>()
    {
        org.spongycastle.crypto.engines.CAST6Engine r0;
        int[] $r1;

        r0 := @this: org.spongycastle.crypto.engines.CAST6Engine;

        specialinvoke r0.<org.spongycastle.crypto.engines.CAST5Engine: void <init>()>();

        $r1 = newarray (int)[48];

        r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr> = $r1;

        $r1 = newarray (int)[48];

        r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km> = $r1;

        $r1 = newarray (int)[192];

        r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr> = $r1;

        $r1 = newarray (int)[192];

        r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm> = $r1;

        $r1 = newarray (int)[8];

        r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey> = $r1;

        return;
    }
    protected final void CAST_Decipher(int, int, int, int, int[])
    {
        org.spongycastle.crypto.engines.CAST6Engine r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7;

        r0 := @this: org.spongycastle.crypto.engines.CAST6Engine;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: int[];

        i4 = 0;

     label1:
        if i4 >= 6 goto label2;

        $i5 = 11 - i4;

        $i5 = $i5 * 4;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = $r2[$i5];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i7 = $r2[$i5];

        $i6 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i3, $i6, $i7);

        $i2 = $i2 ^ $i6;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = $i5 + 1;

        $i6 = $r2[$i6];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i7 = $i5 + 1;

        $i7 = $r2[$i7];

        $i6 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>($i2, $i6, $i7);

        $i1 = $i1 ^ $i6;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = $i5 + 2;

        $i6 = $r2[$i6];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i7 = $i5 + 2;

        $i7 = $r2[$i7];

        $i6 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>($i1, $i6, $i7);

        $i0 = $i0 ^ $i6;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = $i5 + 3;

        $i6 = $r2[$i6];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i5 = $i5 + 3;

        $i5 = $r2[$i5];

        $i5 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i0, $i6, $i5);

        $i3 = $i3 ^ $i5;

        i4 = i4 + 1;

        goto label1;

     label2:
        i4 = 6;

     label3:
        if i4 >= 12 goto label4;

        $i5 = 11 - i4;

        $i5 = $i5 * 4;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = $i5 + 3;

        $i6 = $r2[$i6];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i7 = $i5 + 3;

        $i7 = $r2[$i7];

        $i6 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i0, $i6, $i7);

        $i3 = $i3 ^ $i6;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = $i5 + 2;

        $i6 = $r2[$i6];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i7 = $i5 + 2;

        $i7 = $r2[$i7];

        $i6 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>($i1, $i6, $i7);

        $i0 = $i0 ^ $i6;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = $i5 + 1;

        $i6 = $r2[$i6];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i7 = $i5 + 1;

        $i7 = $r2[$i7];

        $i6 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>($i2, $i6, $i7);

        $i1 = $i1 ^ $i6;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = $r2[$i5];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i5 = $r2[$i5];

        $i5 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i3, $i6, $i5);

        $i2 = $i2 ^ $i5;

        i4 = i4 + 1;

        goto label3;

     label4:
        $r1[0] = $i0;

        $r1[1] = $i1;

        $r1[2] = $i2;

        $r1[3] = $i3;

        return;
    }
    protected final void CAST_Encipher(int, int, int, int, int[])
    {
        org.spongycastle.crypto.engines.CAST6Engine r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7;

        r0 := @this: org.spongycastle.crypto.engines.CAST6Engine;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: int[];

        i4 = 0;

     label1:
        if i4 >= 6 goto label2;

        i5 = i4 * 4;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = $r2[i5];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i7 = $r2[i5];

        $i6 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i3, $i6, $i7);

        $i2 = $i2 ^ $i6;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = i5 + 1;

        $i6 = $r2[$i6];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i7 = i5 + 1;

        $i7 = $r2[$i7];

        $i6 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>($i2, $i6, $i7);

        $i1 = $i1 ^ $i6;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = i5 + 2;

        $i6 = $r2[$i6];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i7 = i5 + 2;

        $i7 = $r2[$i7];

        $i6 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>($i1, $i6, $i7);

        $i0 = $i0 ^ $i6;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = i5 + 3;

        $i6 = $r2[$i6];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        i5 = i5 + 3;

        i5 = $r2[i5];

        i5 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i0, $i6, i5);

        $i3 = $i3 ^ i5;

        i4 = i4 + 1;

        goto label1;

     label2:
        i4 = 6;

     label3:
        if i4 >= 12 goto label4;

        i5 = i4 * 4;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = i5 + 3;

        $i6 = $r2[$i6];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i7 = i5 + 3;

        $i7 = $r2[$i7];

        $i6 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i0, $i6, $i7);

        $i3 = $i3 ^ $i6;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = i5 + 2;

        $i6 = $r2[$i6];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i7 = i5 + 2;

        $i7 = $r2[$i7];

        $i6 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>($i1, $i6, $i7);

        $i0 = $i0 ^ $i6;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = i5 + 1;

        $i6 = $r2[$i6];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        $i7 = i5 + 1;

        $i7 = $r2[$i7];

        $i6 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>($i2, $i6, $i7);

        $i1 = $i1 ^ $i6;

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        $i6 = $r2[i5];

        $r2 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        i5 = $r2[i5];

        i5 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>($i3, $i6, i5);

        $i2 = $i2 ^ i5;

        i4 = i4 + 1;

        goto label3;

     label4:
        $r1[0] = $i0;

        $r1[1] = $i1;

        $r1[2] = $i2;

        $r1[3] = $i3;

        return;
    }
    protected int decryptBlock(byte[], int, byte[], int)
    {
        org.spongycastle.crypto.engines.CAST6Engine r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        int[] r3;

        r0 := @this: org.spongycastle.crypto.engines.CAST6Engine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        r3 = newarray (int)[4];

        $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>($r1, $i0);

        $i3 = $i0 + 4;

        $i3 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>($r1, $i3);

        $i4 = $i0 + 8;

        $i4 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>($r1, $i4);

        $i0 = $i0 + 12;

        $i0 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>($r1, $i0);

        virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: void CAST_Decipher(int,int,int,int,int[])>($i2, $i3, $i4, $i0, r3);

        $i0 = r3[0];

        virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i0, $r2, $i1);

        $i0 = r3[1];

        $i2 = $i1 + 4;

        virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i0, $r2, $i2);

        $i0 = r3[2];

        $i2 = $i1 + 8;

        virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i0, $r2, $i2);

        $i0 = r3[3];

        $i1 = $i1 + 12;

        virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i0, $r2, $i1);

        return 16;
    }
    protected int encryptBlock(byte[], int, byte[], int)
    {
        org.spongycastle.crypto.engines.CAST6Engine r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        int[] r3;

        r0 := @this: org.spongycastle.crypto.engines.CAST6Engine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        r3 = newarray (int)[4];

        $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>($r1, $i0);

        $i3 = $i0 + 4;

        $i3 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>($r1, $i3);

        $i4 = $i0 + 8;

        $i4 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>($r1, $i4);

        $i0 = $i0 + 12;

        $i0 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>($r1, $i0);

        virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: void CAST_Encipher(int,int,int,int,int[])>($i2, $i3, $i4, $i0, r3);

        $i0 = r3[0];

        virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i0, $r2, $i1);

        $i0 = r3[1];

        $i2 = $i1 + 4;

        virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i0, $r2, $i2);

        $i0 = r3[2];

        $i2 = $i1 + 8;

        virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i0, $r2, $i2);

        $i0 = r3[3];

        $i1 = $i1 + 12;

        virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: void Bits32ToBytes(int,byte[],int)>($i0, $r2, $i1);

        return 16;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.engines.CAST6Engine r0;

        r0 := @this: org.spongycastle.crypto.engines.CAST6Engine;

        return "CAST6";
    }
    public int getBlockSize()
    {
        org.spongycastle.crypto.engines.CAST6Engine r0;

        r0 := @this: org.spongycastle.crypto.engines.CAST6Engine;

        return 16;
    }
    public void reset()
    {
        org.spongycastle.crypto.engines.CAST6Engine r0;

        r0 := @this: org.spongycastle.crypto.engines.CAST6Engine;

        return;
    }
    protected void setKey(byte[])
    {
        org.spongycastle.crypto.engines.CAST6Engine r0;
        byte[] $r1, r2;
        int i0, i1, i2, i3, $i4, $i5;
        int[] $r3, $r4;

        r0 := @this: org.spongycastle.crypto.engines.CAST6Engine;

        $r1 := @parameter0: byte[];

        i0 = 1518500249;

        i1 = 19;

        i2 = 0;

     label1:
        if i2 >= 24 goto label4;

        i3 = 0;

     label2:
        if i3 >= 8 goto label3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 * 8;

        $i4 = $i4 + i3;

        $r3[$i4] = i0;

        i0 = i0 + 1859775393;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i4 = i2 * 8;

        $i4 = $i4 + i3;

        $r3[$i4] = i1;

        i1 = i1 + 17;

        i1 = i1 & 31;

        i3 = i3 + 1;

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        r2 = newarray (byte)[64];

        i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r2, 0, i0);

        i0 = 0;

     label5:
        if i0 >= 8 goto label6;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i2 = i0 * 4;

        i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int BytesTo32bits(byte[],int)>(r2, i2);

        $r3[i0] = i2;

        i0 = i0 + 1;

        goto label5;

     label6:
        i0 = 0;

     label7:
        if i0 >= 12 goto label8;

        i2 = i0 * 2;

        i2 = i2 * 8;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[6];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[7];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = $r4[i2];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = $r4[i2];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[6] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[5];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[6];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 1;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = i2 + 1;

        $i5 = $r4[$i5];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[5] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[5];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 2;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = i2 + 2;

        $i5 = $r4[$i5];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[4] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[3];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 3;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = i2 + 3;

        $i5 = $r4[$i5];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[3] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[2];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[3];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 4;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = i2 + 4;

        $i5 = $r4[$i5];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[2] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[1];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[2];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 5;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = i2 + 5;

        $i5 = $r4[$i5];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[1] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[0];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[1];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 6;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = i2 + 6;

        $i5 = $r4[$i5];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[0] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[7];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[0];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 7;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        i2 = i2 + 7;

        i2 = $r4[i2];

        i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>(i1, $i4, i2);

        i2 = i3 ^ i2;

        $r3[7] = i2;

        i2 = i0 * 2;

        i2 = i2 + 1;

        i2 = i2 * 8;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[6];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[7];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = $r4[i2];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = $r4[i2];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[6] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[5];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[6];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 1;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = i2 + 1;

        $i5 = $r4[$i5];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[5] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[5];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 2;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = i2 + 2;

        $i5 = $r4[$i5];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[4] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[3];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 3;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = i2 + 3;

        $i5 = $r4[$i5];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[3] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[2];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[3];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 4;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = i2 + 4;

        $i5 = $r4[$i5];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[2] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[1];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[2];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 5;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = i2 + 5;

        $i5 = $r4[$i5];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F3(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[1] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[0];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[1];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 6;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        $i5 = i2 + 6;

        $i5 = $r4[$i5];

        i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F1(int,int,int)>(i1, $i4, $i5);

        i3 = i3 ^ i1;

        $r3[0] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r3[7];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i1 = $r4[0];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tm>;

        $i4 = i2 + 7;

        $i4 = $r4[$i4];

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Tr>;

        i2 = i2 + 7;

        i2 = $r4[i2];

        i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.CAST6Engine: int F2(int,int,int)>(i1, $i4, i2);

        i2 = i3 ^ i2;

        $r3[7] = i2;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        i2 = i0 * 4;

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r4[0];

        i3 = i3 & 31;

        $r3[i2] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        i2 = i0 * 4;

        i2 = i2 + 1;

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r4[2];

        i3 = i3 & 31;

        $r3[i2] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        i2 = i0 * 4;

        i2 = i2 + 2;

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r4[4];

        i3 = i3 & 31;

        $r3[i2] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Kr>;

        i2 = i0 * 4;

        i2 = i2 + 3;

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r4[6];

        i3 = i3 & 31;

        $r3[i2] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        i2 = i0 * 4;

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r4[7];

        $r3[i2] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        i2 = i0 * 4;

        i2 = i2 + 1;

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r4[5];

        $r3[i2] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        i2 = i0 * 4;

        i2 = i2 + 2;

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r4[3];

        $r3[i2] = i3;

        $r3 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _Km>;

        i2 = i0 * 4;

        i2 = i2 + 3;

        $r4 = r0.<org.spongycastle.crypto.engines.CAST6Engine: int[] _workingKey>;

        i3 = $r4[1];

        $r3[i2] = i3;

        i0 = i0 + 1;

        goto label7;

     label8:
        return;
    }
