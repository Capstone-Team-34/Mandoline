org.spongycastle.crypto.engines.RijndaelEngine extends java.lang.Object implements org.spongycastle.crypto.BlockCipher
private static final int MAXKC
private static final int MAXROUNDS
private static final byte[] S
private static final byte[] Si
private static final byte[] aLogtable
private static final byte[] logtable
private static final int[] rcon
static byte[][] shifts0
static byte[][] shifts1
private long A0
private long A1
private long A2
private long A3
private int BC
private long BC_MASK
private int ROUNDS
private int blockBits
private boolean forEncryption
private byte[] shifts0SC
private byte[] shifts1SC
private long[][] workingKey
    static void <clinit>()
    {
        byte[] $r0;
        int[] $r1;
        byte[][] $r2;

        $r0 = newarray (byte)[256];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = 25;

        $r0[3] = 1;

        $r0[4] = 50;

        $r0[5] = 2;

        $r0[6] = 26;

        $r0[7] = -58;

        $r0[8] = 75;

        $r0[9] = -57;

        $r0[10] = 27;

        $r0[11] = 104;

        $r0[12] = 51;

        $r0[13] = -18;

        $r0[14] = -33;

        $r0[15] = 3;

        $r0[16] = 100;

        $r0[17] = 4;

        $r0[18] = -32;

        $r0[19] = 14;

        $r0[20] = 52;

        $r0[21] = -115;

        $r0[22] = -127;

        $r0[23] = -17;

        $r0[24] = 76;

        $r0[25] = 113;

        $r0[26] = 8;

        $r0[27] = -56;

        $r0[28] = -8;

        $r0[29] = 105;

        $r0[30] = 28;

        $r0[31] = -63;

        $r0[32] = 125;

        $r0[33] = -62;

        $r0[34] = 29;

        $r0[35] = -75;

        $r0[36] = -7;

        $r0[37] = -71;

        $r0[38] = 39;

        $r0[39] = 106;

        $r0[40] = 77;

        $r0[41] = -28;

        $r0[42] = -90;

        $r0[43] = 114;

        $r0[44] = -102;

        $r0[45] = -55;

        $r0[46] = 9;

        $r0[47] = 120;

        $r0[48] = 101;

        $r0[49] = 47;

        $r0[50] = -118;

        $r0[51] = 5;

        $r0[52] = 33;

        $r0[53] = 15;

        $r0[54] = -31;

        $r0[55] = 36;

        $r0[56] = 18;

        $r0[57] = -16;

        $r0[58] = -126;

        $r0[59] = 69;

        $r0[60] = 53;

        $r0[61] = -109;

        $r0[62] = -38;

        $r0[63] = -114;

        $r0[64] = -106;

        $r0[65] = -113;

        $r0[66] = -37;

        $r0[67] = -67;

        $r0[68] = 54;

        $r0[69] = -48;

        $r0[70] = -50;

        $r0[71] = -108;

        $r0[72] = 19;

        $r0[73] = 92;

        $r0[74] = -46;

        $r0[75] = -15;

        $r0[76] = 64;

        $r0[77] = 70;

        $r0[78] = -125;

        $r0[79] = 56;

        $r0[80] = 102;

        $r0[81] = -35;

        $r0[82] = -3;

        $r0[83] = 48;

        $r0[84] = -65;

        $r0[85] = 6;

        $r0[86] = -117;

        $r0[87] = 98;

        $r0[88] = -77;

        $r0[89] = 37;

        $r0[90] = -30;

        $r0[91] = -104;

        $r0[92] = 34;

        $r0[93] = -120;

        $r0[94] = -111;

        $r0[95] = 16;

        $r0[96] = 126;

        $r0[97] = 110;

        $r0[98] = 72;

        $r0[99] = -61;

        $r0[100] = -93;

        $r0[101] = -74;

        $r0[102] = 30;

        $r0[103] = 66;

        $r0[104] = 58;

        $r0[105] = 107;

        $r0[106] = 40;

        $r0[107] = 84;

        $r0[108] = -6;

        $r0[109] = -123;

        $r0[110] = 61;

        $r0[111] = -70;

        $r0[112] = 43;

        $r0[113] = 121;

        $r0[114] = 10;

        $r0[115] = 21;

        $r0[116] = -101;

        $r0[117] = -97;

        $r0[118] = 94;

        $r0[119] = -54;

        $r0[120] = 78;

        $r0[121] = -44;

        $r0[122] = -84;

        $r0[123] = -27;

        $r0[124] = -13;

        $r0[125] = 115;

        $r0[126] = -89;

        $r0[127] = 87;

        $r0[128] = -81;

        $r0[129] = 88;

        $r0[130] = -88;

        $r0[131] = 80;

        $r0[132] = -12;

        $r0[133] = -22;

        $r0[134] = -42;

        $r0[135] = 116;

        $r0[136] = 79;

        $r0[137] = -82;

        $r0[138] = -23;

        $r0[139] = -43;

        $r0[140] = -25;

        $r0[141] = -26;

        $r0[142] = -83;

        $r0[143] = -24;

        $r0[144] = 44;

        $r0[145] = -41;

        $r0[146] = 117;

        $r0[147] = 122;

        $r0[148] = -21;

        $r0[149] = 22;

        $r0[150] = 11;

        $r0[151] = -11;

        $r0[152] = 89;

        $r0[153] = -53;

        $r0[154] = 95;

        $r0[155] = -80;

        $r0[156] = -100;

        $r0[157] = -87;

        $r0[158] = 81;

        $r0[159] = -96;

        $r0[160] = 127;

        $r0[161] = 12;

        $r0[162] = -10;

        $r0[163] = 111;

        $r0[164] = 23;

        $r0[165] = -60;

        $r0[166] = 73;

        $r0[167] = -20;

        $r0[168] = -40;

        $r0[169] = 67;

        $r0[170] = 31;

        $r0[171] = 45;

        $r0[172] = -92;

        $r0[173] = 118;

        $r0[174] = 123;

        $r0[175] = -73;

        $r0[176] = -52;

        $r0[177] = -69;

        $r0[178] = 62;

        $r0[179] = 90;

        $r0[180] = -5;

        $r0[181] = 96;

        $r0[182] = -79;

        $r0[183] = -122;

        $r0[184] = 59;

        $r0[185] = 82;

        $r0[186] = -95;

        $r0[187] = 108;

        $r0[188] = -86;

        $r0[189] = 85;

        $r0[190] = 41;

        $r0[191] = -99;

        $r0[192] = -105;

        $r0[193] = -78;

        $r0[194] = -121;

        $r0[195] = -112;

        $r0[196] = 97;

        $r0[197] = -66;

        $r0[198] = -36;

        $r0[199] = -4;

        $r0[200] = -68;

        $r0[201] = -107;

        $r0[202] = -49;

        $r0[203] = -51;

        $r0[204] = 55;

        $r0[205] = 63;

        $r0[206] = 91;

        $r0[207] = -47;

        $r0[208] = 83;

        $r0[209] = 57;

        $r0[210] = -124;

        $r0[211] = 60;

        $r0[212] = 65;

        $r0[213] = -94;

        $r0[214] = 109;

        $r0[215] = 71;

        $r0[216] = 20;

        $r0[217] = 42;

        $r0[218] = -98;

        $r0[219] = 93;

        $r0[220] = 86;

        $r0[221] = -14;

        $r0[222] = -45;

        $r0[223] = -85;

        $r0[224] = 68;

        $r0[225] = 17;

        $r0[226] = -110;

        $r0[227] = -39;

        $r0[228] = 35;

        $r0[229] = 32;

        $r0[230] = 46;

        $r0[231] = -119;

        $r0[232] = -76;

        $r0[233] = 124;

        $r0[234] = -72;

        $r0[235] = 38;

        $r0[236] = 119;

        $r0[237] = -103;

        $r0[238] = -29;

        $r0[239] = -91;

        $r0[240] = 103;

        $r0[241] = 74;

        $r0[242] = -19;

        $r0[243] = -34;

        $r0[244] = -59;

        $r0[245] = 49;

        $r0[246] = -2;

        $r0[247] = 24;

        $r0[248] = 13;

        $r0[249] = 99;

        $r0[250] = -116;

        $r0[251] = -128;

        $r0[252] = -64;

        $r0[253] = -9;

        $r0[254] = 112;

        $r0[255] = 7;

        <org.spongycastle.crypto.engines.RijndaelEngine: byte[] logtable> = $r0;

        $r0 = newarray (byte)[511];

        $r0[0] = 0;

        $r0[1] = 3;

        $r0[2] = 5;

        $r0[3] = 15;

        $r0[4] = 17;

        $r0[5] = 51;

        $r0[6] = 85;

        $r0[7] = -1;

        $r0[8] = 26;

        $r0[9] = 46;

        $r0[10] = 114;

        $r0[11] = -106;

        $r0[12] = -95;

        $r0[13] = -8;

        $r0[14] = 19;

        $r0[15] = 53;

        $r0[16] = 95;

        $r0[17] = -31;

        $r0[18] = 56;

        $r0[19] = 72;

        $r0[20] = -40;

        $r0[21] = 115;

        $r0[22] = -107;

        $r0[23] = -92;

        $r0[24] = -9;

        $r0[25] = 2;

        $r0[26] = 6;

        $r0[27] = 10;

        $r0[28] = 30;

        $r0[29] = 34;

        $r0[30] = 102;

        $r0[31] = -86;

        $r0[32] = -27;

        $r0[33] = 52;

        $r0[34] = 92;

        $r0[35] = -28;

        $r0[36] = 55;

        $r0[37] = 89;

        $r0[38] = -21;

        $r0[39] = 38;

        $r0[40] = 106;

        $r0[41] = -66;

        $r0[42] = -39;

        $r0[43] = 112;

        $r0[44] = -112;

        $r0[45] = -85;

        $r0[46] = -26;

        $r0[47] = 49;

        $r0[48] = 83;

        $r0[49] = -11;

        $r0[50] = 4;

        $r0[51] = 12;

        $r0[52] = 20;

        $r0[53] = 60;

        $r0[54] = 68;

        $r0[55] = -52;

        $r0[56] = 79;

        $r0[57] = -47;

        $r0[58] = 104;

        $r0[59] = -72;

        $r0[60] = -45;

        $r0[61] = 110;

        $r0[62] = -78;

        $r0[63] = -51;

        $r0[64] = 76;

        $r0[65] = -44;

        $r0[66] = 103;

        $r0[67] = -87;

        $r0[68] = -32;

        $r0[69] = 59;

        $r0[70] = 77;

        $r0[71] = -41;

        $r0[72] = 98;

        $r0[73] = -90;

        $r0[74] = -15;

        $r0[75] = 8;

        $r0[76] = 24;

        $r0[77] = 40;

        $r0[78] = 120;

        $r0[79] = -120;

        $r0[80] = -125;

        $r0[81] = -98;

        $r0[82] = -71;

        $r0[83] = -48;

        $r0[84] = 107;

        $r0[85] = -67;

        $r0[86] = -36;

        $r0[87] = 127;

        $r0[88] = -127;

        $r0[89] = -104;

        $r0[90] = -77;

        $r0[91] = -50;

        $r0[92] = 73;

        $r0[93] = -37;

        $r0[94] = 118;

        $r0[95] = -102;

        $r0[96] = -75;

        $r0[97] = -60;

        $r0[98] = 87;

        $r0[99] = -7;

        $r0[100] = 16;

        $r0[101] = 48;

        $r0[102] = 80;

        $r0[103] = -16;

        $r0[104] = 11;

        $r0[105] = 29;

        $r0[106] = 39;

        $r0[107] = 105;

        $r0[108] = -69;

        $r0[109] = -42;

        $r0[110] = 97;

        $r0[111] = -93;

        $r0[112] = -2;

        $r0[113] = 25;

        $r0[114] = 43;

        $r0[115] = 125;

        $r0[116] = -121;

        $r0[117] = -110;

        $r0[118] = -83;

        $r0[119] = -20;

        $r0[120] = 47;

        $r0[121] = 113;

        $r0[122] = -109;

        $r0[123] = -82;

        $r0[124] = -23;

        $r0[125] = 32;

        $r0[126] = 96;

        $r0[127] = -96;

        $r0[128] = -5;

        $r0[129] = 22;

        $r0[130] = 58;

        $r0[131] = 78;

        $r0[132] = -46;

        $r0[133] = 109;

        $r0[134] = -73;

        $r0[135] = -62;

        $r0[136] = 93;

        $r0[137] = -25;

        $r0[138] = 50;

        $r0[139] = 86;

        $r0[140] = -6;

        $r0[141] = 21;

        $r0[142] = 63;

        $r0[143] = 65;

        $r0[144] = -61;

        $r0[145] = 94;

        $r0[146] = -30;

        $r0[147] = 61;

        $r0[148] = 71;

        $r0[149] = -55;

        $r0[150] = 64;

        $r0[151] = -64;

        $r0[152] = 91;

        $r0[153] = -19;

        $r0[154] = 44;

        $r0[155] = 116;

        $r0[156] = -100;

        $r0[157] = -65;

        $r0[158] = -38;

        $r0[159] = 117;

        $r0[160] = -97;

        $r0[161] = -70;

        $r0[162] = -43;

        $r0[163] = 100;

        $r0[164] = -84;

        $r0[165] = -17;

        $r0[166] = 42;

        $r0[167] = 126;

        $r0[168] = -126;

        $r0[169] = -99;

        $r0[170] = -68;

        $r0[171] = -33;

        $r0[172] = 122;

        $r0[173] = -114;

        $r0[174] = -119;

        $r0[175] = -128;

        $r0[176] = -101;

        $r0[177] = -74;

        $r0[178] = -63;

        $r0[179] = 88;

        $r0[180] = -24;

        $r0[181] = 35;

        $r0[182] = 101;

        $r0[183] = -81;

        $r0[184] = -22;

        $r0[185] = 37;

        $r0[186] = 111;

        $r0[187] = -79;

        $r0[188] = -56;

        $r0[189] = 67;

        $r0[190] = -59;

        $r0[191] = 84;

        $r0[192] = -4;

        $r0[193] = 31;

        $r0[194] = 33;

        $r0[195] = 99;

        $r0[196] = -91;

        $r0[197] = -12;

        $r0[198] = 7;

        $r0[199] = 9;

        $r0[200] = 27;

        $r0[201] = 45;

        $r0[202] = 119;

        $r0[203] = -103;

        $r0[204] = -80;

        $r0[205] = -53;

        $r0[206] = 70;

        $r0[207] = -54;

        $r0[208] = 69;

        $r0[209] = -49;

        $r0[210] = 74;

        $r0[211] = -34;

        $r0[212] = 121;

        $r0[213] = -117;

        $r0[214] = -122;

        $r0[215] = -111;

        $r0[216] = -88;

        $r0[217] = -29;

        $r0[218] = 62;

        $r0[219] = 66;

        $r0[220] = -58;

        $r0[221] = 81;

        $r0[222] = -13;

        $r0[223] = 14;

        $r0[224] = 18;

        $r0[225] = 54;

        $r0[226] = 90;

        $r0[227] = -18;

        $r0[228] = 41;

        $r0[229] = 123;

        $r0[230] = -115;

        $r0[231] = -116;

        $r0[232] = -113;

        $r0[233] = -118;

        $r0[234] = -123;

        $r0[235] = -108;

        $r0[236] = -89;

        $r0[237] = -14;

        $r0[238] = 13;

        $r0[239] = 23;

        $r0[240] = 57;

        $r0[241] = 75;

        $r0[242] = -35;

        $r0[243] = 124;

        $r0[244] = -124;

        $r0[245] = -105;

        $r0[246] = -94;

        $r0[247] = -3;

        $r0[248] = 28;

        $r0[249] = 36;

        $r0[250] = 108;

        $r0[251] = -76;

        $r0[252] = -57;

        $r0[253] = 82;

        $r0[254] = -10;

        $r0[255] = 1;

        $r0[256] = 3;

        $r0[257] = 5;

        $r0[258] = 15;

        $r0[259] = 17;

        $r0[260] = 51;

        $r0[261] = 85;

        $r0[262] = -1;

        $r0[263] = 26;

        $r0[264] = 46;

        $r0[265] = 114;

        $r0[266] = -106;

        $r0[267] = -95;

        $r0[268] = -8;

        $r0[269] = 19;

        $r0[270] = 53;

        $r0[271] = 95;

        $r0[272] = -31;

        $r0[273] = 56;

        $r0[274] = 72;

        $r0[275] = -40;

        $r0[276] = 115;

        $r0[277] = -107;

        $r0[278] = -92;

        $r0[279] = -9;

        $r0[280] = 2;

        $r0[281] = 6;

        $r0[282] = 10;

        $r0[283] = 30;

        $r0[284] = 34;

        $r0[285] = 102;

        $r0[286] = -86;

        $r0[287] = -27;

        $r0[288] = 52;

        $r0[289] = 92;

        $r0[290] = -28;

        $r0[291] = 55;

        $r0[292] = 89;

        $r0[293] = -21;

        $r0[294] = 38;

        $r0[295] = 106;

        $r0[296] = -66;

        $r0[297] = -39;

        $r0[298] = 112;

        $r0[299] = -112;

        $r0[300] = -85;

        $r0[301] = -26;

        $r0[302] = 49;

        $r0[303] = 83;

        $r0[304] = -11;

        $r0[305] = 4;

        $r0[306] = 12;

        $r0[307] = 20;

        $r0[308] = 60;

        $r0[309] = 68;

        $r0[310] = -52;

        $r0[311] = 79;

        $r0[312] = -47;

        $r0[313] = 104;

        $r0[314] = -72;

        $r0[315] = -45;

        $r0[316] = 110;

        $r0[317] = -78;

        $r0[318] = -51;

        $r0[319] = 76;

        $r0[320] = -44;

        $r0[321] = 103;

        $r0[322] = -87;

        $r0[323] = -32;

        $r0[324] = 59;

        $r0[325] = 77;

        $r0[326] = -41;

        $r0[327] = 98;

        $r0[328] = -90;

        $r0[329] = -15;

        $r0[330] = 8;

        $r0[331] = 24;

        $r0[332] = 40;

        $r0[333] = 120;

        $r0[334] = -120;

        $r0[335] = -125;

        $r0[336] = -98;

        $r0[337] = -71;

        $r0[338] = -48;

        $r0[339] = 107;

        $r0[340] = -67;

        $r0[341] = -36;

        $r0[342] = 127;

        $r0[343] = -127;

        $r0[344] = -104;

        $r0[345] = -77;

        $r0[346] = -50;

        $r0[347] = 73;

        $r0[348] = -37;

        $r0[349] = 118;

        $r0[350] = -102;

        $r0[351] = -75;

        $r0[352] = -60;

        $r0[353] = 87;

        $r0[354] = -7;

        $r0[355] = 16;

        $r0[356] = 48;

        $r0[357] = 80;

        $r0[358] = -16;

        $r0[359] = 11;

        $r0[360] = 29;

        $r0[361] = 39;

        $r0[362] = 105;

        $r0[363] = -69;

        $r0[364] = -42;

        $r0[365] = 97;

        $r0[366] = -93;

        $r0[367] = -2;

        $r0[368] = 25;

        $r0[369] = 43;

        $r0[370] = 125;

        $r0[371] = -121;

        $r0[372] = -110;

        $r0[373] = -83;

        $r0[374] = -20;

        $r0[375] = 47;

        $r0[376] = 113;

        $r0[377] = -109;

        $r0[378] = -82;

        $r0[379] = -23;

        $r0[380] = 32;

        $r0[381] = 96;

        $r0[382] = -96;

        $r0[383] = -5;

        $r0[384] = 22;

        $r0[385] = 58;

        $r0[386] = 78;

        $r0[387] = -46;

        $r0[388] = 109;

        $r0[389] = -73;

        $r0[390] = -62;

        $r0[391] = 93;

        $r0[392] = -25;

        $r0[393] = 50;

        $r0[394] = 86;

        $r0[395] = -6;

        $r0[396] = 21;

        $r0[397] = 63;

        $r0[398] = 65;

        $r0[399] = -61;

        $r0[400] = 94;

        $r0[401] = -30;

        $r0[402] = 61;

        $r0[403] = 71;

        $r0[404] = -55;

        $r0[405] = 64;

        $r0[406] = -64;

        $r0[407] = 91;

        $r0[408] = -19;

        $r0[409] = 44;

        $r0[410] = 116;

        $r0[411] = -100;

        $r0[412] = -65;

        $r0[413] = -38;

        $r0[414] = 117;

        $r0[415] = -97;

        $r0[416] = -70;

        $r0[417] = -43;

        $r0[418] = 100;

        $r0[419] = -84;

        $r0[420] = -17;

        $r0[421] = 42;

        $r0[422] = 126;

        $r0[423] = -126;

        $r0[424] = -99;

        $r0[425] = -68;

        $r0[426] = -33;

        $r0[427] = 122;

        $r0[428] = -114;

        $r0[429] = -119;

        $r0[430] = -128;

        $r0[431] = -101;

        $r0[432] = -74;

        $r0[433] = -63;

        $r0[434] = 88;

        $r0[435] = -24;

        $r0[436] = 35;

        $r0[437] = 101;

        $r0[438] = -81;

        $r0[439] = -22;

        $r0[440] = 37;

        $r0[441] = 111;

        $r0[442] = -79;

        $r0[443] = -56;

        $r0[444] = 67;

        $r0[445] = -59;

        $r0[446] = 84;

        $r0[447] = -4;

        $r0[448] = 31;

        $r0[449] = 33;

        $r0[450] = 99;

        $r0[451] = -91;

        $r0[452] = -12;

        $r0[453] = 7;

        $r0[454] = 9;

        $r0[455] = 27;

        $r0[456] = 45;

        $r0[457] = 119;

        $r0[458] = -103;

        $r0[459] = -80;

        $r0[460] = -53;

        $r0[461] = 70;

        $r0[462] = -54;

        $r0[463] = 69;

        $r0[464] = -49;

        $r0[465] = 74;

        $r0[466] = -34;

        $r0[467] = 121;

        $r0[468] = -117;

        $r0[469] = -122;

        $r0[470] = -111;

        $r0[471] = -88;

        $r0[472] = -29;

        $r0[473] = 62;

        $r0[474] = 66;

        $r0[475] = -58;

        $r0[476] = 81;

        $r0[477] = -13;

        $r0[478] = 14;

        $r0[479] = 18;

        $r0[480] = 54;

        $r0[481] = 90;

        $r0[482] = -18;

        $r0[483] = 41;

        $r0[484] = 123;

        $r0[485] = -115;

        $r0[486] = -116;

        $r0[487] = -113;

        $r0[488] = -118;

        $r0[489] = -123;

        $r0[490] = -108;

        $r0[491] = -89;

        $r0[492] = -14;

        $r0[493] = 13;

        $r0[494] = 23;

        $r0[495] = 57;

        $r0[496] = 75;

        $r0[497] = -35;

        $r0[498] = 124;

        $r0[499] = -124;

        $r0[500] = -105;

        $r0[501] = -94;

        $r0[502] = -3;

        $r0[503] = 28;

        $r0[504] = 36;

        $r0[505] = 108;

        $r0[506] = -76;

        $r0[507] = -57;

        $r0[508] = 82;

        $r0[509] = -10;

        $r0[510] = 1;

        <org.spongycastle.crypto.engines.RijndaelEngine: byte[] aLogtable> = $r0;

        $r0 = newarray (byte)[256];

        $r0[0] = 99;

        $r0[1] = 124;

        $r0[2] = 119;

        $r0[3] = 123;

        $r0[4] = -14;

        $r0[5] = 107;

        $r0[6] = 111;

        $r0[7] = -59;

        $r0[8] = 48;

        $r0[9] = 1;

        $r0[10] = 103;

        $r0[11] = 43;

        $r0[12] = -2;

        $r0[13] = -41;

        $r0[14] = -85;

        $r0[15] = 118;

        $r0[16] = -54;

        $r0[17] = -126;

        $r0[18] = -55;

        $r0[19] = 125;

        $r0[20] = -6;

        $r0[21] = 89;

        $r0[22] = 71;

        $r0[23] = -16;

        $r0[24] = -83;

        $r0[25] = -44;

        $r0[26] = -94;

        $r0[27] = -81;

        $r0[28] = -100;

        $r0[29] = -92;

        $r0[30] = 114;

        $r0[31] = -64;

        $r0[32] = -73;

        $r0[33] = -3;

        $r0[34] = -109;

        $r0[35] = 38;

        $r0[36] = 54;

        $r0[37] = 63;

        $r0[38] = -9;

        $r0[39] = -52;

        $r0[40] = 52;

        $r0[41] = -91;

        $r0[42] = -27;

        $r0[43] = -15;

        $r0[44] = 113;

        $r0[45] = -40;

        $r0[46] = 49;

        $r0[47] = 21;

        $r0[48] = 4;

        $r0[49] = -57;

        $r0[50] = 35;

        $r0[51] = -61;

        $r0[52] = 24;

        $r0[53] = -106;

        $r0[54] = 5;

        $r0[55] = -102;

        $r0[56] = 7;

        $r0[57] = 18;

        $r0[58] = -128;

        $r0[59] = -30;

        $r0[60] = -21;

        $r0[61] = 39;

        $r0[62] = -78;

        $r0[63] = 117;

        $r0[64] = 9;

        $r0[65] = -125;

        $r0[66] = 44;

        $r0[67] = 26;

        $r0[68] = 27;

        $r0[69] = 110;

        $r0[70] = 90;

        $r0[71] = -96;

        $r0[72] = 82;

        $r0[73] = 59;

        $r0[74] = -42;

        $r0[75] = -77;

        $r0[76] = 41;

        $r0[77] = -29;

        $r0[78] = 47;

        $r0[79] = -124;

        $r0[80] = 83;

        $r0[81] = -47;

        $r0[82] = 0;

        $r0[83] = -19;

        $r0[84] = 32;

        $r0[85] = -4;

        $r0[86] = -79;

        $r0[87] = 91;

        $r0[88] = 106;

        $r0[89] = -53;

        $r0[90] = -66;

        $r0[91] = 57;

        $r0[92] = 74;

        $r0[93] = 76;

        $r0[94] = 88;

        $r0[95] = -49;

        $r0[96] = -48;

        $r0[97] = -17;

        $r0[98] = -86;

        $r0[99] = -5;

        $r0[100] = 67;

        $r0[101] = 77;

        $r0[102] = 51;

        $r0[103] = -123;

        $r0[104] = 69;

        $r0[105] = -7;

        $r0[106] = 2;

        $r0[107] = 127;

        $r0[108] = 80;

        $r0[109] = 60;

        $r0[110] = -97;

        $r0[111] = -88;

        $r0[112] = 81;

        $r0[113] = -93;

        $r0[114] = 64;

        $r0[115] = -113;

        $r0[116] = -110;

        $r0[117] = -99;

        $r0[118] = 56;

        $r0[119] = -11;

        $r0[120] = -68;

        $r0[121] = -74;

        $r0[122] = -38;

        $r0[123] = 33;

        $r0[124] = 16;

        $r0[125] = -1;

        $r0[126] = -13;

        $r0[127] = -46;

        $r0[128] = -51;

        $r0[129] = 12;

        $r0[130] = 19;

        $r0[131] = -20;

        $r0[132] = 95;

        $r0[133] = -105;

        $r0[134] = 68;

        $r0[135] = 23;

        $r0[136] = -60;

        $r0[137] = -89;

        $r0[138] = 126;

        $r0[139] = 61;

        $r0[140] = 100;

        $r0[141] = 93;

        $r0[142] = 25;

        $r0[143] = 115;

        $r0[144] = 96;

        $r0[145] = -127;

        $r0[146] = 79;

        $r0[147] = -36;

        $r0[148] = 34;

        $r0[149] = 42;

        $r0[150] = -112;

        $r0[151] = -120;

        $r0[152] = 70;

        $r0[153] = -18;

        $r0[154] = -72;

        $r0[155] = 20;

        $r0[156] = -34;

        $r0[157] = 94;

        $r0[158] = 11;

        $r0[159] = -37;

        $r0[160] = -32;

        $r0[161] = 50;

        $r0[162] = 58;

        $r0[163] = 10;

        $r0[164] = 73;

        $r0[165] = 6;

        $r0[166] = 36;

        $r0[167] = 92;

        $r0[168] = -62;

        $r0[169] = -45;

        $r0[170] = -84;

        $r0[171] = 98;

        $r0[172] = -111;

        $r0[173] = -107;

        $r0[174] = -28;

        $r0[175] = 121;

        $r0[176] = -25;

        $r0[177] = -56;

        $r0[178] = 55;

        $r0[179] = 109;

        $r0[180] = -115;

        $r0[181] = -43;

        $r0[182] = 78;

        $r0[183] = -87;

        $r0[184] = 108;

        $r0[185] = 86;

        $r0[186] = -12;

        $r0[187] = -22;

        $r0[188] = 101;

        $r0[189] = 122;

        $r0[190] = -82;

        $r0[191] = 8;

        $r0[192] = -70;

        $r0[193] = 120;

        $r0[194] = 37;

        $r0[195] = 46;

        $r0[196] = 28;

        $r0[197] = -90;

        $r0[198] = -76;

        $r0[199] = -58;

        $r0[200] = -24;

        $r0[201] = -35;

        $r0[202] = 116;

        $r0[203] = 31;

        $r0[204] = 75;

        $r0[205] = -67;

        $r0[206] = -117;

        $r0[207] = -118;

        $r0[208] = 112;

        $r0[209] = 62;

        $r0[210] = -75;

        $r0[211] = 102;

        $r0[212] = 72;

        $r0[213] = 3;

        $r0[214] = -10;

        $r0[215] = 14;

        $r0[216] = 97;

        $r0[217] = 53;

        $r0[218] = 87;

        $r0[219] = -71;

        $r0[220] = -122;

        $r0[221] = -63;

        $r0[222] = 29;

        $r0[223] = -98;

        $r0[224] = -31;

        $r0[225] = -8;

        $r0[226] = -104;

        $r0[227] = 17;

        $r0[228] = 105;

        $r0[229] = -39;

        $r0[230] = -114;

        $r0[231] = -108;

        $r0[232] = -101;

        $r0[233] = 30;

        $r0[234] = -121;

        $r0[235] = -23;

        $r0[236] = -50;

        $r0[237] = 85;

        $r0[238] = 40;

        $r0[239] = -33;

        $r0[240] = -116;

        $r0[241] = -95;

        $r0[242] = -119;

        $r0[243] = 13;

        $r0[244] = -65;

        $r0[245] = -26;

        $r0[246] = 66;

        $r0[247] = 104;

        $r0[248] = 65;

        $r0[249] = -103;

        $r0[250] = 45;

        $r0[251] = 15;

        $r0[252] = -80;

        $r0[253] = 84;

        $r0[254] = -69;

        $r0[255] = 22;

        <org.spongycastle.crypto.engines.RijndaelEngine: byte[] S> = $r0;

        $r0 = newarray (byte)[256];

        $r0[0] = 82;

        $r0[1] = 9;

        $r0[2] = 106;

        $r0[3] = -43;

        $r0[4] = 48;

        $r0[5] = 54;

        $r0[6] = -91;

        $r0[7] = 56;

        $r0[8] = -65;

        $r0[9] = 64;

        $r0[10] = -93;

        $r0[11] = -98;

        $r0[12] = -127;

        $r0[13] = -13;

        $r0[14] = -41;

        $r0[15] = -5;

        $r0[16] = 124;

        $r0[17] = -29;

        $r0[18] = 57;

        $r0[19] = -126;

        $r0[20] = -101;

        $r0[21] = 47;

        $r0[22] = -1;

        $r0[23] = -121;

        $r0[24] = 52;

        $r0[25] = -114;

        $r0[26] = 67;

        $r0[27] = 68;

        $r0[28] = -60;

        $r0[29] = -34;

        $r0[30] = -23;

        $r0[31] = -53;

        $r0[32] = 84;

        $r0[33] = 123;

        $r0[34] = -108;

        $r0[35] = 50;

        $r0[36] = -90;

        $r0[37] = -62;

        $r0[38] = 35;

        $r0[39] = 61;

        $r0[40] = -18;

        $r0[41] = 76;

        $r0[42] = -107;

        $r0[43] = 11;

        $r0[44] = 66;

        $r0[45] = -6;

        $r0[46] = -61;

        $r0[47] = 78;

        $r0[48] = 8;

        $r0[49] = 46;

        $r0[50] = -95;

        $r0[51] = 102;

        $r0[52] = 40;

        $r0[53] = -39;

        $r0[54] = 36;

        $r0[55] = -78;

        $r0[56] = 118;

        $r0[57] = 91;

        $r0[58] = -94;

        $r0[59] = 73;

        $r0[60] = 109;

        $r0[61] = -117;

        $r0[62] = -47;

        $r0[63] = 37;

        $r0[64] = 114;

        $r0[65] = -8;

        $r0[66] = -10;

        $r0[67] = 100;

        $r0[68] = -122;

        $r0[69] = 104;

        $r0[70] = -104;

        $r0[71] = 22;

        $r0[72] = -44;

        $r0[73] = -92;

        $r0[74] = 92;

        $r0[75] = -52;

        $r0[76] = 93;

        $r0[77] = 101;

        $r0[78] = -74;

        $r0[79] = -110;

        $r0[80] = 108;

        $r0[81] = 112;

        $r0[82] = 72;

        $r0[83] = 80;

        $r0[84] = -3;

        $r0[85] = -19;

        $r0[86] = -71;

        $r0[87] = -38;

        $r0[88] = 94;

        $r0[89] = 21;

        $r0[90] = 70;

        $r0[91] = 87;

        $r0[92] = -89;

        $r0[93] = -115;

        $r0[94] = -99;

        $r0[95] = -124;

        $r0[96] = -112;

        $r0[97] = -40;

        $r0[98] = -85;

        $r0[99] = 0;

        $r0[100] = -116;

        $r0[101] = -68;

        $r0[102] = -45;

        $r0[103] = 10;

        $r0[104] = -9;

        $r0[105] = -28;

        $r0[106] = 88;

        $r0[107] = 5;

        $r0[108] = -72;

        $r0[109] = -77;

        $r0[110] = 69;

        $r0[111] = 6;

        $r0[112] = -48;

        $r0[113] = 44;

        $r0[114] = 30;

        $r0[115] = -113;

        $r0[116] = -54;

        $r0[117] = 63;

        $r0[118] = 15;

        $r0[119] = 2;

        $r0[120] = -63;

        $r0[121] = -81;

        $r0[122] = -67;

        $r0[123] = 3;

        $r0[124] = 1;

        $r0[125] = 19;

        $r0[126] = -118;

        $r0[127] = 107;

        $r0[128] = 58;

        $r0[129] = -111;

        $r0[130] = 17;

        $r0[131] = 65;

        $r0[132] = 79;

        $r0[133] = 103;

        $r0[134] = -36;

        $r0[135] = -22;

        $r0[136] = -105;

        $r0[137] = -14;

        $r0[138] = -49;

        $r0[139] = -50;

        $r0[140] = -16;

        $r0[141] = -76;

        $r0[142] = -26;

        $r0[143] = 115;

        $r0[144] = -106;

        $r0[145] = -84;

        $r0[146] = 116;

        $r0[147] = 34;

        $r0[148] = -25;

        $r0[149] = -83;

        $r0[150] = 53;

        $r0[151] = -123;

        $r0[152] = -30;

        $r0[153] = -7;

        $r0[154] = 55;

        $r0[155] = -24;

        $r0[156] = 28;

        $r0[157] = 117;

        $r0[158] = -33;

        $r0[159] = 110;

        $r0[160] = 71;

        $r0[161] = -15;

        $r0[162] = 26;

        $r0[163] = 113;

        $r0[164] = 29;

        $r0[165] = 41;

        $r0[166] = -59;

        $r0[167] = -119;

        $r0[168] = 111;

        $r0[169] = -73;

        $r0[170] = 98;

        $r0[171] = 14;

        $r0[172] = -86;

        $r0[173] = 24;

        $r0[174] = -66;

        $r0[175] = 27;

        $r0[176] = -4;

        $r0[177] = 86;

        $r0[178] = 62;

        $r0[179] = 75;

        $r0[180] = -58;

        $r0[181] = -46;

        $r0[182] = 121;

        $r0[183] = 32;

        $r0[184] = -102;

        $r0[185] = -37;

        $r0[186] = -64;

        $r0[187] = -2;

        $r0[188] = 120;

        $r0[189] = -51;

        $r0[190] = 90;

        $r0[191] = -12;

        $r0[192] = 31;

        $r0[193] = -35;

        $r0[194] = -88;

        $r0[195] = 51;

        $r0[196] = -120;

        $r0[197] = 7;

        $r0[198] = -57;

        $r0[199] = 49;

        $r0[200] = -79;

        $r0[201] = 18;

        $r0[202] = 16;

        $r0[203] = 89;

        $r0[204] = 39;

        $r0[205] = -128;

        $r0[206] = -20;

        $r0[207] = 95;

        $r0[208] = 96;

        $r0[209] = 81;

        $r0[210] = 127;

        $r0[211] = -87;

        $r0[212] = 25;

        $r0[213] = -75;

        $r0[214] = 74;

        $r0[215] = 13;

        $r0[216] = 45;

        $r0[217] = -27;

        $r0[218] = 122;

        $r0[219] = -97;

        $r0[220] = -109;

        $r0[221] = -55;

        $r0[222] = -100;

        $r0[223] = -17;

        $r0[224] = -96;

        $r0[225] = -32;

        $r0[226] = 59;

        $r0[227] = 77;

        $r0[228] = -82;

        $r0[229] = 42;

        $r0[230] = -11;

        $r0[231] = -80;

        $r0[232] = -56;

        $r0[233] = -21;

        $r0[234] = -69;

        $r0[235] = 60;

        $r0[236] = -125;

        $r0[237] = 83;

        $r0[238] = -103;

        $r0[239] = 97;

        $r0[240] = 23;

        $r0[241] = 43;

        $r0[242] = 4;

        $r0[243] = 126;

        $r0[244] = -70;

        $r0[245] = 119;

        $r0[246] = -42;

        $r0[247] = 38;

        $r0[248] = -31;

        $r0[249] = 105;

        $r0[250] = 20;

        $r0[251] = 99;

        $r0[252] = 85;

        $r0[253] = 33;

        $r0[254] = 12;

        $r0[255] = 125;

        <org.spongycastle.crypto.engines.RijndaelEngine: byte[] Si> = $r0;

        $r1 = newarray (int)[30];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 4;

        $r1[3] = 8;

        $r1[4] = 16;

        $r1[5] = 32;

        $r1[6] = 64;

        $r1[7] = 128;

        $r1[8] = 27;

        $r1[9] = 54;

        $r1[10] = 108;

        $r1[11] = 216;

        $r1[12] = 171;

        $r1[13] = 77;

        $r1[14] = 154;

        $r1[15] = 47;

        $r1[16] = 94;

        $r1[17] = 188;

        $r1[18] = 99;

        $r1[19] = 198;

        $r1[20] = 151;

        $r1[21] = 53;

        $r1[22] = 106;

        $r1[23] = 212;

        $r1[24] = 179;

        $r1[25] = 125;

        $r1[26] = 250;

        $r1[27] = 239;

        $r1[28] = 197;

        $r1[29] = 145;

        <org.spongycastle.crypto.engines.RijndaelEngine: int[] rcon> = $r1;

        $r2 = newarray (byte[])[5];

        $r0 = newarray (byte)[4];

        $r0[0] = 0;

        $r0[1] = 8;

        $r0[2] = 16;

        $r0[3] = 24;

        $r2[0] = $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = 0;

        $r0[1] = 8;

        $r0[2] = 16;

        $r0[3] = 24;

        $r2[1] = $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = 0;

        $r0[1] = 8;

        $r0[2] = 16;

        $r0[3] = 24;

        $r2[2] = $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = 0;

        $r0[1] = 8;

        $r0[2] = 16;

        $r0[3] = 32;

        $r2[3] = $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = 0;

        $r0[1] = 8;

        $r0[2] = 24;

        $r0[3] = 32;

        $r2[4] = $r0;

        <org.spongycastle.crypto.engines.RijndaelEngine: byte[][] shifts0> = $r2;

        $r2 = newarray (byte[])[5];

        $r0 = newarray (byte)[4];

        $r0[0] = 0;

        $r0[1] = 24;

        $r0[2] = 16;

        $r0[3] = 8;

        $r2[0] = $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = 0;

        $r0[1] = 32;

        $r0[2] = 24;

        $r0[3] = 16;

        $r2[1] = $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = 0;

        $r0[1] = 40;

        $r0[2] = 32;

        $r0[3] = 24;

        $r2[2] = $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = 0;

        $r0[1] = 48;

        $r0[2] = 40;

        $r0[3] = 24;

        $r2[3] = $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = 0;

        $r0[1] = 56;

        $r0[2] = 40;

        $r0[3] = 32;

        $r2[4] = $r0;

        <org.spongycastle.crypto.engines.RijndaelEngine: byte[][] shifts1> = $r2;

        return;
    }
    public void <init>()
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void <init>(int)>(128);

        return;
    }
    public void <init>(int)
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        byte[][] $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        lookupswitch($i0)
        {
            case 128: goto label2;
            case 160: goto label4;
            case 192: goto label5;
            case 224: goto label6;
            case 256: goto label7;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown blocksize to Rijndael");

        throw $r1;

     label2:
        r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC> = 32;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long BC_MASK> = 4294967295L;

        $r2 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[][] shifts0>;

        $r3 = $r2[0];

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC> = $r3;

        $r2 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[][] shifts1>;

        $r3 = $r2[0];

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC> = $r3;

     label3:
        r0.<org.spongycastle.crypto.engines.RijndaelEngine: int blockBits> = $i0;

        return;

     label4:
        r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC> = 40;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long BC_MASK> = 1099511627775L;

        $r2 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[][] shifts0>;

        $r3 = $r2[1];

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC> = $r3;

        $r2 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[][] shifts1>;

        $r3 = $r2[1];

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC> = $r3;

        goto label3;

     label5:
        r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC> = 48;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long BC_MASK> = 281474976710655L;

        $r2 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[][] shifts0>;

        $r3 = $r2[2];

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC> = $r3;

        $r2 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[][] shifts1>;

        $r3 = $r2[2];

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC> = $r3;

        goto label3;

     label6:
        r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC> = 56;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long BC_MASK> = 72057594037927935L;

        $r2 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[][] shifts0>;

        $r3 = $r2[3];

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC> = $r3;

        $r2 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[][] shifts1>;

        $r3 = $r2[3];

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC> = $r3;

        goto label3;

     label7:
        r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC> = 64;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long BC_MASK> = -1L;

        $r2 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[][] shifts0>;

        $r3 = $r2[4];

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC> = $r3;

        $r2 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[][] shifts1>;

        $r3 = $r2[4];

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC> = $r3;

        goto label3;
    }
    private void InvMixColumn()
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        long l0, l1, l2, l3, $l6;
        int i4, $i5, i7, i8, i9, $i12;
        byte[] $r1;
        byte $b10, $b11;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        l0 = 0L;

        l1 = 0L;

        l2 = 0L;

        l3 = 0L;

        i4 = 0;

     label01:
        $i5 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        if i4 >= $i5 goto label10;

        $l6 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A0>;

        $l6 = $l6 >> i4;

        $l6 = $l6 & 255L;

        $i5 = (int) $l6;

        $l6 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1>;

        $l6 = $l6 >> i4;

        $l6 = $l6 & 255L;

        i7 = (int) $l6;

        $l6 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2>;

        $l6 = $l6 >> i4;

        $l6 = $l6 & 255L;

        i8 = (int) $l6;

        $l6 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3>;

        $l6 = $l6 >> i4;

        $l6 = $l6 & 255L;

        i9 = (int) $l6;

        if $i5 == 0 goto label06;

        $r1 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] logtable>;

        $i5 = $i5 & 255;

        $b10 = $r1[$i5];

        $i5 = $b10 & 255;

     label02:
        if i7 == 0 goto label07;

        $r1 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] logtable>;

        i7 = i7 & 255;

        $b10 = $r1[i7];

        i7 = $b10 & 255;

     label03:
        if i8 == 0 goto label08;

        $r1 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] logtable>;

        i8 = i8 & 255;

        $b10 = $r1[i8];

        i8 = $b10 & 255;

     label04:
        if i9 == 0 goto label09;

        $r1 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] logtable>;

        i9 = i9 & 255;

        $b10 = $r1[i9];

        i9 = $b10 & 255;

     label05:
        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0xe(int)>($i5);

        $b11 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0xb(int)>(i7);

        $i12 = $b10 ^ $b11;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0xd(int)>(i8);

        $i12 = $i12 ^ $b10;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0x9(int)>(i9);

        $i12 = $i12 ^ $b10;

        $i12 = $i12 & 255;

        $l6 = (long) $i12;

        $l6 = $l6 << i4;

        l3 = l3 | $l6;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0xe(int)>(i7);

        $b11 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0xb(int)>(i8);

        $i12 = $b10 ^ $b11;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0xd(int)>(i9);

        $i12 = $i12 ^ $b10;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0x9(int)>($i5);

        $i12 = $i12 ^ $b10;

        $i12 = $i12 & 255;

        $l6 = (long) $i12;

        $l6 = $l6 << i4;

        l2 = l2 | $l6;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0xe(int)>(i8);

        $b11 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0xb(int)>(i9);

        $i12 = $b10 ^ $b11;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0xd(int)>($i5);

        $i12 = $i12 ^ $b10;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0x9(int)>(i7);

        $i12 = $i12 ^ $b10;

        $i12 = $i12 & 255;

        $l6 = (long) $i12;

        $l6 = $l6 << i4;

        l1 = l1 | $l6;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0xe(int)>(i9);

        $b11 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0xb(int)>($i5);

        $i5 = $b10 ^ $b11;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0xd(int)>(i7);

        $i5 = $i5 ^ $b10;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0x9(int)>(i8);

        $i5 = $i5 ^ $b10;

        $i5 = $i5 & 255;

        $l6 = (long) $i5;

        $l6 = $l6 << i4;

        l0 = l0 | $l6;

        i4 = i4 + 8;

        goto label01;

     label06:
        $i5 = -1;

        goto label02;

     label07:
        i7 = -1;

        goto label03;

     label08:
        i8 = -1;

        goto label04;

     label09:
        i9 = -1;

        goto label05;

     label10:
        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A0> = l3;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1> = l2;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2> = l1;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3> = l0;

        return;
    }
    private void KeyAddition(long[])
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        long[] $r1;
        long $l0, $l1;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $r1 := @parameter0: long[];

        $l0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A0>;

        $l1 = $r1[0];

        $l0 = $l0 ^ $l1;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A0> = $l0;

        $l0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1>;

        $l1 = $r1[1];

        $l0 = $l0 ^ $l1;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1> = $l0;

        $l0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2>;

        $l1 = $r1[2];

        $l0 = $l0 ^ $l1;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2> = $l0;

        $l0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3>;

        $l1 = $r1[3];

        $l0 = $l0 ^ $l1;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3> = $l0;

        return;
    }
    private void MixColumn()
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        int i0, i1, i2, i3, i8, $i12;
        long l4, l5, l6, l7, $l9;
        byte $b10, $b11;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        l4 = 0L;

        l5 = 0L;

        l6 = 0L;

        l7 = 0L;

        i8 = 0;

     label1:
        i2 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        if i8 >= i2 goto label2;

        $l9 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A0>;

        $l9 = $l9 >> i8;

        $l9 = $l9 & 255L;

        i0 = (int) $l9;

        $l9 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1>;

        $l9 = $l9 >> i8;

        $l9 = $l9 & 255L;

        i1 = (int) $l9;

        $l9 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2>;

        $l9 = $l9 >> i8;

        $l9 = $l9 & 255L;

        i2 = (int) $l9;

        $l9 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3>;

        $l9 = $l9 >> i8;

        $l9 = $l9 & 255L;

        i3 = (int) $l9;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0x2(int)>(i0);

        $b11 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0x3(int)>(i1);

        $i12 = $b10 ^ $b11;

        $i12 = $i12 ^ i2;

        $i12 = $i12 ^ i3;

        $i12 = $i12 & 255;

        $l9 = (long) $i12;

        $l9 = $l9 << i8;

        l7 = l7 | $l9;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0x2(int)>(i1);

        $b11 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0x3(int)>(i2);

        $i12 = $b10 ^ $b11;

        $i12 = $i12 ^ i3;

        $i12 = $i12 ^ i0;

        $i12 = $i12 & 255;

        $l9 = (long) $i12;

        $l9 = $l9 << i8;

        l6 = l6 | $l9;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0x2(int)>(i2);

        $b11 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0x3(int)>(i3);

        $i12 = $b10 ^ $b11;

        $i12 = $i12 ^ i0;

        $i12 = $i12 ^ i1;

        $i12 = $i12 & 255;

        $l9 = (long) $i12;

        $l9 = $l9 << i8;

        l5 = l5 | $l9;

        $b10 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0x2(int)>(i3);

        $b11 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte mul0x3(int)>(i0);

        i0 = $b10 ^ $b11;

        i1 = i0 ^ i1;

        i2 = i1 ^ i2;

        i2 = i2 & 255;

        $l9 = (long) i2;

        $l9 = $l9 << i8;

        l4 = l4 | $l9;

        i8 = i8 + 8;

        goto label1;

     label2:
        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A0> = l7;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1> = l6;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2> = l5;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3> = l4;

        return;
    }
    private void ShiftRow(byte[])
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        byte[] $r1;
        long $l0;
        byte $b1;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $r1 := @parameter0: byte[];

        $l0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1>;

        $b1 = $r1[1];

        $l0 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: long shift(long,int)>($l0, $b1);

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1> = $l0;

        $l0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2>;

        $b1 = $r1[2];

        $l0 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: long shift(long,int)>($l0, $b1);

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2> = $l0;

        $l0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3>;

        $b1 = $r1[3];

        $l0 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: long shift(long,int)>($l0, $b1);

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3> = $l0;

        return;
    }
    private void Substitution(byte[])
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        byte[] $r1;
        long $l0;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $r1 := @parameter0: byte[];

        $l0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A0>;

        $l0 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: long applyS(long,byte[])>($l0, $r1);

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A0> = $l0;

        $l0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1>;

        $l0 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: long applyS(long,byte[])>($l0, $r1);

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1> = $l0;

        $l0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2>;

        $l0 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: long applyS(long,byte[])>($l0, $r1);

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2> = $l0;

        $l0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3>;

        $l0 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: long applyS(long,byte[])>($l0, $r1);

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3> = $l0;

        return;
    }
    private long applyS(long, byte[])
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        long $l0, l1, $l4;
        byte[] $r1;
        int i2, $i3;
        byte $b5;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $l0 := @parameter0: long;

        $r1 := @parameter1: byte[];

        l1 = 0L;

        i2 = 0;

     label1:
        $i3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        if i2 >= $i3 goto label2;

        $l4 = $l0 >> i2;

        $l4 = $l4 & 255L;

        $i3 = (int) $l4;

        $b5 = $r1[$i3];

        $i3 = $b5 & 255;

        $l4 = (long) $i3;

        $l4 = $l4 << i2;

        l1 = l1 | $l4;

        i2 = i2 + 8;

        goto label1;

     label2:
        return l1;
    }
    private void decryptBlock(long[][])
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        long[][] $r1;
        int $i0;
        long[] $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $r1 := @parameter0: long[][];

        $i0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        $r2 = $r1[$i0];

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void KeyAddition(long[])>($r2);

        $r3 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] Si>;

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void Substitution(byte[])>($r3);

        $r3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC>;

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void ShiftRow(byte[])>($r3);

        $i0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        $i0 = $i0 + -1;

     label1:
        if $i0 <= 0 goto label2;

        $r2 = $r1[$i0];

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void KeyAddition(long[])>($r2);

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void InvMixColumn()>();

        $r3 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] Si>;

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void Substitution(byte[])>($r3);

        $r3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts1SC>;

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void ShiftRow(byte[])>($r3);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        $r2 = $r1[0];

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void KeyAddition(long[])>($r2);

        return;
    }
    private void encryptBlock(long[][])
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        long[][] $r1;
        long[] $r2;
        int i0, $i1;
        byte[] $r3;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $r1 := @parameter0: long[][];

        $r2 = $r1[0];

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void KeyAddition(long[])>($r2);

        i0 = 1;

     label1:
        $i1 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        if i0 >= $i1 goto label2;

        $r3 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] S>;

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void Substitution(byte[])>($r3);

        $r3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC>;

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void ShiftRow(byte[])>($r3);

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void MixColumn()>();

        $r2 = $r1[i0];

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void KeyAddition(long[])>($r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] S>;

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void Substitution(byte[])>($r3);

        $r3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: byte[] shifts0SC>;

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void ShiftRow(byte[])>($r3);

        i0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        $r2 = $r1[i0];

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void KeyAddition(long[])>($r2);

        return;
    }
    private long[][] generateWorkingKey(byte[])
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        byte[] $r1, $r8, $r10;
        int i0, i1, i2, i3, $i5, $i9;
        int[] $r2;
        java.lang.Class $r3;
        java.lang.Object $r4;
        byte[][] r5;
        long[][] r6;
        java.lang.IllegalArgumentException $r7;
        byte b4, $b6, $b10;
        long[] $r9;
        long $l7, $l8;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $r1 := @parameter0: byte[];

        i3 = 0;

        i1 = lengthof $r1;

        i1 = i1 * 8;

        $r2 = newarray (int)[2];

        $r2[0] = 4;

        $r2[1] = 64;

        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        r5 = (byte[][]) $r4;

        $r2 = newarray (int)[2];

        $r2[0] = 15;

        $r2[1] = 4;

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r3, $r2);

        r6 = (long[][]) $r4;

        lookupswitch(i1)
        {
            case 128: goto label02;
            case 160: goto label06;
            case 192: goto label07;
            case 224: goto label08;
            case 256: goto label09;
            default: goto label01;
        };

     label01:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key length not 128/160/192/224/256 bits.");

        throw $r7;

     label02:
        b4 = 4;

     label03:
        i2 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int blockBits>;

        if i1 < i2 goto label10;

        i1 = b4 + 6;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: int ROUNDS> = i1;

     label04:
        i1 = 0;

        i2 = 0;

     label05:
        i0 = lengthof $r1;

        if i2 >= i0 goto label11;

        i0 = i2 % 4;

        $r8 = r5[i0];

        $i5 = i2 / 4;

        $b6 = $r1[i1];

        $r8[$i5] = $b6;

        i2 = i2 + 1;

        i1 = i1 + 1;

        goto label05;

     label06:
        b4 = 5;

        goto label03;

     label07:
        b4 = 6;

        goto label03;

     label08:
        b4 = 7;

        goto label03;

     label09:
        b4 = 8;

        goto label03;

     label10:
        i1 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        i1 = i1 / 8;

        i1 = i1 + 6;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: int ROUNDS> = i1;

        goto label04;

     label11:
        i1 = 0;

        i2 = 0;

     label12:
        if i2 >= b4 goto label16;

        i0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        i0 = i0 + 1;

        $i5 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        $i5 = $i5 / 8;

        i0 = i0 * $i5;

        if i1 >= i0 goto label16;

        i0 = 0;

     label13:
        if i0 >= 4 goto label14;

        $i5 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        $i5 = $i5 / 8;

        $i5 = i1 / $i5;

        $r9 = r6[$i5];

        $l7 = $r9[i0];

        $r1 = r5[i0];

        $b6 = $r1[i2];

        $i5 = $b6 & 255;

        $l8 = (long) $i5;

        $i5 = i1 * 8;

        $i9 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        $i5 = $i5 % $i9;

        $l8 = $l8 << $i5;

        $l7 = $l7 | $l8;

        $r9[i0] = $l7;

        i0 = i0 + 1;

        goto label13;

     label14:
        i2 = i2 + 1;

        i1 = i1 + 1;

        goto label12;

     label15:
        i3 = i2;

     label16:
        i2 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        i2 = i2 + 1;

        i0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        i0 = i0 / 8;

        i2 = i2 * i0;

        if i1 >= i2 goto label36;

        i2 = 0;

     label17:
        if i2 >= 4 goto label18;

        $r1 = r5[i2];

        $b6 = $r1[0];

        $r8 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] S>;

        i0 = i2 + 1;

        i0 = i0 % 4;

        $r10 = r5[i0];

        i0 = b4 + -1;

        $b10 = $r10[i0];

        i0 = $b10 & 255;

        $b10 = $r8[i0];

        i0 = $b6 ^ $b10;

        $b6 = (byte) i0;

        $r1[0] = $b6;

        i2 = i2 + 1;

        goto label17;

     label18:
        $r1 = r5[0];

        $b6 = $r1[0];

        $r2 = <org.spongycastle.crypto.engines.RijndaelEngine: int[] rcon>;

        i2 = i3 + 1;

        i3 = $r2[i3];

        i3 = $b6 ^ i3;

        $b6 = (byte) i3;

        $r1[0] = $b6;

        if b4 > 6 goto label22;

        i3 = 1;

     label19:
        if i3 >= b4 goto label32;

        i0 = 0;

     label20:
        if i0 >= 4 goto label21;

        $r1 = r5[i0];

        $b6 = $r1[i3];

        $r8 = r5[i0];

        $i5 = i3 + -1;

        $b10 = $r8[$i5];

        $i5 = $b6 ^ $b10;

        $b6 = (byte) $i5;

        $r1[i3] = $b6;

        i0 = i0 + 1;

        goto label20;

     label21:
        i3 = i3 + 1;

        goto label19;

     label22:
        i3 = 1;

     label23:
        if i3 >= 4 goto label26;

        i0 = 0;

     label24:
        if i0 >= 4 goto label25;

        $r1 = r5[i0];

        $b6 = $r1[i3];

        $r8 = r5[i0];

        $i5 = i3 + -1;

        $b10 = $r8[$i5];

        $i5 = $b6 ^ $b10;

        $b6 = (byte) $i5;

        $r1[i3] = $b6;

        i0 = i0 + 1;

        goto label24;

     label25:
        i3 = i3 + 1;

        goto label23;

     label26:
        i3 = 0;

     label27:
        if i3 >= 4 goto label28;

        $r1 = r5[i3];

        $b6 = $r1[4];

        $r8 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] S>;

        $r10 = r5[i3];

        $b10 = $r10[3];

        i0 = $b10 & 255;

        $b10 = $r8[i0];

        i0 = $b6 ^ $b10;

        $b6 = (byte) i0;

        $r1[4] = $b6;

        i3 = i3 + 1;

        goto label27;

     label28:
        i3 = 5;

     label29:
        if i3 >= b4 goto label32;

        i0 = 0;

     label30:
        if i0 >= 4 goto label31;

        $r1 = r5[i0];

        $b6 = $r1[i3];

        $r8 = r5[i0];

        $i5 = i3 + -1;

        $b10 = $r8[$i5];

        $i5 = $b6 ^ $b10;

        $b6 = (byte) $i5;

        $r1[i3] = $b6;

        i0 = i0 + 1;

        goto label30;

     label31:
        i3 = i3 + 1;

        goto label29;

     label32:
        i3 = 0;

     label33:
        if i3 >= b4 goto label15;

        i0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int ROUNDS>;

        i0 = i0 + 1;

        $i5 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        $i5 = $i5 / 8;

        i0 = i0 * $i5;

        if i1 >= i0 goto label15;

        i0 = 0;

     label34:
        if i0 >= 4 goto label35;

        $i5 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        $i5 = $i5 / 8;

        $i5 = i1 / $i5;

        $r9 = r6[$i5];

        $l7 = $r9[i0];

        $r1 = r5[i0];

        $b6 = $r1[i3];

        $i5 = $b6 & 255;

        $l8 = (long) $i5;

        $i5 = i1 * 8;

        $i9 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        $i5 = $i5 % $i9;

        $l8 = $l8 << $i5;

        $l7 = $l7 | $l8;

        $r9[i0] = $l7;

        i0 = i0 + 1;

        goto label34;

     label35:
        i3 = i3 + 1;

        i1 = i1 + 1;

        goto label33;

     label36:
        return r6;
    }
    private byte mul0x2(int)
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        int $i0;
        byte[] $r1, $r2;
        byte $b1;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] aLogtable>;

        $r2 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] logtable>;

        $b1 = $r2[$i0];

        $i0 = $b1 & 255;

        $i0 = $i0 + 25;

        $b1 = $r1[$i0];

        return $b1;

     label1:
        return 0;
    }
    private byte mul0x3(int)
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        int $i0;
        byte[] $r1, $r2;
        byte $b1;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] aLogtable>;

        $r2 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] logtable>;

        $b1 = $r2[$i0];

        $i0 = $b1 & 255;

        $i0 = $i0 + 1;

        $b1 = $r1[$i0];

        return $b1;

     label1:
        return 0;
    }
    private byte mul0x9(int)
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        int $i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] aLogtable>;

        $i0 = $i0 + 199;

        $b1 = $r1[$i0];

        return $b1;

     label1:
        return 0;
    }
    private byte mul0xb(int)
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        int $i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] aLogtable>;

        $i0 = $i0 + 104;

        $b1 = $r1[$i0];

        return $b1;

     label1:
        return 0;
    }
    private byte mul0xd(int)
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        int $i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] aLogtable>;

        $i0 = $i0 + 238;

        $b1 = $r1[$i0];

        return $b1;

     label1:
        return 0;
    }
    private byte mul0xe(int)
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        int $i0;
        byte[] $r1;
        byte $b1;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = <org.spongycastle.crypto.engines.RijndaelEngine: byte[] aLogtable>;

        $i0 = $i0 + 223;

        $b1 = $r1[$i0];

        return $b1;

     label1:
        return 0;
    }
    private void packBlock(byte[], int)
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        byte[] $r1;
        int $i0, i1, $i2, $i4;
        long $l3;
        byte $b5;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        i1 = $i0;

        $i0 = 0;

     label1:
        $i2 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        if $i0 == $i2 goto label2;

        $i2 = i1 + 1;

        $l3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A0>;

        $l3 = $l3 >> $i0;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[i1] = $b5;

        i1 = $i2 + 1;

        $l3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1>;

        $l3 = $l3 >> $i0;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[$i2] = $b5;

        $i2 = i1 + 1;

        $l3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2>;

        $l3 = $l3 >> $i0;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[i1] = $b5;

        i1 = $i2 + 1;

        $l3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3>;

        $l3 = $l3 >> $i0;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        $r1[$i2] = $b5;

        $i0 = $i0 + 8;

        goto label1;

     label2:
        return;
    }
    private long shift(long, int)
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        long $l0, $l2;
        int $i1, $i3;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $l2 = $l0 >>> $i1;

        $i3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        $i1 = $i3 - $i1;

        $l0 = $l0 << $i1;

        $l0 = $l2 | $l0;

        $l2 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long BC_MASK>;

        $l0 = $l0 & $l2;

        return $l0;
    }
    private void unpackBlock(byte[], int)
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        byte[] $r1;
        int $i0, i1, i4;
        byte $b2;
        long $l3, $l5;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        i1 = $i0 + 1;

        $b2 = $r1[$i0];

        $i0 = $b2 & 255;

        $l3 = (long) $i0;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A0> = $l3;

        $i0 = i1 + 1;

        $b2 = $r1[i1];

        i1 = $b2 & 255;

        $l3 = (long) i1;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1> = $l3;

        i4 = $i0 + 1;

        $b2 = $r1[$i0];

        $i0 = $b2 & 255;

        $l3 = (long) $i0;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2> = $l3;

        i1 = i4 + 1;

        $b2 = $r1[i4];

        $i0 = $b2 & 255;

        $l3 = (long) $i0;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3> = $l3;

        $i0 = 8;

     label1:
        i4 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        if $i0 == i4 goto label2;

        $l3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A0>;

        i4 = i1 + 1;

        $b2 = $r1[i1];

        i1 = $b2 & 255;

        $l5 = (long) i1;

        $l5 = $l5 << $i0;

        $l3 = $l3 | $l5;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A0> = $l3;

        $l3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1>;

        i1 = i4 + 1;

        $b2 = $r1[i4];

        i4 = $b2 & 255;

        $l5 = (long) i4;

        $l5 = $l5 << $i0;

        $l3 = $l3 | $l5;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A1> = $l3;

        $l3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2>;

        i4 = i1 + 1;

        $b2 = $r1[i1];

        i1 = $b2 & 255;

        $l5 = (long) i1;

        $l5 = $l5 << $i0;

        $l3 = $l3 | $l5;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A2> = $l3;

        $l3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3>;

        i1 = i4 + 1;

        $b2 = $r1[i4];

        i4 = $b2 & 255;

        $l5 = (long) i4;

        $l5 = $l5 << $i0;

        $l3 = $l3 | $l5;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long A3> = $l3;

        $i0 = $i0 + 8;

        goto label1;

     label2:
        return;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        return "Rijndael";
    }
    public int getBlockSize()
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        int $i0;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $i0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        $i0 = $i0 / 2;

        return $i0;
    }
    public void init(boolean, org.spongycastle.crypto.CipherParameters)
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        boolean $z0, $z1;
        org.spongycastle.crypto.CipherParameters r1;
        org.spongycastle.crypto.params.KeyParameter r2;
        byte[] $r3;
        long[][] $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.Class $r7;
        java.lang.String $r8;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $z0 := @parameter0: boolean;

        r1 := @parameter1: org.spongycastle.crypto.CipherParameters;

        $z1 = r1 instanceof org.spongycastle.crypto.params.KeyParameter;

        if $z1 == 0 goto label1;

        r2 = (org.spongycastle.crypto.params.KeyParameter) r1;

        $r3 = virtualinvoke r2.<org.spongycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $r4 = specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: long[][] generateWorkingKey(byte[])>($r3);

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: long[][] workingKey> = $r4;

        r0.<org.spongycastle.crypto.engines.RijndaelEngine: boolean forEncryption> = $z0;

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid parameter passed to Rijndael init - ");

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r5;
    }
    public int processBlock(byte[], int, byte[], int)
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3;
        long[][] $r3;
        java.lang.IllegalStateException $r4;
        org.spongycastle.crypto.DataLengthException $r5;
        org.spongycastle.crypto.OutputLengthException $r6;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        $r3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long[][] workingKey>;

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Rijndael engine not initialised");

        throw $r4;

     label1:
        $i2 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        $i2 = $i2 / 2;

        $i2 = $i2 + $i0;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label2;

        $r5 = new org.spongycastle.crypto.DataLengthException;

        specialinvoke $r5.<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r5;

     label2:
        $i2 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        $i2 = $i2 / 2;

        $i2 = $i2 + $i1;

        $i3 = lengthof $r2;

        if $i2 <= $i3 goto label3;

        $r6 = new org.spongycastle.crypto.OutputLengthException;

        specialinvoke $r6.<org.spongycastle.crypto.OutputLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r6;

     label3:
        $z0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: boolean forEncryption>;

        if $z0 == 0 goto label5;

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void unpackBlock(byte[],int)>($r1, $i0);

        $r3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long[][] workingKey>;

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void encryptBlock(long[][])>($r3);

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void packBlock(byte[],int)>($r2, $i1);

     label4:
        $i0 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: int BC>;

        $i0 = $i0 / 2;

        return $i0;

     label5:
        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void unpackBlock(byte[],int)>($r1, $i0);

        $r3 = r0.<org.spongycastle.crypto.engines.RijndaelEngine: long[][] workingKey>;

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void decryptBlock(long[][])>($r3);

        specialinvoke r0.<org.spongycastle.crypto.engines.RijndaelEngine: void packBlock(byte[],int)>($r2, $i1);

        goto label4;
    }
    public void reset()
    {
        org.spongycastle.crypto.engines.RijndaelEngine r0;

        r0 := @this: org.spongycastle.crypto.engines.RijndaelEngine;

        return;
    }
