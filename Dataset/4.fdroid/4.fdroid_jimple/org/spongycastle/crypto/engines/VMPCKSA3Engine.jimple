org.spongycastle.crypto.engines.VMPCKSA3Engine extends org.spongycastle.crypto.engines.VMPCEngine
    public void <init>()
    {
        org.spongycastle.crypto.engines.VMPCKSA3Engine r0;

        r0 := @this: org.spongycastle.crypto.engines.VMPCKSA3Engine;

        specialinvoke r0.<org.spongycastle.crypto.engines.VMPCEngine: void <init>()>();

        return;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.engines.VMPCKSA3Engine r0;

        r0 := @this: org.spongycastle.crypto.engines.VMPCKSA3Engine;

        return "VMPC-KSA3";
    }
    protected void initKey(byte[], byte[])
    {
        org.spongycastle.crypto.engines.VMPCKSA3Engine r0;
        byte[] $r1, $r2, $r3, $r4;
        int i0, $i2, $i4;
        byte $b1, $b3;

        r0 := @this: org.spongycastle.crypto.engines.VMPCKSA3Engine;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte s> = 0;

        $r3 = newarray (byte)[256];

        r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P> = $r3;

        i0 = 0;

     label1:
        if i0 >= 256 goto label2;

        $r3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $b1 = (byte) i0;

        $r3[i0] = $b1;

        i0 = i0 + 1;

        goto label1;

     label2:
        i0 = 0;

     label3:
        if i0 >= 768 goto label4;

        $r3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $b1 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte s>;

        $r4 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $i2 = i0 & 255;

        $b3 = $r4[$i2];

        $i2 = $b1 + $b3;

        $i4 = lengthof $r1;

        $i4 = i0 % $i4;

        $b1 = $r1[$i4];

        $i2 = $i2 + $b1;

        $i2 = $i2 & 255;

        $b1 = $r3[$i2];

        r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte s> = $b1;

        $r3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $i2 = i0 & 255;

        $b1 = $r3[$i2];

        $r3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $i2 = i0 & 255;

        $r4 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $b3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte s>;

        $i4 = $b3 & 255;

        $b3 = $r4[$i4];

        $r3[$i2] = $b3;

        $r3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $b3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte s>;

        $i2 = $b3 & 255;

        $r3[$i2] = $b1;

        i0 = i0 + 1;

        goto label3;

     label4:
        i0 = 0;

     label5:
        if i0 >= 768 goto label6;

        $r3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $b1 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte s>;

        $r4 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $i2 = i0 & 255;

        $b3 = $r4[$i2];

        $i2 = $b1 + $b3;

        $i4 = lengthof $r2;

        $i4 = i0 % $i4;

        $b1 = $r2[$i4];

        $i2 = $i2 + $b1;

        $i2 = $i2 & 255;

        $b1 = $r3[$i2];

        r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte s> = $b1;

        $r3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $i2 = i0 & 255;

        $b1 = $r3[$i2];

        $r3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $i2 = i0 & 255;

        $r4 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $b3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte s>;

        $i4 = $b3 & 255;

        $b3 = $r4[$i4];

        $r3[$i2] = $b3;

        $r3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $b3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte s>;

        $i2 = $b3 & 255;

        $r3[$i2] = $b1;

        i0 = i0 + 1;

        goto label5;

     label6:
        i0 = 0;

     label7:
        if i0 >= 768 goto label8;

        $r2 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $b1 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte s>;

        $r3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $i2 = i0 & 255;

        $b3 = $r3[$i2];

        $i2 = $b1 + $b3;

        $i4 = lengthof $r1;

        $i4 = i0 % $i4;

        $b1 = $r1[$i4];

        $i2 = $i2 + $b1;

        $i2 = $i2 & 255;

        $b1 = $r2[$i2];

        r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte s> = $b1;

        $r2 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $i2 = i0 & 255;

        $b1 = $r2[$i2];

        $r2 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $i2 = i0 & 255;

        $r3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $b3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte s>;

        $i4 = $b3 & 255;

        $b3 = $r3[$i4];

        $r2[$i2] = $b3;

        $r2 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte[] P>;

        $b3 = r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte s>;

        $i2 = $b3 & 255;

        $r2[$i2] = $b1;

        i0 = i0 + 1;

        goto label7;

     label8:
        r0.<org.spongycastle.crypto.engines.VMPCKSA3Engine: byte n> = 0;

        return;
    }
