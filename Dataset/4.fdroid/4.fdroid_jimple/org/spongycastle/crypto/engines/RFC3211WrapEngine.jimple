org.spongycastle.crypto.engines.RFC3211WrapEngine extends java.lang.Object implements org.spongycastle.crypto.Wrapper
private org.spongycastle.crypto.modes.CBCBlockCipher engine
private boolean forWrapping
private org.spongycastle.crypto.params.ParametersWithIV param
private java.security.SecureRandom rand
    public void <init>(org.spongycastle.crypto.BlockCipher)
    {
        org.spongycastle.crypto.engines.RFC3211WrapEngine r0;
        org.spongycastle.crypto.BlockCipher $r1;
        org.spongycastle.crypto.modes.CBCBlockCipher $r2;

        r0 := @this: org.spongycastle.crypto.engines.RFC3211WrapEngine;

        $r1 := @parameter0: org.spongycastle.crypto.BlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.spongycastle.crypto.modes.CBCBlockCipher;

        specialinvoke $r2.<org.spongycastle.crypto.modes.CBCBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>($r1);

        r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine> = $r2;

        return;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.engines.RFC3211WrapEngine r0;
        java.lang.StringBuilder $r1;
        org.spongycastle.crypto.modes.CBCBlockCipher $r2;
        org.spongycastle.crypto.BlockCipher $r3;
        java.lang.String $r4;

        r0 := @this: org.spongycastle.crypto.engines.RFC3211WrapEngine;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $r3 = virtualinvoke $r2.<org.spongycastle.crypto.modes.CBCBlockCipher: org.spongycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r4 = interfaceinvoke $r3.<org.spongycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/RFC3211Wrap");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
    public void init(boolean, org.spongycastle.crypto.CipherParameters)
    {
        org.spongycastle.crypto.engines.RFC3211WrapEngine r0;
        boolean $z0, $z1;
        org.spongycastle.crypto.CipherParameters r1;
        org.spongycastle.crypto.params.ParametersWithRandom r2;
        java.security.SecureRandom $r3;
        org.spongycastle.crypto.params.ParametersWithIV $r4;

        r0 := @this: org.spongycastle.crypto.engines.RFC3211WrapEngine;

        $z0 := @parameter0: boolean;

        r1 := @parameter1: org.spongycastle.crypto.CipherParameters;

        r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: boolean forWrapping> = $z0;

        $z1 = r1 instanceof org.spongycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        r2 = (org.spongycastle.crypto.params.ParametersWithRandom) r1;

        $r3 = virtualinvoke r2.<org.spongycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: java.security.SecureRandom rand> = $r3;

        r1 = virtualinvoke r2.<org.spongycastle.crypto.params.ParametersWithRandom: org.spongycastle.crypto.CipherParameters getParameters()>();

        $r4 = (org.spongycastle.crypto.params.ParametersWithIV) r1;

        r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.params.ParametersWithIV param> = $r4;

        return;

     label1:
        if $z0 == 0 goto label2;

        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: java.security.SecureRandom rand> = $r3;

     label2:
        $r4 = (org.spongycastle.crypto.params.ParametersWithIV) r1;

        r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.params.ParametersWithIV param> = $r4;

        return;
    }
    public byte[] unwrap(byte[], int, int) throws org.spongycastle.crypto.InvalidCipherTextException
    {
        org.spongycastle.crypto.engines.RFC3211WrapEngine r0;
        byte[] $r1, r2, r3;
        int $i0, $i1, $i3, $i4;
        byte b2, $b5;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        org.spongycastle.crypto.modes.CBCBlockCipher $r5;
        org.spongycastle.crypto.InvalidCipherTextException $r6;
        org.spongycastle.crypto.params.ParametersWithIV $r7, $r8;
        org.spongycastle.crypto.CipherParameters $r9;

        r0 := @this: org.spongycastle.crypto.engines.RFC3211WrapEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: boolean forWrapping>;

        if $z0 == 0 goto label01;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not set for unwrapping");

        throw $r4;

     label01:
        $r5 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $i3 = virtualinvoke $r5.<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i4 = $i3 * 2;

        if $i1 >= $i4 goto label02;

        $r6 = new org.spongycastle.crypto.InvalidCipherTextException;

        specialinvoke $r6.<org.spongycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("input too short");

        throw $r6;

     label02:
        r2 = newarray (byte)[$i1];

        r3 = newarray (byte)[$i3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, r2, 0, $i1);

        $i1 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, r3, 0, $i1);

        $r5 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $r7 = new org.spongycastle.crypto.params.ParametersWithIV;

        $r8 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.params.ParametersWithIV param>;

        $r9 = virtualinvoke $r8.<org.spongycastle.crypto.params.ParametersWithIV: org.spongycastle.crypto.CipherParameters getParameters()>();

        specialinvoke $r7.<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[])>($r9, r3);

        virtualinvoke $r5.<org.spongycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(0, $r7);

        $i0 = $i3;

     label03:
        $i1 = lengthof r2;

        if $i0 >= $i1 goto label04;

        $r5 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r5.<org.spongycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r2, $i0, r2, $i0);

        $i0 = $i0 + $i3;

        goto label03;

     label04:
        $i0 = lengthof r2;

        $i1 = lengthof r3;

        $i0 = $i0 - $i1;

        $i1 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i0, r3, 0, $i1);

        $r5 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $r7 = new org.spongycastle.crypto.params.ParametersWithIV;

        $r8 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.params.ParametersWithIV param>;

        $r9 = virtualinvoke $r8.<org.spongycastle.crypto.params.ParametersWithIV: org.spongycastle.crypto.CipherParameters getParameters()>();

        specialinvoke $r7.<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[])>($r9, r3);

        virtualinvoke $r5.<org.spongycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(0, $r7);

        $r5 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r5.<org.spongycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r2, 0, r2, 0);

        $r5 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $r7 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.params.ParametersWithIV param>;

        virtualinvoke $r5.<org.spongycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(0, $r7);

        $i0 = 0;

     label05:
        $i1 = lengthof r2;

        if $i0 >= $i1 goto label06;

        $r5 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r5.<org.spongycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r2, $i0, r2, $i0);

        $i0 = $i0 + $i3;

        goto label05;

     label06:
        b2 = r2[0];

        $i0 = b2 & 255;

        $i1 = lengthof r2;

        $i1 = $i1 + -4;

        if $i0 <= $i1 goto label07;

        $r6 = new org.spongycastle.crypto.InvalidCipherTextException;

        specialinvoke $r6.<org.spongycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("wrapped key corrupted");

        throw $r6;

     label07:
        b2 = r2[0];

        $i0 = b2 & 255;

        $r1 = newarray (byte)[$i0];

        b2 = r2[0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 4, $r1, 0, b2);

        $i0 = 0;

        $i1 = 0;

     label08:
        if $i1 == 3 goto label09;

        $i3 = $i1 + 1;

        b2 = r2[$i3];

        $i3 = b2 ^ -1;

        b2 = (byte) $i3;

        $b5 = $r1[$i1];

        $i3 = $b5 ^ b2;

        $i0 = $i0 | $i3;

        $i1 = $i1 + 1;

        goto label08;

     label09:
        if $i0 == 0 goto label10;

        $r6 = new org.spongycastle.crypto.InvalidCipherTextException;

        specialinvoke $r6.<org.spongycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("wrapped key fails checksum");

        throw $r6;

     label10:
        return $r1;
    }
    public byte[] wrap(byte[], int, int)
    {
        org.spongycastle.crypto.engines.RFC3211WrapEngine r0;
        byte[] $r1, r5;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        org.spongycastle.crypto.modes.CBCBlockCipher $r3;
        org.spongycastle.crypto.params.ParametersWithIV $r4;
        byte $b5;
        java.security.SecureRandom $r6;

        r0 := @this: org.spongycastle.crypto.engines.RFC3211WrapEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: boolean forWrapping>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not set for wrapping");

        throw $r2;

     label1:
        $r3 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $r4 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.params.ParametersWithIV param>;

        virtualinvoke $r3.<org.spongycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, $r4);

        $r3 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $i2 = virtualinvoke $r3.<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i3 = $i1 + 4;

        $i4 = $i2 * 2;

        if $i3 >= $i4 goto label4;

        $i3 = $i2 * 2;

        r5 = newarray (byte)[$i3];

     label2:
        $b5 = (byte) $i1;

        r5[0] = $b5;

        $b5 = $r1[$i0];

        $i3 = $b5 ^ -1;

        $b5 = (byte) $i3;

        r5[1] = $b5;

        $i3 = $i0 + 1;

        $b5 = $r1[$i3];

        $i3 = $b5 ^ -1;

        $b5 = (byte) $i3;

        r5[2] = $b5;

        $i3 = $i0 + 2;

        $b5 = $r1[$i3];

        $i3 = $b5 ^ -1;

        $b5 = (byte) $i3;

        r5[3] = $b5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, r5, 4, $i1);

        $i0 = lengthof r5;

        $i3 = $i1 + 4;

        $i0 = $i0 - $i3;

        $r1 = newarray (byte)[$i0];

        $r6 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: java.security.SecureRandom rand>;

        virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>($r1);

        $i0 = $i1 + 4;

        $i1 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r5, $i0, $i1);

        $i0 = 0;

     label3:
        $i1 = lengthof r5;

        if $i0 >= $i1 goto label7;

        $r3 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r3.<org.spongycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r5, $i0, r5, $i0);

        $i0 = $i0 + $i2;

        goto label3;

     label4:
        $i3 = $i1 + 4;

        $i3 = $i3 % $i2;

        if $i3 != 0 goto label6;

        $i3 = $i1 + 4;

     label5:
        r5 = newarray (byte)[$i3];

        goto label2;

     label6:
        $i3 = $i1 + 4;

        $i3 = $i3 / $i2;

        $i3 = $i3 + 1;

        $i3 = $i3 * $i2;

        goto label5;

     label7:
        $i0 = 0;

     label8:
        $i1 = lengthof r5;

        if $i0 >= $i1 goto label9;

        $r3 = r0.<org.spongycastle.crypto.engines.RFC3211WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r3.<org.spongycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r5, $i0, r5, $i0);

        $i0 = $i0 + $i2;

        goto label8;

     label9:
        return r5;
    }
