org.spongycastle.crypto.engines.AESLightEngine extends java.lang.Object implements org.spongycastle.crypto.BlockCipher
private static final int BLOCK_SIZE
private static final byte[] S
private static final byte[] Si
private static final int m1
private static final int m2
private static final int m3
private static final int m4
private static final int m5
private static final int[] rcon
private int C0
private int C1
private int C2
private int C3
private int ROUNDS
private int[][] WorkingKey
private boolean forEncryption
    static void <clinit>()
    {
        byte[] $r0;
        int[] $r1;

        $r0 = newarray (byte)[256];

        $r0[0] = 99;

        $r0[1] = 124;

        $r0[2] = 119;

        $r0[3] = 123;

        $r0[4] = -14;

        $r0[5] = 107;

        $r0[6] = 111;

        $r0[7] = -59;

        $r0[8] = 48;

        $r0[9] = 1;

        $r0[10] = 103;

        $r0[11] = 43;

        $r0[12] = -2;

        $r0[13] = -41;

        $r0[14] = -85;

        $r0[15] = 118;

        $r0[16] = -54;

        $r0[17] = -126;

        $r0[18] = -55;

        $r0[19] = 125;

        $r0[20] = -6;

        $r0[21] = 89;

        $r0[22] = 71;

        $r0[23] = -16;

        $r0[24] = -83;

        $r0[25] = -44;

        $r0[26] = -94;

        $r0[27] = -81;

        $r0[28] = -100;

        $r0[29] = -92;

        $r0[30] = 114;

        $r0[31] = -64;

        $r0[32] = -73;

        $r0[33] = -3;

        $r0[34] = -109;

        $r0[35] = 38;

        $r0[36] = 54;

        $r0[37] = 63;

        $r0[38] = -9;

        $r0[39] = -52;

        $r0[40] = 52;

        $r0[41] = -91;

        $r0[42] = -27;

        $r0[43] = -15;

        $r0[44] = 113;

        $r0[45] = -40;

        $r0[46] = 49;

        $r0[47] = 21;

        $r0[48] = 4;

        $r0[49] = -57;

        $r0[50] = 35;

        $r0[51] = -61;

        $r0[52] = 24;

        $r0[53] = -106;

        $r0[54] = 5;

        $r0[55] = -102;

        $r0[56] = 7;

        $r0[57] = 18;

        $r0[58] = -128;

        $r0[59] = -30;

        $r0[60] = -21;

        $r0[61] = 39;

        $r0[62] = -78;

        $r0[63] = 117;

        $r0[64] = 9;

        $r0[65] = -125;

        $r0[66] = 44;

        $r0[67] = 26;

        $r0[68] = 27;

        $r0[69] = 110;

        $r0[70] = 90;

        $r0[71] = -96;

        $r0[72] = 82;

        $r0[73] = 59;

        $r0[74] = -42;

        $r0[75] = -77;

        $r0[76] = 41;

        $r0[77] = -29;

        $r0[78] = 47;

        $r0[79] = -124;

        $r0[80] = 83;

        $r0[81] = -47;

        $r0[82] = 0;

        $r0[83] = -19;

        $r0[84] = 32;

        $r0[85] = -4;

        $r0[86] = -79;

        $r0[87] = 91;

        $r0[88] = 106;

        $r0[89] = -53;

        $r0[90] = -66;

        $r0[91] = 57;

        $r0[92] = 74;

        $r0[93] = 76;

        $r0[94] = 88;

        $r0[95] = -49;

        $r0[96] = -48;

        $r0[97] = -17;

        $r0[98] = -86;

        $r0[99] = -5;

        $r0[100] = 67;

        $r0[101] = 77;

        $r0[102] = 51;

        $r0[103] = -123;

        $r0[104] = 69;

        $r0[105] = -7;

        $r0[106] = 2;

        $r0[107] = 127;

        $r0[108] = 80;

        $r0[109] = 60;

        $r0[110] = -97;

        $r0[111] = -88;

        $r0[112] = 81;

        $r0[113] = -93;

        $r0[114] = 64;

        $r0[115] = -113;

        $r0[116] = -110;

        $r0[117] = -99;

        $r0[118] = 56;

        $r0[119] = -11;

        $r0[120] = -68;

        $r0[121] = -74;

        $r0[122] = -38;

        $r0[123] = 33;

        $r0[124] = 16;

        $r0[125] = -1;

        $r0[126] = -13;

        $r0[127] = -46;

        $r0[128] = -51;

        $r0[129] = 12;

        $r0[130] = 19;

        $r0[131] = -20;

        $r0[132] = 95;

        $r0[133] = -105;

        $r0[134] = 68;

        $r0[135] = 23;

        $r0[136] = -60;

        $r0[137] = -89;

        $r0[138] = 126;

        $r0[139] = 61;

        $r0[140] = 100;

        $r0[141] = 93;

        $r0[142] = 25;

        $r0[143] = 115;

        $r0[144] = 96;

        $r0[145] = -127;

        $r0[146] = 79;

        $r0[147] = -36;

        $r0[148] = 34;

        $r0[149] = 42;

        $r0[150] = -112;

        $r0[151] = -120;

        $r0[152] = 70;

        $r0[153] = -18;

        $r0[154] = -72;

        $r0[155] = 20;

        $r0[156] = -34;

        $r0[157] = 94;

        $r0[158] = 11;

        $r0[159] = -37;

        $r0[160] = -32;

        $r0[161] = 50;

        $r0[162] = 58;

        $r0[163] = 10;

        $r0[164] = 73;

        $r0[165] = 6;

        $r0[166] = 36;

        $r0[167] = 92;

        $r0[168] = -62;

        $r0[169] = -45;

        $r0[170] = -84;

        $r0[171] = 98;

        $r0[172] = -111;

        $r0[173] = -107;

        $r0[174] = -28;

        $r0[175] = 121;

        $r0[176] = -25;

        $r0[177] = -56;

        $r0[178] = 55;

        $r0[179] = 109;

        $r0[180] = -115;

        $r0[181] = -43;

        $r0[182] = 78;

        $r0[183] = -87;

        $r0[184] = 108;

        $r0[185] = 86;

        $r0[186] = -12;

        $r0[187] = -22;

        $r0[188] = 101;

        $r0[189] = 122;

        $r0[190] = -82;

        $r0[191] = 8;

        $r0[192] = -70;

        $r0[193] = 120;

        $r0[194] = 37;

        $r0[195] = 46;

        $r0[196] = 28;

        $r0[197] = -90;

        $r0[198] = -76;

        $r0[199] = -58;

        $r0[200] = -24;

        $r0[201] = -35;

        $r0[202] = 116;

        $r0[203] = 31;

        $r0[204] = 75;

        $r0[205] = -67;

        $r0[206] = -117;

        $r0[207] = -118;

        $r0[208] = 112;

        $r0[209] = 62;

        $r0[210] = -75;

        $r0[211] = 102;

        $r0[212] = 72;

        $r0[213] = 3;

        $r0[214] = -10;

        $r0[215] = 14;

        $r0[216] = 97;

        $r0[217] = 53;

        $r0[218] = 87;

        $r0[219] = -71;

        $r0[220] = -122;

        $r0[221] = -63;

        $r0[222] = 29;

        $r0[223] = -98;

        $r0[224] = -31;

        $r0[225] = -8;

        $r0[226] = -104;

        $r0[227] = 17;

        $r0[228] = 105;

        $r0[229] = -39;

        $r0[230] = -114;

        $r0[231] = -108;

        $r0[232] = -101;

        $r0[233] = 30;

        $r0[234] = -121;

        $r0[235] = -23;

        $r0[236] = -50;

        $r0[237] = 85;

        $r0[238] = 40;

        $r0[239] = -33;

        $r0[240] = -116;

        $r0[241] = -95;

        $r0[242] = -119;

        $r0[243] = 13;

        $r0[244] = -65;

        $r0[245] = -26;

        $r0[246] = 66;

        $r0[247] = 104;

        $r0[248] = 65;

        $r0[249] = -103;

        $r0[250] = 45;

        $r0[251] = 15;

        $r0[252] = -80;

        $r0[253] = 84;

        $r0[254] = -69;

        $r0[255] = 22;

        <org.spongycastle.crypto.engines.AESLightEngine: byte[] S> = $r0;

        $r0 = newarray (byte)[256];

        $r0[0] = 82;

        $r0[1] = 9;

        $r0[2] = 106;

        $r0[3] = -43;

        $r0[4] = 48;

        $r0[5] = 54;

        $r0[6] = -91;

        $r0[7] = 56;

        $r0[8] = -65;

        $r0[9] = 64;

        $r0[10] = -93;

        $r0[11] = -98;

        $r0[12] = -127;

        $r0[13] = -13;

        $r0[14] = -41;

        $r0[15] = -5;

        $r0[16] = 124;

        $r0[17] = -29;

        $r0[18] = 57;

        $r0[19] = -126;

        $r0[20] = -101;

        $r0[21] = 47;

        $r0[22] = -1;

        $r0[23] = -121;

        $r0[24] = 52;

        $r0[25] = -114;

        $r0[26] = 67;

        $r0[27] = 68;

        $r0[28] = -60;

        $r0[29] = -34;

        $r0[30] = -23;

        $r0[31] = -53;

        $r0[32] = 84;

        $r0[33] = 123;

        $r0[34] = -108;

        $r0[35] = 50;

        $r0[36] = -90;

        $r0[37] = -62;

        $r0[38] = 35;

        $r0[39] = 61;

        $r0[40] = -18;

        $r0[41] = 76;

        $r0[42] = -107;

        $r0[43] = 11;

        $r0[44] = 66;

        $r0[45] = -6;

        $r0[46] = -61;

        $r0[47] = 78;

        $r0[48] = 8;

        $r0[49] = 46;

        $r0[50] = -95;

        $r0[51] = 102;

        $r0[52] = 40;

        $r0[53] = -39;

        $r0[54] = 36;

        $r0[55] = -78;

        $r0[56] = 118;

        $r0[57] = 91;

        $r0[58] = -94;

        $r0[59] = 73;

        $r0[60] = 109;

        $r0[61] = -117;

        $r0[62] = -47;

        $r0[63] = 37;

        $r0[64] = 114;

        $r0[65] = -8;

        $r0[66] = -10;

        $r0[67] = 100;

        $r0[68] = -122;

        $r0[69] = 104;

        $r0[70] = -104;

        $r0[71] = 22;

        $r0[72] = -44;

        $r0[73] = -92;

        $r0[74] = 92;

        $r0[75] = -52;

        $r0[76] = 93;

        $r0[77] = 101;

        $r0[78] = -74;

        $r0[79] = -110;

        $r0[80] = 108;

        $r0[81] = 112;

        $r0[82] = 72;

        $r0[83] = 80;

        $r0[84] = -3;

        $r0[85] = -19;

        $r0[86] = -71;

        $r0[87] = -38;

        $r0[88] = 94;

        $r0[89] = 21;

        $r0[90] = 70;

        $r0[91] = 87;

        $r0[92] = -89;

        $r0[93] = -115;

        $r0[94] = -99;

        $r0[95] = -124;

        $r0[96] = -112;

        $r0[97] = -40;

        $r0[98] = -85;

        $r0[99] = 0;

        $r0[100] = -116;

        $r0[101] = -68;

        $r0[102] = -45;

        $r0[103] = 10;

        $r0[104] = -9;

        $r0[105] = -28;

        $r0[106] = 88;

        $r0[107] = 5;

        $r0[108] = -72;

        $r0[109] = -77;

        $r0[110] = 69;

        $r0[111] = 6;

        $r0[112] = -48;

        $r0[113] = 44;

        $r0[114] = 30;

        $r0[115] = -113;

        $r0[116] = -54;

        $r0[117] = 63;

        $r0[118] = 15;

        $r0[119] = 2;

        $r0[120] = -63;

        $r0[121] = -81;

        $r0[122] = -67;

        $r0[123] = 3;

        $r0[124] = 1;

        $r0[125] = 19;

        $r0[126] = -118;

        $r0[127] = 107;

        $r0[128] = 58;

        $r0[129] = -111;

        $r0[130] = 17;

        $r0[131] = 65;

        $r0[132] = 79;

        $r0[133] = 103;

        $r0[134] = -36;

        $r0[135] = -22;

        $r0[136] = -105;

        $r0[137] = -14;

        $r0[138] = -49;

        $r0[139] = -50;

        $r0[140] = -16;

        $r0[141] = -76;

        $r0[142] = -26;

        $r0[143] = 115;

        $r0[144] = -106;

        $r0[145] = -84;

        $r0[146] = 116;

        $r0[147] = 34;

        $r0[148] = -25;

        $r0[149] = -83;

        $r0[150] = 53;

        $r0[151] = -123;

        $r0[152] = -30;

        $r0[153] = -7;

        $r0[154] = 55;

        $r0[155] = -24;

        $r0[156] = 28;

        $r0[157] = 117;

        $r0[158] = -33;

        $r0[159] = 110;

        $r0[160] = 71;

        $r0[161] = -15;

        $r0[162] = 26;

        $r0[163] = 113;

        $r0[164] = 29;

        $r0[165] = 41;

        $r0[166] = -59;

        $r0[167] = -119;

        $r0[168] = 111;

        $r0[169] = -73;

        $r0[170] = 98;

        $r0[171] = 14;

        $r0[172] = -86;

        $r0[173] = 24;

        $r0[174] = -66;

        $r0[175] = 27;

        $r0[176] = -4;

        $r0[177] = 86;

        $r0[178] = 62;

        $r0[179] = 75;

        $r0[180] = -58;

        $r0[181] = -46;

        $r0[182] = 121;

        $r0[183] = 32;

        $r0[184] = -102;

        $r0[185] = -37;

        $r0[186] = -64;

        $r0[187] = -2;

        $r0[188] = 120;

        $r0[189] = -51;

        $r0[190] = 90;

        $r0[191] = -12;

        $r0[192] = 31;

        $r0[193] = -35;

        $r0[194] = -88;

        $r0[195] = 51;

        $r0[196] = -120;

        $r0[197] = 7;

        $r0[198] = -57;

        $r0[199] = 49;

        $r0[200] = -79;

        $r0[201] = 18;

        $r0[202] = 16;

        $r0[203] = 89;

        $r0[204] = 39;

        $r0[205] = -128;

        $r0[206] = -20;

        $r0[207] = 95;

        $r0[208] = 96;

        $r0[209] = 81;

        $r0[210] = 127;

        $r0[211] = -87;

        $r0[212] = 25;

        $r0[213] = -75;

        $r0[214] = 74;

        $r0[215] = 13;

        $r0[216] = 45;

        $r0[217] = -27;

        $r0[218] = 122;

        $r0[219] = -97;

        $r0[220] = -109;

        $r0[221] = -55;

        $r0[222] = -100;

        $r0[223] = -17;

        $r0[224] = -96;

        $r0[225] = -32;

        $r0[226] = 59;

        $r0[227] = 77;

        $r0[228] = -82;

        $r0[229] = 42;

        $r0[230] = -11;

        $r0[231] = -80;

        $r0[232] = -56;

        $r0[233] = -21;

        $r0[234] = -69;

        $r0[235] = 60;

        $r0[236] = -125;

        $r0[237] = 83;

        $r0[238] = -103;

        $r0[239] = 97;

        $r0[240] = 23;

        $r0[241] = 43;

        $r0[242] = 4;

        $r0[243] = 126;

        $r0[244] = -70;

        $r0[245] = 119;

        $r0[246] = -42;

        $r0[247] = 38;

        $r0[248] = -31;

        $r0[249] = 105;

        $r0[250] = 20;

        $r0[251] = 99;

        $r0[252] = 85;

        $r0[253] = 33;

        $r0[254] = 12;

        $r0[255] = 125;

        <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si> = $r0;

        $r1 = newarray (int)[30];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 4;

        $r1[3] = 8;

        $r1[4] = 16;

        $r1[5] = 32;

        $r1[6] = 64;

        $r1[7] = 128;

        $r1[8] = 27;

        $r1[9] = 54;

        $r1[10] = 108;

        $r1[11] = 216;

        $r1[12] = 171;

        $r1[13] = 77;

        $r1[14] = 154;

        $r1[15] = 47;

        $r1[16] = 94;

        $r1[17] = 188;

        $r1[18] = 99;

        $r1[19] = 198;

        $r1[20] = 151;

        $r1[21] = 53;

        $r1[22] = 106;

        $r1[23] = 212;

        $r1[24] = 179;

        $r1[25] = 125;

        $r1[26] = 250;

        $r1[27] = 239;

        $r1[28] = 197;

        $r1[29] = 145;

        <org.spongycastle.crypto.engines.AESLightEngine: int[] rcon> = $r1;

        return;
    }
    public void <init>()
    {
        org.spongycastle.crypto.engines.AESLightEngine r0;

        r0 := @this: org.spongycastle.crypto.engines.AESLightEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int[][] WorkingKey> = null;

        return;
    }
    private static int FFmulX(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = 2139062143 & $i0;

        $i1 = $i1 << 1;

        $i0 = -2139062144 & $i0;

        $i0 = $i0 >>> 7;

        $i0 = $i0 * 27;

        $i0 = $i1 ^ $i0;

        return $i0;
    }
    private static int FFmulX2(int)
    {
        int $i0, i1, $i2;

        $i0 := @parameter0: int;

        i1 = 1061109567 & $i0;

        i1 = i1 << 2;

        $i0 = $i0 & -1061109568;

        $i2 = $i0 >>> 1;

        $i0 = $i0 ^ $i2;

        $i2 = $i0 >>> 2;

        i1 = $i2 ^ i1;

        $i0 = $i0 >>> 5;

        $i0 = i1 ^ $i0;

        return $i0;
    }
    private void decryptBlock(int[][])
    {
        org.spongycastle.crypto.engines.AESLightEngine r0;
        int[][] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9;
        int[] $r2;
        byte[] $r3;
        byte $b6;

        r0 := @this: org.spongycastle.crypto.engines.AESLightEngine;

        $r1 := @parameter0: int[][];

        $i0 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0>;

        $i1 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int ROUNDS>;

        $r2 = $r1[$i1];

        $i1 = $r2[0];

        $i0 = $i0 ^ $i1;

        $i1 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1>;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int ROUNDS>;

        $r2 = $r1[$i2];

        $i2 = $r2[1];

        $i1 = $i1 ^ $i2;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2>;

        $i3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int ROUNDS>;

        $r2 = $r1[$i3];

        $i3 = $r2[2];

        $i3 = $i2 ^ $i3;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int ROUNDS>;

        $i4 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3>;

        $i5 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int ROUNDS>;

        $r2 = $r1[$i5];

        $i5 = $r2[3];

        $i5 = $i4 ^ $i5;

        $i2 = $i2 + -1;

     label1:
        if $i2 <= 1 goto label2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i4 = $i0 & 255;

        $b6 = $r3[$i4];

        $i4 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i7 = $i5 >> 8;

        $i7 = $i7 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 & 255;

        $i7 = $i7 << 8;

        $i4 = $i4 ^ $i7;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i7 = $i3 >> 16;

        $i7 = $i7 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 & 255;

        $i7 = $i7 << 16;

        $i4 = $i4 ^ $i7;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i7 = $i1 >> 24;

        $i7 = $i7 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 << 24;

        $i4 = $i4 ^ $i7;

        $i4 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int inv_mcol(int)>($i4);

        $r2 = $r1[$i2];

        $i7 = $r2[0];

        $i4 = $i4 ^ $i7;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i7 = $i1 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i8 = $i0 >> 8;

        $i8 = $i8 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 & 255;

        $i8 = $i8 << 8;

        $i7 = $i7 ^ $i8;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i8 = $i5 >> 16;

        $i8 = $i8 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 & 255;

        $i8 = $i8 << 16;

        $i7 = $i7 ^ $i8;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i8 = $i3 >> 24;

        $i8 = $i8 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 << 24;

        $i7 = $i7 ^ $i8;

        $i7 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int inv_mcol(int)>($i7);

        $r2 = $r1[$i2];

        $i8 = $r2[1];

        $i7 = $i7 ^ $i8;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i8 = $i3 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i9 = $i1 >> 8;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 & 255;

        $i9 = $i9 << 8;

        $i8 = $i8 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i9 = $i0 >> 16;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 & 255;

        $i9 = $i9 << 16;

        $i8 = $i8 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i9 = $i5 >> 24;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 << 24;

        $i8 = $i8 ^ $i9;

        $i8 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int inv_mcol(int)>($i8);

        $r2 = $r1[$i2];

        $i9 = $r2[2];

        $i8 = $i8 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i5 = $i5 & 255;

        $b6 = $r3[$i5];

        $i5 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i3 = $i3 >> 8;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 & 255;

        $i3 = $i3 << 8;

        $i3 = $i5 ^ $i3;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i1 = $i1 >> 16;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $i1 = $i1 << 16;

        $i1 = $i3 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i0 = $i0 >> 24;

        $i0 = $i0 & 255;

        $b6 = $r3[$i0];

        $i0 = $b6 << 24;

        $i0 = $i1 ^ $i0;

        $i0 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int inv_mcol(int)>($i0);

        $i5 = $i2 + -1;

        $r2 = $r1[$i2];

        $i1 = $r2[3];

        $i2 = $i0 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i0 = $i4 & 255;

        $b6 = $r3[$i0];

        $i0 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i1 = $i2 >> 8;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $i1 = $i1 << 8;

        $i0 = $i0 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i1 = $i8 >> 16;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $i1 = $i1 << 16;

        $i0 = $i0 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i1 = $i7 >> 24;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 << 24;

        $i0 = $i0 ^ $i1;

        $i0 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int inv_mcol(int)>($i0);

        $r2 = $r1[$i5];

        $i1 = $r2[0];

        $i0 = $i0 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i1 = $i7 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i3 = $i4 >> 8;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 & 255;

        $i3 = $i3 << 8;

        $i1 = $i1 ^ $i3;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i3 = $i2 >> 16;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 & 255;

        $i3 = $i3 << 16;

        $i1 = $i1 ^ $i3;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i3 = $i8 >> 24;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 << 24;

        $i1 = $i1 ^ $i3;

        $i1 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int inv_mcol(int)>($i1);

        $r2 = $r1[$i5];

        $i3 = $r2[1];

        $i1 = $i1 ^ $i3;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i3 = $i8 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i9 = $i7 >> 8;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 & 255;

        $i9 = $i9 << 8;

        $i3 = $i3 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i9 = $i4 >> 16;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 & 255;

        $i9 = $i9 << 16;

        $i3 = $i3 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i9 = $i2 >> 24;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 << 24;

        $i3 = $i3 ^ $i9;

        $i3 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int inv_mcol(int)>($i3);

        $r2 = $r1[$i5];

        $i9 = $r2[2];

        $i3 = $i3 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i8 = $i8 >> 8;

        $i8 = $i8 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 & 255;

        $i8 = $i8 << 8;

        $i2 = $i2 ^ $i8;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i7 = $i7 >> 16;

        $i7 = $i7 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 & 255;

        $i7 = $i7 << 16;

        $i2 = $i2 ^ $i7;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i4 = $i4 >> 24;

        $i4 = $i4 & 255;

        $b6 = $r3[$i4];

        $i4 = $b6 << 24;

        $i2 = $i2 ^ $i4;

        $i4 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int inv_mcol(int)>($i2);

        $i2 = $i5 + -1;

        $r2 = $r1[$i5];

        $i5 = $r2[3];

        $i5 = $i4 ^ $i5;

        goto label1;

     label2:
        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i4 = $i0 & 255;

        $b6 = $r3[$i4];

        $i4 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i7 = $i5 >> 8;

        $i7 = $i7 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 & 255;

        $i7 = $i7 << 8;

        $i4 = $i4 ^ $i7;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i7 = $i3 >> 16;

        $i7 = $i7 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 & 255;

        $i7 = $i7 << 16;

        $i4 = $i4 ^ $i7;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i7 = $i1 >> 24;

        $i7 = $i7 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 << 24;

        $i4 = $i4 ^ $i7;

        $i4 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int inv_mcol(int)>($i4);

        $r2 = $r1[$i2];

        $i7 = $r2[0];

        $i4 = $i4 ^ $i7;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i7 = $i1 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i8 = $i0 >> 8;

        $i8 = $i8 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 & 255;

        $i8 = $i8 << 8;

        $i7 = $i7 ^ $i8;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i8 = $i5 >> 16;

        $i8 = $i8 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 & 255;

        $i8 = $i8 << 16;

        $i7 = $i7 ^ $i8;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i8 = $i3 >> 24;

        $i8 = $i8 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 << 24;

        $i7 = $i7 ^ $i8;

        $i7 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int inv_mcol(int)>($i7);

        $r2 = $r1[$i2];

        $i8 = $r2[1];

        $i7 = $i7 ^ $i8;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i8 = $i3 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i9 = $i1 >> 8;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 & 255;

        $i9 = $i9 << 8;

        $i8 = $i8 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i9 = $i0 >> 16;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 & 255;

        $i9 = $i9 << 16;

        $i8 = $i8 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i9 = $i5 >> 24;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 << 24;

        $i8 = $i8 ^ $i9;

        $i8 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int inv_mcol(int)>($i8);

        $r2 = $r1[$i2];

        $i9 = $r2[2];

        $i8 = $i8 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i5 = $i5 & 255;

        $b6 = $r3[$i5];

        $i5 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i3 = $i3 >> 8;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 & 255;

        $i3 = $i3 << 8;

        $i3 = $i5 ^ $i3;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i1 = $i1 >> 16;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $i1 = $i1 << 16;

        $i1 = $i3 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i0 = $i0 >> 24;

        $i0 = $i0 & 255;

        $b6 = $r3[$i0];

        $i0 = $b6 << 24;

        $i0 = $i1 ^ $i0;

        $i0 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int inv_mcol(int)>($i0);

        $r2 = $r1[$i2];

        $i1 = $r2[3];

        $i0 = $i0 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i1 = $i4 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i2 = $i0 >> 8;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $i2 = $i2 << 8;

        $i1 = $i1 ^ $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i2 = $i8 >> 16;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $i2 = $i2 << 16;

        $i1 = $i1 ^ $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i2 = $i7 >> 24;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 << 24;

        $i1 = $i1 ^ $i2;

        $r2 = $r1[0];

        $i2 = $r2[0];

        $i1 = $i1 ^ $i2;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0> = $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i1 = $i7 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i2 = $i4 >> 8;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $i2 = $i2 << 8;

        $i1 = $i1 ^ $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i2 = $i0 >> 16;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $i2 = $i2 << 16;

        $i1 = $i1 ^ $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i2 = $i8 >> 24;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 << 24;

        $i1 = $i1 ^ $i2;

        $r2 = $r1[0];

        $i2 = $r2[1];

        $i1 = $i1 ^ $i2;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1> = $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i1 = $i8 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i2 = $i7 >> 8;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $i2 = $i2 << 8;

        $i1 = $i1 ^ $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i2 = $i4 >> 16;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $i2 = $i2 << 16;

        $i1 = $i1 ^ $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i2 = $i0 >> 24;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 << 24;

        $i1 = $i1 ^ $i2;

        $r2 = $r1[0];

        $i2 = $r2[2];

        $i1 = $i1 ^ $i2;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2> = $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i0 = $i0 & 255;

        $b6 = $r3[$i0];

        $i0 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i1 = $i8 >> 8;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $i1 = $i1 << 8;

        $i0 = $i0 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i1 = $i7 >> 16;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $i1 = $i1 << 16;

        $i0 = $i0 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] Si>;

        $i1 = $i4 >> 24;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 << 24;

        $i0 = $i0 ^ $i1;

        $r2 = $r1[0];

        $i1 = $r2[3];

        $i0 = $i0 ^ $i1;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3> = $i0;

        return;
    }
    private void encryptBlock(int[][])
    {
        org.spongycastle.crypto.engines.AESLightEngine r0;
        int[][] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9;
        int[] $r2;
        byte[] $r3;
        byte $b6;

        r0 := @this: org.spongycastle.crypto.engines.AESLightEngine;

        $r1 := @parameter0: int[][];

        $i0 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0>;

        $r2 = $r1[0];

        $i1 = $r2[0];

        $i0 = $i0 ^ $i1;

        $i1 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1>;

        $r2 = $r1[0];

        $i2 = $r2[1];

        $i1 = $i1 ^ $i2;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2>;

        $r2 = $r1[0];

        $i3 = $r2[2];

        $i2 = $i2 ^ $i3;

        $i3 = 1;

        $i4 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3>;

        $r2 = $r1[0];

        $i5 = $r2[3];

        $i4 = $i4 ^ $i5;

     label1:
        $i5 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int ROUNDS>;

        $i5 = $i5 + -1;

        if $i3 >= $i5 goto label2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i5 = $i0 & 255;

        $b6 = $r3[$i5];

        $i5 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i7 = $i1 >> 8;

        $i7 = $i7 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 & 255;

        $i7 = $i7 << 8;

        $i5 = $i5 ^ $i7;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i7 = $i2 >> 16;

        $i7 = $i7 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 & 255;

        $i7 = $i7 << 16;

        $i5 = $i5 ^ $i7;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i7 = $i4 >> 24;

        $i7 = $i7 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 << 24;

        $i5 = $i5 ^ $i7;

        $i5 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int mcol(int)>($i5);

        $r2 = $r1[$i3];

        $i7 = $r2[0];

        $i5 = $i5 ^ $i7;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i7 = $i1 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i8 = $i2 >> 8;

        $i8 = $i8 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 & 255;

        $i8 = $i8 << 8;

        $i7 = $i7 ^ $i8;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i8 = $i4 >> 16;

        $i8 = $i8 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 & 255;

        $i8 = $i8 << 16;

        $i7 = $i7 ^ $i8;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i8 = $i0 >> 24;

        $i8 = $i8 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 << 24;

        $i7 = $i7 ^ $i8;

        $i7 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int mcol(int)>($i7);

        $r2 = $r1[$i3];

        $i8 = $r2[1];

        $i7 = $i7 ^ $i8;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i8 = $i2 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i9 = $i4 >> 8;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 & 255;

        $i9 = $i9 << 8;

        $i8 = $i8 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i9 = $i0 >> 16;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 & 255;

        $i9 = $i9 << 16;

        $i8 = $i8 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i9 = $i1 >> 24;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 << 24;

        $i8 = $i8 ^ $i9;

        $i8 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int mcol(int)>($i8);

        $r2 = $r1[$i3];

        $i9 = $r2[2];

        $i8 = $i8 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i4 = $i4 & 255;

        $b6 = $r3[$i4];

        $i4 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i0 = $i0 >> 8;

        $i0 = $i0 & 255;

        $b6 = $r3[$i0];

        $i0 = $b6 & 255;

        $i0 = $i0 << 8;

        $i0 = $i4 ^ $i0;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i1 = $i1 >> 16;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $i1 = $i1 << 16;

        $i0 = $i0 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i1 = $i2 >> 24;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 << 24;

        $i0 = $i0 ^ $i1;

        $i0 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int mcol(int)>($i0);

        $i4 = $i3 + 1;

        $r2 = $r1[$i3];

        $i1 = $r2[3];

        $i3 = $i0 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i0 = $i5 & 255;

        $b6 = $r3[$i0];

        $i0 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i1 = $i7 >> 8;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $i1 = $i1 << 8;

        $i0 = $i0 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i1 = $i8 >> 16;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $i1 = $i1 << 16;

        $i0 = $i0 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i1 = $i3 >> 24;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 << 24;

        $i0 = $i0 ^ $i1;

        $i0 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int mcol(int)>($i0);

        $r2 = $r1[$i4];

        $i1 = $r2[0];

        $i0 = $i0 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i1 = $i7 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i2 = $i8 >> 8;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $i2 = $i2 << 8;

        $i1 = $i1 ^ $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i2 = $i3 >> 16;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $i2 = $i2 << 16;

        $i1 = $i1 ^ $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i2 = $i5 >> 24;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 << 24;

        $i1 = $i1 ^ $i2;

        $i1 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int mcol(int)>($i1);

        $r2 = $r1[$i4];

        $i2 = $r2[1];

        $i1 = $i1 ^ $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i2 = $i8 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i9 = $i3 >> 8;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 & 255;

        $i9 = $i9 << 8;

        $i2 = $i2 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i9 = $i5 >> 16;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 & 255;

        $i9 = $i9 << 16;

        $i2 = $i2 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i9 = $i7 >> 24;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 << 24;

        $i2 = $i2 ^ $i9;

        $i2 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int mcol(int)>($i2);

        $r2 = $r1[$i4];

        $i9 = $r2[2];

        $i2 = $i2 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i5 = $i5 >> 8;

        $i5 = $i5 & 255;

        $b6 = $r3[$i5];

        $i5 = $b6 & 255;

        $i5 = $i5 << 8;

        $i3 = $i3 ^ $i5;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i5 = $i7 >> 16;

        $i5 = $i5 & 255;

        $b6 = $r3[$i5];

        $i5 = $b6 & 255;

        $i5 = $i5 << 16;

        $i3 = $i3 ^ $i5;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i5 = $i8 >> 24;

        $i5 = $i5 & 255;

        $b6 = $r3[$i5];

        $i5 = $b6 << 24;

        $i3 = $i3 ^ $i5;

        $i5 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int mcol(int)>($i3);

        $i3 = $i4 + 1;

        $r2 = $r1[$i4];

        $i4 = $r2[3];

        $i4 = $i5 ^ $i4;

        goto label1;

     label2:
        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i5 = $i0 & 255;

        $b6 = $r3[$i5];

        $i5 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i7 = $i1 >> 8;

        $i7 = $i7 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 & 255;

        $i7 = $i7 << 8;

        $i5 = $i5 ^ $i7;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i7 = $i2 >> 16;

        $i7 = $i7 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 & 255;

        $i7 = $i7 << 16;

        $i5 = $i5 ^ $i7;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i7 = $i4 >> 24;

        $i7 = $i7 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 << 24;

        $i5 = $i5 ^ $i7;

        $i5 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int mcol(int)>($i5);

        $r2 = $r1[$i3];

        $i7 = $r2[0];

        $i5 = $i5 ^ $i7;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i7 = $i1 & 255;

        $b6 = $r3[$i7];

        $i7 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i8 = $i2 >> 8;

        $i8 = $i8 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 & 255;

        $i8 = $i8 << 8;

        $i7 = $i7 ^ $i8;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i8 = $i4 >> 16;

        $i8 = $i8 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 & 255;

        $i8 = $i8 << 16;

        $i7 = $i7 ^ $i8;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i8 = $i0 >> 24;

        $i8 = $i8 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 << 24;

        $i7 = $i7 ^ $i8;

        $i7 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int mcol(int)>($i7);

        $r2 = $r1[$i3];

        $i8 = $r2[1];

        $i7 = $i7 ^ $i8;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i8 = $i2 & 255;

        $b6 = $r3[$i8];

        $i8 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i9 = $i4 >> 8;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 & 255;

        $i9 = $i9 << 8;

        $i8 = $i8 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i9 = $i0 >> 16;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 & 255;

        $i9 = $i9 << 16;

        $i8 = $i8 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i9 = $i1 >> 24;

        $i9 = $i9 & 255;

        $b6 = $r3[$i9];

        $i9 = $b6 << 24;

        $i8 = $i8 ^ $i9;

        $i8 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int mcol(int)>($i8);

        $r2 = $r1[$i3];

        $i9 = $r2[2];

        $i8 = $i8 ^ $i9;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i4 = $i4 & 255;

        $b6 = $r3[$i4];

        $i4 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i0 = $i0 >> 8;

        $i0 = $i0 & 255;

        $b6 = $r3[$i0];

        $i0 = $b6 & 255;

        $i0 = $i0 << 8;

        $i0 = $i4 ^ $i0;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i1 = $i1 >> 16;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $i1 = $i1 << 16;

        $i0 = $i0 ^ $i1;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i1 = $i2 >> 24;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 << 24;

        $i0 = $i0 ^ $i1;

        $i1 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int mcol(int)>($i0);

        $i0 = $i3 + 1;

        $r2 = $r1[$i3];

        $i2 = $r2[3];

        $i1 = $i1 ^ $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i2 = $i5 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i3 = $i7 >> 8;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 & 255;

        $i3 = $i3 << 8;

        $i2 = $i2 ^ $i3;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i3 = $i8 >> 16;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 & 255;

        $i3 = $i3 << 16;

        $i2 = $i2 ^ $i3;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i3 = $i1 >> 24;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 << 24;

        $i2 = $i2 ^ $i3;

        $r2 = $r1[$i0];

        $i3 = $r2[0];

        $i2 = $i2 ^ $i3;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0> = $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i2 = $i7 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i3 = $i8 >> 8;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 & 255;

        $i3 = $i3 << 8;

        $i2 = $i2 ^ $i3;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i3 = $i1 >> 16;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 & 255;

        $i3 = $i3 << 16;

        $i2 = $i2 ^ $i3;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i3 = $i5 >> 24;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 << 24;

        $i2 = $i2 ^ $i3;

        $r2 = $r1[$i0];

        $i3 = $r2[1];

        $i2 = $i2 ^ $i3;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1> = $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i2 = $i8 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i3 = $i1 >> 8;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 & 255;

        $i3 = $i3 << 8;

        $i2 = $i2 ^ $i3;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i3 = $i5 >> 16;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 & 255;

        $i3 = $i3 << 16;

        $i2 = $i2 ^ $i3;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i3 = $i7 >> 24;

        $i3 = $i3 & 255;

        $b6 = $r3[$i3];

        $i3 = $b6 << 24;

        $i2 = $i2 ^ $i3;

        $r2 = $r1[$i0];

        $i3 = $r2[2];

        $i2 = $i2 ^ $i3;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2> = $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i1 = $i1 & 255;

        $b6 = $r3[$i1];

        $i1 = $b6 & 255;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i2 = $i5 >> 8;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $i2 = $i2 << 8;

        $i1 = $i1 ^ $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i2 = $i7 >> 16;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 & 255;

        $i2 = $i2 << 16;

        $i1 = $i1 ^ $i2;

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i2 = $i8 >> 24;

        $i2 = $i2 & 255;

        $b6 = $r3[$i2];

        $i2 = $b6 << 24;

        $i1 = $i1 ^ $i2;

        $r2 = $r1[$i0];

        $i0 = $r2[3];

        $i0 = $i1 ^ $i0;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3> = $i0;

        return;
    }
    private int[][] generateWorkingKey(byte[], boolean)
    {
        org.spongycastle.crypto.engines.AESLightEngine r0;
        byte[] $r1;
        boolean $z0;
        int i0, i1, $i2, $i3, $i5, $i6;
        java.lang.IllegalArgumentException $r2;
        int[] $r3, $r7;
        java.lang.Class $r4;
        java.lang.Object $r5;
        int[][] r6;
        byte $b4;

        r0 := @this: org.spongycastle.crypto.engines.AESLightEngine;

        $r1 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        i0 = lengthof $r1;

        i0 = i0 / 4;

        if i0 == 4 goto label01;

        if i0 == 6 goto label01;

        if i0 != 8 goto label02;

     label01:
        i1 = i0 * 4;

        $i2 = lengthof $r1;

        if i1 == $i2 goto label03;

     label02:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key length not 128/192/256 bits.");

        throw $r2;

     label03:
        i1 = i0 + 6;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int ROUNDS> = i1;

        i1 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int ROUNDS>;

        i1 = i1 + 1;

        $r3 = newarray (int)[2];

        $r3[0] = i1;

        $r3[1] = 4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r4, $r3);

        r6 = (int[][]) $r5;

        i1 = 0;

        $i2 = 0;

     label04:
        $i3 = lengthof $r1;

        if $i2 >= $i3 goto label05;

        $i3 = i1 >> 2;

        $r3 = r6[$i3];

        $i3 = i1 & 3;

        $b4 = $r1[$i2];

        $i5 = $b4 & 255;

        $i6 = $i2 + 1;

        $b4 = $r1[$i6];

        $i6 = $b4 & 255;

        $i6 = $i6 << 8;

        $i5 = $i5 | $i6;

        $i6 = $i2 + 2;

        $b4 = $r1[$i6];

        $i6 = $b4 & 255;

        $i6 = $i6 << 16;

        $i5 = $i5 | $i6;

        $i6 = $i2 + 3;

        $b4 = $r1[$i6];

        $i6 = $b4 << 24;

        $i5 = $i5 | $i6;

        $r3[$i3] = $i5;

        $i2 = $i2 + 4;

        i1 = i1 + 1;

        goto label04;

     label05:
        i1 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int ROUNDS>;

        i1 = i1 + 1;

        i1 = i1 << 2;

        $i2 = i0;

     label06:
        if $i2 >= i1 goto label09;

        $i3 = $i2 + -1;

        $i3 = $i3 >> 2;

        $r3 = r6[$i3];

        $i3 = $i2 + -1;

        $i3 = $i3 & 3;

        $i3 = $r3[$i3];

        $i5 = $i2 % i0;

        if $i5 != 0 goto label08;

        $i3 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int shift(int,int)>($i3, 8);

        $i3 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int subWord(int)>($i3);

        $r3 = <org.spongycastle.crypto.engines.AESLightEngine: int[] rcon>;

        $i5 = $i2 / i0;

        $i5 = $i5 + -1;

        $i5 = $r3[$i5];

        $i3 = $i3 ^ $i5;

     label07:
        $i5 = $i2 >> 2;

        $r3 = r6[$i5];

        $i5 = $i2 & 3;

        $i6 = $i2 - i0;

        $i6 = $i6 >> 2;

        $r7 = r6[$i6];

        $i6 = $i2 - i0;

        $i6 = $i6 & 3;

        $i6 = $r7[$i6];

        $i3 = $i6 ^ $i3;

        $r3[$i5] = $i3;

        $i2 = $i2 + 1;

        goto label06;

     label08:
        if i0 <= 6 goto label07;

        $i5 = $i2 % i0;

        if $i5 != 4 goto label07;

        $i3 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int subWord(int)>($i3);

        goto label07;

     label09:
        if $z0 != 0 goto label13;

        i0 = 1;

     label10:
        i1 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int ROUNDS>;

        if i0 >= i1 goto label13;

        i1 = 0;

     label11:
        if i1 >= 4 goto label12;

        $r3 = r6[i0];

        $r7 = r6[i0];

        $i2 = $r7[i1];

        $i2 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int inv_mcol(int)>($i2);

        $r3[i1] = $i2;

        i1 = i1 + 1;

        goto label11;

     label12:
        i0 = i0 + 1;

        goto label10;

     label13:
        return r6;
    }
    private static int inv_mcol(int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int shift(int,int)>($i0, 8);

        $i1 = $i0 ^ $i1;

        $i2 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int FFmulX(int)>($i1);

        $i0 = $i0 ^ $i2;

        $i2 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int FFmulX2(int)>($i0);

        $i1 = $i1 ^ $i2;

        $i2 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int shift(int,int)>($i1, 16);

        $i1 = $i2 ^ $i1;

        $i0 = $i0 ^ $i1;

        return $i0;
    }
    private static int mcol(int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int shift(int,int)>($i0, 8);

        $i0 = $i0 ^ $i1;

        $i2 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int shift(int,int)>($i0, 16);

        $i1 = $i2 ^ $i1;

        $i0 = staticinvoke <org.spongycastle.crypto.engines.AESLightEngine: int FFmulX(int)>($i0);

        $i0 = $i1 ^ $i0;

        return $i0;
    }
    private void packBlock(byte[], int)
    {
        org.spongycastle.crypto.engines.AESLightEngine r0;
        byte[] $r1;
        int $i0, i1, $i2;
        byte $b3;

        r0 := @this: org.spongycastle.crypto.engines.AESLightEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        i1 = $i0 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0>;

        $b3 = (byte) $i2;

        $r1[$i0] = $b3;

        $i0 = i1 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0>;

        $i2 = $i2 >> 8;

        $b3 = (byte) $i2;

        $r1[i1] = $b3;

        i1 = $i0 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0>;

        $i2 = $i2 >> 16;

        $b3 = (byte) $i2;

        $r1[$i0] = $b3;

        $i0 = i1 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0>;

        $i2 = $i2 >> 24;

        $b3 = (byte) $i2;

        $r1[i1] = $b3;

        i1 = $i0 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1>;

        $b3 = (byte) $i2;

        $r1[$i0] = $b3;

        $i0 = i1 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1>;

        $i2 = $i2 >> 8;

        $b3 = (byte) $i2;

        $r1[i1] = $b3;

        i1 = $i0 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1>;

        $i2 = $i2 >> 16;

        $b3 = (byte) $i2;

        $r1[$i0] = $b3;

        $i0 = i1 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1>;

        $i2 = $i2 >> 24;

        $b3 = (byte) $i2;

        $r1[i1] = $b3;

        i1 = $i0 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2>;

        $b3 = (byte) $i2;

        $r1[$i0] = $b3;

        $i0 = i1 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2>;

        $i2 = $i2 >> 8;

        $b3 = (byte) $i2;

        $r1[i1] = $b3;

        i1 = $i0 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2>;

        $i2 = $i2 >> 16;

        $b3 = (byte) $i2;

        $r1[$i0] = $b3;

        $i0 = i1 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2>;

        $i2 = $i2 >> 24;

        $b3 = (byte) $i2;

        $r1[i1] = $b3;

        i1 = $i0 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3>;

        $b3 = (byte) $i2;

        $r1[$i0] = $b3;

        $i0 = i1 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3>;

        $i2 = $i2 >> 8;

        $b3 = (byte) $i2;

        $r1[i1] = $b3;

        i1 = $i0 + 1;

        $i2 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3>;

        $i2 = $i2 >> 16;

        $b3 = (byte) $i2;

        $r1[$i0] = $b3;

        $i0 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3>;

        $i0 = $i0 >> 24;

        $b3 = (byte) $i0;

        $r1[i1] = $b3;

        return;
    }
    private static int shift(int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $i0 >>> $i1;

        $i1 = neg $i1;

        $i0 = $i0 << $i1;

        $i0 = $i2 | $i0;

        return $i0;
    }
    private static int subWord(int)
    {
        int $i0, $i1, $i3;
        byte[] $r0;
        byte $b2;

        $i0 := @parameter0: int;

        $r0 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i1 = $i0 & 255;

        $b2 = $r0[$i1];

        $i1 = $b2 & 255;

        $r0 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i3 = $i0 >> 8;

        $i3 = $i3 & 255;

        $b2 = $r0[$i3];

        $i3 = $b2 & 255;

        $i3 = $i3 << 8;

        $i1 = $i1 | $i3;

        $r0 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i3 = $i0 >> 16;

        $i3 = $i3 & 255;

        $b2 = $r0[$i3];

        $i3 = $b2 & 255;

        $i3 = $i3 << 16;

        $i1 = $i1 | $i3;

        $r0 = <org.spongycastle.crypto.engines.AESLightEngine: byte[] S>;

        $i0 = $i0 >> 24;

        $i0 = $i0 & 255;

        $b2 = $r0[$i0];

        $i0 = $b2 << 24;

        $i0 = $i1 | $i0;

        return $i0;
    }
    private void unpackBlock(byte[], int)
    {
        org.spongycastle.crypto.engines.AESLightEngine r0;
        byte[] $r1;
        int $i0, i1, $i3;
        byte $b2;

        r0 := @this: org.spongycastle.crypto.engines.AESLightEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        i1 = $i0 + 1;

        $b2 = $r1[$i0];

        $i0 = $b2 & 255;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0> = $i0;

        $i3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0>;

        $i0 = i1 + 1;

        $b2 = $r1[i1];

        i1 = $b2 & 255;

        i1 = i1 << 8;

        i1 = $i3 | i1;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0> = i1;

        $i3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0>;

        i1 = $i0 + 1;

        $b2 = $r1[$i0];

        $i0 = $b2 & 255;

        $i0 = $i0 << 16;

        $i0 = $i3 | $i0;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0> = $i0;

        $i3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0>;

        $i0 = i1 + 1;

        $b2 = $r1[i1];

        i1 = $b2 << 24;

        i1 = $i3 | i1;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C0> = i1;

        i1 = $i0 + 1;

        $b2 = $r1[$i0];

        $i0 = $b2 & 255;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1> = $i0;

        $i3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1>;

        $i0 = i1 + 1;

        $b2 = $r1[i1];

        i1 = $b2 & 255;

        i1 = i1 << 8;

        i1 = $i3 | i1;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1> = i1;

        $i3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1>;

        i1 = $i0 + 1;

        $b2 = $r1[$i0];

        $i0 = $b2 & 255;

        $i0 = $i0 << 16;

        $i0 = $i3 | $i0;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1> = $i0;

        $i3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1>;

        $i0 = i1 + 1;

        $b2 = $r1[i1];

        i1 = $b2 << 24;

        i1 = $i3 | i1;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C1> = i1;

        i1 = $i0 + 1;

        $b2 = $r1[$i0];

        $i0 = $b2 & 255;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2> = $i0;

        $i3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2>;

        $i0 = i1 + 1;

        $b2 = $r1[i1];

        i1 = $b2 & 255;

        i1 = i1 << 8;

        i1 = $i3 | i1;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2> = i1;

        $i3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2>;

        i1 = $i0 + 1;

        $b2 = $r1[$i0];

        $i0 = $b2 & 255;

        $i0 = $i0 << 16;

        $i0 = $i3 | $i0;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2> = $i0;

        $i3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2>;

        $i0 = i1 + 1;

        $b2 = $r1[i1];

        i1 = $b2 << 24;

        i1 = $i3 | i1;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C2> = i1;

        i1 = $i0 + 1;

        $b2 = $r1[$i0];

        $i0 = $b2 & 255;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3> = $i0;

        $i3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3>;

        $i0 = i1 + 1;

        $b2 = $r1[i1];

        i1 = $b2 & 255;

        i1 = i1 << 8;

        i1 = $i3 | i1;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3> = i1;

        $i3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3>;

        i1 = $i0 + 1;

        $b2 = $r1[$i0];

        $i0 = $b2 & 255;

        $i0 = $i0 << 16;

        $i0 = $i3 | $i0;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3> = $i0;

        $i0 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3>;

        $b2 = $r1[i1];

        i1 = $b2 << 24;

        $i0 = $i0 | i1;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int C3> = $i0;

        return;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.engines.AESLightEngine r0;

        r0 := @this: org.spongycastle.crypto.engines.AESLightEngine;

        return "AES";
    }
    public int getBlockSize()
    {
        org.spongycastle.crypto.engines.AESLightEngine r0;

        r0 := @this: org.spongycastle.crypto.engines.AESLightEngine;

        return 16;
    }
    public void init(boolean, org.spongycastle.crypto.CipherParameters)
    {
        org.spongycastle.crypto.engines.AESLightEngine r0;
        boolean $z0, $z1;
        org.spongycastle.crypto.CipherParameters r1;
        org.spongycastle.crypto.params.KeyParameter r2;
        byte[] $r3;
        int[][] $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.Class $r7;
        java.lang.String $r8;

        r0 := @this: org.spongycastle.crypto.engines.AESLightEngine;

        $z0 := @parameter0: boolean;

        r1 := @parameter1: org.spongycastle.crypto.CipherParameters;

        $z1 = r1 instanceof org.spongycastle.crypto.params.KeyParameter;

        if $z1 == 0 goto label1;

        r2 = (org.spongycastle.crypto.params.KeyParameter) r1;

        $r3 = virtualinvoke r2.<org.spongycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $r4 = specialinvoke r0.<org.spongycastle.crypto.engines.AESLightEngine: int[][] generateWorkingKey(byte[],boolean)>($r3, $z0);

        r0.<org.spongycastle.crypto.engines.AESLightEngine: int[][] WorkingKey> = $r4;

        r0.<org.spongycastle.crypto.engines.AESLightEngine: boolean forEncryption> = $z0;

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid parameter passed to AES init - ");

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r5;
    }
    public int processBlock(byte[], int, byte[], int)
    {
        org.spongycastle.crypto.engines.AESLightEngine r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3;
        int[][] $r3;
        java.lang.IllegalStateException $r4;
        org.spongycastle.crypto.DataLengthException $r5;
        org.spongycastle.crypto.OutputLengthException $r6;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.engines.AESLightEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        $r3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int[][] WorkingKey>;

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AES engine not initialised");

        throw $r4;

     label1:
        $i2 = $i0 + 16;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label2;

        $r5 = new org.spongycastle.crypto.DataLengthException;

        specialinvoke $r5.<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r5;

     label2:
        $i2 = $i1 + 16;

        $i3 = lengthof $r2;

        if $i2 <= $i3 goto label3;

        $r6 = new org.spongycastle.crypto.OutputLengthException;

        specialinvoke $r6.<org.spongycastle.crypto.OutputLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r6;

     label3:
        $z0 = r0.<org.spongycastle.crypto.engines.AESLightEngine: boolean forEncryption>;

        if $z0 == 0 goto label5;

        specialinvoke r0.<org.spongycastle.crypto.engines.AESLightEngine: void unpackBlock(byte[],int)>($r1, $i0);

        $r3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int[][] WorkingKey>;

        specialinvoke r0.<org.spongycastle.crypto.engines.AESLightEngine: void encryptBlock(int[][])>($r3);

        specialinvoke r0.<org.spongycastle.crypto.engines.AESLightEngine: void packBlock(byte[],int)>($r2, $i1);

     label4:
        return 16;

     label5:
        specialinvoke r0.<org.spongycastle.crypto.engines.AESLightEngine: void unpackBlock(byte[],int)>($r1, $i0);

        $r3 = r0.<org.spongycastle.crypto.engines.AESLightEngine: int[][] WorkingKey>;

        specialinvoke r0.<org.spongycastle.crypto.engines.AESLightEngine: void decryptBlock(int[][])>($r3);

        specialinvoke r0.<org.spongycastle.crypto.engines.AESLightEngine: void packBlock(byte[],int)>($r2, $i1);

        goto label4;
    }
    public void reset()
    {
        org.spongycastle.crypto.engines.AESLightEngine r0;

        r0 := @this: org.spongycastle.crypto.engines.AESLightEngine;

        return;
    }
