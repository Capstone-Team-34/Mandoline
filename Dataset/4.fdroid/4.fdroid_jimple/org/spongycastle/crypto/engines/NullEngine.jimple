org.spongycastle.crypto.engines.NullEngine extends java.lang.Object implements org.spongycastle.crypto.BlockCipher
protected static final int DEFAULT_BLOCK_SIZE
private final int blockSize
private boolean initialised
    public void <init>()
    {
        org.spongycastle.crypto.engines.NullEngine r0;

        r0 := @this: org.spongycastle.crypto.engines.NullEngine;

        specialinvoke r0.<org.spongycastle.crypto.engines.NullEngine: void <init>(int)>(1);

        return;
    }
    public void <init>(int)
    {
        org.spongycastle.crypto.engines.NullEngine r0;
        int $i0;

        r0 := @this: org.spongycastle.crypto.engines.NullEngine;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.engines.NullEngine: int blockSize> = $i0;

        return;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.engines.NullEngine r0;

        r0 := @this: org.spongycastle.crypto.engines.NullEngine;

        return "Null";
    }
    public int getBlockSize()
    {
        org.spongycastle.crypto.engines.NullEngine r0;
        int i0;

        r0 := @this: org.spongycastle.crypto.engines.NullEngine;

        i0 = r0.<org.spongycastle.crypto.engines.NullEngine: int blockSize>;

        return i0;
    }
    public void init(boolean, org.spongycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.crypto.engines.NullEngine r0;
        boolean $z0;
        org.spongycastle.crypto.CipherParameters $r1;

        r0 := @this: org.spongycastle.crypto.engines.NullEngine;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.spongycastle.crypto.CipherParameters;

        r0.<org.spongycastle.crypto.engines.NullEngine: boolean initialised> = 1;

        return;
    }
    public int processBlock(byte[], int, byte[], int) throws org.spongycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        org.spongycastle.crypto.engines.NullEngine r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        org.spongycastle.crypto.DataLengthException $r4;
        org.spongycastle.crypto.OutputLengthException $r5;
        byte $b5;

        r0 := @this: org.spongycastle.crypto.engines.NullEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        $z0 = r0.<org.spongycastle.crypto.engines.NullEngine: boolean initialised>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Null engine not initialised");

        throw $r3;

     label1:
        $i2 = r0.<org.spongycastle.crypto.engines.NullEngine: int blockSize>;

        $i2 = $i2 + $i0;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label2;

        $r4 = new org.spongycastle.crypto.DataLengthException;

        specialinvoke $r4.<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r4;

     label2:
        $i2 = r0.<org.spongycastle.crypto.engines.NullEngine: int blockSize>;

        $i2 = $i2 + $i1;

        $i3 = lengthof $r2;

        if $i2 <= $i3 goto label3;

        $r5 = new org.spongycastle.crypto.OutputLengthException;

        specialinvoke $r5.<org.spongycastle.crypto.OutputLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r5;

     label3:
        $i2 = 0;

     label4:
        $i3 = r0.<org.spongycastle.crypto.engines.NullEngine: int blockSize>;

        if $i2 >= $i3 goto label5;

        $i3 = $i1 + $i2;

        $i4 = $i0 + $i2;

        $b5 = $r1[$i4];

        $r2[$i3] = $b5;

        $i2 = $i2 + 1;

        goto label4;

     label5:
        $i0 = r0.<org.spongycastle.crypto.engines.NullEngine: int blockSize>;

        return $i0;
    }
    public void reset()
    {
        org.spongycastle.crypto.engines.NullEngine r0;

        r0 := @this: org.spongycastle.crypto.engines.NullEngine;

        return;
    }
