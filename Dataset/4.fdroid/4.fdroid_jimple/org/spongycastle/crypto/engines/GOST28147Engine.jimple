org.spongycastle.crypto.engines.GOST28147Engine extends java.lang.Object implements org.spongycastle.crypto.BlockCipher
protected static final int BLOCK_SIZE
private static byte[] DSbox_A
private static byte[] DSbox_Test
private static byte[] ESbox_A
private static byte[] ESbox_B
private static byte[] ESbox_C
private static byte[] ESbox_D
private static byte[] ESbox_Test
private static byte[] Sbox_Default
private static java.util.Hashtable sBoxes
private byte[] S
private boolean forEncryption
private int[] workingKey
    static void <clinit>()
    {
        byte[] $r0;
        java.util.Hashtable $r1;

        $r0 = newarray (byte)[128];

        $r0[0] = 4;

        $r0[1] = 10;

        $r0[2] = 9;

        $r0[3] = 2;

        $r0[4] = 13;

        $r0[5] = 8;

        $r0[6] = 0;

        $r0[7] = 14;

        $r0[8] = 6;

        $r0[9] = 11;

        $r0[10] = 1;

        $r0[11] = 12;

        $r0[12] = 7;

        $r0[13] = 15;

        $r0[14] = 5;

        $r0[15] = 3;

        $r0[16] = 14;

        $r0[17] = 11;

        $r0[18] = 4;

        $r0[19] = 12;

        $r0[20] = 6;

        $r0[21] = 13;

        $r0[22] = 15;

        $r0[23] = 10;

        $r0[24] = 2;

        $r0[25] = 3;

        $r0[26] = 8;

        $r0[27] = 1;

        $r0[28] = 0;

        $r0[29] = 7;

        $r0[30] = 5;

        $r0[31] = 9;

        $r0[32] = 5;

        $r0[33] = 8;

        $r0[34] = 1;

        $r0[35] = 13;

        $r0[36] = 10;

        $r0[37] = 3;

        $r0[38] = 4;

        $r0[39] = 2;

        $r0[40] = 14;

        $r0[41] = 15;

        $r0[42] = 12;

        $r0[43] = 7;

        $r0[44] = 6;

        $r0[45] = 0;

        $r0[46] = 9;

        $r0[47] = 11;

        $r0[48] = 7;

        $r0[49] = 13;

        $r0[50] = 10;

        $r0[51] = 1;

        $r0[52] = 0;

        $r0[53] = 8;

        $r0[54] = 9;

        $r0[55] = 15;

        $r0[56] = 14;

        $r0[57] = 4;

        $r0[58] = 6;

        $r0[59] = 12;

        $r0[60] = 11;

        $r0[61] = 2;

        $r0[62] = 5;

        $r0[63] = 3;

        $r0[64] = 6;

        $r0[65] = 12;

        $r0[66] = 7;

        $r0[67] = 1;

        $r0[68] = 5;

        $r0[69] = 15;

        $r0[70] = 13;

        $r0[71] = 8;

        $r0[72] = 4;

        $r0[73] = 10;

        $r0[74] = 9;

        $r0[75] = 14;

        $r0[76] = 0;

        $r0[77] = 3;

        $r0[78] = 11;

        $r0[79] = 2;

        $r0[80] = 4;

        $r0[81] = 11;

        $r0[82] = 10;

        $r0[83] = 0;

        $r0[84] = 7;

        $r0[85] = 2;

        $r0[86] = 1;

        $r0[87] = 13;

        $r0[88] = 3;

        $r0[89] = 6;

        $r0[90] = 8;

        $r0[91] = 5;

        $r0[92] = 9;

        $r0[93] = 12;

        $r0[94] = 15;

        $r0[95] = 14;

        $r0[96] = 13;

        $r0[97] = 11;

        $r0[98] = 4;

        $r0[99] = 1;

        $r0[100] = 3;

        $r0[101] = 15;

        $r0[102] = 5;

        $r0[103] = 9;

        $r0[104] = 0;

        $r0[105] = 10;

        $r0[106] = 14;

        $r0[107] = 7;

        $r0[108] = 6;

        $r0[109] = 8;

        $r0[110] = 2;

        $r0[111] = 12;

        $r0[112] = 1;

        $r0[113] = 15;

        $r0[114] = 13;

        $r0[115] = 0;

        $r0[116] = 5;

        $r0[117] = 7;

        $r0[118] = 10;

        $r0[119] = 4;

        $r0[120] = 9;

        $r0[121] = 2;

        $r0[122] = 3;

        $r0[123] = 14;

        $r0[124] = 6;

        $r0[125] = 11;

        $r0[126] = 8;

        $r0[127] = 12;

        <org.spongycastle.crypto.engines.GOST28147Engine: byte[] Sbox_Default> = $r0;

        $r0 = newarray (byte)[128];

        $r0[0] = 4;

        $r0[1] = 2;

        $r0[2] = 15;

        $r0[3] = 5;

        $r0[4] = 9;

        $r0[5] = 1;

        $r0[6] = 0;

        $r0[7] = 8;

        $r0[8] = 14;

        $r0[9] = 3;

        $r0[10] = 11;

        $r0[11] = 12;

        $r0[12] = 13;

        $r0[13] = 7;

        $r0[14] = 10;

        $r0[15] = 6;

        $r0[16] = 12;

        $r0[17] = 9;

        $r0[18] = 15;

        $r0[19] = 14;

        $r0[20] = 8;

        $r0[21] = 1;

        $r0[22] = 3;

        $r0[23] = 10;

        $r0[24] = 2;

        $r0[25] = 7;

        $r0[26] = 4;

        $r0[27] = 13;

        $r0[28] = 6;

        $r0[29] = 0;

        $r0[30] = 11;

        $r0[31] = 5;

        $r0[32] = 13;

        $r0[33] = 8;

        $r0[34] = 14;

        $r0[35] = 12;

        $r0[36] = 7;

        $r0[37] = 3;

        $r0[38] = 9;

        $r0[39] = 10;

        $r0[40] = 1;

        $r0[41] = 5;

        $r0[42] = 2;

        $r0[43] = 4;

        $r0[44] = 6;

        $r0[45] = 15;

        $r0[46] = 0;

        $r0[47] = 11;

        $r0[48] = 14;

        $r0[49] = 9;

        $r0[50] = 11;

        $r0[51] = 2;

        $r0[52] = 5;

        $r0[53] = 15;

        $r0[54] = 7;

        $r0[55] = 1;

        $r0[56] = 0;

        $r0[57] = 13;

        $r0[58] = 12;

        $r0[59] = 6;

        $r0[60] = 10;

        $r0[61] = 4;

        $r0[62] = 3;

        $r0[63] = 8;

        $r0[64] = 3;

        $r0[65] = 14;

        $r0[66] = 5;

        $r0[67] = 9;

        $r0[68] = 6;

        $r0[69] = 8;

        $r0[70] = 0;

        $r0[71] = 13;

        $r0[72] = 10;

        $r0[73] = 11;

        $r0[74] = 7;

        $r0[75] = 12;

        $r0[76] = 2;

        $r0[77] = 1;

        $r0[78] = 15;

        $r0[79] = 4;

        $r0[80] = 8;

        $r0[81] = 15;

        $r0[82] = 6;

        $r0[83] = 11;

        $r0[84] = 1;

        $r0[85] = 9;

        $r0[86] = 12;

        $r0[87] = 5;

        $r0[88] = 13;

        $r0[89] = 3;

        $r0[90] = 7;

        $r0[91] = 10;

        $r0[92] = 0;

        $r0[93] = 14;

        $r0[94] = 2;

        $r0[95] = 4;

        $r0[96] = 9;

        $r0[97] = 11;

        $r0[98] = 12;

        $r0[99] = 0;

        $r0[100] = 3;

        $r0[101] = 6;

        $r0[102] = 7;

        $r0[103] = 5;

        $r0[104] = 4;

        $r0[105] = 8;

        $r0[106] = 14;

        $r0[107] = 15;

        $r0[108] = 1;

        $r0[109] = 10;

        $r0[110] = 2;

        $r0[111] = 13;

        $r0[112] = 12;

        $r0[113] = 6;

        $r0[114] = 5;

        $r0[115] = 2;

        $r0[116] = 11;

        $r0[117] = 0;

        $r0[118] = 9;

        $r0[119] = 13;

        $r0[120] = 3;

        $r0[121] = 14;

        $r0[122] = 7;

        $r0[123] = 10;

        $r0[124] = 15;

        $r0[125] = 4;

        $r0[126] = 1;

        $r0[127] = 8;

        <org.spongycastle.crypto.engines.GOST28147Engine: byte[] ESbox_Test> = $r0;

        $r0 = newarray (byte)[128];

        $r0[0] = 9;

        $r0[1] = 6;

        $r0[2] = 3;

        $r0[3] = 2;

        $r0[4] = 8;

        $r0[5] = 11;

        $r0[6] = 1;

        $r0[7] = 7;

        $r0[8] = 10;

        $r0[9] = 4;

        $r0[10] = 14;

        $r0[11] = 15;

        $r0[12] = 12;

        $r0[13] = 0;

        $r0[14] = 13;

        $r0[15] = 5;

        $r0[16] = 3;

        $r0[17] = 7;

        $r0[18] = 14;

        $r0[19] = 9;

        $r0[20] = 8;

        $r0[21] = 10;

        $r0[22] = 15;

        $r0[23] = 0;

        $r0[24] = 5;

        $r0[25] = 2;

        $r0[26] = 6;

        $r0[27] = 12;

        $r0[28] = 11;

        $r0[29] = 4;

        $r0[30] = 13;

        $r0[31] = 1;

        $r0[32] = 14;

        $r0[33] = 4;

        $r0[34] = 6;

        $r0[35] = 2;

        $r0[36] = 11;

        $r0[37] = 3;

        $r0[38] = 13;

        $r0[39] = 8;

        $r0[40] = 12;

        $r0[41] = 15;

        $r0[42] = 5;

        $r0[43] = 10;

        $r0[44] = 0;

        $r0[45] = 7;

        $r0[46] = 1;

        $r0[47] = 9;

        $r0[48] = 14;

        $r0[49] = 7;

        $r0[50] = 10;

        $r0[51] = 12;

        $r0[52] = 13;

        $r0[53] = 1;

        $r0[54] = 3;

        $r0[55] = 9;

        $r0[56] = 0;

        $r0[57] = 2;

        $r0[58] = 11;

        $r0[59] = 4;

        $r0[60] = 15;

        $r0[61] = 8;

        $r0[62] = 5;

        $r0[63] = 6;

        $r0[64] = 11;

        $r0[65] = 5;

        $r0[66] = 1;

        $r0[67] = 9;

        $r0[68] = 8;

        $r0[69] = 13;

        $r0[70] = 15;

        $r0[71] = 0;

        $r0[72] = 14;

        $r0[73] = 4;

        $r0[74] = 2;

        $r0[75] = 3;

        $r0[76] = 12;

        $r0[77] = 7;

        $r0[78] = 10;

        $r0[79] = 6;

        $r0[80] = 3;

        $r0[81] = 10;

        $r0[82] = 13;

        $r0[83] = 12;

        $r0[84] = 1;

        $r0[85] = 2;

        $r0[86] = 0;

        $r0[87] = 11;

        $r0[88] = 7;

        $r0[89] = 5;

        $r0[90] = 9;

        $r0[91] = 4;

        $r0[92] = 8;

        $r0[93] = 15;

        $r0[94] = 14;

        $r0[95] = 6;

        $r0[96] = 1;

        $r0[97] = 13;

        $r0[98] = 2;

        $r0[99] = 9;

        $r0[100] = 7;

        $r0[101] = 10;

        $r0[102] = 6;

        $r0[103] = 0;

        $r0[104] = 8;

        $r0[105] = 12;

        $r0[106] = 4;

        $r0[107] = 5;

        $r0[108] = 15;

        $r0[109] = 3;

        $r0[110] = 11;

        $r0[111] = 14;

        $r0[112] = 11;

        $r0[113] = 10;

        $r0[114] = 15;

        $r0[115] = 5;

        $r0[116] = 0;

        $r0[117] = 12;

        $r0[118] = 14;

        $r0[119] = 8;

        $r0[120] = 6;

        $r0[121] = 2;

        $r0[122] = 3;

        $r0[123] = 9;

        $r0[124] = 1;

        $r0[125] = 7;

        $r0[126] = 13;

        $r0[127] = 4;

        <org.spongycastle.crypto.engines.GOST28147Engine: byte[] ESbox_A> = $r0;

        $r0 = newarray (byte)[128];

        $r0[0] = 8;

        $r0[1] = 4;

        $r0[2] = 11;

        $r0[3] = 1;

        $r0[4] = 3;

        $r0[5] = 5;

        $r0[6] = 0;

        $r0[7] = 9;

        $r0[8] = 2;

        $r0[9] = 14;

        $r0[10] = 10;

        $r0[11] = 12;

        $r0[12] = 13;

        $r0[13] = 6;

        $r0[14] = 7;

        $r0[15] = 15;

        $r0[16] = 0;

        $r0[17] = 1;

        $r0[18] = 2;

        $r0[19] = 10;

        $r0[20] = 4;

        $r0[21] = 13;

        $r0[22] = 5;

        $r0[23] = 12;

        $r0[24] = 9;

        $r0[25] = 7;

        $r0[26] = 3;

        $r0[27] = 15;

        $r0[28] = 11;

        $r0[29] = 8;

        $r0[30] = 6;

        $r0[31] = 14;

        $r0[32] = 14;

        $r0[33] = 12;

        $r0[34] = 0;

        $r0[35] = 10;

        $r0[36] = 9;

        $r0[37] = 2;

        $r0[38] = 13;

        $r0[39] = 11;

        $r0[40] = 7;

        $r0[41] = 5;

        $r0[42] = 8;

        $r0[43] = 15;

        $r0[44] = 3;

        $r0[45] = 6;

        $r0[46] = 1;

        $r0[47] = 4;

        $r0[48] = 7;

        $r0[49] = 5;

        $r0[50] = 0;

        $r0[51] = 13;

        $r0[52] = 11;

        $r0[53] = 6;

        $r0[54] = 1;

        $r0[55] = 2;

        $r0[56] = 3;

        $r0[57] = 10;

        $r0[58] = 12;

        $r0[59] = 15;

        $r0[60] = 4;

        $r0[61] = 14;

        $r0[62] = 9;

        $r0[63] = 8;

        $r0[64] = 2;

        $r0[65] = 7;

        $r0[66] = 12;

        $r0[67] = 15;

        $r0[68] = 9;

        $r0[69] = 5;

        $r0[70] = 10;

        $r0[71] = 11;

        $r0[72] = 1;

        $r0[73] = 4;

        $r0[74] = 0;

        $r0[75] = 13;

        $r0[76] = 6;

        $r0[77] = 8;

        $r0[78] = 14;

        $r0[79] = 3;

        $r0[80] = 8;

        $r0[81] = 3;

        $r0[82] = 2;

        $r0[83] = 6;

        $r0[84] = 4;

        $r0[85] = 13;

        $r0[86] = 14;

        $r0[87] = 11;

        $r0[88] = 12;

        $r0[89] = 1;

        $r0[90] = 7;

        $r0[91] = 15;

        $r0[92] = 10;

        $r0[93] = 0;

        $r0[94] = 9;

        $r0[95] = 5;

        $r0[96] = 5;

        $r0[97] = 2;

        $r0[98] = 10;

        $r0[99] = 11;

        $r0[100] = 9;

        $r0[101] = 1;

        $r0[102] = 12;

        $r0[103] = 3;

        $r0[104] = 7;

        $r0[105] = 4;

        $r0[106] = 13;

        $r0[107] = 0;

        $r0[108] = 6;

        $r0[109] = 15;

        $r0[110] = 8;

        $r0[111] = 14;

        $r0[112] = 0;

        $r0[113] = 4;

        $r0[114] = 11;

        $r0[115] = 14;

        $r0[116] = 8;

        $r0[117] = 3;

        $r0[118] = 7;

        $r0[119] = 1;

        $r0[120] = 10;

        $r0[121] = 2;

        $r0[122] = 9;

        $r0[123] = 6;

        $r0[124] = 15;

        $r0[125] = 13;

        $r0[126] = 5;

        $r0[127] = 12;

        <org.spongycastle.crypto.engines.GOST28147Engine: byte[] ESbox_B> = $r0;

        $r0 = newarray (byte)[128];

        $r0[0] = 1;

        $r0[1] = 11;

        $r0[2] = 12;

        $r0[3] = 2;

        $r0[4] = 9;

        $r0[5] = 13;

        $r0[6] = 0;

        $r0[7] = 15;

        $r0[8] = 4;

        $r0[9] = 5;

        $r0[10] = 8;

        $r0[11] = 14;

        $r0[12] = 10;

        $r0[13] = 7;

        $r0[14] = 6;

        $r0[15] = 3;

        $r0[16] = 0;

        $r0[17] = 1;

        $r0[18] = 7;

        $r0[19] = 13;

        $r0[20] = 11;

        $r0[21] = 4;

        $r0[22] = 5;

        $r0[23] = 2;

        $r0[24] = 8;

        $r0[25] = 14;

        $r0[26] = 15;

        $r0[27] = 12;

        $r0[28] = 9;

        $r0[29] = 10;

        $r0[30] = 6;

        $r0[31] = 3;

        $r0[32] = 8;

        $r0[33] = 2;

        $r0[34] = 5;

        $r0[35] = 0;

        $r0[36] = 4;

        $r0[37] = 9;

        $r0[38] = 15;

        $r0[39] = 10;

        $r0[40] = 3;

        $r0[41] = 7;

        $r0[42] = 12;

        $r0[43] = 13;

        $r0[44] = 6;

        $r0[45] = 14;

        $r0[46] = 1;

        $r0[47] = 11;

        $r0[48] = 3;

        $r0[49] = 6;

        $r0[50] = 0;

        $r0[51] = 1;

        $r0[52] = 5;

        $r0[53] = 13;

        $r0[54] = 10;

        $r0[55] = 8;

        $r0[56] = 11;

        $r0[57] = 2;

        $r0[58] = 9;

        $r0[59] = 7;

        $r0[60] = 14;

        $r0[61] = 15;

        $r0[62] = 12;

        $r0[63] = 4;

        $r0[64] = 8;

        $r0[65] = 13;

        $r0[66] = 11;

        $r0[67] = 0;

        $r0[68] = 4;

        $r0[69] = 5;

        $r0[70] = 1;

        $r0[71] = 2;

        $r0[72] = 9;

        $r0[73] = 3;

        $r0[74] = 12;

        $r0[75] = 14;

        $r0[76] = 6;

        $r0[77] = 15;

        $r0[78] = 10;

        $r0[79] = 7;

        $r0[80] = 12;

        $r0[81] = 9;

        $r0[82] = 11;

        $r0[83] = 1;

        $r0[84] = 8;

        $r0[85] = 14;

        $r0[86] = 2;

        $r0[87] = 4;

        $r0[88] = 7;

        $r0[89] = 3;

        $r0[90] = 6;

        $r0[91] = 5;

        $r0[92] = 10;

        $r0[93] = 0;

        $r0[94] = 15;

        $r0[95] = 13;

        $r0[96] = 10;

        $r0[97] = 9;

        $r0[98] = 6;

        $r0[99] = 8;

        $r0[100] = 13;

        $r0[101] = 14;

        $r0[102] = 2;

        $r0[103] = 0;

        $r0[104] = 15;

        $r0[105] = 3;

        $r0[106] = 5;

        $r0[107] = 11;

        $r0[108] = 4;

        $r0[109] = 1;

        $r0[110] = 12;

        $r0[111] = 7;

        $r0[112] = 7;

        $r0[113] = 4;

        $r0[114] = 0;

        $r0[115] = 5;

        $r0[116] = 10;

        $r0[117] = 2;

        $r0[118] = 15;

        $r0[119] = 14;

        $r0[120] = 12;

        $r0[121] = 6;

        $r0[122] = 1;

        $r0[123] = 11;

        $r0[124] = 13;

        $r0[125] = 9;

        $r0[126] = 3;

        $r0[127] = 8;

        <org.spongycastle.crypto.engines.GOST28147Engine: byte[] ESbox_C> = $r0;

        $r0 = newarray (byte)[128];

        $r0[0] = 15;

        $r0[1] = 12;

        $r0[2] = 2;

        $r0[3] = 10;

        $r0[4] = 6;

        $r0[5] = 4;

        $r0[6] = 5;

        $r0[7] = 0;

        $r0[8] = 7;

        $r0[9] = 9;

        $r0[10] = 14;

        $r0[11] = 13;

        $r0[12] = 1;

        $r0[13] = 11;

        $r0[14] = 8;

        $r0[15] = 3;

        $r0[16] = 11;

        $r0[17] = 6;

        $r0[18] = 3;

        $r0[19] = 4;

        $r0[20] = 12;

        $r0[21] = 15;

        $r0[22] = 14;

        $r0[23] = 2;

        $r0[24] = 7;

        $r0[25] = 13;

        $r0[26] = 8;

        $r0[27] = 0;

        $r0[28] = 5;

        $r0[29] = 10;

        $r0[30] = 9;

        $r0[31] = 1;

        $r0[32] = 1;

        $r0[33] = 12;

        $r0[34] = 11;

        $r0[35] = 0;

        $r0[36] = 15;

        $r0[37] = 14;

        $r0[38] = 6;

        $r0[39] = 5;

        $r0[40] = 10;

        $r0[41] = 13;

        $r0[42] = 4;

        $r0[43] = 8;

        $r0[44] = 9;

        $r0[45] = 3;

        $r0[46] = 7;

        $r0[47] = 2;

        $r0[48] = 1;

        $r0[49] = 5;

        $r0[50] = 14;

        $r0[51] = 12;

        $r0[52] = 10;

        $r0[53] = 7;

        $r0[54] = 0;

        $r0[55] = 13;

        $r0[56] = 6;

        $r0[57] = 2;

        $r0[58] = 11;

        $r0[59] = 4;

        $r0[60] = 9;

        $r0[61] = 3;

        $r0[62] = 15;

        $r0[63] = 8;

        $r0[64] = 0;

        $r0[65] = 12;

        $r0[66] = 8;

        $r0[67] = 9;

        $r0[68] = 13;

        $r0[69] = 2;

        $r0[70] = 10;

        $r0[71] = 11;

        $r0[72] = 7;

        $r0[73] = 3;

        $r0[74] = 6;

        $r0[75] = 5;

        $r0[76] = 4;

        $r0[77] = 14;

        $r0[78] = 15;

        $r0[79] = 1;

        $r0[80] = 8;

        $r0[81] = 0;

        $r0[82] = 15;

        $r0[83] = 3;

        $r0[84] = 2;

        $r0[85] = 5;

        $r0[86] = 14;

        $r0[87] = 11;

        $r0[88] = 1;

        $r0[89] = 10;

        $r0[90] = 4;

        $r0[91] = 7;

        $r0[92] = 12;

        $r0[93] = 9;

        $r0[94] = 13;

        $r0[95] = 6;

        $r0[96] = 3;

        $r0[97] = 0;

        $r0[98] = 6;

        $r0[99] = 15;

        $r0[100] = 1;

        $r0[101] = 14;

        $r0[102] = 9;

        $r0[103] = 2;

        $r0[104] = 13;

        $r0[105] = 8;

        $r0[106] = 12;

        $r0[107] = 4;

        $r0[108] = 11;

        $r0[109] = 10;

        $r0[110] = 5;

        $r0[111] = 7;

        $r0[112] = 1;

        $r0[113] = 10;

        $r0[114] = 6;

        $r0[115] = 8;

        $r0[116] = 15;

        $r0[117] = 11;

        $r0[118] = 0;

        $r0[119] = 4;

        $r0[120] = 12;

        $r0[121] = 3;

        $r0[122] = 5;

        $r0[123] = 9;

        $r0[124] = 7;

        $r0[125] = 13;

        $r0[126] = 2;

        $r0[127] = 14;

        <org.spongycastle.crypto.engines.GOST28147Engine: byte[] ESbox_D> = $r0;

        $r0 = newarray (byte)[128];

        $r0[0] = 4;

        $r0[1] = 10;

        $r0[2] = 9;

        $r0[3] = 2;

        $r0[4] = 13;

        $r0[5] = 8;

        $r0[6] = 0;

        $r0[7] = 14;

        $r0[8] = 6;

        $r0[9] = 11;

        $r0[10] = 1;

        $r0[11] = 12;

        $r0[12] = 7;

        $r0[13] = 15;

        $r0[14] = 5;

        $r0[15] = 3;

        $r0[16] = 14;

        $r0[17] = 11;

        $r0[18] = 4;

        $r0[19] = 12;

        $r0[20] = 6;

        $r0[21] = 13;

        $r0[22] = 15;

        $r0[23] = 10;

        $r0[24] = 2;

        $r0[25] = 3;

        $r0[26] = 8;

        $r0[27] = 1;

        $r0[28] = 0;

        $r0[29] = 7;

        $r0[30] = 5;

        $r0[31] = 9;

        $r0[32] = 5;

        $r0[33] = 8;

        $r0[34] = 1;

        $r0[35] = 13;

        $r0[36] = 10;

        $r0[37] = 3;

        $r0[38] = 4;

        $r0[39] = 2;

        $r0[40] = 14;

        $r0[41] = 15;

        $r0[42] = 12;

        $r0[43] = 7;

        $r0[44] = 6;

        $r0[45] = 0;

        $r0[46] = 9;

        $r0[47] = 11;

        $r0[48] = 7;

        $r0[49] = 13;

        $r0[50] = 10;

        $r0[51] = 1;

        $r0[52] = 0;

        $r0[53] = 8;

        $r0[54] = 9;

        $r0[55] = 15;

        $r0[56] = 14;

        $r0[57] = 4;

        $r0[58] = 6;

        $r0[59] = 12;

        $r0[60] = 11;

        $r0[61] = 2;

        $r0[62] = 5;

        $r0[63] = 3;

        $r0[64] = 6;

        $r0[65] = 12;

        $r0[66] = 7;

        $r0[67] = 1;

        $r0[68] = 5;

        $r0[69] = 15;

        $r0[70] = 13;

        $r0[71] = 8;

        $r0[72] = 4;

        $r0[73] = 10;

        $r0[74] = 9;

        $r0[75] = 14;

        $r0[76] = 0;

        $r0[77] = 3;

        $r0[78] = 11;

        $r0[79] = 2;

        $r0[80] = 4;

        $r0[81] = 11;

        $r0[82] = 10;

        $r0[83] = 0;

        $r0[84] = 7;

        $r0[85] = 2;

        $r0[86] = 1;

        $r0[87] = 13;

        $r0[88] = 3;

        $r0[89] = 6;

        $r0[90] = 8;

        $r0[91] = 5;

        $r0[92] = 9;

        $r0[93] = 12;

        $r0[94] = 15;

        $r0[95] = 14;

        $r0[96] = 13;

        $r0[97] = 11;

        $r0[98] = 4;

        $r0[99] = 1;

        $r0[100] = 3;

        $r0[101] = 15;

        $r0[102] = 5;

        $r0[103] = 9;

        $r0[104] = 0;

        $r0[105] = 10;

        $r0[106] = 14;

        $r0[107] = 7;

        $r0[108] = 6;

        $r0[109] = 8;

        $r0[110] = 2;

        $r0[111] = 12;

        $r0[112] = 1;

        $r0[113] = 15;

        $r0[114] = 13;

        $r0[115] = 0;

        $r0[116] = 5;

        $r0[117] = 7;

        $r0[118] = 10;

        $r0[119] = 4;

        $r0[120] = 9;

        $r0[121] = 2;

        $r0[122] = 3;

        $r0[123] = 14;

        $r0[124] = 6;

        $r0[125] = 11;

        $r0[126] = 8;

        $r0[127] = 12;

        <org.spongycastle.crypto.engines.GOST28147Engine: byte[] DSbox_Test> = $r0;

        $r0 = newarray (byte)[128];

        $r0[0] = 10;

        $r0[1] = 4;

        $r0[2] = 5;

        $r0[3] = 6;

        $r0[4] = 8;

        $r0[5] = 1;

        $r0[6] = 3;

        $r0[7] = 7;

        $r0[8] = 13;

        $r0[9] = 12;

        $r0[10] = 14;

        $r0[11] = 0;

        $r0[12] = 9;

        $r0[13] = 2;

        $r0[14] = 11;

        $r0[15] = 15;

        $r0[16] = 5;

        $r0[17] = 15;

        $r0[18] = 4;

        $r0[19] = 0;

        $r0[20] = 2;

        $r0[21] = 13;

        $r0[22] = 11;

        $r0[23] = 9;

        $r0[24] = 1;

        $r0[25] = 7;

        $r0[26] = 6;

        $r0[27] = 3;

        $r0[28] = 12;

        $r0[29] = 14;

        $r0[30] = 10;

        $r0[31] = 8;

        $r0[32] = 7;

        $r0[33] = 15;

        $r0[34] = 12;

        $r0[35] = 14;

        $r0[36] = 9;

        $r0[37] = 4;

        $r0[38] = 1;

        $r0[39] = 0;

        $r0[40] = 3;

        $r0[41] = 11;

        $r0[42] = 5;

        $r0[43] = 2;

        $r0[44] = 6;

        $r0[45] = 10;

        $r0[46] = 8;

        $r0[47] = 13;

        $r0[48] = 4;

        $r0[49] = 10;

        $r0[50] = 7;

        $r0[51] = 12;

        $r0[52] = 0;

        $r0[53] = 15;

        $r0[54] = 2;

        $r0[55] = 8;

        $r0[56] = 14;

        $r0[57] = 1;

        $r0[58] = 6;

        $r0[59] = 5;

        $r0[60] = 13;

        $r0[61] = 11;

        $r0[62] = 9;

        $r0[63] = 3;

        $r0[64] = 7;

        $r0[65] = 6;

        $r0[66] = 4;

        $r0[67] = 11;

        $r0[68] = 9;

        $r0[69] = 12;

        $r0[70] = 2;

        $r0[71] = 10;

        $r0[72] = 1;

        $r0[73] = 8;

        $r0[74] = 0;

        $r0[75] = 14;

        $r0[76] = 15;

        $r0[77] = 13;

        $r0[78] = 3;

        $r0[79] = 5;

        $r0[80] = 7;

        $r0[81] = 6;

        $r0[82] = 2;

        $r0[83] = 4;

        $r0[84] = 13;

        $r0[85] = 9;

        $r0[86] = 15;

        $r0[87] = 0;

        $r0[88] = 10;

        $r0[89] = 1;

        $r0[90] = 5;

        $r0[91] = 11;

        $r0[92] = 8;

        $r0[93] = 14;

        $r0[94] = 12;

        $r0[95] = 3;

        $r0[96] = 13;

        $r0[97] = 14;

        $r0[98] = 4;

        $r0[99] = 1;

        $r0[100] = 7;

        $r0[101] = 0;

        $r0[102] = 5;

        $r0[103] = 10;

        $r0[104] = 3;

        $r0[105] = 12;

        $r0[106] = 8;

        $r0[107] = 15;

        $r0[108] = 6;

        $r0[109] = 2;

        $r0[110] = 9;

        $r0[111] = 11;

        $r0[112] = 1;

        $r0[113] = 3;

        $r0[114] = 10;

        $r0[115] = 9;

        $r0[116] = 5;

        $r0[117] = 11;

        $r0[118] = 4;

        $r0[119] = 15;

        $r0[120] = 8;

        $r0[121] = 6;

        $r0[122] = 7;

        $r0[123] = 14;

        $r0[124] = 13;

        $r0[125] = 0;

        $r0[126] = 2;

        $r0[127] = 12;

        <org.spongycastle.crypto.engines.GOST28147Engine: byte[] DSbox_A> = $r0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        <org.spongycastle.crypto.engines.GOST28147Engine: java.util.Hashtable sBoxes> = $r1;

        $r0 = <org.spongycastle.crypto.engines.GOST28147Engine: byte[] Sbox_Default>;

        staticinvoke <org.spongycastle.crypto.engines.GOST28147Engine: void addSBox(java.lang.String,byte[])>("Default", $r0);

        $r0 = <org.spongycastle.crypto.engines.GOST28147Engine: byte[] ESbox_Test>;

        staticinvoke <org.spongycastle.crypto.engines.GOST28147Engine: void addSBox(java.lang.String,byte[])>("E-TEST", $r0);

        $r0 = <org.spongycastle.crypto.engines.GOST28147Engine: byte[] ESbox_A>;

        staticinvoke <org.spongycastle.crypto.engines.GOST28147Engine: void addSBox(java.lang.String,byte[])>("E-A", $r0);

        $r0 = <org.spongycastle.crypto.engines.GOST28147Engine: byte[] ESbox_B>;

        staticinvoke <org.spongycastle.crypto.engines.GOST28147Engine: void addSBox(java.lang.String,byte[])>("E-B", $r0);

        $r0 = <org.spongycastle.crypto.engines.GOST28147Engine: byte[] ESbox_C>;

        staticinvoke <org.spongycastle.crypto.engines.GOST28147Engine: void addSBox(java.lang.String,byte[])>("E-C", $r0);

        $r0 = <org.spongycastle.crypto.engines.GOST28147Engine: byte[] ESbox_D>;

        staticinvoke <org.spongycastle.crypto.engines.GOST28147Engine: void addSBox(java.lang.String,byte[])>("E-D", $r0);

        $r0 = <org.spongycastle.crypto.engines.GOST28147Engine: byte[] DSbox_Test>;

        staticinvoke <org.spongycastle.crypto.engines.GOST28147Engine: void addSBox(java.lang.String,byte[])>("D-TEST", $r0);

        $r0 = <org.spongycastle.crypto.engines.GOST28147Engine: byte[] DSbox_A>;

        staticinvoke <org.spongycastle.crypto.engines.GOST28147Engine: void addSBox(java.lang.String,byte[])>("D-A", $r0);

        return;
    }
    public void <init>()
    {
        org.spongycastle.crypto.engines.GOST28147Engine r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.crypto.engines.GOST28147Engine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.engines.GOST28147Engine: int[] workingKey> = null;

        $r1 = <org.spongycastle.crypto.engines.GOST28147Engine: byte[] Sbox_Default>;

        r0.<org.spongycastle.crypto.engines.GOST28147Engine: byte[] S> = $r1;

        return;
    }
    private void GOST28147Func(int[], byte[], int, byte[], int)
    {
        org.spongycastle.crypto.engines.GOST28147Engine r0;
        int[] $r1;
        byte[] $r2, $r3;
        int $i0, $i1, $i2, i3, i4, i5, $i6;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.engines.GOST28147Engine;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $r3 := @parameter3: byte[];

        $i1 := @parameter4: int;

        $i2 = specialinvoke r0.<org.spongycastle.crypto.engines.GOST28147Engine: int bytesToint(byte[],int)>($r2, $i0);

        $i0 = $i0 + 4;

        $i0 = specialinvoke r0.<org.spongycastle.crypto.engines.GOST28147Engine: int bytesToint(byte[],int)>($r2, $i0);

        $z0 = r0.<org.spongycastle.crypto.engines.GOST28147Engine: boolean forEncryption>;

        if $z0 == 0 goto label06;

        i3 = 0;

     label01:
        if i3 >= 3 goto label04;

        i4 = 0;

     label02:
        if i4 >= 8 goto label03;

        i5 = $i2;

        $i6 = $r1[i4];

        $i2 = specialinvoke r0.<org.spongycastle.crypto.engines.GOST28147Engine: int GOST28147_mainStep(int,int)>($i2, $i6);

        $i2 = $i0 ^ $i2;

        $i0 = i5;

        i4 = i4 + 1;

        goto label02;

     label03:
        i3 = i3 + 1;

        goto label01;

     label04:
        i3 = 7;

     label05:
        if i3 <= 0 goto label13;

        i4 = $i2;

        i5 = $r1[i3];

        $i2 = specialinvoke r0.<org.spongycastle.crypto.engines.GOST28147Engine: int GOST28147_mainStep(int,int)>($i2, i5);

        $i2 = $i0 ^ $i2;

        $i0 = i4;

        i3 = i3 + -1;

        goto label05;

     label06:
        i3 = 0;

     label07:
        if i3 >= 8 goto label08;

        i4 = $i2;

        i5 = $r1[i3];

        $i2 = specialinvoke r0.<org.spongycastle.crypto.engines.GOST28147Engine: int GOST28147_mainStep(int,int)>($i2, i5);

        $i2 = $i0 ^ $i2;

        $i0 = i4;

        i3 = i3 + 1;

        goto label07;

     label08:
        i3 = 0;

     label09:
        if i3 >= 3 goto label13;

        i4 = 7;

     label10:
        if i4 < 0 goto label11;

        if i3 != 2 goto label12;

        if i4 != 0 goto label12;

     label11:
        i3 = i3 + 1;

        goto label09;

     label12:
        i5 = $i2;

        $i6 = $r1[i4];

        $i2 = specialinvoke r0.<org.spongycastle.crypto.engines.GOST28147Engine: int GOST28147_mainStep(int,int)>($i2, $i6);

        $i2 = $i0 ^ $i2;

        $i0 = i5;

        i4 = i4 + -1;

        goto label10;

     label13:
        i3 = $r1[0];

        i3 = specialinvoke r0.<org.spongycastle.crypto.engines.GOST28147Engine: int GOST28147_mainStep(int,int)>($i2, i3);

        $i0 = $i0 ^ i3;

        specialinvoke r0.<org.spongycastle.crypto.engines.GOST28147Engine: void intTobytes(int,byte[],int)>($i2, $r3, $i1);

        $i1 = $i1 + 4;

        specialinvoke r0.<org.spongycastle.crypto.engines.GOST28147Engine: void intTobytes(int,byte[],int)>($i0, $r3, $i1);

        return;
    }
    private int GOST28147_mainStep(int, int)
    {
        org.spongycastle.crypto.engines.GOST28147Engine r0;
        int $i0, $i1, $i3;
        byte[] $r1;
        byte $b2;

        r0 := @this: org.spongycastle.crypto.engines.GOST28147Engine;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i1 + $i0;

        $r1 = r0.<org.spongycastle.crypto.engines.GOST28147Engine: byte[] S>;

        $i1 = $i0 >> 0;

        $i1 = $i1 & 15;

        $b2 = $r1[$i1];

        $i1 = $b2 << 0;

        $r1 = r0.<org.spongycastle.crypto.engines.GOST28147Engine: byte[] S>;

        $i3 = $i0 >> 4;

        $i3 = $i3 & 15;

        $i3 = $i3 + 16;

        $b2 = $r1[$i3];

        $i3 = $b2 << 4;

        $i1 = $i1 + $i3;

        $r1 = r0.<org.spongycastle.crypto.engines.GOST28147Engine: byte[] S>;

        $i3 = $i0 >> 8;

        $i3 = $i3 & 15;

        $i3 = $i3 + 32;

        $b2 = $r1[$i3];

        $i3 = $b2 << 8;

        $i1 = $i1 + $i3;

        $r1 = r0.<org.spongycastle.crypto.engines.GOST28147Engine: byte[] S>;

        $i3 = $i0 >> 12;

        $i3 = $i3 & 15;

        $i3 = $i3 + 48;

        $b2 = $r1[$i3];

        $i3 = $b2 << 12;

        $i1 = $i1 + $i3;

        $r1 = r0.<org.spongycastle.crypto.engines.GOST28147Engine: byte[] S>;

        $i3 = $i0 >> 16;

        $i3 = $i3 & 15;

        $i3 = $i3 + 64;

        $b2 = $r1[$i3];

        $i3 = $b2 << 16;

        $i1 = $i1 + $i3;

        $r1 = r0.<org.spongycastle.crypto.engines.GOST28147Engine: byte[] S>;

        $i3 = $i0 >> 20;

        $i3 = $i3 & 15;

        $i3 = $i3 + 80;

        $b2 = $r1[$i3];

        $i3 = $b2 << 20;

        $i1 = $i1 + $i3;

        $r1 = r0.<org.spongycastle.crypto.engines.GOST28147Engine: byte[] S>;

        $i3 = $i0 >> 24;

        $i3 = $i3 & 15;

        $i3 = $i3 + 96;

        $b2 = $r1[$i3];

        $i3 = $b2 << 24;

        $i1 = $i1 + $i3;

        $r1 = r0.<org.spongycastle.crypto.engines.GOST28147Engine: byte[] S>;

        $i0 = $i0 >> 28;

        $i0 = $i0 & 15;

        $i0 = $i0 + 112;

        $b2 = $r1[$i0];

        $i0 = $b2 << 28;

        $i1 = $i1 + $i0;

        $i0 = $i1 << 11;

        $i1 = $i1 >>> 21;

        $i0 = $i0 | $i1;

        return $i0;
    }
    private static void addSBox(java.lang.String, byte[])
    {
        java.lang.String $r0;
        byte[] $r1;
        java.util.Hashtable $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 = <org.spongycastle.crypto.engines.GOST28147Engine: java.util.Hashtable sBoxes>;

        $r0 = staticinvoke <org.spongycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>($r0);

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r1);

        return;
    }
    private int bytesToint(byte[], int)
    {
        org.spongycastle.crypto.engines.GOST28147Engine r0;
        byte[] $r1;
        int $i0, $i1, $i3;
        byte $b2;

        r0 := @this: org.spongycastle.crypto.engines.GOST28147Engine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = $i0 + 3;

        $b2 = $r1[$i1];

        $i1 = $b2 << 24;

        $i1 = $i1 & -16777216;

        $i3 = $i0 + 2;

        $b2 = $r1[$i3];

        $i3 = $b2 << 16;

        $i3 = $i3 & 16711680;

        $i1 = $i1 + $i3;

        $i3 = $i0 + 1;

        $b2 = $r1[$i3];

        $i3 = $b2 << 8;

        $i3 = $i3 & 65280;

        $i1 = $i1 + $i3;

        $b2 = $r1[$i0];

        $i0 = $b2 & 255;

        $i0 = $i1 + $i0;

        return $i0;
    }
    private int[] generateWorkingKey(boolean, byte[])
    {
        org.spongycastle.crypto.engines.GOST28147Engine r0;
        boolean $z0;
        byte[] $r1;
        int[] r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.spongycastle.crypto.engines.GOST28147Engine;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: byte[];

        r0.<org.spongycastle.crypto.engines.GOST28147Engine: boolean forEncryption> = $z0;

        $i1 = lengthof $r1;

        if $i1 == 32 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key length invalid. Key needs to be 32 byte - 256 bit!!!");

        throw $r3;

     label1:
        r2 = newarray (int)[8];

        $i1 = 0;

     label2:
        if $i1 == 8 goto label3;

        $i0 = $i1 * 4;

        $i0 = specialinvoke r0.<org.spongycastle.crypto.engines.GOST28147Engine: int bytesToint(byte[],int)>($r1, $i0);

        r2[$i1] = $i0;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return r2;
    }
    public static byte[] getSBox(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Hashtable $r1;
        java.lang.Object $r2;
        byte[] $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = <org.spongycastle.crypto.engines.GOST28147Engine: java.util.Hashtable sBoxes>;

        $r0 = staticinvoke <org.spongycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r0);

        $r3 = (byte[]) $r2;

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown S-Box - possible types: \"Default\", \"E-Test\", \"E-A\", \"E-B\", \"E-C\", \"E-D\", \"D-Test\", \"D-A\".");

        throw $r4;

     label1:
        $r3 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r3);

        return $r3;
    }
    private void intTobytes(int, byte[], int)
    {
        org.spongycastle.crypto.engines.GOST28147Engine r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;

        r0 := @this: org.spongycastle.crypto.engines.GOST28147Engine;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $i2 = $i1 + 3;

        $i3 = $i0 >>> 24;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $i2 = $i1 + 2;

        $i3 = $i0 >>> 16;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $i2 = $i1 + 1;

        $i3 = $i0 >>> 8;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $b4 = (byte) $i0;

        $r1[$i1] = $b4;

        return;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.engines.GOST28147Engine r0;

        r0 := @this: org.spongycastle.crypto.engines.GOST28147Engine;

        return "GOST28147";
    }
    public int getBlockSize()
    {
        org.spongycastle.crypto.engines.GOST28147Engine r0;

        r0 := @this: org.spongycastle.crypto.engines.GOST28147Engine;

        return 8;
    }
    public void init(boolean, org.spongycastle.crypto.CipherParameters)
    {
        org.spongycastle.crypto.engines.GOST28147Engine r0;
        boolean $z0, $z1;
        org.spongycastle.crypto.CipherParameters r1;
        org.spongycastle.crypto.params.ParametersWithSBox r2;
        byte[] $r3, $r4;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r5;
        org.spongycastle.crypto.params.KeyParameter $r6;
        int[] $r7;
        java.lang.StringBuilder $r8;
        java.lang.Class $r9;
        java.lang.String $r10;

        r0 := @this: org.spongycastle.crypto.engines.GOST28147Engine;

        $z0 := @parameter0: boolean;

        r1 := @parameter1: org.spongycastle.crypto.CipherParameters;

        $z1 = r1 instanceof org.spongycastle.crypto.params.ParametersWithSBox;

        if $z1 == 0 goto label2;

        r2 = (org.spongycastle.crypto.params.ParametersWithSBox) r1;

        $r3 = virtualinvoke r2.<org.spongycastle.crypto.params.ParametersWithSBox: byte[] getSBox()>();

        $i0 = lengthof $r3;

        $r4 = <org.spongycastle.crypto.engines.GOST28147Engine: byte[] Sbox_Default>;

        $i1 = lengthof $r4;

        if $i0 == $i1 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid S-box passed to GOST28147 init");

        throw $r5;

     label1:
        $r3 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r3);

        r0.<org.spongycastle.crypto.engines.GOST28147Engine: byte[] S> = $r3;

        r1 = virtualinvoke r2.<org.spongycastle.crypto.params.ParametersWithSBox: org.spongycastle.crypto.CipherParameters getParameters()>();

        if r1 == null goto label4;

        r1 = virtualinvoke r2.<org.spongycastle.crypto.params.ParametersWithSBox: org.spongycastle.crypto.CipherParameters getParameters()>();

        $r6 = (org.spongycastle.crypto.params.KeyParameter) r1;

        $r3 = virtualinvoke $r6.<org.spongycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $r7 = specialinvoke r0.<org.spongycastle.crypto.engines.GOST28147Engine: int[] generateWorkingKey(boolean,byte[])>($z0, $r3);

        r0.<org.spongycastle.crypto.engines.GOST28147Engine: int[] workingKey> = $r7;

        return;

     label2:
        $z1 = r1 instanceof org.spongycastle.crypto.params.KeyParameter;

        if $z1 == 0 goto label3;

        $r6 = (org.spongycastle.crypto.params.KeyParameter) r1;

        $r3 = virtualinvoke $r6.<org.spongycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $r7 = specialinvoke r0.<org.spongycastle.crypto.engines.GOST28147Engine: int[] generateWorkingKey(boolean,byte[])>($z0, $r3);

        r0.<org.spongycastle.crypto.engines.GOST28147Engine: int[] workingKey> = $r7;

        return;

     label3:
        if r1 == null goto label4;

        $r5 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid parameter passed to GOST28147 init - ");

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label4:
        return;
    }
    public int processBlock(byte[], int, byte[], int)
    {
        org.spongycastle.crypto.engines.GOST28147Engine r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3;
        int[] $r3;
        java.lang.IllegalStateException $r4;
        org.spongycastle.crypto.DataLengthException $r5;
        org.spongycastle.crypto.OutputLengthException $r6;

        r0 := @this: org.spongycastle.crypto.engines.GOST28147Engine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        $r3 = r0.<org.spongycastle.crypto.engines.GOST28147Engine: int[] workingKey>;

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("GOST28147 engine not initialised");

        throw $r4;

     label1:
        $i2 = $i0 + 8;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label2;

        $r5 = new org.spongycastle.crypto.DataLengthException;

        specialinvoke $r5.<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r5;

     label2:
        $i2 = $i1 + 8;

        $i3 = lengthof $r2;

        if $i2 <= $i3 goto label3;

        $r6 = new org.spongycastle.crypto.OutputLengthException;

        specialinvoke $r6.<org.spongycastle.crypto.OutputLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r6;

     label3:
        $r3 = r0.<org.spongycastle.crypto.engines.GOST28147Engine: int[] workingKey>;

        specialinvoke r0.<org.spongycastle.crypto.engines.GOST28147Engine: void GOST28147Func(int[],byte[],int,byte[],int)>($r3, $r1, $i0, $r2, $i1);

        return 8;
    }
    public void reset()
    {
        org.spongycastle.crypto.engines.GOST28147Engine r0;

        r0 := @this: org.spongycastle.crypto.engines.GOST28147Engine;

        return;
    }
