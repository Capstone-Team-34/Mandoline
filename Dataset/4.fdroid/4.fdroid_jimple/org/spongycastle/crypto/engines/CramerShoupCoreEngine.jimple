org.spongycastle.crypto.engines.CramerShoupCoreEngine extends java.lang.Object
private static final java.math.BigInteger ONE
private boolean forEncryption
private org.spongycastle.crypto.params.CramerShoupKeyParameters key
private java.lang.String label
private java.security.SecureRandom random
    static void <clinit>()
    {
        java.math.BigInteger $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        <org.spongycastle.crypto.engines.CramerShoupCoreEngine: java.math.BigInteger ONE> = $r0;

        return;
    }
    public void <init>()
    {
        org.spongycastle.crypto.engines.CramerShoupCoreEngine r0;

        r0 := @this: org.spongycastle.crypto.engines.CramerShoupCoreEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: java.lang.String label> = null;

        return;
    }
    private java.math.BigInteger generateRandomElement(java.math.BigInteger, java.security.SecureRandom)
    {
        org.spongycastle.crypto.engines.CramerShoupCoreEngine r0;
        java.math.BigInteger $r1, $r3, $r4;
        java.security.SecureRandom $r2;

        r0 := @this: org.spongycastle.crypto.engines.CramerShoupCoreEngine;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.security.SecureRandom;

        $r3 = <org.spongycastle.crypto.engines.CramerShoupCoreEngine: java.math.BigInteger ONE>;

        $r4 = <org.spongycastle.crypto.engines.CramerShoupCoreEngine: java.math.BigInteger ONE>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r4);

        $r1 = staticinvoke <org.spongycastle.util.BigIntegers: java.math.BigInteger createRandomInRange(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>($r3, $r1, $r2);

        return $r1;
    }
    private boolean isValidMessage(java.math.BigInteger, java.math.BigInteger)
    {
        org.spongycastle.crypto.engines.CramerShoupCoreEngine r0;
        java.math.BigInteger $r1, $r2;
        int $i0;

        r0 := @this: org.spongycastle.crypto.engines.CramerShoupCoreEngine;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r2);

        if $i0 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.math.BigInteger convertInput(byte[], int, int)
    {
        org.spongycastle.crypto.engines.CramerShoupCoreEngine r0;
        byte[] $r1, r4;
        int $i0, $i1, $i2;
        java.math.BigInteger r2, $r7;
        org.spongycastle.crypto.DataLengthException $r3;
        boolean $z0;
        org.spongycastle.crypto.params.CramerShoupKeyParameters $r5;
        org.spongycastle.crypto.params.CramerShoupParameters $r6;

        r0 := @this: org.spongycastle.crypto.engines.CramerShoupCoreEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: int getInputBlockSize()>();

        $i2 = $i2 + 1;

        if $i1 <= $i2 goto label1;

        $r3 = new org.spongycastle.crypto.DataLengthException;

        specialinvoke $r3.<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input too large for Cramer Shoup cipher.");

        throw $r3;

     label1:
        $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: int getInputBlockSize()>();

        $i2 = $i2 + 1;

        if $i1 != $i2 goto label2;

        $z0 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: boolean forEncryption>;

        if $z0 == 0 goto label2;

        $r3 = new org.spongycastle.crypto.DataLengthException;

        specialinvoke $r3.<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input too large for Cramer Shoup cipher.");

        throw $r3;

     label2:
        if $i0 != 0 goto label3;

        $i2 = lengthof $r1;

        if $i1 == $i2 goto label5;

     label3:
        r4 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, r4, 0, $i1);

     label4:
        r2 = new java.math.BigInteger;

        specialinvoke r2.<java.math.BigInteger: void <init>(int,byte[])>(1, r4);

        $r5 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: org.spongycastle.crypto.params.CramerShoupKeyParameters key>;

        $r6 = virtualinvoke $r5.<org.spongycastle.crypto.params.CramerShoupKeyParameters: org.spongycastle.crypto.params.CramerShoupParameters getParameters()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.crypto.params.CramerShoupParameters: java.math.BigInteger getP()>();

        $i0 = virtualinvoke r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r7);

        if $i0 < 0 goto label6;

        $r3 = new org.spongycastle.crypto.DataLengthException;

        specialinvoke $r3.<org.spongycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input too large for Cramer Shoup cipher.");

        throw $r3;

     label5:
        r4 = $r1;

        goto label4;

     label6:
        return r2;
    }
    public byte[] convertOutput(java.math.BigInteger)
    {
        org.spongycastle.crypto.engines.CramerShoupCoreEngine r0;
        java.math.BigInteger $r1;
        byte[] $r2, r3;
        boolean $z0;
        byte $b0;
        int $i1, $i2;

        r0 := @this: org.spongycastle.crypto.engines.CramerShoupCoreEngine;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 = virtualinvoke $r1.<java.math.BigInteger: byte[] toByteArray()>();

        $z0 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: boolean forEncryption>;

        if $z0 != 0 goto label2;

        $b0 = $r2[0];

        if $b0 != 0 goto label1;

        $i1 = lengthof $r2;

        $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: int getOutputBlockSize()>();

        if $i1 <= $i2 goto label1;

        $i1 = lengthof $r2;

        $i1 = $i1 + -1;

        r3 = newarray (byte)[$i1];

        $i1 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 1, r3, 0, $i1);

        return r3;

     label1:
        $i1 = lengthof $r2;

        $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: int getOutputBlockSize()>();

        if $i1 >= $i2 goto label3;

        $i1 = virtualinvoke r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: int getOutputBlockSize()>();

        r3 = newarray (byte)[$i1];

        $i1 = lengthof r3;

        $i2 = lengthof $r2;

        $i1 = $i1 - $i2;

        $i2 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r3, $i1, $i2);

        return r3;

     label2:
        $b0 = $r2[0];

        if $b0 != 0 goto label3;

        $i1 = lengthof $r2;

        $i1 = $i1 + -1;

        r3 = newarray (byte)[$i1];

        $i1 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 1, r3, 0, $i1);

        return r3;

     label3:
        return $r2;
    }
    public java.math.BigInteger decryptBlock(org.spongycastle.crypto.engines.CramerShoupCiphertext) throws org.spongycastle.crypto.engines.CramerShoupCoreEngine$CramerShoupCiphertextException
    {
        org.spongycastle.crypto.engines.CramerShoupCoreEngine r0;
        org.spongycastle.crypto.engines.CramerShoupCiphertext $r1;
        java.math.BigInteger r2, $r7, $r10, $r11, $r12, $r13;
        byte[] r3;
        org.spongycastle.crypto.params.CramerShoupKeyParameters $r4;
        boolean $z0;
        org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters r5;
        org.spongycastle.crypto.params.CramerShoupParameters $r6;
        org.spongycastle.crypto.Digest $r8;
        int $i0;
        java.lang.String $r9;
        org.spongycastle.crypto.engines.CramerShoupCoreEngine$CramerShoupCiphertextException $r14;

        r0 := @this: org.spongycastle.crypto.engines.CramerShoupCoreEngine;

        $r1 := @parameter0: org.spongycastle.crypto.engines.CramerShoupCiphertext;

        $r4 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: org.spongycastle.crypto.params.CramerShoupKeyParameters key>;

        $z0 = virtualinvoke $r4.<org.spongycastle.crypto.params.CramerShoupKeyParameters: boolean isPrivate()>();

        if $z0 == 0 goto label3;

        $z0 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: boolean forEncryption>;

        if $z0 != 0 goto label3;

        $r4 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: org.spongycastle.crypto.params.CramerShoupKeyParameters key>;

        $z0 = $r4 instanceof org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters;

        if $z0 == 0 goto label3;

        $r4 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: org.spongycastle.crypto.params.CramerShoupKeyParameters key>;

        r5 = (org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters) $r4;

        $r6 = virtualinvoke r5.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: org.spongycastle.crypto.params.CramerShoupParameters getParameters()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.crypto.params.CramerShoupParameters: java.math.BigInteger getP()>();

        $r6 = virtualinvoke r5.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: org.spongycastle.crypto.params.CramerShoupParameters getParameters()>();

        $r8 = virtualinvoke $r6.<org.spongycastle.crypto.params.CramerShoupParameters: org.spongycastle.crypto.Digest getH()>();

        r2 = virtualinvoke $r1.<org.spongycastle.crypto.engines.CramerShoupCiphertext: java.math.BigInteger getU1()>();

        r3 = virtualinvoke r2.<java.math.BigInteger: byte[] toByteArray()>();

        $i0 = lengthof r3;

        interfaceinvoke $r8.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i0);

        r2 = virtualinvoke $r1.<org.spongycastle.crypto.engines.CramerShoupCiphertext: java.math.BigInteger getU2()>();

        r3 = virtualinvoke r2.<java.math.BigInteger: byte[] toByteArray()>();

        $i0 = lengthof r3;

        interfaceinvoke $r8.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i0);

        r2 = virtualinvoke $r1.<org.spongycastle.crypto.engines.CramerShoupCiphertext: java.math.BigInteger getE()>();

        r3 = virtualinvoke r2.<java.math.BigInteger: byte[] toByteArray()>();

        $i0 = lengthof r3;

        interfaceinvoke $r8.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i0);

        $r9 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: java.lang.String label>;

        if $r9 == null goto label1;

        $r9 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: java.lang.String label>;

        r3 = virtualinvoke $r9.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof r3;

        interfaceinvoke $r8.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i0);

     label1:
        $i0 = interfaceinvoke $r8.<org.spongycastle.crypto.Digest: int getDigestSize()>();

        r3 = newarray (byte)[$i0];

        interfaceinvoke $r8.<org.spongycastle.crypto.Digest: int doFinal(byte[],int)>(r3, 0);

        r2 = new java.math.BigInteger;

        specialinvoke r2.<java.math.BigInteger: void <init>(int,byte[])>(1, r3);

        $r10 = $r1.<org.spongycastle.crypto.engines.CramerShoupCiphertext: java.math.BigInteger u1>;

        $r11 = virtualinvoke r5.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: java.math.BigInteger getX1()>();

        $r12 = virtualinvoke r5.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: java.math.BigInteger getY1()>();

        $r12 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r2);

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r12);

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r11, $r7);

        $r11 = $r1.<org.spongycastle.crypto.engines.CramerShoupCiphertext: java.math.BigInteger u2>;

        $r12 = virtualinvoke r5.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: java.math.BigInteger getX2()>();

        $r13 = virtualinvoke r5.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: java.math.BigInteger getY2()>();

        r2 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r2);

        r2 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>(r2);

        r2 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r2, $r7);

        r2 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r2);

        r2 = virtualinvoke r2.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r7);

        $r10 = $r1.<org.spongycastle.crypto.engines.CramerShoupCiphertext: java.math.BigInteger v>;

        $z0 = virtualinvoke $r10.<java.math.BigInteger: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        r2 = $r1.<org.spongycastle.crypto.engines.CramerShoupCiphertext: java.math.BigInteger e>;

        $r10 = $r1.<org.spongycastle.crypto.engines.CramerShoupCiphertext: java.math.BigInteger u1>;

        $r11 = virtualinvoke r5.<org.spongycastle.crypto.params.CramerShoupPrivateKeyParameters: java.math.BigInteger getZ()>();

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r11, $r7);

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>($r7);

        r2 = virtualinvoke r2.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r10);

        $r7 = virtualinvoke r2.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r7);

        return $r7;

     label2:
        $r14 = new org.spongycastle.crypto.engines.CramerShoupCoreEngine$CramerShoupCiphertextException;

        specialinvoke $r14.<org.spongycastle.crypto.engines.CramerShoupCoreEngine$CramerShoupCiphertextException: void <init>(java.lang.String)>("Sorry, that ciphertext is not correct");

        throw $r14;

     label3:
        return null;
    }
    public org.spongycastle.crypto.engines.CramerShoupCiphertext encryptBlock(java.math.BigInteger)
    {
        org.spongycastle.crypto.engines.CramerShoupCoreEngine r0;
        java.math.BigInteger $r1, r2, $r8, $r9, $r10, $r11, $r13, $r16;
        byte[] r3;
        org.spongycastle.crypto.engines.CramerShoupCiphertext r4;
        org.spongycastle.crypto.params.CramerShoupKeyParameters $r5;
        boolean $z0;
        org.spongycastle.crypto.params.CramerShoupPublicKeyParameters r6;
        org.spongycastle.crypto.params.CramerShoupParameters $r7;
        java.security.SecureRandom $r12;
        org.spongycastle.crypto.Digest $r14;
        int $i0;
        java.lang.String $r15;

        r0 := @this: org.spongycastle.crypto.engines.CramerShoupCoreEngine;

        $r1 := @parameter0: java.math.BigInteger;

        r4 = null;

        $r5 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: org.spongycastle.crypto.params.CramerShoupKeyParameters key>;

        $z0 = virtualinvoke $r5.<org.spongycastle.crypto.params.CramerShoupKeyParameters: boolean isPrivate()>();

        if $z0 != 0 goto label3;

        $z0 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: boolean forEncryption>;

        if $z0 == 0 goto label3;

        $r5 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: org.spongycastle.crypto.params.CramerShoupKeyParameters key>;

        $z0 = $r5 instanceof org.spongycastle.crypto.params.CramerShoupPublicKeyParameters;

        if $z0 == 0 goto label3;

        $r5 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: org.spongycastle.crypto.params.CramerShoupKeyParameters key>;

        r6 = (org.spongycastle.crypto.params.CramerShoupPublicKeyParameters) $r5;

        $r7 = virtualinvoke r6.<org.spongycastle.crypto.params.CramerShoupPublicKeyParameters: org.spongycastle.crypto.params.CramerShoupParameters getParameters()>();

        $r8 = virtualinvoke $r7.<org.spongycastle.crypto.params.CramerShoupParameters: java.math.BigInteger getP()>();

        $r7 = virtualinvoke r6.<org.spongycastle.crypto.params.CramerShoupPublicKeyParameters: org.spongycastle.crypto.params.CramerShoupParameters getParameters()>();

        $r9 = virtualinvoke $r7.<org.spongycastle.crypto.params.CramerShoupParameters: java.math.BigInteger getG1()>();

        $r7 = virtualinvoke r6.<org.spongycastle.crypto.params.CramerShoupPublicKeyParameters: org.spongycastle.crypto.params.CramerShoupParameters getParameters()>();

        $r10 = virtualinvoke $r7.<org.spongycastle.crypto.params.CramerShoupParameters: java.math.BigInteger getG2()>();

        $r11 = virtualinvoke r6.<org.spongycastle.crypto.params.CramerShoupPublicKeyParameters: java.math.BigInteger getH()>();

        $z0 = specialinvoke r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: boolean isValidMessage(java.math.BigInteger,java.math.BigInteger)>($r1, $r8);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r12 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: java.security.SecureRandom random>;

        $r13 = specialinvoke r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: java.math.BigInteger generateRandomElement(java.math.BigInteger,java.security.SecureRandom)>($r8, $r12);

        $r9 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r13, $r8);

        $r10 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r13, $r8);

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r13, $r8);

        $r1 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r1);

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r8);

        $r7 = virtualinvoke r6.<org.spongycastle.crypto.params.CramerShoupPublicKeyParameters: org.spongycastle.crypto.params.CramerShoupParameters getParameters()>();

        $r14 = virtualinvoke $r7.<org.spongycastle.crypto.params.CramerShoupParameters: org.spongycastle.crypto.Digest getH()>();

        r3 = virtualinvoke $r9.<java.math.BigInteger: byte[] toByteArray()>();

        $i0 = lengthof r3;

        interfaceinvoke $r14.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i0);

        r3 = virtualinvoke $r10.<java.math.BigInteger: byte[] toByteArray()>();

        $i0 = lengthof r3;

        interfaceinvoke $r14.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i0);

        r3 = virtualinvoke $r1.<java.math.BigInteger: byte[] toByteArray()>();

        $i0 = lengthof r3;

        interfaceinvoke $r14.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i0);

        $r15 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: java.lang.String label>;

        if $r15 == null goto label2;

        $r15 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: java.lang.String label>;

        r3 = virtualinvoke $r15.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof r3;

        interfaceinvoke $r14.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i0);

     label2:
        $i0 = interfaceinvoke $r14.<org.spongycastle.crypto.Digest: int getDigestSize()>();

        r3 = newarray (byte)[$i0];

        interfaceinvoke $r14.<org.spongycastle.crypto.Digest: int doFinal(byte[],int)>(r3, 0);

        r2 = new java.math.BigInteger;

        specialinvoke r2.<java.math.BigInteger: void <init>(int,byte[])>(1, r3);

        $r11 = virtualinvoke r6.<org.spongycastle.crypto.params.CramerShoupPublicKeyParameters: java.math.BigInteger getC()>();

        $r11 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r13, $r8);

        $r16 = virtualinvoke r6.<org.spongycastle.crypto.params.CramerShoupPublicKeyParameters: java.math.BigInteger getD()>();

        $r13 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r2);

        $r13 = virtualinvoke $r16.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r13, $r8);

        $r13 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r13);

        $r8 = virtualinvoke $r13.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r8);

        r4 = new org.spongycastle.crypto.engines.CramerShoupCiphertext;

        specialinvoke r4.<org.spongycastle.crypto.engines.CramerShoupCiphertext: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r9, $r10, $r1, $r8);

     label3:
        return r4;
    }
    public int getInputBlockSize()
    {
        org.spongycastle.crypto.engines.CramerShoupCoreEngine r0;
        org.spongycastle.crypto.params.CramerShoupKeyParameters $r1;
        org.spongycastle.crypto.params.CramerShoupParameters $r2;
        java.math.BigInteger $r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.engines.CramerShoupCoreEngine;

        $r1 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: org.spongycastle.crypto.params.CramerShoupKeyParameters key>;

        $r2 = virtualinvoke $r1.<org.spongycastle.crypto.params.CramerShoupKeyParameters: org.spongycastle.crypto.params.CramerShoupParameters getParameters()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.crypto.params.CramerShoupParameters: java.math.BigInteger getP()>();

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int bitLength()>();

        $z0 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $i0 = $i0 + 7;

        $i0 = $i0 / 8;

        $i0 = $i0 + -1;

        return $i0;

     label1:
        $i0 = $i0 + 7;

        $i0 = $i0 / 8;

        return $i0;
    }
    public int getOutputBlockSize()
    {
        org.spongycastle.crypto.engines.CramerShoupCoreEngine r0;
        org.spongycastle.crypto.params.CramerShoupKeyParameters $r1;
        org.spongycastle.crypto.params.CramerShoupParameters $r2;
        java.math.BigInteger $r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.engines.CramerShoupCoreEngine;

        $r1 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: org.spongycastle.crypto.params.CramerShoupKeyParameters key>;

        $r2 = virtualinvoke $r1.<org.spongycastle.crypto.params.CramerShoupKeyParameters: org.spongycastle.crypto.params.CramerShoupParameters getParameters()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.crypto.params.CramerShoupParameters: java.math.BigInteger getP()>();

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int bitLength()>();

        $z0 = r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $i0 = $i0 + 7;

        $i0 = $i0 / 8;

        return $i0;

     label1:
        $i0 = $i0 + 7;

        $i0 = $i0 / 8;

        $i0 = $i0 + -1;

        return $i0;
    }
    public void init(boolean, org.spongycastle.crypto.CipherParameters)
    {
        org.spongycastle.crypto.engines.CramerShoupCoreEngine r0;
        boolean $z0, $z1;
        org.spongycastle.crypto.CipherParameters r1;
        java.security.SecureRandom r2;
        org.spongycastle.crypto.params.ParametersWithRandom r3;
        org.spongycastle.crypto.params.CramerShoupKeyParameters $r4;

        r0 := @this: org.spongycastle.crypto.engines.CramerShoupCoreEngine;

        $z0 := @parameter0: boolean;

        r1 := @parameter1: org.spongycastle.crypto.CipherParameters;

        r2 = null;

        $z1 = r1 instanceof org.spongycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label2;

        r3 = (org.spongycastle.crypto.params.ParametersWithRandom) r1;

        r1 = virtualinvoke r3.<org.spongycastle.crypto.params.ParametersWithRandom: org.spongycastle.crypto.CipherParameters getParameters()>();

        $r4 = (org.spongycastle.crypto.params.CramerShoupKeyParameters) r1;

        r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: org.spongycastle.crypto.params.CramerShoupKeyParameters key> = $r4;

        r2 = virtualinvoke r3.<org.spongycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

     label1:
        r2 = virtualinvoke r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: java.security.SecureRandom initSecureRandom(boolean,java.security.SecureRandom)>($z0, r2);

        r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: java.security.SecureRandom random> = r2;

        r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: boolean forEncryption> = $z0;

        return;

     label2:
        $r4 = (org.spongycastle.crypto.params.CramerShoupKeyParameters) r1;

        r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: org.spongycastle.crypto.params.CramerShoupKeyParameters key> = $r4;

        goto label1;
    }
    public void init(boolean, org.spongycastle.crypto.CipherParameters, java.lang.String)
    {
        org.spongycastle.crypto.engines.CramerShoupCoreEngine r0;
        boolean $z0;
        org.spongycastle.crypto.CipherParameters $r1;
        java.lang.String $r2;

        r0 := @this: org.spongycastle.crypto.engines.CramerShoupCoreEngine;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.spongycastle.crypto.CipherParameters;

        $r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1);

        r0.<org.spongycastle.crypto.engines.CramerShoupCoreEngine: java.lang.String label> = $r2;

        return;
    }
    protected java.security.SecureRandom initSecureRandom(boolean, java.security.SecureRandom)
    {
        org.spongycastle.crypto.engines.CramerShoupCoreEngine r0;
        boolean $z0;
        java.security.SecureRandom r1;

        r0 := @this: org.spongycastle.crypto.engines.CramerShoupCoreEngine;

        $z0 := @parameter0: boolean;

        r1 := @parameter1: java.security.SecureRandom;

        if $z0 != 0 goto label1;

        return null;

     label1:
        if r1 != null goto label2;

        r1 = new java.security.SecureRandom;

        specialinvoke r1.<java.security.SecureRandom: void <init>()>();

     label2:
        return r1;
    }
