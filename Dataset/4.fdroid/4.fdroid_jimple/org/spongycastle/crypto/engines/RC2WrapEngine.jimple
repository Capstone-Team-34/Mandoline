org.spongycastle.crypto.engines.RC2WrapEngine extends java.lang.Object implements org.spongycastle.crypto.Wrapper
private static final byte[] IV2
byte[] digest
private org.spongycastle.crypto.modes.CBCBlockCipher engine
private boolean forWrapping
private byte[] iv
private org.spongycastle.crypto.CipherParameters param
private org.spongycastle.crypto.params.ParametersWithIV paramPlusIV
org.spongycastle.crypto.Digest sha1
private java.security.SecureRandom sr
    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[8];

        $r0[0] = 74;

        $r0[1] = -35;

        $r0[2] = -94;

        $r0[3] = 44;

        $r0[4] = 121;

        $r0[5] = -24;

        $r0[6] = 33;

        $r0[7] = 5;

        <org.spongycastle.crypto.engines.RC2WrapEngine: byte[] IV2> = $r0;

        return;
    }
    public void <init>()
    {
        org.spongycastle.crypto.engines.RC2WrapEngine r0;
        org.spongycastle.crypto.digests.SHA1Digest $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.crypto.engines.RC2WrapEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.spongycastle.crypto.digests.SHA1Digest;

        specialinvoke $r1.<org.spongycastle.crypto.digests.SHA1Digest: void <init>()>();

        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.Digest sha1> = $r1;

        $r2 = newarray (byte)[20];

        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] digest> = $r2;

        return;
    }
    private byte[] calculateCMSKeyChecksum(byte[])
    {
        org.spongycastle.crypto.engines.RC2WrapEngine r0;
        byte[] $r1, r2;
        org.spongycastle.crypto.Digest $r3;
        int $i0;

        r0 := @this: org.spongycastle.crypto.engines.RC2WrapEngine;

        $r1 := @parameter0: byte[];

        r2 = newarray (byte)[8];

        $r3 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.Digest sha1>;

        $i0 = lengthof $r1;

        interfaceinvoke $r3.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>($r1, 0, $i0);

        $r3 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.Digest sha1>;

        $r1 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] digest>;

        interfaceinvoke $r3.<org.spongycastle.crypto.Digest: int doFinal(byte[],int)>($r1, 0);

        $r1 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] digest>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r2, 0, 8);

        return r2;
    }
    private boolean checkCMSKeyChecksum(byte[], byte[])
    {
        org.spongycastle.crypto.engines.RC2WrapEngine r0;
        byte[] $r1, $r2;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.engines.RC2WrapEngine;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r1 = specialinvoke r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] calculateCMSKeyChecksum(byte[])>($r1);

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>($r1, $r2);

        return $z0;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.engines.RC2WrapEngine r0;

        r0 := @this: org.spongycastle.crypto.engines.RC2WrapEngine;

        return "RC2";
    }
    public void init(boolean, org.spongycastle.crypto.CipherParameters)
    {
        org.spongycastle.crypto.engines.RC2WrapEngine r0;
        boolean $z0;
        org.spongycastle.crypto.CipherParameters r1;
        org.spongycastle.crypto.modes.CBCBlockCipher $r2;
        org.spongycastle.crypto.engines.RC2Engine $r3;
        org.spongycastle.crypto.params.ParametersWithRandom r4;
        java.security.SecureRandom $r5;
        org.spongycastle.crypto.params.ParametersWithIV r6;
        byte[] $r7;
        int $i0;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: org.spongycastle.crypto.engines.RC2WrapEngine;

        $z0 := @parameter0: boolean;

        r1 := @parameter1: org.spongycastle.crypto.CipherParameters;

        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: boolean forWrapping> = $z0;

        $r2 = new org.spongycastle.crypto.modes.CBCBlockCipher;

        $r3 = new org.spongycastle.crypto.engines.RC2Engine;

        specialinvoke $r3.<org.spongycastle.crypto.engines.RC2Engine: void <init>()>();

        specialinvoke $r2.<org.spongycastle.crypto.modes.CBCBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>($r3);

        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine> = $r2;

        $z0 = r1 instanceof org.spongycastle.crypto.params.ParametersWithRandom;

        if $z0 == 0 goto label3;

        r4 = (org.spongycastle.crypto.params.ParametersWithRandom) r1;

        $r5 = virtualinvoke r4.<org.spongycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: java.security.SecureRandom sr> = $r5;

        r1 = virtualinvoke r4.<org.spongycastle.crypto.params.ParametersWithRandom: org.spongycastle.crypto.CipherParameters getParameters()>();

     label1:
        $z0 = r1 instanceof org.spongycastle.crypto.params.ParametersWithIV;

        if $z0 == 0 goto label5;

        r6 = (org.spongycastle.crypto.params.ParametersWithIV) r1;

        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.params.ParametersWithIV paramPlusIV> = r6;

        r6 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.params.ParametersWithIV paramPlusIV>;

        $r7 = virtualinvoke r6.<org.spongycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] iv> = $r7;

        r6 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.params.ParametersWithIV paramPlusIV>;

        r1 = virtualinvoke r6.<org.spongycastle.crypto.params.ParametersWithIV: org.spongycastle.crypto.CipherParameters getParameters()>();

        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.CipherParameters param> = r1;

        $z0 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: boolean forWrapping>;

        if $z0 == 0 goto label4;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        if $r7 == null goto label2;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        $i0 = lengthof $r7;

        if $i0 == 8 goto label6;

     label2:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("IV is not 8 octets");

        throw $r8;

     label3:
        $r5 = new java.security.SecureRandom;

        specialinvoke $r5.<java.security.SecureRandom: void <init>()>();

        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: java.security.SecureRandom sr> = $r5;

        goto label1;

     label4:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You should not supply an IV for unwrapping");

        throw $r8;

     label5:
        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.CipherParameters param> = r1;

        $z0 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: boolean forWrapping>;

        if $z0 == 0 goto label6;

        $r7 = newarray (byte)[8];

        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] iv> = $r7;

        $r5 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: java.security.SecureRandom sr>;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r7);

        r6 = new org.spongycastle.crypto.params.ParametersWithIV;

        r1 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.CipherParameters param>;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        specialinvoke r6.<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[])>(r1, $r7);

        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.params.ParametersWithIV paramPlusIV> = r6;

     label6:
        return;
    }
    public byte[] unwrap(byte[], int, int) throws org.spongycastle.crypto.InvalidCipherTextException
    {
        org.spongycastle.crypto.engines.RC2WrapEngine r0;
        byte[] $r1, r2, r3;
        int $i0, $i1, $i2;
        org.spongycastle.crypto.params.ParametersWithIV r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        org.spongycastle.crypto.InvalidCipherTextException $r6;
        org.spongycastle.crypto.modes.CBCBlockCipher $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        org.spongycastle.crypto.CipherParameters $r10;
        byte $b3;

        r0 := @this: org.spongycastle.crypto.engines.RC2WrapEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: boolean forWrapping>;

        if $z0 == 0 goto label01;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not set for unwrapping");

        throw $r5;

     label01:
        if $r1 != null goto label02;

        $r6 = new org.spongycastle.crypto.InvalidCipherTextException;

        specialinvoke $r6.<org.spongycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("Null pointer as ciphertext");

        throw $r6;

     label02:
        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $i2 = virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i2 = $i1 % $i2;

        if $i2 == 0 goto label03;

        $r6 = new org.spongycastle.crypto.InvalidCipherTextException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ciphertext not multiple of ");

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $i0 = virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.spongycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>($r9);

        throw $r6;

     label03:
        r4 = new org.spongycastle.crypto.params.ParametersWithIV;

        $r10 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.CipherParameters param>;

        r2 = <org.spongycastle.crypto.engines.RC2WrapEngine: byte[] IV2>;

        specialinvoke r4.<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[])>($r10, r2);

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(0, r4);

        r3 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, r3, 0, $i1);

        $i0 = 0;

     label04:
        $i1 = lengthof r3;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $i2 = virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i1 = $i1 / $i2;

        if $i0 >= $i1 goto label05;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $i1 = virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i1 = $i0 * $i1;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r3, $i1, r3, $i1);

        $i0 = $i0 + 1;

        goto label04;

     label05:
        $i0 = lengthof r3;

        r2 = newarray (byte)[$i0];

        $i0 = 0;

     label06:
        $i1 = lengthof r3;

        if $i0 >= $i1 goto label07;

        $i1 = lengthof r3;

        $i2 = $i0 + 1;

        $i1 = $i1 - $i2;

        $b3 = r3[$i1];

        r2[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label06;

     label07:
        $r1 = newarray (byte)[8];

        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] iv> = $r1;

        $i0 = lengthof r2;

        $i0 = $i0 + -8;

        $r1 = newarray (byte)[$i0];

        r3 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, 8);

        $i0 = lengthof r2;

        $i0 = $i0 + -8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 8, $r1, 0, $i0);

        r4 = new org.spongycastle.crypto.params.ParametersWithIV;

        $r10 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.CipherParameters param>;

        r2 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        specialinvoke r4.<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[])>($r10, r2);

        r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.params.ParametersWithIV paramPlusIV> = r4;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        r4 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.params.ParametersWithIV paramPlusIV>;

        virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(0, r4);

        $i0 = lengthof $r1;

        r2 = newarray (byte)[$i0];

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r2, 0, $i0);

        $i0 = 0;

     label08:
        $i1 = lengthof r2;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $i2 = virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i1 = $i1 / $i2;

        if $i0 >= $i1 goto label09;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $i1 = virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i1 = $i0 * $i1;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r2, $i1, r2, $i1);

        $i0 = $i0 + 1;

        goto label08;

     label09:
        $i0 = lengthof r2;

        $i0 = $i0 + -8;

        $r1 = newarray (byte)[$i0];

        r3 = newarray (byte)[8];

        $i0 = lengthof r2;

        $i0 = $i0 + -8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r1, 0, $i0);

        $i0 = lengthof r2;

        $i0 = $i0 + -8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i0, r3, 0, 8);

        $z0 = specialinvoke r0.<org.spongycastle.crypto.engines.RC2WrapEngine: boolean checkCMSKeyChecksum(byte[],byte[])>($r1, r3);

        if $z0 != 0 goto label10;

        $r6 = new org.spongycastle.crypto.InvalidCipherTextException;

        specialinvoke $r6.<org.spongycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("Checksum inside ciphertext is corrupted");

        throw $r6;

     label10:
        $i0 = lengthof $r1;

        $b3 = $r1[0];

        $i1 = $b3 & 255;

        $i1 = $i1 + 1;

        $i0 = $i0 - $i1;

        if $i0 <= 7 goto label11;

        $r6 = new org.spongycastle.crypto.InvalidCipherTextException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("too many pad bytes (");

        $i0 = lengthof $r1;

        $b3 = $r1[0];

        $i1 = $b3 & 255;

        $i1 = $i1 + 1;

        $i0 = $i0 - $i1;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.spongycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>($r9);

        throw $r6;

     label11:
        $b3 = $r1[0];

        r2 = newarray (byte)[$b3];

        $i0 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 1, r2, 0, $i0);

        return r2;
    }
    public byte[] wrap(byte[], int, int)
    {
        org.spongycastle.crypto.engines.RC2WrapEngine r0;
        byte[] $r1, r2, r3, $r8;
        int $i0, $i1, i2, $i3;
        org.spongycastle.crypto.params.ParametersWithIV r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        byte $b4;
        java.security.SecureRandom $r6;
        org.spongycastle.crypto.modes.CBCBlockCipher $r7;
        org.spongycastle.crypto.CipherParameters $r9;

        r0 := @this: org.spongycastle.crypto.engines.RC2WrapEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: boolean forWrapping>;

        if $z0 != 0 goto label01;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not initialized for wrapping");

        throw $r5;

     label01:
        i2 = $i1 + 1;

        $i3 = i2 % 8;

        if $i3 == 0 goto label02;

        $i3 = i2 % 8;

        $i3 = 8 - $i3;

        i2 = i2 + $i3;

     label02:
        r2 = newarray (byte)[i2];

        $b4 = (byte) $i1;

        r2[0] = $b4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, r2, 1, $i1);

        $i0 = lengthof r2;

        $i0 = $i0 - $i1;

        $i0 = $i0 + -1;

        $r1 = newarray (byte)[$i0];

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label03;

        $r6 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: java.security.SecureRandom sr>;

        virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>($r1);

        $i0 = $i1 + 1;

        $i1 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r2, $i0, $i1);

     label03:
        $r1 = specialinvoke r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] calculateCMSKeyChecksum(byte[])>(r2);

        $i0 = lengthof r2;

        $i1 = lengthof $r1;

        $i0 = $i0 + $i1;

        r3 = newarray (byte)[$i0];

        $i0 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, $i0);

        $i0 = lengthof r2;

        $i1 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r3, $i0, $i1);

        $i0 = lengthof r3;

        $r1 = newarray (byte)[$i0];

        $i0 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, $r1, 0, $i0);

        $i0 = lengthof r3;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        $i1 = virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i0 = $i0 / $i1;

        $i1 = lengthof r3;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        i2 = virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i1 = $i1 % i2;

        if $i1 == 0 goto label04;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not multiple of block length");

        throw $r5;

     label04:
        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        r4 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.params.ParametersWithIV paramPlusIV>;

        virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, r4);

        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label06;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        i2 = virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        i2 = $i1 * i2;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>($r1, i2, $r1, i2);

        $i1 = $i1 + 1;

        goto label05;

     label06:
        r2 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        $i1 = lengthof r2;

        i2 = lengthof $r1;

        $i1 = $i1 + i2;

        r2 = newarray (byte)[$i1];

        r3 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        $r8 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        $i1 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r2, 0, $i1);

        r3 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        $i1 = lengthof r3;

        i2 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r2, $i1, i2);

        $i1 = lengthof r2;

        $r1 = newarray (byte)[$i1];

        $i1 = 0;

     label07:
        i2 = lengthof r2;

        if $i1 >= i2 goto label08;

        i2 = lengthof r2;

        $i3 = $i1 + 1;

        i2 = i2 - $i3;

        $b4 = r2[i2];

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label07;

     label08:
        r4 = new org.spongycastle.crypto.params.ParametersWithIV;

        $r9 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.CipherParameters param>;

        r2 = <org.spongycastle.crypto.engines.RC2WrapEngine: byte[] IV2>;

        specialinvoke r4.<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[])>($r9, r2);

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, r4);

        $i1 = 0;

     label09:
        i2 = $i0 + 1;

        if $i1 >= i2 goto label10;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        i2 = virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        i2 = $i1 * i2;

        $r7 = r0.<org.spongycastle.crypto.engines.RC2WrapEngine: org.spongycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r7.<org.spongycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>($r1, i2, $r1, i2);

        $i1 = $i1 + 1;

        goto label09;

     label10:
        return $r1;
    }
