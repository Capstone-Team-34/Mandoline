org.spongycastle.crypto.engines.ThreefishEngine$Threefish256Cipher extends org.spongycastle.crypto.engines.ThreefishEngine$ThreefishCipher
private static final int ROTATION_0_0
private static final int ROTATION_0_1
private static final int ROTATION_1_0
private static final int ROTATION_1_1
private static final int ROTATION_2_0
private static final int ROTATION_2_1
private static final int ROTATION_3_0
private static final int ROTATION_3_1
private static final int ROTATION_4_0
private static final int ROTATION_4_1
private static final int ROTATION_5_0
private static final int ROTATION_5_1
private static final int ROTATION_6_0
private static final int ROTATION_6_1
private static final int ROTATION_7_0
private static final int ROTATION_7_1
    public void <init>(long[], long[])
    {
        org.spongycastle.crypto.engines.ThreefishEngine$Threefish256Cipher r0;
        long[] $r1, $r2;

        r0 := @this: org.spongycastle.crypto.engines.ThreefishEngine$Threefish256Cipher;

        $r1 := @parameter0: long[];

        $r2 := @parameter1: long[];

        specialinvoke r0.<org.spongycastle.crypto.engines.ThreefishEngine$ThreefishCipher: void <init>(long[],long[])>($r1, $r2);

        return;
    }
    void decryptBlock(long[], long[])
    {
        org.spongycastle.crypto.engines.ThreefishEngine$Threefish256Cipher r0;
        long[] $r1, $r2, r3, $r4;
        int i0, i1, $i2, $i7;
        int[] $r5, $r6;
        java.lang.IllegalArgumentException $r7;
        long l3, l4, l5, l6, $l8, $l9;

        r0 := @this: org.spongycastle.crypto.engines.ThreefishEngine$Threefish256Cipher;

        $r1 := @parameter0: long[];

        $r2 := @parameter1: long[];

        r3 = r0.<org.spongycastle.crypto.engines.ThreefishEngine$Threefish256Cipher: long[] kw>;

        $r4 = r0.<org.spongycastle.crypto.engines.ThreefishEngine$Threefish256Cipher: long[] t>;

        $r5 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: int[] access$000()>();

        $r6 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: int[] access$100()>();

        $i2 = lengthof r3;

        if $i2 == 9 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label1:
        $i2 = lengthof $r4;

        if $i2 == 5 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label2:
        l3 = $r1[0];

        l4 = $r1[1];

        l5 = $r1[2];

        l6 = $r1[3];

        $i2 = 17;

     label3:
        if $i2 < 1 goto label4;

        i1 = $r5[$i2];

        i0 = $r6[$i2];

        $i7 = i1 + 1;

        $l8 = r3[$i7];

        l3 = l3 - $l8;

        $i7 = i1 + 2;

        $l8 = r3[$i7];

        $i7 = i0 + 1;

        $l9 = $r4[$i7];

        $l8 = $l8 + $l9;

        l4 = l4 - $l8;

        $i7 = i1 + 3;

        $l8 = r3[$i7];

        $i7 = i0 + 2;

        $l9 = $r4[$i7];

        $l8 = $l8 + $l9;

        l5 = l5 - $l8;

        $i7 = i1 + 4;

        $l8 = r3[$i7];

        $l9 = (long) $i2;

        $l8 = $l8 + $l9;

        $l8 = $l8 + 1L;

        l6 = l6 - $l8;

        l6 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>(l6, 32, l3);

        l3 = l3 - l6;

        $l8 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>(l4, 32, l5);

        l4 = l5 - $l8;

        l5 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>($l8, 58, l3);

        l3 = l3 - l5;

        l6 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>(l6, 22, l4);

        l4 = l4 - l6;

        l6 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>(l6, 46, l3);

        l3 = l3 - l6;

        $l8 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>(l5, 12, l4);

        l5 = l4 - $l8;

        l4 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>($l8, 25, l3);

        $l8 = l3 - l4;

        l6 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>(l6, 33, l5);

        l3 = l5 - l6;

        l5 = r3[i1];

        l5 = $l8 - l5;

        $i7 = i1 + 1;

        $l8 = r3[$i7];

        $l9 = $r4[i0];

        $l8 = $l8 + $l9;

        l4 = l4 - $l8;

        $i7 = i1 + 2;

        $l8 = r3[$i7];

        i0 = i0 + 1;

        $l9 = $r4[i0];

        $l8 = $l8 + $l9;

        l3 = l3 - $l8;

        i1 = i1 + 3;

        $l8 = r3[i1];

        $l9 = (long) $i2;

        $l8 = $l8 + $l9;

        l6 = l6 - $l8;

        l6 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>(l6, 5, l5);

        $l8 = l5 - l6;

        l5 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>(l4, 37, l3);

        l4 = l3 - l5;

        l5 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>(l5, 23, $l8);

        l3 = $l8 - l5;

        l6 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>(l6, 40, l4);

        l4 = l4 - l6;

        l6 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>(l6, 52, l3);

        l3 = l3 - l6;

        $l8 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>(l5, 57, l4);

        l5 = l4 - $l8;

        $l8 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>($l8, 14, l3);

        l4 = $l8;

        l3 = l3 - $l8;

        $l8 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long xorRotr(long,int,long)>(l6, 16, l5);

        l6 = $l8;

        l5 = l5 - $l8;

        $i2 = $i2 + -2;

        goto label3;

     label4:
        $l8 = r3[0];

        l3 = l3 - $l8;

        $l8 = r3[1];

        $l9 = $r4[0];

        $l8 = $l8 + $l9;

        l4 = l4 - $l8;

        $l8 = r3[2];

        $l9 = $r4[1];

        $l8 = $l8 + $l9;

        l5 = l5 - $l8;

        $l8 = r3[3];

        l6 = l6 - $l8;

        $r2[0] = l3;

        $r2[1] = l4;

        $r2[2] = l5;

        $r2[3] = l6;

        return;
    }
    void encryptBlock(long[], long[])
    {
        org.spongycastle.crypto.engines.ThreefishEngine$Threefish256Cipher r0;
        long[] $r1, $r2, r3, $r4;
        int i0, i1, $i2, $i9;
        int[] $r5, $r6;
        java.lang.IllegalArgumentException $r7;
        long l3, l4, l5, l6, $l7, $l8;

        r0 := @this: org.spongycastle.crypto.engines.ThreefishEngine$Threefish256Cipher;

        $r1 := @parameter0: long[];

        $r2 := @parameter1: long[];

        r3 = r0.<org.spongycastle.crypto.engines.ThreefishEngine$Threefish256Cipher: long[] kw>;

        $r4 = r0.<org.spongycastle.crypto.engines.ThreefishEngine$Threefish256Cipher: long[] t>;

        $r5 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: int[] access$000()>();

        $r6 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: int[] access$100()>();

        $i2 = lengthof r3;

        if $i2 == 9 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label1:
        $i2 = lengthof $r4;

        if $i2 == 5 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label2:
        l3 = $r1[0];

        l4 = $r1[1];

        l5 = $r1[2];

        l6 = $r1[3];

        $l7 = r3[0];

        l3 = l3 + $l7;

        $l7 = r3[1];

        $l8 = $r4[0];

        $l7 = $l7 + $l8;

        l4 = l4 + $l7;

        $l7 = r3[2];

        $l8 = $r4[1];

        $l7 = $l7 + $l8;

        l5 = l5 + $l7;

        $l7 = r3[3];

        l6 = l6 + $l7;

        $i2 = 1;

     label3:
        if $i2 >= 18 goto label4;

        i1 = $r5[$i2];

        i0 = $r6[$i2];

        $l7 = l3 + l4;

        l3 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>(l4, 14, $l7);

        l5 = l5 + l6;

        l4 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>(l6, 16, l5);

        l6 = $l7 + l4;

        l4 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>(l4, 52, l6);

        $l7 = l5 + l3;

        l5 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>(l3, 57, $l7);

        l3 = l6 + l5;

        l5 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>(l5, 23, l3);

        l6 = $l7 + l4;

        $l7 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>(l4, 40, l6);

        l4 = l3 + $l7;

        l3 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>($l7, 5, l4);

        l6 = l6 + l5;

        l5 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>(l5, 37, l6);

        $l7 = r3[i1];

        l4 = l4 + $l7;

        $i9 = i1 + 1;

        $l7 = r3[$i9];

        $l8 = $r4[i0];

        $l7 = $l7 + $l8;

        l5 = l5 + $l7;

        $i9 = i1 + 2;

        $l7 = r3[$i9];

        $i9 = i0 + 1;

        $l8 = $r4[$i9];

        $l7 = $l7 + $l8;

        l6 = l6 + $l7;

        $i9 = i1 + 3;

        $l7 = r3[$i9];

        $l8 = (long) $i2;

        $l7 = $l7 + $l8;

        $l7 = l3 + $l7;

        l4 = l4 + l5;

        l3 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>(l5, 25, l4);

        l6 = l6 + $l7;

        $l7 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>($l7, 33, l6);

        l5 = l4 + $l7;

        l4 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>($l7, 46, l5);

        l6 = l6 + l3;

        l3 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>(l3, 12, l6);

        l5 = l5 + l3;

        l3 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>(l3, 58, l5);

        $l8 = l6 + l4;

        l4 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>(l4, 22, $l8);

        $l7 = l5 + l4;

        l6 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>(l4, 32, $l7);

        l5 = $l8 + l3;

        l4 = staticinvoke <org.spongycastle.crypto.engines.ThreefishEngine: long rotlXor(long,int,long)>(l3, 32, l5);

        $i9 = i1 + 1;

        l3 = r3[$i9];

        l3 = $l7 + l3;

        $i9 = i1 + 2;

        $l7 = r3[$i9];

        $i9 = i0 + 1;

        $l8 = $r4[$i9];

        $l7 = $l7 + $l8;

        l4 = l4 + $l7;

        $i9 = i1 + 3;

        $l7 = r3[$i9];

        i0 = i0 + 2;

        $l8 = $r4[i0];

        $l7 = $l7 + $l8;

        l5 = l5 + $l7;

        i1 = i1 + 4;

        $l7 = r3[i1];

        $l8 = (long) $i2;

        $l7 = $l7 + $l8;

        $l7 = $l7 + 1L;

        l6 = l6 + $l7;

        $i2 = $i2 + 2;

        goto label3;

     label4:
        $r2[0] = l3;

        $r2[1] = l4;

        $r2[2] = l5;

        $r2[3] = l6;

        return;
    }
