org.spongycastle.crypto.modes.AEADBlockCipher extends java.lang.Object
public abstract int doFinal(byte[], int) throws java.lang.IllegalStateException, org.spongycastle.crypto.InvalidCipherTextException { 
// no body
} 
public abstract java.lang.String getAlgorithmName() { 
// no body
} 
public abstract byte[] getMac() { 
// no body
} 
public abstract int getOutputSize(int) { 
// no body
} 
public abstract org.spongycastle.crypto.BlockCipher getUnderlyingCipher() { 
// no body
} 
public abstract int getUpdateOutputSize(int) { 
// no body
} 
public abstract void init(boolean, org.spongycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException { 
// no body
} 
public abstract void processAADByte(byte) { 
// no body
} 
public abstract void processAADBytes(byte[], int, int) { 
// no body
} 
public abstract int processByte(byte, byte[], int) throws org.spongycastle.crypto.DataLengthException { 
// no body
} 
public abstract int processBytes(byte[], int, int, byte[], int) throws org.spongycastle.crypto.DataLengthException { 
// no body
} 
public abstract void reset() { 
// no body
} 
