org.spongycastle.crypto.modes.GOFBBlockCipher extends org.spongycastle.crypto.StreamBlockCipher
static final int C1
static final int C2
private byte[] IV
int N3
int N4
private final int blockSize
private int byteCount
private final org.spongycastle.crypto.BlockCipher cipher
boolean firstStep
private byte[] ofbOutV
private byte[] ofbV
    public void <init>(org.spongycastle.crypto.BlockCipher)
    {
        org.spongycastle.crypto.modes.GOFBBlockCipher r0;
        org.spongycastle.crypto.BlockCipher $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.crypto.modes.GOFBBlockCipher;

        $r1 := @parameter0: org.spongycastle.crypto.BlockCipher;

        specialinvoke r0.<org.spongycastle.crypto.StreamBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>($r1);

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: boolean firstStep> = 1;

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: org.spongycastle.crypto.BlockCipher cipher> = $r1;

        $i0 = interfaceinvoke $r1.<org.spongycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int blockSize> = $i0;

        $i0 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int blockSize>;

        if $i0 == 8 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("GCTR only for 64 bit block ciphers");

        throw $r2;

     label1:
        $i0 = interfaceinvoke $r1.<org.spongycastle.crypto.BlockCipher: int getBlockSize()>();

        $r3 = newarray (byte)[$i0];

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] IV> = $r3;

        $i0 = interfaceinvoke $r1.<org.spongycastle.crypto.BlockCipher: int getBlockSize()>();

        $r3 = newarray (byte)[$i0];

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbV> = $r3;

        $i0 = interfaceinvoke $r1.<org.spongycastle.crypto.BlockCipher: int getBlockSize()>();

        $r3 = newarray (byte)[$i0];

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbOutV> = $r3;

        return;
    }
    private int bytesToint(byte[], int)
    {
        org.spongycastle.crypto.modes.GOFBBlockCipher r0;
        byte[] $r1;
        int $i0, $i1, $i3;
        byte $b2;

        r0 := @this: org.spongycastle.crypto.modes.GOFBBlockCipher;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = $i0 + 3;

        $b2 = $r1[$i1];

        $i1 = $b2 << 24;

        $i1 = $i1 & -16777216;

        $i3 = $i0 + 2;

        $b2 = $r1[$i3];

        $i3 = $b2 << 16;

        $i3 = $i3 & 16711680;

        $i1 = $i1 + $i3;

        $i3 = $i0 + 1;

        $b2 = $r1[$i3];

        $i3 = $b2 << 8;

        $i3 = $i3 & 65280;

        $i1 = $i1 + $i3;

        $b2 = $r1[$i0];

        $i0 = $b2 & 255;

        $i0 = $i1 + $i0;

        return $i0;
    }
    private void intTobytes(int, byte[], int)
    {
        org.spongycastle.crypto.modes.GOFBBlockCipher r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;

        r0 := @this: org.spongycastle.crypto.modes.GOFBBlockCipher;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        $i2 = $i1 + 3;

        $i3 = $i0 >>> 24;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $i2 = $i1 + 2;

        $i3 = $i0 >>> 16;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $i2 = $i1 + 1;

        $i3 = $i0 >>> 8;

        $b4 = (byte) $i3;

        $r1[$i2] = $b4;

        $b4 = (byte) $i0;

        $r1[$i1] = $b4;

        return;
    }
    protected byte calculateByte(byte)
    {
        org.spongycastle.crypto.modes.GOFBBlockCipher r0;
        byte $b0, $b3;
        int $i1, $i2, $i4;
        boolean $z0;
        org.spongycastle.crypto.BlockCipher $r1;
        byte[] $r2, $r3, $r4;

        r0 := @this: org.spongycastle.crypto.modes.GOFBBlockCipher;

        $b0 := @parameter0: byte;

        $i2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int byteCount>;

        if $i2 != 0 goto label2;

        $z0 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: boolean firstStep>;

        if $z0 == 0 goto label1;

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: boolean firstStep> = 0;

        $r1 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: org.spongycastle.crypto.BlockCipher cipher>;

        $r2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbV>;

        $r3 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbOutV>;

        interfaceinvoke $r1.<org.spongycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r2, 0, $r3, 0);

        $r2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbOutV>;

        $i2 = specialinvoke r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int bytesToint(byte[],int)>($r2, 0);

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int N3> = $i2;

        $r2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbOutV>;

        $i2 = specialinvoke r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int bytesToint(byte[],int)>($r2, 4);

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int N4> = $i2;

     label1:
        $i2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int N3>;

        $i2 = $i2 + 16843009;

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int N3> = $i2;

        $i2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int N4>;

        $i2 = $i2 + 16843012;

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int N4> = $i2;

        $i2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int N3>;

        $r2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbV>;

        specialinvoke r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: void intTobytes(int,byte[],int)>($i2, $r2, 0);

        $i2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int N4>;

        $r2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbV>;

        specialinvoke r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: void intTobytes(int,byte[],int)>($i2, $r2, 4);

        $r1 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: org.spongycastle.crypto.BlockCipher cipher>;

        $r2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbV>;

        $r3 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbOutV>;

        interfaceinvoke $r1.<org.spongycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r2, 0, $r3, 0);

     label2:
        $r2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbOutV>;

        $i2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int byteCount>;

        $i1 = $i2 + 1;

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int byteCount> = $i1;

        $b3 = $r2[$i2];

        $i2 = $b3 ^ $b0;

        $b0 = (byte) $i2;

        $i2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int byteCount>;

        $i1 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int blockSize>;

        if $i2 != $i1 goto label3;

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int byteCount> = 0;

        $r2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbV>;

        $i2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int blockSize>;

        $r3 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbV>;

        $r4 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbV>;

        $i4 = lengthof $r4;

        $i1 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int blockSize>;

        $i1 = $i4 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r3, 0, $i1);

        $r2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbOutV>;

        $r3 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbV>;

        $r4 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbV>;

        $i2 = lengthof $r4;

        $i1 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int blockSize>;

        $i2 = $i2 - $i1;

        $i1 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int blockSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, $i2, $i1);

     label3:
        return $b0;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.modes.GOFBBlockCipher r0;
        java.lang.StringBuilder $r1;
        org.spongycastle.crypto.BlockCipher $r2;
        java.lang.String $r3;

        r0 := @this: org.spongycastle.crypto.modes.GOFBBlockCipher;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: org.spongycastle.crypto.BlockCipher cipher>;

        $r3 = interfaceinvoke $r2.<org.spongycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/GCTR");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
    public int getBlockSize()
    {
        org.spongycastle.crypto.modes.GOFBBlockCipher r0;
        int i0;

        r0 := @this: org.spongycastle.crypto.modes.GOFBBlockCipher;

        i0 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int blockSize>;

        return i0;
    }
    public void init(boolean, org.spongycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.crypto.modes.GOFBBlockCipher r0;
        boolean $z0;
        org.spongycastle.crypto.CipherParameters $r1;
        org.spongycastle.crypto.params.ParametersWithIV r2;
        byte[] $r3, $r4, $r5;
        int $i0, $i1, $i2;
        org.spongycastle.crypto.BlockCipher $r6;

        r0 := @this: org.spongycastle.crypto.modes.GOFBBlockCipher;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.spongycastle.crypto.CipherParameters;

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: boolean firstStep> = 1;

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int N3> = 0;

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int N4> = 0;

        $z0 = $r1 instanceof org.spongycastle.crypto.params.ParametersWithIV;

        if $z0 == 0 goto label4;

        r2 = (org.spongycastle.crypto.params.ParametersWithIV) $r1;

        $r3 = virtualinvoke r2.<org.spongycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        $i0 = lengthof $r3;

        $r4 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] IV>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label2;

        $r4 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] IV>;

        $r5 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] IV>;

        $i0 = lengthof $r5;

        $i1 = lengthof $r3;

        $i0 = $i0 - $i1;

        $i1 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, $i0, $i1);

        $i0 = 0;

     label1:
        $r4 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] IV>;

        $i1 = lengthof $r4;

        $i2 = lengthof $r3;

        $i1 = $i1 - $i2;

        if $i0 >= $i1 goto label3;

        $r4 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] IV>;

        $r4[$i0] = 0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r4 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] IV>;

        $r5 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] IV>;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

     label3:
        virtualinvoke r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: void reset()>();

        $r1 = virtualinvoke r2.<org.spongycastle.crypto.params.ParametersWithIV: org.spongycastle.crypto.CipherParameters getParameters()>();

        if $r1 == null goto label5;

        $r6 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: org.spongycastle.crypto.BlockCipher cipher>;

        $r1 = virtualinvoke r2.<org.spongycastle.crypto.params.ParametersWithIV: org.spongycastle.crypto.CipherParameters getParameters()>();

        interfaceinvoke $r6.<org.spongycastle.crypto.BlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, $r1);

        return;

     label4:
        virtualinvoke r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: void reset()>();

        if $r1 == null goto label5;

        $r6 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: org.spongycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r6.<org.spongycastle.crypto.BlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, $r1);

     label5:
        return;
    }
    public int processBlock(byte[], int, byte[], int) throws org.spongycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        org.spongycastle.crypto.modes.GOFBBlockCipher r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: org.spongycastle.crypto.modes.GOFBBlockCipher;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        $i2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int blockSize>;

        virtualinvoke r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r1, $i0, $i2, $r2, $i1);

        $i0 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int blockSize>;

        return $i0;
    }
    public void reset()
    {
        org.spongycastle.crypto.modes.GOFBBlockCipher r0;
        byte[] $r1, $r2, $r3;
        int $i0;
        org.spongycastle.crypto.BlockCipher $r4;

        r0 := @this: org.spongycastle.crypto.modes.GOFBBlockCipher;

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: boolean firstStep> = 1;

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int N3> = 0;

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int N4> = 0;

        $r2 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] IV>;

        $r1 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] ofbV>;

        $r3 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: byte[] IV>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: int byteCount> = 0;

        $r4 = r0.<org.spongycastle.crypto.modes.GOFBBlockCipher: org.spongycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r4.<org.spongycastle.crypto.BlockCipher: void reset()>();

        return;
    }
