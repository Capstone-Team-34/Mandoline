org.spongycastle.crypto.modes.SICBlockCipher extends org.spongycastle.crypto.StreamBlockCipher implements org.spongycastle.crypto.SkippingStreamCipher
private byte[] IV
private final int blockSize
private int byteCount
private final org.spongycastle.crypto.BlockCipher cipher
private byte[] counter
private byte[] counterOut
    public void <init>(org.spongycastle.crypto.BlockCipher)
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        org.spongycastle.crypto.BlockCipher $r1;
        int $i0;
        byte[] $r2;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $r1 := @parameter0: org.spongycastle.crypto.BlockCipher;

        specialinvoke r0.<org.spongycastle.crypto.StreamBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>($r1);

        r0.<org.spongycastle.crypto.modes.SICBlockCipher: org.spongycastle.crypto.BlockCipher cipher> = $r1;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: org.spongycastle.crypto.BlockCipher cipher>;

        $i0 = interfaceinvoke $r1.<org.spongycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<org.spongycastle.crypto.modes.SICBlockCipher: int blockSize> = $i0;

        $i0 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int blockSize>;

        $r2 = newarray (byte)[$i0];

        r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] IV> = $r2;

        $i0 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int blockSize>;

        $r2 = newarray (byte)[$i0];

        r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter> = $r2;

        $i0 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int blockSize>;

        $r2 = newarray (byte)[$i0];

        r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counterOut> = $r2;

        r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount> = 0;

        return;
    }
    private void adjustCounter(long)
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        long $l0, $l3, $l4, l6;
        byte $b1;
        int $i2, $i5;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label07;

        $i2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount>;

        $l3 = (long) $i2;

        $l3 = $l3 + $l0;

        $i2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int blockSize>;

        $l4 = (long) $i2;

        $l3 = $l3 / $l4;

        $b1 = $l3 cmp 255L;

        if $b1 <= 0 goto label06;

        $l4 = $l3;

        $i2 = 5;

     label01:
        if $i2 < 1 goto label04;

        $i5 = $i2 * 8;

        l6 = 1L << $i5;

     label02:
        $b1 = $l4 cmp l6;

        if $b1 < 0 goto label03;

        specialinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: void incrementCounterPow2(int)>($i2);

        $l4 = $l4 - l6;

        goto label02;

     label03:
        $i2 = $i2 + -1;

        goto label01;

     label04:
        $i2 = (int) $l4;

        specialinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: void incrementCounter(int)>($i2);

     label05:
        $i2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount>;

        $l4 = (long) $i2;

        $l0 = $l4 + $l0;

        $i2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int blockSize>;

        $l4 = (long) $i2;

        $l3 = $l4 * $l3;

        $l0 = $l0 - $l3;

        $i2 = (int) $l0;

        r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount> = $i2;

        return;

     label06:
        $i2 = (int) $l3;

        specialinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: void incrementCounter(int)>($i2);

        goto label05;

     label07:
        $l3 = neg $l0;

        $i2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount>;

        $l4 = (long) $i2;

        $l3 = $l3 - $l4;

        $i2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int blockSize>;

        $l4 = (long) $i2;

        $l3 = $l3 / $l4;

        $b1 = $l3 cmp 255L;

        if $b1 <= 0 goto label13;

        $l4 = $l3;

        $i2 = 5;

     label08:
        if $i2 < 1 goto label11;

        $i5 = $i2 * 8;

        l6 = 1L << $i5;

     label09:
        $b1 = $l4 cmp l6;

        if $b1 <= 0 goto label10;

        specialinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: void decrementCounterPow2(int)>($i2);

        $l4 = $l4 - l6;

        goto label09;

     label10:
        $i2 = $i2 + -1;

        goto label08;

     label11:
        l6 = 0L;

     label12:
        $b1 = l6 cmp $l4;

        if $b1 == 0 goto label15;

        specialinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: void decrementCounter()>();

        l6 = l6 + 1L;

        goto label12;

     label13:
        $l4 = 0L;

     label14:
        $b1 = $l4 cmp $l3;

        if $b1 == 0 goto label15;

        specialinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: void decrementCounter()>();

        $l4 = $l4 + 1L;

        goto label14;

     label15:
        $i2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount>;

        $l4 = (long) $i2;

        $l0 = $l4 + $l0;

        $i2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int blockSize>;

        $l4 = (long) $i2;

        $l3 = $l4 * $l3;

        $l0 = $l0 + $l3;

        $i2 = (int) $l0;

        if $i2 < 0 goto label16;

        r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount> = 0;

        return;

     label16:
        specialinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: void decrementCounter()>();

        $i5 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int blockSize>;

        $i2 = $i5 + $i2;

        r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount> = $i2;

        return;
    }
    private void decrementCounter()
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        byte[] $r1;
        byte $b0;
        boolean z0;
        int $i1, $i2;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $b0 = $r1[0];

        if $b0 != 0 goto label4;

        z0 = 0;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i1 = lengthof $r1;

        $i1 = $i1 + -1;

     label1:
        if $i1 <= 0 goto label3;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $b0 = $r1[$i1];

        if $b0 == 0 goto label2;

        z0 = 1;

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("attempt to reduce counter past zero.");

        throw $r2;

     label4:
        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i1 = lengthof $r1;

        $i1 = $i1 + -1;

     label5:
        if $i1 < 0 goto label6;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $b0 = $r1[$i1];

        $i2 = $b0 + -1;

        $b0 = (byte) $i2;

        $r1[$i1] = $b0;

        if $b0 != -1 goto label6;

        $i1 = $i1 + -1;

        goto label5;

     label6:
        return;
    }
    private void decrementCounterPow2(int)
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        int $i0, $i2, $i3;
        byte[] $r1;
        byte $b1;
        boolean z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $b1 = $r1[$i0];

        if $b1 != 0 goto label4;

        z0 = 0;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i2 = lengthof $r1;

        $i3 = $i0 + 1;

        $i2 = $i2 - $i3;

     label1:
        if $i2 <= 0 goto label3;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $b1 = $r1[$i2];

        if $b1 == 0 goto label2;

        z0 = 1;

     label2:
        $i2 = $i2 + -1;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("attempt to reduce counter past zero.");

        throw $r2;

     label4:
        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i2 = lengthof $r1;

        $i0 = $i0 + 1;

        $i0 = $i2 - $i0;

     label5:
        if $i0 < 0 goto label6;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $b1 = $r1[$i0];

        $i2 = $b1 + -1;

        $b1 = (byte) $i2;

        $r1[$i0] = $b1;

        if $b1 != -1 goto label6;

        $i0 = $i0 + -1;

        goto label5;

     label6:
        return;
    }
    private void incrementCounter()
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        byte[] $r1;
        int $i0, $i2;
        byte $b1;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label2;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $b1 = $r1[$i0];

        $i2 = $b1 + 1;

        $b1 = (byte) $i2;

        $r1[$i0] = $b1;

        if $b1 != 0 goto label2;

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }
    private void incrementCounter(int)
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        int $i0, $i2;
        byte b1, $b3;
        byte[] $r1, $r2;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $r2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i2 = lengthof $r2;

        $i2 = $i2 + -1;

        b1 = $r1[$i2];

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $r2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i2 = lengthof $r2;

        $i2 = $i2 + -1;

        $b3 = $r1[$i2];

        $i0 = $b3 + $i0;

        $b3 = (byte) $i0;

        $r1[$i2] = $b3;

        if b1 == 0 goto label1;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $r2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i0 = lengthof $r2;

        $i0 = $i0 + -1;

        $b3 = $r1[$i0];

        if $b3 >= b1 goto label1;

        specialinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: void incrementCounterPow2(int)>(1);

     label1:
        return;
    }
    private void incrementCounterPow2(int)
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i1 = lengthof $r1;

        $i0 = $i0 + 1;

        $i0 = $i1 - $i0;

     label1:
        if $i0 < 0 goto label2;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $b2 = $r1[$i0];

        $i1 = $b2 + 1;

        $b2 = (byte) $i1;

        $r1[$i0] = $b2;

        if $b2 != 0 goto label2;

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }
    protected byte calculateByte(byte) throws org.spongycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        byte $b0, $b3;
        int $i1, $i2;
        org.spongycastle.crypto.BlockCipher $r1;
        byte[] $r2, $r3;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $b0 := @parameter0: byte;

        $i1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount>;

        if $i1 != 0 goto label1;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: org.spongycastle.crypto.BlockCipher cipher>;

        $r2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $r3 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counterOut>;

        interfaceinvoke $r1.<org.spongycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r2, 0, $r3, 0);

        $r2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counterOut>;

        $i1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount>;

        $i2 = $i1 + 1;

        r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount> = $i2;

        $b3 = $r2[$i1];

        $i1 = $b3 ^ $b0;

        $b0 = (byte) $i1;

        return $b0;

     label1:
        $r2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counterOut>;

        $i1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount>;

        $i2 = $i1 + 1;

        r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount> = $i2;

        $b3 = $r2[$i1];

        $i1 = $b3 ^ $b0;

        $b0 = (byte) $i1;

        $i1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount>;

        $r2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i2 = lengthof $r2;

        if $i1 != $i2 goto label2;

        r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount> = 0;

        specialinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: void incrementCounter()>();

     label2:
        return $b0;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        java.lang.StringBuilder $r1;
        org.spongycastle.crypto.BlockCipher $r2;
        java.lang.String $r3;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: org.spongycastle.crypto.BlockCipher cipher>;

        $r3 = interfaceinvoke $r2.<org.spongycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/SIC");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
    public int getBlockSize()
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        int $i0;
        org.spongycastle.crypto.BlockCipher $r1;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: org.spongycastle.crypto.BlockCipher cipher>;

        $i0 = interfaceinvoke $r1.<org.spongycastle.crypto.BlockCipher: int getBlockSize()>();

        return $i0;
    }
    public long getPosition()
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        byte[] r1, $r2;
        long $l0, $l6;
        int $i1, $i3, $i4, $i5;
        byte $b2;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] IV>;

        $i1 = lengthof r1;

        r1 = newarray (byte)[$i1];

        $r2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i1);

        $i1 = lengthof r1;

        $i1 = $i1 + -1;

     label1:
        if $i1 < 1 goto label3;

        $b2 = r1[$i1];

        $i3 = $b2 & 255;

        $r2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] IV>;

        $b2 = $r2[$i1];

        $i4 = $b2 & 255;

        $i3 = $i3 - $i4;

        if $i3 >= 0 goto label2;

        $i4 = $i1 + -1;

        $b2 = r1[$i4];

        $i5 = $b2 + -1;

        $b2 = (byte) $i5;

        r1[$i4] = $b2;

        $i3 = $i3 + 256;

     label2:
        $b2 = (byte) $i3;

        r1[$i1] = $b2;

        $i1 = $i1 + -1;

        goto label1;

     label3:
        $i1 = lengthof r1;

        $i1 = $i1 + -8;

        $l0 = staticinvoke <org.spongycastle.util.Pack: long bigEndianToLong(byte[],int)>(r1, $i1);

        $i1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int blockSize>;

        $l6 = (long) $i1;

        $l0 = $l0 * $l6;

        $i1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount>;

        $l6 = (long) $i1;

        $l0 = $l0 + $l6;

        return $l0;
    }
    public void init(boolean, org.spongycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        boolean $z0;
        org.spongycastle.crypto.CipherParameters $r1;
        org.spongycastle.crypto.params.ParametersWithIV r2;
        byte[] $r3, $r4, $r5;
        int $i0;
        org.spongycastle.crypto.BlockCipher $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: org.spongycastle.crypto.CipherParameters;

        $z0 = $r1 instanceof org.spongycastle.crypto.params.ParametersWithIV;

        if $z0 == 0 goto label2;

        r2 = (org.spongycastle.crypto.params.ParametersWithIV) $r1;

        $r3 = virtualinvoke r2.<org.spongycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        $r4 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] IV>;

        $r5 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] IV>;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

        $r1 = virtualinvoke r2.<org.spongycastle.crypto.params.ParametersWithIV: org.spongycastle.crypto.CipherParameters getParameters()>();

        if $r1 == null goto label1;

        $r6 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: org.spongycastle.crypto.BlockCipher cipher>;

        $r1 = virtualinvoke r2.<org.spongycastle.crypto.params.ParametersWithIV: org.spongycastle.crypto.CipherParameters getParameters()>();

        interfaceinvoke $r6.<org.spongycastle.crypto.BlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, $r1);

     label1:
        virtualinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: void reset()>();

        return;

     label2:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SIC mode requires ParametersWithIV");

        throw $r7;
    }
    public int processBlock(byte[], int, byte[], int) throws org.spongycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r2 := @parameter2: byte[];

        $i1 := @parameter3: int;

        $i2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int blockSize>;

        virtualinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: int processBytes(byte[],int,int,byte[],int)>($r1, $i0, $i2, $r2, $i1);

        $i0 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: int blockSize>;

        return $i0;
    }
    public void reset()
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        byte[] $r1, $r2, $r3;
        int $i0;
        org.spongycastle.crypto.BlockCipher $r4;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $r2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] IV>;

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $r3 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        $r4 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: org.spongycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r4.<org.spongycastle.crypto.BlockCipher: void reset()>();

        r0.<org.spongycastle.crypto.modes.SICBlockCipher: int byteCount> = 0;

        return;
    }
    public long seekTo(long)
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        long $l0;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $l0 := @parameter0: long;

        virtualinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: void reset()>();

        $l0 = virtualinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: long skip(long)>($l0);

        return $l0;
    }
    public long skip(long)
    {
        org.spongycastle.crypto.modes.SICBlockCipher r0;
        long $l0;
        org.spongycastle.crypto.BlockCipher $r1;
        byte[] $r2, $r3;

        r0 := @this: org.spongycastle.crypto.modes.SICBlockCipher;

        $l0 := @parameter0: long;

        specialinvoke r0.<org.spongycastle.crypto.modes.SICBlockCipher: void adjustCounter(long)>($l0);

        $r1 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: org.spongycastle.crypto.BlockCipher cipher>;

        $r2 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counter>;

        $r3 = r0.<org.spongycastle.crypto.modes.SICBlockCipher: byte[] counterOut>;

        interfaceinvoke $r1.<org.spongycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r2, 0, $r3, 0);

        return $l0;
    }
