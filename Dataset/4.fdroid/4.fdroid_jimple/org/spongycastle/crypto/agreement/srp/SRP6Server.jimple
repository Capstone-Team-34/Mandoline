org.spongycastle.crypto.agreement.srp.SRP6Server extends java.lang.Object
protected java.math.BigInteger A
protected java.math.BigInteger B
protected java.math.BigInteger Key
protected java.math.BigInteger M1
protected java.math.BigInteger M2
protected java.math.BigInteger N
protected java.math.BigInteger S
protected java.math.BigInteger b
protected org.spongycastle.crypto.Digest digest
protected java.math.BigInteger g
protected java.security.SecureRandom random
protected java.math.BigInteger u
protected java.math.BigInteger v
    public void <init>()
    {
        org.spongycastle.crypto.agreement.srp.SRP6Server r0;

        r0 := @this: org.spongycastle.crypto.agreement.srp.SRP6Server;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private java.math.BigInteger calculateS()
    {
        org.spongycastle.crypto.agreement.srp.SRP6Server r0;
        java.math.BigInteger $r1, $r2, $r3;

        r0 := @this: org.spongycastle.crypto.agreement.srp.SRP6Server;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger v>;

        $r2 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger u>;

        $r3 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r2, $r3);

        $r2 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger A>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r2);

        $r2 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r2);

        $r2 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger b>;

        $r3 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r2, $r3);

        return $r1;
    }
    public java.math.BigInteger calculateSecret(java.math.BigInteger) throws org.spongycastle.crypto.CryptoException
    {
        org.spongycastle.crypto.agreement.srp.SRP6Server r0;
        java.math.BigInteger $r1, $r2, $r3;
        org.spongycastle.crypto.Digest $r4;

        r0 := @this: org.spongycastle.crypto.agreement.srp.SRP6Server;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N>;

        $r1 = staticinvoke <org.spongycastle.crypto.agreement.srp.SRP6Util: java.math.BigInteger validatePublicValue(java.math.BigInteger,java.math.BigInteger)>($r2, $r1);

        r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger A> = $r1;

        $r4 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: org.spongycastle.crypto.Digest digest>;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N>;

        $r2 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger A>;

        $r3 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger B>;

        $r1 = staticinvoke <org.spongycastle.crypto.agreement.srp.SRP6Util: java.math.BigInteger calculateU(org.spongycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r4, $r1, $r2, $r3);

        r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger u> = $r1;

        $r1 = specialinvoke r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger calculateS()>();

        r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger S> = $r1;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger S>;

        return $r1;
    }
    public java.math.BigInteger calculateServerEvidenceMessage() throws org.spongycastle.crypto.CryptoException
    {
        org.spongycastle.crypto.agreement.srp.SRP6Server r0;
        java.math.BigInteger $r1, $r2, $r3, $r6;
        org.spongycastle.crypto.CryptoException $r4;
        org.spongycastle.crypto.Digest $r5;

        r0 := @this: org.spongycastle.crypto.agreement.srp.SRP6Server;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger A>;

        if $r1 == null goto label1;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger M1>;

        if $r1 == null goto label1;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger S>;

        if $r1 != null goto label2;

     label1:
        $r4 = new org.spongycastle.crypto.CryptoException;

        specialinvoke $r4.<org.spongycastle.crypto.CryptoException: void <init>(java.lang.String)>("Impossible to compute M2: some data are missing from the previous operations (A,M1,S)");

        throw $r4;

     label2:
        $r5 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: org.spongycastle.crypto.Digest digest>;

        $r6 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N>;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger A>;

        $r2 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger M1>;

        $r3 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger S>;

        $r1 = staticinvoke <org.spongycastle.crypto.agreement.srp.SRP6Util: java.math.BigInteger calculateM2(org.spongycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r6, $r1, $r2, $r3);

        r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger M2> = $r1;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger M2>;

        return $r1;
    }
    public java.math.BigInteger calculateSessionKey() throws org.spongycastle.crypto.CryptoException
    {
        org.spongycastle.crypto.agreement.srp.SRP6Server r0;
        java.math.BigInteger $r1, $r4;
        org.spongycastle.crypto.CryptoException $r2;
        org.spongycastle.crypto.Digest $r3;

        r0 := @this: org.spongycastle.crypto.agreement.srp.SRP6Server;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger S>;

        if $r1 == null goto label1;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger M1>;

        if $r1 == null goto label1;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger M2>;

        if $r1 != null goto label2;

     label1:
        $r2 = new org.spongycastle.crypto.CryptoException;

        specialinvoke $r2.<org.spongycastle.crypto.CryptoException: void <init>(java.lang.String)>("Impossible to compute Key: some data are missing from the previous operations (S,M1,M2)");

        throw $r2;

     label2:
        $r3 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: org.spongycastle.crypto.Digest digest>;

        $r4 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N>;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger S>;

        $r1 = staticinvoke <org.spongycastle.crypto.agreement.srp.SRP6Util: java.math.BigInteger calculateKey(org.spongycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger)>($r3, $r4, $r1);

        r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger Key> = $r1;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger Key>;

        return $r1;
    }
    public java.math.BigInteger generateServerCredentials()
    {
        org.spongycastle.crypto.agreement.srp.SRP6Server r0;
        java.math.BigInteger $r1, $r3, $r4, $r5;
        org.spongycastle.crypto.Digest $r2;

        r0 := @this: org.spongycastle.crypto.agreement.srp.SRP6Server;

        $r2 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: org.spongycastle.crypto.Digest digest>;

        $r3 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N>;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger g>;

        $r3 = staticinvoke <org.spongycastle.crypto.agreement.srp.SRP6Util: java.math.BigInteger calculateK(org.spongycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger)>($r2, $r3, $r1);

        $r1 = virtualinvoke r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger selectPrivateValue()>();

        r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger b> = $r1;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger v>;

        $r3 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r1);

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N>;

        $r3 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r1);

        $r4 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger g>;

        $r5 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger b>;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N>;

        $r1 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r5, $r1);

        $r3 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r1);

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N>;

        $r3 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r1);

        r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger B> = $r3;

        $r3 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger B>;

        return $r3;
    }
    public void init(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.spongycastle.crypto.Digest, java.security.SecureRandom)
    {
        org.spongycastle.crypto.agreement.srp.SRP6Server r0;
        java.math.BigInteger $r1, $r2, $r3;
        org.spongycastle.crypto.Digest $r4;
        java.security.SecureRandom $r5;

        r0 := @this: org.spongycastle.crypto.agreement.srp.SRP6Server;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 := @parameter3: org.spongycastle.crypto.Digest;

        $r5 := @parameter4: java.security.SecureRandom;

        r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N> = $r1;

        r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger g> = $r2;

        r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger v> = $r3;

        r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.security.SecureRandom random> = $r5;

        r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: org.spongycastle.crypto.Digest digest> = $r4;

        return;
    }
    public void init(org.spongycastle.crypto.params.SRP6GroupParameters, java.math.BigInteger, org.spongycastle.crypto.Digest, java.security.SecureRandom)
    {
        org.spongycastle.crypto.agreement.srp.SRP6Server r0;
        org.spongycastle.crypto.params.SRP6GroupParameters $r1;
        java.math.BigInteger $r2, $r5, $r6;
        org.spongycastle.crypto.Digest $r3;
        java.security.SecureRandom $r4;

        r0 := @this: org.spongycastle.crypto.agreement.srp.SRP6Server;

        $r1 := @parameter0: org.spongycastle.crypto.params.SRP6GroupParameters;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: org.spongycastle.crypto.Digest;

        $r4 := @parameter3: java.security.SecureRandom;

        $r5 = virtualinvoke $r1.<org.spongycastle.crypto.params.SRP6GroupParameters: java.math.BigInteger getN()>();

        $r6 = virtualinvoke $r1.<org.spongycastle.crypto.params.SRP6GroupParameters: java.math.BigInteger getG()>();

        virtualinvoke r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: void init(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,org.spongycastle.crypto.Digest,java.security.SecureRandom)>($r5, $r6, $r2, $r3, $r4);

        return;
    }
    protected java.math.BigInteger selectPrivateValue()
    {
        org.spongycastle.crypto.agreement.srp.SRP6Server r0;
        java.math.BigInteger $r1, $r2;
        java.security.SecureRandom $r3;
        org.spongycastle.crypto.Digest $r4;

        r0 := @this: org.spongycastle.crypto.agreement.srp.SRP6Server;

        $r4 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: org.spongycastle.crypto.Digest digest>;

        $r1 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N>;

        $r2 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger g>;

        $r3 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.security.SecureRandom random>;

        $r1 = staticinvoke <org.spongycastle.crypto.agreement.srp.SRP6Util: java.math.BigInteger generatePrivateValue(org.spongycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>($r4, $r1, $r2, $r3);

        return $r1;
    }
    public boolean verifyClientEvidenceMessage(java.math.BigInteger) throws org.spongycastle.crypto.CryptoException
    {
        org.spongycastle.crypto.agreement.srp.SRP6Server r0;
        java.math.BigInteger $r1, $r2, $r3, $r4, $r7;
        org.spongycastle.crypto.CryptoException $r5;
        org.spongycastle.crypto.Digest $r6;
        boolean $z0;

        r0 := @this: org.spongycastle.crypto.agreement.srp.SRP6Server;

        $r1 := @parameter0: java.math.BigInteger;

        $r2 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger A>;

        if $r2 == null goto label1;

        $r2 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger B>;

        if $r2 == null goto label1;

        $r2 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger S>;

        if $r2 != null goto label2;

     label1:
        $r5 = new org.spongycastle.crypto.CryptoException;

        specialinvoke $r5.<org.spongycastle.crypto.CryptoException: void <init>(java.lang.String)>("Impossible to compute and verify M1: some data are missing from the previous operations (A,B,S)");

        throw $r5;

     label2:
        $r6 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: org.spongycastle.crypto.Digest digest>;

        $r7 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger N>;

        $r2 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger A>;

        $r3 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger B>;

        $r4 = r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger S>;

        $r2 = staticinvoke <org.spongycastle.crypto.agreement.srp.SRP6Util: java.math.BigInteger calculateM1(org.spongycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r6, $r7, $r2, $r3, $r4);

        $z0 = virtualinvoke $r2.<java.math.BigInteger: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        r0.<org.spongycastle.crypto.agreement.srp.SRP6Server: java.math.BigInteger M1> = $r1;

        return 1;

     label3:
        return 0;
    }
