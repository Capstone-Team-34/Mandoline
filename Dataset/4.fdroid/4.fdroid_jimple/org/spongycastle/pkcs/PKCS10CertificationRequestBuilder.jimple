org.spongycastle.pkcs.PKCS10CertificationRequestBuilder extends java.lang.Object
private java.util.List attributes
private boolean leaveOffEmpty
private org.spongycastle.asn1.x509.SubjectPublicKeyInfo publicKeyInfo
private org.spongycastle.asn1.x500.X500Name subject
    public void <init>(org.spongycastle.asn1.x500.X500Name, org.spongycastle.asn1.x509.SubjectPublicKeyInfo)
    {
        org.spongycastle.pkcs.PKCS10CertificationRequestBuilder r0;
        org.spongycastle.asn1.x500.X500Name $r1;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequestBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x500.X500Name;

        $r2 := @parameter1: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: java.util.List attributes> = $r3;

        r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: boolean leaveOffEmpty> = 0;

        r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: org.spongycastle.asn1.x500.X500Name subject> = $r1;

        r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: org.spongycastle.asn1.x509.SubjectPublicKeyInfo publicKeyInfo> = $r2;

        return;
    }
    public org.spongycastle.pkcs.PKCS10CertificationRequestBuilder addAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.pkcs.PKCS10CertificationRequestBuilder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        java.util.List $r3;
        org.spongycastle.asn1.pkcs.Attribute $r4;
        org.spongycastle.asn1.DERSet $r5;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequestBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1Encodable;

        $r3 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: java.util.List attributes>;

        $r4 = new org.spongycastle.asn1.pkcs.Attribute;

        $r5 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r5.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r2);

        specialinvoke $r4.<org.spongycastle.asn1.pkcs.Attribute: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Set)>($r1, $r5);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return r0;
    }
    public org.spongycastle.pkcs.PKCS10CertificationRequestBuilder addAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.asn1.ASN1Encodable[])
    {
        org.spongycastle.pkcs.PKCS10CertificationRequestBuilder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Encodable[] $r2;
        java.util.List $r3;
        org.spongycastle.asn1.pkcs.Attribute $r4;
        org.spongycastle.asn1.DERSet $r5;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequestBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1Encodable[];

        $r3 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: java.util.List attributes>;

        $r4 = new org.spongycastle.asn1.pkcs.Attribute;

        $r5 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r5.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1Encodable[])>($r2);

        specialinvoke $r4.<org.spongycastle.asn1.pkcs.Attribute: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Set)>($r1, $r5);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return r0;
    }
    public org.spongycastle.pkcs.PKCS10CertificationRequest build(org.spongycastle.operator.ContentSigner)
    {
        org.spongycastle.pkcs.PKCS10CertificationRequestBuilder r0;
        org.spongycastle.operator.ContentSigner $r1;
        java.io.IOException r2;
        org.spongycastle.asn1.ASN1EncodableVector r3;
        org.spongycastle.asn1.DERBitString $r4;
        java.util.List $r5;
        boolean $z0;
        org.spongycastle.asn1.pkcs.CertificationRequestInfo r6;
        org.spongycastle.asn1.x500.X500Name $r7;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r8;
        java.io.OutputStream $r9;
        byte[] $r10;
        org.spongycastle.pkcs.PKCS10CertificationRequest $r11;
        org.spongycastle.asn1.pkcs.CertificationRequest $r12;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r13;
        org.spongycastle.asn1.DERSet $r14;
        java.util.Iterator $r15;
        java.lang.Object $r16;
        org.spongycastle.asn1.pkcs.Attribute $r17;
        java.lang.IllegalStateException $r18;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequestBuilder;

        $r1 := @parameter0: org.spongycastle.operator.ContentSigner;

        $r5 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: java.util.List attributes>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label08;

        $z0 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: boolean leaveOffEmpty>;

        if $z0 == 0 goto label07;

        r6 = new org.spongycastle.asn1.pkcs.CertificationRequestInfo;

        $r7 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: org.spongycastle.asn1.x500.X500Name subject>;

        $r8 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: org.spongycastle.asn1.x509.SubjectPublicKeyInfo publicKeyInfo>;

        specialinvoke r6.<org.spongycastle.asn1.pkcs.CertificationRequestInfo: void <init>(org.spongycastle.asn1.x500.X500Name,org.spongycastle.asn1.x509.SubjectPublicKeyInfo,org.spongycastle.asn1.ASN1Set)>($r7, $r8, null);

     label01:
        $r9 = interfaceinvoke $r1.<org.spongycastle.operator.ContentSigner: java.io.OutputStream getOutputStream()>();

        $r10 = virtualinvoke r6.<org.spongycastle.asn1.pkcs.CertificationRequestInfo: byte[] getEncoded(java.lang.String)>("DER");

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[])>($r10);

        virtualinvoke $r9.<java.io.OutputStream: void close()>();

     label02:
        $r11 = new org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r12 = new org.spongycastle.asn1.pkcs.CertificationRequest;

     label03:
        $r13 = interfaceinvoke $r1.<org.spongycastle.operator.ContentSigner: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

     label04:
        $r4 = new org.spongycastle.asn1.DERBitString;

     label05:
        $r10 = interfaceinvoke $r1.<org.spongycastle.operator.ContentSigner: byte[] getSignature()>();

        specialinvoke $r4.<org.spongycastle.asn1.DERBitString: void <init>(byte[])>($r10);

        specialinvoke $r12.<org.spongycastle.asn1.pkcs.CertificationRequest: void <init>(org.spongycastle.asn1.pkcs.CertificationRequestInfo,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.DERBitString)>(r6, $r13, $r4);

        specialinvoke $r11.<org.spongycastle.pkcs.PKCS10CertificationRequest: void <init>(org.spongycastle.asn1.pkcs.CertificationRequest)>($r12);

     label06:
        return $r11;

     label07:
        r6 = new org.spongycastle.asn1.pkcs.CertificationRequestInfo;

        $r7 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: org.spongycastle.asn1.x500.X500Name subject>;

        $r8 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: org.spongycastle.asn1.x509.SubjectPublicKeyInfo publicKeyInfo>;

        $r14 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r14.<org.spongycastle.asn1.DERSet: void <init>()>();

        specialinvoke r6.<org.spongycastle.asn1.pkcs.CertificationRequestInfo: void <init>(org.spongycastle.asn1.x500.X500Name,org.spongycastle.asn1.x509.SubjectPublicKeyInfo,org.spongycastle.asn1.ASN1Set)>($r7, $r8, $r14);

        goto label01;

     label08:
        r3 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r3.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r5 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: java.util.List attributes>;

        $r15 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r17 = staticinvoke <org.spongycastle.asn1.pkcs.Attribute: org.spongycastle.asn1.pkcs.Attribute getInstance(java.lang.Object)>($r16);

        virtualinvoke r3.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r17);

        goto label09;

     label10:
        r6 = new org.spongycastle.asn1.pkcs.CertificationRequestInfo;

        $r7 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: org.spongycastle.asn1.x500.X500Name subject>;

        $r8 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: org.spongycastle.asn1.x509.SubjectPublicKeyInfo publicKeyInfo>;

        $r14 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r14.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r3);

        specialinvoke r6.<org.spongycastle.asn1.pkcs.CertificationRequestInfo: void <init>(org.spongycastle.asn1.x500.X500Name,org.spongycastle.asn1.x509.SubjectPublicKeyInfo,org.spongycastle.asn1.ASN1Set)>($r7, $r8, $r14);

        goto label01;

     label11:
        r2 := @caughtexception;

        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot produce certification request signature");

        throw $r18;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
    }
    public org.spongycastle.pkcs.PKCS10CertificationRequestBuilder setLeaveOffEmptyAttributes(boolean)
    {
        org.spongycastle.pkcs.PKCS10CertificationRequestBuilder r0;
        boolean $z0;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequestBuilder;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.pkcs.PKCS10CertificationRequestBuilder: boolean leaveOffEmpty> = $z0;

        return r0;
    }
