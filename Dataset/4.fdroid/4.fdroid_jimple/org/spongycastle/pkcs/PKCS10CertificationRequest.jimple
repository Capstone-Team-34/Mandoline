org.spongycastle.pkcs.PKCS10CertificationRequest extends java.lang.Object
private static org.spongycastle.asn1.pkcs.Attribute[] EMPTY_ARRAY
private org.spongycastle.asn1.pkcs.CertificationRequest certificationRequest
    static void <clinit>()
    {
        org.spongycastle.asn1.pkcs.Attribute[] $r0;

        $r0 = newarray (org.spongycastle.asn1.pkcs.Attribute)[0];

        <org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.Attribute[] EMPTY_ARRAY> = $r0;

        return;
    }
    public void <init>(org.spongycastle.asn1.pkcs.CertificationRequest)
    {
        org.spongycastle.pkcs.PKCS10CertificationRequest r0;
        org.spongycastle.asn1.pkcs.CertificationRequest $r1;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r1 := @parameter0: org.spongycastle.asn1.pkcs.CertificationRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest certificationRequest> = $r1;

        return;
    }
    public void <init>(byte[]) throws java.io.IOException
    {
        org.spongycastle.pkcs.PKCS10CertificationRequest r0;
        byte[] $r1;
        org.spongycastle.asn1.pkcs.CertificationRequest $r2;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest parseBytes(byte[])>($r1);

        specialinvoke r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: void <init>(org.spongycastle.asn1.pkcs.CertificationRequest)>($r2);

        return;
    }
    private static org.spongycastle.asn1.pkcs.CertificationRequest parseBytes(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.pkcs.CertificationRequest $r2;
        java.lang.ClassCastException r3;
        org.spongycastle.pkcs.PKCSIOException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.IllegalArgumentException r7;

        $r0 := @parameter0: byte[];

     label1:
        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r0);

        $r2 = staticinvoke <org.spongycastle.asn1.pkcs.CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest getInstance(java.lang.Object)>($r1);

     label2:
        return $r2;

     label3:
        r3 := @caughtexception;

        $r4 = new org.spongycastle.pkcs.PKCSIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed data: ");

        $r6 = virtualinvoke r3.<java.lang.ClassCastException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.pkcs.PKCSIOException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r3);

        throw $r4;

     label4:
        r7 := @caughtexception;

        $r4 = new org.spongycastle.pkcs.PKCSIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed data: ");

        $r6 = virtualinvoke r7.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.pkcs.PKCSIOException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r7);

        throw $r4;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.pkcs.PKCS10CertificationRequest r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        org.spongycastle.asn1.pkcs.CertificationRequest $r3, $r4;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.spongycastle.pkcs.PKCS10CertificationRequest;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.spongycastle.pkcs.PKCS10CertificationRequest) $r1;

        $r3 = virtualinvoke r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest toASN1Structure()>();

        $r4 = virtualinvoke r2.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest toASN1Structure()>();

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.pkcs.CertificationRequest: boolean equals(java.lang.Object)>($r4);

        return $z0;
    }
    public org.spongycastle.asn1.pkcs.Attribute[] getAttributes()
    {
        org.spongycastle.pkcs.PKCS10CertificationRequest r0;
        org.spongycastle.asn1.pkcs.CertificationRequest $r1;
        org.spongycastle.asn1.pkcs.CertificationRequestInfo $r2;
        org.spongycastle.asn1.ASN1Set $r3;
        int $i0, $i1;
        org.spongycastle.asn1.pkcs.Attribute[] r4;
        org.spongycastle.asn1.ASN1Encodable $r5;
        org.spongycastle.asn1.pkcs.Attribute $r6;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r1 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest certificationRequest>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequestInfo getCertificationRequestInfo()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.pkcs.CertificationRequestInfo: org.spongycastle.asn1.ASN1Set getAttributes()>();

        if $r3 != null goto label1;

        r4 = <org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.Attribute[] EMPTY_ARRAY>;

        return r4;

     label1:
        $i0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Set: int size()>();

        r4 = newarray (org.spongycastle.asn1.pkcs.Attribute)[$i0];

        $i0 = 0;

     label2:
        $i1 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Set: int size()>();

        if $i0 == $i1 goto label3;

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r6 = staticinvoke <org.spongycastle.asn1.pkcs.Attribute: org.spongycastle.asn1.pkcs.Attribute getInstance(java.lang.Object)>($r5);

        r4[$i0] = $r6;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return r4;
    }
    public org.spongycastle.asn1.pkcs.Attribute[] getAttributes(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.pkcs.PKCS10CertificationRequest r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r8;
        java.util.ArrayList r2;
        org.spongycastle.asn1.pkcs.CertificationRequest $r3;
        org.spongycastle.asn1.pkcs.CertificationRequestInfo $r4;
        org.spongycastle.asn1.ASN1Set $r5;
        int i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r6;
        org.spongycastle.asn1.pkcs.Attribute $r7;
        boolean $z0;
        org.spongycastle.asn1.pkcs.Attribute[] $r9;
        java.lang.Object[] $r10;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest certificationRequest>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.pkcs.CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequestInfo getCertificationRequestInfo()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.pkcs.CertificationRequestInfo: org.spongycastle.asn1.ASN1Set getAttributes()>();

        if $r5 != null goto label1;

        $r9 = <org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.Attribute[] EMPTY_ARRAY>;

        return $r9;

     label1:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        i0 = 0;

     label2:
        $i1 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1Set: int size()>();

        if i0 == $i1 goto label4;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(i0);

        $r7 = staticinvoke <org.spongycastle.asn1.pkcs.Attribute: org.spongycastle.asn1.pkcs.Attribute getInstance(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.pkcs.Attribute: org.spongycastle.asn1.ASN1ObjectIdentifier getAttrType()>();

        $z0 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 != 0 goto label5;

        $r9 = <org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.Attribute[] EMPTY_ARRAY>;

        return $r9;

     label5:
        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r9 = newarray (org.spongycastle.asn1.pkcs.Attribute)[i0];

        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r9 = (org.spongycastle.asn1.pkcs.Attribute[]) $r10;

        return $r9;
    }
    public byte[] getEncoded() throws java.io.IOException
    {
        org.spongycastle.pkcs.PKCS10CertificationRequest r0;
        byte[] $r1;
        org.spongycastle.asn1.pkcs.CertificationRequest $r2;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r2 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest certificationRequest>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.pkcs.CertificationRequest: byte[] getEncoded()>();

        return $r1;
    }
    public byte[] getSignature()
    {
        org.spongycastle.pkcs.PKCS10CertificationRequest r0;
        org.spongycastle.asn1.pkcs.CertificationRequest $r1;
        org.spongycastle.asn1.DERBitString $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r1 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest certificationRequest>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.CertificationRequest: org.spongycastle.asn1.DERBitString getSignature()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        return $r3;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()
    {
        org.spongycastle.pkcs.PKCS10CertificationRequest r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.pkcs.CertificationRequest $r2;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r2 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest certificationRequest>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.pkcs.CertificationRequest: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        return $r1;
    }
    public org.spongycastle.asn1.x500.X500Name getSubject()
    {
        org.spongycastle.pkcs.PKCS10CertificationRequest r0;
        org.spongycastle.asn1.pkcs.CertificationRequest $r1;
        org.spongycastle.asn1.pkcs.CertificationRequestInfo $r2;
        org.spongycastle.asn1.x500.X500Name $r3;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r1 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest certificationRequest>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequestInfo getCertificationRequestInfo()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.pkcs.CertificationRequestInfo: org.spongycastle.asn1.x500.X500Name getSubject()>();

        $r3 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r3);

        return $r3;
    }
    public org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()
    {
        org.spongycastle.pkcs.PKCS10CertificationRequest r0;
        org.spongycastle.asn1.pkcs.CertificationRequest $r1;
        org.spongycastle.asn1.pkcs.CertificationRequestInfo $r2;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r3;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r1 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest certificationRequest>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequestInfo getCertificationRequestInfo()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.pkcs.CertificationRequestInfo: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

        return $r3;
    }
    public int hashCode()
    {
        org.spongycastle.pkcs.PKCS10CertificationRequest r0;
        org.spongycastle.asn1.pkcs.CertificationRequest $r1;
        int $i0;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r1 = virtualinvoke r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest toASN1Structure()>();

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.CertificationRequest: int hashCode()>();

        return $i0;
    }
    public boolean isSignatureValid(org.spongycastle.operator.ContentVerifierProvider) throws org.spongycastle.pkcs.PKCSException
    {
        org.spongycastle.pkcs.PKCS10CertificationRequest r0;
        org.spongycastle.operator.ContentVerifierProvider $r1;
        java.lang.Exception r2;
        org.spongycastle.asn1.pkcs.CertificationRequest $r3;
        org.spongycastle.asn1.pkcs.CertificationRequestInfo $r4;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r5;
        org.spongycastle.operator.ContentVerifier $r6;
        java.io.OutputStream $r7;
        byte[] $r8;
        org.spongycastle.asn1.DERBitString $r9;
        boolean $z0;
        org.spongycastle.pkcs.PKCSException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r1 := @parameter0: org.spongycastle.operator.ContentVerifierProvider;

        $r3 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest certificationRequest>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.pkcs.CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequestInfo getCertificationRequestInfo()>();

     label1:
        $r3 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest certificationRequest>;

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.pkcs.CertificationRequest: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r6 = interfaceinvoke $r1.<org.spongycastle.operator.ContentVerifierProvider: org.spongycastle.operator.ContentVerifier get(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r5);

        $r7 = interfaceinvoke $r6.<org.spongycastle.operator.ContentVerifier: java.io.OutputStream getOutputStream()>();

        $r8 = virtualinvoke $r4.<org.spongycastle.asn1.pkcs.CertificationRequestInfo: byte[] getEncoded(java.lang.String)>("DER");

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[])>($r8);

        virtualinvoke $r7.<java.io.OutputStream: void close()>();

     label2:
        $r3 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest certificationRequest>;

        $r9 = virtualinvoke $r3.<org.spongycastle.asn1.pkcs.CertificationRequest: org.spongycastle.asn1.DERBitString getSignature()>();

        $r8 = virtualinvoke $r9.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        $z0 = interfaceinvoke $r6.<org.spongycastle.operator.ContentVerifier: boolean verify(byte[])>($r8);

        return $z0;

     label3:
        r2 := @caughtexception;

        $r10 = new org.spongycastle.pkcs.PKCSException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to process signature: ");

        $r12 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.spongycastle.pkcs.PKCSException: void <init>(java.lang.String,java.lang.Throwable)>($r12, r2);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public org.spongycastle.asn1.pkcs.CertificationRequest toASN1Structure()
    {
        org.spongycastle.pkcs.PKCS10CertificationRequest r0;
        org.spongycastle.asn1.pkcs.CertificationRequest r1;

        r0 := @this: org.spongycastle.pkcs.PKCS10CertificationRequest;

        r1 = r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest certificationRequest>;

        return r1;
    }
