org.spongycastle.pkcs.PKCS12PfxPdu extends java.lang.Object
private org.spongycastle.asn1.pkcs.Pfx pfx
    public void <init>(org.spongycastle.asn1.pkcs.Pfx)
    {
        org.spongycastle.pkcs.PKCS12PfxPdu r0;
        org.spongycastle.asn1.pkcs.Pfx $r1;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPdu;

        $r1 := @parameter0: org.spongycastle.asn1.pkcs.Pfx;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pkcs.PKCS12PfxPdu: org.spongycastle.asn1.pkcs.Pfx pfx> = $r1;

        return;
    }
    public void <init>(byte[]) throws java.io.IOException
    {
        org.spongycastle.pkcs.PKCS12PfxPdu r0;
        byte[] $r1;
        org.spongycastle.asn1.pkcs.Pfx $r2;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPdu;

        $r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.spongycastle.pkcs.PKCS12PfxPdu: org.spongycastle.asn1.pkcs.Pfx parseBytes(byte[])>($r1);

        specialinvoke r0.<org.spongycastle.pkcs.PKCS12PfxPdu: void <init>(org.spongycastle.asn1.pkcs.Pfx)>($r2);

        return;
    }
    private static org.spongycastle.asn1.pkcs.Pfx parseBytes(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.pkcs.Pfx $r2;
        java.lang.ClassCastException r3;
        org.spongycastle.cert.CertIOException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.IllegalArgumentException r7;

        $r0 := @parameter0: byte[];

     label1:
        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r0);

        $r2 = staticinvoke <org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.Pfx getInstance(java.lang.Object)>($r1);

     label2:
        return $r2;

     label3:
        r3 := @caughtexception;

        $r4 = new org.spongycastle.cert.CertIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed data: ");

        $r6 = virtualinvoke r3.<java.lang.ClassCastException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.cert.CertIOException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r3);

        throw $r4;

     label4:
        r7 := @caughtexception;

        $r4 = new org.spongycastle.cert.CertIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed data: ");

        $r6 = virtualinvoke r7.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.cert.CertIOException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r7);

        throw $r4;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
    }
    public org.spongycastle.asn1.pkcs.ContentInfo[] getContentInfos()
    {
        org.spongycastle.pkcs.PKCS12PfxPdu r0;
        org.spongycastle.asn1.pkcs.ContentInfo[] r1;
        org.spongycastle.asn1.pkcs.Pfx $r2;
        org.spongycastle.asn1.pkcs.ContentInfo $r3;
        org.spongycastle.asn1.ASN1Encodable $r4;
        org.spongycastle.asn1.ASN1OctetString $r5;
        byte[] $r6;
        org.spongycastle.asn1.ASN1Sequence $r7;
        int $i0, $i1;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPdu;

        $r2 = r0.<org.spongycastle.pkcs.PKCS12PfxPdu: org.spongycastle.asn1.pkcs.Pfx pfx>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.ContentInfo getAuthSafe()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1Encodable getContent()>();

        $r5 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r6);

        $i0 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        r1 = newarray (org.spongycastle.asn1.pkcs.ContentInfo)[$i0];

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        if $i0 == $i1 goto label2;

        $r4 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r3 = staticinvoke <org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.pkcs.ContentInfo getInstance(java.lang.Object)>($r4);

        r1[$i0] = $r3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public byte[] getEncoded() throws java.io.IOException
    {
        org.spongycastle.pkcs.PKCS12PfxPdu r0;
        org.spongycastle.asn1.pkcs.Pfx $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPdu;

        $r1 = virtualinvoke r0.<org.spongycastle.pkcs.PKCS12PfxPdu: org.spongycastle.asn1.pkcs.Pfx toASN1Structure()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.Pfx: byte[] getEncoded()>();

        return $r2;
    }
    public byte[] getEncoded(java.lang.String) throws java.io.IOException
    {
        org.spongycastle.pkcs.PKCS12PfxPdu r0;
        java.lang.String $r1;
        org.spongycastle.asn1.pkcs.Pfx $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPdu;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.spongycastle.pkcs.PKCS12PfxPdu: org.spongycastle.asn1.pkcs.Pfx toASN1Structure()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.pkcs.Pfx: byte[] getEncoded(java.lang.String)>($r1);

        return $r3;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getMacAlgorithmID()
    {
        org.spongycastle.pkcs.PKCS12PfxPdu r0;
        org.spongycastle.asn1.pkcs.Pfx $r1;
        org.spongycastle.asn1.pkcs.MacData $r2;
        org.spongycastle.asn1.x509.DigestInfo $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPdu;

        $r1 = r0.<org.spongycastle.pkcs.PKCS12PfxPdu: org.spongycastle.asn1.pkcs.Pfx pfx>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData getMacData()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.pkcs.MacData: org.spongycastle.asn1.x509.DigestInfo getMac()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.DigestInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        return $r4;

     label1:
        return null;
    }
    public boolean hasMac()
    {
        org.spongycastle.pkcs.PKCS12PfxPdu r0;
        org.spongycastle.asn1.pkcs.MacData $r1;
        org.spongycastle.asn1.pkcs.Pfx $r2;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPdu;

        $r2 = r0.<org.spongycastle.pkcs.PKCS12PfxPdu: org.spongycastle.asn1.pkcs.Pfx pfx>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData getMacData()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isMacValid(org.spongycastle.pkcs.PKCS12MacCalculatorBuilderProvider, char[]) throws org.spongycastle.pkcs.PKCSException
    {
        org.spongycastle.pkcs.PKCS12PfxPdu r0;
        org.spongycastle.pkcs.PKCS12MacCalculatorBuilderProvider $r1;
        char[] $r2;
        java.io.IOException r3;
        org.spongycastle.pkcs.MacDataGenerator r4;
        boolean $z0;
        org.spongycastle.asn1.pkcs.Pfx $r5;
        org.spongycastle.asn1.pkcs.MacData $r6;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r7, $r9;
        org.spongycastle.asn1.x509.DigestInfo $r8;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r10;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r11;
        byte[] $r12, $r18;
        java.math.BigInteger $r13;
        int $i0;
        org.spongycastle.pkcs.PKCS12MacCalculatorBuilder $r14;
        org.spongycastle.asn1.pkcs.ContentInfo $r15;
        org.spongycastle.asn1.ASN1Encodable $r16;
        org.spongycastle.asn1.ASN1OctetString $r17;
        org.spongycastle.pkcs.PKCSException $r19;
        java.lang.StringBuilder $r20;
        java.lang.String $r21;
        java.lang.IllegalStateException $r22;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPdu;

        $r1 := @parameter0: org.spongycastle.pkcs.PKCS12MacCalculatorBuilderProvider;

        $r2 := @parameter1: char[];

        $z0 = virtualinvoke r0.<org.spongycastle.pkcs.PKCS12PfxPdu: boolean hasMac()>();

        if $z0 == 0 goto label6;

        $r5 = r0.<org.spongycastle.pkcs.PKCS12PfxPdu: org.spongycastle.asn1.pkcs.Pfx pfx>;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData getMacData()>();

        r4 = new org.spongycastle.pkcs.MacDataGenerator;

        $r7 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r8 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.MacData: org.spongycastle.asn1.x509.DigestInfo getMac()>();

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.x509.DigestInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r10 = virtualinvoke $r9.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r11 = new org.spongycastle.asn1.pkcs.PKCS12PBEParams;

        $r12 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.MacData: byte[] getSalt()>();

        $r13 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.MacData: java.math.BigInteger getIterationCount()>();

        $i0 = virtualinvoke $r13.<java.math.BigInteger: int intValue()>();

        specialinvoke $r11.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: void <init>(byte[],int)>($r12, $i0);

        specialinvoke $r7.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r10, $r11);

        $r14 = interfaceinvoke $r1.<org.spongycastle.pkcs.PKCS12MacCalculatorBuilderProvider: org.spongycastle.pkcs.PKCS12MacCalculatorBuilder get(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r7);

        specialinvoke r4.<org.spongycastle.pkcs.MacDataGenerator: void <init>(org.spongycastle.pkcs.PKCS12MacCalculatorBuilder)>($r14);

        $r5 = r0.<org.spongycastle.pkcs.PKCS12PfxPdu: org.spongycastle.asn1.pkcs.Pfx pfx>;

     label1:
        $r15 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.ContentInfo getAuthSafe()>();

        $r16 = virtualinvoke $r15.<org.spongycastle.asn1.pkcs.ContentInfo: org.spongycastle.asn1.ASN1Encodable getContent()>();

        $r17 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r16);

        $r12 = virtualinvoke $r17.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r6 = virtualinvoke r4.<org.spongycastle.pkcs.MacDataGenerator: org.spongycastle.asn1.pkcs.MacData build(char[],byte[])>($r2, $r12);

        $r12 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.MacData: byte[] getEncoded()>();

     label2:
        $r5 = r0.<org.spongycastle.pkcs.PKCS12PfxPdu: org.spongycastle.asn1.pkcs.Pfx pfx>;

     label3:
        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.Pfx: org.spongycastle.asn1.pkcs.MacData getMacData()>();

        $r18 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.MacData: byte[] getEncoded()>();

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>($r12, $r18);

     label4:
        return $z0;

     label5:
        r3 := @caughtexception;

        $r19 = new org.spongycastle.pkcs.PKCSException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to process AuthSafe: ");

        $r21 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.spongycastle.pkcs.PKCSException: void <init>(java.lang.String)>($r21);

        throw $r19;

     label6:
        $r22 = new java.lang.IllegalStateException;

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no MAC present on PFX");

        throw $r22;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }
    public org.spongycastle.asn1.pkcs.Pfx toASN1Structure()
    {
        org.spongycastle.pkcs.PKCS12PfxPdu r0;
        org.spongycastle.asn1.pkcs.Pfx r1;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPdu;

        r1 = r0.<org.spongycastle.pkcs.PKCS12PfxPdu: org.spongycastle.asn1.pkcs.Pfx pfx>;

        return r1;
    }
