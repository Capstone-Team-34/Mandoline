org.spongycastle.pkcs.jcajce.JcaPKCS12SafeBagBuilder extends org.spongycastle.pkcs.PKCS12SafeBagBuilder
    public void <init>(java.security.PrivateKey)
    {
        org.spongycastle.pkcs.jcajce.JcaPKCS12SafeBagBuilder r0;
        java.security.PrivateKey $r1;
        byte[] $r2;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r3;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcaPKCS12SafeBagBuilder;

        $r1 := @parameter0: java.security.PrivateKey;

        $r2 = interfaceinvoke $r1.<java.security.PrivateKey: byte[] getEncoded()>();

        $r3 = staticinvoke <org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)>($r2);

        specialinvoke r0.<org.spongycastle.pkcs.PKCS12SafeBagBuilder: void <init>(org.spongycastle.asn1.pkcs.PrivateKeyInfo)>($r3);

        return;
    }
    public void <init>(java.security.PrivateKey, org.spongycastle.operator.OutputEncryptor)
    {
        org.spongycastle.pkcs.jcajce.JcaPKCS12SafeBagBuilder r0;
        java.security.PrivateKey $r1;
        org.spongycastle.operator.OutputEncryptor $r2;
        byte[] $r3;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r4;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcaPKCS12SafeBagBuilder;

        $r1 := @parameter0: java.security.PrivateKey;

        $r2 := @parameter1: org.spongycastle.operator.OutputEncryptor;

        $r3 = interfaceinvoke $r1.<java.security.PrivateKey: byte[] getEncoded()>();

        $r4 = staticinvoke <org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)>($r3);

        specialinvoke r0.<org.spongycastle.pkcs.PKCS12SafeBagBuilder: void <init>(org.spongycastle.asn1.pkcs.PrivateKeyInfo,org.spongycastle.operator.OutputEncryptor)>($r4, $r2);

        return;
    }
    public void <init>(java.security.cert.X509Certificate) throws java.io.IOException
    {
        org.spongycastle.pkcs.jcajce.JcaPKCS12SafeBagBuilder r0;
        java.security.cert.X509Certificate $r1;
        org.spongycastle.asn1.x509.Certificate $r2;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcaPKCS12SafeBagBuilder;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = staticinvoke <org.spongycastle.pkcs.jcajce.JcaPKCS12SafeBagBuilder: org.spongycastle.asn1.x509.Certificate convertCert(java.security.cert.X509Certificate)>($r1);

        specialinvoke r0.<org.spongycastle.pkcs.PKCS12SafeBagBuilder: void <init>(org.spongycastle.asn1.x509.Certificate)>($r2);

        return;
    }
    private static org.spongycastle.asn1.x509.Certificate convertCert(java.security.cert.X509Certificate) throws java.io.IOException
    {
        java.security.cert.X509Certificate $r0;
        java.security.cert.CertificateEncodingException r1;
        byte[] $r2;
        org.spongycastle.asn1.x509.Certificate $r3;
        org.spongycastle.pkcs.PKCSIOException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @parameter0: java.security.cert.X509Certificate;

     label1:
        $r2 = virtualinvoke $r0.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        $r3 = staticinvoke <org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Certificate getInstance(java.lang.Object)>($r2);

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        $r4 = new org.spongycastle.pkcs.PKCSIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot encode certificate: ");

        $r6 = virtualinvoke r1.<java.security.cert.CertificateEncodingException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.pkcs.PKCSIOException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r1);

        throw $r4;

        catch java.security.cert.CertificateEncodingException from label1 to label2 with label3;
    }
