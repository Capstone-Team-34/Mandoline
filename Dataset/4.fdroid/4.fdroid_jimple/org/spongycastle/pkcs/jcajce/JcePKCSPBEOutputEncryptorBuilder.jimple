org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder extends java.lang.Object
private org.spongycastle.asn1.ASN1ObjectIdentifier algorithm
private org.spongycastle.jcajce.util.JcaJceHelper helper
private int iterationCount
private org.spongycastle.asn1.ASN1ObjectIdentifier keyEncAlgorithm
private org.spongycastle.operator.SecretKeySizeProvider keySizeProvider
private java.security.SecureRandom random
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r4;
        boolean $z0;
        org.spongycastle.jcajce.util.DefaultJcaJceHelper $r2;
        org.spongycastle.operator.SecretKeySizeProvider $r3;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        $r3 = <org.spongycastle.operator.DefaultSecretKeySizeProvider: org.spongycastle.operator.SecretKeySizeProvider INSTANCE>;

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.operator.SecretKeySizeProvider keySizeProvider> = $r3;

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: int iterationCount> = 1024;

        $z0 = specialinvoke r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: boolean isPKCS12(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        if $z0 == 0 goto label1;

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algorithm> = $r1;

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier keyEncAlgorithm> = $r1;

        return;

     label1:
        $r4 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_PBES2>;

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algorithm> = $r4;

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier keyEncAlgorithm> = $r1;

        return;
    }
    private static byte[] PKCS12PasswordToBytes(char[])
    {
        char[] $r0;
        int $i0, $i1, $i3;
        byte[] r1;
        char $c2;
        byte $b4;

        $r0 := @parameter0: char[];

        if $r0 == null goto label2;

        $i0 = lengthof $r0;

        if $i0 <= 0 goto label2;

        $i0 = lengthof $r0;

        $i0 = $i0 + 1;

        $i0 = $i0 * 2;

        r1 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 == $i1 goto label3;

        $i1 = $i0 * 2;

        $c2 = $r0[$i0];

        $i3 = $c2 >>> 8;

        $b4 = (byte) $i3;

        r1[$i1] = $b4;

        $i1 = $i0 * 2;

        $i1 = $i1 + 1;

        $c2 = $r0[$i0];

        $b4 = (byte) $c2;

        r1[$i1] = $b4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r1 = newarray (byte)[0];

     label3:
        return r1;
    }
    private static byte[] PKCS5PasswordToBytes(char[])
    {
        char[] $r0;
        int $i0, $i1;
        byte[] r1;
        char $c2;
        byte $b3;

        $r0 := @parameter0: char[];

        if $r0 == null goto label2;

        $i0 = lengthof $r0;

        r1 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 == $i1 goto label3;

        $c2 = $r0[$i0];

        $b3 = (byte) $c2;

        r1[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r1 = newarray (byte)[0];

     label3:
        return r1;
    }
    static boolean access$000(org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder, org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder $r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        boolean $z0;

        $r0 := @parameter0: org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder;

        $r1 := @parameter1: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $z0 = specialinvoke $r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: boolean isPKCS12(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        return $z0;
    }
    static byte[] access$100(char[])
    {
        char[] $r0;
        byte[] $r1;

        $r0 := @parameter0: char[];

        $r1 = staticinvoke <org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: byte[] PKCS5PasswordToBytes(char[])>($r0);

        return $r1;
    }
    static byte[] access$200(char[])
    {
        char[] $r0;
        byte[] $r1;

        $r0 := @parameter0: char[];

        $r1 = staticinvoke <org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: byte[] PKCS12PasswordToBytes(char[])>($r0);

        return $r1;
    }
    private boolean isPKCS12(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r2;
        boolean $z0;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_12PbeIds>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean on(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

        if $z0 != 0 goto label1;

        $r2 = <org.spongycastle.asn1.bc.BCObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier bc_pbe_sha1_pkcs12>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean on(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

        if $z0 != 0 goto label1;

        $r2 = <org.spongycastle.asn1.bc.BCObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier bc_pbe_sha256_pkcs12>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean on(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public org.spongycastle.operator.OutputEncryptor build(char[]) throws org.spongycastle.operator.OperatorCreationException
    {
        org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder r0;
        char[] $r1;
        org.spongycastle.asn1.pkcs.PBES2Parameters r2;
        java.lang.Exception r3;
        byte[] r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5, $r7;
        java.security.SecureRandom $r6;
        boolean $z0;
        org.spongycastle.jcajce.util.JcaJceHelper $r8;
        java.lang.String $r9;
        javax.crypto.Cipher $r10, r11;
        org.spongycastle.jcajce.PKCS12KeyWithParameters $r12;
        int $i0, $i1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r13;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r14;
        org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder$1 $r15;
        javax.crypto.SecretKeyFactory $r16;
        javax.crypto.spec.PBEKeySpec $r17;
        org.spongycastle.operator.SecretKeySizeProvider $r18;
        javax.crypto.SecretKey $r19;
        org.spongycastle.asn1.pkcs.KeyDerivationFunc $r20;
        org.spongycastle.asn1.pkcs.PBKDF2Params $r21;
        org.spongycastle.asn1.pkcs.EncryptionScheme $r22;
        java.security.AlgorithmParameters $r23;
        org.spongycastle.asn1.ASN1Primitive $r24;
        org.spongycastle.operator.OperatorCreationException $r25;
        java.lang.StringBuilder $r26;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder;

        $r1 := @parameter0: char[];

        $r6 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: java.security.SecureRandom random>;

        if $r6 != null goto label01;

        $r6 = new java.security.SecureRandom;

        specialinvoke $r6.<java.security.SecureRandom: void <init>()>();

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: java.security.SecureRandom random> = $r6;

     label01:
        r4 = newarray (byte)[20];

        $r6 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: java.security.SecureRandom random>;

        virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>(r4);

     label02:
        $r5 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algorithm>;

     label03:
        $r7 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_12PbeIds>;

     label04:
        $z0 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean on(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r7);

     label05:
        if $z0 == 0 goto label16;

     label06:
        $r8 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        $r5 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algorithm>;

        $r9 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r10 = interfaceinvoke $r8.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.Cipher createCipher(java.lang.String)>($r9);

     label07:
        r11 = $r10;

        $r12 = new org.spongycastle.jcajce.PKCS12KeyWithParameters;

     label08:
        $i0 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: int iterationCount>;

        specialinvoke $r12.<org.spongycastle.jcajce.PKCS12KeyWithParameters: void <init>(char[],byte[],int)>($r1, r4, $i0);

        virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r12);

     label09:
        r13 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

     label10:
        $r5 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algorithm>;

     label11:
        $r14 = new org.spongycastle.asn1.pkcs.PKCS12PBEParams;

     label12:
        $i0 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: int iterationCount>;

        specialinvoke $r14.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: void <init>(byte[],int)>(r4, $i0);

        specialinvoke r13.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r5, $r14);

     label13:
        $r15 = new org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder$1;

     label14:
        specialinvoke $r15.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder$1: void <init>(org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder,org.spongycastle.asn1.x509.AlgorithmIdentifier,javax.crypto.Cipher,char[])>(r0, r13, r11, $r1);

     label15:
        return $r15;

     label16:
        $r5 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algorithm>;

     label17:
        $r7 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_PBES2>;

     label18:
        $z0 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r7);

     label19:
        if $z0 == 0 goto label36;

     label20:
        $r8 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label21:
        $r5 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_PBKDF2>;

     label22:
        $r9 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r16 = interfaceinvoke $r8.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.SecretKeyFactory createSecretKeyFactory(java.lang.String)>($r9);

     label23:
        $r17 = new javax.crypto.spec.PBEKeySpec;

     label24:
        $i0 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: int iterationCount>;

        $r18 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.operator.SecretKeySizeProvider keySizeProvider>;

     label25:
        r13 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

     label26:
        $r5 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier keyEncAlgorithm>;

        specialinvoke r13.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r5);

        $i1 = interfaceinvoke $r18.<org.spongycastle.operator.SecretKeySizeProvider: int getKeySize(org.spongycastle.asn1.x509.AlgorithmIdentifier)>(r13);

        specialinvoke $r17.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, r4, $i0, $i1);

        $r19 = virtualinvoke $r16.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r17);

        $r8 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        $r5 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier keyEncAlgorithm>;

        $r9 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r10 = interfaceinvoke $r8.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.Cipher createCipher(java.lang.String)>($r9);

     label27:
        r11 = $r10;

     label28:
        $r6 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: java.security.SecureRandom random>;

        virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(1, $r19, $r6);

     label29:
        r2 = new org.spongycastle.asn1.pkcs.PBES2Parameters;

        $r20 = new org.spongycastle.asn1.pkcs.KeyDerivationFunc;

        $r5 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_PBKDF2>;

        $r21 = new org.spongycastle.asn1.pkcs.PBKDF2Params;

     label30:
        $i0 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: int iterationCount>;

        specialinvoke $r21.<org.spongycastle.asn1.pkcs.PBKDF2Params: void <init>(byte[],int)>(r4, $i0);

        specialinvoke $r20.<org.spongycastle.asn1.pkcs.KeyDerivationFunc: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r5, $r21);

     label31:
        $r22 = new org.spongycastle.asn1.pkcs.EncryptionScheme;

     label32:
        $r5 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier keyEncAlgorithm>;

        $r23 = virtualinvoke $r10.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();

        r4 = virtualinvoke $r23.<java.security.AlgorithmParameters: byte[] getEncoded()>();

        $r24 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>(r4);

        specialinvoke $r22.<org.spongycastle.asn1.pkcs.EncryptionScheme: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r5, $r24);

        specialinvoke r2.<org.spongycastle.asn1.pkcs.PBES2Parameters: void <init>(org.spongycastle.asn1.pkcs.KeyDerivationFunc,org.spongycastle.asn1.pkcs.EncryptionScheme)>($r20, $r22);

     label33:
        r13 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

     label34:
        $r5 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier algorithm>;

        specialinvoke r13.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r5, r2);

     label35:
        goto label13;

     label36:
        $r25 = new org.spongycastle.operator.OperatorCreationException;

     label37:
        specialinvoke $r25.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String)>("unrecognised algorithm");

        throw $r25;

     label38:
        r3 := @caughtexception;

        $r25 = new org.spongycastle.operator.OperatorCreationException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to create OutputEncryptor: ");

        $r9 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>();

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r9, r3);

        throw $r25;

        catch java.lang.Exception from label02 to label03 with label38;
        catch java.lang.Exception from label04 to label05 with label38;
        catch java.lang.Exception from label06 to label07 with label38;
        catch java.lang.Exception from label08 to label09 with label38;
        catch java.lang.Exception from label10 to label11 with label38;
        catch java.lang.Exception from label12 to label13 with label38;
        catch java.lang.Exception from label14 to label15 with label38;
        catch java.lang.Exception from label16 to label17 with label38;
        catch java.lang.Exception from label18 to label19 with label38;
        catch java.lang.Exception from label20 to label21 with label38;
        catch java.lang.Exception from label22 to label23 with label38;
        catch java.lang.Exception from label24 to label25 with label38;
        catch java.lang.Exception from label26 to label27 with label38;
        catch java.lang.Exception from label28 to label29 with label38;
        catch java.lang.Exception from label30 to label31 with label38;
        catch java.lang.Exception from label32 to label33 with label38;
        catch java.lang.Exception from label34 to label35 with label38;
        catch java.lang.Exception from label37 to label38 with label38;
    }
    public org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder setIterationCount(int)
    {
        org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder r0;
        int $i0;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder;

        $i0 := @parameter0: int;

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: int iterationCount> = $i0;

        return r0;
    }
    public org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder setKeySizeProvider(org.spongycastle.operator.SecretKeySizeProvider)
    {
        org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder r0;
        org.spongycastle.operator.SecretKeySizeProvider $r1;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder;

        $r1 := @parameter0: org.spongycastle.operator.SecretKeySizeProvider;

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.operator.SecretKeySizeProvider keySizeProvider> = $r1;

        return r0;
    }
    public org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder setProvider(java.lang.String)
    {
        org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder r0;
        java.lang.String $r1;
        org.spongycastle.jcajce.util.NamedJcaJceHelper $r2;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.jcajce.util.NamedJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.NamedJcaJceHelper: void <init>(java.lang.String)>($r1);

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder setProvider(java.security.Provider)
    {
        org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder r0;
        java.security.Provider $r1;
        org.spongycastle.jcajce.util.ProviderJcaJceHelper $r2;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.jcajce.util.ProviderJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.ProviderJcaJceHelper: void <init>(java.security.Provider)>($r1);

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return r0;
    }
