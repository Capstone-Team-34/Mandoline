org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1 extends java.lang.Object implements org.spongycastle.operator.MacCalculator
final org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder this$0
final javax.crypto.SecretKey val$key
final javax.crypto.Mac val$mac
final byte[] val$salt
    void <init>(org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder, byte[], javax.crypto.Mac, javax.crypto.SecretKey)
    {
        org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1 r0;
        org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder $r1;
        byte[] $r2;
        javax.crypto.Mac $r3;
        javax.crypto.SecretKey $r4;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1;

        $r1 := @parameter0: org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: javax.crypto.Mac;

        $r4 := @parameter3: javax.crypto.SecretKey;

        r0.<org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1: org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder this$0> = $r1;

        r0.<org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1: byte[] val$salt> = $r2;

        r0.<org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1: javax.crypto.Mac val$mac> = $r3;

        r0.<org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1: javax.crypto.SecretKey val$key> = $r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()
    {
        org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1 r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r2;
        byte[] $r3;
        org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder $r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;
        int $i0;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1;

        $r1 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r4 = r0.<org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1: org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder this$0>;

        $r5 = staticinvoke <org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier access$000(org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder)>($r4);

        $r2 = new org.spongycastle.asn1.pkcs.PKCS12PBEParams;

        $r3 = r0.<org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1: byte[] val$salt>;

        $r4 = r0.<org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1: org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder this$0>;

        $i0 = staticinvoke <org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder: int access$100(org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder)>($r4);

        specialinvoke $r2.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: void <init>(byte[],int)>($r3, $i0);

        specialinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r5, $r2);

        return $r1;
    }
    public org.spongycastle.operator.GenericKey getKey()
    {
        org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1 r0;
        org.spongycastle.operator.GenericKey $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        javax.crypto.SecretKey $r3;
        byte[] $r4;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1;

        $r1 = new org.spongycastle.operator.GenericKey;

        $r2 = virtualinvoke r0.<org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r3 = r0.<org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1: javax.crypto.SecretKey val$key>;

        $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>();

        specialinvoke $r1.<org.spongycastle.operator.GenericKey: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r2, $r4);

        return $r1;
    }
    public byte[] getMac()
    {
        org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1 r0;
        byte[] $r1;
        javax.crypto.Mac $r2;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1;

        $r2 = r0.<org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1: javax.crypto.Mac val$mac>;

        $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal()>();

        return $r1;
    }
    public java.io.OutputStream getOutputStream()
    {
        org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1 r0;
        org.spongycastle.jcajce.io.MacOutputStream $r1;
        javax.crypto.Mac $r2;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1;

        $r1 = new org.spongycastle.jcajce.io.MacOutputStream;

        $r2 = r0.<org.spongycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder$1: javax.crypto.Mac val$mac>;

        specialinvoke $r1.<org.spongycastle.jcajce.io.MacOutputStream: void <init>(javax.crypto.Mac)>($r2);

        return $r1;
    }
