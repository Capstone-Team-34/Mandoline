org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1 extends java.lang.Object implements org.spongycastle.operator.InputDecryptorProvider
private javax.crypto.Cipher cipher
private org.spongycastle.asn1.x509.AlgorithmIdentifier encryptionAlg
final org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder this$0
final char[] val$password
    void <init>(org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder, char[])
    {
        org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1 r0;
        org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder $r1;
        char[] $r2;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1;

        $r1 := @parameter0: org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder;

        $r2 := @parameter1: char[];

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder this$0> = $r1;

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: char[] val$password> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static org.spongycastle.asn1.x509.AlgorithmIdentifier access$300(org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1)
    {
        org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1 $r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        $r0 := @parameter0: org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1;

        r1 = $r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.spongycastle.asn1.x509.AlgorithmIdentifier encryptionAlg>;

        return r1;
    }
    static javax.crypto.Cipher access$400(org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1)
    {
        org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1 $r0;
        javax.crypto.Cipher r1;

        $r0 := @parameter0: org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1;

        r1 = $r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: javax.crypto.Cipher cipher>;

        return r1;
    }
    public org.spongycastle.operator.InputDecryptor get(org.spongycastle.asn1.x509.AlgorithmIdentifier) throws org.spongycastle.operator.OperatorCreationException
    {
        org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1 r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        java.lang.Exception r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3, $r4;
        boolean $z0;
        org.spongycastle.asn1.ASN1Encodable $r5;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r6;
        org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder $r7;
        org.spongycastle.jcajce.util.JcaJceHelper $r8;
        java.lang.String $r9;
        javax.crypto.Cipher $r10;
        org.spongycastle.jcajce.PKCS12KeyWithParameters $r11;
        char[] $r12;
        byte[] $r13;
        java.math.BigInteger $r14;
        int $i0, $i1;
        org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1$1 $r15;
        org.spongycastle.asn1.pkcs.PBES2Parameters $r16;
        org.spongycastle.asn1.pkcs.KeyDerivationFunc $r17;
        org.spongycastle.asn1.pkcs.PBKDF2Params $r18;
        org.spongycastle.asn1.pkcs.EncryptionScheme $r19;
        javax.crypto.SecretKeyFactory $r20;
        javax.crypto.spec.PBEKeySpec $r21;
        org.spongycastle.operator.SecretKeySizeProvider $r22;
        javax.crypto.SecretKey $r23;
        javax.crypto.spec.IvParameterSpec $r24;
        org.spongycastle.asn1.ASN1OctetString $r25;
        org.spongycastle.operator.OperatorCreationException $r26;
        java.lang.StringBuilder $r27;
        org.spongycastle.jcajce.spec.PBKDF2KeySpec $r28;
        org.spongycastle.asn1.cryptopro.GOST28147Parameters $r29;
        org.spongycastle.jcajce.spec.GOST28147ParameterSpec $r30;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r4 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier pkcs_12PbeIds>;

     label01:
        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean on(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

     label02:
        if $z0 == 0 goto label07;

     label03:
        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r6 = staticinvoke <org.spongycastle.asn1.pkcs.PKCS12PBEParams: org.spongycastle.asn1.pkcs.PKCS12PBEParams getInstance(java.lang.Object)>($r5);

        $r7 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder this$0>;

        $r8 = staticinvoke <org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder: org.spongycastle.jcajce.util.JcaJceHelper access$000(org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder)>($r7);

        $r9 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r10 = interfaceinvoke $r8.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.Cipher createCipher(java.lang.String)>($r9);

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: javax.crypto.Cipher cipher> = $r10;

        $r10 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: javax.crypto.Cipher cipher>;

     label04:
        $r11 = new org.spongycastle.jcajce.PKCS12KeyWithParameters;

     label05:
        $r12 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: char[] val$password>;

        $r7 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder this$0>;

        $z0 = staticinvoke <org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder: boolean access$100(org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder)>($r7);

        $r13 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: byte[] getIV()>();

        $r14 = virtualinvoke $r6.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: java.math.BigInteger getIterations()>();

        $i0 = virtualinvoke $r14.<java.math.BigInteger: int intValue()>();

        specialinvoke $r11.<org.spongycastle.jcajce.PKCS12KeyWithParameters: void <init>(char[],boolean,byte[],int)>($r12, $z0, $r13, $i0);

        virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r11);

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.spongycastle.asn1.x509.AlgorithmIdentifier encryptionAlg> = $r1;

     label06:
        $r15 = new org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1$1;

        specialinvoke $r15.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1$1: void <init>(org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1)>(r0);

        return $r15;

     label07:
        $r4 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_PBES2>;

     label08:
        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r4);

     label09:
        if $z0 == 0 goto label06;

     label10:
        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r16 = staticinvoke <org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.PBES2Parameters getInstance(java.lang.Object)>($r5);

        $r17 = virtualinvoke $r16.<org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.KeyDerivationFunc getKeyDerivationFunc()>();

        $r5 = virtualinvoke $r17.<org.spongycastle.asn1.pkcs.KeyDerivationFunc: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r18 = staticinvoke <org.spongycastle.asn1.pkcs.PBKDF2Params: org.spongycastle.asn1.pkcs.PBKDF2Params getInstance(java.lang.Object)>($r5);

        $r19 = virtualinvoke $r16.<org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.EncryptionScheme getEncryptionScheme()>();

        $r1 = staticinvoke <org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)>($r19);

        $r7 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder this$0>;

        $r8 = staticinvoke <org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder: org.spongycastle.jcajce.util.JcaJceHelper access$000(org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder)>($r7);

        $r17 = virtualinvoke $r16.<org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.KeyDerivationFunc getKeyDerivationFunc()>();

        $r3 = virtualinvoke $r17.<org.spongycastle.asn1.pkcs.KeyDerivationFunc: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r9 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r20 = interfaceinvoke $r8.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.SecretKeyFactory createSecretKeyFactory(java.lang.String)>($r9);

        $z0 = virtualinvoke $r18.<org.spongycastle.asn1.pkcs.PBKDF2Params: boolean isDefaultPrf()>();

     label11:
        if $z0 == 0 goto label20;

        $r21 = new javax.crypto.spec.PBEKeySpec;

     label12:
        $r12 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: char[] val$password>;

        $r13 = virtualinvoke $r18.<org.spongycastle.asn1.pkcs.PBKDF2Params: byte[] getSalt()>();

        $r14 = virtualinvoke $r18.<org.spongycastle.asn1.pkcs.PBKDF2Params: java.math.BigInteger getIterationCount()>();

        $i0 = virtualinvoke $r14.<java.math.BigInteger: int intValue()>();

        $r7 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder this$0>;

        $r22 = staticinvoke <org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder: org.spongycastle.operator.SecretKeySizeProvider access$200(org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder)>($r7);

        $i1 = interfaceinvoke $r22.<org.spongycastle.operator.SecretKeySizeProvider: int getKeySize(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r1);

        specialinvoke $r21.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r12, $r13, $i0, $i1);

        $r23 = virtualinvoke $r20.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r21);

     label13:
        $r7 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder this$0>;

        $r8 = staticinvoke <org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder: org.spongycastle.jcajce.util.JcaJceHelper access$000(org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder)>($r7);

        $r19 = virtualinvoke $r16.<org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.EncryptionScheme getEncryptionScheme()>();

        $r3 = virtualinvoke $r19.<org.spongycastle.asn1.pkcs.EncryptionScheme: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r9 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r10 = interfaceinvoke $r8.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.Cipher createCipher(java.lang.String)>($r9);

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: javax.crypto.Cipher cipher> = $r10;

        $r19 = virtualinvoke $r16.<org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.EncryptionScheme getEncryptionScheme()>();

        $r1 = staticinvoke <org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)>($r19);

        r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.spongycastle.asn1.x509.AlgorithmIdentifier encryptionAlg> = $r1;

        $r19 = virtualinvoke $r16.<org.spongycastle.asn1.pkcs.PBES2Parameters: org.spongycastle.asn1.pkcs.EncryptionScheme getEncryptionScheme()>();

        $r5 = virtualinvoke $r19.<org.spongycastle.asn1.pkcs.EncryptionScheme: org.spongycastle.asn1.ASN1Encodable getParameters()>();

     label14:
        $z0 = $r5 instanceof org.spongycastle.asn1.ASN1OctetString;

        if $z0 == 0 goto label23;

     label15:
        $r10 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: javax.crypto.Cipher cipher>;

     label16:
        $r24 = new javax.crypto.spec.IvParameterSpec;

     label17:
        $r25 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r5);

        $r13 = virtualinvoke $r25.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r24.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13);

        virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r23, $r24);

     label18:
        goto label06;

     label19:
        r2 := @caughtexception;

        $r26 = new org.spongycastle.operator.OperatorCreationException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to create InputDecryptor: ");

        $r9 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r27 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r9, r2);

        throw $r26;

     label20:
        $r28 = new org.spongycastle.jcajce.spec.PBKDF2KeySpec;

     label21:
        $r12 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: char[] val$password>;

        $r13 = virtualinvoke $r18.<org.spongycastle.asn1.pkcs.PBKDF2Params: byte[] getSalt()>();

        $r14 = virtualinvoke $r18.<org.spongycastle.asn1.pkcs.PBKDF2Params: java.math.BigInteger getIterationCount()>();

        $i0 = virtualinvoke $r14.<java.math.BigInteger: int intValue()>();

        $r7 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder this$0>;

        $r22 = staticinvoke <org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder: org.spongycastle.operator.SecretKeySizeProvider access$200(org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder)>($r7);

        $i1 = interfaceinvoke $r22.<org.spongycastle.operator.SecretKeySizeProvider: int getKeySize(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r1);

        $r1 = virtualinvoke $r18.<org.spongycastle.asn1.pkcs.PBKDF2Params: org.spongycastle.asn1.x509.AlgorithmIdentifier getPrf()>();

        specialinvoke $r28.<org.spongycastle.jcajce.spec.PBKDF2KeySpec: void <init>(char[],byte[],int,int,org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r12, $r13, $i0, $i1, $r1);

        $r23 = virtualinvoke $r20.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r28);

     label22:
        goto label13;

     label23:
        $r29 = staticinvoke <org.spongycastle.asn1.cryptopro.GOST28147Parameters: org.spongycastle.asn1.cryptopro.GOST28147Parameters getInstance(java.lang.Object)>($r5);

        $r10 = r0.<org.spongycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: javax.crypto.Cipher cipher>;

     label24:
        $r30 = new org.spongycastle.jcajce.spec.GOST28147ParameterSpec;

     label25:
        $r3 = virtualinvoke $r29.<org.spongycastle.asn1.cryptopro.GOST28147Parameters: org.spongycastle.asn1.ASN1ObjectIdentifier getEncryptionParamSet()>();

        $r13 = virtualinvoke $r29.<org.spongycastle.asn1.cryptopro.GOST28147Parameters: byte[] getIV()>();

        specialinvoke $r30.<org.spongycastle.jcajce.spec.GOST28147ParameterSpec: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[])>($r3, $r13);

        virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r23, $r30);

     label26:
        goto label06;

        catch java.lang.Exception from label01 to label02 with label19;
        catch java.lang.Exception from label03 to label04 with label19;
        catch java.lang.Exception from label05 to label06 with label19;
        catch java.lang.Exception from label08 to label09 with label19;
        catch java.lang.Exception from label10 to label11 with label19;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Exception from label13 to label14 with label19;
        catch java.lang.Exception from label15 to label16 with label19;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Exception from label21 to label22 with label19;
        catch java.lang.Exception from label23 to label24 with label19;
        catch java.lang.Exception from label25 to label26 with label19;
    }
