org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest extends org.spongycastle.pkcs.PKCS10CertificationRequest
private static java.util.Hashtable keyAlgorithms
private org.spongycastle.jcajce.util.JcaJceHelper helper
    static void <clinit>()
    {
        java.util.Hashtable $r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest: java.util.Hashtable keyAlgorithms> = $r0;

        $r0 = <org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest: java.util.Hashtable keyAlgorithms>;

        $r1 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rsaEncryption>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, "RSA");

        $r0 = <org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest: java.util.Hashtable keyAlgorithms>;

        $r1 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_dsa>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, "DSA");

        return;
    }
    public void <init>(org.spongycastle.asn1.pkcs.CertificationRequest)
    {
        org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest r0;
        org.spongycastle.asn1.pkcs.CertificationRequest $r1;
        org.spongycastle.jcajce.util.DefaultJcaJceHelper $r2;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest;

        $r1 := @parameter0: org.spongycastle.asn1.pkcs.CertificationRequest;

        specialinvoke r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: void <init>(org.spongycastle.asn1.pkcs.CertificationRequest)>($r1);

        $r2 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return;
    }
    public void <init>(org.spongycastle.pkcs.PKCS10CertificationRequest)
    {
        org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest r0;
        org.spongycastle.pkcs.PKCS10CertificationRequest $r1;
        org.spongycastle.asn1.pkcs.CertificationRequest $r2;
        org.spongycastle.jcajce.util.DefaultJcaJceHelper $r3;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest;

        $r1 := @parameter0: org.spongycastle.pkcs.PKCS10CertificationRequest;

        $r2 = virtualinvoke $r1.<org.spongycastle.pkcs.PKCS10CertificationRequest: org.spongycastle.asn1.pkcs.CertificationRequest toASN1Structure()>();

        specialinvoke r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: void <init>(org.spongycastle.asn1.pkcs.CertificationRequest)>($r2);

        $r3 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r3.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r3;

        return;
    }
    public void <init>(byte[]) throws java.io.IOException
    {
        org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest r0;
        byte[] $r1;
        org.spongycastle.jcajce.util.DefaultJcaJceHelper $r2;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.spongycastle.pkcs.PKCS10CertificationRequest: void <init>(byte[])>($r1);

        $r2 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return;
    }
    public java.security.PublicKey getPublicKey() throws java.security.InvalidKeyException, java.security.NoSuchAlgorithmException
    {
        org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest r0;
        java.security.spec.X509EncodedKeySpec r1;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r2;
        byte[] $r3;
        org.spongycastle.jcajce.util.JcaJceHelper $r4;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r5;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r6;
        java.lang.String $r7;
        java.security.KeyFactory $r8;
        java.security.PublicKey $r9;
        java.security.NoSuchAlgorithmException r10;
        java.util.Hashtable $r11;
        java.lang.Object $r12;
        java.security.spec.InvalidKeySpecException r13;
        java.security.InvalidKeyException $r14;
        java.io.IOException r15;
        java.security.NoSuchProviderException r16;
        java.lang.StringBuilder $r17;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest;

     label01:
        $r2 = virtualinvoke r0.<org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

     label02:
        r1 = new java.security.spec.X509EncodedKeySpec;

     label03:
        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: byte[] getEncoded()>();

        specialinvoke r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3);

     label04:
        $r4 = r0.<org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label05:
        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r8 = interfaceinvoke $r4.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>($r7);

     label06:
        $r9 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r1);

     label07:
        return $r9;

     label08:
        r10 := @caughtexception;

        $r11 = <org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest: java.util.Hashtable keyAlgorithms>;

     label09:
        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r12 = virtualinvoke $r11.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r6);

     label10:
        if $r12 == null goto label15;

        $r11 = <org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest: java.util.Hashtable keyAlgorithms>;

     label11:
        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r12 = virtualinvoke $r11.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r6);

     label12:
        $r7 = (java.lang.String) $r12;

        $r4 = r0.<org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label13:
        $r8 = interfaceinvoke $r4.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>($r7);

     label14:
        goto label06;

     label15:
        throw r10;

     label16:
        r13 := @caughtexception;

        $r14 = new java.security.InvalidKeyException;

        specialinvoke $r14.<java.security.InvalidKeyException: void <init>(java.lang.String)>("error decoding public key");

        throw $r14;

     label17:
        r15 := @caughtexception;

        $r14 = new java.security.InvalidKeyException;

        specialinvoke $r14.<java.security.InvalidKeyException: void <init>(java.lang.String)>("error extracting key encoding");

        throw $r14;

     label18:
        r16 := @caughtexception;

        r10 = new java.security.NoSuchAlgorithmException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot find provider: ");

        $r7 = virtualinvoke r16.<java.security.NoSuchProviderException: java.lang.String getMessage()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r10.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r7);

        throw r10;

        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label16;
        catch java.security.spec.InvalidKeySpecException from label03 to label04 with label16;
        catch java.io.IOException from label01 to label02 with label17;
        catch java.io.IOException from label03 to label04 with label17;
        catch java.security.NoSuchProviderException from label01 to label02 with label18;
        catch java.security.NoSuchProviderException from label03 to label04 with label18;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label08;
        catch java.security.spec.InvalidKeySpecException from label05 to label06 with label16;
        catch java.io.IOException from label05 to label06 with label17;
        catch java.security.NoSuchProviderException from label05 to label06 with label18;
        catch java.security.spec.InvalidKeySpecException from label06 to label07 with label16;
        catch java.security.spec.InvalidKeySpecException from label09 to label10 with label16;
        catch java.security.spec.InvalidKeySpecException from label11 to label12 with label16;
        catch java.security.spec.InvalidKeySpecException from label13 to label14 with label16;
        catch java.io.IOException from label06 to label07 with label17;
        catch java.io.IOException from label09 to label10 with label17;
        catch java.io.IOException from label11 to label12 with label17;
        catch java.io.IOException from label13 to label14 with label17;
        catch java.security.NoSuchProviderException from label06 to label07 with label18;
        catch java.security.NoSuchProviderException from label09 to label10 with label18;
        catch java.security.NoSuchProviderException from label11 to label12 with label18;
        catch java.security.NoSuchProviderException from label13 to label14 with label18;
    }
    public org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest setProvider(java.lang.String)
    {
        org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest r0;
        java.lang.String $r1;
        org.spongycastle.jcajce.util.NamedJcaJceHelper $r2;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.jcajce.util.NamedJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.NamedJcaJceHelper: void <init>(java.lang.String)>($r1);

        r0.<org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest setProvider(java.security.Provider)
    {
        org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest r0;
        java.security.Provider $r1;
        org.spongycastle.jcajce.util.ProviderJcaJceHelper $r2;

        r0 := @this: org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.jcajce.util.ProviderJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.ProviderJcaJceHelper: void <init>(java.security.Provider)>($r1);

        r0.<org.spongycastle.pkcs.jcajce.JcaPKCS10CertificationRequest: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return r0;
    }
