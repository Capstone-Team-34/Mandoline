org.spongycastle.pkcs.PKCS12PfxPduBuilder extends java.lang.Object
private org.spongycastle.asn1.ASN1EncodableVector dataVector
    public void <init>()
    {
        org.spongycastle.pkcs.PKCS12PfxPduBuilder r0;
        org.spongycastle.asn1.ASN1EncodableVector $r1;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPduBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke $r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        r0.<org.spongycastle.pkcs.PKCS12PfxPduBuilder: org.spongycastle.asn1.ASN1EncodableVector dataVector> = $r1;

        return;
    }
    private org.spongycastle.pkcs.PKCS12PfxPduBuilder addEncryptedData(org.spongycastle.operator.OutputEncryptor, org.spongycastle.asn1.ASN1Sequence) throws java.io.IOException
    {
        org.spongycastle.pkcs.PKCS12PfxPduBuilder r0;
        org.spongycastle.operator.OutputEncryptor $r1;
        org.spongycastle.asn1.ASN1Sequence $r2;
        org.spongycastle.cms.CMSException r3;
        org.spongycastle.cms.CMSEncryptedDataGenerator r4;
        org.spongycastle.asn1.ASN1EncodableVector $r5;
        org.spongycastle.cms.CMSProcessableByteArray $r6;
        byte[] $r7;
        org.spongycastle.cms.CMSEncryptedData $r8;
        org.spongycastle.asn1.cms.ContentInfo $r9;
        org.spongycastle.pkcs.PKCSIOException $r10;
        java.lang.String $r11;
        java.lang.Throwable $r12;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPduBuilder;

        $r1 := @parameter0: org.spongycastle.operator.OutputEncryptor;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1Sequence;

        r4 = new org.spongycastle.cms.CMSEncryptedDataGenerator;

        specialinvoke r4.<org.spongycastle.cms.CMSEncryptedDataGenerator: void <init>()>();

        $r5 = r0.<org.spongycastle.pkcs.PKCS12PfxPduBuilder: org.spongycastle.asn1.ASN1EncodableVector dataVector>;

        $r6 = new org.spongycastle.cms.CMSProcessableByteArray;

     label1:
        $r7 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: byte[] getEncoded()>();

        specialinvoke $r6.<org.spongycastle.cms.CMSProcessableByteArray: void <init>(byte[])>($r7);

        $r8 = virtualinvoke r4.<org.spongycastle.cms.CMSEncryptedDataGenerator: org.spongycastle.cms.CMSEncryptedData generate(org.spongycastle.cms.CMSTypedData,org.spongycastle.operator.OutputEncryptor)>($r6, $r1);

        $r9 = virtualinvoke $r8.<org.spongycastle.cms.CMSEncryptedData: org.spongycastle.asn1.cms.ContentInfo toASN1Structure()>();

        virtualinvoke $r5.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r9);

     label2:
        return r0;

     label3:
        r3 := @caughtexception;

        $r10 = new org.spongycastle.pkcs.PKCSIOException;

        $r11 = virtualinvoke r3.<org.spongycastle.cms.CMSException: java.lang.String getMessage()>();

        $r12 = virtualinvoke r3.<org.spongycastle.cms.CMSException: java.lang.Throwable getCause()>();

        specialinvoke $r10.<org.spongycastle.pkcs.PKCSIOException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r12);

        throw $r10;

        catch org.spongycastle.cms.CMSException from label1 to label2 with label3;
    }
    public org.spongycastle.pkcs.PKCS12PfxPduBuilder addData(org.spongycastle.pkcs.PKCS12SafeBag) throws java.io.IOException
    {
        org.spongycastle.pkcs.PKCS12PfxPduBuilder r0;
        org.spongycastle.pkcs.PKCS12SafeBag $r1;
        org.spongycastle.asn1.ASN1EncodableVector $r2;
        org.spongycastle.asn1.pkcs.ContentInfo $r3;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r4;
        org.spongycastle.asn1.DEROctetString $r5;
        org.spongycastle.asn1.DLSequence $r6;
        org.spongycastle.asn1.pkcs.SafeBag $r7;
        byte[] $r8;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPduBuilder;

        $r1 := @parameter0: org.spongycastle.pkcs.PKCS12SafeBag;

        $r2 = r0.<org.spongycastle.pkcs.PKCS12PfxPduBuilder: org.spongycastle.asn1.ASN1EncodableVector dataVector>;

        $r3 = new org.spongycastle.asn1.pkcs.ContentInfo;

        $r4 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier data>;

        $r5 = new org.spongycastle.asn1.DEROctetString;

        $r6 = new org.spongycastle.asn1.DLSequence;

        $r7 = virtualinvoke $r1.<org.spongycastle.pkcs.PKCS12SafeBag: org.spongycastle.asn1.pkcs.SafeBag toASN1Structure()>();

        specialinvoke $r6.<org.spongycastle.asn1.DLSequence: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r7);

        $r8 = virtualinvoke $r6.<org.spongycastle.asn1.DLSequence: byte[] getEncoded()>();

        specialinvoke $r5.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r8);

        specialinvoke $r3.<org.spongycastle.asn1.pkcs.ContentInfo: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r4, $r5);

        virtualinvoke $r2.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        return r0;
    }
    public org.spongycastle.pkcs.PKCS12PfxPduBuilder addEncryptedData(org.spongycastle.operator.OutputEncryptor, org.spongycastle.pkcs.PKCS12SafeBag) throws java.io.IOException
    {
        org.spongycastle.pkcs.PKCS12PfxPduBuilder r0;
        org.spongycastle.operator.OutputEncryptor $r1;
        org.spongycastle.pkcs.PKCS12SafeBag $r2;
        org.spongycastle.asn1.DERSequence $r3;
        org.spongycastle.asn1.pkcs.SafeBag $r4;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPduBuilder;

        $r1 := @parameter0: org.spongycastle.operator.OutputEncryptor;

        $r2 := @parameter1: org.spongycastle.pkcs.PKCS12SafeBag;

        $r3 = new org.spongycastle.asn1.DERSequence;

        $r4 = virtualinvoke $r2.<org.spongycastle.pkcs.PKCS12SafeBag: org.spongycastle.asn1.pkcs.SafeBag toASN1Structure()>();

        specialinvoke $r3.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1Encodable)>($r4);

        r0 = specialinvoke r0.<org.spongycastle.pkcs.PKCS12PfxPduBuilder: org.spongycastle.pkcs.PKCS12PfxPduBuilder addEncryptedData(org.spongycastle.operator.OutputEncryptor,org.spongycastle.asn1.ASN1Sequence)>($r1, $r3);

        return r0;
    }
    public org.spongycastle.pkcs.PKCS12PfxPduBuilder addEncryptedData(org.spongycastle.operator.OutputEncryptor, org.spongycastle.pkcs.PKCS12SafeBag[]) throws java.io.IOException
    {
        org.spongycastle.pkcs.PKCS12PfxPduBuilder r0;
        org.spongycastle.operator.OutputEncryptor $r1;
        org.spongycastle.pkcs.PKCS12SafeBag[] $r2;
        org.spongycastle.asn1.ASN1EncodableVector r3;
        int i0, $i1;
        org.spongycastle.pkcs.PKCS12SafeBag $r4;
        org.spongycastle.asn1.pkcs.SafeBag $r5;
        org.spongycastle.asn1.DLSequence $r6;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPduBuilder;

        $r1 := @parameter0: org.spongycastle.operator.OutputEncryptor;

        $r2 := @parameter1: org.spongycastle.pkcs.PKCS12SafeBag[];

        r3 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r3.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if i0 == $i1 goto label2;

        $r4 = $r2[i0];

        $r5 = virtualinvoke $r4.<org.spongycastle.pkcs.PKCS12SafeBag: org.spongycastle.asn1.pkcs.SafeBag toASN1Structure()>();

        virtualinvoke r3.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r6 = new org.spongycastle.asn1.DLSequence;

        specialinvoke $r6.<org.spongycastle.asn1.DLSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r3);

        r0 = specialinvoke r0.<org.spongycastle.pkcs.PKCS12PfxPduBuilder: org.spongycastle.pkcs.PKCS12PfxPduBuilder addEncryptedData(org.spongycastle.operator.OutputEncryptor,org.spongycastle.asn1.ASN1Sequence)>($r1, $r6);

        return r0;
    }
    public org.spongycastle.pkcs.PKCS12PfxPdu build(org.spongycastle.pkcs.PKCS12MacCalculatorBuilder, char[]) throws org.spongycastle.pkcs.PKCSException
    {
        org.spongycastle.pkcs.PKCS12PfxPduBuilder r0;
        org.spongycastle.pkcs.PKCS12MacCalculatorBuilder $r1;
        char[] $r2;
        java.io.IOException r3;
        org.spongycastle.asn1.pkcs.ContentInfo r4;
        org.spongycastle.pkcs.MacDataGenerator r5;
        org.spongycastle.asn1.pkcs.Pfx r6;
        org.spongycastle.asn1.DLSequence $r7;
        org.spongycastle.asn1.ASN1EncodableVector $r8;
        org.spongycastle.asn1.pkcs.AuthenticatedSafe $r9;
        byte[] $r10;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r11;
        org.spongycastle.asn1.DEROctetString $r12;
        org.spongycastle.asn1.pkcs.MacData r13;
        org.spongycastle.pkcs.PKCS12PfxPdu $r14;
        org.spongycastle.pkcs.PKCSException $r15;
        java.lang.StringBuilder $r16;
        java.lang.String $r17;

        r0 := @this: org.spongycastle.pkcs.PKCS12PfxPduBuilder;

        $r1 := @parameter0: org.spongycastle.pkcs.PKCS12MacCalculatorBuilder;

        $r2 := @parameter1: char[];

        $r7 = new org.spongycastle.asn1.DLSequence;

        $r8 = r0.<org.spongycastle.pkcs.PKCS12PfxPduBuilder: org.spongycastle.asn1.ASN1EncodableVector dataVector>;

        specialinvoke $r7.<org.spongycastle.asn1.DLSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r8);

        $r9 = staticinvoke <org.spongycastle.asn1.pkcs.AuthenticatedSafe: org.spongycastle.asn1.pkcs.AuthenticatedSafe getInstance(java.lang.Object)>($r7);

     label1:
        $r10 = virtualinvoke $r9.<org.spongycastle.asn1.pkcs.AuthenticatedSafe: byte[] getEncoded()>();

     label2:
        r4 = new org.spongycastle.asn1.pkcs.ContentInfo;

        $r11 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier data>;

        $r12 = new org.spongycastle.asn1.DEROctetString;

        specialinvoke $r12.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r10);

        specialinvoke r4.<org.spongycastle.asn1.pkcs.ContentInfo: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r11, $r12);

        r13 = null;

        if $r1 == null goto label3;

        r5 = new org.spongycastle.pkcs.MacDataGenerator;

        specialinvoke r5.<org.spongycastle.pkcs.MacDataGenerator: void <init>(org.spongycastle.pkcs.PKCS12MacCalculatorBuilder)>($r1);

        r13 = virtualinvoke r5.<org.spongycastle.pkcs.MacDataGenerator: org.spongycastle.asn1.pkcs.MacData build(char[],byte[])>($r2, $r10);

     label3:
        r6 = new org.spongycastle.asn1.pkcs.Pfx;

        specialinvoke r6.<org.spongycastle.asn1.pkcs.Pfx: void <init>(org.spongycastle.asn1.pkcs.ContentInfo,org.spongycastle.asn1.pkcs.MacData)>(r4, r13);

        $r14 = new org.spongycastle.pkcs.PKCS12PfxPdu;

        specialinvoke $r14.<org.spongycastle.pkcs.PKCS12PfxPdu: void <init>(org.spongycastle.asn1.pkcs.Pfx)>(r6);

        return $r14;

     label4:
        r3 := @caughtexception;

        $r15 = new org.spongycastle.pkcs.PKCSException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to encode AuthenticatedSafe: ");

        $r17 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<org.spongycastle.pkcs.PKCSException: void <init>(java.lang.String,java.lang.Throwable)>($r17, r3);

        throw $r15;

        catch java.io.IOException from label1 to label2 with label4;
    }
