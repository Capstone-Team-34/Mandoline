org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1 extends java.lang.Object implements org.spongycastle.operator.InputDecryptor
final org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1 this$1
final org.spongycastle.asn1.x509.AlgorithmIdentifier val$algorithmIdentifier
final org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher val$engine
    void <init>(org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1, org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher)
    {
        org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1 r0;
        org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1 $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher $r3;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1;

        $r1 := @parameter0: org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 := @parameter2: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher;

        r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1: org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1 this$1> = $r1;

        r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1: org.spongycastle.asn1.x509.AlgorithmIdentifier val$algorithmIdentifier> = $r2;

        r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher val$engine> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()
    {
        org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1 r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1;

        r1 = r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1: org.spongycastle.asn1.x509.AlgorithmIdentifier val$algorithmIdentifier>;

        return r1;
    }
    public java.io.InputStream getInputStream(java.io.InputStream)
    {
        org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1 r0;
        java.io.InputStream $r1;
        org.spongycastle.crypto.io.CipherInputStream $r2;
        org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher $r3;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = new org.spongycastle.crypto.io.CipherInputStream;

        $r3 = r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher val$engine>;

        specialinvoke $r2.<org.spongycastle.crypto.io.CipherInputStream: void <init>(java.io.InputStream,org.spongycastle.crypto.BufferedBlockCipher)>($r1, $r3);

        return $r2;
    }
    public org.spongycastle.operator.GenericKey getKey()
    {
        org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1 r0;
        org.spongycastle.operator.GenericKey $r1;
        byte[] $r2;
        org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1 $r3;
        char[] $r4;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1;

        $r1 = new org.spongycastle.operator.GenericKey;

        $r3 = r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1: org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1 this$1>;

        $r4 = $r3.<org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1: char[] val$password>;

        $r2 = staticinvoke <org.spongycastle.crypto.generators.PKCS12ParametersGenerator: byte[] PKCS12PasswordToBytes(char[])>($r4);

        specialinvoke $r1.<org.spongycastle.operator.GenericKey: void <init>(java.lang.Object)>($r2);

        return $r1;
    }
