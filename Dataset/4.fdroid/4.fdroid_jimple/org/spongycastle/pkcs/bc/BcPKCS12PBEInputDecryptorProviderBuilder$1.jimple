org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1 extends java.lang.Object implements org.spongycastle.operator.InputDecryptorProvider
final org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder this$0
final char[] val$password
    void <init>(org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder, char[])
    {
        org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1 r0;
        org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder $r1;
        char[] $r2;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1;

        $r1 := @parameter0: org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder;

        $r2 := @parameter1: char[];

        r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1: org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder this$0> = $r1;

        r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1: char[] val$password> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.spongycastle.operator.InputDecryptor get(org.spongycastle.asn1.x509.AlgorithmIdentifier)
    {
        org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1 r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        char[] $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher $r4;
        org.spongycastle.asn1.ASN1Encodable $r5;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r6;
        org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder $r7;
        org.spongycastle.crypto.ExtendedDigest $r8;
        int $i0;
        org.spongycastle.crypto.CipherParameters $r9;
        org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1 $r10;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r4 = staticinvoke <org.spongycastle.pkcs.bc.PKCS12PBEUtils: org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher getEngine(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r3);

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r6 = staticinvoke <org.spongycastle.asn1.pkcs.PKCS12PBEParams: org.spongycastle.asn1.pkcs.PKCS12PBEParams getInstance(java.lang.Object)>($r5);

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r7 = r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1: org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder this$0>;

        $r8 = staticinvoke <org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder: org.spongycastle.crypto.ExtendedDigest access$000(org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder)>($r7);

        $i0 = virtualinvoke $r4.<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: int getBlockSize()>();

        $r2 = r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1: char[] val$password>;

        $r9 = staticinvoke <org.spongycastle.pkcs.bc.PKCS12PBEUtils: org.spongycastle.crypto.CipherParameters createCipherParameters(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.crypto.ExtendedDigest,int,org.spongycastle.asn1.pkcs.PKCS12PBEParams,char[])>($r3, $r8, $i0, $r6, $r2);

        virtualinvoke $r4.<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>(0, $r9);

        $r10 = new org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1;

        specialinvoke $r10.<org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1$1: void <init>(org.spongycastle.pkcs.bc.BcPKCS12PBEInputDecryptorProviderBuilder$1,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher)>(r0, $r1, $r4);

        return $r10;
    }
