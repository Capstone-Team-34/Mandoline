org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder extends java.lang.Object implements org.spongycastle.pkcs.PKCS12MacCalculatorBuilder
private org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmIdentifier
private org.spongycastle.crypto.ExtendedDigest digest
private int iterationCount
private java.security.SecureRandom random
private int saltLength
    public void <init>()
    {
        org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder r0;
        org.spongycastle.crypto.digests.SHA1Digest $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        org.spongycastle.asn1.DERNull $r4;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder;

        $r1 = new org.spongycastle.crypto.digests.SHA1Digest;

        specialinvoke $r1.<org.spongycastle.crypto.digests.SHA1Digest: void <init>()>();

        $r2 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier idSHA1>;

        $r4 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        specialinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r3, $r4);

        specialinvoke r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: void <init>(org.spongycastle.crypto.ExtendedDigest,org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r1, $r2);

        return;
    }
    public void <init>(org.spongycastle.crypto.ExtendedDigest, org.spongycastle.asn1.x509.AlgorithmIdentifier)
    {
        org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder r0;
        org.spongycastle.crypto.ExtendedDigest $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        int $i0;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder;

        $r1 := @parameter0: org.spongycastle.crypto.ExtendedDigest;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: int iterationCount> = 1024;

        r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: org.spongycastle.crypto.ExtendedDigest digest> = $r1;

        r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmIdentifier> = $r2;

        $i0 = interfaceinvoke $r1.<org.spongycastle.crypto.ExtendedDigest: int getDigestSize()>();

        r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: int saltLength> = $i0;

        return;
    }
    public org.spongycastle.operator.MacCalculator build(char[])
    {
        org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder r0;
        char[] $r1;
        byte[] r2;
        org.spongycastle.crypto.ExtendedDigest $r3;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r4;
        int $i0;
        java.security.SecureRandom $r5;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r6;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r7;
        org.spongycastle.operator.MacCalculator $r8;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder;

        $r1 := @parameter0: char[];

        $r5 = r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: java.security.SecureRandom random>;

        if $r5 != null goto label1;

        $r5 = new java.security.SecureRandom;

        specialinvoke $r5.<java.security.SecureRandom: void <init>()>();

        r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: java.security.SecureRandom random> = $r5;

     label1:
        $i0 = r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: int saltLength>;

        r2 = newarray (byte)[$i0];

        $r5 = r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: java.security.SecureRandom random>;

        virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>(r2);

        $r6 = r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmIdentifier>;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r3 = r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: org.spongycastle.crypto.ExtendedDigest digest>;

        $r4 = new org.spongycastle.asn1.pkcs.PKCS12PBEParams;

        $i0 = r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: int iterationCount>;

        specialinvoke $r4.<org.spongycastle.asn1.pkcs.PKCS12PBEParams: void <init>(byte[],int)>(r2, $i0);

        $r8 = staticinvoke <org.spongycastle.pkcs.bc.PKCS12PBEUtils: org.spongycastle.operator.MacCalculator createMacCalculator(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.crypto.ExtendedDigest,org.spongycastle.asn1.pkcs.PKCS12PBEParams,char[])>($r7, $r3, $r4, $r1);

        return $r8;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmIdentifier()
    {
        org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder;

        r1 = r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmIdentifier>;

        return r1;
    }
    public org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder setIterationCount(int)
    {
        org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder r0;
        int $i0;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder;

        $i0 := @parameter0: int;

        r0.<org.spongycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: int iterationCount> = $i0;

        return r0;
    }
