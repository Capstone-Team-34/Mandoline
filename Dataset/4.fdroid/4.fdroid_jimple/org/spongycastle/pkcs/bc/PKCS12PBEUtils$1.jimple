org.spongycastle.pkcs.bc.PKCS12PBEUtils$1 extends java.lang.Object implements org.spongycastle.operator.MacCalculator
final org.spongycastle.asn1.ASN1ObjectIdentifier val$digestAlgorithm
final org.spongycastle.crypto.macs.HMac val$hMac
final char[] val$password
final org.spongycastle.asn1.pkcs.PKCS12PBEParams val$pbeParams
    void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.asn1.pkcs.PKCS12PBEParams, org.spongycastle.crypto.macs.HMac, char[])
    {
        org.spongycastle.pkcs.bc.PKCS12PBEUtils$1 r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r2;
        org.spongycastle.crypto.macs.HMac $r3;
        char[] $r4;

        r0 := @this: org.spongycastle.pkcs.bc.PKCS12PBEUtils$1;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.pkcs.PKCS12PBEParams;

        $r3 := @parameter2: org.spongycastle.crypto.macs.HMac;

        $r4 := @parameter3: char[];

        r0.<org.spongycastle.pkcs.bc.PKCS12PBEUtils$1: org.spongycastle.asn1.ASN1ObjectIdentifier val$digestAlgorithm> = $r1;

        r0.<org.spongycastle.pkcs.bc.PKCS12PBEUtils$1: org.spongycastle.asn1.pkcs.PKCS12PBEParams val$pbeParams> = $r2;

        r0.<org.spongycastle.pkcs.bc.PKCS12PBEUtils$1: org.spongycastle.crypto.macs.HMac val$hMac> = $r3;

        r0.<org.spongycastle.pkcs.bc.PKCS12PBEUtils$1: char[] val$password> = $r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()
    {
        org.spongycastle.pkcs.bc.PKCS12PBEUtils$1 r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r3;

        r0 := @this: org.spongycastle.pkcs.bc.PKCS12PBEUtils$1;

        $r1 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 = r0.<org.spongycastle.pkcs.bc.PKCS12PBEUtils$1: org.spongycastle.asn1.ASN1ObjectIdentifier val$digestAlgorithm>;

        $r3 = r0.<org.spongycastle.pkcs.bc.PKCS12PBEUtils$1: org.spongycastle.asn1.pkcs.PKCS12PBEParams val$pbeParams>;

        specialinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r2, $r3);

        return $r1;
    }
    public org.spongycastle.operator.GenericKey getKey()
    {
        org.spongycastle.pkcs.bc.PKCS12PBEUtils$1 r0;
        org.spongycastle.operator.GenericKey $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        char[] $r3;
        byte[] $r4;

        r0 := @this: org.spongycastle.pkcs.bc.PKCS12PBEUtils$1;

        $r1 = new org.spongycastle.operator.GenericKey;

        $r2 = virtualinvoke r0.<org.spongycastle.pkcs.bc.PKCS12PBEUtils$1: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r3 = r0.<org.spongycastle.pkcs.bc.PKCS12PBEUtils$1: char[] val$password>;

        $r4 = staticinvoke <org.spongycastle.crypto.generators.PKCS12ParametersGenerator: byte[] PKCS12PasswordToBytes(char[])>($r3);

        specialinvoke $r1.<org.spongycastle.operator.GenericKey: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r2, $r4);

        return $r1;
    }
    public byte[] getMac()
    {
        org.spongycastle.pkcs.bc.PKCS12PBEUtils$1 r0;
        byte[] r1;
        int $i0;
        org.spongycastle.crypto.macs.HMac $r2;

        r0 := @this: org.spongycastle.pkcs.bc.PKCS12PBEUtils$1;

        $r2 = r0.<org.spongycastle.pkcs.bc.PKCS12PBEUtils$1: org.spongycastle.crypto.macs.HMac val$hMac>;

        $i0 = virtualinvoke $r2.<org.spongycastle.crypto.macs.HMac: int getMacSize()>();

        r1 = newarray (byte)[$i0];

        $r2 = r0.<org.spongycastle.pkcs.bc.PKCS12PBEUtils$1: org.spongycastle.crypto.macs.HMac val$hMac>;

        virtualinvoke $r2.<org.spongycastle.crypto.macs.HMac: int doFinal(byte[],int)>(r1, 0);

        return r1;
    }
    public java.io.OutputStream getOutputStream()
    {
        org.spongycastle.pkcs.bc.PKCS12PBEUtils$1 r0;
        org.spongycastle.crypto.io.MacOutputStream $r1;
        org.spongycastle.crypto.macs.HMac $r2;

        r0 := @this: org.spongycastle.pkcs.bc.PKCS12PBEUtils$1;

        $r1 = new org.spongycastle.crypto.io.MacOutputStream;

        $r2 = r0.<org.spongycastle.pkcs.bc.PKCS12PBEUtils$1: org.spongycastle.crypto.macs.HMac val$hMac>;

        specialinvoke $r1.<org.spongycastle.crypto.io.MacOutputStream: void <init>(org.spongycastle.crypto.Mac)>($r2);

        return $r1;
    }
