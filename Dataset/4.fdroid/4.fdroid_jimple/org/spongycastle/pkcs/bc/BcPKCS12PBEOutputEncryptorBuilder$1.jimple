org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1 extends java.lang.Object implements org.spongycastle.operator.OutputEncryptor
final org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder this$0
final char[] val$password
final org.spongycastle.asn1.pkcs.PKCS12PBEParams val$pbeParams
    void <init>(org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder, org.spongycastle.asn1.pkcs.PKCS12PBEParams, char[])
    {
        org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1 r0;
        org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder $r1;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r2;
        char[] $r3;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1;

        $r1 := @parameter0: org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder;

        $r2 := @parameter1: org.spongycastle.asn1.pkcs.PKCS12PBEParams;

        $r3 := @parameter2: char[];

        r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1: org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder this$0> = $r1;

        r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1: org.spongycastle.asn1.pkcs.PKCS12PBEParams val$pbeParams> = $r2;

        r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1: char[] val$password> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()
    {
        org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1 r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder $r4;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1;

        $r1 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r4 = r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1: org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder this$0>;

        $r3 = staticinvoke <org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier access$000(org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder)>($r4);

        $r2 = r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1: org.spongycastle.asn1.pkcs.PKCS12PBEParams val$pbeParams>;

        specialinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r3, $r2);

        return $r1;
    }
    public org.spongycastle.operator.GenericKey getKey()
    {
        org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1 r0;
        org.spongycastle.operator.GenericKey $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.pkcs.PKCS12PBEParams $r3;
        org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder $r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;
        char[] $r6;
        byte[] $r7;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1;

        $r1 = new org.spongycastle.operator.GenericKey;

        $r2 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r4 = r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1: org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder this$0>;

        $r5 = staticinvoke <org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier access$000(org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder)>($r4);

        $r3 = r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1: org.spongycastle.asn1.pkcs.PKCS12PBEParams val$pbeParams>;

        specialinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r5, $r3);

        $r6 = r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1: char[] val$password>;

        $r7 = staticinvoke <org.spongycastle.crypto.generators.PKCS12ParametersGenerator: byte[] PKCS12PasswordToBytes(char[])>($r6);

        specialinvoke $r1.<org.spongycastle.operator.GenericKey: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r2, $r7);

        return $r1;
    }
    public java.io.OutputStream getOutputStream(java.io.OutputStream)
    {
        org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1 r0;
        java.io.OutputStream $r1;
        org.spongycastle.crypto.io.CipherOutputStream $r2;
        org.spongycastle.crypto.BufferedBlockCipher $r3;
        org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder $r4;

        r0 := @this: org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = new org.spongycastle.crypto.io.CipherOutputStream;

        $r4 = r0.<org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder$1: org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder this$0>;

        $r3 = staticinvoke <org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder: org.spongycastle.crypto.BufferedBlockCipher access$100(org.spongycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder)>($r4);

        specialinvoke $r2.<org.spongycastle.crypto.io.CipherOutputStream: void <init>(java.io.OutputStream,org.spongycastle.crypto.BufferedBlockCipher)>($r1, $r3);

        return $r2;
    }
