org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper extends org.spongycastle.operator.SymmetricKeyWrapper
private org.spongycastle.operator.jcajce.OperatorHelper helper
private java.security.SecureRandom random
private javax.crypto.SecretKey wrappingKey
    public void <init>(javax.crypto.SecretKey)
    {
        org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper r0;
        javax.crypto.SecretKey $r1;
        org.spongycastle.jcajce.util.DefaultJcaJceHelper $r2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.spongycastle.operator.jcajce.OperatorHelper $r4;

        r0 := @this: org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper;

        $r1 := @parameter0: javax.crypto.SecretKey;

        $r3 = staticinvoke <org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper: org.spongycastle.asn1.x509.AlgorithmIdentifier determineKeyEncAlg(javax.crypto.SecretKey)>($r1);

        specialinvoke r0.<org.spongycastle.operator.SymmetricKeyWrapper: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r3);

        $r4 = new org.spongycastle.operator.jcajce.OperatorHelper;

        $r2 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        specialinvoke $r4.<org.spongycastle.operator.jcajce.OperatorHelper: void <init>(org.spongycastle.jcajce.util.JcaJceHelper)>($r2);

        r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper: org.spongycastle.operator.jcajce.OperatorHelper helper> = $r4;

        r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper: javax.crypto.SecretKey wrappingKey> = $r1;

        return;
    }
    static org.spongycastle.asn1.x509.AlgorithmIdentifier determineKeyEncAlg(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        boolean $z0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        org.spongycastle.asn1.DERNull $r3;
        org.spongycastle.asn1.ASN1Integer $r4;
        java.lang.IllegalArgumentException $r5;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("DES");

        if $z0 != 0 goto label01;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("TripleDES");

        if $z0 == 0 goto label02;

     label01:
        $r1 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_alg_CMS3DESwrap>;

        $r3 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        specialinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r2, $r3);

        return $r1;

     label02:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("RC2");

        if $z0 == 0 goto label03;

        $r1 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 = new org.spongycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>("1.2.840.113549.1.9.16.3.7");

        $r4 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r4.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(58L);

        specialinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r2, $r4);

        return $r1;

     label03:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("AES");

        if $z0 == 0 goto label08;

        if $i0 != 128 goto label05;

        $r2 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes128_wrap>;

     label04:
        $r1 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        specialinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

        return $r1;

     label05:
        if $i0 != 192 goto label06;

        $r2 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes192_wrap>;

        goto label04;

     label06:
        if $i0 != 256 goto label07;

        $r2 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes256_wrap>;

        goto label04;

     label07:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal keysize in AES");

        throw $r5;

     label08:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("SEED");

        if $z0 == 0 goto label09;

        $r1 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 = <org.spongycastle.asn1.kisa.KISAObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_npki_app_cmsSeed_wrap>;

        specialinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

        return $r1;

     label09:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("Camellia");

        if $z0 == 0 goto label14;

        if $i0 != 128 goto label11;

        $r2 = <org.spongycastle.asn1.ntt.NTTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_camellia128_wrap>;

     label10:
        $r1 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        specialinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

        return $r1;

     label11:
        if $i0 != 192 goto label12;

        $r2 = <org.spongycastle.asn1.ntt.NTTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_camellia192_wrap>;

        goto label10;

     label12:
        if $i0 != 256 goto label13;

        $r2 = <org.spongycastle.asn1.ntt.NTTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_camellia256_wrap>;

        goto label10;

     label13:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal keysize in Camellia");

        throw $r5;

     label14:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown algorithm");

        throw $r5;
    }
    private static org.spongycastle.asn1.x509.AlgorithmIdentifier determineKeyEncAlg(javax.crypto.SecretKey)
    {
        javax.crypto.SecretKey $r0;
        java.lang.String $r1;
        byte[] $r2;
        int $i0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;

        $r0 := @parameter0: javax.crypto.SecretKey;

        $r1 = interfaceinvoke $r0.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();

        $r2 = interfaceinvoke $r0.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $i0 = lengthof $r2;

        $i0 = $i0 * 8;

        $r3 = staticinvoke <org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper: org.spongycastle.asn1.x509.AlgorithmIdentifier determineKeyEncAlg(java.lang.String,int)>($r1, $i0);

        return $r3;
    }
    public byte[] generateWrappedKey(org.spongycastle.operator.GenericKey) throws org.spongycastle.operator.OperatorException
    {
        org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper r0;
        org.spongycastle.operator.GenericKey $r1;
        java.security.GeneralSecurityException r2;
        java.security.Key $r3;
        org.spongycastle.operator.jcajce.OperatorHelper $r4;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r5;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r6;
        javax.crypto.Cipher $r7;
        javax.crypto.SecretKey $r8;
        java.security.SecureRandom $r9;
        byte[] $r10;
        org.spongycastle.operator.OperatorException $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13;

        r0 := @this: org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper;

        $r1 := @parameter0: org.spongycastle.operator.GenericKey;

        $r3 = staticinvoke <org.spongycastle.operator.jcajce.OperatorUtils: java.security.Key getJceKey(org.spongycastle.operator.GenericKey)>($r1);

        $r4 = r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper: org.spongycastle.operator.jcajce.OperatorHelper helper>;

        $r5 = virtualinvoke r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r7 = virtualinvoke $r4.<org.spongycastle.operator.jcajce.OperatorHelper: javax.crypto.Cipher createSymmetricWrapper(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r6);

        $r8 = r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper: javax.crypto.SecretKey wrappingKey>;

        $r9 = r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper: java.security.SecureRandom random>;

     label1:
        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(3, $r8, $r9);

        $r10 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>($r3);

     label2:
        return $r10;

     label3:
        r2 := @caughtexception;

        $r11 = new org.spongycastle.operator.OperatorException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot wrap key: ");

        $r13 = virtualinvoke r2.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.spongycastle.operator.OperatorException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r2);

        throw $r11;

        catch java.security.GeneralSecurityException from label1 to label2 with label3;
    }
    public org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper setProvider(java.lang.String)
    {
        org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper r0;
        java.lang.String $r1;
        org.spongycastle.operator.jcajce.OperatorHelper $r2;
        org.spongycastle.jcajce.util.NamedJcaJceHelper $r3;

        r0 := @this: org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.operator.jcajce.OperatorHelper;

        $r3 = new org.spongycastle.jcajce.util.NamedJcaJceHelper;

        specialinvoke $r3.<org.spongycastle.jcajce.util.NamedJcaJceHelper: void <init>(java.lang.String)>($r1);

        specialinvoke $r2.<org.spongycastle.operator.jcajce.OperatorHelper: void <init>(org.spongycastle.jcajce.util.JcaJceHelper)>($r3);

        r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper: org.spongycastle.operator.jcajce.OperatorHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper setProvider(java.security.Provider)
    {
        org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper r0;
        java.security.Provider $r1;
        org.spongycastle.operator.jcajce.OperatorHelper $r2;
        org.spongycastle.jcajce.util.ProviderJcaJceHelper $r3;

        r0 := @this: org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.operator.jcajce.OperatorHelper;

        $r3 = new org.spongycastle.jcajce.util.ProviderJcaJceHelper;

        specialinvoke $r3.<org.spongycastle.jcajce.util.ProviderJcaJceHelper: void <init>(java.security.Provider)>($r1);

        specialinvoke $r2.<org.spongycastle.operator.jcajce.OperatorHelper: void <init>(org.spongycastle.jcajce.util.JcaJceHelper)>($r3);

        r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper: org.spongycastle.operator.jcajce.OperatorHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper setSecureRandom(java.security.SecureRandom)
    {
        org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper r0;
        java.security.SecureRandom $r1;

        r0 := @this: org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper;

        $r1 := @parameter0: java.security.SecureRandom;

        r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper: java.security.SecureRandom random> = $r1;

        return r0;
    }
