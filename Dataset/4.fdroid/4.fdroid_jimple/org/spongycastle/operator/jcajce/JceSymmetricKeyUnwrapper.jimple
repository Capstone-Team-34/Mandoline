org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper extends org.spongycastle.operator.SymmetricKeyUnwrapper
private org.spongycastle.operator.jcajce.OperatorHelper helper
private javax.crypto.SecretKey secretKey
    public void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier, javax.crypto.SecretKey)
    {
        org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        javax.crypto.SecretKey $r2;
        org.spongycastle.operator.jcajce.OperatorHelper $r3;
        org.spongycastle.jcajce.util.DefaultJcaJceHelper $r4;

        r0 := @this: org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: javax.crypto.SecretKey;

        specialinvoke r0.<org.spongycastle.operator.SymmetricKeyUnwrapper: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r1);

        $r3 = new org.spongycastle.operator.jcajce.OperatorHelper;

        $r4 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r4.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        specialinvoke $r3.<org.spongycastle.operator.jcajce.OperatorHelper: void <init>(org.spongycastle.jcajce.util.JcaJceHelper)>($r4);

        r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper: org.spongycastle.operator.jcajce.OperatorHelper helper> = $r3;

        r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper: javax.crypto.SecretKey secretKey> = $r2;

        return;
    }
    public org.spongycastle.operator.GenericKey generateUnwrappedKey(org.spongycastle.asn1.x509.AlgorithmIdentifier, byte[]) throws org.spongycastle.operator.OperatorException
    {
        org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1, $r4;
        byte[] $r2;
        org.spongycastle.operator.jcajce.OperatorHelper $r3;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;
        javax.crypto.Cipher $r6;
        javax.crypto.SecretKey $r7;
        org.spongycastle.operator.jcajce.JceGenericKey $r8;
        java.lang.String $r9;
        java.security.Key $r10;
        java.security.InvalidKeyException r11;
        org.spongycastle.operator.OperatorException $r12;
        java.security.NoSuchAlgorithmException r13;

        r0 := @this: org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: byte[];

        $r3 = r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper: org.spongycastle.operator.jcajce.OperatorHelper helper>;

     label1:
        $r4 = virtualinvoke r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r6 = virtualinvoke $r3.<org.spongycastle.operator.jcajce.OperatorHelper: javax.crypto.Cipher createSymmetricWrapper(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r5);

     label2:
        $r7 = r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper: javax.crypto.SecretKey secretKey>;

     label3:
        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(4, $r7);

     label4:
        $r8 = new org.spongycastle.operator.jcajce.JceGenericKey;

        $r3 = r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper: org.spongycastle.operator.jcajce.OperatorHelper helper>;

     label5:
        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r9 = virtualinvoke $r3.<org.spongycastle.operator.jcajce.OperatorHelper: java.lang.String getKeyAlgorithmName(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r5);

        $r10 = virtualinvoke $r6.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>($r2, $r9, 3);

        specialinvoke $r8.<org.spongycastle.operator.jcajce.JceGenericKey: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>($r1, $r10);

     label6:
        return $r8;

     label7:
        r11 := @caughtexception;

        $r12 = new org.spongycastle.operator.OperatorException;

        specialinvoke $r12.<org.spongycastle.operator.OperatorException: void <init>(java.lang.String,java.lang.Throwable)>("key invalid in message.", r11);

        throw $r12;

     label8:
        r13 := @caughtexception;

        $r12 = new org.spongycastle.operator.OperatorException;

        specialinvoke $r12.<org.spongycastle.operator.OperatorException: void <init>(java.lang.String,java.lang.Throwable)>("can\'t find algorithm.", r13);

        throw $r12;

        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch java.security.InvalidKeyException from label3 to label4 with label7;
        catch java.security.InvalidKeyException from label5 to label6 with label7;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label8;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label8;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label8;
    }
    public org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper setProvider(java.lang.String)
    {
        org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper r0;
        java.lang.String $r1;
        org.spongycastle.operator.jcajce.OperatorHelper $r2;
        org.spongycastle.jcajce.util.NamedJcaJceHelper $r3;

        r0 := @this: org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.operator.jcajce.OperatorHelper;

        $r3 = new org.spongycastle.jcajce.util.NamedJcaJceHelper;

        specialinvoke $r3.<org.spongycastle.jcajce.util.NamedJcaJceHelper: void <init>(java.lang.String)>($r1);

        specialinvoke $r2.<org.spongycastle.operator.jcajce.OperatorHelper: void <init>(org.spongycastle.jcajce.util.JcaJceHelper)>($r3);

        r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper: org.spongycastle.operator.jcajce.OperatorHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper setProvider(java.security.Provider)
    {
        org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper r0;
        java.security.Provider $r1;
        org.spongycastle.operator.jcajce.OperatorHelper $r2;
        org.spongycastle.jcajce.util.ProviderJcaJceHelper $r3;

        r0 := @this: org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.operator.jcajce.OperatorHelper;

        $r3 = new org.spongycastle.jcajce.util.ProviderJcaJceHelper;

        specialinvoke $r3.<org.spongycastle.jcajce.util.ProviderJcaJceHelper: void <init>(java.security.Provider)>($r1);

        specialinvoke $r2.<org.spongycastle.operator.jcajce.OperatorHelper: void <init>(org.spongycastle.jcajce.util.JcaJceHelper)>($r3);

        r0.<org.spongycastle.operator.jcajce.JceSymmetricKeyUnwrapper: org.spongycastle.operator.jcajce.OperatorHelper helper> = $r2;

        return r0;
    }
