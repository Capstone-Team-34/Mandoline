org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper extends org.spongycastle.operator.AsymmetricKeyUnwrapper
private java.util.Map extraMappings
private org.spongycastle.operator.jcajce.OperatorHelper helper
private byte[] partyUInfo
private byte[] partyVInfo
private java.security.PrivateKey privKey
    public void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier, java.security.PrivateKey, byte[], byte[])
    {
        org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        java.security.PrivateKey $r2;
        byte[] $r3, $r4;
        org.spongycastle.jcajce.util.DefaultJcaJceHelper $r5;
        org.spongycastle.operator.jcajce.OperatorHelper $r6;
        java.util.HashMap $r7;

        r0 := @this: org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: java.security.PrivateKey;

        $r3 := @parameter2: byte[];

        $r4 := @parameter3: byte[];

        specialinvoke r0.<org.spongycastle.operator.AsymmetricKeyUnwrapper: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r1);

        $r6 = new org.spongycastle.operator.jcajce.OperatorHelper;

        $r5 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r5.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        specialinvoke $r6.<org.spongycastle.operator.jcajce.OperatorHelper: void <init>(org.spongycastle.jcajce.util.JcaJceHelper)>($r5);

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: org.spongycastle.operator.jcajce.OperatorHelper helper> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: java.util.Map extraMappings> = $r7;

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: java.security.PrivateKey privKey> = $r2;

        $r3 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r3);

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: byte[] partyUInfo> = $r3;

        $r3 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r4);

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: byte[] partyVInfo> = $r3;

        return;
    }
    public org.spongycastle.operator.GenericKey generateUnwrappedKey(org.spongycastle.asn1.x509.AlgorithmIdentifier, byte[]) throws org.spongycastle.operator.OperatorException
    {
        org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1, $r5;
        byte[] $r2, $r4, $r16;
        java.lang.Exception r3;
        int i0;
        org.spongycastle.asn1.ASN1Encodable $r6;
        org.spongycastle.asn1.cms.GenericHybridParameters $r7;
        org.spongycastle.operator.jcajce.OperatorHelper $r8;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r9;
        java.util.Map $r10;
        javax.crypto.Cipher $r11;
        java.lang.String $r12;
        org.spongycastle.asn1.cms.RsaKemParameters $r13;
        java.math.BigInteger $r14;
        org.spongycastle.crypto.util.DEROtherInfo$Builder $r15;
        org.spongycastle.crypto.util.DEROtherInfo $r17;
        org.spongycastle.jcajce.spec.KTSParameterSpec$Builder $r18;
        org.spongycastle.jcajce.spec.KTSParameterSpec $r19;
        java.security.PrivateKey $r20;
        java.security.Key $r21;
        org.spongycastle.operator.jcajce.JceGenericKey $r22;
        org.spongycastle.operator.OperatorException $r23;
        java.lang.StringBuilder $r24;

        r0 := @this: org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: byte[];

        $r5 = virtualinvoke r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r7 = staticinvoke <org.spongycastle.asn1.cms.GenericHybridParameters: org.spongycastle.asn1.cms.GenericHybridParameters getInstance(java.lang.Object)>($r6);

        $r8 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: org.spongycastle.operator.jcajce.OperatorHelper helper>;

        $r5 = virtualinvoke r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r9 = virtualinvoke $r5.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r10 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: java.util.Map extraMappings>;

        $r11 = virtualinvoke $r8.<org.spongycastle.operator.jcajce.OperatorHelper: javax.crypto.Cipher createAsymmetricWrapper(org.spongycastle.asn1.ASN1ObjectIdentifier,java.util.Map)>($r9, $r10);

        $r8 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: org.spongycastle.operator.jcajce.OperatorHelper helper>;

        $r5 = virtualinvoke $r7.<org.spongycastle.asn1.cms.GenericHybridParameters: org.spongycastle.asn1.x509.AlgorithmIdentifier getDem()>();

        $r9 = virtualinvoke $r5.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r12 = virtualinvoke $r8.<org.spongycastle.operator.jcajce.OperatorHelper: java.lang.String getWrappingAlgorithmName(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r9);

        $r5 = virtualinvoke $r7.<org.spongycastle.asn1.cms.GenericHybridParameters: org.spongycastle.asn1.x509.AlgorithmIdentifier getKem()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r13 = staticinvoke <org.spongycastle.asn1.cms.RsaKemParameters: org.spongycastle.asn1.cms.RsaKemParameters getInstance(java.lang.Object)>($r6);

        $r14 = virtualinvoke $r13.<org.spongycastle.asn1.cms.RsaKemParameters: java.math.BigInteger getKeyLength()>();

        i0 = virtualinvoke $r14.<java.math.BigInteger: int intValue()>();

        i0 = i0 * 8;

        $r15 = new org.spongycastle.crypto.util.DEROtherInfo$Builder;

     label1:
        $r5 = virtualinvoke $r7.<org.spongycastle.asn1.cms.GenericHybridParameters: org.spongycastle.asn1.x509.AlgorithmIdentifier getDem()>();

        $r16 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: byte[] partyUInfo>;

        $r4 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: byte[] partyVInfo>;

        specialinvoke $r15.<org.spongycastle.crypto.util.DEROtherInfo$Builder: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[],byte[])>($r5, $r16, $r4);

        $r17 = virtualinvoke $r15.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.crypto.util.DEROtherInfo build()>();

     label2:
        $r18 = new org.spongycastle.jcajce.spec.KTSParameterSpec$Builder;

     label3:
        $r4 = virtualinvoke $r17.<org.spongycastle.crypto.util.DEROtherInfo: byte[] getEncoded()>();

        specialinvoke $r18.<org.spongycastle.jcajce.spec.KTSParameterSpec$Builder: void <init>(java.lang.String,int,byte[])>($r12, i0, $r4);

        $r5 = virtualinvoke $r13.<org.spongycastle.asn1.cms.RsaKemParameters: org.spongycastle.asn1.x509.AlgorithmIdentifier getKeyDerivationFunction()>();

        $r18 = virtualinvoke $r18.<org.spongycastle.jcajce.spec.KTSParameterSpec$Builder: org.spongycastle.jcajce.spec.KTSParameterSpec$Builder withKdfAlgorithm(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r5);

        $r19 = virtualinvoke $r18.<org.spongycastle.jcajce.spec.KTSParameterSpec$Builder: org.spongycastle.jcajce.spec.KTSParameterSpec build()>();

        $r20 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: java.security.PrivateKey privKey>;

        virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(4, $r20, $r19);

        $r8 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: org.spongycastle.operator.jcajce.OperatorHelper helper>;

        $r9 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r12 = virtualinvoke $r8.<org.spongycastle.operator.jcajce.OperatorHelper: java.lang.String getKeyAlgorithmName(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r9);

        $r21 = virtualinvoke $r11.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>($r2, $r12, 3);

     label4:
        $r22 = new org.spongycastle.operator.jcajce.JceGenericKey;

        specialinvoke $r22.<org.spongycastle.operator.jcajce.JceGenericKey: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>($r1, $r21);

        return $r22;

     label5:
        r3 := @caughtexception;

        $r23 = new org.spongycastle.operator.OperatorException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to unwrap contents key: ");

        $r12 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.spongycastle.operator.OperatorException: void <init>(java.lang.String,java.lang.Throwable)>($r12, r3);

        throw $r23;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    public org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper setProvider(java.lang.String)
    {
        org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper r0;
        java.lang.String $r1;
        org.spongycastle.operator.jcajce.OperatorHelper $r2;
        org.spongycastle.jcajce.util.NamedJcaJceHelper $r3;

        r0 := @this: org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.operator.jcajce.OperatorHelper;

        $r3 = new org.spongycastle.jcajce.util.NamedJcaJceHelper;

        specialinvoke $r3.<org.spongycastle.jcajce.util.NamedJcaJceHelper: void <init>(java.lang.String)>($r1);

        specialinvoke $r2.<org.spongycastle.operator.jcajce.OperatorHelper: void <init>(org.spongycastle.jcajce.util.JcaJceHelper)>($r3);

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: org.spongycastle.operator.jcajce.OperatorHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper setProvider(java.security.Provider)
    {
        org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper r0;
        java.security.Provider $r1;
        org.spongycastle.operator.jcajce.OperatorHelper $r2;
        org.spongycastle.jcajce.util.ProviderJcaJceHelper $r3;

        r0 := @this: org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.operator.jcajce.OperatorHelper;

        $r3 = new org.spongycastle.jcajce.util.ProviderJcaJceHelper;

        specialinvoke $r3.<org.spongycastle.jcajce.util.ProviderJcaJceHelper: void <init>(java.security.Provider)>($r1);

        specialinvoke $r2.<org.spongycastle.operator.jcajce.OperatorHelper: void <init>(org.spongycastle.jcajce.util.JcaJceHelper)>($r3);

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper: org.spongycastle.operator.jcajce.OperatorHelper helper> = $r2;

        return r0;
    }
