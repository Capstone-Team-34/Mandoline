org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier extends java.lang.Object implements org.spongycastle.operator.ContentVerifier
private org.spongycastle.asn1.x509.AlgorithmIdentifier algorithm
protected org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SignatureOutputStream stream
final org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder this$0
    void <init>(org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder, org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SignatureOutputStream)
    {
        org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier r0;
        org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SignatureOutputStream $r3;

        r0 := @this: org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier;

        $r1 := @parameter0: org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 := @parameter2: org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SignatureOutputStream;

        r0.<org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier: org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithm> = $r2;

        r0.<org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier: org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SignatureOutputStream stream> = $r3;

        return;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()
    {
        org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier;

        r1 = r0.<org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithm>;

        return r1;
    }
    public java.io.OutputStream getOutputStream()
    {
        org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier r0;
        org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SignatureOutputStream $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier;

        $r1 = r0.<org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier: org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SignatureOutputStream stream>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("verifier not initialised");

        throw $r2;

     label1:
        $r1 = r0.<org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier: org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SignatureOutputStream stream>;

        return $r1;
    }
    public boolean verify(byte[])
    {
        org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier r0;
        byte[] $r1;
        java.security.SignatureException r2;
        org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SignatureOutputStream $r3;
        boolean $z0;
        org.spongycastle.operator.RuntimeOperatorException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier;

        $r1 := @parameter0: byte[];

        $r3 = r0.<org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SigVerifier: org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SignatureOutputStream stream>;

     label1:
        $z0 = virtualinvoke $r3.<org.spongycastle.operator.jcajce.JcaContentVerifierProviderBuilder$SignatureOutputStream: boolean verify(byte[])>($r1);

     label2:
        return $z0;

     label3:
        r2 := @caughtexception;

        $r4 = new org.spongycastle.operator.RuntimeOperatorException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception obtaining signature: ");

        $r6 = virtualinvoke r2.<java.security.SignatureException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.operator.RuntimeOperatorException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r2);

        throw $r4;

        catch java.security.SignatureException from label1 to label2 with label3;
    }
