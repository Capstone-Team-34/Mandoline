org.spongycastle.operator.jcajce.JceKTSKeyWrapper extends org.spongycastle.operator.AsymmetricKeyWrapper
private org.spongycastle.operator.jcajce.OperatorHelper helper
private final int keySizeInBits
private final byte[] partyUInfo
private final byte[] partyVInfo
private java.security.PublicKey publicKey
private java.security.SecureRandom random
private final java.lang.String symmetricWrappingAlg
    public void <init>(java.security.PublicKey, java.lang.String, int, byte[], byte[])
    {
        org.spongycastle.operator.jcajce.JceKTSKeyWrapper r0;
        java.security.PublicKey $r1;
        java.lang.String $r2;
        int $i0, $i1;
        byte[] $r3, $r4;
        org.spongycastle.asn1.cms.GenericHybridParameters $r5;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r6, $r8, $r9, $r11;
        org.spongycastle.asn1.cms.RsaKemParameters $r7;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r10, $r12, $r13, $r14;
        org.spongycastle.operator.jcajce.OperatorHelper $r15;
        org.spongycastle.jcajce.util.DefaultJcaJceHelper $r16;

        r0 := @this: org.spongycastle.operator.jcajce.JceKTSKeyWrapper;

        $r1 := @parameter0: java.security.PublicKey;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: byte[];

        $r4 := @parameter4: byte[];

        $r11 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r12 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_rsa_KEM>;

        $r5 = new org.spongycastle.asn1.cms.GenericHybridParameters;

        $r6 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r13 = <org.spongycastle.asn1.iso.ISOIECObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_kem_rsa>;

        $r7 = new org.spongycastle.asn1.cms.RsaKemParameters;

        $r8 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r14 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_kdf_kdf3>;

        $r9 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r10 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_sha256>;

        specialinvoke $r9.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r10);

        specialinvoke $r8.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r14, $r9);

        $i1 = $i0 + 7;

        $i1 = $i1 / 8;

        specialinvoke $r7.<org.spongycastle.asn1.cms.RsaKemParameters: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,int)>($r8, $i1);

        specialinvoke $r6.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r13, $r7);

        $r8 = staticinvoke <org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper: org.spongycastle.asn1.x509.AlgorithmIdentifier determineKeyEncAlg(java.lang.String,int)>($r2, $i0);

        specialinvoke $r5.<org.spongycastle.asn1.cms.GenericHybridParameters: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r6, $r8);

        specialinvoke $r11.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r12, $r5);

        specialinvoke r0.<org.spongycastle.operator.AsymmetricKeyWrapper: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r11);

        $r15 = new org.spongycastle.operator.jcajce.OperatorHelper;

        $r16 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r16.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        specialinvoke $r15.<org.spongycastle.operator.jcajce.OperatorHelper: void <init>(org.spongycastle.jcajce.util.JcaJceHelper)>($r16);

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: org.spongycastle.operator.jcajce.OperatorHelper helper> = $r15;

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: java.security.PublicKey publicKey> = $r1;

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: java.lang.String symmetricWrappingAlg> = $r2;

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: int keySizeInBits> = $i0;

        $r3 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r3);

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: byte[] partyUInfo> = $r3;

        $r3 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r4);

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: byte[] partyVInfo> = $r3;

        return;
    }
    public void <init>(java.security.cert.X509Certificate, java.lang.String, int, byte[], byte[])
    {
        org.spongycastle.operator.jcajce.JceKTSKeyWrapper r0;
        java.security.cert.X509Certificate $r1;
        java.lang.String $r2;
        int $i0;
        byte[] $r3, $r4;
        java.security.PublicKey $r5;

        r0 := @this: org.spongycastle.operator.jcajce.JceKTSKeyWrapper;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: byte[];

        $r4 := @parameter4: byte[];

        $r5 = virtualinvoke $r1.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        specialinvoke r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: void <init>(java.security.PublicKey,java.lang.String,int,byte[],byte[])>($r5, $r2, $i0, $r3, $r4);

        return;
    }
    public byte[] generateWrappedKey(org.spongycastle.operator.GenericKey) throws org.spongycastle.operator.OperatorException
    {
        org.spongycastle.operator.jcajce.JceKTSKeyWrapper r0;
        org.spongycastle.operator.GenericKey $r1;
        java.lang.Exception r2;
        org.spongycastle.operator.jcajce.OperatorHelper $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;
        java.util.HashMap $r6;
        javax.crypto.Cipher $r7;
        org.spongycastle.crypto.util.DEROtherInfo$Builder $r8;
        java.lang.String $r9;
        int $i0;
        byte[] $r10, $r11;
        org.spongycastle.crypto.util.DEROtherInfo $r12;
        org.spongycastle.jcajce.spec.KTSParameterSpec$Builder $r13;
        org.spongycastle.jcajce.spec.KTSParameterSpec $r14;
        java.security.PublicKey $r15;
        java.security.SecureRandom $r16;
        java.security.Key $r17;
        org.spongycastle.operator.OperatorException $r18;
        java.lang.StringBuilder $r19;

        r0 := @this: org.spongycastle.operator.jcajce.JceKTSKeyWrapper;

        $r1 := @parameter0: org.spongycastle.operator.GenericKey;

        $r3 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: org.spongycastle.operator.jcajce.OperatorHelper helper>;

        $r4 = virtualinvoke r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r7 = virtualinvoke $r3.<org.spongycastle.operator.jcajce.OperatorHelper: javax.crypto.Cipher createAsymmetricWrapper(org.spongycastle.asn1.ASN1ObjectIdentifier,java.util.Map)>($r5, $r6);

        $r8 = new org.spongycastle.crypto.util.DEROtherInfo$Builder;

     label1:
        $r9 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: java.lang.String symmetricWrappingAlg>;

        $i0 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: int keySizeInBits>;

        $r4 = staticinvoke <org.spongycastle.operator.jcajce.JceSymmetricKeyWrapper: org.spongycastle.asn1.x509.AlgorithmIdentifier determineKeyEncAlg(java.lang.String,int)>($r9, $i0);

        $r10 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: byte[] partyUInfo>;

        $r11 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: byte[] partyVInfo>;

        specialinvoke $r8.<org.spongycastle.crypto.util.DEROtherInfo$Builder: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[],byte[])>($r4, $r10, $r11);

        $r12 = virtualinvoke $r8.<org.spongycastle.crypto.util.DEROtherInfo$Builder: org.spongycastle.crypto.util.DEROtherInfo build()>();

     label2:
        $r13 = new org.spongycastle.jcajce.spec.KTSParameterSpec$Builder;

     label3:
        $r9 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: java.lang.String symmetricWrappingAlg>;

        $i0 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: int keySizeInBits>;

        $r10 = virtualinvoke $r12.<org.spongycastle.crypto.util.DEROtherInfo: byte[] getEncoded()>();

        specialinvoke $r13.<org.spongycastle.jcajce.spec.KTSParameterSpec$Builder: void <init>(java.lang.String,int,byte[])>($r9, $i0, $r10);

        $r14 = virtualinvoke $r13.<org.spongycastle.jcajce.spec.KTSParameterSpec$Builder: org.spongycastle.jcajce.spec.KTSParameterSpec build()>();

        $r15 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: java.security.PublicKey publicKey>;

        $r16 = r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: java.security.SecureRandom random>;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(3, $r15, $r14, $r16);

        $r17 = staticinvoke <org.spongycastle.operator.jcajce.OperatorUtils: java.security.Key getJceKey(org.spongycastle.operator.GenericKey)>($r1);

        $r10 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>($r17);

     label4:
        return $r10;

     label5:
        r2 := @caughtexception;

        $r18 = new org.spongycastle.operator.OperatorException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to wrap contents key: ");

        $r9 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<org.spongycastle.operator.OperatorException: void <init>(java.lang.String,java.lang.Throwable)>($r9, r2);

        throw $r18;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    public org.spongycastle.operator.jcajce.JceKTSKeyWrapper setProvider(java.lang.String)
    {
        org.spongycastle.operator.jcajce.JceKTSKeyWrapper r0;
        java.lang.String $r1;
        org.spongycastle.operator.jcajce.OperatorHelper $r2;
        org.spongycastle.jcajce.util.NamedJcaJceHelper $r3;

        r0 := @this: org.spongycastle.operator.jcajce.JceKTSKeyWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.operator.jcajce.OperatorHelper;

        $r3 = new org.spongycastle.jcajce.util.NamedJcaJceHelper;

        specialinvoke $r3.<org.spongycastle.jcajce.util.NamedJcaJceHelper: void <init>(java.lang.String)>($r1);

        specialinvoke $r2.<org.spongycastle.operator.jcajce.OperatorHelper: void <init>(org.spongycastle.jcajce.util.JcaJceHelper)>($r3);

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: org.spongycastle.operator.jcajce.OperatorHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.operator.jcajce.JceKTSKeyWrapper setProvider(java.security.Provider)
    {
        org.spongycastle.operator.jcajce.JceKTSKeyWrapper r0;
        java.security.Provider $r1;
        org.spongycastle.operator.jcajce.OperatorHelper $r2;
        org.spongycastle.jcajce.util.ProviderJcaJceHelper $r3;

        r0 := @this: org.spongycastle.operator.jcajce.JceKTSKeyWrapper;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.operator.jcajce.OperatorHelper;

        $r3 = new org.spongycastle.jcajce.util.ProviderJcaJceHelper;

        specialinvoke $r3.<org.spongycastle.jcajce.util.ProviderJcaJceHelper: void <init>(java.security.Provider)>($r1);

        specialinvoke $r2.<org.spongycastle.operator.jcajce.OperatorHelper: void <init>(org.spongycastle.jcajce.util.JcaJceHelper)>($r3);

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: org.spongycastle.operator.jcajce.OperatorHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.operator.jcajce.JceKTSKeyWrapper setSecureRandom(java.security.SecureRandom)
    {
        org.spongycastle.operator.jcajce.JceKTSKeyWrapper r0;
        java.security.SecureRandom $r1;

        r0 := @this: org.spongycastle.operator.jcajce.JceKTSKeyWrapper;

        $r1 := @parameter0: java.security.SecureRandom;

        r0.<org.spongycastle.operator.jcajce.JceKTSKeyWrapper: java.security.SecureRandom random> = $r1;

        return r0;
    }
