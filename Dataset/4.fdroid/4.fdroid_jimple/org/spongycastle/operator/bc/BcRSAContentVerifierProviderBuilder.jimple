org.spongycastle.operator.bc.BcRSAContentVerifierProviderBuilder extends org.spongycastle.operator.bc.BcContentVerifierProviderBuilder
private org.spongycastle.operator.DigestAlgorithmIdentifierFinder digestAlgorithmFinder
    public void <init>(org.spongycastle.operator.DigestAlgorithmIdentifierFinder)
    {
        org.spongycastle.operator.bc.BcRSAContentVerifierProviderBuilder r0;
        org.spongycastle.operator.DigestAlgorithmIdentifierFinder $r1;

        r0 := @this: org.spongycastle.operator.bc.BcRSAContentVerifierProviderBuilder;

        $r1 := @parameter0: org.spongycastle.operator.DigestAlgorithmIdentifierFinder;

        specialinvoke r0.<org.spongycastle.operator.bc.BcContentVerifierProviderBuilder: void <init>()>();

        r0.<org.spongycastle.operator.bc.BcRSAContentVerifierProviderBuilder: org.spongycastle.operator.DigestAlgorithmIdentifierFinder digestAlgorithmFinder> = $r1;

        return;
    }
    protected org.spongycastle.crypto.Signer createSigner(org.spongycastle.asn1.x509.AlgorithmIdentifier) throws org.spongycastle.operator.OperatorCreationException
    {
        org.spongycastle.operator.bc.BcRSAContentVerifierProviderBuilder r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.operator.DigestAlgorithmIdentifierFinder $r2;
        org.spongycastle.operator.bc.BcDigestProvider $r3;
        org.spongycastle.crypto.ExtendedDigest $r4;
        org.spongycastle.crypto.signers.RSADigestSigner $r5;

        r0 := @this: org.spongycastle.operator.bc.BcRSAContentVerifierProviderBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 = r0.<org.spongycastle.operator.bc.BcRSAContentVerifierProviderBuilder: org.spongycastle.operator.DigestAlgorithmIdentifierFinder digestAlgorithmFinder>;

        $r1 = interfaceinvoke $r2.<org.spongycastle.operator.DigestAlgorithmIdentifierFinder: org.spongycastle.asn1.x509.AlgorithmIdentifier find(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r1);

        $r3 = r0.<org.spongycastle.operator.bc.BcRSAContentVerifierProviderBuilder: org.spongycastle.operator.bc.BcDigestProvider digestProvider>;

        $r4 = interfaceinvoke $r3.<org.spongycastle.operator.bc.BcDigestProvider: org.spongycastle.crypto.ExtendedDigest get(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r1);

        $r5 = new org.spongycastle.crypto.signers.RSADigestSigner;

        specialinvoke $r5.<org.spongycastle.crypto.signers.RSADigestSigner: void <init>(org.spongycastle.crypto.Digest)>($r4);

        return $r5;
    }
    protected org.spongycastle.crypto.params.AsymmetricKeyParameter extractKeyParameters(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException
    {
        org.spongycastle.operator.bc.BcRSAContentVerifierProviderBuilder r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r2;

        r0 := @this: org.spongycastle.operator.bc.BcRSAContentVerifierProviderBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r2 = staticinvoke <org.spongycastle.crypto.util.PublicKeyFactory: org.spongycastle.crypto.params.AsymmetricKeyParameter createKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r1);

        return $r2;
    }
