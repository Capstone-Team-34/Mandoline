org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2 extends java.lang.Object implements org.spongycastle.operator.ContentVerifierProvider
final org.spongycastle.operator.bc.BcContentVerifierProviderBuilder this$0
final org.spongycastle.crypto.params.AsymmetricKeyParameter val$publicKey
    void <init>(org.spongycastle.operator.bc.BcContentVerifierProviderBuilder, org.spongycastle.crypto.params.AsymmetricKeyParameter)
    {
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2 r0;
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder $r1;
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r2;

        r0 := @this: org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2;

        $r1 := @parameter0: org.spongycastle.operator.bc.BcContentVerifierProviderBuilder;

        $r2 := @parameter1: org.spongycastle.crypto.params.AsymmetricKeyParameter;

        r0.<org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2: org.spongycastle.operator.bc.BcContentVerifierProviderBuilder this$0> = $r1;

        r0.<org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2: org.spongycastle.crypto.params.AsymmetricKeyParameter val$publicKey> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.spongycastle.operator.ContentVerifier get(org.spongycastle.asn1.x509.AlgorithmIdentifier) throws org.spongycastle.operator.OperatorCreationException
    {
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2 r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.operator.bc.BcSignerOutputStream $r2;
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder $r3;
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r4;
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$SigVerifier $r5;

        r0 := @this: org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 = r0.<org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2: org.spongycastle.operator.bc.BcContentVerifierProviderBuilder this$0>;

        $r4 = r0.<org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2: org.spongycastle.crypto.params.AsymmetricKeyParameter val$publicKey>;

        $r2 = staticinvoke <org.spongycastle.operator.bc.BcContentVerifierProviderBuilder: org.spongycastle.operator.bc.BcSignerOutputStream access$000(org.spongycastle.operator.bc.BcContentVerifierProviderBuilder,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.crypto.params.AsymmetricKeyParameter)>($r3, $r1, $r4);

        $r5 = new org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$SigVerifier;

        $r3 = r0.<org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2: org.spongycastle.operator.bc.BcContentVerifierProviderBuilder this$0>;

        specialinvoke $r5.<org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$SigVerifier: void <init>(org.spongycastle.operator.bc.BcContentVerifierProviderBuilder,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.operator.bc.BcSignerOutputStream)>($r3, $r1, $r2);

        return $r5;
    }
    public org.spongycastle.cert.X509CertificateHolder getAssociatedCertificate()
    {
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2 r0;

        r0 := @this: org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2;

        return null;
    }
    public boolean hasAssociatedCertificate()
    {
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2 r0;

        r0 := @this: org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2;

        return 0;
    }
