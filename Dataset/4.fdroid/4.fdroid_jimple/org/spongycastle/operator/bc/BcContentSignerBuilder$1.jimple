org.spongycastle.operator.bc.BcContentSignerBuilder$1 extends java.lang.Object implements org.spongycastle.operator.ContentSigner
private org.spongycastle.operator.bc.BcSignerOutputStream stream
final org.spongycastle.operator.bc.BcContentSignerBuilder this$0
final org.spongycastle.crypto.Signer val$sig
    void <init>(org.spongycastle.operator.bc.BcContentSignerBuilder, org.spongycastle.crypto.Signer)
    {
        org.spongycastle.operator.bc.BcContentSignerBuilder$1 r0;
        org.spongycastle.operator.bc.BcContentSignerBuilder $r1;
        org.spongycastle.crypto.Signer $r2;
        org.spongycastle.operator.bc.BcSignerOutputStream $r3;

        r0 := @this: org.spongycastle.operator.bc.BcContentSignerBuilder$1;

        $r1 := @parameter0: org.spongycastle.operator.bc.BcContentSignerBuilder;

        $r2 := @parameter1: org.spongycastle.crypto.Signer;

        r0.<org.spongycastle.operator.bc.BcContentSignerBuilder$1: org.spongycastle.operator.bc.BcContentSignerBuilder this$0> = $r1;

        r0.<org.spongycastle.operator.bc.BcContentSignerBuilder$1: org.spongycastle.crypto.Signer val$sig> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new org.spongycastle.operator.bc.BcSignerOutputStream;

        $r2 = r0.<org.spongycastle.operator.bc.BcContentSignerBuilder$1: org.spongycastle.crypto.Signer val$sig>;

        specialinvoke $r3.<org.spongycastle.operator.bc.BcSignerOutputStream: void <init>(org.spongycastle.crypto.Signer)>($r2);

        r0.<org.spongycastle.operator.bc.BcContentSignerBuilder$1: org.spongycastle.operator.bc.BcSignerOutputStream stream> = $r3;

        return;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()
    {
        org.spongycastle.operator.bc.BcContentSignerBuilder$1 r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.operator.bc.BcContentSignerBuilder $r2;

        r0 := @this: org.spongycastle.operator.bc.BcContentSignerBuilder$1;

        $r2 = r0.<org.spongycastle.operator.bc.BcContentSignerBuilder$1: org.spongycastle.operator.bc.BcContentSignerBuilder this$0>;

        $r1 = staticinvoke <org.spongycastle.operator.bc.BcContentSignerBuilder: org.spongycastle.asn1.x509.AlgorithmIdentifier access$000(org.spongycastle.operator.bc.BcContentSignerBuilder)>($r2);

        return $r1;
    }
    public java.io.OutputStream getOutputStream()
    {
        org.spongycastle.operator.bc.BcContentSignerBuilder$1 r0;
        org.spongycastle.operator.bc.BcSignerOutputStream r1;

        r0 := @this: org.spongycastle.operator.bc.BcContentSignerBuilder$1;

        r1 = r0.<org.spongycastle.operator.bc.BcContentSignerBuilder$1: org.spongycastle.operator.bc.BcSignerOutputStream stream>;

        return r1;
    }
    public byte[] getSignature()
    {
        org.spongycastle.operator.bc.BcContentSignerBuilder$1 r0;
        org.spongycastle.crypto.CryptoException r1;
        org.spongycastle.operator.bc.BcSignerOutputStream $r2;
        byte[] $r3;
        org.spongycastle.operator.RuntimeOperatorException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: org.spongycastle.operator.bc.BcContentSignerBuilder$1;

        $r2 = r0.<org.spongycastle.operator.bc.BcContentSignerBuilder$1: org.spongycastle.operator.bc.BcSignerOutputStream stream>;

     label1:
        $r3 = virtualinvoke $r2.<org.spongycastle.operator.bc.BcSignerOutputStream: byte[] getSignature()>();

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        $r4 = new org.spongycastle.operator.RuntimeOperatorException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception obtaining signature: ");

        $r6 = virtualinvoke r1.<org.spongycastle.crypto.CryptoException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.operator.RuntimeOperatorException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r1);

        throw $r4;

        catch org.spongycastle.crypto.CryptoException from label1 to label2 with label3;
    }
