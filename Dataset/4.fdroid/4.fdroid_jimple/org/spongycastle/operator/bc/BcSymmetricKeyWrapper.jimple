org.spongycastle.operator.bc.BcSymmetricKeyWrapper extends org.spongycastle.operator.SymmetricKeyWrapper
private java.security.SecureRandom random
private org.spongycastle.crypto.Wrapper wrapper
private org.spongycastle.crypto.params.KeyParameter wrappingKey
    public void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.crypto.Wrapper, org.spongycastle.crypto.params.KeyParameter)
    {
        org.spongycastle.operator.bc.BcSymmetricKeyWrapper r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.crypto.Wrapper $r2;
        org.spongycastle.crypto.params.KeyParameter $r3;

        r0 := @this: org.spongycastle.operator.bc.BcSymmetricKeyWrapper;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: org.spongycastle.crypto.Wrapper;

        $r3 := @parameter2: org.spongycastle.crypto.params.KeyParameter;

        specialinvoke r0.<org.spongycastle.operator.SymmetricKeyWrapper: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r1);

        r0.<org.spongycastle.operator.bc.BcSymmetricKeyWrapper: org.spongycastle.crypto.Wrapper wrapper> = $r2;

        r0.<org.spongycastle.operator.bc.BcSymmetricKeyWrapper: org.spongycastle.crypto.params.KeyParameter wrappingKey> = $r3;

        return;
    }
    public byte[] generateWrappedKey(org.spongycastle.operator.GenericKey) throws org.spongycastle.operator.OperatorException
    {
        org.spongycastle.operator.bc.BcSymmetricKeyWrapper r0;
        org.spongycastle.operator.GenericKey $r1;
        java.security.SecureRandom $r2;
        byte[] $r3;
        org.spongycastle.crypto.Wrapper $r4;
        org.spongycastle.crypto.params.KeyParameter $r5;
        int $i0;
        org.spongycastle.crypto.params.ParametersWithRandom $r6;

        r0 := @this: org.spongycastle.operator.bc.BcSymmetricKeyWrapper;

        $r1 := @parameter0: org.spongycastle.operator.GenericKey;

        $r3 = staticinvoke <org.spongycastle.operator.bc.OperatorUtils: byte[] getKeyBytes(org.spongycastle.operator.GenericKey)>($r1);

        $r2 = r0.<org.spongycastle.operator.bc.BcSymmetricKeyWrapper: java.security.SecureRandom random>;

        if $r2 != null goto label2;

        $r4 = r0.<org.spongycastle.operator.bc.BcSymmetricKeyWrapper: org.spongycastle.crypto.Wrapper wrapper>;

        $r5 = r0.<org.spongycastle.operator.bc.BcSymmetricKeyWrapper: org.spongycastle.crypto.params.KeyParameter wrappingKey>;

        interfaceinvoke $r4.<org.spongycastle.crypto.Wrapper: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, $r5);

     label1:
        $r4 = r0.<org.spongycastle.operator.bc.BcSymmetricKeyWrapper: org.spongycastle.crypto.Wrapper wrapper>;

        $i0 = lengthof $r3;

        $r3 = interfaceinvoke $r4.<org.spongycastle.crypto.Wrapper: byte[] wrap(byte[],int,int)>($r3, 0, $i0);

        return $r3;

     label2:
        $r4 = r0.<org.spongycastle.operator.bc.BcSymmetricKeyWrapper: org.spongycastle.crypto.Wrapper wrapper>;

        $r6 = new org.spongycastle.crypto.params.ParametersWithRandom;

        $r5 = r0.<org.spongycastle.operator.bc.BcSymmetricKeyWrapper: org.spongycastle.crypto.params.KeyParameter wrappingKey>;

        $r2 = r0.<org.spongycastle.operator.bc.BcSymmetricKeyWrapper: java.security.SecureRandom random>;

        specialinvoke $r6.<org.spongycastle.crypto.params.ParametersWithRandom: void <init>(org.spongycastle.crypto.CipherParameters,java.security.SecureRandom)>($r5, $r2);

        interfaceinvoke $r4.<org.spongycastle.crypto.Wrapper: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, $r6);

        goto label1;
    }
    public org.spongycastle.operator.bc.BcSymmetricKeyWrapper setSecureRandom(java.security.SecureRandom)
    {
        org.spongycastle.operator.bc.BcSymmetricKeyWrapper r0;
        java.security.SecureRandom $r1;

        r0 := @this: org.spongycastle.operator.bc.BcSymmetricKeyWrapper;

        $r1 := @parameter0: java.security.SecureRandom;

        r0.<org.spongycastle.operator.bc.BcSymmetricKeyWrapper: java.security.SecureRandom random> = $r1;

        return r0;
    }
