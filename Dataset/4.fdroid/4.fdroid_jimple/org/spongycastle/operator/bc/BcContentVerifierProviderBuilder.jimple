org.spongycastle.operator.bc.BcContentVerifierProviderBuilder extends java.lang.Object
protected org.spongycastle.operator.bc.BcDigestProvider digestProvider
    public void <init>()
    {
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder r0;
        org.spongycastle.operator.bc.BcDigestProvider $r1;

        r0 := @this: org.spongycastle.operator.bc.BcContentVerifierProviderBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.spongycastle.operator.bc.BcDefaultDigestProvider: org.spongycastle.operator.bc.BcDigestProvider INSTANCE>;

        r0.<org.spongycastle.operator.bc.BcContentVerifierProviderBuilder: org.spongycastle.operator.bc.BcDigestProvider digestProvider> = $r1;

        return;
    }
    static org.spongycastle.operator.bc.BcSignerOutputStream access$000(org.spongycastle.operator.bc.BcContentVerifierProviderBuilder, org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.crypto.params.AsymmetricKeyParameter) throws org.spongycastle.operator.OperatorCreationException
    {
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder $r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r2;
        org.spongycastle.operator.bc.BcSignerOutputStream $r3;

        $r0 := @parameter0: org.spongycastle.operator.bc.BcContentVerifierProviderBuilder;

        $r1 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter2: org.spongycastle.crypto.params.AsymmetricKeyParameter;

        $r3 = specialinvoke $r0.<org.spongycastle.operator.bc.BcContentVerifierProviderBuilder: org.spongycastle.operator.bc.BcSignerOutputStream createSignatureStream(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.crypto.params.AsymmetricKeyParameter)>($r1, $r2);

        return $r3;
    }
    private org.spongycastle.operator.bc.BcSignerOutputStream createSignatureStream(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.crypto.params.AsymmetricKeyParameter) throws org.spongycastle.operator.OperatorCreationException
    {
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r2;
        org.spongycastle.crypto.Signer $r3;
        org.spongycastle.operator.bc.BcSignerOutputStream $r4;

        r0 := @this: org.spongycastle.operator.bc.BcContentVerifierProviderBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: org.spongycastle.crypto.params.AsymmetricKeyParameter;

        $r3 = virtualinvoke r0.<org.spongycastle.operator.bc.BcContentVerifierProviderBuilder: org.spongycastle.crypto.Signer createSigner(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r1);

        interfaceinvoke $r3.<org.spongycastle.crypto.Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>(0, $r2);

        $r4 = new org.spongycastle.operator.bc.BcSignerOutputStream;

        specialinvoke $r4.<org.spongycastle.operator.bc.BcSignerOutputStream: void <init>(org.spongycastle.crypto.Signer)>($r3);

        return $r4;
    }
    public org.spongycastle.operator.ContentVerifierProvider build(org.spongycastle.cert.X509CertificateHolder) throws org.spongycastle.operator.OperatorCreationException
    {
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder r0;
        org.spongycastle.cert.X509CertificateHolder $r1;
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$1 $r2;

        r0 := @this: org.spongycastle.operator.bc.BcContentVerifierProviderBuilder;

        $r1 := @parameter0: org.spongycastle.cert.X509CertificateHolder;

        $r2 = new org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$1;

        specialinvoke $r2.<org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$1: void <init>(org.spongycastle.operator.bc.BcContentVerifierProviderBuilder,org.spongycastle.cert.X509CertificateHolder)>(r0, $r1);

        return $r2;
    }
    public org.spongycastle.operator.ContentVerifierProvider build(org.spongycastle.crypto.params.AsymmetricKeyParameter) throws org.spongycastle.operator.OperatorCreationException
    {
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder r0;
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r1;
        org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2 $r2;

        r0 := @this: org.spongycastle.operator.bc.BcContentVerifierProviderBuilder;

        $r1 := @parameter0: org.spongycastle.crypto.params.AsymmetricKeyParameter;

        $r2 = new org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2;

        specialinvoke $r2.<org.spongycastle.operator.bc.BcContentVerifierProviderBuilder$2: void <init>(org.spongycastle.operator.bc.BcContentVerifierProviderBuilder,org.spongycastle.crypto.params.AsymmetricKeyParameter)>(r0, $r1);

        return $r2;
    }
protected abstract org.spongycastle.crypto.Signer createSigner(org.spongycastle.asn1.x509.AlgorithmIdentifier) throws org.spongycastle.operator.OperatorCreationException { 
// no body
} 
protected abstract org.spongycastle.crypto.params.AsymmetricKeyParameter extractKeyParameters(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) throws java.io.IOException { 
// no body
} 
