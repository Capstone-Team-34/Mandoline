org.spongycastle.operator.bc.BcRSAAsymmetricKeyUnwrapper extends org.spongycastle.operator.bc.BcAsymmetricKeyUnwrapper
    public void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.crypto.params.AsymmetricKeyParameter)
    {
        org.spongycastle.operator.bc.BcRSAAsymmetricKeyUnwrapper r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r2;

        r0 := @this: org.spongycastle.operator.bc.BcRSAAsymmetricKeyUnwrapper;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: org.spongycastle.crypto.params.AsymmetricKeyParameter;

        specialinvoke r0.<org.spongycastle.operator.bc.BcAsymmetricKeyUnwrapper: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.crypto.params.AsymmetricKeyParameter)>($r1, $r2);

        return;
    }
    protected org.spongycastle.crypto.AsymmetricBlockCipher createAsymmetricUnwrapper(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.operator.bc.BcRSAAsymmetricKeyUnwrapper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.crypto.encodings.PKCS1Encoding $r2;
        org.spongycastle.crypto.engines.RSAEngine $r3;

        r0 := @this: org.spongycastle.operator.bc.BcRSAAsymmetricKeyUnwrapper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = new org.spongycastle.crypto.encodings.PKCS1Encoding;

        $r3 = new org.spongycastle.crypto.engines.RSAEngine;

        specialinvoke $r3.<org.spongycastle.crypto.engines.RSAEngine: void <init>()>();

        specialinvoke $r2.<org.spongycastle.crypto.encodings.PKCS1Encoding: void <init>(org.spongycastle.crypto.AsymmetricBlockCipher)>($r3);

        return $r2;
    }
