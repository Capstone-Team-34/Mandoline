org.spongycastle.util.encoders.UrlBase64 extends java.lang.Object
private static final org.spongycastle.util.encoders.Encoder encoder
    static void <clinit>()
    {
        org.spongycastle.util.encoders.UrlBase64Encoder $r0;

        $r0 = new org.spongycastle.util.encoders.UrlBase64Encoder;

        specialinvoke $r0.<org.spongycastle.util.encoders.UrlBase64Encoder: void <init>()>();

        <org.spongycastle.util.encoders.UrlBase64: org.spongycastle.util.encoders.Encoder encoder> = $r0;

        return;
    }
    public void <init>()
    {
        org.spongycastle.util.encoders.UrlBase64 r0;

        r0 := @this: org.spongycastle.util.encoders.UrlBase64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static int decode(java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        java.lang.String $r0;
        java.io.OutputStream $r1;
        int $i0;
        org.spongycastle.util.encoders.Encoder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = <org.spongycastle.util.encoders.UrlBase64: org.spongycastle.util.encoders.Encoder encoder>;

        $i0 = interfaceinvoke $r2.<org.spongycastle.util.encoders.Encoder: int decode(java.lang.String,java.io.OutputStream)>($r0, $r1);

        return $i0;
    }
    public static int decode(byte[], java.io.OutputStream) throws java.io.IOException
    {
        byte[] $r0;
        java.io.OutputStream $r1;
        int $i0;
        org.spongycastle.util.encoders.Encoder $r2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = <org.spongycastle.util.encoders.UrlBase64: org.spongycastle.util.encoders.Encoder encoder>;

        $i0 = lengthof $r0;

        $i0 = interfaceinvoke $r2.<org.spongycastle.util.encoders.Encoder: int decode(byte[],int,int,java.io.OutputStream)>($r0, 0, $i0, $r1);

        return $i0;
    }
    public static byte[] decode(java.lang.String)
    {
        java.lang.String $r0;
        java.io.ByteArrayOutputStream r1;
        java.lang.Exception r2;
        org.spongycastle.util.encoders.Encoder $r3;
        byte[] $r4;
        org.spongycastle.util.encoders.DecoderException $r5;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = <org.spongycastle.util.encoders.UrlBase64: org.spongycastle.util.encoders.Encoder encoder>;

     label1:
        interfaceinvoke $r3.<org.spongycastle.util.encoders.Encoder: int decode(java.lang.String,java.io.OutputStream)>($r0, r1);

     label2:
        $r4 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;

     label3:
        r2 := @caughtexception;

        $r5 = new org.spongycastle.util.encoders.DecoderException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception decoding URL safe base64 string: ");

        $r0 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.spongycastle.util.encoders.DecoderException: void <init>(java.lang.String,java.lang.Throwable)>($r0, r2);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public static byte[] decode(byte[])
    {
        byte[] $r0;
        java.io.ByteArrayOutputStream r1;
        java.lang.Exception r2;
        org.spongycastle.util.encoders.Encoder $r3;
        int $i0;
        org.spongycastle.util.encoders.DecoderException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @parameter0: byte[];

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = <org.spongycastle.util.encoders.UrlBase64: org.spongycastle.util.encoders.Encoder encoder>;

     label1:
        $i0 = lengthof $r0;

        interfaceinvoke $r3.<org.spongycastle.util.encoders.Encoder: int decode(byte[],int,int,java.io.OutputStream)>($r0, 0, $i0, r1);

     label2:
        $r0 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;

     label3:
        r2 := @caughtexception;

        $r4 = new org.spongycastle.util.encoders.DecoderException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception decoding URL safe base64 string: ");

        $r6 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.util.encoders.DecoderException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r2);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public static int encode(byte[], java.io.OutputStream) throws java.io.IOException
    {
        byte[] $r0;
        java.io.OutputStream $r1;
        int $i0;
        org.spongycastle.util.encoders.Encoder $r2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = <org.spongycastle.util.encoders.UrlBase64: org.spongycastle.util.encoders.Encoder encoder>;

        $i0 = lengthof $r0;

        $i0 = interfaceinvoke $r2.<org.spongycastle.util.encoders.Encoder: int encode(byte[],int,int,java.io.OutputStream)>($r0, 0, $i0, $r1);

        return $i0;
    }
    public static byte[] encode(byte[])
    {
        byte[] $r0;
        java.io.ByteArrayOutputStream r1;
        java.lang.Exception r2;
        org.spongycastle.util.encoders.Encoder $r3;
        int $i0;
        org.spongycastle.util.encoders.EncoderException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @parameter0: byte[];

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = <org.spongycastle.util.encoders.UrlBase64: org.spongycastle.util.encoders.Encoder encoder>;

     label1:
        $i0 = lengthof $r0;

        interfaceinvoke $r3.<org.spongycastle.util.encoders.Encoder: int encode(byte[],int,int,java.io.OutputStream)>($r0, 0, $i0, r1);

     label2:
        $r0 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;

     label3:
        r2 := @caughtexception;

        $r4 = new org.spongycastle.util.encoders.EncoderException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception encoding URL safe base64 data: ");

        $r6 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.util.encoders.EncoderException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r2);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }
