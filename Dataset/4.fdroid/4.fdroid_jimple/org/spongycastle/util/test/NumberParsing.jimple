org.spongycastle.util.test.NumberParsing extends java.lang.Object
    private void <init>()
    {
        org.spongycastle.util.test.NumberParsing r0;

        r0 := @this: org.spongycastle.util.test.NumberParsing;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static int decodeIntFromHex(java.lang.String)
    {
        java.lang.String $r0;
        char $c0;
        int $i1;

        $r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(1);

        if $c0 == 120 goto label1;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(1);

        if $c0 != 88 goto label2;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(2);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r0, 16);

        return $i1;

     label2:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r0, 16);

        return $i1;
    }
    public static long decodeLongFromHex(java.lang.String)
    {
        java.lang.String $r0;
        char $c0;
        long $l1;

        $r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(1);

        if $c0 == 120 goto label1;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(1);

        if $c0 != 88 goto label2;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(2);

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r0, 16);

        return $l1;

     label2:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r0, 16);

        return $l1;
    }
