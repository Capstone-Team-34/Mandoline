org.spongycastle.util.io.pem.PemWriter extends java.io.BufferedWriter
private static final int LINE_LENGTH
private char[] buf
private final int nlLength
    public void <init>(java.io.Writer)
    {
        org.spongycastle.util.io.pem.PemWriter r0;
        java.io.Writer $r1;
        char[] $r2;
        java.lang.String $r3;
        int $i0;

        r0 := @this: org.spongycastle.util.io.pem.PemWriter;

        $r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r1);

        $r2 = newarray (char)[64];

        r0.<org.spongycastle.util.io.pem.PemWriter: char[] buf> = $r2;

        $r3 = staticinvoke <org.spongycastle.util.Strings: java.lang.String lineSeparator()>();

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        r0.<org.spongycastle.util.io.pem.PemWriter: int nlLength> = $i0;

        return;

     label1:
        r0.<org.spongycastle.util.io.pem.PemWriter: int nlLength> = 2;

        return;
    }
    private void writeEncoded(byte[]) throws java.io.IOException
    {
        org.spongycastle.util.io.pem.PemWriter r0;
        byte[] $r1;
        int i0, $i1, $i2, $i3;
        char[] $r2;
        byte $b4;
        char $c5;

        r0 := @this: org.spongycastle.util.io.pem.PemWriter;

        $r1 := @parameter0: byte[];

        $r1 = staticinvoke <org.spongycastle.util.encoders.Base64: byte[] encode(byte[])>($r1);

        i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if i0 >= $i1 goto label5;

        $i1 = 0;

     label2:
        $r2 = r0.<org.spongycastle.util.io.pem.PemWriter: char[] buf>;

        $i2 = lengthof $r2;

        if $i1 == $i2 goto label3;

        $i2 = i0 + $i1;

        $i3 = lengthof $r1;

        if $i2 < $i3 goto label4;

     label3:
        $r2 = r0.<org.spongycastle.util.io.pem.PemWriter: char[] buf>;

        virtualinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void write(char[],int,int)>($r2, 0, $i1);

        virtualinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void newLine()>();

        $r2 = r0.<org.spongycastle.util.io.pem.PemWriter: char[] buf>;

        $i1 = lengthof $r2;

        i0 = i0 + $i1;

        goto label1;

     label4:
        $r2 = r0.<org.spongycastle.util.io.pem.PemWriter: char[] buf>;

        $i2 = i0 + $i1;

        $b4 = $r1[$i2];

        $c5 = (char) $b4;

        $r2[$i1] = $c5;

        $i1 = $i1 + 1;

        goto label2;

     label5:
        return;
    }
    private void writePostEncapsulationBoundary(java.lang.String) throws java.io.IOException
    {
        org.spongycastle.util.io.pem.PemWriter r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        r0 := @this: org.spongycastle.util.io.pem.PemWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-----END ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-----");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void write(java.lang.String)>($r1);

        virtualinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void newLine()>();

        return;
    }
    private void writePreEncapsulationBoundary(java.lang.String) throws java.io.IOException
    {
        org.spongycastle.util.io.pem.PemWriter r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        r0 := @this: org.spongycastle.util.io.pem.PemWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-----BEGIN ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-----");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void write(java.lang.String)>($r1);

        virtualinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void newLine()>();

        return;
    }
    public int getOutputSize(org.spongycastle.util.io.pem.PemObject)
    {
        org.spongycastle.util.io.pem.PemWriter r0;
        org.spongycastle.util.io.pem.PemObject $r1;
        int i0, $i1, $i2, $i3;
        java.lang.String $r2;
        java.util.List $r3;
        boolean $z0;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        org.spongycastle.util.io.pem.PemHeader r6;
        byte[] $r7;

        r0 := @this: org.spongycastle.util.io.pem.PemWriter;

        $r1 := @parameter0: org.spongycastle.util.io.pem.PemObject;

        $r2 = virtualinvoke $r1.<org.spongycastle.util.io.pem.PemObject: java.lang.String getType()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = $i1 + 10;

        i0 = r0.<org.spongycastle.util.io.pem.PemWriter: int nlLength>;

        $i1 = $i1 + i0;

        $i1 = $i1 * 2;

        $i1 = $i1 + 6;

        $i1 = $i1 + 4;

        $r3 = virtualinvoke $r1.<org.spongycastle.util.io.pem.PemObject: java.util.List getHeaders()>();

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke $r1.<org.spongycastle.util.io.pem.PemObject: java.util.List getHeaders()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.spongycastle.util.io.pem.PemHeader) $r5;

        $r2 = virtualinvoke r6.<org.spongycastle.util.io.pem.PemHeader: java.lang.String getName()>();

        i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r2 = ": ";

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        i0 = i0 + $i2;

        $r2 = virtualinvoke r6.<org.spongycastle.util.io.pem.PemHeader: java.lang.String getValue()>();

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        i0 = i0 + $i2;

        $i2 = r0.<org.spongycastle.util.io.pem.PemWriter: int nlLength>;

        i0 = i0 + $i2;

        $i1 = $i1 + i0;

        goto label1;

     label2:
        i0 = r0.<org.spongycastle.util.io.pem.PemWriter: int nlLength>;

        $i1 = $i1 + i0;

     label3:
        $r7 = virtualinvoke $r1.<org.spongycastle.util.io.pem.PemObject: byte[] getContent()>();

        i0 = lengthof $r7;

        i0 = i0 + 2;

        i0 = i0 / 3;

        i0 = i0 * 4;

        $i2 = i0 + 64;

        $i2 = $i2 + -1;

        $i2 = $i2 / 64;

        $i3 = r0.<org.spongycastle.util.io.pem.PemWriter: int nlLength>;

        $i2 = $i2 * $i3;

        i0 = $i2 + i0;

        $i1 = $i1 + i0;

        return $i1;
    }
    public void writeObject(org.spongycastle.util.io.pem.PemObjectGenerator) throws java.io.IOException
    {
        org.spongycastle.util.io.pem.PemWriter r0;
        org.spongycastle.util.io.pem.PemObjectGenerator $r1;
        org.spongycastle.util.io.pem.PemObject $r2;
        java.lang.String $r3;
        java.util.List $r4;
        boolean $z0;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        org.spongycastle.util.io.pem.PemHeader r7;
        byte[] $r8;

        r0 := @this: org.spongycastle.util.io.pem.PemWriter;

        $r1 := @parameter0: org.spongycastle.util.io.pem.PemObjectGenerator;

        $r2 = interfaceinvoke $r1.<org.spongycastle.util.io.pem.PemObjectGenerator: org.spongycastle.util.io.pem.PemObject generate()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.util.io.pem.PemObject: java.lang.String getType()>();

        specialinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void writePreEncapsulationBoundary(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<org.spongycastle.util.io.pem.PemObject: java.util.List getHeaders()>();

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r4 = virtualinvoke $r2.<org.spongycastle.util.io.pem.PemObject: java.util.List getHeaders()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.spongycastle.util.io.pem.PemHeader) $r6;

        $r3 = virtualinvoke r7.<org.spongycastle.util.io.pem.PemHeader: java.lang.String getName()>();

        virtualinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void write(java.lang.String)>($r3);

        virtualinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void write(java.lang.String)>(": ");

        $r3 = virtualinvoke r7.<org.spongycastle.util.io.pem.PemHeader: java.lang.String getValue()>();

        virtualinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void write(java.lang.String)>($r3);

        virtualinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void newLine()>();

        goto label1;

     label2:
        virtualinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void newLine()>();

     label3:
        $r8 = virtualinvoke $r2.<org.spongycastle.util.io.pem.PemObject: byte[] getContent()>();

        specialinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void writeEncoded(byte[])>($r8);

        $r3 = virtualinvoke $r2.<org.spongycastle.util.io.pem.PemObject: java.lang.String getType()>();

        specialinvoke r0.<org.spongycastle.util.io.pem.PemWriter: void writePostEncapsulationBoundary(java.lang.String)>($r3);

        return;
    }
