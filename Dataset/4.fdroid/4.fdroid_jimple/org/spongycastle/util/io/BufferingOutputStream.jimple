org.spongycastle.util.io.BufferingOutputStream extends java.io.OutputStream
private final byte[] buf
private int bufOff
private final java.io.OutputStream other
    public void <init>(java.io.OutputStream)
    {
        org.spongycastle.util.io.BufferingOutputStream r0;
        java.io.OutputStream $r1;
        byte[] $r2;

        r0 := @this: org.spongycastle.util.io.BufferingOutputStream;

        $r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.spongycastle.util.io.BufferingOutputStream: java.io.OutputStream other> = $r1;

        $r2 = newarray (byte)[4096];

        r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf> = $r2;

        return;
    }
    public void <init>(java.io.OutputStream, int)
    {
        org.spongycastle.util.io.BufferingOutputStream r0;
        java.io.OutputStream $r1;
        int $i0;
        byte[] $r2;

        r0 := @this: org.spongycastle.util.io.BufferingOutputStream;

        $r1 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.spongycastle.util.io.BufferingOutputStream: java.io.OutputStream other> = $r1;

        $r2 = newarray (byte)[$i0];

        r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf> = $r2;

        return;
    }
    public void close() throws java.io.IOException
    {
        org.spongycastle.util.io.BufferingOutputStream r0;
        java.io.OutputStream $r1;

        r0 := @this: org.spongycastle.util.io.BufferingOutputStream;

        virtualinvoke r0.<org.spongycastle.util.io.BufferingOutputStream: void flush()>();

        $r1 = r0.<org.spongycastle.util.io.BufferingOutputStream: java.io.OutputStream other>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }
    public void flush() throws java.io.IOException
    {
        org.spongycastle.util.io.BufferingOutputStream r0;
        byte[] $r1;
        int $i0;
        java.io.OutputStream $r2;

        r0 := @this: org.spongycastle.util.io.BufferingOutputStream;

        $r2 = r0.<org.spongycastle.util.io.BufferingOutputStream: java.io.OutputStream other>;

        $r1 = r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf>;

        $i0 = r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff> = 0;

        $r1 = r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf>;

        staticinvoke <org.spongycastle.util.Arrays: void fill(byte[],byte)>($r1, 0);

        return;
    }
    public void write(int) throws java.io.IOException
    {
        org.spongycastle.util.io.BufferingOutputStream r0;
        int $i0, $i1, $i2;
        byte[] $r1;
        byte $b3;

        r0 := @this: org.spongycastle.util.io.BufferingOutputStream;

        $i0 := @parameter0: int;

        $r1 = r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf>;

        $i1 = r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff>;

        $i2 = $i1 + 1;

        r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff> = $i2;

        $b3 = (byte) $i0;

        $r1[$i1] = $b3;

        $i0 = r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff>;

        $r1 = r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf>;

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label1;

        virtualinvoke r0.<org.spongycastle.util.io.BufferingOutputStream: void flush()>();

     label1:
        return;
    }
    public void write(byte[], int, int) throws java.io.IOException
    {
        org.spongycastle.util.io.BufferingOutputStream r0;
        byte[] $r1, $r2;
        int i0, $i1, $i2, $i3;
        java.io.OutputStream $r3;

        r0 := @this: org.spongycastle.util.io.BufferingOutputStream;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r2 = r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf>;

        i0 = lengthof $r2;

        $i3 = r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff>;

        i0 = i0 - $i3;

        if $i2 >= i0 goto label1;

        $r2 = r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf>;

        i0 = r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, i0, $i2);

        $i1 = r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff>;

        $i1 = $i1 + $i2;

        r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff> = $i1;

        return;

     label1:
        $r2 = r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf>;

        i0 = lengthof $r2;

        $i3 = r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff>;

        i0 = i0 - $i3;

        $r2 = r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf>;

        $i3 = r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, $i3, i0);

        $i3 = r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff>;

        $i3 = $i3 + i0;

        r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff> = $i3;

        virtualinvoke r0.<org.spongycastle.util.io.BufferingOutputStream: void flush()>();

        $i1 = $i1 + i0;

        $i2 = $i2 - i0;

     label2:
        $r2 = r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf>;

        i0 = lengthof $r2;

        if $i2 < i0 goto label3;

        $r3 = r0.<org.spongycastle.util.io.BufferingOutputStream: java.io.OutputStream other>;

        $r2 = r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf>;

        i0 = lengthof $r2;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i1, i0);

        $r2 = r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf>;

        i0 = lengthof $r2;

        $i1 = $i1 + i0;

        $r2 = r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf>;

        i0 = lengthof $r2;

        $i2 = $i2 - i0;

        goto label2;

     label3:
        if $i2 <= 0 goto label4;

        $r2 = r0.<org.spongycastle.util.io.BufferingOutputStream: byte[] buf>;

        i0 = r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r2, i0, $i2);

        $i1 = r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff>;

        $i1 = $i1 + $i2;

        r0.<org.spongycastle.util.io.BufferingOutputStream: int bufOff> = $i1;

     label4:
        return;
    }
