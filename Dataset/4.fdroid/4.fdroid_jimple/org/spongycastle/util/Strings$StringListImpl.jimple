org.spongycastle.util.Strings$StringListImpl extends java.util.ArrayList implements org.spongycastle.util.StringList
    private void <init>()
    {
        org.spongycastle.util.Strings$StringListImpl r0;

        r0 := @this: org.spongycastle.util.Strings$StringListImpl;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        return;
    }
    void <init>(org.spongycastle.util.Strings$1)
    {
        org.spongycastle.util.Strings$StringListImpl r0;
        org.spongycastle.util.Strings$1 $r1;

        r0 := @this: org.spongycastle.util.Strings$StringListImpl;

        $r1 := @parameter0: org.spongycastle.util.Strings$1;

        specialinvoke r0.<org.spongycastle.util.Strings$StringListImpl: void <init>()>();

        return;
    }
    public volatile void add(int, java.lang.Object)
    {
        org.spongycastle.util.Strings$StringListImpl r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: org.spongycastle.util.Strings$StringListImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = (java.lang.String) $r1;

        virtualinvoke r0.<org.spongycastle.util.Strings$StringListImpl: void add(int,java.lang.String)>($i0, $r2);

        return;
    }
    public void add(int, java.lang.String)
    {
        org.spongycastle.util.Strings$StringListImpl r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.spongycastle.util.Strings$StringListImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.util.ArrayList: void add(int,java.lang.Object)>($i0, $r1);

        return;
    }
    public volatile boolean add(java.lang.Object)
    {
        org.spongycastle.util.Strings$StringListImpl r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: org.spongycastle.util.Strings$StringListImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) $r1;

        $z0 = virtualinvoke r0.<org.spongycastle.util.Strings$StringListImpl: boolean add(java.lang.String)>($r2);

        return $z0;
    }
    public boolean add(java.lang.String)
    {
        org.spongycastle.util.Strings$StringListImpl r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.spongycastle.util.Strings$StringListImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return $z0;
    }
    public volatile java.lang.String get(int)
    {
        org.spongycastle.util.Strings$StringListImpl r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: org.spongycastle.util.Strings$StringListImpl;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r2 = (java.lang.String) $r1;

        return $r2;
    }
    public volatile java.lang.Object set(int, java.lang.Object)
    {
        org.spongycastle.util.Strings$StringListImpl r0;
        int $i0;
        java.lang.String $r1;
        java.lang.Object $r2;

        r0 := @this: org.spongycastle.util.Strings$StringListImpl;

        $i0 := @parameter0: int;

        $r2 := @parameter1: java.lang.Object;

        $r1 = (java.lang.String) $r2;

        $r1 = virtualinvoke r0.<org.spongycastle.util.Strings$StringListImpl: java.lang.String set(int,java.lang.String)>($i0, $r1);

        return $r1;
    }
    public java.lang.String set(int, java.lang.String)
    {
        org.spongycastle.util.Strings$StringListImpl r0;
        int $i0;
        java.lang.String $r1;
        java.lang.Object $r2;

        r0 := @this: org.spongycastle.util.Strings$StringListImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i0, $r1);

        $r1 = (java.lang.String) $r2;

        return $r1;
    }
    public java.lang.String[] toStringArray()
    {
        org.spongycastle.util.Strings$StringListImpl r0;
        java.lang.String[] r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: org.spongycastle.util.Strings$StringListImpl;

        $i0 = virtualinvoke r0.<org.spongycastle.util.Strings$StringListImpl: int size()>();

        r1 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 == $i1 goto label2;

        $r2 = virtualinvoke r0.<org.spongycastle.util.Strings$StringListImpl: java.lang.Object get(int)>($i0);

        $r3 = (java.lang.String) $r2;

        r1[$i0] = $r3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public java.lang.String[] toStringArray(int, int)
    {
        org.spongycastle.util.Strings$StringListImpl r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String[] r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: org.spongycastle.util.Strings$StringListImpl;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 = $i1 - $i0;

        r1 = newarray (java.lang.String)[$i3];

        $i3 = $i0;

     label1:
        $i2 = virtualinvoke r0.<org.spongycastle.util.Strings$StringListImpl: int size()>();

        if $i3 == $i2 goto label2;

        if $i3 == $i1 goto label2;

        $i2 = $i3 - $i0;

        $r2 = virtualinvoke r0.<org.spongycastle.util.Strings$StringListImpl: java.lang.Object get(int)>($i3);

        $r3 = (java.lang.String) $r2;

        r1[$i2] = $r3;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        return r1;
    }
