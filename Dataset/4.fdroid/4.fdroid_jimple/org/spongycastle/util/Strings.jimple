org.spongycastle.util.Strings extends java.lang.Object
private static java.lang.String LINE_SEPARATOR
    static void <clinit>()
    {
        java.lang.Exception r0, r1;
        org.spongycastle.util.Strings$1 $r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        java.lang.Object[] $r5;

        $r2 = new org.spongycastle.util.Strings$1;

     label1:
        specialinvoke $r2.<org.spongycastle.util.Strings$1: void <init>()>();

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2);

        $r4 = (java.lang.String) $r3;

     label2:
        <org.spongycastle.util.Strings: java.lang.String LINE_SEPARATOR> = $r4;

        return;

     label3:
        r0 := @caughtexception;

     label4:
        $r5 = newarray (java.lang.Object)[0];

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%n", $r5);

     label5:
        <org.spongycastle.util.Strings: java.lang.String LINE_SEPARATOR> = $r4;

        return;

     label6:
        r1 := @caughtexception;

        <org.spongycastle.util.Strings: java.lang.String LINE_SEPARATOR> = "\n";

        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }
    public void <init>()
    {
        org.spongycastle.util.Strings r0;

        r0 := @this: org.spongycastle.util.Strings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static char[] asCharArray(byte[])
    {
        byte[] $r0;
        char[] r1;
        int $i0, $i1;
        byte $b2;
        char $c3;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        r1 = newarray (char)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 == $i1 goto label2;

        $b2 = $r0[$i0];

        $i1 = $b2 & 255;

        $c3 = (char) $i1;

        r1[$i0] = $c3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public static java.lang.String fromByteArray(byte[])
    {
        byte[] $r0;
        java.lang.String $r1;
        char[] $r2;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.String;

        $r2 = staticinvoke <org.spongycastle.util.Strings: char[] asCharArray(byte[])>($r0);

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r2);

        return $r1;
    }
    public static java.lang.String fromUTF8ByteArray(byte[])
    {
        byte[] $r0;
        int i0, i2, i3, $i5;
        char c1;
        char[] r1;
        byte $b4;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        i2 = 0;

        i3 = 0;

     label01:
        i0 = lengthof $r0;

        if i2 >= i0 goto label05;

        i3 = i3 + 1;

        $b4 = $r0[i2];

        i0 = $b4 & 240;

        if i0 != 240 goto label02;

        i3 = i3 + 1;

        i2 = i2 + 4;

        goto label01;

     label02:
        $b4 = $r0[i2];

        i0 = $b4 & 224;

        if i0 != 224 goto label03;

        i2 = i2 + 3;

        goto label01;

     label03:
        $b4 = $r0[i2];

        i0 = $b4 & 192;

        if i0 != 192 goto label04;

        i2 = i2 + 2;

        goto label01;

     label04:
        i2 = i2 + 1;

        goto label01;

     label05:
        r1 = newarray (char)[i3];

        i2 = 0;

        i3 = 0;

     label06:
        i0 = lengthof $r0;

        if i2 >= i0 goto label12;

        $b4 = $r0[i2];

        i0 = $b4 & 240;

        if i0 != 240 goto label08;

        $b4 = $r0[i2];

        i0 = $b4 & 3;

        i0 = i0 << 18;

        $i5 = i2 + 1;

        $b4 = $r0[$i5];

        $i5 = $b4 & 63;

        $i5 = $i5 << 12;

        i0 = i0 | $i5;

        $i5 = i2 + 2;

        $b4 = $r0[$i5];

        $i5 = $b4 & 63;

        $i5 = $i5 << 6;

        i0 = i0 | $i5;

        $i5 = i2 + 3;

        $b4 = $r0[$i5];

        $i5 = $b4 & 63;

        i0 = i0 | $i5;

        i0 = i0 - 65536;

        $i5 = i0 >> 10;

        $i5 = 55296 | $i5;

        c1 = (char) $i5;

        i0 = i0 & 1023;

        i0 = 56320 | i0;

        r1[i3] = c1;

        c1 = (char) i0;

        i2 = i2 + 4;

        i3 = i3 + 1;

     label07:
        r1[i3] = c1;

        i3 = i3 + 1;

        goto label06;

     label08:
        $b4 = $r0[i2];

        i0 = $b4 & 224;

        if i0 != 224 goto label09;

        $b4 = $r0[i2];

        i0 = $b4 & 15;

        i0 = i0 << 12;

        $i5 = i2 + 1;

        $b4 = $r0[$i5];

        $i5 = $b4 & 63;

        $i5 = $i5 << 6;

        i0 = i0 | $i5;

        $i5 = i2 + 2;

        $b4 = $r0[$i5];

        $i5 = $b4 & 63;

        i0 = i0 | $i5;

        c1 = (char) i0;

        i2 = i2 + 3;

        goto label07;

     label09:
        $b4 = $r0[i2];

        i0 = $b4 & 208;

        if i0 != 208 goto label10;

        $b4 = $r0[i2];

        i0 = $b4 & 31;

        i0 = i0 << 6;

        $i5 = i2 + 1;

        $b4 = $r0[$i5];

        $i5 = $b4 & 63;

        i0 = i0 | $i5;

        c1 = (char) i0;

        i2 = i2 + 2;

        goto label07;

     label10:
        $b4 = $r0[i2];

        i0 = $b4 & 192;

        if i0 != 192 goto label11;

        $b4 = $r0[i2];

        i0 = $b4 & 31;

        i0 = i0 << 6;

        $i5 = i2 + 1;

        $b4 = $r0[$i5];

        $i5 = $b4 & 63;

        i0 = i0 | $i5;

        c1 = (char) i0;

        i2 = i2 + 2;

        goto label07;

     label11:
        $b4 = $r0[i2];

        i0 = $b4 & 255;

        c1 = (char) i0;

        i2 = i2 + 1;

        goto label07;

     label12:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }
    public static java.lang.String lineSeparator()
    {
        java.lang.String r0;

        r0 = <org.spongycastle.util.Strings: java.lang.String LINE_SEPARATOR>;

        return r0;
    }
    public static org.spongycastle.util.StringList newList()
    {
        org.spongycastle.util.Strings$StringListImpl $r0;

        $r0 = new org.spongycastle.util.Strings$StringListImpl;

        specialinvoke $r0.<org.spongycastle.util.Strings$StringListImpl: void <init>(org.spongycastle.util.Strings$1)>(null);

        return $r0;
    }
    public static java.lang.String[] split(java.lang.String, char)
    {
        char $c0;
        java.lang.String[] r0;
        java.util.Vector r1;
        java.lang.String $r2, $r3;
        boolean z0;
        int $i1, $i2;
        java.lang.Object $r4;

        $r2 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        r1 = new java.util.Vector;

        specialinvoke r1.<java.util.Vector: void <init>()>();

        z0 = 1;

     label1:
        if z0 == 0 goto label3;

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c0);

        if $i1 <= 0 goto label2;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i1);

        goto label1;

     label2:
        z0 = 0;

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        goto label1;

     label3:
        $i1 = virtualinvoke r1.<java.util.Vector: int size()>();

        r0 = newarray (java.lang.String)[$i1];

        $i1 = 0;

     label4:
        $i2 = lengthof r0;

        if $i1 == $i2 goto label5;

        $r4 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r2 = (java.lang.String) $r4;

        r0[$i1] = $r2;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return r0;
    }
    public static int toByteArray(java.lang.String, byte[], int)
    {
        java.lang.String $r0;
        byte[] $r1;
        int $i0, $i1, $i3, i4;
        byte $b2;
        char $c5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        i4 = 0;

     label1:
        if i4 >= $i3 goto label2;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i4);

        $i1 = $i0 + i4;

        $b2 = (byte) $c5;

        $r1[$i1] = $b2;

        i4 = i4 + 1;

        goto label1;

     label2:
        return $i3;
    }
    public static byte[] toByteArray(java.lang.String)
    {
        java.lang.String $r0;
        byte[] r1;
        int $i0, $i1;
        char $c2;
        byte $b3;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        r1 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 == $i1 goto label2;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $b3 = (byte) $c2;

        r1[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public static byte[] toByteArray(char[])
    {
        char[] $r0;
        byte[] r1;
        int $i0, $i1;
        char $c2;
        byte $b3;

        $r0 := @parameter0: char[];

        $i0 = lengthof $r0;

        r1 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 == $i1 goto label2;

        $c2 = $r0[$i0];

        $b3 = (byte) $c2;

        r1[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public static java.lang.String toLowerCase(java.lang.String)
    {
        char c0;
        char[] $r0;
        java.lang.String $r1;
        boolean z0;
        int i1, $i2;

        $r1 := @parameter0: java.lang.String;

        z0 = 0;

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if i1 == $i2 goto label3;

        c0 = $r0[i1];

        if 65 > c0 goto label2;

        if 90 < c0 goto label2;

        z0 = 1;

        $i2 = c0 + -65;

        $i2 = $i2 + 97;

        c0 = (char) $i2;

        $r0[i1] = c0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r0);

     label4:
        return $r1;
    }
    public static void toUTF8ByteArray(char[], java.io.OutputStream) throws java.io.IOException
    {
        char[] $r0;
        java.io.OutputStream $r1;
        int i0, i1, $i3;
        char c2, c4;
        java.lang.IllegalStateException $r2;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.io.OutputStream;

        i1 = 0;

     label1:
        i0 = lengthof $r0;

        if i1 >= i0 goto label8;

        c2 = $r0[i1];

        if c2 >= 128 goto label3;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(c2);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if c2 >= 2048 goto label4;

        i0 = c2 >> 6;

        i0 = i0 | 192;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        i0 = c2 & 63;

        i0 = i0 | 128;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        goto label2;

     label4:
        if c2 < 55296 goto label7;

        if c2 > 57343 goto label7;

        i0 = i1 + 1;

        $i3 = lengthof $r0;

        if i0 < $i3 goto label5;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("invalid UTF-16 codepoint");

        throw $r2;

     label5:
        i1 = i1 + 1;

        c4 = $r0[i1];

        if c2 <= 56319 goto label6;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("invalid UTF-16 codepoint");

        throw $r2;

     label6:
        i0 = c2 & 1023;

        i0 = i0 << 10;

        $i3 = c4 & 1023;

        i0 = i0 | $i3;

        i0 = i0 + 65536;

        $i3 = i0 >> 18;

        $i3 = $i3 | 240;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i3);

        $i3 = i0 >> 12;

        $i3 = $i3 & 63;

        $i3 = $i3 | 128;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i3);

        $i3 = i0 >> 6;

        $i3 = $i3 & 63;

        $i3 = $i3 | 128;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i3);

        i0 = i0 & 63;

        i0 = i0 | 128;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        goto label2;

     label7:
        i0 = c2 >> 12;

        i0 = i0 | 224;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        i0 = c2 >> 6;

        i0 = i0 & 63;

        i0 = i0 | 128;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        i0 = c2 & 63;

        i0 = i0 | 128;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        goto label2;

     label8:
        return;
    }
    public static byte[] toUTF8ByteArray(java.lang.String)
    {
        java.lang.String $r0;
        char[] $r1;
        byte[] $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $r2 = staticinvoke <org.spongycastle.util.Strings: byte[] toUTF8ByteArray(char[])>($r1);

        return $r2;
    }
    public static byte[] toUTF8ByteArray(char[])
    {
        char[] $r0;
        java.io.ByteArrayOutputStream r1;
        java.io.IOException r2;
        byte[] $r3;
        java.lang.IllegalStateException $r4;

        $r0 := @parameter0: char[];

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        staticinvoke <org.spongycastle.util.Strings: void toUTF8ByteArray(char[],java.io.OutputStream)>($r0, r1);

     label2:
        $r3 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;

     label3:
        r2 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot encode string to byte array!");

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public static java.lang.String toUpperCase(java.lang.String)
    {
        char c0;
        char[] $r0;
        java.lang.String $r1;
        boolean z0;
        int i1, $i2;

        $r1 := @parameter0: java.lang.String;

        z0 = 0;

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if i1 == $i2 goto label3;

        c0 = $r0[i1];

        if 97 > c0 goto label2;

        if 122 < c0 goto label2;

        z0 = 1;

        $i2 = c0 + -97;

        $i2 = $i2 + 65;

        c0 = (char) $i2;

        $r0[i1] = c0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r0);

     label4:
        return $r1;
    }
