org.spongycastle.cms.CMSSignedDataParser extends org.spongycastle.cms.CMSContentInfoParser
private static final org.spongycastle.cms.CMSSignedHelper HELPER
private org.spongycastle.asn1.ASN1Set _certSet
private org.spongycastle.asn1.ASN1Set _crlSet
private boolean _isCertCrlParsed
private org.spongycastle.cms.CMSTypedStream _signedContent
private org.spongycastle.asn1.ASN1ObjectIdentifier _signedContentType
private org.spongycastle.asn1.cms.SignedDataParser _signedData
private org.spongycastle.cms.SignerInformationStore _signerInfoStore
private java.util.Set digestAlgorithms
private java.util.Map digests
    static void <clinit>()
    {
        org.spongycastle.cms.CMSSignedHelper $r0;

        $r0 = <org.spongycastle.cms.CMSSignedHelper: org.spongycastle.cms.CMSSignedHelper INSTANCE>;

        <org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.CMSSignedHelper HELPER> = $r0;

        return;
    }
    public void <init>(org.spongycastle.operator.DigestCalculatorProvider, java.io.InputStream) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        org.spongycastle.operator.DigestCalculatorProvider $r1;
        java.io.InputStream $r2;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        $r1 := @parameter0: org.spongycastle.operator.DigestCalculatorProvider;

        $r2 := @parameter1: java.io.InputStream;

        specialinvoke r0.<org.spongycastle.cms.CMSSignedDataParser: void <init>(org.spongycastle.operator.DigestCalculatorProvider,org.spongycastle.cms.CMSTypedStream,java.io.InputStream)>($r1, null, $r2);

        return;
    }
    public void <init>(org.spongycastle.operator.DigestCalculatorProvider, org.spongycastle.cms.CMSTypedStream, java.io.InputStream) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        org.spongycastle.operator.DigestCalculatorProvider $r1;
        org.spongycastle.cms.CMSTypedStream $r2, r5, $r20;
        java.io.InputStream $r3;
        java.util.HashSet r4;
        java.io.IOException r6;
        org.spongycastle.asn1.cms.ContentInfoParser $r7;
        org.spongycastle.asn1.ASN1Encodable $r8;
        org.spongycastle.asn1.cms.SignedDataParser $r9;
        java.util.HashMap $r10;
        org.spongycastle.asn1.ASN1SetParser $r11;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r12;
        org.spongycastle.operator.DigestCalculator $r13;
        java.util.Map $r14;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r15;
        org.spongycastle.operator.OperatorCreationException $r16;
        java.util.Set $r17;
        org.spongycastle.asn1.ASN1OctetStringParser r18;
        java.lang.String $r19;
        org.spongycastle.cms.CMSException $r21;
        java.lang.StringBuilder $r22;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        $r1 := @parameter0: org.spongycastle.operator.DigestCalculatorProvider;

        $r2 := @parameter1: org.spongycastle.cms.CMSTypedStream;

        $r3 := @parameter2: java.io.InputStream;

        specialinvoke r0.<org.spongycastle.cms.CMSContentInfoParser: void <init>(java.io.InputStream)>($r3);

        r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.CMSTypedStream _signedContent> = $r2;

        $r7 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.cms.ContentInfoParser _contentInfo>;

     label01:
        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.cms.ContentInfoParser: org.spongycastle.asn1.ASN1Encodable getContent(int)>(16);

        $r9 = staticinvoke <org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.cms.SignedDataParser getInstance(java.lang.Object)>($r8);

     label02:
        r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.cms.SignedDataParser _signedData> = $r9;

        $r10 = new java.util.HashMap;

     label03:
        specialinvoke $r10.<java.util.HashMap: void <init>()>();

     label04:
        r0.<org.spongycastle.cms.CMSSignedDataParser: java.util.Map digests> = $r10;

        $r9 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.cms.SignedDataParser _signedData>;

     label05:
        $r11 = virtualinvoke $r9.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1SetParser getDigestAlgorithms()>();

     label06:
        r4 = new java.util.HashSet;

     label07:
        specialinvoke r4.<java.util.HashSet: void <init>()>();

     label08:
        $r8 = interfaceinvoke $r11.<org.spongycastle.asn1.ASN1SetParser: org.spongycastle.asn1.ASN1Encodable readObject()>();

     label09:
        if $r8 == null goto label16;

     label10:
        $r12 = staticinvoke <org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)>($r8);

        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label11:
        $r13 = interfaceinvoke $r1.<org.spongycastle.operator.DigestCalculatorProvider: org.spongycastle.operator.DigestCalculator get(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r12);

     label12:
        if $r13 == null goto label08;

        $r14 = r0.<org.spongycastle.cms.CMSSignedDataParser: java.util.Map digests>;

     label13:
        $r15 = virtualinvoke $r12.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r13);

     label14:
        goto label08;

     label15:
        $r16 := @caughtexception;

        goto label08;

     label16:
        $r17 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r4);

     label17:
        r0.<org.spongycastle.cms.CMSSignedDataParser: java.util.Set digestAlgorithms> = $r17;

        $r9 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.cms.SignedDataParser _signedData>;

     label18:
        $r7 = virtualinvoke $r9.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.cms.ContentInfoParser getEncapContentInfo()>();

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.cms.ContentInfoParser: org.spongycastle.asn1.ASN1Encodable getContent(int)>(4);

     label19:
        r18 = (org.spongycastle.asn1.ASN1OctetStringParser) $r8;

        if r18 == null goto label22;

        r5 = new org.spongycastle.cms.CMSTypedStream;

     label20:
        $r15 = virtualinvoke $r7.<org.spongycastle.asn1.cms.ContentInfoParser: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

        $r19 = virtualinvoke $r15.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r3 = interfaceinvoke r18.<org.spongycastle.asn1.ASN1OctetStringParser: java.io.InputStream getOctetStream()>();

        specialinvoke r5.<org.spongycastle.cms.CMSTypedStream: void <init>(java.lang.String,java.io.InputStream)>($r19, $r3);

     label21:
        $r20 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.CMSTypedStream _signedContent>;

        if $r20 != null goto label25;

        r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.CMSTypedStream _signedContent> = r5;

     label22:
        if $r2 != null goto label28;

     label23:
        $r15 = virtualinvoke $r7.<org.spongycastle.asn1.cms.ContentInfoParser: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

     label24:
        r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1ObjectIdentifier _signedContentType> = $r15;

        return;

     label25:
        virtualinvoke r5.<org.spongycastle.cms.CMSTypedStream: void drain()>();

     label26:
        goto label22;

     label27:
        r6 := @caughtexception;

        $r21 = new org.spongycastle.cms.CMSException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("io exception: ");

        $r19 = virtualinvoke r6.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r19, r6);

        throw $r21;

     label28:
        $r2 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.CMSTypedStream _signedContent>;

     label29:
        $r15 = virtualinvoke $r2.<org.spongycastle.cms.CMSTypedStream: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

     label30:
        r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1ObjectIdentifier _signedContentType> = $r15;

        return;

        catch java.io.IOException from label01 to label02 with label27;
        catch java.io.IOException from label03 to label04 with label27;
        catch java.io.IOException from label05 to label06 with label27;
        catch java.io.IOException from label07 to label09 with label27;
        catch java.io.IOException from label10 to label11 with label27;
        catch org.spongycastle.operator.OperatorCreationException from label11 to label12 with label15;
        catch org.spongycastle.operator.OperatorCreationException from label13 to label14 with label15;
        catch java.io.IOException from label11 to label12 with label27;
        catch java.io.IOException from label13 to label14 with label27;
        catch java.io.IOException from label16 to label17 with label27;
        catch java.io.IOException from label18 to label19 with label27;
        catch java.io.IOException from label20 to label21 with label27;
        catch java.io.IOException from label23 to label24 with label27;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.io.IOException from label29 to label30 with label27;
    }
    public void <init>(org.spongycastle.operator.DigestCalculatorProvider, org.spongycastle.cms.CMSTypedStream, byte[]) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        org.spongycastle.operator.DigestCalculatorProvider $r1;
        org.spongycastle.cms.CMSTypedStream $r2;
        byte[] $r3;
        java.io.ByteArrayInputStream $r4;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        $r1 := @parameter0: org.spongycastle.operator.DigestCalculatorProvider;

        $r2 := @parameter1: org.spongycastle.cms.CMSTypedStream;

        $r3 := @parameter2: byte[];

        $r4 = new java.io.ByteArrayInputStream;

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        specialinvoke r0.<org.spongycastle.cms.CMSSignedDataParser: void <init>(org.spongycastle.operator.DigestCalculatorProvider,org.spongycastle.cms.CMSTypedStream,java.io.InputStream)>($r1, $r2, $r4);

        return;
    }
    public void <init>(org.spongycastle.operator.DigestCalculatorProvider, byte[]) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        org.spongycastle.operator.DigestCalculatorProvider $r1;
        byte[] $r2;
        java.io.ByteArrayInputStream $r3;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        $r1 := @parameter0: org.spongycastle.operator.DigestCalculatorProvider;

        $r2 := @parameter1: byte[];

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        specialinvoke r0.<org.spongycastle.cms.CMSSignedDataParser: void <init>(org.spongycastle.operator.DigestCalculatorProvider,java.io.InputStream)>($r1, $r3);

        return;
    }
    private static org.spongycastle.asn1.ASN1Set getASN1Set(org.spongycastle.asn1.ASN1SetParser)
    {
        org.spongycastle.asn1.ASN1SetParser $r0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.ASN1Set $r2;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1SetParser;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke $r0.<org.spongycastle.asn1.ASN1SetParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r2 = staticinvoke <org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Set getInstance(java.lang.Object)>($r1);

        return $r2;
    }
    private static void pipeEncapsulatedOctetString(org.spongycastle.asn1.cms.ContentInfoParser, java.io.OutputStream) throws java.io.IOException
    {
        org.spongycastle.asn1.cms.ContentInfoParser $r0;
        java.io.OutputStream $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.ASN1OctetStringParser r3;

        $r0 := @parameter0: org.spongycastle.asn1.cms.ContentInfoParser;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.cms.ContentInfoParser: org.spongycastle.asn1.ASN1Encodable getContent(int)>(4);

        r3 = (org.spongycastle.asn1.ASN1OctetStringParser) $r2;

        if r3 == null goto label1;

        staticinvoke <org.spongycastle.cms.CMSSignedDataParser: void pipeOctetString(org.spongycastle.asn1.ASN1OctetStringParser,java.io.OutputStream)>(r3, $r1);

     label1:
        return;
    }
    private static void pipeOctetString(org.spongycastle.asn1.ASN1OctetStringParser, java.io.OutputStream) throws java.io.IOException
    {
        org.spongycastle.asn1.ASN1OctetStringParser $r0;
        java.io.OutputStream $r1;
        java.io.InputStream $r2;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1OctetStringParser;

        $r1 := @parameter1: java.io.OutputStream;

        $r1 = staticinvoke <org.spongycastle.cms.CMSUtils: java.io.OutputStream createBEROctetOutputStream(java.io.OutputStream,int,boolean,int)>($r1, 0, 1, 0);

        $r2 = interfaceinvoke $r0.<org.spongycastle.asn1.ASN1OctetStringParser: java.io.InputStream getOctetStream()>();

        staticinvoke <org.spongycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>($r2, $r1);

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }
    private void populateCertCrlSets() throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        java.io.IOException r1;
        boolean $z0;
        org.spongycastle.asn1.cms.SignedDataParser $r2;
        org.spongycastle.asn1.ASN1SetParser $r3;
        org.spongycastle.asn1.ASN1Set $r4;
        org.spongycastle.cms.CMSException $r5;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        $z0 = r0.<org.spongycastle.cms.CMSSignedDataParser: boolean _isCertCrlParsed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<org.spongycastle.cms.CMSSignedDataParser: boolean _isCertCrlParsed> = 1;

        $r2 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.cms.SignedDataParser _signedData>;

     label2:
        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1SetParser getCertificates()>();

        $r4 = staticinvoke <org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1Set getASN1Set(org.spongycastle.asn1.ASN1SetParser)>($r3);

     label3:
        r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1Set _certSet> = $r4;

        $r2 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.cms.SignedDataParser _signedData>;

     label4:
        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1SetParser getCrls()>();

        $r4 = staticinvoke <org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1Set getASN1Set(org.spongycastle.asn1.ASN1SetParser)>($r3);

     label5:
        r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1Set _crlSet> = $r4;

        return;

     label6:
        r1 := @caughtexception;

        $r5 = new org.spongycastle.cms.CMSException;

        specialinvoke $r5.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("problem parsing cert/crl sets", r1);

        throw $r5;

        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }
    public static java.io.OutputStream replaceCertificatesAndCRLs(java.io.InputStream, org.spongycastle.util.Store, org.spongycastle.util.Store, org.spongycastle.util.Store, java.io.OutputStream) throws org.spongycastle.cms.CMSException, java.io.IOException
    {
        java.io.InputStream $r0;
        org.spongycastle.util.Store $r1, $r2, $r3;
        java.io.OutputStream $r4, $r15;
        java.util.ArrayList r5;
        org.spongycastle.asn1.cms.ContentInfoParser r6;
        org.spongycastle.asn1.BERSequenceGenerator r7, r9, r10;
        org.spongycastle.asn1.ASN1StreamParser r8;
        org.spongycastle.asn1.ASN1Encodable $r11;
        org.spongycastle.asn1.ASN1SequenceParser $r12;
        org.spongycastle.asn1.cms.SignedDataParser $r13;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r14;
        org.spongycastle.asn1.ASN1Integer $r16;
        org.spongycastle.asn1.ASN1SetParser $r17;
        org.spongycastle.asn1.ASN1Primitive $r18;
        byte[] $r19;
        java.util.List $r20;
        org.spongycastle.asn1.ASN1Set $r21;
        int $i0;
        org.spongycastle.asn1.DERTaggedObject $r22;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: org.spongycastle.util.Store;

        $r2 := @parameter2: org.spongycastle.util.Store;

        $r3 := @parameter3: org.spongycastle.util.Store;

        $r4 := @parameter4: java.io.OutputStream;

        r8 = new org.spongycastle.asn1.ASN1StreamParser;

        specialinvoke r8.<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream)>($r0);

        r6 = new org.spongycastle.asn1.cms.ContentInfoParser;

        $r11 = virtualinvoke r8.<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1Encodable readObject()>();

        $r12 = (org.spongycastle.asn1.ASN1SequenceParser) $r11;

        specialinvoke r6.<org.spongycastle.asn1.cms.ContentInfoParser: void <init>(org.spongycastle.asn1.ASN1SequenceParser)>($r12);

        $r11 = virtualinvoke r6.<org.spongycastle.asn1.cms.ContentInfoParser: org.spongycastle.asn1.ASN1Encodable getContent(int)>(16);

        $r13 = staticinvoke <org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.cms.SignedDataParser getInstance(java.lang.Object)>($r11);

        r9 = new org.spongycastle.asn1.BERSequenceGenerator;

        specialinvoke r9.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream)>($r4);

        $r14 = <org.spongycastle.asn1.cms.CMSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier signedData>;

        virtualinvoke r9.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r14);

        r10 = new org.spongycastle.asn1.BERSequenceGenerator;

        $r15 = virtualinvoke r9.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        specialinvoke r10.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream,int,boolean)>($r15, 0, 1);

        $r16 = virtualinvoke $r13.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1Integer getVersion()>();

        virtualinvoke r10.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r16);

        $r15 = virtualinvoke r10.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r17 = virtualinvoke $r13.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1SetParser getDigestAlgorithms()>();

        $r18 = interfaceinvoke $r17.<org.spongycastle.asn1.ASN1SetParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r19 = virtualinvoke $r18.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded()>();

        virtualinvoke $r15.<java.io.OutputStream: void write(byte[])>($r19);

        r6 = virtualinvoke $r13.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.cms.ContentInfoParser getEncapContentInfo()>();

        r7 = new org.spongycastle.asn1.BERSequenceGenerator;

        $r15 = virtualinvoke r10.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        specialinvoke r7.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream)>($r15);

        $r14 = virtualinvoke r6.<org.spongycastle.asn1.cms.ContentInfoParser: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

        virtualinvoke r7.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r14);

        $r15 = virtualinvoke r7.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        staticinvoke <org.spongycastle.cms.CMSSignedDataParser: void pipeEncapsulatedOctetString(org.spongycastle.asn1.cms.ContentInfoParser,java.io.OutputStream)>(r6, $r15);

        virtualinvoke r7.<org.spongycastle.asn1.BERSequenceGenerator: void close()>();

        $r17 = virtualinvoke $r13.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1SetParser getCertificates()>();

        staticinvoke <org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1Set getASN1Set(org.spongycastle.asn1.ASN1SetParser)>($r17);

        $r17 = virtualinvoke $r13.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1SetParser getCrls()>();

        staticinvoke <org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1Set getASN1Set(org.spongycastle.asn1.ASN1SetParser)>($r17);

        if $r1 != null goto label1;

        if $r3 == null goto label4;

     label1:
        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        if $r1 == null goto label2;

        $r20 = staticinvoke <org.spongycastle.cms.CMSUtils: java.util.List getCertificatesFromStore(org.spongycastle.util.Store)>($r1);

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r20);

     label2:
        if $r3 == null goto label3;

        $r20 = staticinvoke <org.spongycastle.cms.CMSUtils: java.util.List getAttributeCertificatesFromStore(org.spongycastle.util.Store)>($r3);

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r20);

     label3:
        $r21 = staticinvoke <org.spongycastle.cms.CMSUtils: org.spongycastle.asn1.ASN1Set createBerSetFromList(java.util.List)>(r5);

        $i0 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1Set: int size()>();

        if $i0 <= 0 goto label4;

        $r15 = virtualinvoke r10.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r22 = new org.spongycastle.asn1.DERTaggedObject;

        specialinvoke $r22.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 0, $r21);

        $r19 = virtualinvoke $r22.<org.spongycastle.asn1.DERTaggedObject: byte[] getEncoded()>();

        virtualinvoke $r15.<java.io.OutputStream: void write(byte[])>($r19);

     label4:
        if $r2 == null goto label5;

        $r20 = staticinvoke <org.spongycastle.cms.CMSUtils: java.util.List getCRLsFromStore(org.spongycastle.util.Store)>($r2);

        $r21 = staticinvoke <org.spongycastle.cms.CMSUtils: org.spongycastle.asn1.ASN1Set createBerSetFromList(java.util.List)>($r20);

        $i0 = virtualinvoke $r21.<org.spongycastle.asn1.ASN1Set: int size()>();

        if $i0 <= 0 goto label5;

        $r15 = virtualinvoke r10.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r22 = new org.spongycastle.asn1.DERTaggedObject;

        specialinvoke $r22.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 1, $r21);

        $r19 = virtualinvoke $r22.<org.spongycastle.asn1.DERTaggedObject: byte[] getEncoded()>();

        virtualinvoke $r15.<java.io.OutputStream: void write(byte[])>($r19);

     label5:
        $r15 = virtualinvoke r10.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r17 = virtualinvoke $r13.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1SetParser getSignerInfos()>();

        $r18 = interfaceinvoke $r17.<org.spongycastle.asn1.ASN1SetParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r19 = virtualinvoke $r18.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded()>();

        virtualinvoke $r15.<java.io.OutputStream: void write(byte[])>($r19);

        virtualinvoke r10.<org.spongycastle.asn1.BERSequenceGenerator: void close()>();

        virtualinvoke r9.<org.spongycastle.asn1.BERSequenceGenerator: void close()>();

        return $r4;
    }
    public static java.io.OutputStream replaceSigners(java.io.InputStream, org.spongycastle.cms.SignerInformationStore, java.io.OutputStream) throws org.spongycastle.cms.CMSException, java.io.IOException
    {
        java.io.InputStream $r0;
        org.spongycastle.cms.SignerInformationStore $r1;
        java.io.OutputStream $r2, $r13;
        org.spongycastle.asn1.cms.ContentInfoParser r3;
        org.spongycastle.asn1.ASN1EncodableVector r4;
        org.spongycastle.asn1.BERSequenceGenerator r5, r7, r8;
        org.spongycastle.asn1.ASN1StreamParser r6;
        org.spongycastle.asn1.ASN1Encodable $r9;
        org.spongycastle.asn1.ASN1SequenceParser $r10;
        org.spongycastle.asn1.cms.SignedDataParser $r11;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r12;
        org.spongycastle.asn1.ASN1Integer $r14;
        org.spongycastle.asn1.ASN1SetParser $r15;
        java.util.Collection $r16;
        java.util.Iterator $r17;
        boolean $z0;
        java.lang.Object $r18;
        org.spongycastle.cms.SignerInformation r19;
        org.spongycastle.cms.CMSSignedHelper $r20;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r21;
        org.spongycastle.asn1.DERSet $r22;
        byte[] $r23;
        org.spongycastle.asn1.cms.SignerInfo $r24;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: org.spongycastle.cms.SignerInformationStore;

        $r2 := @parameter2: java.io.OutputStream;

        r6 = new org.spongycastle.asn1.ASN1StreamParser;

        specialinvoke r6.<org.spongycastle.asn1.ASN1StreamParser: void <init>(java.io.InputStream)>($r0);

        r3 = new org.spongycastle.asn1.cms.ContentInfoParser;

        $r9 = virtualinvoke r6.<org.spongycastle.asn1.ASN1StreamParser: org.spongycastle.asn1.ASN1Encodable readObject()>();

        $r10 = (org.spongycastle.asn1.ASN1SequenceParser) $r9;

        specialinvoke r3.<org.spongycastle.asn1.cms.ContentInfoParser: void <init>(org.spongycastle.asn1.ASN1SequenceParser)>($r10);

        $r9 = virtualinvoke r3.<org.spongycastle.asn1.cms.ContentInfoParser: org.spongycastle.asn1.ASN1Encodable getContent(int)>(16);

        $r11 = staticinvoke <org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.cms.SignedDataParser getInstance(java.lang.Object)>($r9);

        r7 = new org.spongycastle.asn1.BERSequenceGenerator;

        specialinvoke r7.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream)>($r2);

        $r12 = <org.spongycastle.asn1.cms.CMSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier signedData>;

        virtualinvoke r7.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r12);

        r8 = new org.spongycastle.asn1.BERSequenceGenerator;

        $r13 = virtualinvoke r7.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        specialinvoke r8.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream,int,boolean)>($r13, 0, 1);

        $r14 = virtualinvoke $r11.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1Integer getVersion()>();

        virtualinvoke r8.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r14);

        $r15 = virtualinvoke $r11.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1SetParser getDigestAlgorithms()>();

        interfaceinvoke $r15.<org.spongycastle.asn1.ASN1SetParser: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r16 = virtualinvoke $r1.<org.spongycastle.cms.SignerInformationStore: java.util.Collection getSigners()>();

        $r17 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.spongycastle.cms.SignerInformation) $r18;

        $r20 = <org.spongycastle.cms.CMSSignedHelper: org.spongycastle.cms.CMSSignedHelper INSTANCE>;

        $r21 = virtualinvoke r19.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmID()>();

        $r21 = virtualinvoke $r20.<org.spongycastle.cms.CMSSignedHelper: org.spongycastle.asn1.x509.AlgorithmIdentifier fixAlgID(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r21);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r21);

        goto label1;

     label2:
        $r13 = virtualinvoke r8.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r22 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r22.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        $r23 = virtualinvoke $r22.<org.spongycastle.asn1.DERSet: byte[] getEncoded()>();

        virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r23);

        r3 = virtualinvoke $r11.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.cms.ContentInfoParser getEncapContentInfo()>();

        r5 = new org.spongycastle.asn1.BERSequenceGenerator;

        $r13 = virtualinvoke r8.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        specialinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream)>($r13);

        $r12 = virtualinvoke r3.<org.spongycastle.asn1.cms.ContentInfoParser: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

        virtualinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r12);

        $r13 = virtualinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        staticinvoke <org.spongycastle.cms.CMSSignedDataParser: void pipeEncapsulatedOctetString(org.spongycastle.asn1.cms.ContentInfoParser,java.io.OutputStream)>(r3, $r13);

        virtualinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: void close()>();

        $r15 = virtualinvoke $r11.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1SetParser getCertificates()>();

        staticinvoke <org.spongycastle.cms.CMSSignedDataParser: void writeSetToGeneratorTagged(org.spongycastle.asn1.ASN1Generator,org.spongycastle.asn1.ASN1SetParser,int)>(r8, $r15, 0);

        $r15 = virtualinvoke $r11.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1SetParser getCrls()>();

        staticinvoke <org.spongycastle.cms.CMSSignedDataParser: void writeSetToGeneratorTagged(org.spongycastle.asn1.ASN1Generator,org.spongycastle.asn1.ASN1SetParser,int)>(r8, $r15, 1);

        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r16 = virtualinvoke $r1.<org.spongycastle.cms.SignerInformationStore: java.util.Collection getSigners()>();

        $r17 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.spongycastle.cms.SignerInformation) $r18;

        $r24 = virtualinvoke r19.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo toASN1Structure()>();

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r24);

        goto label3;

     label4:
        $r13 = virtualinvoke r8.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r22 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r22.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        $r23 = virtualinvoke $r22.<org.spongycastle.asn1.DERSet: byte[] getEncoded()>();

        virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r23);

        virtualinvoke r8.<org.spongycastle.asn1.BERSequenceGenerator: void close()>();

        virtualinvoke r7.<org.spongycastle.asn1.BERSequenceGenerator: void close()>();

        return $r2;
    }
    private static void writeSetToGeneratorTagged(org.spongycastle.asn1.ASN1Generator, org.spongycastle.asn1.ASN1SetParser, int) throws java.io.IOException
    {
        org.spongycastle.asn1.ASN1Generator $r0;
        org.spongycastle.asn1.ASN1SetParser $r1;
        int $i0;
        org.spongycastle.asn1.ASN1Set $r2;
        boolean $z0;
        java.io.OutputStream $r3;
        org.spongycastle.asn1.BERTaggedObject $r4;
        byte[] $r5;
        org.spongycastle.asn1.DERTaggedObject $r6;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1Generator;

        $r1 := @parameter1: org.spongycastle.asn1.ASN1SetParser;

        $i0 := @parameter2: int;

        $r2 = staticinvoke <org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1Set getASN1Set(org.spongycastle.asn1.ASN1SetParser)>($r1);

        if $r2 == null goto label2;

        $z0 = $r1 instanceof org.spongycastle.asn1.BERSetParser;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1Generator: java.io.OutputStream getRawOutputStream()>();

        $r4 = new org.spongycastle.asn1.BERTaggedObject;

        specialinvoke $r4.<org.spongycastle.asn1.BERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, $i0, $r2);

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.BERTaggedObject: byte[] getEncoded()>();

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r5);

        return;

     label1:
        $r3 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1Generator: java.io.OutputStream getRawOutputStream()>();

        $r6 = new org.spongycastle.asn1.DERTaggedObject;

        specialinvoke $r6.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, $i0, $r2);

        $r5 = virtualinvoke $r6.<org.spongycastle.asn1.DERTaggedObject: byte[] getEncoded()>();

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[])>($r5);

     label2:
        return;
    }
    public org.spongycastle.util.Store getAttributeCertificates() throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        org.spongycastle.asn1.ASN1Set $r1;
        org.spongycastle.util.Store $r2;
        org.spongycastle.cms.CMSSignedHelper $r3;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        specialinvoke r0.<org.spongycastle.cms.CMSSignedDataParser: void populateCertCrlSets()>();

        $r3 = <org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.CMSSignedHelper HELPER>;

        $r1 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1Set _certSet>;

        $r2 = virtualinvoke $r3.<org.spongycastle.cms.CMSSignedHelper: org.spongycastle.util.Store getAttributeCertificates(org.spongycastle.asn1.ASN1Set)>($r1);

        return $r2;
    }
    public org.spongycastle.util.Store getCRLs() throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        org.spongycastle.asn1.ASN1Set $r1;
        org.spongycastle.util.Store $r2;
        org.spongycastle.cms.CMSSignedHelper $r3;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        specialinvoke r0.<org.spongycastle.cms.CMSSignedDataParser: void populateCertCrlSets()>();

        $r3 = <org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.CMSSignedHelper HELPER>;

        $r1 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1Set _crlSet>;

        $r2 = virtualinvoke $r3.<org.spongycastle.cms.CMSSignedHelper: org.spongycastle.util.Store getCRLs(org.spongycastle.asn1.ASN1Set)>($r1);

        return $r2;
    }
    public org.spongycastle.util.Store getCertificates() throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        org.spongycastle.asn1.ASN1Set $r1;
        org.spongycastle.util.Store $r2;
        org.spongycastle.cms.CMSSignedHelper $r3;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        specialinvoke r0.<org.spongycastle.cms.CMSSignedDataParser: void populateCertCrlSets()>();

        $r3 = <org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.CMSSignedHelper HELPER>;

        $r1 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1Set _certSet>;

        $r2 = virtualinvoke $r3.<org.spongycastle.cms.CMSSignedHelper: org.spongycastle.util.Store getCertificates(org.spongycastle.asn1.ASN1Set)>($r1);

        return $r2;
    }
    public java.util.Set getDigestAlgorithmIDs()
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        java.util.Set r1;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        r1 = r0.<org.spongycastle.cms.CMSSignedDataParser: java.util.Set digestAlgorithms>;

        return r1;
    }
    public org.spongycastle.util.Store getOtherRevocationInfo(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.ASN1Set $r2;
        org.spongycastle.util.Store $r3;
        org.spongycastle.cms.CMSSignedHelper $r4;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        specialinvoke r0.<org.spongycastle.cms.CMSSignedDataParser: void populateCertCrlSets()>();

        $r4 = <org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.CMSSignedHelper HELPER>;

        $r2 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1Set _crlSet>;

        $r3 = virtualinvoke $r4.<org.spongycastle.cms.CMSSignedHelper: org.spongycastle.util.Store getOtherRevocationInfo(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Set)>($r1, $r2);

        return $r3;
    }
    public org.spongycastle.cms.CMSTypedStream getSignedContent()
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        org.spongycastle.cms.CMSTypedStream $r1, $r5;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.io.InputStream $r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r6;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        $r1 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.CMSTypedStream _signedContent>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.spongycastle.cms.CMSSignedDataParser: java.util.Map digests>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r1 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.CMSTypedStream _signedContent>;

        $r4 = virtualinvoke $r1.<org.spongycastle.cms.CMSTypedStream: java.io.InputStream getContentStream()>();

        $r4 = staticinvoke <org.spongycastle.cms.CMSUtils: java.io.InputStream attachDigestsToInputStream(java.util.Collection,java.io.InputStream)>($r3, $r4);

        $r1 = new org.spongycastle.cms.CMSTypedStream;

        $r5 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.CMSTypedStream _signedContent>;

        $r6 = virtualinvoke $r5.<org.spongycastle.cms.CMSTypedStream: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

        specialinvoke $r1.<org.spongycastle.cms.CMSTypedStream: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,java.io.InputStream)>($r6, $r4);

        return $r1;
    }
    public java.lang.String getSignedContentTypeOID()
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        java.lang.String $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        $r2 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1ObjectIdentifier _signedContentType>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        return $r1;
    }
    public org.spongycastle.cms.SignerInformationStore getSignerInfos() throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        java.io.IOException r1;
        java.util.HashMap r2;
        java.util.ArrayList r3;
        org.spongycastle.cms.SignerInformationStore $r4;
        java.util.Map $r5;
        java.util.Set $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8, $r9;
        org.spongycastle.operator.DigestCalculator $r10;
        byte[] $r11;
        org.spongycastle.asn1.cms.SignedDataParser $r12;
        org.spongycastle.asn1.ASN1SetParser $r13;
        org.spongycastle.asn1.ASN1Encodable $r14;
        org.spongycastle.asn1.ASN1Primitive $r15;
        org.spongycastle.asn1.cms.SignerInfo $r16;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r17;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r18;
        org.spongycastle.cms.SignerInformation $r19;
        org.spongycastle.cms.CMSException $r20;
        java.lang.StringBuilder $r21;
        java.lang.String $r22;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        $r4 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.SignerInformationStore _signerInfoStore>;

        if $r4 != null goto label12;

        specialinvoke r0.<org.spongycastle.cms.CMSSignedDataParser: void populateCertCrlSets()>();

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>()>();

        $r5 = r0.<org.spongycastle.cms.CMSSignedDataParser: java.util.Map digests>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r5 = r0.<org.spongycastle.cms.CMSSignedDataParser: java.util.Map digests>;

        $r9 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r10 = (org.spongycastle.operator.DigestCalculator) $r9;

        $r11 = interfaceinvoke $r10.<org.spongycastle.operator.DigestCalculator: byte[] getDigest()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r11);

        goto label01;

     label02:
        $r12 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.cms.SignedDataParser _signedData>;

     label03:
        $r13 = virtualinvoke $r12.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1SetParser getSignerInfos()>();

     label04:
        $r14 = interfaceinvoke $r13.<org.spongycastle.asn1.ASN1SetParser: org.spongycastle.asn1.ASN1Encodable readObject()>();

     label05:
        if $r14 == null goto label11;

     label06:
        $r15 = interfaceinvoke $r14.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r16 = staticinvoke <org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.cms.SignerInfo getInstance(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()>();

        $r18 = virtualinvoke $r17.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18);

     label07:
        $r11 = (byte[]) $r8;

        $r19 = new org.spongycastle.cms.SignerInformation;

        $r18 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.ASN1ObjectIdentifier _signedContentType>;

     label08:
        specialinvoke $r19.<org.spongycastle.cms.SignerInformation: void <init>(org.spongycastle.asn1.cms.SignerInfo,org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.cms.CMSProcessable,byte[])>($r16, $r18, null, $r11);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r19);

     label09:
        goto label04;

     label10:
        r1 := @caughtexception;

        $r20 = new org.spongycastle.cms.CMSException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("io exception: ");

        $r22 = virtualinvoke r1.<java.io.IOException: java.lang.String getMessage()>();

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r22, r1);

        throw $r20;

     label11:
        $r4 = new org.spongycastle.cms.SignerInformationStore;

        specialinvoke $r4.<org.spongycastle.cms.SignerInformationStore: void <init>(java.util.Collection)>(r3);

        r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.SignerInformationStore _signerInfoStore> = $r4;

     label12:
        $r4 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.cms.SignerInformationStore _signerInfoStore>;

        return $r4;

        catch java.io.IOException from label03 to label05 with label10;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.io.IOException from label08 to label09 with label10;
    }
    public int getVersion()
    {
        org.spongycastle.cms.CMSSignedDataParser r0;
        org.spongycastle.asn1.cms.SignedDataParser $r1;
        org.spongycastle.asn1.ASN1Integer $r2;
        java.math.BigInteger $r3;
        int $i0;

        r0 := @this: org.spongycastle.cms.CMSSignedDataParser;

        $r1 = r0.<org.spongycastle.cms.CMSSignedDataParser: org.spongycastle.asn1.cms.SignedDataParser _signedData>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.cms.SignedDataParser: org.spongycastle.asn1.ASN1Integer getVersion()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int intValue()>();

        return $i0;
    }
