org.spongycastle.cms.KeyTransRecipientInfoGenerator extends java.lang.Object implements org.spongycastle.cms.RecipientInfoGenerator
private org.spongycastle.asn1.cms.IssuerAndSerialNumber issuerAndSerial
private byte[] subjectKeyIdentifier
protected final org.spongycastle.operator.AsymmetricKeyWrapper wrapper
    protected void <init>(org.spongycastle.asn1.cms.IssuerAndSerialNumber, org.spongycastle.operator.AsymmetricKeyWrapper)
    {
        org.spongycastle.cms.KeyTransRecipientInfoGenerator r0;
        org.spongycastle.asn1.cms.IssuerAndSerialNumber $r1;
        org.spongycastle.operator.AsymmetricKeyWrapper $r2;

        r0 := @this: org.spongycastle.cms.KeyTransRecipientInfoGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.cms.IssuerAndSerialNumber;

        $r2 := @parameter1: org.spongycastle.operator.AsymmetricKeyWrapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: org.spongycastle.asn1.cms.IssuerAndSerialNumber issuerAndSerial> = $r1;

        r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: org.spongycastle.operator.AsymmetricKeyWrapper wrapper> = $r2;

        return;
    }
    protected void <init>(byte[], org.spongycastle.operator.AsymmetricKeyWrapper)
    {
        org.spongycastle.cms.KeyTransRecipientInfoGenerator r0;
        byte[] $r1;
        org.spongycastle.operator.AsymmetricKeyWrapper $r2;

        r0 := @this: org.spongycastle.cms.KeyTransRecipientInfoGenerator;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: org.spongycastle.operator.AsymmetricKeyWrapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: byte[] subjectKeyIdentifier> = $r1;

        r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: org.spongycastle.operator.AsymmetricKeyWrapper wrapper> = $r2;

        return;
    }
    public final org.spongycastle.asn1.cms.RecipientInfo generate(org.spongycastle.operator.GenericKey) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.KeyTransRecipientInfoGenerator r0;
        org.spongycastle.operator.GenericKey $r1;
        org.spongycastle.operator.OperatorException r2;
        org.spongycastle.asn1.DEROctetString $r3;
        org.spongycastle.operator.AsymmetricKeyWrapper $r4;
        byte[] $r5, $r14;
        org.spongycastle.asn1.cms.IssuerAndSerialNumber $r6;
        org.spongycastle.asn1.cms.RecipientIdentifier r7;
        org.spongycastle.asn1.cms.RecipientInfo $r8;
        org.spongycastle.asn1.cms.KeyTransRecipientInfo $r9;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r10;
        org.spongycastle.cms.CMSException $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13;

        r0 := @this: org.spongycastle.cms.KeyTransRecipientInfoGenerator;

        $r1 := @parameter0: org.spongycastle.operator.GenericKey;

        $r4 = r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: org.spongycastle.operator.AsymmetricKeyWrapper wrapper>;

     label1:
        $r5 = virtualinvoke $r4.<org.spongycastle.operator.AsymmetricKeyWrapper: byte[] generateWrappedKey(org.spongycastle.operator.GenericKey)>($r1);

     label2:
        $r6 = r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: org.spongycastle.asn1.cms.IssuerAndSerialNumber issuerAndSerial>;

        if $r6 == null goto label5;

        r7 = new org.spongycastle.asn1.cms.RecipientIdentifier;

        $r6 = r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: org.spongycastle.asn1.cms.IssuerAndSerialNumber issuerAndSerial>;

        specialinvoke r7.<org.spongycastle.asn1.cms.RecipientIdentifier: void <init>(org.spongycastle.asn1.cms.IssuerAndSerialNumber)>($r6);

     label3:
        $r8 = new org.spongycastle.asn1.cms.RecipientInfo;

        $r9 = new org.spongycastle.asn1.cms.KeyTransRecipientInfo;

        $r4 = r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: org.spongycastle.operator.AsymmetricKeyWrapper wrapper>;

        $r10 = virtualinvoke $r4.<org.spongycastle.operator.AsymmetricKeyWrapper: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r3 = new org.spongycastle.asn1.DEROctetString;

        specialinvoke $r3.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r5);

        specialinvoke $r9.<org.spongycastle.asn1.cms.KeyTransRecipientInfo: void <init>(org.spongycastle.asn1.cms.RecipientIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1OctetString)>(r7, $r10, $r3);

        specialinvoke $r8.<org.spongycastle.asn1.cms.RecipientInfo: void <init>(org.spongycastle.asn1.cms.KeyTransRecipientInfo)>($r9);

        return $r8;

     label4:
        r2 := @caughtexception;

        $r11 = new org.spongycastle.cms.CMSException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception wrapping content key: ");

        $r13 = virtualinvoke r2.<org.spongycastle.operator.OperatorException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r13, r2);

        throw $r11;

     label5:
        r7 = new org.spongycastle.asn1.cms.RecipientIdentifier;

        $r3 = new org.spongycastle.asn1.DEROctetString;

        $r14 = r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: byte[] subjectKeyIdentifier>;

        specialinvoke $r3.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r14);

        specialinvoke r7.<org.spongycastle.asn1.cms.RecipientIdentifier: void <init>(org.spongycastle.asn1.ASN1OctetString)>($r3);

        goto label3;

        catch org.spongycastle.operator.OperatorException from label1 to label2 with label4;
    }
