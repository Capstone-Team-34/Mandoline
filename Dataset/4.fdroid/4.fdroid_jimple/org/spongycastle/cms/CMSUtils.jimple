org.spongycastle.cms.CMSUtils extends java.lang.Object
    void <init>()
    {
        org.spongycastle.cms.CMSUtils r0;

        r0 := @this: org.spongycastle.cms.CMSUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static java.io.InputStream attachDigestsToInputStream(java.util.Collection, java.io.InputStream)
    {
        java.util.Collection $r0;
        java.io.InputStream $r1;
        java.lang.Object r2, $r4;
        java.util.Iterator $r3;
        boolean $z0;
        org.spongycastle.operator.DigestCalculator r5;
        java.io.OutputStream $r6;
        org.spongycastle.util.io.TeeInputStream $r7;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.io.InputStream;

        r2 = $r1;

        $r3 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.spongycastle.operator.DigestCalculator) $r4;

        $r7 = new org.spongycastle.util.io.TeeInputStream;

        $r6 = interfaceinvoke r5.<org.spongycastle.operator.DigestCalculator: java.io.OutputStream getOutputStream()>();

        $r1 = (java.io.InputStream) r2;

        specialinvoke $r7.<org.spongycastle.util.io.TeeInputStream: void <init>(java.io.InputStream,java.io.OutputStream)>($r1, $r6);

        r2 = $r7;

        goto label1;

     label2:
        $r1 = (java.io.InputStream) r2;

        return $r1;
    }
    static java.io.OutputStream attachSignersToOutputStream(java.util.Collection, java.io.OutputStream)
    {
        java.util.Collection $r0;
        java.io.OutputStream $r1, $r5;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.spongycastle.cms.SignerInfoGenerator r4;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.spongycastle.cms.SignerInfoGenerator) $r3;

        $r5 = virtualinvoke r4.<org.spongycastle.cms.SignerInfoGenerator: java.io.OutputStream getCalculatingOutputStream()>();

        $r1 = staticinvoke <org.spongycastle.cms.CMSUtils: java.io.OutputStream getSafeTeeOutputStream(java.io.OutputStream,java.io.OutputStream)>($r1, $r5);

        goto label1;

     label2:
        return $r1;
    }
    static java.io.OutputStream createBEROctetOutputStream(java.io.OutputStream, int, boolean, int) throws java.io.IOException
    {
        java.io.OutputStream $r0;
        int $i0, $i1;
        boolean $z0;
        org.spongycastle.asn1.BEROctetStringGenerator r1;
        byte[] $r2;

        $r0 := @parameter0: java.io.OutputStream;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $i1 := @parameter3: int;

        r1 = new org.spongycastle.asn1.BEROctetStringGenerator;

        specialinvoke r1.<org.spongycastle.asn1.BEROctetStringGenerator: void <init>(java.io.OutputStream,int,boolean)>($r0, $i0, $z0);

        if $i1 == 0 goto label1;

        $r2 = newarray (byte)[$i1];

        $r0 = virtualinvoke r1.<org.spongycastle.asn1.BEROctetStringGenerator: java.io.OutputStream getOctetOutputStream(byte[])>($r2);

        return $r0;

     label1:
        $r0 = virtualinvoke r1.<org.spongycastle.asn1.BEROctetStringGenerator: java.io.OutputStream getOctetOutputStream()>();

        return $r0;
    }
    static org.spongycastle.asn1.ASN1Set createBerSetFromList(java.util.List)
    {
        java.util.List $r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.spongycastle.asn1.ASN1Encodable $r4;
        org.spongycastle.asn1.BERSet $r5;

        $r0 := @parameter0: java.util.List;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (org.spongycastle.asn1.ASN1Encodable) $r3;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        goto label1;

     label2:
        $r5 = new org.spongycastle.asn1.BERSet;

        specialinvoke $r5.<org.spongycastle.asn1.BERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r5;
    }
    static org.spongycastle.asn1.ASN1Set createDerSetFromList(java.util.List)
    {
        java.util.List $r0;
        org.spongycastle.asn1.ASN1EncodableVector r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.spongycastle.asn1.ASN1Encodable $r4;
        org.spongycastle.asn1.DERSet $r5;

        $r0 := @parameter0: java.util.List;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (org.spongycastle.asn1.ASN1Encodable) $r3;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        goto label1;

     label2:
        $r5 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r5.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        return $r5;
    }
    static java.util.List getAttributeCertificatesFromStore(org.spongycastle.util.Store) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.util.Store $r0;
        java.util.ArrayList r1;
        java.lang.ClassCastException r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.cert.X509AttributeCertificateHolder r6;
        org.spongycastle.asn1.DERTaggedObject $r7;
        org.spongycastle.asn1.x509.AttributeCertificate $r8;
        org.spongycastle.cms.CMSException $r9;

        $r0 := @parameter0: org.spongycastle.util.Store;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

     label1:
        $r3 = interfaceinvoke $r0.<org.spongycastle.util.Store: java.util.Collection getMatches(org.spongycastle.util.Selector)>(null);

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 == 0 goto label9;

     label4:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.spongycastle.cert.X509AttributeCertificateHolder) $r5;

     label5:
        $r7 = new org.spongycastle.asn1.DERTaggedObject;

     label6:
        $r8 = virtualinvoke r6.<org.spongycastle.cert.X509AttributeCertificateHolder: org.spongycastle.asn1.x509.AttributeCertificate toASN1Structure()>();

        specialinvoke $r7.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 2, $r8);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

     label7:
        goto label2;

     label8:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cms.CMSException;

        specialinvoke $r9.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("error processing certs", r2);

        throw $r9;

     label9:
        return r1;

        catch java.lang.ClassCastException from label1 to label3 with label8;
        catch java.lang.ClassCastException from label4 to label5 with label8;
        catch java.lang.ClassCastException from label6 to label7 with label8;
    }
    static java.util.List getCRLsFromStore(org.spongycastle.util.Store) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.util.Store $r0;
        java.util.ArrayList r1;
        java.lang.ClassCastException r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.cert.X509CRLHolder $r6;
        org.spongycastle.asn1.x509.CertificateList $r7;
        org.spongycastle.cms.CMSException $r8;
        org.spongycastle.asn1.cms.OtherRevocationInfoFormat $r9;
        org.spongycastle.asn1.DERTaggedObject $r10;

        $r0 := @parameter0: org.spongycastle.util.Store;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

     label01:
        $r3 = interfaceinvoke $r0.<org.spongycastle.util.Store: java.util.Collection getMatches(org.spongycastle.util.Selector)>(null);

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 == 0 goto label17;

     label04:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

     label05:
        $z0 = $r5 instanceof org.spongycastle.cert.X509CRLHolder;

        if $z0 == 0 goto label09;

     label06:
        $r6 = (org.spongycastle.cert.X509CRLHolder) $r5;

        $r7 = virtualinvoke $r6.<org.spongycastle.cert.X509CRLHolder: org.spongycastle.asn1.x509.CertificateList toASN1Structure()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

     label07:
        goto label02;

     label08:
        r2 := @caughtexception;

        $r8 = new org.spongycastle.cms.CMSException;

        specialinvoke $r8.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("error processing certs", r2);

        throw $r8;

     label09:
        $z0 = $r5 instanceof org.spongycastle.asn1.cms.OtherRevocationInfoFormat;

        if $z0 == 0 goto label14;

     label10:
        $r9 = staticinvoke <org.spongycastle.asn1.cms.OtherRevocationInfoFormat: org.spongycastle.asn1.cms.OtherRevocationInfoFormat getInstance(java.lang.Object)>($r5);

        staticinvoke <org.spongycastle.cms.CMSUtils: void validateInfoFormat(org.spongycastle.asn1.cms.OtherRevocationInfoFormat)>($r9);

     label11:
        $r10 = new org.spongycastle.asn1.DERTaggedObject;

     label12:
        specialinvoke $r10.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 1, $r9);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);

     label13:
        goto label02;

     label14:
        $z0 = $r5 instanceof org.spongycastle.asn1.ASN1TaggedObject;

        if $z0 == 0 goto label02;

     label15:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);

     label16:
        goto label02;

     label17:
        return r1;

        catch java.lang.ClassCastException from label01 to label03 with label08;
        catch java.lang.ClassCastException from label04 to label05 with label08;
        catch java.lang.ClassCastException from label06 to label07 with label08;
        catch java.lang.ClassCastException from label10 to label11 with label08;
        catch java.lang.ClassCastException from label12 to label13 with label08;
        catch java.lang.ClassCastException from label15 to label16 with label08;
    }
    static java.util.List getCertificatesFromStore(org.spongycastle.util.Store) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.util.Store $r0;
        java.util.ArrayList r1;
        java.lang.ClassCastException r2;
        java.util.Collection $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.spongycastle.cert.X509CertificateHolder r6;
        org.spongycastle.asn1.x509.Certificate $r7;
        org.spongycastle.cms.CMSException $r8;

        $r0 := @parameter0: org.spongycastle.util.Store;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

     label1:
        $r3 = interfaceinvoke $r0.<org.spongycastle.util.Store: java.util.Collection getMatches(org.spongycastle.util.Selector)>(null);

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 == 0 goto label7;

     label4:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.spongycastle.cert.X509CertificateHolder) $r5;

        $r7 = virtualinvoke r6.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate toASN1Structure()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

     label5:
        goto label2;

     label6:
        r2 := @caughtexception;

        $r8 = new org.spongycastle.cms.CMSException;

        specialinvoke $r8.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("error processing certs", r2);

        throw $r8;

     label7:
        return r1;

        catch java.lang.ClassCastException from label1 to label3 with label6;
        catch java.lang.ClassCastException from label4 to label5 with label6;
    }
    static java.util.Collection getOthersFromStore(org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.util.Store)
    {
        org.spongycastle.asn1.ASN1ObjectIdentifier $r0;
        org.spongycastle.util.Store $r1;
        org.spongycastle.asn1.cms.OtherRevocationInfoFormat r2;
        java.util.ArrayList r3;
        java.util.Collection $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.spongycastle.asn1.ASN1Encodable r7;
        org.spongycastle.asn1.DERTaggedObject $r8;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r1 := @parameter1: org.spongycastle.util.Store;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r1.<org.spongycastle.util.Store: java.util.Collection getMatches(org.spongycastle.util.Selector)>(null);

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.spongycastle.asn1.ASN1Encodable) $r6;

        r2 = new org.spongycastle.asn1.cms.OtherRevocationInfoFormat;

        specialinvoke r2.<org.spongycastle.asn1.cms.OtherRevocationInfoFormat: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r0, r7);

        staticinvoke <org.spongycastle.cms.CMSUtils: void validateInfoFormat(org.spongycastle.asn1.cms.OtherRevocationInfoFormat)>(r2);

        $r8 = new org.spongycastle.asn1.DERTaggedObject;

        specialinvoke $r8.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 1, r2);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return r3;
    }
    static java.io.OutputStream getSafeOutputStream(java.io.OutputStream)
    {
        java.io.OutputStream $r0;
        org.spongycastle.cms.NullOutputStream $r1;

        $r0 := @parameter0: java.io.OutputStream;

        if $r0 != null goto label1;

        $r1 = new org.spongycastle.cms.NullOutputStream;

        specialinvoke $r1.<org.spongycastle.cms.NullOutputStream: void <init>()>();

        return $r1;

     label1:
        return $r0;
    }
    static java.io.OutputStream getSafeTeeOutputStream(java.io.OutputStream, java.io.OutputStream)
    {
        java.io.OutputStream $r0, $r1;
        org.spongycastle.util.io.TeeOutputStream $r2;

        $r0 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: java.io.OutputStream;

        if $r0 != null goto label1;

        $r0 = staticinvoke <org.spongycastle.cms.CMSUtils: java.io.OutputStream getSafeOutputStream(java.io.OutputStream)>($r1);

        return $r0;

     label1:
        if $r1 != null goto label2;

        $r0 = staticinvoke <org.spongycastle.cms.CMSUtils: java.io.OutputStream getSafeOutputStream(java.io.OutputStream)>($r0);

        return $r0;

     label2:
        $r2 = new org.spongycastle.util.io.TeeOutputStream;

        specialinvoke $r2.<org.spongycastle.util.io.TeeOutputStream: void <init>(java.io.OutputStream,java.io.OutputStream)>($r0, $r1);

        return $r2;
    }
    static boolean isEquivalent(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.asn1.x509.AlgorithmIdentifier)
    {
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r0, $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2, $r3;
        boolean $z0;
        org.spongycastle.asn1.ASN1Encodable $r4, $r5;
        org.spongycastle.asn1.DERNull $r6;

        $r0 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r1 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        if $r0 == null goto label5;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $z0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        $r4 = virtualinvoke $r0.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        if $r4 == null goto label3;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        $r6 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label5;

        if $r5 != null goto label5;

     label2:
        return 1;

     label3:
        if $r5 == null goto label4;

        $r6 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label5;

     label4:
        return 1;

     label5:
        return 0;
    }
    static org.spongycastle.asn1.cms.ContentInfo readContentInfo(java.io.InputStream) throws org.spongycastle.cms.CMSException
    {
        java.io.InputStream $r0;
        org.spongycastle.asn1.cms.ContentInfo $r1;
        org.spongycastle.asn1.ASN1InputStream $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r2 = new org.spongycastle.asn1.ASN1InputStream;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>($r0);

        $r1 = staticinvoke <org.spongycastle.cms.CMSUtils: org.spongycastle.asn1.cms.ContentInfo readContentInfo(org.spongycastle.asn1.ASN1InputStream)>($r2);

        return $r1;
    }
    private static org.spongycastle.asn1.cms.ContentInfo readContentInfo(org.spongycastle.asn1.ASN1InputStream) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.asn1.ASN1InputStream $r0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.cms.ContentInfo $r2;
        java.io.IOException r3;
        org.spongycastle.cms.CMSException $r4;
        java.lang.ClassCastException r5;
        java.lang.IllegalArgumentException r6;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1InputStream;

     label1:
        $r1 = virtualinvoke $r0.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r2 = staticinvoke <org.spongycastle.asn1.cms.ContentInfo: org.spongycastle.asn1.cms.ContentInfo getInstance(java.lang.Object)>($r1);

     label2:
        return $r2;

     label3:
        r3 := @caughtexception;

        $r4 = new org.spongycastle.cms.CMSException;

        specialinvoke $r4.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("IOException reading content.", r3);

        throw $r4;

     label4:
        r5 := @caughtexception;

        $r4 = new org.spongycastle.cms.CMSException;

        specialinvoke $r4.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("Malformed content.", r5);

        throw $r4;

     label5:
        r6 := @caughtexception;

        $r4 = new org.spongycastle.cms.CMSException;

        specialinvoke $r4.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("Malformed content.", r6);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.ClassCastException from label1 to label2 with label4;
        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
    }
    static org.spongycastle.asn1.cms.ContentInfo readContentInfo(byte[]) throws org.spongycastle.cms.CMSException
    {
        byte[] $r0;
        org.spongycastle.asn1.cms.ContentInfo $r1;
        org.spongycastle.asn1.ASN1InputStream $r2;

        $r0 := @parameter0: byte[];

        $r2 = new org.spongycastle.asn1.ASN1InputStream;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r0);

        $r1 = staticinvoke <org.spongycastle.cms.CMSUtils: org.spongycastle.asn1.cms.ContentInfo readContentInfo(org.spongycastle.asn1.ASN1InputStream)>($r2);

        return $r1;
    }
    public static byte[] streamToByteArray(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        byte[] $r1;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <org.spongycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>($r0);

        return $r1;
    }
    public static byte[] streamToByteArray(java.io.InputStream, int) throws java.io.IOException
    {
        java.io.InputStream $r0;
        int $i0;
        byte[] $r1;

        $r0 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <org.spongycastle.util.io.Streams: byte[] readAllLimited(java.io.InputStream,int)>($r0, $i0);

        return $r1;
    }
    private static void validateInfoFormat(org.spongycastle.asn1.cms.OtherRevocationInfoFormat)
    {
        org.spongycastle.asn1.cms.OtherRevocationInfoFormat $r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r2;
        boolean $z0;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.ocsp.OCSPResponse $r4;
        org.spongycastle.asn1.ocsp.OCSPResponseStatus $r5;
        java.math.BigInteger $r6;
        int $i0;
        java.lang.IllegalArgumentException $r7;

        $r0 := @parameter0: org.spongycastle.asn1.cms.OtherRevocationInfoFormat;

        $r1 = <org.spongycastle.asn1.cms.CMSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_ri_ocsp_response>;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.cms.OtherRevocationInfoFormat: org.spongycastle.asn1.ASN1ObjectIdentifier getInfoFormat()>();

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r0.<org.spongycastle.asn1.cms.OtherRevocationInfoFormat: org.spongycastle.asn1.ASN1Encodable getInfo()>();

        $r4 = staticinvoke <org.spongycastle.asn1.ocsp.OCSPResponse: org.spongycastle.asn1.ocsp.OCSPResponse getInstance(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ocsp.OCSPResponse: org.spongycastle.asn1.ocsp.OCSPResponseStatus getResponseStatus()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ocsp.OCSPResponseStatus: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        if $i0 == 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cannot add unsuccessful OCSP response to CMS SignedData");

        throw $r7;

     label1:
        return;
    }
