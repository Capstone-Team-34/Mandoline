org.spongycastle.cms.bc.EnvelopedDataHelper extends java.lang.Object
protected static final java.util.Map BASE_CIPHER_NAMES
protected static final java.util.Map CIPHER_ALG_NAMES
protected static final java.util.Map MAC_ALG_NAMES
private static final short[] rc2Ekb
private static final short[] rc2Table
    static void <clinit>()
    {
        java.lang.String $r0;
        java.util.HashMap $r1;
        java.util.Map $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3, $r4;
        short[] $r5;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map MAC_ALG_NAMES> = $r1;

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier DES_EDE3_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "DESEDE");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES128_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES192_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES256_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier DES_EDE3_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "DESEDE/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES128_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES192_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES256_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = new org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r4 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rsaEncryption>;

        $r0 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        specialinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>($r0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "RSA/ECB/PKCS1Padding");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAST5_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "CAST5/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA128_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "Camellia/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA192_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "Camellia/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA256_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "Camellia/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier SEED_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "SEED/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier DES_EDE3_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "DESEDEMac");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES128_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AESMac");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES192_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AESMac");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES256_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AESMac");

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier RC2_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "RC2Mac");

        $r5 = newarray (short)[256];

        $r5[0] = 189;

        $r5[1] = 86;

        $r5[2] = 234;

        $r5[3] = 242;

        $r5[4] = 162;

        $r5[5] = 241;

        $r5[6] = 172;

        $r5[7] = 42;

        $r5[8] = 176;

        $r5[9] = 147;

        $r5[10] = 209;

        $r5[11] = 156;

        $r5[12] = 27;

        $r5[13] = 51;

        $r5[14] = 253;

        $r5[15] = 208;

        $r5[16] = 48;

        $r5[17] = 4;

        $r5[18] = 182;

        $r5[19] = 220;

        $r5[20] = 125;

        $r5[21] = 223;

        $r5[22] = 50;

        $r5[23] = 75;

        $r5[24] = 247;

        $r5[25] = 203;

        $r5[26] = 69;

        $r5[27] = 155;

        $r5[28] = 49;

        $r5[29] = 187;

        $r5[30] = 33;

        $r5[31] = 90;

        $r5[32] = 65;

        $r5[33] = 159;

        $r5[34] = 225;

        $r5[35] = 217;

        $r5[36] = 74;

        $r5[37] = 77;

        $r5[38] = 158;

        $r5[39] = 218;

        $r5[40] = 160;

        $r5[41] = 104;

        $r5[42] = 44;

        $r5[43] = 195;

        $r5[44] = 39;

        $r5[45] = 95;

        $r5[46] = 128;

        $r5[47] = 54;

        $r5[48] = 62;

        $r5[49] = 238;

        $r5[50] = 251;

        $r5[51] = 149;

        $r5[52] = 26;

        $r5[53] = 254;

        $r5[54] = 206;

        $r5[55] = 168;

        $r5[56] = 52;

        $r5[57] = 169;

        $r5[58] = 19;

        $r5[59] = 240;

        $r5[60] = 166;

        $r5[61] = 63;

        $r5[62] = 216;

        $r5[63] = 12;

        $r5[64] = 120;

        $r5[65] = 36;

        $r5[66] = 175;

        $r5[67] = 35;

        $r5[68] = 82;

        $r5[69] = 193;

        $r5[70] = 103;

        $r5[71] = 23;

        $r5[72] = 245;

        $r5[73] = 102;

        $r5[74] = 144;

        $r5[75] = 231;

        $r5[76] = 232;

        $r5[77] = 7;

        $r5[78] = 184;

        $r5[79] = 96;

        $r5[80] = 72;

        $r5[81] = 230;

        $r5[82] = 30;

        $r5[83] = 83;

        $r5[84] = 243;

        $r5[85] = 146;

        $r5[86] = 164;

        $r5[87] = 114;

        $r5[88] = 140;

        $r5[89] = 8;

        $r5[90] = 21;

        $r5[91] = 110;

        $r5[92] = 134;

        $r5[93] = 0;

        $r5[94] = 132;

        $r5[95] = 250;

        $r5[96] = 244;

        $r5[97] = 127;

        $r5[98] = 138;

        $r5[99] = 66;

        $r5[100] = 25;

        $r5[101] = 246;

        $r5[102] = 219;

        $r5[103] = 205;

        $r5[104] = 20;

        $r5[105] = 141;

        $r5[106] = 80;

        $r5[107] = 18;

        $r5[108] = 186;

        $r5[109] = 60;

        $r5[110] = 6;

        $r5[111] = 78;

        $r5[112] = 236;

        $r5[113] = 179;

        $r5[114] = 53;

        $r5[115] = 17;

        $r5[116] = 161;

        $r5[117] = 136;

        $r5[118] = 142;

        $r5[119] = 43;

        $r5[120] = 148;

        $r5[121] = 153;

        $r5[122] = 183;

        $r5[123] = 113;

        $r5[124] = 116;

        $r5[125] = 211;

        $r5[126] = 228;

        $r5[127] = 191;

        $r5[128] = 58;

        $r5[129] = 222;

        $r5[130] = 150;

        $r5[131] = 14;

        $r5[132] = 188;

        $r5[133] = 10;

        $r5[134] = 237;

        $r5[135] = 119;

        $r5[136] = 252;

        $r5[137] = 55;

        $r5[138] = 107;

        $r5[139] = 3;

        $r5[140] = 121;

        $r5[141] = 137;

        $r5[142] = 98;

        $r5[143] = 198;

        $r5[144] = 215;

        $r5[145] = 192;

        $r5[146] = 210;

        $r5[147] = 124;

        $r5[148] = 106;

        $r5[149] = 139;

        $r5[150] = 34;

        $r5[151] = 163;

        $r5[152] = 91;

        $r5[153] = 5;

        $r5[154] = 93;

        $r5[155] = 2;

        $r5[156] = 117;

        $r5[157] = 213;

        $r5[158] = 97;

        $r5[159] = 227;

        $r5[160] = 24;

        $r5[161] = 143;

        $r5[162] = 85;

        $r5[163] = 81;

        $r5[164] = 173;

        $r5[165] = 31;

        $r5[166] = 11;

        $r5[167] = 94;

        $r5[168] = 133;

        $r5[169] = 229;

        $r5[170] = 194;

        $r5[171] = 87;

        $r5[172] = 99;

        $r5[173] = 202;

        $r5[174] = 61;

        $r5[175] = 108;

        $r5[176] = 180;

        $r5[177] = 197;

        $r5[178] = 204;

        $r5[179] = 112;

        $r5[180] = 178;

        $r5[181] = 145;

        $r5[182] = 89;

        $r5[183] = 13;

        $r5[184] = 71;

        $r5[185] = 32;

        $r5[186] = 200;

        $r5[187] = 79;

        $r5[188] = 88;

        $r5[189] = 224;

        $r5[190] = 1;

        $r5[191] = 226;

        $r5[192] = 22;

        $r5[193] = 56;

        $r5[194] = 196;

        $r5[195] = 111;

        $r5[196] = 59;

        $r5[197] = 15;

        $r5[198] = 101;

        $r5[199] = 70;

        $r5[200] = 190;

        $r5[201] = 126;

        $r5[202] = 45;

        $r5[203] = 123;

        $r5[204] = 130;

        $r5[205] = 249;

        $r5[206] = 64;

        $r5[207] = 181;

        $r5[208] = 29;

        $r5[209] = 115;

        $r5[210] = 248;

        $r5[211] = 235;

        $r5[212] = 38;

        $r5[213] = 199;

        $r5[214] = 135;

        $r5[215] = 151;

        $r5[216] = 37;

        $r5[217] = 84;

        $r5[218] = 177;

        $r5[219] = 40;

        $r5[220] = 170;

        $r5[221] = 152;

        $r5[222] = 157;

        $r5[223] = 165;

        $r5[224] = 100;

        $r5[225] = 109;

        $r5[226] = 122;

        $r5[227] = 212;

        $r5[228] = 16;

        $r5[229] = 129;

        $r5[230] = 68;

        $r5[231] = 239;

        $r5[232] = 73;

        $r5[233] = 214;

        $r5[234] = 174;

        $r5[235] = 46;

        $r5[236] = 221;

        $r5[237] = 118;

        $r5[238] = 92;

        $r5[239] = 47;

        $r5[240] = 167;

        $r5[241] = 28;

        $r5[242] = 201;

        $r5[243] = 9;

        $r5[244] = 105;

        $r5[245] = 154;

        $r5[246] = 131;

        $r5[247] = 207;

        $r5[248] = 41;

        $r5[249] = 57;

        $r5[250] = 185;

        $r5[251] = 233;

        $r5[252] = 76;

        $r5[253] = 255;

        $r5[254] = 67;

        $r5[255] = 171;

        <org.spongycastle.cms.bc.EnvelopedDataHelper: short[] rc2Table> = $r5;

        $r5 = newarray (short)[256];

        $r5[0] = 93;

        $r5[1] = 190;

        $r5[2] = 155;

        $r5[3] = 139;

        $r5[4] = 17;

        $r5[5] = 153;

        $r5[6] = 110;

        $r5[7] = 77;

        $r5[8] = 89;

        $r5[9] = 243;

        $r5[10] = 133;

        $r5[11] = 166;

        $r5[12] = 63;

        $r5[13] = 183;

        $r5[14] = 131;

        $r5[15] = 197;

        $r5[16] = 228;

        $r5[17] = 115;

        $r5[18] = 107;

        $r5[19] = 58;

        $r5[20] = 104;

        $r5[21] = 90;

        $r5[22] = 192;

        $r5[23] = 71;

        $r5[24] = 160;

        $r5[25] = 100;

        $r5[26] = 52;

        $r5[27] = 12;

        $r5[28] = 241;

        $r5[29] = 208;

        $r5[30] = 82;

        $r5[31] = 165;

        $r5[32] = 185;

        $r5[33] = 30;

        $r5[34] = 150;

        $r5[35] = 67;

        $r5[36] = 65;

        $r5[37] = 216;

        $r5[38] = 212;

        $r5[39] = 44;

        $r5[40] = 219;

        $r5[41] = 248;

        $r5[42] = 7;

        $r5[43] = 119;

        $r5[44] = 42;

        $r5[45] = 202;

        $r5[46] = 235;

        $r5[47] = 239;

        $r5[48] = 16;

        $r5[49] = 28;

        $r5[50] = 22;

        $r5[51] = 13;

        $r5[52] = 56;

        $r5[53] = 114;

        $r5[54] = 47;

        $r5[55] = 137;

        $r5[56] = 193;

        $r5[57] = 249;

        $r5[58] = 128;

        $r5[59] = 196;

        $r5[60] = 109;

        $r5[61] = 174;

        $r5[62] = 48;

        $r5[63] = 61;

        $r5[64] = 206;

        $r5[65] = 32;

        $r5[66] = 99;

        $r5[67] = 254;

        $r5[68] = 230;

        $r5[69] = 26;

        $r5[70] = 199;

        $r5[71] = 184;

        $r5[72] = 80;

        $r5[73] = 232;

        $r5[74] = 36;

        $r5[75] = 23;

        $r5[76] = 252;

        $r5[77] = 37;

        $r5[78] = 111;

        $r5[79] = 187;

        $r5[80] = 106;

        $r5[81] = 163;

        $r5[82] = 68;

        $r5[83] = 83;

        $r5[84] = 217;

        $r5[85] = 162;

        $r5[86] = 1;

        $r5[87] = 171;

        $r5[88] = 188;

        $r5[89] = 182;

        $r5[90] = 31;

        $r5[91] = 152;

        $r5[92] = 238;

        $r5[93] = 154;

        $r5[94] = 167;

        $r5[95] = 45;

        $r5[96] = 79;

        $r5[97] = 158;

        $r5[98] = 142;

        $r5[99] = 172;

        $r5[100] = 224;

        $r5[101] = 198;

        $r5[102] = 73;

        $r5[103] = 70;

        $r5[104] = 41;

        $r5[105] = 244;

        $r5[106] = 148;

        $r5[107] = 138;

        $r5[108] = 175;

        $r5[109] = 225;

        $r5[110] = 91;

        $r5[111] = 195;

        $r5[112] = 179;

        $r5[113] = 123;

        $r5[114] = 87;

        $r5[115] = 209;

        $r5[116] = 124;

        $r5[117] = 156;

        $r5[118] = 237;

        $r5[119] = 135;

        $r5[120] = 64;

        $r5[121] = 140;

        $r5[122] = 226;

        $r5[123] = 203;

        $r5[124] = 147;

        $r5[125] = 20;

        $r5[126] = 201;

        $r5[127] = 97;

        $r5[128] = 46;

        $r5[129] = 229;

        $r5[130] = 204;

        $r5[131] = 246;

        $r5[132] = 94;

        $r5[133] = 168;

        $r5[134] = 92;

        $r5[135] = 214;

        $r5[136] = 117;

        $r5[137] = 141;

        $r5[138] = 98;

        $r5[139] = 149;

        $r5[140] = 88;

        $r5[141] = 105;

        $r5[142] = 118;

        $r5[143] = 161;

        $r5[144] = 74;

        $r5[145] = 181;

        $r5[146] = 85;

        $r5[147] = 9;

        $r5[148] = 120;

        $r5[149] = 51;

        $r5[150] = 130;

        $r5[151] = 215;

        $r5[152] = 221;

        $r5[153] = 121;

        $r5[154] = 245;

        $r5[155] = 27;

        $r5[156] = 11;

        $r5[157] = 222;

        $r5[158] = 38;

        $r5[159] = 33;

        $r5[160] = 40;

        $r5[161] = 116;

        $r5[162] = 4;

        $r5[163] = 151;

        $r5[164] = 86;

        $r5[165] = 223;

        $r5[166] = 60;

        $r5[167] = 240;

        $r5[168] = 55;

        $r5[169] = 57;

        $r5[170] = 220;

        $r5[171] = 255;

        $r5[172] = 6;

        $r5[173] = 164;

        $r5[174] = 234;

        $r5[175] = 66;

        $r5[176] = 8;

        $r5[177] = 218;

        $r5[178] = 180;

        $r5[179] = 113;

        $r5[180] = 176;

        $r5[181] = 207;

        $r5[182] = 18;

        $r5[183] = 122;

        $r5[184] = 78;

        $r5[185] = 250;

        $r5[186] = 108;

        $r5[187] = 29;

        $r5[188] = 132;

        $r5[189] = 0;

        $r5[190] = 200;

        $r5[191] = 127;

        $r5[192] = 145;

        $r5[193] = 69;

        $r5[194] = 170;

        $r5[195] = 43;

        $r5[196] = 194;

        $r5[197] = 177;

        $r5[198] = 143;

        $r5[199] = 213;

        $r5[200] = 186;

        $r5[201] = 242;

        $r5[202] = 173;

        $r5[203] = 25;

        $r5[204] = 178;

        $r5[205] = 103;

        $r5[206] = 54;

        $r5[207] = 247;

        $r5[208] = 15;

        $r5[209] = 10;

        $r5[210] = 146;

        $r5[211] = 125;

        $r5[212] = 227;

        $r5[213] = 157;

        $r5[214] = 233;

        $r5[215] = 144;

        $r5[216] = 62;

        $r5[217] = 35;

        $r5[218] = 39;

        $r5[219] = 102;

        $r5[220] = 19;

        $r5[221] = 236;

        $r5[222] = 129;

        $r5[223] = 21;

        $r5[224] = 189;

        $r5[225] = 34;

        $r5[226] = 191;

        $r5[227] = 159;

        $r5[228] = 126;

        $r5[229] = 169;

        $r5[230] = 81;

        $r5[231] = 75;

        $r5[232] = 76;

        $r5[233] = 251;

        $r5[234] = 2;

        $r5[235] = 211;

        $r5[236] = 112;

        $r5[237] = 134;

        $r5[238] = 49;

        $r5[239] = 231;

        $r5[240] = 59;

        $r5[241] = 5;

        $r5[242] = 3;

        $r5[243] = 84;

        $r5[244] = 96;

        $r5[245] = 72;

        $r5[246] = 101;

        $r5[247] = 24;

        $r5[248] = 210;

        $r5[249] = 205;

        $r5[250] = 95;

        $r5[251] = 50;

        $r5[252] = 136;

        $r5[253] = 14;

        $r5[254] = 53;

        $r5[255] = 253;

        <org.spongycastle.cms.bc.EnvelopedDataHelper: short[] rc2Ekb> = $r5;

        return;
    }
    void <init>()
    {
        org.spongycastle.cms.bc.EnvelopedDataHelper r0;

        r0 := @this: org.spongycastle.cms.bc.EnvelopedDataHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static org.spongycastle.crypto.BufferedBlockCipher createCipher(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.asn1.ASN1ObjectIdentifier $r0, $r1;
        boolean $z0;
        org.spongycastle.crypto.modes.CBCBlockCipher r2;
        org.spongycastle.crypto.engines.AESEngine $r3;
        org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher $r4;
        org.spongycastle.crypto.paddings.PKCS7Padding $r5;
        org.spongycastle.crypto.engines.DESedeEngine $r6;
        org.spongycastle.crypto.engines.DESEngine $r7;
        org.spongycastle.crypto.engines.RC2Engine $r8;
        org.spongycastle.cms.CMSException $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r1 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes128_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r1 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes192_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r1 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes256_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

     label1:
        r2 = new org.spongycastle.crypto.modes.CBCBlockCipher;

        $r3 = new org.spongycastle.crypto.engines.AESEngine;

        specialinvoke $r3.<org.spongycastle.crypto.engines.AESEngine: void <init>()>();

        specialinvoke r2.<org.spongycastle.crypto.modes.CBCBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>($r3);

     label2:
        $r4 = new org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r5 = new org.spongycastle.crypto.paddings.PKCS7Padding;

        specialinvoke $r5.<org.spongycastle.crypto.paddings.PKCS7Padding: void <init>()>();

        specialinvoke $r4.<org.spongycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher,org.spongycastle.crypto.paddings.BlockCipherPadding)>(r2, $r5);

        return $r4;

     label3:
        $r1 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier des_EDE3_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label4;

        r2 = new org.spongycastle.crypto.modes.CBCBlockCipher;

        $r6 = new org.spongycastle.crypto.engines.DESedeEngine;

        specialinvoke $r6.<org.spongycastle.crypto.engines.DESedeEngine: void <init>()>();

        specialinvoke r2.<org.spongycastle.crypto.modes.CBCBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>($r6);

        goto label2;

     label4:
        $r1 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier desCBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label5;

        r2 = new org.spongycastle.crypto.modes.CBCBlockCipher;

        $r7 = new org.spongycastle.crypto.engines.DESEngine;

        specialinvoke $r7.<org.spongycastle.crypto.engines.DESEngine: void <init>()>();

        specialinvoke r2.<org.spongycastle.crypto.modes.CBCBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>($r7);

        goto label2;

     label5:
        $r1 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier RC2_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label6;

        r2 = new org.spongycastle.crypto.modes.CBCBlockCipher;

        $r8 = new org.spongycastle.crypto.engines.RC2Engine;

        specialinvoke $r8.<org.spongycastle.crypto.engines.RC2Engine: void <init>()>();

        specialinvoke r2.<org.spongycastle.crypto.modes.CBCBlockCipher: void <init>(org.spongycastle.crypto.BlockCipher)>($r8);

        goto label2;

     label6:
        $r9 = new org.spongycastle.cms.CMSException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot recognise cipher: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>($r11);

        throw $r9;
    }
    private org.spongycastle.crypto.CipherKeyGenerator createCipherKeyGenerator(java.security.SecureRandom, int)
    {
        org.spongycastle.cms.bc.EnvelopedDataHelper r0;
        java.security.SecureRandom $r1;
        int $i0;
        org.spongycastle.crypto.CipherKeyGenerator r2;
        org.spongycastle.crypto.KeyGenerationParameters $r3;

        r0 := @this: org.spongycastle.cms.bc.EnvelopedDataHelper;

        $r1 := @parameter0: java.security.SecureRandom;

        $i0 := @parameter1: int;

        r2 = new org.spongycastle.crypto.CipherKeyGenerator;

        specialinvoke r2.<org.spongycastle.crypto.CipherKeyGenerator: void <init>()>();

        $r3 = new org.spongycastle.crypto.KeyGenerationParameters;

        specialinvoke $r3.<org.spongycastle.crypto.KeyGenerationParameters: void <init>(java.security.SecureRandom,int)>($r1, $i0);

        virtualinvoke r2.<org.spongycastle.crypto.CipherKeyGenerator: void init(org.spongycastle.crypto.KeyGenerationParameters)>($r3);

        return r2;
    }
    static java.lang.Object createContentCipher(boolean, org.spongycastle.crypto.CipherParameters, org.spongycastle.asn1.x509.AlgorithmIdentifier) throws org.spongycastle.cms.CMSException
    {
        boolean $z0, $z1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r0;
        org.spongycastle.crypto.CipherParameters r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2, $r3;
        org.spongycastle.crypto.engines.RC4Engine r4;
        org.spongycastle.crypto.BufferedBlockCipher $r5;
        org.spongycastle.asn1.ASN1Encodable $r6;
        org.spongycastle.asn1.ASN1Primitive $r7;
        org.spongycastle.crypto.params.ParametersWithIV $r8;
        org.spongycastle.asn1.ASN1OctetString $r9;
        byte[] $r10;
        org.spongycastle.asn1.misc.CAST5CBCParameters $r11;
        org.spongycastle.asn1.pkcs.RC2CBCParameter $r12;
        org.spongycastle.crypto.params.RC2Parameters $r13;
        org.spongycastle.crypto.params.KeyParameter r14;
        short[] $r15;
        java.math.BigInteger $r16;
        int $i0;
        short $s1;
        org.spongycastle.cms.CMSException $r17;

        $z0 := @parameter0: boolean;

        r1 := @parameter1: org.spongycastle.crypto.CipherParameters;

        $r0 := @parameter2: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 = virtualinvoke $r0.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rc4>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        r4 = new org.spongycastle.crypto.engines.RC4Engine;

        specialinvoke r4.<org.spongycastle.crypto.engines.RC4Engine: void <init>()>();

        interfaceinvoke r4.<org.spongycastle.crypto.StreamCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, r1);

        return r4;

     label1:
        $r3 = virtualinvoke $r0.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r5 = staticinvoke <org.spongycastle.cms.bc.EnvelopedDataHelper: org.spongycastle.crypto.BufferedBlockCipher createCipher(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r3);

        $r6 = virtualinvoke $r0.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r7 = interfaceinvoke $r6.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        if $r7 == null goto label6;

        $z1 = $r7 instanceof org.spongycastle.asn1.ASN1Null;

        if $z1 != 0 goto label6;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier DES_EDE3_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier IDEA_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES128_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES192_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES256_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA128_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA192_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA256_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier SEED_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r3 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier desCBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

     label2:
        $r8 = new org.spongycastle.crypto.params.ParametersWithIV;

        $r9 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r7);

        $r10 = virtualinvoke $r9.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r8.<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[])>(r1, $r10);

        virtualinvoke $r5.<org.spongycastle.crypto.BufferedBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r8);

        return $r5;

     label3:
        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAST5_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label4;

        $r11 = staticinvoke <org.spongycastle.asn1.misc.CAST5CBCParameters: org.spongycastle.asn1.misc.CAST5CBCParameters getInstance(java.lang.Object)>($r7);

        $r8 = new org.spongycastle.crypto.params.ParametersWithIV;

        $r10 = virtualinvoke $r11.<org.spongycastle.asn1.misc.CAST5CBCParameters: byte[] getIV()>();

        specialinvoke $r8.<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[])>(r1, $r10);

        virtualinvoke $r5.<org.spongycastle.crypto.BufferedBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r8);

        return $r5;

     label4:
        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier RC2_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label5;

        $r12 = staticinvoke <org.spongycastle.asn1.pkcs.RC2CBCParameter: org.spongycastle.asn1.pkcs.RC2CBCParameter getInstance(java.lang.Object)>($r7);

        $r8 = new org.spongycastle.crypto.params.ParametersWithIV;

        $r13 = new org.spongycastle.crypto.params.RC2Parameters;

        r14 = (org.spongycastle.crypto.params.KeyParameter) r1;

        $r10 = virtualinvoke r14.<org.spongycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $r15 = <org.spongycastle.cms.bc.EnvelopedDataHelper: short[] rc2Ekb>;

        $r16 = virtualinvoke $r12.<org.spongycastle.asn1.pkcs.RC2CBCParameter: java.math.BigInteger getRC2ParameterVersion()>();

        $i0 = virtualinvoke $r16.<java.math.BigInteger: int intValue()>();

        $s1 = $r15[$i0];

        specialinvoke $r13.<org.spongycastle.crypto.params.RC2Parameters: void <init>(byte[],int)>($r10, $s1);

        $r10 = virtualinvoke $r12.<org.spongycastle.asn1.pkcs.RC2CBCParameter: byte[] getIV()>();

        specialinvoke $r8.<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[])>($r13, $r10);

        virtualinvoke $r5.<org.spongycastle.crypto.BufferedBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r8);

        return $r5;

     label5:
        $r17 = new org.spongycastle.cms.CMSException;

        specialinvoke $r17.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("cannot match parameters");

        throw $r17;

     label6:
        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier DES_EDE3_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label7;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier IDEA_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label7;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAST5_CBC>;

        $z1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label8;

     label7:
        $r8 = new org.spongycastle.crypto.params.ParametersWithIV;

        $r10 = newarray (byte)[8];

        specialinvoke $r8.<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[])>(r1, $r10);

        virtualinvoke $r5.<org.spongycastle.crypto.BufferedBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r8);

        return $r5;

     label8:
        virtualinvoke $r5.<org.spongycastle.crypto.BufferedBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, r1);

        return $r5;
    }
    static org.spongycastle.crypto.Wrapper createRFC3211Wrapper(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.asn1.ASN1ObjectIdentifier $r0, $r1;
        boolean $z0;
        org.spongycastle.crypto.engines.RFC3211WrapEngine $r2;
        org.spongycastle.crypto.engines.AESEngine $r3;
        org.spongycastle.crypto.engines.DESedeEngine $r4;
        org.spongycastle.crypto.engines.DESEngine $r5;
        org.spongycastle.crypto.engines.RC2Engine $r6;
        org.spongycastle.cms.CMSException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r1 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes128_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r1 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes192_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $r1 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes256_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

     label1:
        $r2 = new org.spongycastle.crypto.engines.RFC3211WrapEngine;

        $r3 = new org.spongycastle.crypto.engines.AESEngine;

        specialinvoke $r3.<org.spongycastle.crypto.engines.AESEngine: void <init>()>();

        specialinvoke $r2.<org.spongycastle.crypto.engines.RFC3211WrapEngine: void <init>(org.spongycastle.crypto.BlockCipher)>($r3);

        return $r2;

     label2:
        $r1 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier des_EDE3_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        $r2 = new org.spongycastle.crypto.engines.RFC3211WrapEngine;

        $r4 = new org.spongycastle.crypto.engines.DESedeEngine;

        specialinvoke $r4.<org.spongycastle.crypto.engines.DESedeEngine: void <init>()>();

        specialinvoke $r2.<org.spongycastle.crypto.engines.RFC3211WrapEngine: void <init>(org.spongycastle.crypto.BlockCipher)>($r4);

        return $r2;

     label3:
        $r1 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier desCBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label4;

        $r2 = new org.spongycastle.crypto.engines.RFC3211WrapEngine;

        $r5 = new org.spongycastle.crypto.engines.DESEngine;

        specialinvoke $r5.<org.spongycastle.crypto.engines.DESEngine: void <init>()>();

        specialinvoke $r2.<org.spongycastle.crypto.engines.RFC3211WrapEngine: void <init>(org.spongycastle.crypto.BlockCipher)>($r5);

        return $r2;

     label4:
        $r1 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier RC2_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label5;

        $r2 = new org.spongycastle.crypto.engines.RFC3211WrapEngine;

        $r6 = new org.spongycastle.crypto.engines.RC2Engine;

        specialinvoke $r6.<org.spongycastle.crypto.engines.RC2Engine: void <init>()>();

        specialinvoke $r2.<org.spongycastle.crypto.engines.RFC3211WrapEngine: void <init>(org.spongycastle.crypto.BlockCipher)>($r6);

        return $r2;

     label5:
        $r7 = new org.spongycastle.cms.CMSException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot recognise wrapper: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>($r9);

        throw $r7;
    }
    org.spongycastle.crypto.CipherKeyGenerator createKeyGenerator(org.spongycastle.asn1.ASN1ObjectIdentifier, java.security.SecureRandom) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.bc.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r3;
        java.security.SecureRandom $r2;
        boolean $z0;
        org.spongycastle.crypto.CipherKeyGenerator $r4;
        org.spongycastle.crypto.generators.DESedeKeyGenerator r5;
        org.spongycastle.crypto.KeyGenerationParameters $r6;
        org.spongycastle.crypto.generators.DESKeyGenerator r7;
        org.spongycastle.cms.CMSException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        r0 := @this: org.spongycastle.cms.bc.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.security.SecureRandom;

        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes128_CBC>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label01;

        $r4 = specialinvoke r0.<org.spongycastle.cms.bc.EnvelopedDataHelper: org.spongycastle.crypto.CipherKeyGenerator createCipherKeyGenerator(java.security.SecureRandom,int)>($r2, 128);

        return $r4;

     label01:
        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes192_CBC>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label02;

        $r4 = specialinvoke r0.<org.spongycastle.cms.bc.EnvelopedDataHelper: org.spongycastle.crypto.CipherKeyGenerator createCipherKeyGenerator(java.security.SecureRandom,int)>($r2, 192);

        return $r4;

     label02:
        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes256_CBC>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label03;

        $r4 = specialinvoke r0.<org.spongycastle.cms.bc.EnvelopedDataHelper: org.spongycastle.crypto.CipherKeyGenerator createCipherKeyGenerator(java.security.SecureRandom,int)>($r2, 256);

        return $r4;

     label03:
        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier des_EDE3_CBC>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label04;

        r5 = new org.spongycastle.crypto.generators.DESedeKeyGenerator;

        specialinvoke r5.<org.spongycastle.crypto.generators.DESedeKeyGenerator: void <init>()>();

        $r6 = new org.spongycastle.crypto.KeyGenerationParameters;

        specialinvoke $r6.<org.spongycastle.crypto.KeyGenerationParameters: void <init>(java.security.SecureRandom,int)>($r2, 192);

        virtualinvoke r5.<org.spongycastle.crypto.generators.DESedeKeyGenerator: void init(org.spongycastle.crypto.KeyGenerationParameters)>($r6);

        return r5;

     label04:
        $r3 = <org.spongycastle.asn1.ntt.NTTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_camellia128_cbc>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label05;

        $r4 = specialinvoke r0.<org.spongycastle.cms.bc.EnvelopedDataHelper: org.spongycastle.crypto.CipherKeyGenerator createCipherKeyGenerator(java.security.SecureRandom,int)>($r2, 128);

        return $r4;

     label05:
        $r3 = <org.spongycastle.asn1.ntt.NTTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_camellia192_cbc>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label06;

        $r4 = specialinvoke r0.<org.spongycastle.cms.bc.EnvelopedDataHelper: org.spongycastle.crypto.CipherKeyGenerator createCipherKeyGenerator(java.security.SecureRandom,int)>($r2, 192);

        return $r4;

     label06:
        $r3 = <org.spongycastle.asn1.ntt.NTTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_camellia256_cbc>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label07;

        $r4 = specialinvoke r0.<org.spongycastle.cms.bc.EnvelopedDataHelper: org.spongycastle.crypto.CipherKeyGenerator createCipherKeyGenerator(java.security.SecureRandom,int)>($r2, 256);

        return $r4;

     label07:
        $r3 = <org.spongycastle.asn1.kisa.KISAObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_seedCBC>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label08;

        $r4 = specialinvoke r0.<org.spongycastle.cms.bc.EnvelopedDataHelper: org.spongycastle.crypto.CipherKeyGenerator createCipherKeyGenerator(java.security.SecureRandom,int)>($r2, 128);

        return $r4;

     label08:
        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAST5_CBC>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label09;

        $r4 = specialinvoke r0.<org.spongycastle.cms.bc.EnvelopedDataHelper: org.spongycastle.crypto.CipherKeyGenerator createCipherKeyGenerator(java.security.SecureRandom,int)>($r2, 128);

        return $r4;

     label09:
        $r3 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier desCBC>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label10;

        r7 = new org.spongycastle.crypto.generators.DESKeyGenerator;

        specialinvoke r7.<org.spongycastle.crypto.generators.DESKeyGenerator: void <init>()>();

        $r6 = new org.spongycastle.crypto.KeyGenerationParameters;

        specialinvoke $r6.<org.spongycastle.crypto.KeyGenerationParameters: void <init>(java.security.SecureRandom,int)>($r2, 64);

        virtualinvoke r7.<org.spongycastle.crypto.generators.DESKeyGenerator: void init(org.spongycastle.crypto.KeyGenerationParameters)>($r6);

        return r7;

     label10:
        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rc4>;

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label11;

        $r4 = specialinvoke r0.<org.spongycastle.cms.bc.EnvelopedDataHelper: org.spongycastle.crypto.CipherKeyGenerator createCipherKeyGenerator(java.security.SecureRandom,int)>($r2, 128);

        return $r4;

     label11:
        $r8 = new org.spongycastle.cms.CMSException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot recognise cipher: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>($r10);

        throw $r8;
    }
    org.spongycastle.asn1.x509.AlgorithmIdentifier generateAlgorithmIdentifier(org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.crypto.CipherParameters, java.security.SecureRandom) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.bc.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r5;
        java.security.SecureRandom $r2;
        org.spongycastle.asn1.misc.CAST5CBCParameters r3;
        org.spongycastle.crypto.CipherParameters r4;
        boolean $z0;
        byte[] r6, $r10;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r7;
        org.spongycastle.asn1.DEROctetString $r8;
        org.spongycastle.crypto.params.KeyParameter r9;
        int $i0;
        org.spongycastle.asn1.DERNull $r11;
        org.spongycastle.cms.CMSException $r12;

        r0 := @this: org.spongycastle.cms.bc.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        r4 := @parameter1: org.spongycastle.crypto.CipherParameters;

        $r2 := @parameter2: java.security.SecureRandom;

        $r5 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES128_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r5 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES192_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r5 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES256_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r5 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA128_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r5 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA192_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r5 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA256_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r5 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier SEED_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

     label1:
        r6 = newarray (byte)[16];

        virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>(r6);

        $r7 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r8 = new org.spongycastle.asn1.DEROctetString;

        specialinvoke $r8.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>(r6);

        specialinvoke $r7.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, $r8);

        return $r7;

     label2:
        $r5 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier DES_EDE3_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label3;

        $r5 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier IDEA_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label3;

        $r5 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier desCBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

     label3:
        r6 = newarray (byte)[8];

        virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>(r6);

        $r7 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r8 = new org.spongycastle.asn1.DEROctetString;

        specialinvoke $r8.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>(r6);

        specialinvoke $r7.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, $r8);

        return $r7;

     label4:
        $r5 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAST5_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label5;

        r6 = newarray (byte)[8];

        virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>(r6);

        r3 = new org.spongycastle.asn1.misc.CAST5CBCParameters;

        r9 = (org.spongycastle.crypto.params.KeyParameter) r4;

        $r10 = virtualinvoke r9.<org.spongycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $i0 = lengthof $r10;

        $i0 = $i0 * 8;

        specialinvoke r3.<org.spongycastle.asn1.misc.CAST5CBCParameters: void <init>(byte[],int)>(r6, $i0);

        $r7 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        specialinvoke $r7.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, r3);

        return $r7;

     label5:
        $r5 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rc4>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label6;

        $r7 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r11 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        specialinvoke $r7.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, $r11);

        return $r7;

     label6:
        $r12 = new org.spongycastle.cms.CMSException;

        specialinvoke $r12.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("unable to match algorithm");

        throw $r12;
    }
    java.lang.String getBaseCipherName(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.cms.bc.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r4;

        r0 := @this: org.spongycastle.cms.bc.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = <org.spongycastle.cms.bc.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.String) $r3;

        if r4 != null goto label1;

        r4 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

     label1:
        return r4;
    }
