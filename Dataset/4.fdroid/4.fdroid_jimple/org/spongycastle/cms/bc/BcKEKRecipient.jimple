org.spongycastle.cms.bc.BcKEKRecipient extends java.lang.Object implements org.spongycastle.cms.KEKRecipient
private org.spongycastle.operator.SymmetricKeyUnwrapper unwrapper
    public void <init>(org.spongycastle.operator.bc.BcSymmetricKeyUnwrapper)
    {
        org.spongycastle.cms.bc.BcKEKRecipient r0;
        org.spongycastle.operator.bc.BcSymmetricKeyUnwrapper $r1;

        r0 := @this: org.spongycastle.cms.bc.BcKEKRecipient;

        $r1 := @parameter0: org.spongycastle.operator.bc.BcSymmetricKeyUnwrapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cms.bc.BcKEKRecipient: org.spongycastle.operator.SymmetricKeyUnwrapper unwrapper> = $r1;

        return;
    }
    protected org.spongycastle.crypto.CipherParameters extractSecretKey(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.asn1.x509.AlgorithmIdentifier, byte[]) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.bc.BcKEKRecipient r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1, $r2;
        byte[] $r3;
        org.spongycastle.operator.OperatorException r4;
        org.spongycastle.operator.SymmetricKeyUnwrapper $r5;
        org.spongycastle.operator.GenericKey $r6;
        org.spongycastle.crypto.CipherParameters $r7;
        org.spongycastle.cms.CMSException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        r0 := @this: org.spongycastle.cms.bc.BcKEKRecipient;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 := @parameter2: byte[];

        $r5 = r0.<org.spongycastle.cms.bc.BcKEKRecipient: org.spongycastle.operator.SymmetricKeyUnwrapper unwrapper>;

     label1:
        $r6 = virtualinvoke $r5.<org.spongycastle.operator.SymmetricKeyUnwrapper: org.spongycastle.operator.GenericKey generateUnwrappedKey(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r2, $r3);

        $r7 = staticinvoke <org.spongycastle.cms.bc.CMSUtils: org.spongycastle.crypto.CipherParameters getBcKey(org.spongycastle.operator.GenericKey)>($r6);

     label2:
        return $r7;

     label3:
        r4 := @caughtexception;

        $r8 = new org.spongycastle.cms.CMSException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception unwrapping key: ");

        $r10 = virtualinvoke r4.<org.spongycastle.operator.OperatorException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r10, r4);

        throw $r8;

        catch org.spongycastle.operator.OperatorException from label1 to label2 with label3;
    }
