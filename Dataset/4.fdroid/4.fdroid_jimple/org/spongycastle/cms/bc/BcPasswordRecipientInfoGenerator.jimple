org.spongycastle.cms.bc.BcPasswordRecipientInfoGenerator extends org.spongycastle.cms.PasswordRecipientInfoGenerator
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier, char[])
    {
        org.spongycastle.cms.bc.BcPasswordRecipientInfoGenerator r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        char[] $r2;

        r0 := @this: org.spongycastle.cms.bc.BcPasswordRecipientInfoGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: char[];

        specialinvoke r0.<org.spongycastle.cms.PasswordRecipientInfoGenerator: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,char[])>($r1, $r2);

        return;
    }
    protected byte[] calculateDerivedKey(int, org.spongycastle.asn1.x509.AlgorithmIdentifier, int) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.bc.BcPasswordRecipientInfoGenerator r0;
        int $i0, $i1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.crypto.generators.PKCS5S2ParametersGenerator r2;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.pkcs.PBKDF2Params $r4;
        char[] $r5;
        byte[] $r6, $r7;
        java.math.BigInteger $r8;
        org.spongycastle.crypto.CipherParameters $r9;
        org.spongycastle.crypto.params.KeyParameter $r10;

        r0 := @this: org.spongycastle.cms.bc.BcPasswordRecipientInfoGenerator;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $i1 := @parameter2: int;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r4 = staticinvoke <org.spongycastle.asn1.pkcs.PBKDF2Params: org.spongycastle.asn1.pkcs.PBKDF2Params getInstance(java.lang.Object)>($r3);

        if $i0 != 0 goto label2;

        $r5 = r0.<org.spongycastle.cms.bc.BcPasswordRecipientInfoGenerator: char[] password>;

        $r6 = staticinvoke <org.spongycastle.crypto.PBEParametersGenerator: byte[] PKCS5PasswordToBytes(char[])>($r5);

     label1:
        r2 = new org.spongycastle.crypto.generators.PKCS5S2ParametersGenerator;

        specialinvoke r2.<org.spongycastle.crypto.generators.PKCS5S2ParametersGenerator: void <init>()>();

        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.pkcs.PBKDF2Params: byte[] getSalt()>();

        $r8 = virtualinvoke $r4.<org.spongycastle.asn1.pkcs.PBKDF2Params: java.math.BigInteger getIterationCount()>();

        $i0 = virtualinvoke $r8.<java.math.BigInteger: int intValue()>();

        virtualinvoke r2.<org.spongycastle.crypto.generators.PKCS5S2ParametersGenerator: void init(byte[],byte[],int)>($r6, $r7, $i0);

        $r9 = virtualinvoke r2.<org.spongycastle.crypto.generators.PKCS5S2ParametersGenerator: org.spongycastle.crypto.CipherParameters generateDerivedParameters(int)>($i1);

        $r10 = (org.spongycastle.crypto.params.KeyParameter) $r9;

        $r6 = virtualinvoke $r10.<org.spongycastle.crypto.params.KeyParameter: byte[] getKey()>();

        return $r6;

     label2:
        $r5 = r0.<org.spongycastle.cms.bc.BcPasswordRecipientInfoGenerator: char[] password>;

        $r6 = staticinvoke <org.spongycastle.crypto.PBEParametersGenerator: byte[] PKCS5PasswordToUTF8Bytes(char[])>($r5);

        goto label1;
    }
    public byte[] generateEncryptedBytes(org.spongycastle.asn1.x509.AlgorithmIdentifier, byte[], org.spongycastle.operator.GenericKey) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.bc.BcPasswordRecipientInfoGenerator r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        byte[] $r2, $r6;
        org.spongycastle.operator.GenericKey $r3;
        org.spongycastle.crypto.params.KeyParameter $r4;
        org.spongycastle.crypto.CipherParameters $r5;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r7;
        org.spongycastle.crypto.Wrapper $r8;
        org.spongycastle.crypto.params.ParametersWithIV $r9;
        org.spongycastle.asn1.ASN1Encodable $r10;
        org.spongycastle.asn1.ASN1OctetString $r11;
        int $i0;

        r0 := @this: org.spongycastle.cms.bc.BcPasswordRecipientInfoGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: org.spongycastle.operator.GenericKey;

        $r5 = staticinvoke <org.spongycastle.cms.bc.CMSUtils: org.spongycastle.crypto.CipherParameters getBcKey(org.spongycastle.operator.GenericKey)>($r3);

        $r4 = (org.spongycastle.crypto.params.KeyParameter) $r5;

        $r6 = virtualinvoke $r4.<org.spongycastle.crypto.params.KeyParameter: byte[] getKey()>();

        $r7 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r8 = staticinvoke <org.spongycastle.cms.bc.EnvelopedDataHelper: org.spongycastle.crypto.Wrapper createRFC3211Wrapper(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r7);

        $r9 = new org.spongycastle.crypto.params.ParametersWithIV;

        $r4 = new org.spongycastle.crypto.params.KeyParameter;

        specialinvoke $r4.<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[])>($r2);

        $r10 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r11 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r10);

        $r2 = virtualinvoke $r11.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r9.<org.spongycastle.crypto.params.ParametersWithIV: void <init>(org.spongycastle.crypto.CipherParameters,byte[])>($r4, $r2);

        interfaceinvoke $r8.<org.spongycastle.crypto.Wrapper: void init(boolean,org.spongycastle.crypto.CipherParameters)>(1, $r9);

        $i0 = lengthof $r6;

        $r2 = interfaceinvoke $r8.<org.spongycastle.crypto.Wrapper: byte[] wrap(byte[],int,int)>($r6, 0, $i0);

        return $r2;
    }
