org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder extends java.lang.Object
private static java.util.Map keySizes
private final org.spongycastle.asn1.ASN1ObjectIdentifier encryptionOID
private org.spongycastle.cms.bc.EnvelopedDataHelper helper
private final int keySize
private java.security.SecureRandom random
    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Map $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        java.lang.Integer $r3;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: java.util.Map keySizes> = $r0;

        $r1 = <org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: java.util.Map keySizes>;

        $r2 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES128_CBC>;

        $r3 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(128);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r1 = <org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: java.util.Map keySizes>;

        $r2 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES192_CBC>;

        $r3 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(192);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r1 = <org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: java.util.Map keySizes>;

        $r2 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES256_CBC>;

        $r3 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(256);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r1 = <org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: java.util.Map keySizes>;

        $r2 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA128_CBC>;

        $r3 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(128);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r1 = <org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: java.util.Map keySizes>;

        $r2 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA192_CBC>;

        $r3 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(192);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r1 = <org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: java.util.Map keySizes>;

        $r2 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA256_CBC>;

        $r3 = staticinvoke <org.spongycastle.util.Integers: java.lang.Integer valueOf(int)>(256);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        int $i0;

        r0 := @this: org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $i0 = staticinvoke <org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: int getKeySize(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        specialinvoke r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,int)>($r1, $i0);

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier, int)
    {
        org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        int $i0;
        org.spongycastle.cms.bc.EnvelopedDataHelper $r2;

        r0 := @this: org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.spongycastle.cms.bc.EnvelopedDataHelper;

        specialinvoke $r2.<org.spongycastle.cms.bc.EnvelopedDataHelper: void <init>()>();

        r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: org.spongycastle.cms.bc.EnvelopedDataHelper helper> = $r2;

        r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier encryptionOID> = $r1;

        r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: int keySize> = $i0;

        return;
    }
    static org.spongycastle.cms.bc.EnvelopedDataHelper access$000(org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder)
    {
        org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder $r0;
        org.spongycastle.cms.bc.EnvelopedDataHelper r1;

        $r0 := @parameter0: org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder;

        r1 = $r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: org.spongycastle.cms.bc.EnvelopedDataHelper helper>;

        return r1;
    }
    private static int getKeySize(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.asn1.ASN1ObjectIdentifier $r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.Integer r3;
        int $i0;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r1 = <org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: java.util.Map keySizes>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r3 = (java.lang.Integer) $r2;

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        return -1;
    }
    public org.spongycastle.operator.OutputEncryptor build() throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder r0;
        org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        int $i0;
        java.security.SecureRandom $r3;

        r0 := @this: org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder;

        $r1 = new org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor;

        $r2 = r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier encryptionOID>;

        $i0 = r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: int keySize>;

        $r3 = r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: java.security.SecureRandom random>;

        specialinvoke $r1.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: void <init>(org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder,org.spongycastle.asn1.ASN1ObjectIdentifier,int,java.security.SecureRandom)>(r0, $r2, $i0, $r3);

        return $r1;
    }
    public org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder setSecureRandom(java.security.SecureRandom)
    {
        org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder r0;
        java.security.SecureRandom $r1;

        r0 := @this: org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder;

        $r1 := @parameter0: java.security.SecureRandom;

        r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: java.security.SecureRandom random> = $r1;

        return r0;
    }
