org.spongycastle.cms.bc.BcRSAKeyTransRecipientInfoGenerator extends org.spongycastle.cms.bc.BcKeyTransRecipientInfoGenerator
    public void <init>(org.spongycastle.cert.X509CertificateHolder) throws java.io.IOException
    {
        org.spongycastle.cms.bc.BcRSAKeyTransRecipientInfoGenerator r0;
        org.spongycastle.cert.X509CertificateHolder $r1;
        org.spongycastle.operator.bc.BcRSAAsymmetricKeyWrapper $r2;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;

        r0 := @this: org.spongycastle.cms.bc.BcRSAKeyTransRecipientInfoGenerator;

        $r1 := @parameter0: org.spongycastle.cert.X509CertificateHolder;

        $r2 = new org.spongycastle.operator.bc.BcRSAAsymmetricKeyWrapper;

        $r3 = virtualinvoke $r1.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

        specialinvoke $r2.<org.spongycastle.operator.bc.BcRSAAsymmetricKeyWrapper: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r4, $r3);

        specialinvoke r0.<org.spongycastle.cms.bc.BcKeyTransRecipientInfoGenerator: void <init>(org.spongycastle.cert.X509CertificateHolder,org.spongycastle.operator.bc.BcAsymmetricKeyWrapper)>($r1, $r2);

        return;
    }
    public void <init>(byte[], org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.crypto.params.AsymmetricKeyParameter)
    {
        org.spongycastle.cms.bc.BcRSAKeyTransRecipientInfoGenerator r0;
        byte[] $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.crypto.params.AsymmetricKeyParameter $r3;
        org.spongycastle.operator.bc.BcRSAAsymmetricKeyWrapper $r4;

        r0 := @this: org.spongycastle.cms.bc.BcRSAKeyTransRecipientInfoGenerator;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 := @parameter2: org.spongycastle.crypto.params.AsymmetricKeyParameter;

        $r4 = new org.spongycastle.operator.bc.BcRSAAsymmetricKeyWrapper;

        specialinvoke $r4.<org.spongycastle.operator.bc.BcRSAAsymmetricKeyWrapper: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.crypto.params.AsymmetricKeyParameter)>($r2, $r3);

        specialinvoke r0.<org.spongycastle.cms.bc.BcKeyTransRecipientInfoGenerator: void <init>(byte[],org.spongycastle.operator.bc.BcAsymmetricKeyWrapper)>($r1, $r4);

        return;
    }
