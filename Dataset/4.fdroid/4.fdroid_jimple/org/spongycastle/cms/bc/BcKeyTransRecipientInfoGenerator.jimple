org.spongycastle.cms.bc.BcKeyTransRecipientInfoGenerator extends org.spongycastle.cms.KeyTransRecipientInfoGenerator
    public void <init>(org.spongycastle.cert.X509CertificateHolder, org.spongycastle.operator.bc.BcAsymmetricKeyWrapper)
    {
        org.spongycastle.cms.bc.BcKeyTransRecipientInfoGenerator r0;
        org.spongycastle.cert.X509CertificateHolder $r1;
        org.spongycastle.operator.bc.BcAsymmetricKeyWrapper $r2;
        org.spongycastle.asn1.cms.IssuerAndSerialNumber $r3;
        org.spongycastle.asn1.x509.Certificate $r4;

        r0 := @this: org.spongycastle.cms.bc.BcKeyTransRecipientInfoGenerator;

        $r1 := @parameter0: org.spongycastle.cert.X509CertificateHolder;

        $r2 := @parameter1: org.spongycastle.operator.bc.BcAsymmetricKeyWrapper;

        $r3 = new org.spongycastle.asn1.cms.IssuerAndSerialNumber;

        $r4 = virtualinvoke $r1.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate toASN1Structure()>();

        specialinvoke $r3.<org.spongycastle.asn1.cms.IssuerAndSerialNumber: void <init>(org.spongycastle.asn1.x509.Certificate)>($r4);

        specialinvoke r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: void <init>(org.spongycastle.asn1.cms.IssuerAndSerialNumber,org.spongycastle.operator.AsymmetricKeyWrapper)>($r3, $r2);

        return;
    }
    public void <init>(byte[], org.spongycastle.operator.bc.BcAsymmetricKeyWrapper)
    {
        org.spongycastle.cms.bc.BcKeyTransRecipientInfoGenerator r0;
        byte[] $r1;
        org.spongycastle.operator.bc.BcAsymmetricKeyWrapper $r2;

        r0 := @this: org.spongycastle.cms.bc.BcKeyTransRecipientInfoGenerator;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: org.spongycastle.operator.bc.BcAsymmetricKeyWrapper;

        specialinvoke r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: void <init>(byte[],org.spongycastle.operator.AsymmetricKeyWrapper)>($r1, $r2);

        return;
    }
