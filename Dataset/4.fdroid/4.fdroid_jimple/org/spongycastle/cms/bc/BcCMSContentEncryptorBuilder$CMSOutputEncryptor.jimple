org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor extends java.lang.Object implements org.spongycastle.operator.OutputEncryptor
private org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmIdentifier
private java.lang.Object cipher
private org.spongycastle.crypto.params.KeyParameter encKey
final org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder this$0
    void <init>(org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder, org.spongycastle.asn1.ASN1ObjectIdentifier, int, java.security.SecureRandom) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor r0;
        org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        int $i0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        java.security.SecureRandom r4;
        org.spongycastle.cms.bc.EnvelopedDataHelper $r5;
        org.spongycastle.crypto.CipherKeyGenerator $r6;
        org.spongycastle.crypto.params.KeyParameter $r7;
        byte[] $r8;
        java.lang.Object $r9;

        r0 := @this: org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor;

        $r1 := @parameter0: org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $i0 := @parameter2: int;

        r4 := @parameter3: java.security.SecureRandom;

        r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r4 != null goto label1;

        r4 = new java.security.SecureRandom;

        specialinvoke r4.<java.security.SecureRandom: void <init>()>();

     label1:
        $r5 = staticinvoke <org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: org.spongycastle.cms.bc.EnvelopedDataHelper access$000(org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder)>($r1);

        $r6 = virtualinvoke $r5.<org.spongycastle.cms.bc.EnvelopedDataHelper: org.spongycastle.crypto.CipherKeyGenerator createKeyGenerator(org.spongycastle.asn1.ASN1ObjectIdentifier,java.security.SecureRandom)>($r2, r4);

        $r7 = new org.spongycastle.crypto.params.KeyParameter;

        $r8 = virtualinvoke $r6.<org.spongycastle.crypto.CipherKeyGenerator: byte[] generateKey()>();

        specialinvoke $r7.<org.spongycastle.crypto.params.KeyParameter: void <init>(byte[])>($r8);

        r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: org.spongycastle.crypto.params.KeyParameter encKey> = $r7;

        $r5 = staticinvoke <org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: org.spongycastle.cms.bc.EnvelopedDataHelper access$000(org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder)>($r1);

        $r7 = r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: org.spongycastle.crypto.params.KeyParameter encKey>;

        $r3 = virtualinvoke $r5.<org.spongycastle.cms.bc.EnvelopedDataHelper: org.spongycastle.asn1.x509.AlgorithmIdentifier generateAlgorithmIdentifier(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.crypto.CipherParameters,java.security.SecureRandom)>($r2, $r7, r4);

        r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmIdentifier> = $r3;

        staticinvoke <org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder: org.spongycastle.cms.bc.EnvelopedDataHelper access$000(org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder)>($r1);

        $r7 = r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: org.spongycastle.crypto.params.KeyParameter encKey>;

        $r3 = r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmIdentifier>;

        $r9 = staticinvoke <org.spongycastle.cms.bc.EnvelopedDataHelper: java.lang.Object createContentCipher(boolean,org.spongycastle.crypto.CipherParameters,org.spongycastle.asn1.x509.AlgorithmIdentifier)>(1, $r7, $r3);

        r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: java.lang.Object cipher> = $r9;

        return;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()
    {
        org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor;

        r1 = r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmIdentifier>;

        return r1;
    }
    public org.spongycastle.operator.GenericKey getKey()
    {
        org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor r0;
        org.spongycastle.operator.GenericKey $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        byte[] $r3;
        org.spongycastle.crypto.params.KeyParameter $r4;

        r0 := @this: org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor;

        $r1 = new org.spongycastle.operator.GenericKey;

        $r2 = r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmIdentifier>;

        $r4 = r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: org.spongycastle.crypto.params.KeyParameter encKey>;

        $r3 = virtualinvoke $r4.<org.spongycastle.crypto.params.KeyParameter: byte[] getKey()>();

        specialinvoke $r1.<org.spongycastle.operator.GenericKey: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r2, $r3);

        return $r1;
    }
    public java.io.OutputStream getOutputStream(java.io.OutputStream)
    {
        org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor r0;
        java.io.OutputStream $r1;
        java.lang.Object $r2;
        boolean $z0;
        org.spongycastle.crypto.io.CipherOutputStream $r3;
        org.spongycastle.crypto.BufferedBlockCipher $r4;
        org.spongycastle.crypto.StreamCipher $r5;

        r0 := @this: org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: java.lang.Object cipher>;

        $z0 = $r2 instanceof org.spongycastle.crypto.BufferedBlockCipher;

        if $z0 == 0 goto label1;

        $r3 = new org.spongycastle.crypto.io.CipherOutputStream;

        $r2 = r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: java.lang.Object cipher>;

        $r4 = (org.spongycastle.crypto.BufferedBlockCipher) $r2;

        specialinvoke $r3.<org.spongycastle.crypto.io.CipherOutputStream: void <init>(java.io.OutputStream,org.spongycastle.crypto.BufferedBlockCipher)>($r1, $r4);

        return $r3;

     label1:
        $r3 = new org.spongycastle.crypto.io.CipherOutputStream;

        $r2 = r0.<org.spongycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: java.lang.Object cipher>;

        $r5 = (org.spongycastle.crypto.StreamCipher) $r2;

        specialinvoke $r3.<org.spongycastle.crypto.io.CipherOutputStream: void <init>(java.io.OutputStream,org.spongycastle.crypto.StreamCipher)>($r1, $r5);

        return $r3;
    }
