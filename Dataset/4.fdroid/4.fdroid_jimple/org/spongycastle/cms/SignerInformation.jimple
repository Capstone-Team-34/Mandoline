org.spongycastle.cms.SignerInformation extends java.lang.Object
private final org.spongycastle.cms.CMSProcessable content
private final org.spongycastle.asn1.ASN1ObjectIdentifier contentType
protected final org.spongycastle.asn1.x509.AlgorithmIdentifier digestAlgorithm
protected final org.spongycastle.asn1.x509.AlgorithmIdentifier encryptionAlgorithm
protected final org.spongycastle.asn1.cms.SignerInfo info
private final boolean isCounterSignature
private byte[] resultDigest
private final org.spongycastle.cms.SignerId sid
private final byte[] signature
protected final org.spongycastle.asn1.ASN1Set signedAttributeSet
private org.spongycastle.asn1.cms.AttributeTable signedAttributeValues
protected final org.spongycastle.asn1.ASN1Set unsignedAttributeSet
private org.spongycastle.asn1.cms.AttributeTable unsignedAttributeValues
    void <init>(org.spongycastle.asn1.cms.SignerInfo, org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.cms.CMSProcessable, byte[])
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.asn1.cms.SignerInfo $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        org.spongycastle.cms.CMSProcessable $r3;
        byte[] $r4, $r9;
        boolean $z0;
        org.spongycastle.asn1.cms.SignerIdentifier $r5;
        org.spongycastle.asn1.ASN1Encodable $r6;
        org.spongycastle.asn1.ASN1OctetString $r7;
        org.spongycastle.cms.SignerId $r8;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r10;
        org.spongycastle.asn1.ASN1Set $r11;
        org.spongycastle.asn1.cms.IssuerAndSerialNumber $r12;
        org.spongycastle.asn1.x500.X500Name $r13;
        org.spongycastle.asn1.ASN1Integer $r14;
        java.math.BigInteger $r15;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r1 := @parameter0: org.spongycastle.asn1.cms.SignerInfo;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 := @parameter2: org.spongycastle.cms.CMSProcessable;

        $r4 := @parameter3: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info> = $r1;

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1ObjectIdentifier contentType> = $r2;

        if $r2 != null goto label3;

        $z0 = 1;

     label1:
        r0.<org.spongycastle.cms.SignerInformation: boolean isCounterSignature> = $z0;

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.cms.SignerIdentifier getSID()>();

        $z0 = virtualinvoke $r5.<org.spongycastle.asn1.cms.SignerIdentifier: boolean isTagged()>();

        if $z0 == 0 goto label4;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.cms.SignerIdentifier: org.spongycastle.asn1.ASN1Encodable getId()>();

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r6);

        $r8 = new org.spongycastle.cms.SignerId;

        $r9 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r8.<org.spongycastle.cms.SignerId: void <init>(byte[])>($r9);

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.SignerId sid> = $r8;

     label2:
        $r10 = virtualinvoke $r1.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()>();

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier digestAlgorithm> = $r10;

        $r11 = virtualinvoke $r1.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.ASN1Set getAuthenticatedAttributes()>();

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set signedAttributeSet> = $r11;

        $r11 = virtualinvoke $r1.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.ASN1Set getUnauthenticatedAttributes()>();

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set unsignedAttributeSet> = $r11;

        $r10 = virtualinvoke $r1.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestEncryptionAlgorithm()>();

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier encryptionAlgorithm> = $r10;

        $r7 = virtualinvoke $r1.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.ASN1OctetString getEncryptedDigest()>();

        $r9 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r0.<org.spongycastle.cms.SignerInformation: byte[] signature> = $r9;

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.CMSProcessable content> = $r3;

        r0.<org.spongycastle.cms.SignerInformation: byte[] resultDigest> = $r4;

        return;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.cms.SignerIdentifier: org.spongycastle.asn1.ASN1Encodable getId()>();

        $r12 = staticinvoke <org.spongycastle.asn1.cms.IssuerAndSerialNumber: org.spongycastle.asn1.cms.IssuerAndSerialNumber getInstance(java.lang.Object)>($r6);

        $r8 = new org.spongycastle.cms.SignerId;

        $r13 = virtualinvoke $r12.<org.spongycastle.asn1.cms.IssuerAndSerialNumber: org.spongycastle.asn1.x500.X500Name getName()>();

        $r14 = virtualinvoke $r12.<org.spongycastle.asn1.cms.IssuerAndSerialNumber: org.spongycastle.asn1.ASN1Integer getSerialNumber()>();

        $r15 = virtualinvoke $r14.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        specialinvoke $r8.<org.spongycastle.cms.SignerId: void <init>(org.spongycastle.asn1.x500.X500Name,java.math.BigInteger)>($r13, $r15);

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.SignerId sid> = $r8;

        goto label2;
    }
    protected void <init>(org.spongycastle.cms.SignerInformation)
    {
        org.spongycastle.cms.SignerInformation r0, $r1;
        org.spongycastle.asn1.cms.SignerInfo $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        boolean $z0;
        org.spongycastle.cms.SignerId $r4;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r5;
        org.spongycastle.asn1.ASN1Set $r6;
        org.spongycastle.asn1.ASN1OctetString $r7;
        byte[] $r8;
        org.spongycastle.cms.CMSProcessable $r9;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r1 := @parameter0: org.spongycastle.cms.SignerInformation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = $r1.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info>;

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info> = $r2;

        $r3 = $r1.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1ObjectIdentifier contentType>;

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1ObjectIdentifier contentType> = $r3;

        $z0 = virtualinvoke $r1.<org.spongycastle.cms.SignerInformation: boolean isCounterSignature()>();

        r0.<org.spongycastle.cms.SignerInformation: boolean isCounterSignature> = $z0;

        $r4 = virtualinvoke $r1.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.SignerId getSID()>();

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.SignerId sid> = $r4;

        $r2 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info>;

        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()>();

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier digestAlgorithm> = $r5;

        $r2 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info>;

        $r6 = virtualinvoke $r2.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.ASN1Set getAuthenticatedAttributes()>();

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set signedAttributeSet> = $r6;

        $r2 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info>;

        $r6 = virtualinvoke $r2.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.ASN1Set getUnauthenticatedAttributes()>();

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set unsignedAttributeSet> = $r6;

        $r2 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info>;

        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestEncryptionAlgorithm()>();

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier encryptionAlgorithm> = $r5;

        $r2 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info>;

        $r7 = virtualinvoke $r2.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.ASN1OctetString getEncryptedDigest()>();

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r0.<org.spongycastle.cms.SignerInformation: byte[] signature> = $r8;

        $r9 = $r1.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.CMSProcessable content>;

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.CMSProcessable content> = $r9;

        $r8 = $r1.<org.spongycastle.cms.SignerInformation: byte[] resultDigest>;

        r0.<org.spongycastle.cms.SignerInformation: byte[] resultDigest> = $r8;

        return;
    }
    public static org.spongycastle.cms.SignerInformation addCounterSigners(org.spongycastle.cms.SignerInformation, org.spongycastle.cms.SignerInformationStore)
    {
        org.spongycastle.cms.SignerInformation $r0, $r5;
        org.spongycastle.cms.SignerInformationStore $r1;
        org.spongycastle.asn1.DERSet $r2;
        org.spongycastle.asn1.cms.SignerInfo r3, $r11;
        org.spongycastle.asn1.ASN1EncodableVector r4, r7;
        org.spongycastle.asn1.cms.AttributeTable $r6;
        java.util.Collection $r8;
        java.util.Iterator $r9;
        boolean $z0;
        java.lang.Object $r10;
        org.spongycastle.asn1.cms.Attribute $r12;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r13;
        org.spongycastle.asn1.cms.SignerIdentifier $r14;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r15, $r17;
        org.spongycastle.asn1.ASN1Set $r16;
        org.spongycastle.asn1.ASN1OctetString $r18;
        org.spongycastle.cms.CMSProcessable $r19;

        $r0 := @parameter0: org.spongycastle.cms.SignerInformation;

        $r1 := @parameter1: org.spongycastle.cms.SignerInformationStore;

        r3 = $r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info>;

        $r6 = virtualinvoke $r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.AttributeTable getUnsignedAttributes()>();

        if $r6 == null goto label3;

        r7 = virtualinvoke $r6.<org.spongycastle.asn1.cms.AttributeTable: org.spongycastle.asn1.ASN1EncodableVector toASN1EncodableVector()>();

     label1:
        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r8 = virtualinvoke $r1.<org.spongycastle.cms.SignerInformationStore: java.util.Collection getSigners()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.spongycastle.cms.SignerInformation) $r10;

        $r11 = virtualinvoke $r5.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo toASN1Structure()>();

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r11);

        goto label2;

     label3:
        r7 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r7.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        goto label1;

     label4:
        $r12 = new org.spongycastle.asn1.cms.Attribute;

        $r13 = <org.spongycastle.asn1.cms.CMSAttributes: org.spongycastle.asn1.ASN1ObjectIdentifier counterSignature>;

        $r2 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r2.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        specialinvoke $r12.<org.spongycastle.asn1.cms.Attribute: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Set)>($r13, $r2);

        virtualinvoke r7.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r12);

        $r5 = new org.spongycastle.cms.SignerInformation;

        $r11 = new org.spongycastle.asn1.cms.SignerInfo;

        $r14 = virtualinvoke r3.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.cms.SignerIdentifier getSID()>();

        $r15 = virtualinvoke r3.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()>();

        $r16 = virtualinvoke r3.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.ASN1Set getAuthenticatedAttributes()>();

        $r17 = virtualinvoke r3.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestEncryptionAlgorithm()>();

        $r18 = virtualinvoke r3.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.ASN1OctetString getEncryptedDigest()>();

        $r2 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r2.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r7);

        specialinvoke $r11.<org.spongycastle.asn1.cms.SignerInfo: void <init>(org.spongycastle.asn1.cms.SignerIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Set,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1OctetString,org.spongycastle.asn1.ASN1Set)>($r14, $r15, $r16, $r17, $r18, $r2);

        $r13 = $r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1ObjectIdentifier contentType>;

        $r19 = $r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.CMSProcessable content>;

        specialinvoke $r5.<org.spongycastle.cms.SignerInformation: void <init>(org.spongycastle.asn1.cms.SignerInfo,org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.cms.CMSProcessable,byte[])>($r11, $r13, $r19, null);

        return $r5;
    }
    private boolean doVerify(org.spongycastle.cms.SignerInformationVerifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.cms.SignerInformationVerifier $r1;
        org.spongycastle.util.io.TeeOutputStream r2;
        org.spongycastle.asn1.x509.DigestInfo r3;
        org.spongycastle.cms.CMSSignedHelper $r4;
        java.lang.String $r5;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r6, $r8;
        org.spongycastle.asn1.cms.SignerInfo $r7;
        org.spongycastle.operator.ContentVerifier $r9;
        java.io.OutputStream $r10, $r14;
        byte[] $r11, $r32;
        org.spongycastle.operator.DigestCalculator $r12;
        org.spongycastle.cms.CMSProcessable $r13;
        org.spongycastle.asn1.ASN1Set $r15;
        boolean $z0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r16, $r23;
        org.spongycastle.asn1.ASN1Primitive $r17;
        org.spongycastle.cms.CMSException $r18;
        org.spongycastle.operator.OperatorCreationException r19, r22;
        java.lang.StringBuilder $r20;
        java.io.IOException r21, r36;
        org.spongycastle.asn1.cms.AttributeTable $r24, $r25;
        org.spongycastle.asn1.ASN1EncodableVector $r26;
        int $i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r27;
        org.spongycastle.asn1.cms.Attribute $r28;
        org.spongycastle.asn1.ASN1Encodable[] $r29;
        org.spongycastle.asn1.cms.CMSAlgorithmProtection $r30;
        org.spongycastle.asn1.ASN1OctetString r31;
        org.spongycastle.cms.CMSSignerDigestMismatchException $r33;
        org.spongycastle.operator.RawContentVerifier $r34;
        org.spongycastle.asn1.DERNull $r35;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r1 := @parameter0: org.spongycastle.cms.SignerInformationVerifier;

        $r4 = <org.spongycastle.cms.CMSSignedHelper: org.spongycastle.cms.CMSSignedHelper INSTANCE>;

        $r5 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: java.lang.String getEncryptionAlgOID()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.cms.CMSSignedHelper: java.lang.String getEncryptionAlgName(java.lang.String)>($r5);

        $r6 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier encryptionAlgorithm>;

        $r7 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info>;

     label01:
        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()>();

        $r9 = virtualinvoke $r1.<org.spongycastle.cms.SignerInformationVerifier: org.spongycastle.operator.ContentVerifier getContentVerifier(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r6, $r8);

     label02:
        $r10 = interfaceinvoke $r9.<org.spongycastle.operator.ContentVerifier: java.io.OutputStream getOutputStream()>();

     label03:
        $r11 = r0.<org.spongycastle.cms.SignerInformation: byte[] resultDigest>;

        if $r11 != null goto label31;

     label04:
        $r6 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmID()>();

        $r12 = virtualinvoke $r1.<org.spongycastle.cms.SignerInformationVerifier: org.spongycastle.operator.DigestCalculator getDigestCalculator(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r6);

     label05:
        $r13 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.CMSProcessable content>;

        if $r13 == null goto label25;

     label06:
        $r14 = interfaceinvoke $r12.<org.spongycastle.operator.DigestCalculator: java.io.OutputStream getOutputStream()>();

     label07:
        $r15 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set signedAttributeSet>;

        if $r15 != null goto label21;

        $z0 = $r9 instanceof org.spongycastle.operator.RawContentVerifier;

        if $z0 == 0 goto label15;

        $r13 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.CMSProcessable content>;

     label08:
        interfaceinvoke $r13.<org.spongycastle.cms.CMSProcessable: void write(java.io.OutputStream)>($r14);

     label09:
        virtualinvoke $r14.<java.io.OutputStream: void close()>();

     label10:
        $r11 = interfaceinvoke $r12.<org.spongycastle.operator.DigestCalculator: byte[] getDigest()>();

     label11:
        r0.<org.spongycastle.cms.SignerInformation: byte[] resultDigest> = $r11;

     label12:
        virtualinvoke $r10.<java.io.OutputStream: void close()>();

     label13:
        $r16 = <org.spongycastle.asn1.cms.CMSAttributes: org.spongycastle.asn1.ASN1ObjectIdentifier contentType>;

        $r17 = specialinvoke r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Primitive getSingleValuedSignedAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>($r16, "content-type");

        if $r17 != null goto label36;

        $z0 = r0.<org.spongycastle.cms.SignerInformation: boolean isCounterSignature>;

        if $z0 != 0 goto label39;

        $r15 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set signedAttributeSet>;

        if $r15 == null goto label39;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("The content-type attribute type MUST be present whenever signed attributes are present in signed-data");

        throw $r18;

     label14:
        r19 := @caughtexception;

        $r18 = new org.spongycastle.cms.CMSException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t create content verifier: ");

        $r5 = virtualinvoke r19.<org.spongycastle.operator.OperatorCreationException: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r5, r19);

        throw $r18;

     label15:
        r2 = new org.spongycastle.util.io.TeeOutputStream;

     label16:
        specialinvoke r2.<org.spongycastle.util.io.TeeOutputStream: void <init>(java.io.OutputStream,java.io.OutputStream)>($r14, $r10);

     label17:
        $r13 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.CMSProcessable content>;

     label18:
        interfaceinvoke $r13.<org.spongycastle.cms.CMSProcessable: void write(java.io.OutputStream)>(r2);

        virtualinvoke r2.<java.io.OutputStream: void close()>();

     label19:
        goto label09;

     label20:
        r21 := @caughtexception;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("can\'t process mime object to create signature.", r21);

        throw $r18;

     label21:
        $r13 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.CMSProcessable content>;

     label22:
        interfaceinvoke $r13.<org.spongycastle.cms.CMSProcessable: void write(java.io.OutputStream)>($r14);

        $r11 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: byte[] getEncodedSignedAttributes()>();

        virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11);

     label23:
        goto label09;

     label24:
        r22 := @caughtexception;

        $r18 = new org.spongycastle.cms.CMSException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t create digest calculator: ");

        $r5 = virtualinvoke r22.<org.spongycastle.operator.OperatorCreationException: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r5, r22);

        throw $r18;

     label25:
        $r15 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set signedAttributeSet>;

        if $r15 == null goto label28;

     label26:
        $r11 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: byte[] getEncodedSignedAttributes()>();

        virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11);

     label27:
        goto label10;

     label28:
        $r18 = new org.spongycastle.cms.CMSException;

     label29:
        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("data not encapsulated in signature - use detached constructor.");

     label30:
        throw $r18;

     label31:
        $r15 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set signedAttributeSet>;

        if $r15 != null goto label34;

        $r13 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.CMSProcessable content>;

        if $r13 == null goto label12;

        $r13 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.CMSProcessable content>;

     label32:
        interfaceinvoke $r13.<org.spongycastle.cms.CMSProcessable: void write(java.io.OutputStream)>($r10);

     label33:
        goto label12;

     label34:
        $r11 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: byte[] getEncodedSignedAttributes()>();

        virtualinvoke $r10.<java.io.OutputStream: void write(byte[])>($r11);

     label35:
        goto label12;

     label36:
        $z0 = r0.<org.spongycastle.cms.SignerInformation: boolean isCounterSignature>;

        if $z0 == 0 goto label37;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("[For counter signatures,] the signedAttributes field MUST NOT contain a content-type attribute");

        throw $r18;

     label37:
        $z0 = $r17 instanceof org.spongycastle.asn1.ASN1ObjectIdentifier;

        if $z0 != 0 goto label38;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("content-type attribute value not of ASN.1 type \'OBJECT IDENTIFIER\'");

        throw $r18;

     label38:
        $r16 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r17;

        $r23 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1ObjectIdentifier contentType>;

        $z0 = virtualinvoke $r16.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r23);

        if $z0 != 0 goto label39;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("content-type attribute value does not match eContentType");

        throw $r18;

     label39:
        $r24 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.AttributeTable getSignedAttributes()>();

        $r25 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.AttributeTable getUnsignedAttributes()>();

        if $r25 == null goto label40;

        $r16 = <org.spongycastle.asn1.cms.CMSAttributes: org.spongycastle.asn1.ASN1ObjectIdentifier cmsAlgorithmProtect>;

        $r26 = virtualinvoke $r25.<org.spongycastle.asn1.cms.AttributeTable: org.spongycastle.asn1.ASN1EncodableVector getAll(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r16);

        $i0 = virtualinvoke $r26.<org.spongycastle.asn1.ASN1EncodableVector: int size()>();

        if $i0 <= 0 goto label40;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("A cmsAlgorithmProtect attribute MUST be a signed attribute");

        throw $r18;

     label40:
        if $r24 == null goto label44;

        $r16 = <org.spongycastle.asn1.cms.CMSAttributes: org.spongycastle.asn1.ASN1ObjectIdentifier cmsAlgorithmProtect>;

        $r26 = virtualinvoke $r24.<org.spongycastle.asn1.cms.AttributeTable: org.spongycastle.asn1.ASN1EncodableVector getAll(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r16);

        $i0 = virtualinvoke $r26.<org.spongycastle.asn1.ASN1EncodableVector: int size()>();

        if $i0 <= 1 goto label41;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("Only one instance of a cmsAlgorithmProtect attribute can be present");

        throw $r18;

     label41:
        $i0 = virtualinvoke $r26.<org.spongycastle.asn1.ASN1EncodableVector: int size()>();

        if $i0 <= 0 goto label44;

        $r27 = virtualinvoke $r26.<org.spongycastle.asn1.ASN1EncodableVector: org.spongycastle.asn1.ASN1Encodable get(int)>(0);

        $r28 = staticinvoke <org.spongycastle.asn1.cms.Attribute: org.spongycastle.asn1.cms.Attribute getInstance(java.lang.Object)>($r27);

        $r15 = virtualinvoke $r28.<org.spongycastle.asn1.cms.Attribute: org.spongycastle.asn1.ASN1Set getAttrValues()>();

        $i0 = virtualinvoke $r15.<org.spongycastle.asn1.ASN1Set: int size()>();

        if $i0 == 1 goto label42;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("A cmsAlgorithmProtect attribute MUST contain exactly one value");

        throw $r18;

     label42:
        $r29 = virtualinvoke $r28.<org.spongycastle.asn1.cms.Attribute: org.spongycastle.asn1.ASN1Encodable[] getAttributeValues()>();

        $r27 = $r29[0];

        $r30 = staticinvoke <org.spongycastle.asn1.cms.CMSAlgorithmProtection: org.spongycastle.asn1.cms.CMSAlgorithmProtection getInstance(java.lang.Object)>($r27);

        $r6 = virtualinvoke $r30.<org.spongycastle.asn1.cms.CMSAlgorithmProtection: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()>();

        $r7 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info>;

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()>();

        $z0 = staticinvoke <org.spongycastle.cms.CMSUtils: boolean isEquivalent(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r6, $r8);

        if $z0 != 0 goto label43;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("CMS Algorithm Identifier Protection check failed for digestAlgorithm");

        throw $r18;

     label43:
        $r6 = virtualinvoke $r30.<org.spongycastle.asn1.cms.CMSAlgorithmProtection: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r7 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info>;

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestEncryptionAlgorithm()>();

        $z0 = staticinvoke <org.spongycastle.cms.CMSUtils: boolean isEquivalent(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r6, $r8);

        if $z0 != 0 goto label44;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("CMS Algorithm Identifier Protection check failed for signatureAlgorithm");

        throw $r18;

     label44:
        $r16 = <org.spongycastle.asn1.cms.CMSAttributes: org.spongycastle.asn1.ASN1ObjectIdentifier messageDigest>;

        $r17 = specialinvoke r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Primitive getSingleValuedSignedAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>($r16, "message-digest");

        if $r17 != null goto label45;

        $r15 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set signedAttributeSet>;

        if $r15 == null goto label47;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("the message-digest signed attribute type MUST be present when there are any signed attributes present");

        throw $r18;

     label45:
        $z0 = $r17 instanceof org.spongycastle.asn1.ASN1OctetString;

        if $z0 != 0 goto label46;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("message-digest attribute value not of ASN.1 type \'OCTET STRING\'");

        throw $r18;

     label46:
        r31 = (org.spongycastle.asn1.ASN1OctetString) $r17;

        $r11 = r0.<org.spongycastle.cms.SignerInformation: byte[] resultDigest>;

        $r32 = virtualinvoke r31.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>($r11, $r32);

        if $z0 != 0 goto label47;

        $r33 = new org.spongycastle.cms.CMSSignerDigestMismatchException;

        specialinvoke $r33.<org.spongycastle.cms.CMSSignerDigestMismatchException: void <init>(java.lang.String)>("message-digest attribute value does not match calculated value");

        throw $r33;

     label47:
        if $r24 == null goto label48;

        $r16 = <org.spongycastle.asn1.cms.CMSAttributes: org.spongycastle.asn1.ASN1ObjectIdentifier counterSignature>;

        $r26 = virtualinvoke $r24.<org.spongycastle.asn1.cms.AttributeTable: org.spongycastle.asn1.ASN1EncodableVector getAll(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r16);

        $i0 = virtualinvoke $r26.<org.spongycastle.asn1.ASN1EncodableVector: int size()>();

        if $i0 <= 0 goto label48;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("A countersignature attribute MUST NOT be a signed attribute");

        throw $r18;

     label48:
        $r24 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.AttributeTable getUnsignedAttributes()>();

        if $r24 == null goto label51;

        $r16 = <org.spongycastle.asn1.cms.CMSAttributes: org.spongycastle.asn1.ASN1ObjectIdentifier counterSignature>;

        $r26 = virtualinvoke $r24.<org.spongycastle.asn1.cms.AttributeTable: org.spongycastle.asn1.ASN1EncodableVector getAll(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r16);

        $i0 = 0;

     label49:
        $i1 = virtualinvoke $r26.<org.spongycastle.asn1.ASN1EncodableVector: int size()>();

        if $i0 >= $i1 goto label51;

        $r27 = virtualinvoke $r26.<org.spongycastle.asn1.ASN1EncodableVector: org.spongycastle.asn1.ASN1Encodable get(int)>($i0);

        $r28 = staticinvoke <org.spongycastle.asn1.cms.Attribute: org.spongycastle.asn1.cms.Attribute getInstance(java.lang.Object)>($r27);

        $r15 = virtualinvoke $r28.<org.spongycastle.asn1.cms.Attribute: org.spongycastle.asn1.ASN1Set getAttrValues()>();

        $i1 = virtualinvoke $r15.<org.spongycastle.asn1.ASN1Set: int size()>();

        if $i1 >= 1 goto label50;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("A countersignature attribute MUST contain at least one AttributeValue");

        throw $r18;

     label50:
        $i0 = $i0 + 1;

        goto label49;

     label51:
        $r15 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set signedAttributeSet>;

        if $r15 != null goto label63;

        $r11 = r0.<org.spongycastle.cms.SignerInformation: byte[] resultDigest>;

        if $r11 == null goto label63;

        $z0 = $r9 instanceof org.spongycastle.operator.RawContentVerifier;

        if $z0 == 0 goto label63;

        $r34 = (org.spongycastle.operator.RawContentVerifier) $r9;

     label52:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("RSA");

     label53:
        if $z0 == 0 goto label60;

        r3 = new org.spongycastle.asn1.x509.DigestInfo;

        $r6 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r8 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier digestAlgorithm>;

     label54:
        $r16 = virtualinvoke $r8.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

     label55:
        $r35 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

     label56:
        specialinvoke $r6.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r16, $r35);

     label57:
        $r11 = r0.<org.spongycastle.cms.SignerInformation: byte[] resultDigest>;

     label58:
        specialinvoke r3.<org.spongycastle.asn1.x509.DigestInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r6, $r11);

        $r11 = virtualinvoke r3.<org.spongycastle.asn1.x509.DigestInfo: byte[] getEncoded(java.lang.String)>("DER");

        $r32 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: byte[] getSignature()>();

        $z0 = interfaceinvoke $r34.<org.spongycastle.operator.RawContentVerifier: boolean verify(byte[],byte[])>($r11, $r32);

     label59:
        return $z0;

     label60:
        $r11 = r0.<org.spongycastle.cms.SignerInformation: byte[] resultDigest>;

     label61:
        $r32 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: byte[] getSignature()>();

        $z0 = interfaceinvoke $r34.<org.spongycastle.operator.RawContentVerifier: boolean verify(byte[],byte[])>($r11, $r32);

     label62:
        return $z0;

     label63:
        $r11 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: byte[] getSignature()>();

        $z0 = interfaceinvoke $r9.<org.spongycastle.operator.ContentVerifier: boolean verify(byte[])>($r11);

     label64:
        return $z0;

     label65:
        r36 := @caughtexception;

        $r18 = new org.spongycastle.cms.CMSException;

        specialinvoke $r18.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("can\'t process mime object to create signature.", r36);

        throw $r18;

        catch org.spongycastle.operator.OperatorCreationException from label01 to label02 with label14;
        catch java.io.IOException from label02 to label03 with label20;
        catch java.io.IOException from label04 to label05 with label20;
        catch java.io.IOException from label06 to label07 with label20;
        catch java.io.IOException from label08 to label11 with label20;
        catch java.io.IOException from label12 to label13 with label20;
        catch org.spongycastle.operator.OperatorCreationException from label02 to label03 with label24;
        catch org.spongycastle.operator.OperatorCreationException from label04 to label05 with label24;
        catch org.spongycastle.operator.OperatorCreationException from label06 to label07 with label24;
        catch org.spongycastle.operator.OperatorCreationException from label08 to label11 with label24;
        catch org.spongycastle.operator.OperatorCreationException from label12 to label13 with label24;
        catch java.io.IOException from label16 to label17 with label20;
        catch java.io.IOException from label18 to label19 with label20;
        catch org.spongycastle.operator.OperatorCreationException from label16 to label17 with label24;
        catch org.spongycastle.operator.OperatorCreationException from label18 to label19 with label24;
        catch java.io.IOException from label22 to label23 with label20;
        catch org.spongycastle.operator.OperatorCreationException from label22 to label23 with label24;
        catch java.io.IOException from label26 to label27 with label20;
        catch java.io.IOException from label29 to label30 with label20;
        catch java.io.IOException from label32 to label33 with label20;
        catch java.io.IOException from label34 to label35 with label20;
        catch org.spongycastle.operator.OperatorCreationException from label26 to label27 with label24;
        catch org.spongycastle.operator.OperatorCreationException from label29 to label30 with label24;
        catch org.spongycastle.operator.OperatorCreationException from label32 to label33 with label24;
        catch org.spongycastle.operator.OperatorCreationException from label34 to label35 with label24;
        catch java.io.IOException from label52 to label53 with label65;
        catch java.io.IOException from label54 to label55 with label65;
        catch java.io.IOException from label56 to label57 with label65;
        catch java.io.IOException from label58 to label59 with label65;
        catch java.io.IOException from label61 to label62 with label65;
        catch java.io.IOException from label63 to label64 with label65;
    }
    private byte[] encodeObj(org.spongycastle.asn1.ASN1Encodable) throws java.io.IOException
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Encodable;

        if $r1 == null goto label1;

        $r2 = interfaceinvoke $r1.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded()>();

        return $r3;

     label1:
        return null;
    }
    private org.spongycastle.asn1.cms.Time getSigningTime() throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.SignerInformation r0;
        java.lang.IllegalArgumentException r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        org.spongycastle.asn1.ASN1Primitive $r3;
        org.spongycastle.asn1.cms.Time $r4;
        org.spongycastle.cms.CMSException $r5;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r2 = <org.spongycastle.asn1.cms.CMSAttributes: org.spongycastle.asn1.ASN1ObjectIdentifier signingTime>;

        $r3 = specialinvoke r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Primitive getSingleValuedSignedAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>($r2, "signing-time");

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = staticinvoke <org.spongycastle.asn1.cms.Time: org.spongycastle.asn1.cms.Time getInstance(java.lang.Object)>($r3);

     label2:
        return $r4;

     label3:
        r1 := @caughtexception;

        $r5 = new org.spongycastle.cms.CMSException;

        specialinvoke $r5.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("signing-time attribute value not a valid \'Time\' structure");

        throw $r5;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }
    private org.spongycastle.asn1.ASN1Primitive getSingleValuedSignedAttribute(org.spongycastle.asn1.ASN1ObjectIdentifier, java.lang.String) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.lang.String $r2;
        org.spongycastle.asn1.cms.AttributeTable $r3;
        org.spongycastle.asn1.ASN1EncodableVector $r4;
        int $i0;
        org.spongycastle.cms.CMSException $r5;
        java.lang.StringBuilder $r6;
        org.spongycastle.asn1.ASN1Encodable $r7;
        org.spongycastle.asn1.cms.Attribute r8;
        org.spongycastle.asn1.ASN1Set $r9;
        org.spongycastle.asn1.ASN1Primitive $r10;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.AttributeTable getUnsignedAttributes()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.cms.AttributeTable: org.spongycastle.asn1.ASN1EncodableVector getAll(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        $i0 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1EncodableVector: int size()>();

        if $i0 <= 0 goto label1;

        $r5 = new org.spongycastle.cms.CMSException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attribute MUST NOT be an unsigned attribute");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label1:
        $r3 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.AttributeTable getSignedAttributes()>();

        if $r3 != null goto label3;

     label2:
        return null;

     label3:
        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.cms.AttributeTable: org.spongycastle.asn1.ASN1EncodableVector getAll(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        $i0 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1EncodableVector: int size()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label5;
            default: goto label4;
        };

     label4:
        $r5 = new org.spongycastle.cms.CMSException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The SignedAttributes in a signerInfo MUST NOT include multiple instances of the ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attribute");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label5:
        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1EncodableVector: org.spongycastle.asn1.ASN1Encodable get(int)>(0);

        r8 = (org.spongycastle.asn1.cms.Attribute) $r7;

        $r9 = virtualinvoke r8.<org.spongycastle.asn1.cms.Attribute: org.spongycastle.asn1.ASN1Set getAttrValues()>();

        $i0 = virtualinvoke $r9.<org.spongycastle.asn1.ASN1Set: int size()>();

        if $i0 == 1 goto label6;

        $r5 = new org.spongycastle.cms.CMSException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attribute MUST have a single attribute value");

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>($r2);

        throw $r5;

     label6:
        $r7 = virtualinvoke $r9.<org.spongycastle.asn1.ASN1Set: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r10 = interfaceinvoke $r7.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        return $r10;
    }
    public static org.spongycastle.cms.SignerInformation replaceUnsignedAttributes(org.spongycastle.cms.SignerInformation, org.spongycastle.asn1.cms.AttributeTable)
    {
        org.spongycastle.cms.SignerInformation $r0, $r3;
        org.spongycastle.asn1.cms.AttributeTable $r1;
        org.spongycastle.asn1.cms.SignerInfo r2, $r6;
        org.spongycastle.asn1.DERSet r4;
        org.spongycastle.asn1.ASN1EncodableVector $r5;
        org.spongycastle.asn1.cms.SignerIdentifier $r7;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r8, $r10;
        org.spongycastle.asn1.ASN1Set $r9;
        org.spongycastle.asn1.ASN1OctetString $r11;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r12;
        org.spongycastle.cms.CMSProcessable $r13;

        $r0 := @parameter0: org.spongycastle.cms.SignerInformation;

        $r1 := @parameter1: org.spongycastle.asn1.cms.AttributeTable;

        r2 = $r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info>;

        r4 = null;

        if $r1 == null goto label1;

        r4 = new org.spongycastle.asn1.DERSet;

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.cms.AttributeTable: org.spongycastle.asn1.ASN1EncodableVector toASN1EncodableVector()>();

        specialinvoke r4.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r5);

     label1:
        $r3 = new org.spongycastle.cms.SignerInformation;

        $r6 = new org.spongycastle.asn1.cms.SignerInfo;

        $r7 = virtualinvoke r2.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.cms.SignerIdentifier getSID()>();

        $r8 = virtualinvoke r2.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()>();

        $r9 = virtualinvoke r2.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.ASN1Set getAuthenticatedAttributes()>();

        $r10 = virtualinvoke r2.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestEncryptionAlgorithm()>();

        $r11 = virtualinvoke r2.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.ASN1OctetString getEncryptedDigest()>();

        specialinvoke $r6.<org.spongycastle.asn1.cms.SignerInfo: void <init>(org.spongycastle.asn1.cms.SignerIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Set,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1OctetString,org.spongycastle.asn1.ASN1Set)>($r7, $r8, $r9, $r10, $r11, r4);

        $r12 = $r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1ObjectIdentifier contentType>;

        $r13 = $r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.CMSProcessable content>;

        specialinvoke $r3.<org.spongycastle.cms.SignerInformation: void <init>(org.spongycastle.asn1.cms.SignerInfo,org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.cms.CMSProcessable,byte[])>($r6, $r12, $r13, null);

        return $r3;
    }
    public byte[] getContentDigest()
    {
        org.spongycastle.cms.SignerInformation r0;
        byte[] $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r1 = r0.<org.spongycastle.cms.SignerInformation: byte[] resultDigest>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("method can only be called after verify.");

        throw $r2;

     label1:
        $r1 = r0.<org.spongycastle.cms.SignerInformation: byte[] resultDigest>;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        return $r1;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier r1;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        r1 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1ObjectIdentifier contentType>;

        return r1;
    }
    public org.spongycastle.cms.SignerInformationStore getCounterSignatures()
    {
        org.spongycastle.cms.SignerInformation r0, $r12;
        java.util.ArrayList r1;
        org.spongycastle.asn1.cms.AttributeTable $r2;
        org.spongycastle.cms.SignerInformationStore $r3;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r4;
        org.spongycastle.asn1.ASN1EncodableVector $r5;
        int i0, $i1;
        org.spongycastle.asn1.ASN1Encodable $r6;
        org.spongycastle.asn1.cms.Attribute r7;
        org.spongycastle.asn1.ASN1Set $r8;
        java.util.Enumeration $r9;
        boolean $z0;
        java.lang.Object $r10;
        org.spongycastle.asn1.cms.SignerInfo $r11;
        org.spongycastle.cms.CMSProcessableByteArray $r13;
        byte[] $r14;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r2 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.AttributeTable getUnsignedAttributes()>();

        if $r2 != null goto label1;

        $r3 = new org.spongycastle.cms.SignerInformationStore;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>(int)>(0);

        specialinvoke $r3.<org.spongycastle.cms.SignerInformationStore: void <init>(java.util.Collection)>(r1);

        return $r3;

     label1:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r4 = <org.spongycastle.asn1.cms.CMSAttributes: org.spongycastle.asn1.ASN1ObjectIdentifier counterSignature>;

        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.cms.AttributeTable: org.spongycastle.asn1.ASN1EncodableVector getAll(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

        i0 = 0;

     label2:
        $i1 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1EncodableVector: int size()>();

        if i0 >= $i1 goto label6;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1EncodableVector: org.spongycastle.asn1.ASN1Encodable get(int)>(i0);

        r7 = (org.spongycastle.asn1.cms.Attribute) $r6;

        $r8 = virtualinvoke r7.<org.spongycastle.asn1.cms.Attribute: org.spongycastle.asn1.ASN1Set getAttrValues()>();

        $i1 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1Set: int size()>();

        if $i1 >= 1 goto label3;

     label3:
        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1Set: java.util.Enumeration getObjects()>();

     label4:
        $z0 = interfaceinvoke $r9.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke $r9.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r11 = staticinvoke <org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.cms.SignerInfo getInstance(java.lang.Object)>($r10);

        $r12 = new org.spongycastle.cms.SignerInformation;

        $r13 = new org.spongycastle.cms.CMSProcessableByteArray;

        $r14 = virtualinvoke r0.<org.spongycastle.cms.SignerInformation: byte[] getSignature()>();

        specialinvoke $r13.<org.spongycastle.cms.CMSProcessableByteArray: void <init>(byte[])>($r14);

        specialinvoke $r12.<org.spongycastle.cms.SignerInformation: void <init>(org.spongycastle.asn1.cms.SignerInfo,org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.cms.CMSProcessable,byte[])>($r11, null, $r13, null);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label4;

     label5:
        i0 = i0 + 1;

        goto label2;

     label6:
        $r3 = new org.spongycastle.cms.SignerInformationStore;

        specialinvoke $r3.<org.spongycastle.cms.SignerInformationStore: void <init>(java.util.Collection)>(r1);

        return $r3;
    }
    public java.lang.String getDigestAlgOID()
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        java.lang.String $r3;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r1 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier digestAlgorithm>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        return $r3;
    }
    public byte[] getDigestAlgParams()
    {
        org.spongycastle.cms.SignerInformation r0;
        java.lang.Exception r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1Encodable $r3;
        byte[] $r4;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        r0 := @this: org.spongycastle.cms.SignerInformation;

     label1:
        $r2 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier digestAlgorithm>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r4 = specialinvoke r0.<org.spongycastle.cms.SignerInformation: byte[] encodeObj(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label2:
        return $r4;

     label3:
        r1 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception getting digest parameters ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmID()
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        r1 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier digestAlgorithm>;

        return r1;
    }
    public byte[] getEncodedSignedAttributes() throws java.io.IOException
    {
        org.spongycastle.cms.SignerInformation r0;
        byte[] $r1;
        org.spongycastle.asn1.ASN1Set $r2;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r2 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set signedAttributeSet>;

        if $r2 == null goto label1;

        $r2 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set signedAttributeSet>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Set: byte[] getEncoded(java.lang.String)>("DER");

        return $r1;

     label1:
        return null;
    }
    public java.lang.String getEncryptionAlgOID()
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        java.lang.String $r3;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r1 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier encryptionAlgorithm>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        return $r3;
    }
    public byte[] getEncryptionAlgParams()
    {
        org.spongycastle.cms.SignerInformation r0;
        java.lang.Exception r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1Encodable $r3;
        byte[] $r4;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        r0 := @this: org.spongycastle.cms.SignerInformation;

     label1:
        $r2 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier encryptionAlgorithm>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r4 = specialinvoke r0.<org.spongycastle.cms.SignerInformation: byte[] encodeObj(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label2:
        return $r4;

     label3:
        r1 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception getting encryption parameters ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public org.spongycastle.cms.SignerId getSID()
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.cms.SignerId r1;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        r1 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.cms.SignerId sid>;

        return r1;
    }
    public byte[] getSignature()
    {
        org.spongycastle.cms.SignerInformation r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r1 = r0.<org.spongycastle.cms.SignerInformation: byte[] signature>;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        return $r1;
    }
    public org.spongycastle.asn1.cms.AttributeTable getSignedAttributes()
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.asn1.ASN1Set $r1;
        org.spongycastle.asn1.cms.AttributeTable $r2;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r1 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set signedAttributeSet>;

        if $r1 == null goto label1;

        $r2 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.AttributeTable signedAttributeValues>;

        if $r2 != null goto label1;

        $r2 = new org.spongycastle.asn1.cms.AttributeTable;

        $r1 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set signedAttributeSet>;

        specialinvoke $r2.<org.spongycastle.asn1.cms.AttributeTable: void <init>(org.spongycastle.asn1.ASN1Set)>($r1);

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.AttributeTable signedAttributeValues> = $r2;

     label1:
        $r2 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.AttributeTable signedAttributeValues>;

        return $r2;
    }
    public org.spongycastle.asn1.cms.AttributeTable getUnsignedAttributes()
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.asn1.ASN1Set $r1;
        org.spongycastle.asn1.cms.AttributeTable $r2;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r1 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set unsignedAttributeSet>;

        if $r1 == null goto label1;

        $r2 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.AttributeTable unsignedAttributeValues>;

        if $r2 != null goto label1;

        $r2 = new org.spongycastle.asn1.cms.AttributeTable;

        $r1 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.ASN1Set unsignedAttributeSet>;

        specialinvoke $r2.<org.spongycastle.asn1.cms.AttributeTable: void <init>(org.spongycastle.asn1.ASN1Set)>($r1);

        r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.AttributeTable unsignedAttributeValues> = $r2;

     label1:
        $r2 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.AttributeTable unsignedAttributeValues>;

        return $r2;
    }
    public int getVersion()
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.asn1.cms.SignerInfo $r1;
        org.spongycastle.asn1.ASN1Integer $r2;
        java.math.BigInteger $r3;
        int $i0;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r1 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.ASN1Integer getVersion()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int intValue()>();

        return $i0;
    }
    public boolean isCounterSignature()
    {
        org.spongycastle.cms.SignerInformation r0;
        boolean z0;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        z0 = r0.<org.spongycastle.cms.SignerInformation: boolean isCounterSignature>;

        return z0;
    }
    public org.spongycastle.asn1.cms.SignerInfo toASN1Structure()
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.asn1.cms.SignerInfo r1;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        r1 = r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo info>;

        return r1;
    }
    public boolean verify(org.spongycastle.cms.SignerInformationVerifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.SignerInformation r0;
        org.spongycastle.cms.SignerInformationVerifier $r1;
        org.spongycastle.asn1.cms.Time $r2;
        boolean $z0;
        org.spongycastle.cert.X509CertificateHolder $r3;
        java.util.Date $r4;
        org.spongycastle.cms.CMSVerifierCertificateNotValidException $r5;

        r0 := @this: org.spongycastle.cms.SignerInformation;

        $r1 := @parameter0: org.spongycastle.cms.SignerInformationVerifier;

        $r2 = specialinvoke r0.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.Time getSigningTime()>();

        $z0 = virtualinvoke $r1.<org.spongycastle.cms.SignerInformationVerifier: boolean hasAssociatedCertificate()>();

        if $z0 == 0 goto label1;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r1.<org.spongycastle.cms.SignerInformationVerifier: org.spongycastle.cert.X509CertificateHolder getAssociatedCertificate()>();

        $r4 = virtualinvoke $r2.<org.spongycastle.asn1.cms.Time: java.util.Date getDate()>();

        $z0 = virtualinvoke $r3.<org.spongycastle.cert.X509CertificateHolder: boolean isValidOn(java.util.Date)>($r4);

        if $z0 != 0 goto label1;

        $r5 = new org.spongycastle.cms.CMSVerifierCertificateNotValidException;

        specialinvoke $r5.<org.spongycastle.cms.CMSVerifierCertificateNotValidException: void <init>(java.lang.String)>("verifier not valid at signingTime");

        throw $r5;

     label1:
        $z0 = specialinvoke r0.<org.spongycastle.cms.SignerInformation: boolean doVerify(org.spongycastle.cms.SignerInformationVerifier)>($r1);

        return $z0;
    }
