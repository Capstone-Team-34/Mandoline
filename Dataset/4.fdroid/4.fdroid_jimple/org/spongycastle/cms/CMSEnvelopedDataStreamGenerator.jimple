org.spongycastle.cms.CMSEnvelopedDataStreamGenerator extends org.spongycastle.cms.CMSEnvelopedGenerator
private boolean _berEncodeRecipientSet
private int _bufferSize
private org.spongycastle.asn1.ASN1Set _unprotectedAttributes
    public void <init>()
    {
        org.spongycastle.cms.CMSEnvelopedDataStreamGenerator r0;

        r0 := @this: org.spongycastle.cms.CMSEnvelopedDataStreamGenerator;

        specialinvoke r0.<org.spongycastle.cms.CMSEnvelopedGenerator: void <init>()>();

        r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: org.spongycastle.asn1.ASN1Set _unprotectedAttributes> = null;

        return;
    }
    private java.io.OutputStream doOpen(org.spongycastle.asn1.ASN1ObjectIdentifier, java.io.OutputStream, org.spongycastle.operator.OutputEncryptor) throws java.io.IOException, org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSEnvelopedDataStreamGenerator r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.io.OutputStream $r2;
        org.spongycastle.operator.OutputEncryptor $r3;
        org.spongycastle.asn1.ASN1EncodableVector r4;
        org.spongycastle.operator.GenericKey $r5;
        java.util.List $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        org.spongycastle.cms.RecipientInfoGenerator r9;
        org.spongycastle.asn1.cms.RecipientInfo $r10;

        r0 := @this: org.spongycastle.cms.CMSEnvelopedDataStreamGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.io.OutputStream;

        $r3 := @parameter2: org.spongycastle.operator.OutputEncryptor;

        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r5 = interfaceinvoke $r3.<org.spongycastle.operator.OutputEncryptor: org.spongycastle.operator.GenericKey getKey()>();

        $r6 = r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: java.util.List recipientInfoGenerators>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.spongycastle.cms.RecipientInfoGenerator) $r8;

        $r10 = interfaceinvoke r9.<org.spongycastle.cms.RecipientInfoGenerator: org.spongycastle.asn1.cms.RecipientInfo generate(org.spongycastle.operator.GenericKey)>($r5);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r10);

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: java.io.OutputStream open(org.spongycastle.asn1.ASN1ObjectIdentifier,java.io.OutputStream,org.spongycastle.asn1.ASN1EncodableVector,org.spongycastle.operator.OutputEncryptor)>($r1, $r2, r4, $r3);

        return $r2;
    }
    private org.spongycastle.asn1.ASN1Integer getVersion()
    {
        org.spongycastle.cms.CMSEnvelopedDataStreamGenerator r0;
        org.spongycastle.asn1.cms.OriginatorInfo $r1;
        org.spongycastle.asn1.ASN1Set $r2;
        org.spongycastle.asn1.ASN1Integer $r3;

        r0 := @this: org.spongycastle.cms.CMSEnvelopedDataStreamGenerator;

        $r1 = r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: org.spongycastle.asn1.cms.OriginatorInfo originatorInfo>;

        if $r1 != null goto label1;

        $r2 = r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: org.spongycastle.asn1.ASN1Set _unprotectedAttributes>;

        if $r2 == null goto label2;

     label1:
        $r3 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(2L);

        return $r3;

     label2:
        $r3 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(0L);

        return $r3;
    }
    protected java.io.OutputStream open(java.io.OutputStream, org.spongycastle.asn1.ASN1EncodableVector, org.spongycastle.operator.OutputEncryptor) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSEnvelopedDataStreamGenerator r0;
        java.io.OutputStream $r1;
        org.spongycastle.asn1.ASN1EncodableVector $r2;
        org.spongycastle.operator.OutputEncryptor $r3;
        org.spongycastle.asn1.BERSequenceGenerator r4, r5, r6, $r19;
        java.io.IOException r7;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r8;
        boolean $z0;
        java.lang.Object r9;
        org.spongycastle.asn1.cms.OriginatorInfo $r11;
        org.spongycastle.asn1.ASN1Set $r12, $r23;
        int $i0;
        long $l1;
        byte[] $r14;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r15;
        org.spongycastle.asn1.BERSet $r16;
        org.spongycastle.asn1.ASN1Integer $r17;
        org.spongycastle.asn1.DERTaggedObject $r18;
        org.spongycastle.cms.CMSEnvelopedDataStreamGenerator$CmsEnvelopedDataOutputStream $r20;
        org.spongycastle.asn1.DERSet $r21;
        org.spongycastle.cms.CMSException $r22;

        r0 := @this: org.spongycastle.cms.CMSEnvelopedDataStreamGenerator;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1EncodableVector;

        $r3 := @parameter2: org.spongycastle.operator.OutputEncryptor;

        r5 = new org.spongycastle.asn1.BERSequenceGenerator;

        r4 = r5;

     label01:
        specialinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream)>($r1);

     label02:
        $r8 = <org.spongycastle.asn1.cms.CMSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier envelopedData>;

     label03:
        virtualinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r8);

     label04:
        r6 = new org.spongycastle.asn1.BERSequenceGenerator;

        r5 = r6;

     label05:
        $r1 = virtualinvoke r4.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        specialinvoke r6.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream,int,boolean)>($r1, 0, 1);

     label06:
        $z0 = r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: boolean _berEncodeRecipientSet>;

        if $z0 == 0 goto label26;

        $r16 = new org.spongycastle.asn1.BERSet;

        r9 = $r16;

     label07:
        specialinvoke $r16.<org.spongycastle.asn1.BERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r2);

     label08:
        $r17 = new org.spongycastle.asn1.ASN1Integer;

        $r11 = r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: org.spongycastle.asn1.cms.OriginatorInfo originatorInfo>;

        $r12 = r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: org.spongycastle.asn1.ASN1Set _unprotectedAttributes>;

        $r23 = (org.spongycastle.asn1.ASN1Set) r9;

     label09:
        $i0 = staticinvoke <org.spongycastle.asn1.cms.EnvelopedData: int calculateVersion(org.spongycastle.asn1.cms.OriginatorInfo,org.spongycastle.asn1.ASN1Set,org.spongycastle.asn1.ASN1Set)>($r11, $r23, $r12);

     label10:
        $l1 = (long) $i0;

     label11:
        specialinvoke $r17.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>($l1);

        virtualinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r17);

     label12:
        $r11 = r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: org.spongycastle.asn1.cms.OriginatorInfo originatorInfo>;

        if $r11 == null goto label14;

        $r18 = new org.spongycastle.asn1.DERTaggedObject;

        $r11 = r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: org.spongycastle.asn1.cms.OriginatorInfo originatorInfo>;

     label13:
        specialinvoke $r18.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 0, $r11);

        virtualinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r18);

     label14:
        $r1 = virtualinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

     label15:
        $r12 = (org.spongycastle.asn1.ASN1Set) r9;

     label16:
        $r14 = virtualinvoke $r12.<org.spongycastle.asn1.ASN1Set: byte[] getEncoded()>();

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r14);

     label17:
        $r19 = new org.spongycastle.asn1.BERSequenceGenerator;

     label18:
        $r1 = virtualinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        specialinvoke $r19.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream)>($r1);

     label19:
        $r8 = <org.spongycastle.asn1.cms.CMSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier data>;

     label20:
        virtualinvoke $r19.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r8);

        $r15 = interfaceinvoke $r3.<org.spongycastle.operator.OutputEncryptor: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r1 = virtualinvoke $r19.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r14 = virtualinvoke $r15.<org.spongycastle.asn1.x509.AlgorithmIdentifier: byte[] getEncoded()>();

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r14);

        $r1 = virtualinvoke $r19.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

     label21:
        $i0 = r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: int _bufferSize>;

     label22:
        $r1 = staticinvoke <org.spongycastle.cms.CMSUtils: java.io.OutputStream createBEROctetOutputStream(java.io.OutputStream,int,boolean,int)>($r1, 0, 0, $i0);

     label23:
        $r20 = new org.spongycastle.cms.CMSEnvelopedDataStreamGenerator$CmsEnvelopedDataOutputStream;

     label24:
        $r1 = interfaceinvoke $r3.<org.spongycastle.operator.OutputEncryptor: java.io.OutputStream getOutputStream(java.io.OutputStream)>($r1);

        specialinvoke $r20.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator$CmsEnvelopedDataOutputStream: void <init>(org.spongycastle.cms.CMSEnvelopedDataStreamGenerator,java.io.OutputStream,org.spongycastle.asn1.BERSequenceGenerator,org.spongycastle.asn1.BERSequenceGenerator,org.spongycastle.asn1.BERSequenceGenerator)>(r0, $r1, r4, r5, $r19);

     label25:
        return $r20;

     label26:
        $r21 = new org.spongycastle.asn1.DERSet;

        r9 = $r21;

     label27:
        specialinvoke $r21.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r2);

     label28:
        goto label08;

     label29:
        r7 := @caughtexception;

        $r22 = new org.spongycastle.cms.CMSException;

        specialinvoke $r22.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("exception decoding algorithm parameters.", r7);

        throw $r22;

        catch java.io.IOException from label01 to label02 with label29;
        catch java.io.IOException from label03 to label04 with label29;
        catch java.io.IOException from label05 to label06 with label29;
        catch java.io.IOException from label07 to label08 with label29;
        catch java.io.IOException from label09 to label10 with label29;
        catch java.io.IOException from label11 to label12 with label29;
        catch java.io.IOException from label13 to label15 with label29;
        catch java.io.IOException from label16 to label17 with label29;
        catch java.io.IOException from label18 to label19 with label29;
        catch java.io.IOException from label20 to label21 with label29;
        catch java.io.IOException from label22 to label23 with label29;
        catch java.io.IOException from label24 to label25 with label29;
        catch java.io.IOException from label27 to label28 with label29;
    }
    public java.io.OutputStream open(java.io.OutputStream, org.spongycastle.operator.OutputEncryptor) throws org.spongycastle.cms.CMSException, java.io.IOException
    {
        org.spongycastle.cms.CMSEnvelopedDataStreamGenerator r0;
        java.io.OutputStream $r1;
        org.spongycastle.operator.OutputEncryptor $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3, $r4;
        java.lang.String $r5;

        r0 := @this: org.spongycastle.cms.CMSEnvelopedDataStreamGenerator;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: org.spongycastle.operator.OutputEncryptor;

        $r3 = new org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r4 = <org.spongycastle.asn1.cms.CMSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier data>;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        specialinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>($r5);

        $r1 = specialinvoke r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: java.io.OutputStream doOpen(org.spongycastle.asn1.ASN1ObjectIdentifier,java.io.OutputStream,org.spongycastle.operator.OutputEncryptor)>($r3, $r1, $r2);

        return $r1;
    }
    protected java.io.OutputStream open(org.spongycastle.asn1.ASN1ObjectIdentifier, java.io.OutputStream, org.spongycastle.asn1.ASN1EncodableVector, org.spongycastle.operator.OutputEncryptor) throws java.io.IOException
    {
        org.spongycastle.cms.CMSEnvelopedDataStreamGenerator r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r8;
        java.io.OutputStream $r2;
        org.spongycastle.asn1.ASN1EncodableVector $r3;
        org.spongycastle.operator.OutputEncryptor $r4;
        org.spongycastle.asn1.BERSequenceGenerator r5, r6, r7;
        org.spongycastle.asn1.ASN1Integer $r9;
        org.spongycastle.asn1.cms.OriginatorInfo $r10;
        org.spongycastle.asn1.DERTaggedObject $r11;
        boolean $z0;
        org.spongycastle.asn1.BERSet $r12;
        byte[] $r13;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r14;
        int $i0;
        org.spongycastle.cms.CMSEnvelopedDataStreamGenerator$CmsEnvelopedDataOutputStream $r15;
        org.spongycastle.asn1.DERSet $r16;

        r0 := @this: org.spongycastle.cms.CMSEnvelopedDataStreamGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.io.OutputStream;

        $r3 := @parameter2: org.spongycastle.asn1.ASN1EncodableVector;

        $r4 := @parameter3: org.spongycastle.operator.OutputEncryptor;

        r5 = new org.spongycastle.asn1.BERSequenceGenerator;

        specialinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream)>($r2);

        $r8 = <org.spongycastle.asn1.cms.CMSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier envelopedData>;

        virtualinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r8);

        r6 = new org.spongycastle.asn1.BERSequenceGenerator;

        $r2 = virtualinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        specialinvoke r6.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream,int,boolean)>($r2, 0, 1);

        $r9 = specialinvoke r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: org.spongycastle.asn1.ASN1Integer getVersion()>();

        virtualinvoke r6.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r9);

        $r10 = r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: org.spongycastle.asn1.cms.OriginatorInfo originatorInfo>;

        if $r10 == null goto label1;

        $r11 = new org.spongycastle.asn1.DERTaggedObject;

        $r10 = r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: org.spongycastle.asn1.cms.OriginatorInfo originatorInfo>;

        specialinvoke $r11.<org.spongycastle.asn1.DERTaggedObject: void <init>(boolean,int,org.spongycastle.asn1.ASN1Encodable)>(0, 0, $r10);

        virtualinvoke r6.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r11);

     label1:
        $z0 = r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: boolean _berEncodeRecipientSet>;

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke r6.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r12 = new org.spongycastle.asn1.BERSet;

        specialinvoke $r12.<org.spongycastle.asn1.BERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r3);

        $r13 = virtualinvoke $r12.<org.spongycastle.asn1.BERSet: byte[] getEncoded()>();

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r13);

     label2:
        r7 = new org.spongycastle.asn1.BERSequenceGenerator;

        $r2 = virtualinvoke r6.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        specialinvoke r7.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream)>($r2);

        virtualinvoke r7.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r1);

        $r14 = interfaceinvoke $r4.<org.spongycastle.operator.OutputEncryptor: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r2 = virtualinvoke r7.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r13 = virtualinvoke $r14.<org.spongycastle.asn1.x509.AlgorithmIdentifier: byte[] getEncoded()>();

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r13);

        $r2 = virtualinvoke r7.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $i0 = r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: int _bufferSize>;

        $r2 = staticinvoke <org.spongycastle.cms.CMSUtils: java.io.OutputStream createBEROctetOutputStream(java.io.OutputStream,int,boolean,int)>($r2, 0, 0, $i0);

        $r2 = interfaceinvoke $r4.<org.spongycastle.operator.OutputEncryptor: java.io.OutputStream getOutputStream(java.io.OutputStream)>($r2);

        $r15 = new org.spongycastle.cms.CMSEnvelopedDataStreamGenerator$CmsEnvelopedDataOutputStream;

        specialinvoke $r15.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator$CmsEnvelopedDataOutputStream: void <init>(org.spongycastle.cms.CMSEnvelopedDataStreamGenerator,java.io.OutputStream,org.spongycastle.asn1.BERSequenceGenerator,org.spongycastle.asn1.BERSequenceGenerator,org.spongycastle.asn1.BERSequenceGenerator)>(r0, $r2, r5, r6, r7);

        return $r15;

     label3:
        $r2 = virtualinvoke r6.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r16 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r16.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>($r3);

        $r13 = virtualinvoke $r16.<org.spongycastle.asn1.DERSet: byte[] getEncoded()>();

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r13);

        goto label2;
    }
    public java.io.OutputStream open(org.spongycastle.asn1.ASN1ObjectIdentifier, java.io.OutputStream, org.spongycastle.operator.OutputEncryptor) throws org.spongycastle.cms.CMSException, java.io.IOException
    {
        org.spongycastle.cms.CMSEnvelopedDataStreamGenerator r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.io.OutputStream $r2;
        org.spongycastle.operator.OutputEncryptor $r3;

        r0 := @this: org.spongycastle.cms.CMSEnvelopedDataStreamGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.io.OutputStream;

        $r3 := @parameter2: org.spongycastle.operator.OutputEncryptor;

        $r2 = specialinvoke r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: java.io.OutputStream doOpen(org.spongycastle.asn1.ASN1ObjectIdentifier,java.io.OutputStream,org.spongycastle.operator.OutputEncryptor)>($r1, $r2, $r3);

        return $r2;
    }
    public void setBEREncodeRecipients(boolean)
    {
        org.spongycastle.cms.CMSEnvelopedDataStreamGenerator r0;
        boolean $z0;

        r0 := @this: org.spongycastle.cms.CMSEnvelopedDataStreamGenerator;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: boolean _berEncodeRecipientSet> = $z0;

        return;
    }
    public void setBufferSize(int)
    {
        org.spongycastle.cms.CMSEnvelopedDataStreamGenerator r0;
        int $i0;

        r0 := @this: org.spongycastle.cms.CMSEnvelopedDataStreamGenerator;

        $i0 := @parameter0: int;

        r0.<org.spongycastle.cms.CMSEnvelopedDataStreamGenerator: int _bufferSize> = $i0;

        return;
    }
