org.spongycastle.cms.RecipientInformation extends java.lang.Object
private org.spongycastle.cms.AuthAttributesProvider additionalData
protected org.spongycastle.asn1.x509.AlgorithmIdentifier keyEncAlg
protected org.spongycastle.asn1.x509.AlgorithmIdentifier messageAlgorithm
private org.spongycastle.cms.RecipientOperator operator
private byte[] resultMac
protected org.spongycastle.cms.RecipientId rid
protected org.spongycastle.cms.CMSSecureReadable secureReadable
    void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.cms.CMSSecureReadable, org.spongycastle.cms.AuthAttributesProvider)
    {
        org.spongycastle.cms.RecipientInformation r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1, $r2;
        org.spongycastle.cms.CMSSecureReadable $r3;
        org.spongycastle.cms.AuthAttributesProvider $r4;

        r0 := @this: org.spongycastle.cms.RecipientInformation;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 := @parameter2: org.spongycastle.cms.CMSSecureReadable;

        $r4 := @parameter3: org.spongycastle.cms.AuthAttributesProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier keyEncAlg> = $r1;

        r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier messageAlgorithm> = $r2;

        r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.CMSSecureReadable secureReadable> = $r3;

        r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.AuthAttributesProvider additionalData> = $r4;

        return;
    }
    private byte[] encodeObj(org.spongycastle.asn1.ASN1Encodable) throws java.io.IOException
    {
        org.spongycastle.cms.RecipientInformation r0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.cms.RecipientInformation;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Encodable;

        if $r1 == null goto label1;

        $r2 = interfaceinvoke $r1.<org.spongycastle.asn1.ASN1Encodable: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Primitive: byte[] getEncoded()>();

        return $r3;

     label1:
        return null;
    }
    public byte[] getContent(org.spongycastle.cms.Recipient) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.RecipientInformation r0;
        org.spongycastle.cms.Recipient $r1;
        java.io.IOException r2;
        org.spongycastle.cms.CMSTypedStream $r3;
        java.io.InputStream $r4;
        byte[] $r5;
        org.spongycastle.cms.CMSException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        r0 := @this: org.spongycastle.cms.RecipientInformation;

        $r1 := @parameter0: org.spongycastle.cms.Recipient;

     label1:
        $r3 = virtualinvoke r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.CMSTypedStream getContentStream(org.spongycastle.cms.Recipient)>($r1);

        $r4 = virtualinvoke $r3.<org.spongycastle.cms.CMSTypedStream: java.io.InputStream getContentStream()>();

        $r5 = staticinvoke <org.spongycastle.cms.CMSUtils: byte[] streamToByteArray(java.io.InputStream)>($r4);

     label2:
        return $r5;

     label3:
        r2 := @caughtexception;

        $r6 = new org.spongycastle.cms.CMSException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to parse internal stream: ");

        $r8 = virtualinvoke r2.<java.io.IOException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r8, r2);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public byte[] getContentDigest()
    {
        org.spongycastle.cms.RecipientInformation r0;
        byte[] $r1;
        org.spongycastle.cms.CMSSecureReadable $r2;
        boolean $z0;
        org.spongycastle.cms.CMSEnvelopedHelper$CMSDigestAuthenticatedSecureReadable $r3;

        r0 := @this: org.spongycastle.cms.RecipientInformation;

        $r2 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.CMSSecureReadable secureReadable>;

        $z0 = $r2 instanceof org.spongycastle.cms.CMSEnvelopedHelper$CMSDigestAuthenticatedSecureReadable;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.CMSSecureReadable secureReadable>;

        $r3 = (org.spongycastle.cms.CMSEnvelopedHelper$CMSDigestAuthenticatedSecureReadable) $r2;

        $r1 = virtualinvoke $r3.<org.spongycastle.cms.CMSEnvelopedHelper$CMSDigestAuthenticatedSecureReadable: byte[] getDigest()>();

        return $r1;

     label1:
        return null;
    }
    public org.spongycastle.cms.CMSTypedStream getContentStream(org.spongycastle.cms.Recipient) throws org.spongycastle.cms.CMSException, java.io.IOException
    {
        org.spongycastle.cms.RecipientInformation r0;
        org.spongycastle.cms.Recipient $r1;
        org.spongycastle.cms.RecipientOperator $r2;
        org.spongycastle.cms.AuthAttributesProvider $r3;
        org.spongycastle.cms.CMSTypedStream $r4;
        org.spongycastle.cms.CMSSecureReadable $r5;
        java.io.InputStream $r6;

        r0 := @this: org.spongycastle.cms.RecipientInformation;

        $r1 := @parameter0: org.spongycastle.cms.Recipient;

        $r2 = virtualinvoke r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.RecipientOperator getRecipientOperator(org.spongycastle.cms.Recipient)>($r1);

        r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.RecipientOperator operator> = $r2;

        $r3 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.AuthAttributesProvider additionalData>;

        if $r3 == null goto label1;

        $r4 = new org.spongycastle.cms.CMSTypedStream;

        $r5 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.CMSSecureReadable secureReadable>;

        $r6 = interfaceinvoke $r5.<org.spongycastle.cms.CMSSecureReadable: java.io.InputStream getInputStream()>();

        specialinvoke $r4.<org.spongycastle.cms.CMSTypedStream: void <init>(java.io.InputStream)>($r6);

        return $r4;

     label1:
        $r4 = new org.spongycastle.cms.CMSTypedStream;

        $r2 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.RecipientOperator operator>;

        $r5 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.CMSSecureReadable secureReadable>;

        $r6 = interfaceinvoke $r5.<org.spongycastle.cms.CMSSecureReadable: java.io.InputStream getInputStream()>();

        $r6 = virtualinvoke $r2.<org.spongycastle.cms.RecipientOperator: java.io.InputStream getInputStream(java.io.InputStream)>($r6);

        specialinvoke $r4.<org.spongycastle.cms.CMSTypedStream: void <init>(java.io.InputStream)>($r6);

        return $r4;
    }
    public java.lang.String getKeyEncryptionAlgOID()
    {
        org.spongycastle.cms.RecipientInformation r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        java.lang.String $r3;

        r0 := @this: org.spongycastle.cms.RecipientInformation;

        $r1 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier keyEncAlg>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        return $r3;
    }
    public byte[] getKeyEncryptionAlgParams()
    {
        org.spongycastle.cms.RecipientInformation r0;
        java.lang.Exception r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1Encodable $r3;
        byte[] $r4;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        r0 := @this: org.spongycastle.cms.RecipientInformation;

     label1:
        $r2 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier keyEncAlg>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r4 = specialinvoke r0.<org.spongycastle.cms.RecipientInformation: byte[] encodeObj(org.spongycastle.asn1.ASN1Encodable)>($r3);

     label2:
        return $r4;

     label3:
        r1 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception getting encryption parameters ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getKeyEncryptionAlgorithm()
    {
        org.spongycastle.cms.RecipientInformation r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.cms.RecipientInformation;

        r1 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier keyEncAlg>;

        return r1;
    }
    public byte[] getMac()
    {
        org.spongycastle.cms.RecipientInformation r0;
        java.io.IOException r1;
        byte[] $r2;
        org.spongycastle.cms.RecipientOperator $r3;
        boolean $z0;
        org.spongycastle.cms.AuthAttributesProvider $r4;
        java.io.ByteArrayInputStream $r5;
        org.spongycastle.asn1.ASN1Set $r6;
        java.io.InputStream $r7;
        java.lang.IllegalStateException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        r0 := @this: org.spongycastle.cms.RecipientInformation;

        $r2 = r0.<org.spongycastle.cms.RecipientInformation: byte[] resultMac>;

        if $r2 != null goto label3;

        $r3 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.RecipientOperator operator>;

        $z0 = virtualinvoke $r3.<org.spongycastle.cms.RecipientOperator: boolean isMacBased()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.AuthAttributesProvider additionalData>;

        if $r4 == null goto label2;

        $r3 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.RecipientOperator operator>;

        $r5 = new java.io.ByteArrayInputStream;

        $r4 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.AuthAttributesProvider additionalData>;

     label1:
        $r6 = interfaceinvoke $r4.<org.spongycastle.cms.AuthAttributesProvider: org.spongycastle.asn1.ASN1Set getAuthAttributes()>();

        $r2 = virtualinvoke $r6.<org.spongycastle.asn1.ASN1Set: byte[] getEncoded(java.lang.String)>("DER");

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        $r7 = virtualinvoke $r3.<org.spongycastle.cms.RecipientOperator: java.io.InputStream getInputStream(java.io.InputStream)>($r5);

        staticinvoke <org.spongycastle.util.io.Streams: void drain(java.io.InputStream)>($r7);

     label2:
        $r3 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.RecipientOperator operator>;

        $r2 = virtualinvoke $r3.<org.spongycastle.cms.RecipientOperator: byte[] getMac()>();

        r0.<org.spongycastle.cms.RecipientInformation: byte[] resultMac> = $r2;

     label3:
        $r2 = r0.<org.spongycastle.cms.RecipientInformation: byte[] resultMac>;

        return $r2;

     label4:
        r1 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to drain input: ");

        $r10 = virtualinvoke r1.<java.io.IOException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r8;

        catch java.io.IOException from label1 to label2 with label4;
    }
    public org.spongycastle.cms.RecipientId getRID()
    {
        org.spongycastle.cms.RecipientInformation r0;
        org.spongycastle.cms.RecipientId r1;

        r0 := @this: org.spongycastle.cms.RecipientInformation;

        r1 = r0.<org.spongycastle.cms.RecipientInformation: org.spongycastle.cms.RecipientId rid>;

        return r1;
    }
protected abstract org.spongycastle.cms.RecipientOperator getRecipientOperator(org.spongycastle.cms.Recipient) throws org.spongycastle.cms.CMSException, java.io.IOException { 
// no body
} 
