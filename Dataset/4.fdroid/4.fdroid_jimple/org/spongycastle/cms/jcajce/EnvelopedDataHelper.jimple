org.spongycastle.cms.jcajce.EnvelopedDataHelper extends java.lang.Object
protected static final java.util.Map BASE_CIPHER_NAMES
protected static final java.util.Map CIPHER_ALG_NAMES
protected static final org.spongycastle.operator.SecretKeySizeProvider KEY_SIZE_PROVIDER
protected static final java.util.Map MAC_ALG_NAMES
private static final short[] rc2Ekb
private static final short[] rc2Table
private org.spongycastle.cms.jcajce.JcaJceExtHelper helper
    static void <clinit>()
    {
        org.spongycastle.operator.SecretKeySizeProvider $r0;
        java.util.HashMap $r1;
        java.util.Map $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        short[] $r4;

        $r0 = <org.spongycastle.operator.DefaultSecretKeySizeProvider: org.spongycastle.operator.SecretKeySizeProvider INSTANCE>;

        <org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.operator.SecretKeySizeProvider KEY_SIZE_PROVIDER> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map MAC_ALG_NAMES> = $r1;

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier DES_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "DES");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier DES_EDE3_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "DESEDE");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES128_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES192_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES256_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier RC2_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "RC2");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAST5_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "CAST5");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA128_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "Camellia");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA192_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "Camellia");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA256_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "Camellia");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier SEED_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "SEED");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rc4>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "RC4");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier DES_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "DES/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier RC2_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "RC2/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier DES_EDE3_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "DESEDE/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES128_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES192_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES256_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rsaEncryption>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "RSA/ECB/PKCS1Padding");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAST5_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "CAST5/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA128_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "Camellia/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA192_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "Camellia/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier CAMELLIA256_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "Camellia/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier SEED_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "SEED/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rc4>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "RC4");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier DES_EDE3_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "DESEDEMac");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES128_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AESMac");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES192_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AESMac");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES256_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AESMac");

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier RC2_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "RC2Mac");

        $r4 = newarray (short)[256];

        $r4[0] = 189;

        $r4[1] = 86;

        $r4[2] = 234;

        $r4[3] = 242;

        $r4[4] = 162;

        $r4[5] = 241;

        $r4[6] = 172;

        $r4[7] = 42;

        $r4[8] = 176;

        $r4[9] = 147;

        $r4[10] = 209;

        $r4[11] = 156;

        $r4[12] = 27;

        $r4[13] = 51;

        $r4[14] = 253;

        $r4[15] = 208;

        $r4[16] = 48;

        $r4[17] = 4;

        $r4[18] = 182;

        $r4[19] = 220;

        $r4[20] = 125;

        $r4[21] = 223;

        $r4[22] = 50;

        $r4[23] = 75;

        $r4[24] = 247;

        $r4[25] = 203;

        $r4[26] = 69;

        $r4[27] = 155;

        $r4[28] = 49;

        $r4[29] = 187;

        $r4[30] = 33;

        $r4[31] = 90;

        $r4[32] = 65;

        $r4[33] = 159;

        $r4[34] = 225;

        $r4[35] = 217;

        $r4[36] = 74;

        $r4[37] = 77;

        $r4[38] = 158;

        $r4[39] = 218;

        $r4[40] = 160;

        $r4[41] = 104;

        $r4[42] = 44;

        $r4[43] = 195;

        $r4[44] = 39;

        $r4[45] = 95;

        $r4[46] = 128;

        $r4[47] = 54;

        $r4[48] = 62;

        $r4[49] = 238;

        $r4[50] = 251;

        $r4[51] = 149;

        $r4[52] = 26;

        $r4[53] = 254;

        $r4[54] = 206;

        $r4[55] = 168;

        $r4[56] = 52;

        $r4[57] = 169;

        $r4[58] = 19;

        $r4[59] = 240;

        $r4[60] = 166;

        $r4[61] = 63;

        $r4[62] = 216;

        $r4[63] = 12;

        $r4[64] = 120;

        $r4[65] = 36;

        $r4[66] = 175;

        $r4[67] = 35;

        $r4[68] = 82;

        $r4[69] = 193;

        $r4[70] = 103;

        $r4[71] = 23;

        $r4[72] = 245;

        $r4[73] = 102;

        $r4[74] = 144;

        $r4[75] = 231;

        $r4[76] = 232;

        $r4[77] = 7;

        $r4[78] = 184;

        $r4[79] = 96;

        $r4[80] = 72;

        $r4[81] = 230;

        $r4[82] = 30;

        $r4[83] = 83;

        $r4[84] = 243;

        $r4[85] = 146;

        $r4[86] = 164;

        $r4[87] = 114;

        $r4[88] = 140;

        $r4[89] = 8;

        $r4[90] = 21;

        $r4[91] = 110;

        $r4[92] = 134;

        $r4[93] = 0;

        $r4[94] = 132;

        $r4[95] = 250;

        $r4[96] = 244;

        $r4[97] = 127;

        $r4[98] = 138;

        $r4[99] = 66;

        $r4[100] = 25;

        $r4[101] = 246;

        $r4[102] = 219;

        $r4[103] = 205;

        $r4[104] = 20;

        $r4[105] = 141;

        $r4[106] = 80;

        $r4[107] = 18;

        $r4[108] = 186;

        $r4[109] = 60;

        $r4[110] = 6;

        $r4[111] = 78;

        $r4[112] = 236;

        $r4[113] = 179;

        $r4[114] = 53;

        $r4[115] = 17;

        $r4[116] = 161;

        $r4[117] = 136;

        $r4[118] = 142;

        $r4[119] = 43;

        $r4[120] = 148;

        $r4[121] = 153;

        $r4[122] = 183;

        $r4[123] = 113;

        $r4[124] = 116;

        $r4[125] = 211;

        $r4[126] = 228;

        $r4[127] = 191;

        $r4[128] = 58;

        $r4[129] = 222;

        $r4[130] = 150;

        $r4[131] = 14;

        $r4[132] = 188;

        $r4[133] = 10;

        $r4[134] = 237;

        $r4[135] = 119;

        $r4[136] = 252;

        $r4[137] = 55;

        $r4[138] = 107;

        $r4[139] = 3;

        $r4[140] = 121;

        $r4[141] = 137;

        $r4[142] = 98;

        $r4[143] = 198;

        $r4[144] = 215;

        $r4[145] = 192;

        $r4[146] = 210;

        $r4[147] = 124;

        $r4[148] = 106;

        $r4[149] = 139;

        $r4[150] = 34;

        $r4[151] = 163;

        $r4[152] = 91;

        $r4[153] = 5;

        $r4[154] = 93;

        $r4[155] = 2;

        $r4[156] = 117;

        $r4[157] = 213;

        $r4[158] = 97;

        $r4[159] = 227;

        $r4[160] = 24;

        $r4[161] = 143;

        $r4[162] = 85;

        $r4[163] = 81;

        $r4[164] = 173;

        $r4[165] = 31;

        $r4[166] = 11;

        $r4[167] = 94;

        $r4[168] = 133;

        $r4[169] = 229;

        $r4[170] = 194;

        $r4[171] = 87;

        $r4[172] = 99;

        $r4[173] = 202;

        $r4[174] = 61;

        $r4[175] = 108;

        $r4[176] = 180;

        $r4[177] = 197;

        $r4[178] = 204;

        $r4[179] = 112;

        $r4[180] = 178;

        $r4[181] = 145;

        $r4[182] = 89;

        $r4[183] = 13;

        $r4[184] = 71;

        $r4[185] = 32;

        $r4[186] = 200;

        $r4[187] = 79;

        $r4[188] = 88;

        $r4[189] = 224;

        $r4[190] = 1;

        $r4[191] = 226;

        $r4[192] = 22;

        $r4[193] = 56;

        $r4[194] = 196;

        $r4[195] = 111;

        $r4[196] = 59;

        $r4[197] = 15;

        $r4[198] = 101;

        $r4[199] = 70;

        $r4[200] = 190;

        $r4[201] = 126;

        $r4[202] = 45;

        $r4[203] = 123;

        $r4[204] = 130;

        $r4[205] = 249;

        $r4[206] = 64;

        $r4[207] = 181;

        $r4[208] = 29;

        $r4[209] = 115;

        $r4[210] = 248;

        $r4[211] = 235;

        $r4[212] = 38;

        $r4[213] = 199;

        $r4[214] = 135;

        $r4[215] = 151;

        $r4[216] = 37;

        $r4[217] = 84;

        $r4[218] = 177;

        $r4[219] = 40;

        $r4[220] = 170;

        $r4[221] = 152;

        $r4[222] = 157;

        $r4[223] = 165;

        $r4[224] = 100;

        $r4[225] = 109;

        $r4[226] = 122;

        $r4[227] = 212;

        $r4[228] = 16;

        $r4[229] = 129;

        $r4[230] = 68;

        $r4[231] = 239;

        $r4[232] = 73;

        $r4[233] = 214;

        $r4[234] = 174;

        $r4[235] = 46;

        $r4[236] = 221;

        $r4[237] = 118;

        $r4[238] = 92;

        $r4[239] = 47;

        $r4[240] = 167;

        $r4[241] = 28;

        $r4[242] = 201;

        $r4[243] = 9;

        $r4[244] = 105;

        $r4[245] = 154;

        $r4[246] = 131;

        $r4[247] = 207;

        $r4[248] = 41;

        $r4[249] = 57;

        $r4[250] = 185;

        $r4[251] = 233;

        $r4[252] = 76;

        $r4[253] = 255;

        $r4[254] = 67;

        $r4[255] = 171;

        <org.spongycastle.cms.jcajce.EnvelopedDataHelper: short[] rc2Table> = $r4;

        $r4 = newarray (short)[256];

        $r4[0] = 93;

        $r4[1] = 190;

        $r4[2] = 155;

        $r4[3] = 139;

        $r4[4] = 17;

        $r4[5] = 153;

        $r4[6] = 110;

        $r4[7] = 77;

        $r4[8] = 89;

        $r4[9] = 243;

        $r4[10] = 133;

        $r4[11] = 166;

        $r4[12] = 63;

        $r4[13] = 183;

        $r4[14] = 131;

        $r4[15] = 197;

        $r4[16] = 228;

        $r4[17] = 115;

        $r4[18] = 107;

        $r4[19] = 58;

        $r4[20] = 104;

        $r4[21] = 90;

        $r4[22] = 192;

        $r4[23] = 71;

        $r4[24] = 160;

        $r4[25] = 100;

        $r4[26] = 52;

        $r4[27] = 12;

        $r4[28] = 241;

        $r4[29] = 208;

        $r4[30] = 82;

        $r4[31] = 165;

        $r4[32] = 185;

        $r4[33] = 30;

        $r4[34] = 150;

        $r4[35] = 67;

        $r4[36] = 65;

        $r4[37] = 216;

        $r4[38] = 212;

        $r4[39] = 44;

        $r4[40] = 219;

        $r4[41] = 248;

        $r4[42] = 7;

        $r4[43] = 119;

        $r4[44] = 42;

        $r4[45] = 202;

        $r4[46] = 235;

        $r4[47] = 239;

        $r4[48] = 16;

        $r4[49] = 28;

        $r4[50] = 22;

        $r4[51] = 13;

        $r4[52] = 56;

        $r4[53] = 114;

        $r4[54] = 47;

        $r4[55] = 137;

        $r4[56] = 193;

        $r4[57] = 249;

        $r4[58] = 128;

        $r4[59] = 196;

        $r4[60] = 109;

        $r4[61] = 174;

        $r4[62] = 48;

        $r4[63] = 61;

        $r4[64] = 206;

        $r4[65] = 32;

        $r4[66] = 99;

        $r4[67] = 254;

        $r4[68] = 230;

        $r4[69] = 26;

        $r4[70] = 199;

        $r4[71] = 184;

        $r4[72] = 80;

        $r4[73] = 232;

        $r4[74] = 36;

        $r4[75] = 23;

        $r4[76] = 252;

        $r4[77] = 37;

        $r4[78] = 111;

        $r4[79] = 187;

        $r4[80] = 106;

        $r4[81] = 163;

        $r4[82] = 68;

        $r4[83] = 83;

        $r4[84] = 217;

        $r4[85] = 162;

        $r4[86] = 1;

        $r4[87] = 171;

        $r4[88] = 188;

        $r4[89] = 182;

        $r4[90] = 31;

        $r4[91] = 152;

        $r4[92] = 238;

        $r4[93] = 154;

        $r4[94] = 167;

        $r4[95] = 45;

        $r4[96] = 79;

        $r4[97] = 158;

        $r4[98] = 142;

        $r4[99] = 172;

        $r4[100] = 224;

        $r4[101] = 198;

        $r4[102] = 73;

        $r4[103] = 70;

        $r4[104] = 41;

        $r4[105] = 244;

        $r4[106] = 148;

        $r4[107] = 138;

        $r4[108] = 175;

        $r4[109] = 225;

        $r4[110] = 91;

        $r4[111] = 195;

        $r4[112] = 179;

        $r4[113] = 123;

        $r4[114] = 87;

        $r4[115] = 209;

        $r4[116] = 124;

        $r4[117] = 156;

        $r4[118] = 237;

        $r4[119] = 135;

        $r4[120] = 64;

        $r4[121] = 140;

        $r4[122] = 226;

        $r4[123] = 203;

        $r4[124] = 147;

        $r4[125] = 20;

        $r4[126] = 201;

        $r4[127] = 97;

        $r4[128] = 46;

        $r4[129] = 229;

        $r4[130] = 204;

        $r4[131] = 246;

        $r4[132] = 94;

        $r4[133] = 168;

        $r4[134] = 92;

        $r4[135] = 214;

        $r4[136] = 117;

        $r4[137] = 141;

        $r4[138] = 98;

        $r4[139] = 149;

        $r4[140] = 88;

        $r4[141] = 105;

        $r4[142] = 118;

        $r4[143] = 161;

        $r4[144] = 74;

        $r4[145] = 181;

        $r4[146] = 85;

        $r4[147] = 9;

        $r4[148] = 120;

        $r4[149] = 51;

        $r4[150] = 130;

        $r4[151] = 215;

        $r4[152] = 221;

        $r4[153] = 121;

        $r4[154] = 245;

        $r4[155] = 27;

        $r4[156] = 11;

        $r4[157] = 222;

        $r4[158] = 38;

        $r4[159] = 33;

        $r4[160] = 40;

        $r4[161] = 116;

        $r4[162] = 4;

        $r4[163] = 151;

        $r4[164] = 86;

        $r4[165] = 223;

        $r4[166] = 60;

        $r4[167] = 240;

        $r4[168] = 55;

        $r4[169] = 57;

        $r4[170] = 220;

        $r4[171] = 255;

        $r4[172] = 6;

        $r4[173] = 164;

        $r4[174] = 234;

        $r4[175] = 66;

        $r4[176] = 8;

        $r4[177] = 218;

        $r4[178] = 180;

        $r4[179] = 113;

        $r4[180] = 176;

        $r4[181] = 207;

        $r4[182] = 18;

        $r4[183] = 122;

        $r4[184] = 78;

        $r4[185] = 250;

        $r4[186] = 108;

        $r4[187] = 29;

        $r4[188] = 132;

        $r4[189] = 0;

        $r4[190] = 200;

        $r4[191] = 127;

        $r4[192] = 145;

        $r4[193] = 69;

        $r4[194] = 170;

        $r4[195] = 43;

        $r4[196] = 194;

        $r4[197] = 177;

        $r4[198] = 143;

        $r4[199] = 213;

        $r4[200] = 186;

        $r4[201] = 242;

        $r4[202] = 173;

        $r4[203] = 25;

        $r4[204] = 178;

        $r4[205] = 103;

        $r4[206] = 54;

        $r4[207] = 247;

        $r4[208] = 15;

        $r4[209] = 10;

        $r4[210] = 146;

        $r4[211] = 125;

        $r4[212] = 227;

        $r4[213] = 157;

        $r4[214] = 233;

        $r4[215] = 144;

        $r4[216] = 62;

        $r4[217] = 35;

        $r4[218] = 39;

        $r4[219] = 102;

        $r4[220] = 19;

        $r4[221] = 236;

        $r4[222] = 129;

        $r4[223] = 21;

        $r4[224] = 189;

        $r4[225] = 34;

        $r4[226] = 191;

        $r4[227] = 159;

        $r4[228] = 126;

        $r4[229] = 169;

        $r4[230] = 81;

        $r4[231] = 75;

        $r4[232] = 76;

        $r4[233] = 251;

        $r4[234] = 2;

        $r4[235] = 211;

        $r4[236] = 112;

        $r4[237] = 134;

        $r4[238] = 49;

        $r4[239] = 231;

        $r4[240] = 59;

        $r4[241] = 5;

        $r4[242] = 3;

        $r4[243] = 84;

        $r4[244] = 96;

        $r4[245] = 72;

        $r4[246] = 101;

        $r4[247] = 24;

        $r4[248] = 210;

        $r4[249] = 205;

        $r4[250] = 95;

        $r4[251] = 50;

        $r4[252] = 136;

        $r4[253] = 14;

        $r4[254] = 53;

        $r4[255] = 253;

        <org.spongycastle.cms.jcajce.EnvelopedDataHelper: short[] rc2Ekb> = $r4;

        return;
    }
    void <init>(org.spongycastle.cms.jcajce.JcaJceExtHelper)
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r1;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.cms.jcajce.JcaJceExtHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper> = $r1;

        return;
    }
    static java.lang.Object execute(org.spongycastle.cms.jcajce.EnvelopedDataHelper$JCECallback) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper$JCECallback $r0;
        java.lang.Object $r1;
        java.security.NoSuchAlgorithmException r2;
        org.spongycastle.cms.CMSException $r3;
        java.security.InvalidKeyException r4;
        java.security.NoSuchProviderException r5;
        javax.crypto.NoSuchPaddingException r6;
        java.security.InvalidAlgorithmParameterException r7;
        java.security.spec.InvalidParameterSpecException r8;

        $r0 := @parameter0: org.spongycastle.cms.jcajce.EnvelopedDataHelper$JCECallback;

     label1:
        $r1 = interfaceinvoke $r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper$JCECallback: java.lang.Object doInJCE()>();

     label2:
        return $r1;

     label3:
        r2 := @caughtexception;

        $r3 = new org.spongycastle.cms.CMSException;

        specialinvoke $r3.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("can\'t find algorithm.", r2);

        throw $r3;

     label4:
        r4 := @caughtexception;

        $r3 = new org.spongycastle.cms.CMSException;

        specialinvoke $r3.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("key invalid in message.", r4);

        throw $r3;

     label5:
        r5 := @caughtexception;

        $r3 = new org.spongycastle.cms.CMSException;

        specialinvoke $r3.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("can\'t find provider.", r5);

        throw $r3;

     label6:
        r6 := @caughtexception;

        $r3 = new org.spongycastle.cms.CMSException;

        specialinvoke $r3.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("required padding not supported.", r6);

        throw $r3;

     label7:
        r7 := @caughtexception;

        $r3 = new org.spongycastle.cms.CMSException;

        specialinvoke $r3.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("algorithm parameters invalid.", r7);

        throw $r3;

     label8:
        r8 := @caughtexception;

        $r3 = new org.spongycastle.cms.CMSException;

        specialinvoke $r3.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("MAC algorithm parameter spec invalid.", r8);

        throw $r3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.security.InvalidKeyException from label1 to label2 with label4;
        catch java.security.NoSuchProviderException from label1 to label2 with label5;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label6;
        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label7;
        catch java.security.spec.InvalidParameterSpecException from label1 to label2 with label8;
    }
    byte[] calculateDerivedKey(int, char[], org.spongycastle.asn1.x509.AlgorithmIdentifier, int) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        int $i0, $i1;
        char[] $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        java.security.GeneralSecurityException r3;
        org.spongycastle.asn1.ASN1Encodable $r4;
        org.spongycastle.asn1.pkcs.PBKDF2Params $r5;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r6;
        javax.crypto.SecretKeyFactory $r7;
        javax.crypto.spec.PBEKeySpec $r8;
        byte[] $r9;
        java.math.BigInteger $r10;
        javax.crypto.SecretKey $r11;
        org.spongycastle.cms.CMSException $r12;
        java.lang.StringBuilder $r13;
        java.lang.String $r14;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $i0 := @parameter0: int;

        $r1 := @parameter1: char[];

        $r2 := @parameter2: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $i1 := @parameter3: int;

        $r4 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r5 = staticinvoke <org.spongycastle.asn1.pkcs.PBKDF2Params: org.spongycastle.asn1.pkcs.PBKDF2Params getInstance(java.lang.Object)>($r4);

        if $i0 != 0 goto label5;

        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label1:
        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: javax.crypto.SecretKeyFactory createSecretKeyFactory(java.lang.String)>("PBKDF2with8BIT");

     label2:
        $r8 = new javax.crypto.spec.PBEKeySpec;

     label3:
        $r9 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.PBKDF2Params: byte[] getSalt()>();

        $r10 = virtualinvoke $r5.<org.spongycastle.asn1.pkcs.PBKDF2Params: java.math.BigInteger getIterationCount()>();

        $i0 = virtualinvoke $r10.<java.math.BigInteger: int intValue()>();

        specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r9, $i0, $i1);

        $r11 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r8);

        $r9 = interfaceinvoke $r11.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label4:
        return $r9;

     label5:
        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label6:
        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: javax.crypto.SecretKeyFactory createSecretKeyFactory(java.lang.String)>("PBKDF2");

     label7:
        goto label2;

     label8:
        r3 := @caughtexception;

        $r12 = new org.spongycastle.cms.CMSException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to calculate dervied key from password: ");

        $r14 = virtualinvoke r3.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r14, r3);

        throw $r12;

        catch java.security.GeneralSecurityException from label1 to label2 with label8;
        catch java.security.GeneralSecurityException from label3 to label4 with label8;
        catch java.security.GeneralSecurityException from label6 to label7 with label8;
    }
    java.security.AlgorithmParameterGenerator createAlgorithmParameterGenerator(org.spongycastle.asn1.ASN1ObjectIdentifier) throws java.security.GeneralSecurityException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r4;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r5;
        java.security.AlgorithmParameterGenerator $r6;
        java.security.NoSuchAlgorithmException $r7;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.String) $r3;

        if r4 == null goto label4;

        $r5 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label1:
        $r6 = interfaceinvoke $r5.<org.spongycastle.cms.jcajce.JcaJceExtHelper: java.security.AlgorithmParameterGenerator createAlgorithmParameterGenerator(java.lang.String)>(r4);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

     label4:
        $r5 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

        r4 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r6 = interfaceinvoke $r5.<org.spongycastle.cms.jcajce.JcaJceExtHelper: java.security.AlgorithmParameterGenerator createAlgorithmParameterGenerator(java.lang.String)>(r4);

        return $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }
    java.security.AlgorithmParameters createAlgorithmParameters(org.spongycastle.asn1.ASN1ObjectIdentifier) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r4;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r5;
        java.security.AlgorithmParameters $r6;
        java.security.NoSuchAlgorithmException $r7;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.String) $r3;

        if r4 == null goto label4;

        $r5 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label1:
        $r6 = interfaceinvoke $r5.<org.spongycastle.cms.jcajce.JcaJceExtHelper: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)>(r4);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

     label4:
        $r5 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

        r4 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r6 = interfaceinvoke $r5.<org.spongycastle.cms.jcajce.JcaJceExtHelper: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)>(r4);

        return $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }
    public org.spongycastle.operator.jcajce.JceAsymmetricKeyUnwrapper createAsymmetricUnwrapper(org.spongycastle.asn1.x509.AlgorithmIdentifier, java.security.PrivateKey)
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        java.security.PrivateKey $r2;
        org.spongycastle.operator.jcajce.JceAsymmetricKeyUnwrapper $r3;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r4;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: java.security.PrivateKey;

        $r4 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

        $r3 = interfaceinvoke $r4.<org.spongycastle.cms.jcajce.JcaJceExtHelper: org.spongycastle.operator.jcajce.JceAsymmetricKeyUnwrapper createAsymmetricUnwrapper(org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.PrivateKey)>($r1, $r2);

        return $r3;
    }
    public org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper createAsymmetricUnwrapper(org.spongycastle.asn1.x509.AlgorithmIdentifier, java.security.PrivateKey, byte[], byte[])
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        java.security.PrivateKey $r2;
        byte[] $r3, $r4;
        org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper $r5;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r6;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: java.security.PrivateKey;

        $r3 := @parameter2: byte[];

        $r4 := @parameter3: byte[];

        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

        $r5 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: org.spongycastle.operator.jcajce.JceKTSKeyUnwrapper createAsymmetricUnwrapper(org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.PrivateKey,byte[],byte[])>($r1, $r2, $r3, $r4);

        return $r5;
    }
    javax.crypto.Cipher createCipher(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.GeneralSecurityException r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r6;
        javax.crypto.Cipher $r7;
        java.security.NoSuchAlgorithmException $r8;
        org.spongycastle.cms.CMSException $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map CIPHER_ALG_NAMES>;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        r5 = (java.lang.String) $r4;

        if r5 == null goto label6;

        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label3:
        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: javax.crypto.Cipher createCipher(java.lang.String)>(r5);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

     label6:
        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label7:
        r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: javax.crypto.Cipher createCipher(java.lang.String)>(r5);

     label8:
        return $r7;

     label9:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cms.CMSException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create cipher: ");

        r5 = virtualinvoke r2.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>(r5, r2);

        throw $r9;

        catch java.security.GeneralSecurityException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label9;
        catch java.security.GeneralSecurityException from label7 to label8 with label9;
    }
    public javax.crypto.Cipher createContentCipher(java.security.Key, org.spongycastle.asn1.x509.AlgorithmIdentifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        java.security.Key $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        java.lang.Object $r3;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper$1 $r4;
        javax.crypto.Cipher $r5;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: java.security.Key;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r4 = new org.spongycastle.cms.jcajce.EnvelopedDataHelper$1;

        specialinvoke $r4.<org.spongycastle.cms.jcajce.EnvelopedDataHelper$1: void <init>(org.spongycastle.cms.jcajce.EnvelopedDataHelper,org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>(r0, $r2, $r1);

        $r3 = staticinvoke <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.lang.Object execute(org.spongycastle.cms.jcajce.EnvelopedDataHelper$JCECallback)>($r4);

        $r5 = (javax.crypto.Cipher) $r3;

        return $r5;
    }
    javax.crypto.Mac createContentMac(java.security.Key, org.spongycastle.asn1.x509.AlgorithmIdentifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        java.security.Key $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        java.lang.Object $r3;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper$2 $r4;
        javax.crypto.Mac $r5;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: java.security.Key;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r4 = new org.spongycastle.cms.jcajce.EnvelopedDataHelper$2;

        specialinvoke $r4.<org.spongycastle.cms.jcajce.EnvelopedDataHelper$2: void <init>(org.spongycastle.cms.jcajce.EnvelopedDataHelper,org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>(r0, $r2, $r1);

        $r3 = staticinvoke <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.lang.Object execute(org.spongycastle.cms.jcajce.EnvelopedDataHelper$JCECallback)>($r4);

        $r5 = (javax.crypto.Mac) $r3;

        return $r5;
    }
    javax.crypto.KeyAgreement createKeyAgreement(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.GeneralSecurityException r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r6;
        javax.crypto.KeyAgreement $r7;
        java.security.NoSuchAlgorithmException $r8;
        org.spongycastle.cms.CMSException $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        r5 = (java.lang.String) $r4;

        if r5 == null goto label6;

        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label3:
        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: javax.crypto.KeyAgreement createKeyAgreement(java.lang.String)>(r5);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

     label6:
        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label7:
        r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: javax.crypto.KeyAgreement createKeyAgreement(java.lang.String)>(r5);

     label8:
        return $r7;

     label9:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cms.CMSException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create key agreement: ");

        r5 = virtualinvoke r2.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>(r5, r2);

        throw $r9;

        catch java.security.GeneralSecurityException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label9;
        catch java.security.GeneralSecurityException from label7 to label8 with label9;
    }
    public java.security.KeyFactory createKeyFactory(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.GeneralSecurityException r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r6;
        java.security.KeyFactory $r7;
        java.security.NoSuchAlgorithmException $r8;
        org.spongycastle.cms.CMSException $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        r5 = (java.lang.String) $r4;

        if r5 == null goto label6;

        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label3:
        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>(r5);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

     label6:
        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label7:
        r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>(r5);

     label8:
        return $r7;

     label9:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cms.CMSException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create key factory: ");

        r5 = virtualinvoke r2.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>(r5, r2);

        throw $r9;

        catch java.security.GeneralSecurityException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label9;
        catch java.security.GeneralSecurityException from label7 to label8 with label9;
    }
    public javax.crypto.KeyGenerator createKeyGenerator(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.GeneralSecurityException r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r6;
        javax.crypto.KeyGenerator $r7;
        java.security.NoSuchAlgorithmException $r8;
        org.spongycastle.cms.CMSException $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        r5 = (java.lang.String) $r4;

        if r5 == null goto label6;

        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label3:
        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: javax.crypto.KeyGenerator createKeyGenerator(java.lang.String)>(r5);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

     label6:
        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label7:
        r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: javax.crypto.KeyGenerator createKeyGenerator(java.lang.String)>(r5);

     label8:
        return $r7;

     label9:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cms.CMSException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create key generator: ");

        r5 = virtualinvoke r2.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>(r5, r2);

        throw $r9;

        catch java.security.GeneralSecurityException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label9;
        catch java.security.GeneralSecurityException from label7 to label8 with label9;
    }
    java.security.KeyPairGenerator createKeyPairGenerator(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.GeneralSecurityException r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r6;
        java.security.KeyPairGenerator $r7;
        java.security.NoSuchAlgorithmException $r8;
        org.spongycastle.cms.CMSException $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        r5 = (java.lang.String) $r4;

        if r5 == null goto label6;

        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label3:
        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: java.security.KeyPairGenerator createKeyPairGenerator(java.lang.String)>(r5);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

     label6:
        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label7:
        r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: java.security.KeyPairGenerator createKeyPairGenerator(java.lang.String)>(r5);

     label8:
        return $r7;

     label9:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cms.CMSException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create key pair generator: ");

        r5 = virtualinvoke r2.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>(r5, r2);

        throw $r9;

        catch java.security.GeneralSecurityException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label9;
        catch java.security.GeneralSecurityException from label7 to label8 with label9;
    }
    javax.crypto.Mac createMac(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.GeneralSecurityException r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r6;
        javax.crypto.Mac $r7;
        java.security.NoSuchAlgorithmException $r8;
        org.spongycastle.cms.CMSException $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map MAC_ALG_NAMES>;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        r5 = (java.lang.String) $r4;

        if r5 == null goto label6;

        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label3:
        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: javax.crypto.Mac createMac(java.lang.String)>(r5);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

     label6:
        $r6 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label7:
        r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r7 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.JcaJceExtHelper: javax.crypto.Mac createMac(java.lang.String)>(r5);

     label8:
        return $r7;

     label9:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cms.CMSException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create mac: ");

        r5 = virtualinvoke r2.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>(r5, r2);

        throw $r9;

        catch java.security.GeneralSecurityException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label9;
        catch java.security.GeneralSecurityException from label7 to label8 with label9;
    }
    javax.crypto.Cipher createRFC3211Wrapper(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.GeneralSecurityException r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.cms.CMSException $r6;
        java.lang.StringBuilder $r7;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r8;
        javax.crypto.Cipher $r9;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (java.lang.String) $r4;

        if r5 != null goto label1;

        $r6 = new org.spongycastle.cms.CMSException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no name for ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>(r5);

        throw $r6;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RFC3211Wrap");

        r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

     label2:
        $r9 = interfaceinvoke $r8.<org.spongycastle.cms.jcajce.JcaJceExtHelper: javax.crypto.Cipher createCipher(java.lang.String)>(r5);

     label3:
        return $r9;

     label4:
        r2 := @caughtexception;

        $r6 = new org.spongycastle.cms.CMSException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create cipher: ");

        r5 = virtualinvoke r2.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>(r5, r2);

        throw $r6;

        catch java.security.GeneralSecurityException from label2 to label3 with label4;
    }
    javax.crypto.SecretKeyFactory createSecretKeyFactory(java.lang.String) throws java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        java.lang.String $r1;
        javax.crypto.SecretKeyFactory $r2;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r3;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

        $r2 = interfaceinvoke $r3.<org.spongycastle.cms.jcajce.JcaJceExtHelper: javax.crypto.SecretKeyFactory createSecretKeyFactory(java.lang.String)>($r1);

        return $r2;
    }
    public org.spongycastle.operator.SymmetricKeyUnwrapper createSymmetricUnwrapper(org.spongycastle.asn1.x509.AlgorithmIdentifier, javax.crypto.SecretKey)
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        javax.crypto.SecretKey $r2;
        org.spongycastle.operator.SymmetricKeyUnwrapper $r3;
        org.spongycastle.cms.jcajce.JcaJceExtHelper $r4;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: javax.crypto.SecretKey;

        $r4 = r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.cms.jcajce.JcaJceExtHelper helper>;

        $r3 = interfaceinvoke $r4.<org.spongycastle.cms.jcajce.JcaJceExtHelper: org.spongycastle.operator.SymmetricKeyUnwrapper createSymmetricUnwrapper(org.spongycastle.asn1.x509.AlgorithmIdentifier,javax.crypto.SecretKey)>($r1, $r2);

        return $r3;
    }
    java.security.AlgorithmParameters generateParameters(org.spongycastle.asn1.ASN1ObjectIdentifier, javax.crypto.SecretKey, java.security.SecureRandom) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r6;
        javax.crypto.SecretKey $r2;
        java.security.SecureRandom $r3;
        byte[] r4, $r8;
        java.security.AlgorithmParameterGenerator $r5;
        boolean $z0;
        javax.crypto.spec.RC2ParameterSpec $r7;
        int $i0;
        java.security.AlgorithmParameters $r9;
        java.security.InvalidAlgorithmParameterException r10;
        org.spongycastle.cms.CMSException $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13;
        java.security.NoSuchAlgorithmException r14;
        java.security.GeneralSecurityException r15;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: javax.crypto.SecretKey;

        $r3 := @parameter2: java.security.SecureRandom;

     label01:
        $r5 = virtualinvoke r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.security.AlgorithmParameterGenerator createAlgorithmParameterGenerator(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

     label02:
        $r6 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier RC2_CBC>;

     label03:
        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r6);

     label04:
        if $z0 == 0 goto label10;

        r4 = newarray (byte)[8];

     label05:
        virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>(r4);

     label06:
        $r7 = new javax.crypto.spec.RC2ParameterSpec;

     label07:
        $r8 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label08:
        $i0 = lengthof $r8;

        $i0 = $i0 * 8;

     label09:
        specialinvoke $r7.<javax.crypto.spec.RC2ParameterSpec: void <init>(int,byte[])>($i0, r4);

        virtualinvoke $r5.<java.security.AlgorithmParameterGenerator: void init(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r7, $r3);

     label10:
        $r9 = virtualinvoke $r5.<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameters generateParameters()>();

     label11:
        return $r9;

     label12:
        r10 := @caughtexception;

        $r11 = new org.spongycastle.cms.CMSException;

        $r12 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parameters generation error: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r13, r10);

     label14:
        throw $r11;

     label15:
        r14 := @caughtexception;

        return null;

     label16:
        r15 := @caughtexception;

        $r11 = new org.spongycastle.cms.CMSException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception creating algorithm parameter generator: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r13, r15);

        throw $r11;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label15;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label15;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label15;
        catch java.security.GeneralSecurityException from label01 to label02 with label16;
        catch java.security.GeneralSecurityException from label03 to label04 with label16;
        catch java.security.GeneralSecurityException from label05 to label06 with label16;
        catch java.security.InvalidAlgorithmParameterException from label07 to label08 with label12;
        catch java.security.InvalidAlgorithmParameterException from label09 to label10 with label12;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label15;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label15;
        catch java.security.GeneralSecurityException from label07 to label08 with label16;
        catch java.security.GeneralSecurityException from label09 to label10 with label16;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label15;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label15;
        catch java.security.GeneralSecurityException from label10 to label11 with label16;
        catch java.security.GeneralSecurityException from label13 to label14 with label16;
    }
    org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(org.spongycastle.asn1.ASN1ObjectIdentifier, java.security.AlgorithmParameters) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.AlgorithmParameters $r2;
        org.spongycastle.asn1.ASN1Encodable $r3;
        java.lang.Object r4;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r5;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.security.AlgorithmParameters;

        if $r2 == null goto label2;

        r4 = staticinvoke <org.spongycastle.cms.jcajce.CMSUtils: org.spongycastle.asn1.ASN1Encodable extractParameters(java.security.AlgorithmParameters)>($r2);

     label1:
        $r5 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 = (org.spongycastle.asn1.ASN1Encodable) r4;

        specialinvoke $r5.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, $r3);

        return $r5;

     label2:
        r4 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        goto label1;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(org.spongycastle.asn1.ASN1ObjectIdentifier, java.security.spec.AlgorithmParameterSpec)
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.spec.AlgorithmParameterSpec r2;
        boolean $z0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.spongycastle.asn1.DEROctetString $r4;
        javax.crypto.spec.IvParameterSpec r5;
        byte[] $r6;
        javax.crypto.spec.RC2ParameterSpec r7, r8;
        int $i0;
        short[] $r9;
        org.spongycastle.asn1.pkcs.RC2CBCParameter $r10;
        java.lang.IllegalStateException $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        r2 := @parameter1: java.security.spec.AlgorithmParameterSpec;

        $z0 = r2 instanceof javax.crypto.spec.IvParameterSpec;

        if $z0 == 0 goto label1;

        $r3 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r4 = new org.spongycastle.asn1.DEROctetString;

        r5 = (javax.crypto.spec.IvParameterSpec) r2;

        $r6 = virtualinvoke r5.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        specialinvoke $r4.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r6);

        specialinvoke $r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, $r4);

        return $r3;

     label1:
        $z0 = r2 instanceof javax.crypto.spec.RC2ParameterSpec;

        if $z0 == 0 goto label5;

        r7 = (javax.crypto.spec.RC2ParameterSpec) r2;

        r8 = (javax.crypto.spec.RC2ParameterSpec) r2;

        $i0 = virtualinvoke r8.<javax.crypto.spec.RC2ParameterSpec: int getEffectiveKeyBits()>();

        if $i0 == -1 goto label4;

        if $i0 >= 256 goto label3;

        $r9 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: short[] rc2Table>;

        $i0 = $r9[$i0];

     label2:
        $r3 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r10 = new org.spongycastle.asn1.pkcs.RC2CBCParameter;

        $r6 = virtualinvoke r7.<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>();

        specialinvoke $r10.<org.spongycastle.asn1.pkcs.RC2CBCParameter: void <init>(int,byte[])>($i0, $r6);

        specialinvoke $r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, $r10);

        return $r3;

     label3:
        goto label2;

     label4:
        $r3 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r10 = new org.spongycastle.asn1.pkcs.RC2CBCParameter;

        $r6 = virtualinvoke r7.<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>();

        specialinvoke $r10.<org.spongycastle.asn1.pkcs.RC2CBCParameter: void <init>(byte[])>($r6);

        specialinvoke $r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, $r10);

        return $r3;

     label5:
        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown parameter spec: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r11;
    }
    java.lang.String getBaseCipherName(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r4;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.String) $r3;

        if r4 != null goto label1;

        r4 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

     label1:
        return r4;
    }
    public java.security.Key getJceKey(org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.operator.GenericKey)
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.operator.GenericKey $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.security.Key $r4;
        javax.crypto.spec.SecretKeySpec $r5;
        byte[] $r6;
        java.lang.String $r7;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: org.spongycastle.operator.GenericKey;

        $r3 = virtualinvoke $r2.<org.spongycastle.operator.GenericKey: java.lang.Object getRepresentation()>();

        $z0 = $r3 instanceof java.security.Key;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r2.<org.spongycastle.operator.GenericKey: java.lang.Object getRepresentation()>();

        $r4 = (java.security.Key) $r3;

        return $r4;

     label1:
        $r3 = virtualinvoke $r2.<org.spongycastle.operator.GenericKey: java.lang.Object getRepresentation()>();

        $z0 = $r3 instanceof byte[];

        if $z0 == 0 goto label2;

        $r5 = new javax.crypto.spec.SecretKeySpec;

        $r3 = virtualinvoke $r2.<org.spongycastle.operator.GenericKey: java.lang.Object getRepresentation()>();

        $r6 = (byte[]) $r3;

        $r7 = virtualinvoke r0.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.lang.String getBaseCipherName(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r7);

        return $r5;

     label2:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown generic key type");

        throw $r8;
    }
    java.security.Key getJceKey(org.spongycastle.operator.GenericKey)
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.operator.GenericKey $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.security.Key $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        byte[] $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.operator.GenericKey;

        $r2 = virtualinvoke $r1.<org.spongycastle.operator.GenericKey: java.lang.Object getRepresentation()>();

        $z0 = $r2 instanceof java.security.Key;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<org.spongycastle.operator.GenericKey: java.lang.Object getRepresentation()>();

        $r3 = (java.security.Key) $r2;

        return $r3;

     label1:
        $r2 = virtualinvoke $r1.<org.spongycastle.operator.GenericKey: java.lang.Object getRepresentation()>();

        $z0 = $r2 instanceof byte[];

        if $z0 == 0 goto label2;

        $r4 = new javax.crypto.spec.SecretKeySpec;

        $r2 = virtualinvoke $r1.<org.spongycastle.operator.GenericKey: java.lang.Object getRepresentation()>();

        $r5 = (byte[]) $r2;

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, "ENC");

        return $r4;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown generic key type");

        throw $r6;
    }
    public void keySizeCheck(org.spongycastle.asn1.x509.AlgorithmIdentifier, java.security.Key) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        java.security.Key $r2;
        org.spongycastle.operator.SecretKeySizeProvider $r3;
        int $i0, $i1;
        byte[] r4, $r5;
        org.spongycastle.cms.CMSException $r6;
        java.lang.Exception $r7;

        r0 := @this: org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: java.security.Key;

        $r3 = <org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.operator.SecretKeySizeProvider KEY_SIZE_PROVIDER>;

        $i0 = interfaceinvoke $r3.<org.spongycastle.operator.SecretKeySizeProvider: int getKeySize(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r1);

        if $i0 <= 0 goto label5;

        r4 = null;

     label1:
        $r5 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>();

     label2:
        r4 = $r5;

     label3:
        if r4 == null goto label5;

        $i1 = lengthof r4;

        $i1 = $i1 * 8;

        if $i1 == $i0 goto label5;

        $r6 = new org.spongycastle.cms.CMSException;

        specialinvoke $r6.<org.spongycastle.cms.CMSException: void <init>(java.lang.String)>("Expected key size for algorithm OID not found in recipient.");

        throw $r6;

     label4:
        $r7 := @caughtexception;

        goto label3;

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label4;
    }
