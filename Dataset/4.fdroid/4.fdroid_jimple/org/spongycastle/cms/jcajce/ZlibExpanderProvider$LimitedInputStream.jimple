org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream extends java.io.FilterInputStream
private long remaining
    public void <init>(java.io.InputStream, long)
    {
        org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream r0;
        java.io.InputStream $r1;
        long $l0;

        r0 := @this: org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream;

        $r1 := @parameter0: java.io.InputStream;

        $l0 := @parameter1: long;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1);

        r0.<org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream: long remaining> = $l0;

        return;
    }
    public int read() throws java.io.IOException
    {
        org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream r0;
        int $i0;
        long $l1;
        byte $b2;
        java.io.InputStream $r1;
        org.spongycastle.util.io.StreamOverflowException $r2;

        r0 := @this: org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream;

        $l1 = r0.<org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream: long remaining>;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label1;

        $r1 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i0 < 0 goto label2;

        $l1 = r0.<org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream: long remaining>;

        $l1 = $l1 - 1L;

        r0.<org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream: long remaining> = $l1;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label1;

        return $i0;

     label1:
        $r2 = new org.spongycastle.util.io.StreamOverflowException;

        specialinvoke $r2.<org.spongycastle.util.io.StreamOverflowException: void <init>(java.lang.String)>("expanded byte limit exceeded");

        throw $r2;

     label2:
        return $i0;
    }
    public int read(byte[], int, int) throws java.io.IOException
    {
        org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream r0;
        byte[] $r1;
        int $i0, $i1;
        long $l2, $l4;
        byte $b3;
        java.io.InputStream $r2;

        r0 := @this: org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i1 >= 1 goto label1;

        $i0 = specialinvoke r0.<java.io.FilterInputStream: int read(byte[],int,int)>($r1, $i0, $i1);

        return $i0;

     label1:
        $l2 = r0.<org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream: long remaining>;

        $b3 = $l2 cmp 1L;

        if $b3 >= 0 goto label2;

        virtualinvoke r0.<org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream: int read()>();

        return -1;

     label2:
        $l2 = r0.<org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream: long remaining>;

        $l4 = (long) $i1;

        $b3 = $l2 cmp $l4;

        if $b3 <= 0 goto label4;

     label3:
        $r2 = r0.<java.io.FilterInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1);

        if $i0 <= 0 goto label5;

        $l2 = r0.<org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream: long remaining>;

        $l4 = (long) $i0;

        $l2 = $l2 - $l4;

        r0.<org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream: long remaining> = $l2;

        return $i0;

     label4:
        $l2 = r0.<org.spongycastle.cms.jcajce.ZlibExpanderProvider$LimitedInputStream: long remaining>;

        $i1 = (int) $l2;

        goto label3;

     label5:
        return $i0;
    }
