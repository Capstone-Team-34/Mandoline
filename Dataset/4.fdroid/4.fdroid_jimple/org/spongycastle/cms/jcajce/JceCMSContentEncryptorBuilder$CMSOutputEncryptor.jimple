org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor extends java.lang.Object implements org.spongycastle.operator.OutputEncryptor
private org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmIdentifier
private javax.crypto.Cipher cipher
private javax.crypto.SecretKey encKey
final org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder this$0
    void <init>(org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder, org.spongycastle.asn1.ASN1ObjectIdentifier, int, java.security.SecureRandom) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor r0;
        org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        int $i0;
        java.security.GeneralSecurityException r3;
        java.security.SecureRandom r4;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r5;
        javax.crypto.KeyGenerator $r6;
        javax.crypto.Cipher $r7;
        javax.crypto.SecretKey $r8;
        java.security.AlgorithmParameters $r9, r10;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r11;
        org.spongycastle.cms.CMSException $r12;
        java.lang.StringBuilder $r13;
        java.lang.String $r14;

        r0 := @this: org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor;

        $r1 := @parameter0: org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $i0 := @parameter2: int;

        r4 := @parameter3: java.security.SecureRandom;

        r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = staticinvoke <org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: org.spongycastle.cms.jcajce.EnvelopedDataHelper access$000(org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder)>($r1);

        $r6 = virtualinvoke $r5.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: javax.crypto.KeyGenerator createKeyGenerator(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

        if r4 != null goto label1;

        r4 = new java.security.SecureRandom;

        specialinvoke r4.<java.security.SecureRandom: void <init>()>();

     label1:
        if $i0 >= 0 goto label6;

        virtualinvoke $r6.<javax.crypto.KeyGenerator: void init(java.security.SecureRandom)>(r4);

     label2:
        $r5 = staticinvoke <org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: org.spongycastle.cms.jcajce.EnvelopedDataHelper access$000(org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder)>($r1);

        $r7 = virtualinvoke $r5.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: javax.crypto.Cipher createCipher(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

        r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: javax.crypto.Cipher cipher> = $r7;

        $r8 = virtualinvoke $r6.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: javax.crypto.SecretKey encKey> = $r8;

        $r5 = staticinvoke <org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: org.spongycastle.cms.jcajce.EnvelopedDataHelper access$000(org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder)>($r1);

        $r8 = r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: javax.crypto.SecretKey encKey>;

        $r9 = virtualinvoke $r5.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.security.AlgorithmParameters generateParameters(org.spongycastle.asn1.ASN1ObjectIdentifier,javax.crypto.SecretKey,java.security.SecureRandom)>($r2, $r8, r4);

        r10 = $r9;

        $r7 = r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: javax.crypto.Cipher cipher>;

        $r8 = r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: javax.crypto.SecretKey encKey>;

     label3:
        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)>(1, $r8, $r9, r4);

     label4:
        if $r9 != null goto label5;

        $r7 = r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: javax.crypto.Cipher cipher>;

        r10 = virtualinvoke $r7.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();

     label5:
        $r5 = staticinvoke <org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: org.spongycastle.cms.jcajce.EnvelopedDataHelper access$000(org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder)>($r1);

        $r11 = virtualinvoke $r5.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(org.spongycastle.asn1.ASN1ObjectIdentifier,java.security.AlgorithmParameters)>($r2, r10);

        r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmIdentifier> = $r11;

        return;

     label6:
        virtualinvoke $r6.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>($i0, r4);

        goto label2;

     label7:
        r3 := @caughtexception;

        $r12 = new org.spongycastle.cms.CMSException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to initialize cipher: ");

        $r14 = virtualinvoke r3.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r14, r3);

        throw $r12;

        catch java.security.GeneralSecurityException from label3 to label4 with label7;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()
    {
        org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor;

        r1 = r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmIdentifier>;

        return r1;
    }
    public org.spongycastle.operator.GenericKey getKey()
    {
        org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor r0;
        org.spongycastle.operator.jcajce.JceGenericKey $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        javax.crypto.SecretKey $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor;

        $r1 = new org.spongycastle.operator.jcajce.JceGenericKey;

        $r2 = r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: org.spongycastle.asn1.x509.AlgorithmIdentifier algorithmIdentifier>;

        $r3 = r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: javax.crypto.SecretKey encKey>;

        specialinvoke $r1.<org.spongycastle.operator.jcajce.JceGenericKey: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>($r2, $r3);

        return $r1;
    }
    public java.io.OutputStream getOutputStream(java.io.OutputStream)
    {
        org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor r0;
        java.io.OutputStream $r1;
        javax.crypto.CipherOutputStream $r2;
        javax.crypto.Cipher $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = new javax.crypto.CipherOutputStream;

        $r3 = r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: javax.crypto.Cipher cipher>;

        specialinvoke $r2.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r1, $r3);

        return $r2;
    }
