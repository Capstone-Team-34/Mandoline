org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder extends java.lang.Object
private static final org.spongycastle.operator.SecretKeySizeProvider KEY_SIZE_PROVIDER
private final org.spongycastle.asn1.ASN1ObjectIdentifier encryptionOID
private org.spongycastle.cms.jcajce.EnvelopedDataHelper helper
private final int keySize
private java.security.SecureRandom random
    static void <clinit>()
    {
        org.spongycastle.operator.SecretKeySizeProvider $r0;

        $r0 = <org.spongycastle.operator.DefaultSecretKeySizeProvider: org.spongycastle.operator.SecretKeySizeProvider INSTANCE>;

        <org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: org.spongycastle.operator.SecretKeySizeProvider KEY_SIZE_PROVIDER> = $r0;

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        int $i0;
        org.spongycastle.operator.SecretKeySizeProvider $r2;

        r0 := @this: org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = <org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: org.spongycastle.operator.SecretKeySizeProvider KEY_SIZE_PROVIDER>;

        $i0 = interfaceinvoke $r2.<org.spongycastle.operator.SecretKeySizeProvider: int getKeySize(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        specialinvoke r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,int)>($r1, $i0);

        return;
    }
    public void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier, int)
    {
        org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r5;
        int $i0, $i1;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r2;
        org.spongycastle.cms.jcajce.DefaultJcaJceExtHelper $r3;
        org.spongycastle.operator.SecretKeySizeProvider $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r3 = new org.spongycastle.cms.jcajce.DefaultJcaJceExtHelper;

        specialinvoke $r3.<org.spongycastle.cms.jcajce.DefaultJcaJceExtHelper: void <init>()>();

        specialinvoke $r2.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: void <init>(org.spongycastle.cms.jcajce.JcaJceExtHelper)>($r3);

        r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper> = $r2;

        r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier encryptionOID> = $r1;

        $r4 = <org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: org.spongycastle.operator.SecretKeySizeProvider KEY_SIZE_PROVIDER>;

        $i1 = interfaceinvoke $r4.<org.spongycastle.operator.SecretKeySizeProvider: int getKeySize(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        $r5 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier des_EDE3_CBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        if $i0 == 168 goto label1;

        if $i0 == $i1 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("incorrect keySize for encryptionOID passed to builder.");

        throw $r6;

     label1:
        r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: int keySize> = 168;

        return;

     label2:
        $r5 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier desCBC>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

        if $i0 == 56 goto label3;

        if $i0 == $i1 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("incorrect keySize for encryptionOID passed to builder.");

        throw $r6;

     label3:
        r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: int keySize> = 56;

        return;

     label4:
        if $i1 <= 0 goto label5;

        if $i1 == $i0 goto label5;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("incorrect keySize for encryptionOID passed to builder.");

        throw $r6;

     label5:
        r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: int keySize> = $i0;

        return;
    }
    static org.spongycastle.cms.jcajce.EnvelopedDataHelper access$000(org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder)
    {
        org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder $r0;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper r1;

        $r0 := @parameter0: org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder;

        r1 = $r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

        return r1;
    }
    public org.spongycastle.operator.OutputEncryptor build() throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder r0;
        org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        int $i0;
        java.security.SecureRandom $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder;

        $r1 = new org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor;

        $r2 = r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: org.spongycastle.asn1.ASN1ObjectIdentifier encryptionOID>;

        $i0 = r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: int keySize>;

        $r3 = r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: java.security.SecureRandom random>;

        specialinvoke $r1.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: void <init>(org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder,org.spongycastle.asn1.ASN1ObjectIdentifier,int,java.security.SecureRandom)>(r0, $r2, $i0, $r3);

        return $r1;
    }
    public org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder setProvider(java.lang.String)
    {
        org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder r0;
        java.lang.String $r1;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r2;
        org.spongycastle.cms.jcajce.NamedJcaJceExtHelper $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r3 = new org.spongycastle.cms.jcajce.NamedJcaJceExtHelper;

        specialinvoke $r3.<org.spongycastle.cms.jcajce.NamedJcaJceExtHelper: void <init>(java.lang.String)>($r1);

        specialinvoke $r2.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: void <init>(org.spongycastle.cms.jcajce.JcaJceExtHelper)>($r3);

        r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder setProvider(java.security.Provider)
    {
        org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder r0;
        java.security.Provider $r1;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r2;
        org.spongycastle.cms.jcajce.ProviderJcaJceExtHelper $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r3 = new org.spongycastle.cms.jcajce.ProviderJcaJceExtHelper;

        specialinvoke $r3.<org.spongycastle.cms.jcajce.ProviderJcaJceExtHelper: void <init>(java.security.Provider)>($r1);

        specialinvoke $r2.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: void <init>(org.spongycastle.cms.jcajce.JcaJceExtHelper)>($r3);

        r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder setSecureRandom(java.security.SecureRandom)
    {
        org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder r0;
        java.security.SecureRandom $r1;

        r0 := @this: org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder;

        $r1 := @parameter0: java.security.SecureRandom;

        r0.<org.spongycastle.cms.jcajce.JceCMSContentEncryptorBuilder: java.security.SecureRandom random> = $r1;

        return r0;
    }
