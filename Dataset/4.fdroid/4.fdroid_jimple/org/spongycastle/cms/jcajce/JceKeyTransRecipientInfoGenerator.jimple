org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator extends org.spongycastle.cms.KeyTransRecipientInfoGenerator
    public void <init>(java.security.cert.X509Certificate) throws java.security.cert.CertificateEncodingException
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator r0;
        java.security.cert.X509Certificate $r1;
        org.spongycastle.asn1.cms.IssuerAndSerialNumber $r2;
        org.spongycastle.asn1.x509.Certificate $r3;
        org.spongycastle.cert.jcajce.JcaX509CertificateHolder $r4;
        org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper $r5;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = new org.spongycastle.asn1.cms.IssuerAndSerialNumber;

        $r4 = new org.spongycastle.cert.jcajce.JcaX509CertificateHolder;

        specialinvoke $r4.<org.spongycastle.cert.jcajce.JcaX509CertificateHolder: void <init>(java.security.cert.X509Certificate)>($r1);

        $r3 = virtualinvoke $r4.<org.spongycastle.cert.jcajce.JcaX509CertificateHolder: org.spongycastle.asn1.x509.Certificate toASN1Structure()>();

        specialinvoke $r2.<org.spongycastle.asn1.cms.IssuerAndSerialNumber: void <init>(org.spongycastle.asn1.x509.Certificate)>($r3);

        $r5 = new org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper;

        specialinvoke $r5.<org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper: void <init>(java.security.cert.X509Certificate)>($r1);

        specialinvoke r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: void <init>(org.spongycastle.asn1.cms.IssuerAndSerialNumber,org.spongycastle.operator.AsymmetricKeyWrapper)>($r2, $r5);

        return;
    }
    public void <init>(java.security.cert.X509Certificate, org.spongycastle.asn1.x509.AlgorithmIdentifier) throws java.security.cert.CertificateEncodingException
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator r0;
        java.security.cert.X509Certificate $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.cms.IssuerAndSerialNumber $r3;
        org.spongycastle.cert.jcajce.JcaX509CertificateHolder $r4;
        org.spongycastle.asn1.x509.Certificate $r5;
        org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper $r6;
        java.security.PublicKey $r7;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 = new org.spongycastle.asn1.cms.IssuerAndSerialNumber;

        $r4 = new org.spongycastle.cert.jcajce.JcaX509CertificateHolder;

        specialinvoke $r4.<org.spongycastle.cert.jcajce.JcaX509CertificateHolder: void <init>(java.security.cert.X509Certificate)>($r1);

        $r5 = virtualinvoke $r4.<org.spongycastle.cert.jcajce.JcaX509CertificateHolder: org.spongycastle.asn1.x509.Certificate toASN1Structure()>();

        specialinvoke $r3.<org.spongycastle.asn1.cms.IssuerAndSerialNumber: void <init>(org.spongycastle.asn1.x509.Certificate)>($r5);

        $r6 = new org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper;

        $r7 = virtualinvoke $r1.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        specialinvoke $r6.<org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.PublicKey)>($r2, $r7);

        specialinvoke r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: void <init>(org.spongycastle.asn1.cms.IssuerAndSerialNumber,org.spongycastle.operator.AsymmetricKeyWrapper)>($r3, $r6);

        return;
    }
    public void <init>(byte[], java.security.PublicKey)
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator r0;
        byte[] $r1;
        java.security.PublicKey $r2;
        org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.security.PublicKey;

        $r3 = new org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper;

        specialinvoke $r3.<org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper: void <init>(java.security.PublicKey)>($r2);

        specialinvoke r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: void <init>(byte[],org.spongycastle.operator.AsymmetricKeyWrapper)>($r1, $r3);

        return;
    }
    public void <init>(byte[], org.spongycastle.asn1.x509.AlgorithmIdentifier, java.security.PublicKey)
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator r0;
        byte[] $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        java.security.PublicKey $r3;
        org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper $r4;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 := @parameter2: java.security.PublicKey;

        $r4 = new org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper;

        specialinvoke $r4.<org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.PublicKey)>($r2, $r3);

        specialinvoke r0.<org.spongycastle.cms.KeyTransRecipientInfoGenerator: void <init>(byte[],org.spongycastle.operator.AsymmetricKeyWrapper)>($r1, $r4);

        return;
    }
    public org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator setAlgorithmMapping(org.spongycastle.asn1.ASN1ObjectIdentifier, java.lang.String)
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.lang.String $r2;
        org.spongycastle.operator.AsymmetricKeyWrapper $r3;
        org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper $r4;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator: org.spongycastle.operator.AsymmetricKeyWrapper wrapper>;

        $r4 = (org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper) $r3;

        virtualinvoke $r4.<org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper: org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper setAlgorithmMapping(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>($r1, $r2);

        return r0;
    }
    public org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator setProvider(java.lang.String)
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator r0;
        java.lang.String $r1;
        org.spongycastle.operator.AsymmetricKeyWrapper $r2;
        org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator: org.spongycastle.operator.AsymmetricKeyWrapper wrapper>;

        $r3 = (org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper) $r2;

        virtualinvoke $r3.<org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper: org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper setProvider(java.lang.String)>($r1);

        return r0;
    }
    public org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator setProvider(java.security.Provider)
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator r0;
        java.security.Provider $r1;
        org.spongycastle.operator.AsymmetricKeyWrapper $r2;
        org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator;

        $r1 := @parameter0: java.security.Provider;

        $r2 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipientInfoGenerator: org.spongycastle.operator.AsymmetricKeyWrapper wrapper>;

        $r3 = (org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper) $r2;

        virtualinvoke $r3.<org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper: org.spongycastle.operator.jcajce.JceAsymmetricKeyWrapper setProvider(java.security.Provider)>($r1);

        return r0;
    }
