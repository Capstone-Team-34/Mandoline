org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1 extends java.lang.Object implements org.spongycastle.operator.MacCalculator
final org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient this$0
final org.spongycastle.asn1.x509.AlgorithmIdentifier val$contentMacAlgorithm
final javax.crypto.Mac val$dataMac
final java.security.Key val$secretKey
    void <init>(org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient, org.spongycastle.asn1.x509.AlgorithmIdentifier, java.security.Key, javax.crypto.Mac)
    {
        org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1 r0;
        org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        java.security.Key $r3;
        javax.crypto.Mac $r4;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1;

        $r1 := @parameter0: org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 := @parameter2: java.security.Key;

        $r4 := @parameter3: javax.crypto.Mac;

        r0.<org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1: org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient this$0> = $r1;

        r0.<org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1: org.spongycastle.asn1.x509.AlgorithmIdentifier val$contentMacAlgorithm> = $r2;

        r0.<org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1: java.security.Key val$secretKey> = $r3;

        r0.<org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1: javax.crypto.Mac val$dataMac> = $r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()
    {
        org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1 r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier r1;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1;

        r1 = r0.<org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1: org.spongycastle.asn1.x509.AlgorithmIdentifier val$contentMacAlgorithm>;

        return r1;
    }
    public org.spongycastle.operator.GenericKey getKey()
    {
        org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1 r0;
        org.spongycastle.operator.jcajce.JceGenericKey $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        java.security.Key $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1;

        $r1 = new org.spongycastle.operator.jcajce.JceGenericKey;

        $r2 = r0.<org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1: org.spongycastle.asn1.x509.AlgorithmIdentifier val$contentMacAlgorithm>;

        $r3 = r0.<org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1: java.security.Key val$secretKey>;

        specialinvoke $r1.<org.spongycastle.operator.jcajce.JceGenericKey: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>($r2, $r3);

        return $r1;
    }
    public byte[] getMac()
    {
        org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1 r0;
        byte[] $r1;
        javax.crypto.Mac $r2;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1;

        $r2 = r0.<org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1: javax.crypto.Mac val$dataMac>;

        $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal()>();

        return $r1;
    }
    public java.io.OutputStream getOutputStream()
    {
        org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1 r0;
        org.spongycastle.jcajce.io.MacOutputStream $r1;
        javax.crypto.Mac $r2;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1;

        $r1 = new org.spongycastle.jcajce.io.MacOutputStream;

        $r2 = r0.<org.spongycastle.cms.jcajce.JceKeyTransAuthenticatedRecipient$1: javax.crypto.Mac val$dataMac>;

        specialinvoke $r1.<org.spongycastle.jcajce.io.MacOutputStream: void <init>(javax.crypto.Mac)>($r2);

        return $r1;
    }
