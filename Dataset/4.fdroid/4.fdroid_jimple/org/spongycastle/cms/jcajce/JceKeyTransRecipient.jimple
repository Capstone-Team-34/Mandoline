org.spongycastle.cms.jcajce.JceKeyTransRecipient extends java.lang.Object implements org.spongycastle.cms.KeyTransRecipient
protected org.spongycastle.cms.jcajce.EnvelopedDataHelper contentHelper
protected java.util.Map extraMappings
protected org.spongycastle.cms.jcajce.EnvelopedDataHelper helper
private java.security.PrivateKey recipientKey
protected boolean unwrappedKeyMustBeEncodable
protected boolean validateKeySize
    public void <init>(java.security.PrivateKey)
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipient r0;
        java.security.PrivateKey $r1;
        org.spongycastle.cms.jcajce.DefaultJcaJceExtHelper $r2;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r3;
        java.util.HashMap $r4;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipient;

        $r1 := @parameter0: java.security.PrivateKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r2 = new org.spongycastle.cms.jcajce.DefaultJcaJceExtHelper;

        specialinvoke $r2.<org.spongycastle.cms.jcajce.DefaultJcaJceExtHelper: void <init>()>();

        specialinvoke $r3.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: void <init>(org.spongycastle.cms.jcajce.JcaJceExtHelper)>($r2);

        r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper> = $r3;

        $r3 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

        r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper contentHelper> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: java.util.Map extraMappings> = $r4;

        r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: boolean validateKeySize> = 0;

        r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: java.security.PrivateKey recipientKey> = $r1;

        return;
    }
    protected java.security.Key extractSecretKey(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.asn1.x509.AlgorithmIdentifier, byte[]) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipient r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1, $r2;
        byte[] $r3;
        org.spongycastle.operator.OperatorException r4;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r5;
        java.security.PrivateKey $r6;
        org.spongycastle.operator.jcajce.JceAsymmetricKeyUnwrapper $r7;
        boolean $z0;
        java.util.Map $r8;
        java.util.Set $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        org.spongycastle.asn1.ASN1ObjectIdentifier r12;
        java.lang.String $r13;
        org.spongycastle.operator.GenericKey $r14;
        java.security.Key $r15;
        org.spongycastle.cms.CMSException $r16;
        java.lang.StringBuilder $r17;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipient;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 := @parameter2: byte[];

        $r5 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

        $r6 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: java.security.PrivateKey recipientKey>;

        $r7 = virtualinvoke $r5.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: org.spongycastle.operator.jcajce.JceAsymmetricKeyUnwrapper createAsymmetricUnwrapper(org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.PrivateKey)>($r1, $r6);

        $z0 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: boolean unwrappedKeyMustBeEncodable>;

        $r7 = virtualinvoke $r7.<org.spongycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.spongycastle.operator.jcajce.JceAsymmetricKeyUnwrapper setMustProduceEncodableUnwrappedKey(boolean)>($z0);

        $r8 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: java.util.Map extraMappings>;

        $z0 = interfaceinvoke $r8.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r8 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: java.util.Map extraMappings>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r11;

        $r8 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: java.util.Map extraMappings>;

        $r11 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12);

        $r13 = (java.lang.String) $r11;

        virtualinvoke $r7.<org.spongycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.spongycastle.operator.jcajce.JceAsymmetricKeyUnwrapper setAlgorithmMapping(org.spongycastle.asn1.ASN1ObjectIdentifier,java.lang.String)>(r12, $r13);

        goto label1;

     label2:
        $r5 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

     label3:
        r12 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r14 = virtualinvoke $r7.<org.spongycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.spongycastle.operator.GenericKey generateUnwrappedKey(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r2, $r3);

        $r15 = virtualinvoke $r5.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.security.Key getJceKey(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.operator.GenericKey)>(r12, $r14);

     label4:
        $z0 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: boolean validateKeySize>;

        if $z0 == 0 goto label8;

        $r5 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

     label5:
        virtualinvoke $r5.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: void keySizeCheck(org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>($r2, $r15);

     label6:
        return $r15;

     label7:
        r4 := @caughtexception;

        $r16 = new org.spongycastle.cms.CMSException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception unwrapping key: ");

        $r13 = virtualinvoke r4.<org.spongycastle.operator.OperatorException: java.lang.String getMessage()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r13, r4);

        throw $r16;

     label8:
        return $r15;

        catch org.spongycastle.operator.OperatorException from label3 to label4 with label7;
        catch org.spongycastle.operator.OperatorException from label5 to label6 with label7;
    }
    public org.spongycastle.cms.jcajce.JceKeyTransRecipient setAlgorithmMapping(org.spongycastle.asn1.ASN1ObjectIdentifier, java.lang.String)
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipient r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.lang.String $r2;
        java.util.Map $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipient;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: java.util.Map extraMappings>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return r0;
    }
    public org.spongycastle.cms.jcajce.JceKeyTransRecipient setContentProvider(java.lang.String)
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipient r0;
        java.lang.String $r1;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r2;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipient;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.spongycastle.cms.jcajce.CMSUtils: org.spongycastle.cms.jcajce.EnvelopedDataHelper createContentHelper(java.lang.String)>($r1);

        r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper contentHelper> = $r2;

        return r0;
    }
    public org.spongycastle.cms.jcajce.JceKeyTransRecipient setContentProvider(java.security.Provider)
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipient r0;
        java.security.Provider $r1;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r2;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipient;

        $r1 := @parameter0: java.security.Provider;

        $r2 = staticinvoke <org.spongycastle.cms.jcajce.CMSUtils: org.spongycastle.cms.jcajce.EnvelopedDataHelper createContentHelper(java.security.Provider)>($r1);

        r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper contentHelper> = $r2;

        return r0;
    }
    public org.spongycastle.cms.jcajce.JceKeyTransRecipient setKeySizeValidation(boolean)
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipient r0;
        boolean $z0;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipient;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: boolean validateKeySize> = $z0;

        return r0;
    }
    public org.spongycastle.cms.jcajce.JceKeyTransRecipient setMustProduceEncodableUnwrappedKey(boolean)
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipient r0;
        boolean $z0;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipient;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: boolean unwrappedKeyMustBeEncodable> = $z0;

        return r0;
    }
    public org.spongycastle.cms.jcajce.JceKeyTransRecipient setProvider(java.lang.String)
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipient r0;
        java.lang.String $r1;
        org.spongycastle.cms.jcajce.NamedJcaJceExtHelper $r2;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipient;

        $r1 := @parameter0: java.lang.String;

        $r3 = new org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r2 = new org.spongycastle.cms.jcajce.NamedJcaJceExtHelper;

        specialinvoke $r2.<org.spongycastle.cms.jcajce.NamedJcaJceExtHelper: void <init>(java.lang.String)>($r1);

        specialinvoke $r3.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: void <init>(org.spongycastle.cms.jcajce.JcaJceExtHelper)>($r2);

        r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper> = $r3;

        $r3 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

        r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper contentHelper> = $r3;

        return r0;
    }
    public org.spongycastle.cms.jcajce.JceKeyTransRecipient setProvider(java.security.Provider)
    {
        org.spongycastle.cms.jcajce.JceKeyTransRecipient r0;
        java.security.Provider $r1;
        org.spongycastle.cms.jcajce.ProviderJcaJceExtHelper $r2;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyTransRecipient;

        $r1 := @parameter0: java.security.Provider;

        $r3 = new org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r2 = new org.spongycastle.cms.jcajce.ProviderJcaJceExtHelper;

        specialinvoke $r2.<org.spongycastle.cms.jcajce.ProviderJcaJceExtHelper: void <init>(java.security.Provider)>($r1);

        specialinvoke $r3.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: void <init>(org.spongycastle.cms.jcajce.JcaJceExtHelper)>($r2);

        r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper> = $r3;

        $r3 = r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

        r0.<org.spongycastle.cms.jcajce.JceKeyTransRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper contentHelper> = $r3;

        return r0;
    }
