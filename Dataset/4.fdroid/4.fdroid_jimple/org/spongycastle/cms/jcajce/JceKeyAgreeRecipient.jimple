org.spongycastle.cms.jcajce.JceKeyAgreeRecipient extends java.lang.Object implements org.spongycastle.cms.KeyAgreeRecipient
private static org.spongycastle.cms.jcajce.KeyMaterialGenerator ecc_cms_Generator
private static org.spongycastle.cms.jcajce.KeyMaterialGenerator old_ecc_cms_Generator
private static final java.util.Set possibleOldMessages
protected org.spongycastle.cms.jcajce.EnvelopedDataHelper contentHelper
protected org.spongycastle.cms.jcajce.EnvelopedDataHelper helper
private org.spongycastle.operator.SecretKeySizeProvider keySizeProvider
private java.security.PrivateKey recipientKey
    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.util.Set $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        org.spongycastle.cms.jcajce.JceKeyAgreeRecipient$1 $r3;
        org.spongycastle.cms.jcajce.RFC5753KeyMaterialGenerator $r4;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: java.util.Set possibleOldMessages> = $r0;

        $r1 = <org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: java.util.Set possibleOldMessages>;

        $r2 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier dhSinglePass_stdDH_sha1kdf_scheme>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r1 = <org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: java.util.Set possibleOldMessages>;

        $r2 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier mqvSinglePass_sha1kdf_scheme>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r3 = new org.spongycastle.cms.jcajce.JceKeyAgreeRecipient$1;

        specialinvoke $r3.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient$1: void <init>()>();

        <org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.KeyMaterialGenerator old_ecc_cms_Generator> = $r3;

        $r4 = new org.spongycastle.cms.jcajce.RFC5753KeyMaterialGenerator;

        specialinvoke $r4.<org.spongycastle.cms.jcajce.RFC5753KeyMaterialGenerator: void <init>()>();

        <org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.KeyMaterialGenerator ecc_cms_Generator> = $r4;

        return;
    }
    public void <init>(java.security.PrivateKey)
    {
        org.spongycastle.cms.jcajce.JceKeyAgreeRecipient r0;
        java.security.PrivateKey $r1;
        org.spongycastle.cms.jcajce.DefaultJcaJceExtHelper $r2;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r3;
        org.spongycastle.operator.DefaultSecretKeySizeProvider $r4;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyAgreeRecipient;

        $r1 := @parameter0: java.security.PrivateKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r2 = new org.spongycastle.cms.jcajce.DefaultJcaJceExtHelper;

        specialinvoke $r2.<org.spongycastle.cms.jcajce.DefaultJcaJceExtHelper: void <init>()>();

        specialinvoke $r3.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: void <init>(org.spongycastle.cms.jcajce.JcaJceExtHelper)>($r2);

        r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper> = $r3;

        $r3 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

        r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper contentHelper> = $r3;

        $r4 = new org.spongycastle.operator.DefaultSecretKeySizeProvider;

        specialinvoke $r4.<org.spongycastle.operator.DefaultSecretKeySizeProvider: void <init>()>();

        r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.operator.SecretKeySizeProvider keySizeProvider> = $r4;

        r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: java.security.PrivateKey recipientKey> = $r1;

        return;
    }
    private javax.crypto.SecretKey calculateAgreedWrapKey(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.asn1.ASN1ObjectIdentifier, java.security.PublicKey, org.spongycastle.asn1.ASN1OctetString, java.security.PrivateKey, org.spongycastle.cms.jcajce.KeyMaterialGenerator) throws org.spongycastle.cms.CMSException, java.security.GeneralSecurityException, java.io.IOException
    {
        org.spongycastle.cms.jcajce.JceKeyAgreeRecipient r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1, $r12;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2, $r9;
        java.security.PublicKey $r3, $r17;
        org.spongycastle.asn1.ASN1OctetString $r4;
        java.security.PrivateKey $r5;
        org.spongycastle.cms.jcajce.KeyMaterialGenerator $r6, $r19;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo r7;
        java.security.spec.X509EncodedKeySpec r8;
        boolean $z0;
        byte[] $r10;
        org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial $r11;
        org.spongycastle.asn1.cms.OriginatorPublicKey $r13;
        org.spongycastle.asn1.DERBitString $r14;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r15;
        java.security.KeyFactory $r16;
        javax.crypto.KeyAgreement $r18;
        org.spongycastle.operator.SecretKeySizeProvider $r20;
        int $i0;
        org.spongycastle.jcajce.spec.MQVParameterSpec $r21;
        java.lang.String $r22;
        javax.crypto.SecretKey $r23;
        org.spongycastle.jcajce.spec.UserKeyingMaterialSpec r24;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyAgreeRecipient;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 := @parameter2: java.security.PublicKey;

        $r4 := @parameter3: org.spongycastle.asn1.ASN1OctetString;

        $r5 := @parameter4: java.security.PrivateKey;

        $r6 := @parameter5: org.spongycastle.cms.jcajce.KeyMaterialGenerator;

        $r9 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $z0 = staticinvoke <org.spongycastle.cms.jcajce.CMSUtils: boolean isMQV(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r9);

        if $z0 == 0 goto label4;

        $r10 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r11 = staticinvoke <org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial getInstance(java.lang.Object)>($r10);

        r7 = new org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r12 = virtualinvoke r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithmIdentifier()>();

        $r13 = virtualinvoke $r11.<org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.cms.OriginatorPublicKey getEphemeralPublicKey()>();

        $r14 = virtualinvoke $r13.<org.spongycastle.asn1.cms.OriginatorPublicKey: org.spongycastle.asn1.DERBitString getPublicKey()>();

        $r10 = virtualinvoke $r14.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        specialinvoke r7.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r12, $r10);

        r8 = new java.security.spec.X509EncodedKeySpec;

        $r10 = virtualinvoke r7.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: byte[] getEncoded()>();

        specialinvoke r8.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r10);

        $r15 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

        $r9 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r16 = virtualinvoke $r15.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.security.KeyFactory createKeyFactory(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r9);

        $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r8);

        $r15 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

        $r9 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r18 = virtualinvoke $r15.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: javax.crypto.KeyAgreement createKeyAgreement(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r9);

        $r4 = virtualinvoke $r11.<org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.ASN1OctetString getAddedukm()>();

        if $r4 == null goto label3;

        $r4 = virtualinvoke $r11.<org.spongycastle.asn1.cms.ecc.MQVuserKeyingMaterial: org.spongycastle.asn1.ASN1OctetString getAddedukm()>();

        $r10 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

     label1:
        $r19 = <org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.KeyMaterialGenerator old_ecc_cms_Generator>;

        if $r6 != $r19 goto label2;

        $r6 = <org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.KeyMaterialGenerator old_ecc_cms_Generator>;

        $r20 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.operator.SecretKeySizeProvider keySizeProvider>;

        $i0 = interfaceinvoke $r20.<org.spongycastle.operator.SecretKeySizeProvider: int getKeySize(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

        $r10 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.KeyMaterialGenerator: byte[] generateKDFMaterial(org.spongycastle.asn1.ASN1ObjectIdentifier,int,byte[])>($r2, $i0, $r10);

     label2:
        $r21 = new org.spongycastle.jcajce.spec.MQVParameterSpec;

        specialinvoke $r21.<org.spongycastle.jcajce.spec.MQVParameterSpec: void <init>(java.security.PrivateKey,java.security.PublicKey,byte[])>($r5, $r17, $r10);

        virtualinvoke $r18.<javax.crypto.KeyAgreement: void init(java.security.Key,java.security.spec.AlgorithmParameterSpec)>($r5, $r21);

        virtualinvoke $r18.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r3, 1);

        $r22 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r23 = virtualinvoke $r18.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>($r22);

        return $r23;

     label3:
        $r10 = null;

        goto label1;

     label4:
        $r15 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

        $r9 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r18 = virtualinvoke $r15.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: javax.crypto.KeyAgreement createKeyAgreement(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r9);

        if $r4 == null goto label6;

        $r20 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.operator.SecretKeySizeProvider keySizeProvider>;

        $i0 = interfaceinvoke $r20.<org.spongycastle.operator.SecretKeySizeProvider: int getKeySize(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

        $r10 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r10 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.KeyMaterialGenerator: byte[] generateKDFMaterial(org.spongycastle.asn1.ASN1ObjectIdentifier,int,byte[])>($r2, $i0, $r10);

        r24 = new org.spongycastle.jcajce.spec.UserKeyingMaterialSpec;

        specialinvoke r24.<org.spongycastle.jcajce.spec.UserKeyingMaterialSpec: void <init>(byte[])>($r10);

     label5:
        virtualinvoke $r18.<javax.crypto.KeyAgreement: void init(java.security.Key,java.security.spec.AlgorithmParameterSpec)>($r5, r24);

        virtualinvoke $r18.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r3, 1);

        $r22 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r23 = virtualinvoke $r18.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>($r22);

        return $r23;

     label6:
        $r20 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.operator.SecretKeySizeProvider keySizeProvider>;

        $i0 = interfaceinvoke $r20.<org.spongycastle.operator.SecretKeySizeProvider: int getKeySize(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

        $r10 = interfaceinvoke $r6.<org.spongycastle.cms.jcajce.KeyMaterialGenerator: byte[] generateKDFMaterial(org.spongycastle.asn1.ASN1ObjectIdentifier,int,byte[])>($r2, $i0, null);

        r24 = new org.spongycastle.jcajce.spec.UserKeyingMaterialSpec;

        specialinvoke r24.<org.spongycastle.jcajce.spec.UserKeyingMaterialSpec: void <init>(byte[])>($r10);

        goto label5;
    }
    private java.security.Key unwrapSessionKey(org.spongycastle.asn1.ASN1ObjectIdentifier, javax.crypto.SecretKey, org.spongycastle.asn1.ASN1ObjectIdentifier, byte[]) throws org.spongycastle.cms.CMSException, java.security.InvalidKeyException, java.security.NoSuchAlgorithmException
    {
        org.spongycastle.cms.jcajce.JceKeyAgreeRecipient r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r3;
        javax.crypto.SecretKey $r2;
        byte[] $r4;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r5;
        javax.crypto.Cipher $r6;
        java.lang.String $r7;
        java.security.Key $r8;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyAgreeRecipient;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: javax.crypto.SecretKey;

        $r3 := @parameter2: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r4 := @parameter3: byte[];

        $r5 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

        $r6 = virtualinvoke $r5.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: javax.crypto.Cipher createCipher(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(4, $r2);

        $r5 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

        $r7 = virtualinvoke $r5.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.lang.String getBaseCipherName(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r3);

        $r8 = virtualinvoke $r6.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>($r4, $r7, 3);

        return $r8;
    }
    protected java.security.Key extractSecretKey(org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.asn1.x509.AlgorithmIdentifier, org.spongycastle.asn1.x509.SubjectPublicKeyInfo, org.spongycastle.asn1.ASN1OctetString, byte[]) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.jcajce.JceKeyAgreeRecipient r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1, $r2, $r8;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r3;
        org.spongycastle.asn1.ASN1OctetString $r4;
        byte[] $r5, $r10;
        java.security.spec.X509EncodedKeySpec r6;
        org.spongycastle.asn1.ASN1Encodable $r7;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r9, $r12;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r11;
        java.security.KeyFactory $r13;
        java.security.PublicKey $r14;
        java.security.PrivateKey $r15;
        org.spongycastle.cms.jcajce.KeyMaterialGenerator $r16;
        javax.crypto.SecretKey $r17;
        java.security.Key $r18;
        java.security.InvalidKeyException r19, r23;
        java.util.Set $r20;
        boolean $z0;
        java.security.NoSuchAlgorithmException r21;
        org.spongycastle.cms.CMSException $r22;
        java.security.spec.InvalidKeySpecException r24;
        javax.crypto.NoSuchPaddingException r25;
        java.lang.Exception r26;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyAgreeRecipient;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 := @parameter2: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r4 := @parameter3: org.spongycastle.asn1.ASN1OctetString;

        $r5 := @parameter4: byte[];

     label01:
        $r7 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $r8 = staticinvoke <org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

     label02:
        r6 = new java.security.spec.X509EncodedKeySpec;

     label03:
        $r10 = virtualinvoke $r3.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: byte[] getEncoded()>();

        specialinvoke r6.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r10);

     label04:
        $r11 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

     label05:
        $r12 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r13 = virtualinvoke $r11.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: java.security.KeyFactory createKeyFactory(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r12);

        $r14 = virtualinvoke $r13.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r6);

     label06:
        $r15 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: java.security.PrivateKey recipientKey>;

     label07:
        $r16 = <org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.KeyMaterialGenerator ecc_cms_Generator>;

     label08:
        $r17 = specialinvoke r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: javax.crypto.SecretKey calculateAgreedWrapKey(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1ObjectIdentifier,java.security.PublicKey,org.spongycastle.asn1.ASN1OctetString,java.security.PrivateKey,org.spongycastle.cms.jcajce.KeyMaterialGenerator)>($r1, $r9, $r14, $r4, $r15, $r16);

        $r12 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r18 = specialinvoke r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: java.security.Key unwrapSessionKey(org.spongycastle.asn1.ASN1ObjectIdentifier,javax.crypto.SecretKey,org.spongycastle.asn1.ASN1ObjectIdentifier,byte[])>($r9, $r17, $r12, $r5);

     label09:
        return $r18;

     label10:
        r19 := @caughtexception;

        $r20 = <org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: java.util.Set possibleOldMessages>;

     label11:
        $r12 = virtualinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $z0 = interfaceinvoke $r20.<java.util.Set: boolean contains(java.lang.Object)>($r12);

     label12:
        if $z0 == 0 goto label17;

     label13:
        $r15 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: java.security.PrivateKey recipientKey>;

     label14:
        $r16 = <org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.KeyMaterialGenerator old_ecc_cms_Generator>;

     label15:
        $r17 = specialinvoke r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: javax.crypto.SecretKey calculateAgreedWrapKey(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1ObjectIdentifier,java.security.PublicKey,org.spongycastle.asn1.ASN1OctetString,java.security.PrivateKey,org.spongycastle.cms.jcajce.KeyMaterialGenerator)>($r1, $r9, $r14, $r4, $r15, $r16);

        $r12 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r18 = specialinvoke r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: java.security.Key unwrapSessionKey(org.spongycastle.asn1.ASN1ObjectIdentifier,javax.crypto.SecretKey,org.spongycastle.asn1.ASN1ObjectIdentifier,byte[])>($r9, $r17, $r12, $r5);

     label16:
        return $r18;

     label17:
        throw r19;

     label18:
        r21 := @caughtexception;

        $r22 = new org.spongycastle.cms.CMSException;

        specialinvoke $r22.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("can\'t find algorithm.", r21);

        throw $r22;

     label19:
        r23 := @caughtexception;

        $r22 = new org.spongycastle.cms.CMSException;

        specialinvoke $r22.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("key invalid in message.", r23);

        throw $r22;

     label20:
        r24 := @caughtexception;

        $r22 = new org.spongycastle.cms.CMSException;

        specialinvoke $r22.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("originator key spec invalid.", r24);

        throw $r22;

     label21:
        r25 := @caughtexception;

        $r22 = new org.spongycastle.cms.CMSException;

        specialinvoke $r22.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("required padding not supported.", r25);

        throw $r22;

     label22:
        r26 := @caughtexception;

        $r22 = new org.spongycastle.cms.CMSException;

        specialinvoke $r22.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("originator key invalid.", r26);

        throw $r22;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label18;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label18;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label18;
        catch java.security.InvalidKeyException from label01 to label02 with label19;
        catch java.security.InvalidKeyException from label03 to label04 with label19;
        catch java.security.InvalidKeyException from label05 to label06 with label19;
        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label20;
        catch java.security.spec.InvalidKeySpecException from label03 to label04 with label20;
        catch java.security.spec.InvalidKeySpecException from label05 to label06 with label20;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label21;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label21;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label21;
        catch java.lang.Exception from label01 to label02 with label22;
        catch java.lang.Exception from label03 to label06 with label22;
        catch java.security.InvalidKeyException from label08 to label09 with label10;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label18;
        catch java.security.spec.InvalidKeySpecException from label08 to label09 with label20;
        catch javax.crypto.NoSuchPaddingException from label08 to label09 with label21;
        catch java.lang.Exception from label06 to label07 with label22;
        catch java.lang.Exception from label08 to label09 with label22;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label18;
        catch java.security.NoSuchAlgorithmException from label15 to label16 with label18;
        catch java.security.InvalidKeyException from label11 to label12 with label19;
        catch java.security.InvalidKeyException from label15 to label16 with label19;
        catch java.security.InvalidKeyException from label17 to label18 with label19;
        catch java.security.spec.InvalidKeySpecException from label11 to label12 with label20;
        catch java.security.spec.InvalidKeySpecException from label15 to label16 with label20;
        catch javax.crypto.NoSuchPaddingException from label11 to label12 with label21;
        catch javax.crypto.NoSuchPaddingException from label15 to label16 with label21;
        catch java.lang.Exception from label11 to label12 with label22;
        catch java.lang.Exception from label13 to label14 with label22;
        catch java.lang.Exception from label15 to label16 with label22;
        catch java.lang.Exception from label17 to label18 with label22;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithmIdentifier()
    {
        org.spongycastle.cms.jcajce.JceKeyAgreeRecipient r0;
        java.security.PrivateKey $r1;
        byte[] $r2;
        org.spongycastle.asn1.pkcs.PrivateKeyInfo $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyAgreeRecipient;

        $r1 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: java.security.PrivateKey recipientKey>;

        $r2 = interfaceinvoke $r1.<java.security.PrivateKey: byte[] getEncoded()>();

        $r3 = staticinvoke <org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.pkcs.PrivateKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getPrivateKeyAlgorithm()>();

        return $r4;
    }
    public org.spongycastle.cms.jcajce.JceKeyAgreeRecipient setContentProvider(java.lang.String)
    {
        org.spongycastle.cms.jcajce.JceKeyAgreeRecipient r0;
        java.lang.String $r1;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r2;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyAgreeRecipient;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.spongycastle.cms.jcajce.CMSUtils: org.spongycastle.cms.jcajce.EnvelopedDataHelper createContentHelper(java.lang.String)>($r1);

        r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper contentHelper> = $r2;

        return r0;
    }
    public org.spongycastle.cms.jcajce.JceKeyAgreeRecipient setContentProvider(java.security.Provider)
    {
        org.spongycastle.cms.jcajce.JceKeyAgreeRecipient r0;
        java.security.Provider $r1;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r2;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyAgreeRecipient;

        $r1 := @parameter0: java.security.Provider;

        $r2 = staticinvoke <org.spongycastle.cms.jcajce.CMSUtils: org.spongycastle.cms.jcajce.EnvelopedDataHelper createContentHelper(java.security.Provider)>($r1);

        r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper contentHelper> = $r2;

        return r0;
    }
    public org.spongycastle.cms.jcajce.JceKeyAgreeRecipient setProvider(java.lang.String)
    {
        org.spongycastle.cms.jcajce.JceKeyAgreeRecipient r0;
        java.lang.String $r1;
        org.spongycastle.cms.jcajce.NamedJcaJceExtHelper $r2;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyAgreeRecipient;

        $r1 := @parameter0: java.lang.String;

        $r3 = new org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r2 = new org.spongycastle.cms.jcajce.NamedJcaJceExtHelper;

        specialinvoke $r2.<org.spongycastle.cms.jcajce.NamedJcaJceExtHelper: void <init>(java.lang.String)>($r1);

        specialinvoke $r3.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: void <init>(org.spongycastle.cms.jcajce.JcaJceExtHelper)>($r2);

        r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper> = $r3;

        $r3 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

        r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper contentHelper> = $r3;

        return r0;
    }
    public org.spongycastle.cms.jcajce.JceKeyAgreeRecipient setProvider(java.security.Provider)
    {
        org.spongycastle.cms.jcajce.JceKeyAgreeRecipient r0;
        java.security.Provider $r1;
        org.spongycastle.cms.jcajce.ProviderJcaJceExtHelper $r2;
        org.spongycastle.cms.jcajce.EnvelopedDataHelper $r3;

        r0 := @this: org.spongycastle.cms.jcajce.JceKeyAgreeRecipient;

        $r1 := @parameter0: java.security.Provider;

        $r3 = new org.spongycastle.cms.jcajce.EnvelopedDataHelper;

        $r2 = new org.spongycastle.cms.jcajce.ProviderJcaJceExtHelper;

        specialinvoke $r2.<org.spongycastle.cms.jcajce.ProviderJcaJceExtHelper: void <init>(java.security.Provider)>($r1);

        specialinvoke $r3.<org.spongycastle.cms.jcajce.EnvelopedDataHelper: void <init>(org.spongycastle.cms.jcajce.JcaJceExtHelper)>($r2);

        r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper> = $r3;

        $r3 = r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper helper>;

        r0.<org.spongycastle.cms.jcajce.JceKeyAgreeRecipient: org.spongycastle.cms.jcajce.EnvelopedDataHelper contentHelper> = $r3;

        return r0;
    }
