org.spongycastle.cms.CMSSignedDataStreamGenerator extends org.spongycastle.cms.CMSSignedGenerator
private int _bufferSize
    public void <init>()
    {
        org.spongycastle.cms.CMSSignedDataStreamGenerator r0;

        r0 := @this: org.spongycastle.cms.CMSSignedDataStreamGenerator;

        specialinvoke r0.<org.spongycastle.cms.CMSSignedGenerator: void <init>()>();

        return;
    }
    private org.spongycastle.asn1.ASN1Integer calculateVersion(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.cms.CMSSignedDataStreamGenerator r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r8;
        boolean z0, z1, z2, z3, $z4;
        java.util.List $r2, $r7;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        org.spongycastle.asn1.ASN1TaggedObject r5;
        int $i0;
        org.spongycastle.asn1.ASN1Integer $r6;

        r0 := @this: org.spongycastle.cms.CMSSignedDataStreamGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        z0 = 0;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        $r2 = r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: java.util.List certs>;

        if $r2 == null goto label04;

        $r2 = r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: java.util.List certs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z4 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label04;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z4 = $r4 instanceof org.spongycastle.asn1.ASN1TaggedObject;

        if $z4 == 0 goto label01;

        r5 = (org.spongycastle.asn1.ASN1TaggedObject) $r4;

        $i0 = virtualinvoke r5.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        if $i0 != 1 goto label02;

        z2 = 1;

        goto label01;

     label02:
        $i0 = virtualinvoke r5.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        if $i0 != 2 goto label03;

        z3 = 1;

        goto label01;

     label03:
        $i0 = virtualinvoke r5.<org.spongycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        if $i0 != 3 goto label01;

        z0 = 1;

        goto label01;

     label04:
        if z0 == 0 goto label05;

        $r6 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r6.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(5L);

        return $r6;

     label05:
        $r2 = r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: java.util.List crls>;

        if $r2 == null goto label07;

        $r2 = r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: java.util.List crls>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label06:
        z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label07;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        z0 = $r4 instanceof org.spongycastle.asn1.ASN1TaggedObject;

        if z0 == 0 goto label06;

        z1 = 1;

        goto label06;

     label07:
        if z1 == 0 goto label08;

        $r6 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r6.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(5L);

        return $r6;

     label08:
        if z3 == 0 goto label09;

        $r6 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r6.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(4L);

        return $r6;

     label09:
        if z2 == 0 goto label10;

        $r6 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r6.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(3L);

        return $r6;

     label10:
        $r2 = r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: java.util.List _signers>;

        $r7 = r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: java.util.List signerGens>;

        z1 = specialinvoke r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: boolean checkForVersion3(java.util.List,java.util.List)>($r2, $r7);

        if z1 == 0 goto label11;

        $r6 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r6.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(3L);

        return $r6;

     label11:
        $r8 = <org.spongycastle.asn1.cms.CMSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier data>;

        z1 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if z1 != 0 goto label12;

        $r6 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r6.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(3L);

        return $r6;

     label12:
        $r6 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r6.<org.spongycastle.asn1.ASN1Integer: void <init>(long)>(1L);

        return $r6;
    }
    private boolean checkForVersion3(java.util.List, java.util.List)
    {
        org.spongycastle.cms.CMSSignedDataStreamGenerator r0;
        java.util.List $r1, $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.spongycastle.cms.SignerInformation $r5;
        org.spongycastle.asn1.cms.SignerInfo $r6;
        org.spongycastle.asn1.ASN1Integer $r7;
        java.math.BigInteger $r8;
        int $i0;
        org.spongycastle.cms.SignerInfoGenerator r9;

        r0 := @this: org.spongycastle.cms.CMSSignedDataStreamGenerator;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.List;

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.spongycastle.cms.SignerInformation) $r4;

        $r6 = virtualinvoke $r5.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo toASN1Structure()>();

        $r6 = staticinvoke <org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.cms.SignerInfo getInstance(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.ASN1Integer getVersion()>();

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r8.<java.math.BigInteger: int intValue()>();

        if $i0 != 3 goto label1;

        return 1;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.spongycastle.cms.SignerInfoGenerator) $r4;

        $i0 = virtualinvoke r9.<org.spongycastle.cms.SignerInfoGenerator: int getGeneratedVersion()>();

        if $i0 != 3 goto label3;

        return 1;

     label4:
        return 0;
    }
    public java.io.OutputStream open(java.io.OutputStream) throws java.io.IOException
    {
        org.spongycastle.cms.CMSSignedDataStreamGenerator r0;
        java.io.OutputStream $r1;

        r0 := @this: org.spongycastle.cms.CMSSignedDataStreamGenerator;

        $r1 := @parameter0: java.io.OutputStream;

        $r1 = virtualinvoke r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: java.io.OutputStream open(java.io.OutputStream,boolean)>($r1, 0);

        return $r1;
    }
    public java.io.OutputStream open(java.io.OutputStream, boolean) throws java.io.IOException
    {
        org.spongycastle.cms.CMSSignedDataStreamGenerator r0;
        java.io.OutputStream $r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;

        r0 := @this: org.spongycastle.cms.CMSSignedDataStreamGenerator;

        $r1 := @parameter0: java.io.OutputStream;

        $z0 := @parameter1: boolean;

        $r2 = <org.spongycastle.asn1.cms.CMSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier data>;

        $r1 = virtualinvoke r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: java.io.OutputStream open(org.spongycastle.asn1.ASN1ObjectIdentifier,java.io.OutputStream,boolean)>($r2, $r1, $z0);

        return $r1;
    }
    public java.io.OutputStream open(java.io.OutputStream, boolean, java.io.OutputStream) throws java.io.IOException
    {
        org.spongycastle.cms.CMSSignedDataStreamGenerator r0;
        java.io.OutputStream $r1, $r2;
        boolean $z0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;

        r0 := @this: org.spongycastle.cms.CMSSignedDataStreamGenerator;

        $r1 := @parameter0: java.io.OutputStream;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.io.OutputStream;

        $r3 = <org.spongycastle.asn1.cms.CMSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier data>;

        $r1 = virtualinvoke r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: java.io.OutputStream open(org.spongycastle.asn1.ASN1ObjectIdentifier,java.io.OutputStream,boolean,java.io.OutputStream)>($r3, $r1, $z0, $r2);

        return $r1;
    }
    public java.io.OutputStream open(org.spongycastle.asn1.ASN1ObjectIdentifier, java.io.OutputStream, boolean) throws java.io.IOException
    {
        org.spongycastle.cms.CMSSignedDataStreamGenerator r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.io.OutputStream $r2;
        boolean $z0;

        r0 := @this: org.spongycastle.cms.CMSSignedDataStreamGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.io.OutputStream;

        $z0 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: java.io.OutputStream open(org.spongycastle.asn1.ASN1ObjectIdentifier,java.io.OutputStream,boolean,java.io.OutputStream)>($r1, $r2, $z0, null);

        return $r2;
    }
    public java.io.OutputStream open(org.spongycastle.asn1.ASN1ObjectIdentifier, java.io.OutputStream, boolean, java.io.OutputStream) throws java.io.IOException
    {
        org.spongycastle.cms.CMSSignedDataStreamGenerator r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r8;
        java.io.OutputStream $r2, $r3;
        boolean $z0, $z1;
        org.spongycastle.asn1.BERSequenceGenerator r4, r5, r6;
        org.spongycastle.asn1.ASN1EncodableVector r7;
        int $i0;
        org.spongycastle.asn1.ASN1Integer $r9;
        java.util.List $r10;
        java.util.Iterator $r11;
        java.lang.Object $r12;
        org.spongycastle.cms.SignerInformation r13;
        org.spongycastle.cms.CMSSignedHelper $r14;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r15;
        org.spongycastle.cms.SignerInfoGenerator r16;
        org.spongycastle.asn1.DERSet $r17;
        byte[] $r18;
        org.spongycastle.cms.CMSSignedDataStreamGenerator$CmsSignedDataOutputStream $r19;

        r0 := @this: org.spongycastle.cms.CMSSignedDataStreamGenerator;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.io.OutputStream;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: java.io.OutputStream;

        r4 = new org.spongycastle.asn1.BERSequenceGenerator;

        specialinvoke r4.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream)>($r2);

        $r8 = <org.spongycastle.asn1.cms.CMSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier signedData>;

        virtualinvoke r4.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r8);

        r5 = new org.spongycastle.asn1.BERSequenceGenerator;

        $r2 = virtualinvoke r4.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        specialinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream,int,boolean)>($r2, 0, 1);

        $r9 = specialinvoke r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: org.spongycastle.asn1.ASN1Integer calculateVersion(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        virtualinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r9);

        r7 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r7.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r10 = r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: java.util.List _signers>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.spongycastle.cms.SignerInformation) $r12;

        $r14 = <org.spongycastle.cms.CMSSignedHelper: org.spongycastle.cms.CMSSignedHelper INSTANCE>;

        $r15 = virtualinvoke r13.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmID()>();

        $r15 = virtualinvoke $r14.<org.spongycastle.cms.CMSSignedHelper: org.spongycastle.asn1.x509.AlgorithmIdentifier fixAlgID(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r15);

        virtualinvoke r7.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r15);

        goto label1;

     label2:
        $r10 = r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: java.util.List signerGens>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.spongycastle.cms.SignerInfoGenerator) $r12;

        $r15 = virtualinvoke r16.<org.spongycastle.cms.SignerInfoGenerator: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()>();

        virtualinvoke r7.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r15);

        goto label3;

     label4:
        $r2 = virtualinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $r17 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r17.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r7);

        $r18 = virtualinvoke $r17.<org.spongycastle.asn1.DERSet: byte[] getEncoded()>();

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r18);

        r6 = new org.spongycastle.asn1.BERSequenceGenerator;

        $r2 = virtualinvoke r5.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        specialinvoke r6.<org.spongycastle.asn1.BERSequenceGenerator: void <init>(java.io.OutputStream)>($r2);

        virtualinvoke r6.<org.spongycastle.asn1.BERSequenceGenerator: void addObject(org.spongycastle.asn1.ASN1Encodable)>($r1);

        if $z0 == 0 goto label6;

        $r2 = virtualinvoke r6.<org.spongycastle.asn1.BERSequenceGenerator: java.io.OutputStream getRawOutputStream()>();

        $i0 = r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: int _bufferSize>;

        $r2 = staticinvoke <org.spongycastle.cms.CMSUtils: java.io.OutputStream createBEROctetOutputStream(java.io.OutputStream,int,boolean,int)>($r2, 0, 1, $i0);

     label5:
        $r2 = staticinvoke <org.spongycastle.cms.CMSUtils: java.io.OutputStream getSafeTeeOutputStream(java.io.OutputStream,java.io.OutputStream)>($r3, $r2);

        $r10 = r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: java.util.List signerGens>;

        $r2 = staticinvoke <org.spongycastle.cms.CMSUtils: java.io.OutputStream attachSignersToOutputStream(java.util.Collection,java.io.OutputStream)>($r10, $r2);

        $r19 = new org.spongycastle.cms.CMSSignedDataStreamGenerator$CmsSignedDataOutputStream;

        specialinvoke $r19.<org.spongycastle.cms.CMSSignedDataStreamGenerator$CmsSignedDataOutputStream: void <init>(org.spongycastle.cms.CMSSignedDataStreamGenerator,java.io.OutputStream,org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.BERSequenceGenerator,org.spongycastle.asn1.BERSequenceGenerator,org.spongycastle.asn1.BERSequenceGenerator)>(r0, $r2, $r1, r4, r5, r6);

        return $r19;

     label6:
        $r2 = null;

        goto label5;
    }
    public void setBufferSize(int)
    {
        org.spongycastle.cms.CMSSignedDataStreamGenerator r0;
        int $i0;

        r0 := @this: org.spongycastle.cms.CMSSignedDataStreamGenerator;

        $i0 := @parameter0: int;

        r0.<org.spongycastle.cms.CMSSignedDataStreamGenerator: int _bufferSize> = $i0;

        return;
    }
