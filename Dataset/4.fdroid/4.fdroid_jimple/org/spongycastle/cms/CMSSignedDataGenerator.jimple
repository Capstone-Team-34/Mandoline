org.spongycastle.cms.CMSSignedDataGenerator extends org.spongycastle.cms.CMSSignedGenerator
private java.util.List signerInfs
    public void <init>()
    {
        org.spongycastle.cms.CMSSignedDataGenerator r0;
        java.util.ArrayList $r1;

        r0 := @this: org.spongycastle.cms.CMSSignedDataGenerator;

        specialinvoke r0.<org.spongycastle.cms.CMSSignedGenerator: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.spongycastle.cms.CMSSignedDataGenerator: java.util.List signerInfs> = $r1;

        return;
    }
    public org.spongycastle.cms.CMSSignedData generate(org.spongycastle.cms.CMSTypedData) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSSignedDataGenerator r0;
        org.spongycastle.cms.CMSTypedData $r1;
        org.spongycastle.cms.CMSSignedData $r2;

        r0 := @this: org.spongycastle.cms.CMSSignedDataGenerator;

        $r1 := @parameter0: org.spongycastle.cms.CMSTypedData;

        $r2 = virtualinvoke r0.<org.spongycastle.cms.CMSSignedDataGenerator: org.spongycastle.cms.CMSSignedData generate(org.spongycastle.cms.CMSTypedData,boolean)>($r1, 0);

        return $r2;
    }
    public org.spongycastle.cms.CMSSignedData generate(org.spongycastle.cms.CMSTypedData, boolean) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSSignedDataGenerator r0;
        org.spongycastle.cms.CMSTypedData $r1;
        boolean $z0, $z1;
        org.spongycastle.asn1.cms.SignedData r2;
        org.spongycastle.asn1.cms.ContentInfo r3;
        org.spongycastle.asn1.ASN1EncodableVector r4, r6;
        java.io.IOException r5;
        java.util.List $r7;
        java.lang.IllegalStateException $r8;
        java.util.Map $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        org.spongycastle.cms.SignerInformation r12;
        org.spongycastle.cms.CMSSignedHelper $r13;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r14;
        org.spongycastle.asn1.cms.SignerInfo $r15;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r16, $r22;
        org.spongycastle.asn1.BEROctetString r17;
        java.io.ByteArrayOutputStream r18;
        java.io.OutputStream $r19;
        byte[] $r20;
        org.spongycastle.cms.SignerInfoGenerator r21;
        java.lang.String $r23;
        org.spongycastle.cms.CMSException $r24;
        java.lang.StringBuilder $r25;
        org.spongycastle.asn1.ASN1Set r26, r27;
        int $i0;
        org.spongycastle.asn1.DERSet $r28, $r29;
        org.spongycastle.cms.CMSSignedData $r30;

        r0 := @this: org.spongycastle.cms.CMSSignedDataGenerator;

        $r1 := @parameter0: org.spongycastle.cms.CMSTypedData;

        $z0 := @parameter1: boolean;

        $r7 = r0.<org.spongycastle.cms.CMSSignedDataGenerator: java.util.List signerInfs>;

        $z1 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label01;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("this method can only be used with SignerInfoGenerator");

        throw $r8;

     label01:
        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        r6 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r6.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r9 = r0.<org.spongycastle.cms.CMSSignedDataGenerator: java.util.Map digests>;

        interfaceinvoke $r9.<java.util.Map: void clear()>();

        $r7 = r0.<org.spongycastle.cms.CMSSignedDataGenerator: java.util.List _signers>;

        $r10 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.spongycastle.cms.SignerInformation) $r11;

        $r13 = <org.spongycastle.cms.CMSSignedHelper: org.spongycastle.cms.CMSSignedHelper INSTANCE>;

        $r14 = virtualinvoke r12.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmID()>();

        $r14 = virtualinvoke $r13.<org.spongycastle.cms.CMSSignedHelper: org.spongycastle.asn1.x509.AlgorithmIdentifier fixAlgID(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r14);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r14);

        $r15 = virtualinvoke r12.<org.spongycastle.cms.SignerInformation: org.spongycastle.asn1.cms.SignerInfo toASN1Structure()>();

        virtualinvoke r6.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r15);

        goto label02;

     label03:
        $r16 = interfaceinvoke $r1.<org.spongycastle.cms.CMSTypedData: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

        r17 = null;

        $r11 = interfaceinvoke $r1.<org.spongycastle.cms.CMSTypedData: java.lang.Object getContent()>();

        if $r11 == null goto label07;

        r18 = null;

        if $z0 == 0 goto label04;

        r18 = new java.io.ByteArrayOutputStream;

        specialinvoke r18.<java.io.ByteArrayOutputStream: void <init>()>();

     label04:
        $r7 = r0.<org.spongycastle.cms.CMSSignedDataGenerator: java.util.List signerGens>;

        $r19 = staticinvoke <org.spongycastle.cms.CMSUtils: java.io.OutputStream attachSignersToOutputStream(java.util.Collection,java.io.OutputStream)>($r7, r18);

        $r19 = staticinvoke <org.spongycastle.cms.CMSUtils: java.io.OutputStream getSafeOutputStream(java.io.OutputStream)>($r19);

     label05:
        interfaceinvoke $r1.<org.spongycastle.cms.CMSTypedData: void write(java.io.OutputStream)>($r19);

        virtualinvoke $r19.<java.io.OutputStream: void close()>();

     label06:
        if $z0 == 0 goto label07;

        r17 = new org.spongycastle.asn1.BEROctetString;

        $r20 = virtualinvoke r18.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke r17.<org.spongycastle.asn1.BEROctetString: void <init>(byte[])>($r20);

     label07:
        $r7 = r0.<org.spongycastle.cms.CMSSignedDataGenerator: java.util.List signerGens>;

        $r10 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.spongycastle.cms.SignerInfoGenerator) $r11;

        $r15 = virtualinvoke r21.<org.spongycastle.cms.SignerInfoGenerator: org.spongycastle.asn1.cms.SignerInfo generate(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r16);

        $r14 = virtualinvoke $r15.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()>();

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r14);

        virtualinvoke r6.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r15);

        $r20 = virtualinvoke r21.<org.spongycastle.cms.SignerInfoGenerator: byte[] getCalculatedDigest()>();

        if $r20 == null goto label08;

        $r9 = r0.<org.spongycastle.cms.CMSSignedDataGenerator: java.util.Map digests>;

        $r14 = virtualinvoke $r15.<org.spongycastle.asn1.cms.SignerInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()>();

        $r22 = virtualinvoke $r14.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r23 = virtualinvoke $r22.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r20);

        goto label08;

     label09:
        r5 := @caughtexception;

        $r24 = new org.spongycastle.cms.CMSException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data processing exception: ");

        $r23 = virtualinvoke r5.<java.io.IOException: java.lang.String getMessage()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r23, r5);

        throw $r24;

     label10:
        r26 = null;

        $r7 = r0.<org.spongycastle.cms.CMSSignedDataGenerator: java.util.List certs>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 == 0 goto label11;

        $r7 = r0.<org.spongycastle.cms.CMSSignedDataGenerator: java.util.List certs>;

        r26 = staticinvoke <org.spongycastle.cms.CMSUtils: org.spongycastle.asn1.ASN1Set createBerSetFromList(java.util.List)>($r7);

     label11:
        r27 = null;

        $r7 = r0.<org.spongycastle.cms.CMSSignedDataGenerator: java.util.List crls>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 == 0 goto label12;

        $r7 = r0.<org.spongycastle.cms.CMSSignedDataGenerator: java.util.List crls>;

        r27 = staticinvoke <org.spongycastle.cms.CMSUtils: org.spongycastle.asn1.ASN1Set createBerSetFromList(java.util.List)>($r7);

     label12:
        r3 = new org.spongycastle.asn1.cms.ContentInfo;

        specialinvoke r3.<org.spongycastle.asn1.cms.ContentInfo: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r16, r17);

        r2 = new org.spongycastle.asn1.cms.SignedData;

        $r28 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r28.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        $r29 = new org.spongycastle.asn1.DERSet;

        specialinvoke $r29.<org.spongycastle.asn1.DERSet: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r6);

        specialinvoke r2.<org.spongycastle.asn1.cms.SignedData: void <init>(org.spongycastle.asn1.ASN1Set,org.spongycastle.asn1.cms.ContentInfo,org.spongycastle.asn1.ASN1Set,org.spongycastle.asn1.ASN1Set,org.spongycastle.asn1.ASN1Set)>($r28, r3, r26, r27, $r29);

        r3 = new org.spongycastle.asn1.cms.ContentInfo;

        $r16 = <org.spongycastle.asn1.cms.CMSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier signedData>;

        specialinvoke r3.<org.spongycastle.asn1.cms.ContentInfo: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r16, r2);

        $r30 = new org.spongycastle.cms.CMSSignedData;

        specialinvoke $r30.<org.spongycastle.cms.CMSSignedData: void <init>(org.spongycastle.cms.CMSProcessable,org.spongycastle.asn1.cms.ContentInfo)>($r1, r3);

        return $r30;

        catch java.io.IOException from label05 to label06 with label09;
    }
    public org.spongycastle.cms.SignerInformationStore generateCounterSigners(org.spongycastle.cms.SignerInformation) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSSignedDataGenerator r0;
        org.spongycastle.cms.SignerInformation $r1;
        org.spongycastle.cms.CMSProcessableByteArray $r2;
        byte[] $r3;
        org.spongycastle.cms.CMSSignedData $r4;
        org.spongycastle.cms.SignerInformationStore $r5;

        r0 := @this: org.spongycastle.cms.CMSSignedDataGenerator;

        $r1 := @parameter0: org.spongycastle.cms.SignerInformation;

        $r2 = new org.spongycastle.cms.CMSProcessableByteArray;

        $r3 = virtualinvoke $r1.<org.spongycastle.cms.SignerInformation: byte[] getSignature()>();

        specialinvoke $r2.<org.spongycastle.cms.CMSProcessableByteArray: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[])>(null, $r3);

        $r4 = virtualinvoke r0.<org.spongycastle.cms.CMSSignedDataGenerator: org.spongycastle.cms.CMSSignedData generate(org.spongycastle.cms.CMSTypedData,boolean)>($r2, 0);

        $r5 = virtualinvoke $r4.<org.spongycastle.cms.CMSSignedData: org.spongycastle.cms.SignerInformationStore getSignerInfos()>();

        return $r5;
    }
