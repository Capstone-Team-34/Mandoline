org.spongycastle.cms.CMSDigestedData extends java.lang.Object implements org.spongycastle.util.Encodable
private org.spongycastle.asn1.cms.ContentInfo contentInfo
private org.spongycastle.asn1.cms.DigestedData digestedData
    public void <init>(java.io.InputStream) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSDigestedData r0;
        java.io.InputStream $r1;
        org.spongycastle.asn1.cms.ContentInfo $r2;

        r0 := @this: org.spongycastle.cms.CMSDigestedData;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <org.spongycastle.cms.CMSUtils: org.spongycastle.asn1.cms.ContentInfo readContentInfo(java.io.InputStream)>($r1);

        specialinvoke r0.<org.spongycastle.cms.CMSDigestedData: void <init>(org.spongycastle.asn1.cms.ContentInfo)>($r2);

        return;
    }
    public void <init>(org.spongycastle.asn1.cms.ContentInfo) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSDigestedData r0;
        org.spongycastle.asn1.cms.ContentInfo $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.cms.DigestedData $r3;
        java.lang.ClassCastException r4;
        org.spongycastle.cms.CMSException $r5;
        java.lang.IllegalArgumentException r6;

        r0 := @this: org.spongycastle.cms.CMSDigestedData;

        $r1 := @parameter0: org.spongycastle.asn1.cms.ContentInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cms.CMSDigestedData: org.spongycastle.asn1.cms.ContentInfo contentInfo> = $r1;

     label1:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.cms.ContentInfo: org.spongycastle.asn1.ASN1Encodable getContent()>();

        $r3 = staticinvoke <org.spongycastle.asn1.cms.DigestedData: org.spongycastle.asn1.cms.DigestedData getInstance(java.lang.Object)>($r2);

     label2:
        r0.<org.spongycastle.cms.CMSDigestedData: org.spongycastle.asn1.cms.DigestedData digestedData> = $r3;

        return;

     label3:
        r4 := @caughtexception;

        $r5 = new org.spongycastle.cms.CMSException;

        specialinvoke $r5.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("Malformed content.", r4);

        throw $r5;

     label4:
        r6 := @caughtexception;

        $r5 = new org.spongycastle.cms.CMSException;

        specialinvoke $r5.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("Malformed content.", r6);

        throw $r5;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
    }
    public void <init>(byte[]) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSDigestedData r0;
        byte[] $r1;
        org.spongycastle.asn1.cms.ContentInfo $r2;

        r0 := @this: org.spongycastle.cms.CMSDigestedData;

        $r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.spongycastle.cms.CMSUtils: org.spongycastle.asn1.cms.ContentInfo readContentInfo(byte[])>($r1);

        specialinvoke r0.<org.spongycastle.cms.CMSDigestedData: void <init>(org.spongycastle.asn1.cms.ContentInfo)>($r2);

        return;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()
    {
        org.spongycastle.cms.CMSDigestedData r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.cms.ContentInfo $r2;

        r0 := @this: org.spongycastle.cms.CMSDigestedData;

        $r2 = r0.<org.spongycastle.cms.CMSDigestedData: org.spongycastle.asn1.cms.ContentInfo contentInfo>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.cms.ContentInfo: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

        return $r1;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()
    {
        org.spongycastle.cms.CMSDigestedData r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.cms.DigestedData $r2;

        r0 := @this: org.spongycastle.cms.CMSDigestedData;

        $r2 = r0.<org.spongycastle.cms.CMSDigestedData: org.spongycastle.asn1.cms.DigestedData digestedData>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.cms.DigestedData: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()>();

        return $r1;
    }
    public org.spongycastle.cms.CMSProcessable getDigestedContent() throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSDigestedData r0;
        java.lang.Exception r1;
        org.spongycastle.asn1.cms.DigestedData $r2;
        org.spongycastle.asn1.cms.ContentInfo $r3;
        org.spongycastle.cms.CMSProcessableByteArray $r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;
        org.spongycastle.asn1.ASN1Encodable $r6;
        org.spongycastle.asn1.ASN1OctetString $r7;
        byte[] $r8;
        org.spongycastle.cms.CMSException $r9;

        r0 := @this: org.spongycastle.cms.CMSDigestedData;

        $r2 = r0.<org.spongycastle.cms.CMSDigestedData: org.spongycastle.asn1.cms.DigestedData digestedData>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.cms.DigestedData: org.spongycastle.asn1.cms.ContentInfo getEncapContentInfo()>();

        $r4 = new org.spongycastle.cms.CMSProcessableByteArray;

     label1:
        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.cms.ContentInfo: org.spongycastle.asn1.ASN1ObjectIdentifier getContentType()>();

        $r6 = virtualinvoke $r3.<org.spongycastle.asn1.cms.ContentInfo: org.spongycastle.asn1.ASN1Encodable getContent()>();

        $r7 = (org.spongycastle.asn1.ASN1OctetString) $r6;

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r4.<org.spongycastle.cms.CMSProcessableByteArray: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[])>($r5, $r8);

     label2:
        return $r4;

     label3:
        r1 := @caughtexception;

        $r9 = new org.spongycastle.cms.CMSException;

        specialinvoke $r9.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("exception reading digested stream.", r1);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public byte[] getEncoded() throws java.io.IOException
    {
        org.spongycastle.cms.CMSDigestedData r0;
        byte[] $r1;
        org.spongycastle.asn1.cms.ContentInfo $r2;

        r0 := @this: org.spongycastle.cms.CMSDigestedData;

        $r2 = r0.<org.spongycastle.cms.CMSDigestedData: org.spongycastle.asn1.cms.ContentInfo contentInfo>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.cms.ContentInfo: byte[] getEncoded()>();

        return $r1;
    }
    public org.spongycastle.asn1.cms.ContentInfo toASN1Structure()
    {
        org.spongycastle.cms.CMSDigestedData r0;
        org.spongycastle.asn1.cms.ContentInfo r1;

        r0 := @this: org.spongycastle.cms.CMSDigestedData;

        r1 = r0.<org.spongycastle.cms.CMSDigestedData: org.spongycastle.asn1.cms.ContentInfo contentInfo>;

        return r1;
    }
    public boolean verify(org.spongycastle.operator.DigestCalculatorProvider) throws org.spongycastle.cms.CMSException
    {
        org.spongycastle.cms.CMSDigestedData r0;
        org.spongycastle.operator.DigestCalculatorProvider $r1;
        org.spongycastle.asn1.cms.DigestedData $r2;
        org.spongycastle.asn1.cms.ContentInfo $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        org.spongycastle.operator.DigestCalculator $r5;
        java.io.OutputStream $r6;
        org.spongycastle.asn1.ASN1Encodable $r7;
        org.spongycastle.asn1.ASN1OctetString $r8;
        byte[] $r9, $r10;
        boolean $z0;
        org.spongycastle.operator.OperatorCreationException r11;
        org.spongycastle.cms.CMSException $r12;
        java.lang.StringBuilder $r13;
        java.lang.String $r14;
        java.io.IOException r15;

        r0 := @this: org.spongycastle.cms.CMSDigestedData;

        $r1 := @parameter0: org.spongycastle.operator.DigestCalculatorProvider;

        $r2 = r0.<org.spongycastle.cms.CMSDigestedData: org.spongycastle.asn1.cms.DigestedData digestedData>;

     label01:
        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.cms.DigestedData: org.spongycastle.asn1.cms.ContentInfo getEncapContentInfo()>();

     label02:
        $r2 = r0.<org.spongycastle.cms.CMSDigestedData: org.spongycastle.asn1.cms.DigestedData digestedData>;

     label03:
        $r4 = virtualinvoke $r2.<org.spongycastle.asn1.cms.DigestedData: org.spongycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()>();

        $r5 = interfaceinvoke $r1.<org.spongycastle.operator.DigestCalculatorProvider: org.spongycastle.operator.DigestCalculator get(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r4);

        $r6 = interfaceinvoke $r5.<org.spongycastle.operator.DigestCalculator: java.io.OutputStream getOutputStream()>();

        $r7 = virtualinvoke $r3.<org.spongycastle.asn1.cms.ContentInfo: org.spongycastle.asn1.ASN1Encodable getContent()>();

     label04:
        $r8 = (org.spongycastle.asn1.ASN1OctetString) $r7;

     label05:
        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r9);

     label06:
        $r2 = r0.<org.spongycastle.cms.CMSDigestedData: org.spongycastle.asn1.cms.DigestedData digestedData>;

     label07:
        $r9 = virtualinvoke $r2.<org.spongycastle.asn1.cms.DigestedData: byte[] getDigest()>();

        $r10 = interfaceinvoke $r5.<org.spongycastle.operator.DigestCalculator: byte[] getDigest()>();

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r9, $r10);

     label08:
        return $z0;

     label09:
        r11 := @caughtexception;

        $r12 = new org.spongycastle.cms.CMSException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to create digest calculator: ");

        $r14 = virtualinvoke r11.<org.spongycastle.operator.OperatorCreationException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r14, r11);

        throw $r12;

     label10:
        r15 := @caughtexception;

        $r12 = new org.spongycastle.cms.CMSException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable process content: ");

        $r14 = virtualinvoke r15.<java.io.IOException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.spongycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>($r14, r15);

        throw $r12;

        catch org.spongycastle.operator.OperatorCreationException from label01 to label02 with label09;
        catch org.spongycastle.operator.OperatorCreationException from label03 to label04 with label09;
        catch org.spongycastle.operator.OperatorCreationException from label05 to label06 with label09;
        catch org.spongycastle.operator.OperatorCreationException from label07 to label08 with label09;
        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label07 to label08 with label10;
    }
