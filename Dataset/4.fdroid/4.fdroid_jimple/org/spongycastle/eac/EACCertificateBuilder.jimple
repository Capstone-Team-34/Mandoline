org.spongycastle.eac.EACCertificateBuilder extends java.lang.Object
private static final byte[] ZeroArray
private org.spongycastle.asn1.eac.PackedDate certificateEffectiveDate
private org.spongycastle.asn1.eac.PackedDate certificateExpirationDate
private org.spongycastle.asn1.eac.CertificateHolderAuthorization certificateHolderAuthorization
private org.spongycastle.asn1.eac.CertificateHolderReference certificateHolderReference
private org.spongycastle.asn1.eac.CertificationAuthorityReference certificationAuthorityReference
private org.spongycastle.asn1.eac.PublicKeyDataObject publicKey
    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[1];

        $r0[0] = 0;

        <org.spongycastle.eac.EACCertificateBuilder: byte[] ZeroArray> = $r0;

        return;
    }
    public void <init>(org.spongycastle.asn1.eac.CertificationAuthorityReference, org.spongycastle.asn1.eac.PublicKeyDataObject, org.spongycastle.asn1.eac.CertificateHolderReference, org.spongycastle.asn1.eac.CertificateHolderAuthorization, org.spongycastle.asn1.eac.PackedDate, org.spongycastle.asn1.eac.PackedDate)
    {
        org.spongycastle.eac.EACCertificateBuilder r0;
        org.spongycastle.asn1.eac.CertificationAuthorityReference $r1;
        org.spongycastle.asn1.eac.PublicKeyDataObject $r2;
        org.spongycastle.asn1.eac.CertificateHolderReference $r3;
        org.spongycastle.asn1.eac.CertificateHolderAuthorization $r4;
        org.spongycastle.asn1.eac.PackedDate $r5, $r6;

        r0 := @this: org.spongycastle.eac.EACCertificateBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.eac.CertificationAuthorityReference;

        $r2 := @parameter1: org.spongycastle.asn1.eac.PublicKeyDataObject;

        $r3 := @parameter2: org.spongycastle.asn1.eac.CertificateHolderReference;

        $r4 := @parameter3: org.spongycastle.asn1.eac.CertificateHolderAuthorization;

        $r5 := @parameter4: org.spongycastle.asn1.eac.PackedDate;

        $r6 := @parameter5: org.spongycastle.asn1.eac.PackedDate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.eac.EACCertificateBuilder: org.spongycastle.asn1.eac.CertificationAuthorityReference certificationAuthorityReference> = $r1;

        r0.<org.spongycastle.eac.EACCertificateBuilder: org.spongycastle.asn1.eac.PublicKeyDataObject publicKey> = $r2;

        r0.<org.spongycastle.eac.EACCertificateBuilder: org.spongycastle.asn1.eac.CertificateHolderReference certificateHolderReference> = $r3;

        r0.<org.spongycastle.eac.EACCertificateBuilder: org.spongycastle.asn1.eac.CertificateHolderAuthorization certificateHolderAuthorization> = $r4;

        r0.<org.spongycastle.eac.EACCertificateBuilder: org.spongycastle.asn1.eac.PackedDate certificateEffectiveDate> = $r5;

        r0.<org.spongycastle.eac.EACCertificateBuilder: org.spongycastle.asn1.eac.PackedDate certificateExpirationDate> = $r6;

        return;
    }
    private org.spongycastle.asn1.eac.CertificateBody buildBody()
    {
        org.spongycastle.eac.EACCertificateBuilder r0;
        org.spongycastle.asn1.eac.CertificateBody r1;
        org.spongycastle.asn1.DERApplicationSpecific r2;
        org.spongycastle.asn1.eac.CertificateHolderReference $r3;
        org.spongycastle.asn1.eac.CertificateHolderAuthorization $r4;
        org.spongycastle.asn1.eac.PackedDate $r5, $r6;
        byte[] $r7;
        org.spongycastle.asn1.eac.CertificationAuthorityReference $r8;
        org.spongycastle.asn1.eac.PublicKeyDataObject $r9;

        r0 := @this: org.spongycastle.eac.EACCertificateBuilder;

        r2 = new org.spongycastle.asn1.DERApplicationSpecific;

        $r7 = <org.spongycastle.eac.EACCertificateBuilder: byte[] ZeroArray>;

        specialinvoke r2.<org.spongycastle.asn1.DERApplicationSpecific: void <init>(int,byte[])>(41, $r7);

        r1 = new org.spongycastle.asn1.eac.CertificateBody;

        $r8 = r0.<org.spongycastle.eac.EACCertificateBuilder: org.spongycastle.asn1.eac.CertificationAuthorityReference certificationAuthorityReference>;

        $r9 = r0.<org.spongycastle.eac.EACCertificateBuilder: org.spongycastle.asn1.eac.PublicKeyDataObject publicKey>;

        $r3 = r0.<org.spongycastle.eac.EACCertificateBuilder: org.spongycastle.asn1.eac.CertificateHolderReference certificateHolderReference>;

        $r4 = r0.<org.spongycastle.eac.EACCertificateBuilder: org.spongycastle.asn1.eac.CertificateHolderAuthorization certificateHolderAuthorization>;

        $r5 = r0.<org.spongycastle.eac.EACCertificateBuilder: org.spongycastle.asn1.eac.PackedDate certificateEffectiveDate>;

        $r6 = r0.<org.spongycastle.eac.EACCertificateBuilder: org.spongycastle.asn1.eac.PackedDate certificateExpirationDate>;

        specialinvoke r1.<org.spongycastle.asn1.eac.CertificateBody: void <init>(org.spongycastle.asn1.DERApplicationSpecific,org.spongycastle.asn1.eac.CertificationAuthorityReference,org.spongycastle.asn1.eac.PublicKeyDataObject,org.spongycastle.asn1.eac.CertificateHolderReference,org.spongycastle.asn1.eac.CertificateHolderAuthorization,org.spongycastle.asn1.eac.PackedDate,org.spongycastle.asn1.eac.PackedDate)>(r2, $r8, $r9, $r3, $r4, $r5, $r6);

        return r1;
    }
    public org.spongycastle.eac.EACCertificateHolder build(org.spongycastle.eac.operator.EACSigner) throws org.spongycastle.eac.EACException
    {
        org.spongycastle.eac.EACCertificateBuilder r0;
        org.spongycastle.eac.operator.EACSigner $r1;
        java.lang.Exception r2;
        org.spongycastle.asn1.eac.CertificateBody $r3;
        java.io.OutputStream $r4;
        byte[] $r5;
        org.spongycastle.eac.EACCertificateHolder $r6;
        org.spongycastle.asn1.eac.CVCertificate $r7;
        org.spongycastle.eac.EACException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        r0 := @this: org.spongycastle.eac.EACCertificateBuilder;

        $r1 := @parameter0: org.spongycastle.eac.operator.EACSigner;

     label1:
        $r3 = specialinvoke r0.<org.spongycastle.eac.EACCertificateBuilder: org.spongycastle.asn1.eac.CertificateBody buildBody()>();

        $r4 = interfaceinvoke $r1.<org.spongycastle.eac.operator.EACSigner: java.io.OutputStream getOutputStream()>();

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.eac.CertificateBody: byte[] getEncoded(java.lang.String)>("DER");

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[])>($r5);

        virtualinvoke $r4.<java.io.OutputStream: void close()>();

     label2:
        $r6 = new org.spongycastle.eac.EACCertificateHolder;

        $r7 = new org.spongycastle.asn1.eac.CVCertificate;

     label3:
        $r5 = interfaceinvoke $r1.<org.spongycastle.eac.operator.EACSigner: byte[] getSignature()>();

        specialinvoke $r7.<org.spongycastle.asn1.eac.CVCertificate: void <init>(org.spongycastle.asn1.eac.CertificateBody,byte[])>($r3, $r5);

        specialinvoke $r6.<org.spongycastle.eac.EACCertificateHolder: void <init>(org.spongycastle.asn1.eac.CVCertificate)>($r7);

     label4:
        return $r6;

     label5:
        r2 := @caughtexception;

        $r8 = new org.spongycastle.eac.EACException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to process signature: ");

        $r10 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.spongycastle.eac.EACException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r2);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
