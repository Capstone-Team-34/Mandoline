org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1 extends java.lang.Object implements org.spongycastle.eac.operator.EACSignatureVerifier
final org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder this$0
final org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream val$sigStream
final org.spongycastle.asn1.ASN1ObjectIdentifier val$usageOid
    void <init>(org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder, org.spongycastle.asn1.ASN1ObjectIdentifier, org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream)
    {
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1 r0;
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream $r3;

        r0 := @this: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1;

        $r1 := @parameter0: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder;

        $r2 := @parameter1: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 := @parameter2: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream;

        r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder this$0> = $r1;

        r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1: org.spongycastle.asn1.ASN1ObjectIdentifier val$usageOid> = $r2;

        r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream val$sigStream> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public java.io.OutputStream getOutputStream()
    {
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1 r0;
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream r1;

        r0 := @this: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1;

        r1 = r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream val$sigStream>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getUsageIdentifier()
    {
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1 r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier r1;

        r0 := @this: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1;

        r1 = r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1: org.spongycastle.asn1.ASN1ObjectIdentifier val$usageOid>;

        return r1;
    }
    public boolean verify(byte[])
    {
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1 r0;
        byte[] $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2, $r3;
        boolean $z0;
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream $r4;
        java.lang.Exception r5;
        java.security.SignatureException r6;
        org.spongycastle.operator.RuntimeOperatorException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        r0 := @this: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1;

        $r1 := @parameter0: byte[];

        $r2 = r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1: org.spongycastle.asn1.ASN1ObjectIdentifier val$usageOid>;

        $r3 = <org.spongycastle.asn1.eac.EACObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_TA_ECDSA>;

     label1:
        $z0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean on(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r3);

     label2:
        if $z0 == 0 goto label6;

     label3:
        $r1 = staticinvoke <org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder: byte[] access$000(byte[])>($r1);

        $r4 = r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream val$sigStream>;

        $z0 = virtualinvoke $r4.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream: boolean verify(byte[])>($r1);

     label4:
        return $z0;

     label5:
        r5 := @caughtexception;

        return 0;

     label6:
        $r4 = r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream val$sigStream>;

     label7:
        $z0 = virtualinvoke $r4.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream: boolean verify(byte[])>($r1);

     label8:
        return $z0;

     label9:
        r6 := @caughtexception;

        $r7 = new org.spongycastle.operator.RuntimeOperatorException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception obtaining signature: ");

        $r9 = virtualinvoke r6.<java.security.SignatureException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.spongycastle.operator.RuntimeOperatorException: void <init>(java.lang.String,java.lang.Throwable)>($r9, r6);

        throw $r7;

        catch java.security.SignatureException from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label5;
        catch java.security.SignatureException from label7 to label8 with label9;
    }
