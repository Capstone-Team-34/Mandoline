org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder extends java.lang.Object
private org.spongycastle.eac.operator.jcajce.EACHelper helper
    public void <init>()
    {
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder r0;
        org.spongycastle.eac.operator.jcajce.DefaultEACHelper $r1;

        r0 := @this: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.spongycastle.eac.operator.jcajce.DefaultEACHelper;

        specialinvoke $r1.<org.spongycastle.eac.operator.jcajce.DefaultEACHelper: void <init>()>();

        r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder: org.spongycastle.eac.operator.jcajce.EACHelper helper> = $r1;

        return;
    }
    static byte[] access$000(byte[]) throws java.io.IOException
    {
        byte[] $r0;

        $r0 := @parameter0: byte[];

        $r0 = staticinvoke <org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder: byte[] derEncode(byte[])>($r0);

        return $r0;
    }
    private static byte[] derEncode(byte[]) throws java.io.IOException
    {
        byte[] $r0, r1, r2;
        int i0;
        org.spongycastle.asn1.DERSequence r3;
        org.spongycastle.asn1.ASN1EncodableVector r4;
        org.spongycastle.asn1.ASN1Integer $r5;
        java.math.BigInteger $r6;

        $r0 := @parameter0: byte[];

        i0 = lengthof $r0;

        i0 = i0 / 2;

        r1 = newarray (byte)[i0];

        r2 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, r1, 0, i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, i0, r2, 0, i0);

        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r5 = new org.spongycastle.asn1.ASN1Integer;

        $r6 = new java.math.BigInteger;

        specialinvoke $r6.<java.math.BigInteger: void <init>(int,byte[])>(1, r1);

        specialinvoke $r5.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r6);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        $r5 = new org.spongycastle.asn1.ASN1Integer;

        $r6 = new java.math.BigInteger;

        specialinvoke $r6.<java.math.BigInteger: void <init>(int,byte[])>(1, r2);

        specialinvoke $r5.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r6);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r5);

        r3 = new org.spongycastle.asn1.DERSequence;

        specialinvoke r3.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        $r0 = virtualinvoke r3.<org.spongycastle.asn1.DERSequence: byte[] getEncoded()>();

        return $r0;
    }
    public org.spongycastle.eac.operator.EACSignatureVerifier build(org.spongycastle.asn1.ASN1ObjectIdentifier, java.security.PublicKey) throws org.spongycastle.operator.OperatorCreationException
    {
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.PublicKey $r2;
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream r3;
        org.spongycastle.eac.operator.jcajce.EACHelper $r4;
        java.security.Signature $r5;
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1 $r6;
        java.security.NoSuchAlgorithmException r7;
        org.spongycastle.operator.OperatorCreationException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;
        java.security.NoSuchProviderException r11;
        java.security.InvalidKeyException r12;

        r0 := @this: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.security.PublicKey;

        $r4 = r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder: org.spongycastle.eac.operator.jcajce.EACHelper helper>;

     label1:
        $r5 = virtualinvoke $r4.<org.spongycastle.eac.operator.jcajce.EACHelper: java.security.Signature getSignature(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        virtualinvoke $r5.<java.security.Signature: void initVerify(java.security.PublicKey)>($r2);

     label2:
        r3 = new org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream;

        specialinvoke r3.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream: void <init>(org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder,java.security.Signature)>(r0, $r5);

        $r6 = new org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1;

        specialinvoke $r6.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$1: void <init>(org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder,org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder$SignatureOutputStream)>(r0, $r1, r3);

        return $r6;

     label3:
        r7 := @caughtexception;

        $r8 = new org.spongycastle.operator.OperatorCreationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find algorithm: ");

        $r10 = virtualinvoke r7.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r7);

        throw $r8;

     label4:
        r11 := @caughtexception;

        $r8 = new org.spongycastle.operator.OperatorCreationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find provider: ");

        $r10 = virtualinvoke r11.<java.security.NoSuchProviderException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r11);

        throw $r8;

     label5:
        r12 := @caughtexception;

        $r8 = new org.spongycastle.operator.OperatorCreationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid key: ");

        $r10 = virtualinvoke r12.<java.security.InvalidKeyException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r12);

        throw $r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.security.NoSuchProviderException from label1 to label2 with label4;
        catch java.security.InvalidKeyException from label1 to label2 with label5;
    }
    public org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder setProvider(java.lang.String)
    {
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder r0;
        java.lang.String $r1;
        org.spongycastle.eac.operator.jcajce.NamedEACHelper $r2;

        r0 := @this: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.eac.operator.jcajce.NamedEACHelper;

        specialinvoke $r2.<org.spongycastle.eac.operator.jcajce.NamedEACHelper: void <init>(java.lang.String)>($r1);

        r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder: org.spongycastle.eac.operator.jcajce.EACHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder setProvider(java.security.Provider)
    {
        org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder r0;
        java.security.Provider $r1;
        org.spongycastle.eac.operator.jcajce.ProviderEACHelper $r2;

        r0 := @this: org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.eac.operator.jcajce.ProviderEACHelper;

        specialinvoke $r2.<org.spongycastle.eac.operator.jcajce.ProviderEACHelper: void <init>(java.security.Provider)>($r1);

        r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder: org.spongycastle.eac.operator.jcajce.EACHelper helper> = $r2;

        return r0;
    }
