org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder extends java.lang.Object
private static final java.util.Hashtable sigNames
private org.spongycastle.eac.operator.jcajce.EACHelper helper
    static void <clinit>()
    {
        java.util.Hashtable $r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: java.util.Hashtable sigNames> = $r0;

        $r0 = <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: java.util.Hashtable sigNames>;

        $r1 = <org.spongycastle.asn1.eac.EACObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_TA_RSA_v1_5_SHA_1>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA1withRSA", $r1);

        $r0 = <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: java.util.Hashtable sigNames>;

        $r1 = <org.spongycastle.asn1.eac.EACObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_TA_RSA_v1_5_SHA_256>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA256withRSA", $r1);

        $r0 = <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: java.util.Hashtable sigNames>;

        $r1 = <org.spongycastle.asn1.eac.EACObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_TA_RSA_PSS_SHA_1>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA1withRSAandMGF1", $r1);

        $r0 = <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: java.util.Hashtable sigNames>;

        $r1 = <org.spongycastle.asn1.eac.EACObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_TA_RSA_PSS_SHA_256>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA256withRSAandMGF1", $r1);

        $r0 = <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: java.util.Hashtable sigNames>;

        $r1 = <org.spongycastle.asn1.eac.EACObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_TA_RSA_v1_5_SHA_512>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA512withRSA", $r1);

        $r0 = <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: java.util.Hashtable sigNames>;

        $r1 = <org.spongycastle.asn1.eac.EACObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_TA_RSA_PSS_SHA_512>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA512withRSAandMGF1", $r1);

        $r0 = <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: java.util.Hashtable sigNames>;

        $r1 = <org.spongycastle.asn1.eac.EACObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_TA_ECDSA_SHA_1>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA1withECDSA", $r1);

        $r0 = <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: java.util.Hashtable sigNames>;

        $r1 = <org.spongycastle.asn1.eac.EACObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_TA_ECDSA_SHA_224>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA224withECDSA", $r1);

        $r0 = <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: java.util.Hashtable sigNames>;

        $r1 = <org.spongycastle.asn1.eac.EACObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_TA_ECDSA_SHA_256>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA256withECDSA", $r1);

        $r0 = <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: java.util.Hashtable sigNames>;

        $r1 = <org.spongycastle.asn1.eac.EACObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_TA_ECDSA_SHA_384>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA384withECDSA", $r1);

        $r0 = <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: java.util.Hashtable sigNames>;

        $r1 = <org.spongycastle.asn1.eac.EACObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_TA_ECDSA_SHA_512>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA512withECDSA", $r1);

        return;
    }
    public void <init>()
    {
        org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder r0;
        org.spongycastle.eac.operator.jcajce.DefaultEACHelper $r1;

        r0 := @this: org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.spongycastle.eac.operator.jcajce.DefaultEACHelper;

        specialinvoke $r1.<org.spongycastle.eac.operator.jcajce.DefaultEACHelper: void <init>()>();

        r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: org.spongycastle.eac.operator.jcajce.EACHelper helper> = $r1;

        return;
    }
    static byte[] access$000(byte[])
    {
        byte[] $r0;

        $r0 := @parameter0: byte[];

        $r0 = staticinvoke <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: byte[] reencode(byte[])>($r0);

        return $r0;
    }
    private static void copyUnsignedInt(byte[], byte[], int)
    {
        byte[] $r0, $r1;
        int $i0, i1;
        byte b2, $b3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        i1 = lengthof $r0;

        b2 = 0;

        $b3 = $r0[0];

        if $b3 != 0 goto label1;

        i1 = i1 + -1;

        b2 = 1;

     label1:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, b2, $r1, $i0, i1);

        return;
    }
    public static int max(int, int)
    {
        int $i0, i1;

        i1 := @parameter0: int;

        $i0 := @parameter1: int;

        if i1 <= $i0 goto label1;

        return i1;

     label1:
        return $i0;
    }
    private static byte[] reencode(byte[])
    {
        byte[] $r0, $r6, $r7;
        org.spongycastle.asn1.ASN1Sequence $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.ASN1Integer $r3;
        java.math.BigInteger $r4, $r5;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r0);

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r3 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $r6 = virtualinvoke $r4.<java.math.BigInteger: byte[] toByteArray()>();

        $r7 = virtualinvoke $r5.<java.math.BigInteger: byte[] toByteArray()>();

        $i0 = staticinvoke <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: int unsignedIntLength(byte[])>($r6);

        $i1 = staticinvoke <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: int unsignedIntLength(byte[])>($r7);

        $i2 = staticinvoke <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: int max(int,int)>($i0, $i1);

        $i3 = $i2 * 2;

        $r0 = newarray (byte)[$i3];

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r0, 0);

        $i0 = $i2 - $i0;

        staticinvoke <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: void copyUnsignedInt(byte[],byte[],int)>($r6, $r0, $i0);

        $i2 = $i2 * 2;

        $i1 = $i2 - $i1;

        staticinvoke <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: void copyUnsignedInt(byte[],byte[],int)>($r7, $r0, $i1);

        return $r0;
    }
    private static int unsignedIntLength(byte[])
    {
        byte[] $r0;
        int i0;
        byte $b1;

        $r0 := @parameter0: byte[];

        i0 = lengthof $r0;

        $b1 = $r0[0];

        if $b1 != 0 goto label1;

        i0 = i0 + -1;

     label1:
        return i0;
    }
    public org.spongycastle.eac.operator.EACSigner build(java.lang.String, java.security.PrivateKey) throws org.spongycastle.operator.OperatorCreationException
    {
        org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder r0;
        java.lang.String $r1;
        java.security.PrivateKey $r2;
        java.util.Hashtable $r3;
        java.lang.Object $r4;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r5;
        org.spongycastle.eac.operator.EACSigner $r6;

        r0 := @this: org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.security.PrivateKey;

        $r3 = <org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: java.util.Hashtable sigNames>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (org.spongycastle.asn1.ASN1ObjectIdentifier) $r4;

        $r6 = virtualinvoke r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: org.spongycastle.eac.operator.EACSigner build(org.spongycastle.asn1.ASN1ObjectIdentifier,java.security.PrivateKey)>($r5, $r2);

        return $r6;
    }
    public org.spongycastle.eac.operator.EACSigner build(org.spongycastle.asn1.ASN1ObjectIdentifier, java.security.PrivateKey) throws org.spongycastle.operator.OperatorCreationException
    {
        org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.PrivateKey $r2;
        org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder$SignatureOutputStream r3;
        org.spongycastle.eac.operator.jcajce.EACHelper $r4;
        java.security.Signature $r5;
        org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder$1 $r6;
        java.security.NoSuchAlgorithmException r7;
        org.spongycastle.operator.OperatorCreationException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;
        java.security.NoSuchProviderException r11;
        java.security.InvalidKeyException r12;

        r0 := @this: org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.security.PrivateKey;

        $r4 = r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: org.spongycastle.eac.operator.jcajce.EACHelper helper>;

     label1:
        $r5 = virtualinvoke $r4.<org.spongycastle.eac.operator.jcajce.EACHelper: java.security.Signature getSignature(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r2);

     label2:
        r3 = new org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder$SignatureOutputStream;

        specialinvoke r3.<org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder$SignatureOutputStream: void <init>(org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder,java.security.Signature)>(r0, $r5);

        $r6 = new org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder$1;

        specialinvoke $r6.<org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder$1: void <init>(org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder,org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder$SignatureOutputStream)>(r0, $r1, r3);

        return $r6;

     label3:
        r7 := @caughtexception;

        $r8 = new org.spongycastle.operator.OperatorCreationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find algorithm: ");

        $r10 = virtualinvoke r7.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r7);

        throw $r8;

     label4:
        r11 := @caughtexception;

        $r8 = new org.spongycastle.operator.OperatorCreationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find provider: ");

        $r10 = virtualinvoke r11.<java.security.NoSuchProviderException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r11);

        throw $r8;

     label5:
        r12 := @caughtexception;

        $r8 = new org.spongycastle.operator.OperatorCreationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid key: ");

        $r10 = virtualinvoke r12.<java.security.InvalidKeyException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.spongycastle.operator.OperatorCreationException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r12);

        throw $r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.security.NoSuchProviderException from label1 to label2 with label4;
        catch java.security.InvalidKeyException from label1 to label2 with label5;
    }
    public org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder setProvider(java.lang.String)
    {
        org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder r0;
        java.lang.String $r1;
        org.spongycastle.eac.operator.jcajce.NamedEACHelper $r2;

        r0 := @this: org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.eac.operator.jcajce.NamedEACHelper;

        specialinvoke $r2.<org.spongycastle.eac.operator.jcajce.NamedEACHelper: void <init>(java.lang.String)>($r1);

        r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: org.spongycastle.eac.operator.jcajce.EACHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder setProvider(java.security.Provider)
    {
        org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder r0;
        java.security.Provider $r1;
        org.spongycastle.eac.operator.jcajce.ProviderEACHelper $r2;

        r0 := @this: org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.eac.operator.jcajce.ProviderEACHelper;

        specialinvoke $r2.<org.spongycastle.eac.operator.jcajce.ProviderEACHelper: void <init>(java.security.Provider)>($r1);

        r0.<org.spongycastle.eac.operator.jcajce.JcaEACSignerBuilder: org.spongycastle.eac.operator.jcajce.EACHelper helper> = $r2;

        return r0;
    }
