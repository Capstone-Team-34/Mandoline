org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge extends org.spongycastle.mozilla.SignedPublicKeyAndChallenge
org.spongycastle.jcajce.util.JcaJceHelper helper
    private void <init>(org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge, org.spongycastle.jcajce.util.JcaJceHelper)
    {
        org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge r0;
        org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge $r1;
        org.spongycastle.jcajce.util.JcaJceHelper $r2;
        org.spongycastle.jcajce.util.DefaultJcaJceHelper $r3;

        r0 := @this: org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge;

        $r1 := @parameter0: org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge;

        $r2 := @parameter1: org.spongycastle.jcajce.util.JcaJceHelper;

        specialinvoke r0.<org.spongycastle.mozilla.SignedPublicKeyAndChallenge: void <init>(org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge)>($r1);

        $r3 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r3.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r3;

        r0.<org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return;
    }
    public void <init>(byte[])
    {
        org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge r0;
        byte[] $r1;
        org.spongycastle.jcajce.util.DefaultJcaJceHelper $r2;

        r0 := @this: org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.spongycastle.mozilla.SignedPublicKeyAndChallenge: void <init>(byte[])>($r1);

        $r2 = new org.spongycastle.jcajce.util.DefaultJcaJceHelper;

        specialinvoke $r2.<org.spongycastle.jcajce.util.DefaultJcaJceHelper: void <init>()>();

        r0.<org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r2;

        return;
    }
    public java.security.PublicKey getPublicKey() throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, java.security.InvalidKeyException
    {
        org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge r0;
        java.lang.Exception r1;
        java.security.spec.X509EncodedKeySpec r2;
        org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge $r3;
        org.spongycastle.asn1.mozilla.PublicKeyAndChallenge $r4;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r5;
        byte[] $r6;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r7;
        org.spongycastle.jcajce.util.JcaJceHelper $r8;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r9;
        java.lang.String $r10;
        java.security.KeyFactory $r11;
        java.security.PublicKey $r12;
        java.security.InvalidKeyException $r13;

        r0 := @this: org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge;

     label1:
        $r3 = r0.<org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge: org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge spkacSeq>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge: org.spongycastle.asn1.mozilla.PublicKeyAndChallenge getPublicKeyAndChallenge()>();

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.mozilla.PublicKeyAndChallenge: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

     label2:
        r2 = new java.security.spec.X509EncodedKeySpec;

     label3:
        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: byte[] getEncoded()>();

        specialinvoke r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r6);

        $r7 = virtualinvoke $r5.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        $r8 = r0.<org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        $r9 = virtualinvoke $r7.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r10 = virtualinvoke $r9.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r11 = interfaceinvoke $r8.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r2);

     label4:
        return $r12;

     label5:
        r1 := @caughtexception;

        $r13 = new java.security.InvalidKeyException;

        specialinvoke $r13.<java.security.InvalidKeyException: void <init>(java.lang.String)>("error encoding public key");

        throw $r13;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    public org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge setProvider(java.lang.String)
    {
        org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge r0, $r2;
        java.lang.String $r1;
        org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge $r3;
        org.spongycastle.jcajce.util.NamedJcaJceHelper $r4;

        r0 := @this: org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge;

        $r3 = r0.<org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge: org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge spkacSeq>;

        $r4 = new org.spongycastle.jcajce.util.NamedJcaJceHelper;

        specialinvoke $r4.<org.spongycastle.jcajce.util.NamedJcaJceHelper: void <init>(java.lang.String)>($r1);

        specialinvoke $r2.<org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge: void <init>(org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge,org.spongycastle.jcajce.util.JcaJceHelper)>($r3, $r4);

        return $r2;
    }
    public org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge setProvider(java.security.Provider)
    {
        org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge r0, $r2;
        java.security.Provider $r1;
        org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge $r3;
        org.spongycastle.jcajce.util.ProviderJcaJceHelper $r4;

        r0 := @this: org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge;

        $r3 = r0.<org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge: org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge spkacSeq>;

        $r4 = new org.spongycastle.jcajce.util.ProviderJcaJceHelper;

        specialinvoke $r4.<org.spongycastle.jcajce.util.ProviderJcaJceHelper: void <init>(java.security.Provider)>($r1);

        specialinvoke $r2.<org.spongycastle.mozilla.jcajce.JcaSignedPublicKeyAndChallenge: void <init>(org.spongycastle.asn1.mozilla.SignedPublicKeyAndChallenge,org.spongycastle.jcajce.util.JcaJceHelper)>($r3, $r4);

        return $r2;
    }
