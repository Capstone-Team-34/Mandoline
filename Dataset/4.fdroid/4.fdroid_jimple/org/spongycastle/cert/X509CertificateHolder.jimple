org.spongycastle.cert.X509CertificateHolder extends java.lang.Object implements org.spongycastle.util.Encodable
private org.spongycastle.asn1.x509.Extensions extensions
private org.spongycastle.asn1.x509.Certificate x509Certificate
    public void <init>(org.spongycastle.asn1.x509.Certificate)
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.x509.TBSCertificate $r2;
        org.spongycastle.asn1.x509.Extensions $r3;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 := @parameter0: org.spongycastle.asn1.x509.Certificate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate> = $r1;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.TBSCertificate getTBSCertificate()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.TBSCertificate: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Extensions extensions> = $r3;

        return;
    }
    public void <init>(byte[]) throws java.io.IOException
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        byte[] $r1;
        org.spongycastle.asn1.x509.Certificate $r2;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate parseBytes(byte[])>($r1);

        specialinvoke r0.<org.spongycastle.cert.X509CertificateHolder: void <init>(org.spongycastle.asn1.x509.Certificate)>($r2);

        return;
    }
    private static org.spongycastle.asn1.x509.Certificate parseBytes(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.x509.Certificate $r2;
        java.lang.ClassCastException r3;
        org.spongycastle.cert.CertIOException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.IllegalArgumentException r7;

        $r0 := @parameter0: byte[];

     label1:
        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r0);

        $r2 = staticinvoke <org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Certificate getInstance(java.lang.Object)>($r1);

     label2:
        return $r2;

     label3:
        r3 := @caughtexception;

        $r4 = new org.spongycastle.cert.CertIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed data: ");

        $r6 = virtualinvoke r3.<java.lang.ClassCastException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.cert.CertIOException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r3);

        throw $r4;

     label4:
        r7 := @caughtexception;

        $r4 = new org.spongycastle.cert.CertIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed data: ");

        $r6 = virtualinvoke r7.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.cert.CertIOException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r7);

        throw $r4;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.cert.X509CertificateHolder r0, r3;
        java.lang.Object $r1;
        org.spongycastle.asn1.x509.Certificate $r2, $r4;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.spongycastle.cert.X509CertificateHolder;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = (org.spongycastle.cert.X509CertificateHolder) $r1;

        $r4 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r2 = r3.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $z0 = virtualinvoke $r4.<org.spongycastle.asn1.x509.Certificate: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }
    public java.util.Set getCriticalExtensionOIDs()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        java.util.Set $r1;
        org.spongycastle.asn1.x509.Extensions $r2;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r2 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Extensions extensions>;

        $r1 = staticinvoke <org.spongycastle.cert.CertUtils: java.util.Set getCriticalExtensionOIDs(org.spongycastle.asn1.x509.Extensions)>($r2);

        return $r1;
    }
    public byte[] getEncoded() throws java.io.IOException
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        byte[] $r1;
        org.spongycastle.asn1.x509.Certificate $r2;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r2 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: byte[] getEncoded()>();

        return $r1;
    }
    public org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.x509.Extension $r2;
        org.spongycastle.asn1.x509.Extensions $r3;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Extensions extensions>;

        if $r3 == null goto label1;

        $r3 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Extensions extensions>;

        $r2 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        return $r2;

     label1:
        return null;
    }
    public java.util.List getExtensionOIDs()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        java.util.List $r1;
        org.spongycastle.asn1.x509.Extensions $r2;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r2 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Extensions extensions>;

        $r1 = staticinvoke <org.spongycastle.cert.CertUtils: java.util.List getExtensionOIDs(org.spongycastle.asn1.x509.Extensions)>($r2);

        return $r1;
    }
    public org.spongycastle.asn1.x509.Extensions getExtensions()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.asn1.x509.Extensions r1;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        r1 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Extensions extensions>;

        return r1;
    }
    public org.spongycastle.asn1.x500.X500Name getIssuer()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.x500.X500Name $r2;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x500.X500Name getIssuer()>();

        $r2 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r2);

        return $r2;
    }
    public java.util.Set getNonCriticalExtensionOIDs()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        java.util.Set $r1;
        org.spongycastle.asn1.x509.Extensions $r2;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r2 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Extensions extensions>;

        $r1 = staticinvoke <org.spongycastle.cert.CertUtils: java.util.Set getNonCriticalExtensionOIDs(org.spongycastle.asn1.x509.Extensions)>($r2);

        return $r1;
    }
    public java.util.Date getNotAfter()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.x509.Time $r2;
        java.util.Date $r3;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Time getEndDate()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Time: java.util.Date getDate()>();

        return $r3;
    }
    public java.util.Date getNotBefore()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.x509.Time $r2;
        java.util.Date $r3;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Time getStartDate()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Time: java.util.Date getDate()>();

        return $r3;
    }
    public java.math.BigInteger getSerialNumber()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.ASN1Integer $r2;
        java.math.BigInteger $r3;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.ASN1Integer getSerialNumber()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        return $r3;
    }
    public byte[] getSignature()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.DERBitString $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.DERBitString getSignature()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        return $r3;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.x509.Certificate $r2;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r2 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        return $r1;
    }
    public org.spongycastle.asn1.x500.X500Name getSubject()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.asn1.x509.Certificate $r1;
        org.spongycastle.asn1.x500.X500Name $r2;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x500.X500Name getSubject()>();

        $r2 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r2);

        return $r2;
    }
    public org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        org.spongycastle.asn1.x509.Certificate $r2;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r2 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

        return $r1;
    }
    public int getVersion()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        int $i0;
        org.spongycastle.asn1.x509.Certificate $r1;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: int getVersionNumber()>();

        return $i0;
    }
    public int getVersionNumber()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        int $i0;
        org.spongycastle.asn1.x509.Certificate $r1;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: int getVersionNumber()>();

        return $i0;
    }
    public boolean hasExtensions()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.asn1.x509.Extensions $r1;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Extensions extensions>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public int hashCode()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        int $i0;
        org.spongycastle.asn1.x509.Certificate $r1;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.x509.Certificate: int hashCode()>();

        return $i0;
    }
    public boolean isSignatureValid(org.spongycastle.operator.ContentVerifierProvider) throws org.spongycastle.cert.CertException
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.operator.ContentVerifierProvider $r1;
        org.spongycastle.asn1.DEROutputStream r2;
        java.lang.Exception r3;
        org.spongycastle.asn1.x509.Certificate $r4;
        org.spongycastle.asn1.x509.TBSCertificate $r5;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r6, $r7;
        boolean $z0;
        org.spongycastle.cert.CertException $r8;
        org.spongycastle.operator.ContentVerifier $r9;
        java.io.OutputStream $r10;
        org.spongycastle.asn1.DERBitString $r11;
        byte[] $r12;
        java.lang.StringBuilder $r13;
        java.lang.String $r14;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 := @parameter0: org.spongycastle.operator.ContentVerifierProvider;

        $r4 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.TBSCertificate getTBSCertificate()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.TBSCertificate: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignature()>();

        $r4 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $z0 = staticinvoke <org.spongycastle.cert.CertUtils: boolean isAlgIdEqual(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r6, $r7);

        if $z0 != 0 goto label1;

        $r8 = new org.spongycastle.cert.CertException;

        specialinvoke $r8.<org.spongycastle.cert.CertException: void <init>(java.lang.String)>("signature invalid - algorithm identifier mismatch");

        throw $r8;

     label1:
        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.TBSCertificate: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignature()>();

        $r9 = interfaceinvoke $r1.<org.spongycastle.operator.ContentVerifierProvider: org.spongycastle.operator.ContentVerifier get(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r6);

        $r10 = interfaceinvoke $r9.<org.spongycastle.operator.ContentVerifier: java.io.OutputStream getOutputStream()>();

     label2:
        r2 = new org.spongycastle.asn1.DEROutputStream;

     label3:
        specialinvoke r2.<org.spongycastle.asn1.DEROutputStream: void <init>(java.io.OutputStream)>($r10);

        virtualinvoke r2.<org.spongycastle.asn1.DEROutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>($r5);

        virtualinvoke $r10.<java.io.OutputStream: void close()>();

     label4:
        $r4 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r11 = virtualinvoke $r4.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.DERBitString getSignature()>();

        $r12 = virtualinvoke $r11.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        $z0 = interfaceinvoke $r9.<org.spongycastle.operator.ContentVerifier: boolean verify(byte[])>($r12);

        return $z0;

     label5:
        r3 := @caughtexception;

        $r8 = new org.spongycastle.cert.CertException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to process signature: ");

        $r14 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.spongycastle.cert.CertException: void <init>(java.lang.String,java.lang.Throwable)>($r14, r3);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    public boolean isValidOn(java.util.Date)
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        java.util.Date $r1, $r4;
        org.spongycastle.asn1.x509.Certificate $r2;
        org.spongycastle.asn1.x509.Time $r3;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        $r1 := @parameter0: java.util.Date;

        $r2 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Time getStartDate()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Time: java.util.Date getDate()>();

        $z0 = virtualinvoke $r1.<java.util.Date: boolean before(java.util.Date)>($r4);

        if $z0 != 0 goto label1;

        $r2 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Time getEndDate()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Time: java.util.Date getDate()>();

        $z0 = virtualinvoke $r1.<java.util.Date: boolean after(java.util.Date)>($r4);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public org.spongycastle.asn1.x509.Certificate toASN1Structure()
    {
        org.spongycastle.cert.X509CertificateHolder r0;
        org.spongycastle.asn1.x509.Certificate r1;

        r0 := @this: org.spongycastle.cert.X509CertificateHolder;

        r1 = r0.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate x509Certificate>;

        return r1;
    }
