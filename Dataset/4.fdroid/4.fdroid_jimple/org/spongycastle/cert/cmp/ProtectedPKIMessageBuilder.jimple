org.spongycastle.cert.cmp.ProtectedPKIMessageBuilder extends java.lang.Object
private org.spongycastle.asn1.'cmp'.PKIBody body
private java.util.List extraCerts
private java.util.List generalInfos
private org.spongycastle.asn1.'cmp'.PKIHeaderBuilder hdrBuilder
    public void <init>(int, org.spongycastle.asn1.x509.GeneralName, org.spongycastle.asn1.x509.GeneralName)
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        int $i0;
        org.spongycastle.asn1.x509.GeneralName $r1, $r2;
        java.util.ArrayList $r3;
        org.spongycastle.asn1.'cmp'.PKIHeaderBuilder $r4;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.spongycastle.asn1.x509.GeneralName;

        $r2 := @parameter2: org.spongycastle.asn1.x509.GeneralName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: java.util.List generalInfos> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: java.util.List extraCerts> = $r3;

        $r4 = new org.spongycastle.asn1.'cmp'.PKIHeaderBuilder;

        specialinvoke $r4.<org.spongycastle.asn1.'cmp'.PKIHeaderBuilder: void <init>(int,org.spongycastle.asn1.x509.GeneralName,org.spongycastle.asn1.x509.GeneralName)>($i0, $r1, $r2);

        r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder hdrBuilder> = $r4;

        return;
    }
    public void <init>(org.spongycastle.asn1.x509.GeneralName, org.spongycastle.asn1.x509.GeneralName)
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        org.spongycastle.asn1.x509.GeneralName $r1, $r2;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralName;

        $r2 := @parameter1: org.spongycastle.asn1.x509.GeneralName;

        specialinvoke r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: void <init>(int,org.spongycastle.asn1.x509.GeneralName,org.spongycastle.asn1.x509.GeneralName)>(2, $r1, $r2);

        return;
    }
    private byte[] calculateMac(org.spongycastle.operator.MacCalculator, org.spongycastle.asn1.'cmp'.PKIHeader, org.spongycastle.asn1.'cmp'.PKIBody) throws java.io.IOException
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        org.spongycastle.operator.MacCalculator $r1;
        org.spongycastle.asn1.'cmp'.PKIHeader $r2;
        org.spongycastle.asn1.'cmp'.PKIBody $r3;
        org.spongycastle.asn1.ASN1EncodableVector r4;
        java.io.OutputStream $r5;
        org.spongycastle.asn1.DERSequence $r6;
        byte[] $r7;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: org.spongycastle.operator.MacCalculator;

        $r2 := @parameter1: org.spongycastle.asn1.'cmp'.PKIHeader;

        $r3 := @parameter2: org.spongycastle.asn1.'cmp'.PKIBody;

        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r5 = interfaceinvoke $r1.<org.spongycastle.operator.MacCalculator: java.io.OutputStream getOutputStream()>();

        $r6 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r6.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.DERSequence: byte[] getEncoded(java.lang.String)>("DER");

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[])>($r7);

        virtualinvoke $r5.<java.io.OutputStream: void close()>();

        $r7 = interfaceinvoke $r1.<org.spongycastle.operator.MacCalculator: byte[] getMac()>();

        return $r7;
    }
    private byte[] calculateSignature(org.spongycastle.operator.ContentSigner, org.spongycastle.asn1.'cmp'.PKIHeader, org.spongycastle.asn1.'cmp'.PKIBody) throws java.io.IOException
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        org.spongycastle.operator.ContentSigner $r1;
        org.spongycastle.asn1.'cmp'.PKIHeader $r2;
        org.spongycastle.asn1.'cmp'.PKIBody $r3;
        org.spongycastle.asn1.ASN1EncodableVector r4;
        java.io.OutputStream $r5;
        org.spongycastle.asn1.DERSequence $r6;
        byte[] $r7;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: org.spongycastle.operator.ContentSigner;

        $r2 := @parameter1: org.spongycastle.asn1.'cmp'.PKIHeader;

        $r3 := @parameter2: org.spongycastle.asn1.'cmp'.PKIBody;

        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r2);

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r3);

        $r5 = interfaceinvoke $r1.<org.spongycastle.operator.ContentSigner: java.io.OutputStream getOutputStream()>();

        $r6 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r6.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.DERSequence: byte[] getEncoded(java.lang.String)>("DER");

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[])>($r7);

        virtualinvoke $r5.<java.io.OutputStream: void close()>();

        $r7 = interfaceinvoke $r1.<org.spongycastle.operator.ContentSigner: byte[] getSignature()>();

        return $r7;
    }
    private void finaliseHeader(org.spongycastle.asn1.x509.AlgorithmIdentifier)
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.'cmp'.InfoTypeAndValue[] r2;
        org.spongycastle.asn1.'cmp'.PKIHeaderBuilder $r3;
        java.util.List $r4;
        boolean $z0;
        int $i0;
        java.lang.Object[] $r5;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r3 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder hdrBuilder>;

        virtualinvoke $r3.<org.spongycastle.asn1.'cmp'.PKIHeaderBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder setProtectionAlg(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r1);

        $r4 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: java.util.List generalInfos>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: java.util.List generalInfos>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        r2 = newarray (org.spongycastle.asn1.'cmp'.InfoTypeAndValue)[$i0];

        $r3 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder hdrBuilder>;

        $r4 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: java.util.List generalInfos>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        r2 = (org.spongycastle.asn1.'cmp'.InfoTypeAndValue[]) $r5;

        virtualinvoke $r3.<org.spongycastle.asn1.'cmp'.PKIHeaderBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder setGeneralInfo(org.spongycastle.asn1.'cmp'.InfoTypeAndValue[])>(r2);

     label1:
        return;
    }
    private org.spongycastle.cert.'cmp'.ProtectedPKIMessage finaliseMessage(org.spongycastle.asn1.'cmp'.PKIHeader, org.spongycastle.asn1.DERBitString)
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        org.spongycastle.asn1.'cmp'.PKIHeader $r1;
        org.spongycastle.asn1.DERBitString $r2;
        org.spongycastle.asn1.'cmp'.CMPCertificate[] r3;
        java.util.List $r4;
        boolean $z0;
        int $i0, $i1;
        org.spongycastle.asn1.'cmp'.CMPCertificate $r5;
        java.lang.Object $r6;
        org.spongycastle.cert.X509CertificateHolder $r7;
        org.spongycastle.asn1.x509.Certificate $r8;
        org.spongycastle.cert.'cmp'.ProtectedPKIMessage $r9;
        org.spongycastle.asn1.'cmp'.PKIMessage $r10;
        org.spongycastle.asn1.'cmp'.PKIBody $r11;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.'cmp'.PKIHeader;

        $r2 := @parameter1: org.spongycastle.asn1.DERBitString;

        $r4 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: java.util.List extraCerts>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r4 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: java.util.List extraCerts>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        r3 = newarray (org.spongycastle.asn1.'cmp'.CMPCertificate)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r3;

        if $i0 == $i1 goto label2;

        $r5 = new org.spongycastle.asn1.'cmp'.CMPCertificate;

        $r4 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: java.util.List extraCerts>;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r7 = (org.spongycastle.cert.X509CertificateHolder) $r6;

        $r8 = virtualinvoke $r7.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate toASN1Structure()>();

        specialinvoke $r5.<org.spongycastle.asn1.'cmp'.CMPCertificate: void <init>(org.spongycastle.asn1.x509.Certificate)>($r8);

        r3[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r9 = new org.spongycastle.cert.'cmp'.ProtectedPKIMessage;

        $r10 = new org.spongycastle.asn1.'cmp'.PKIMessage;

        $r11 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIBody body>;

        specialinvoke $r10.<org.spongycastle.asn1.'cmp'.PKIMessage: void <init>(org.spongycastle.asn1.'cmp'.PKIHeader,org.spongycastle.asn1.'cmp'.PKIBody,org.spongycastle.asn1.DERBitString,org.spongycastle.asn1.'cmp'.CMPCertificate[])>($r1, $r11, $r2, r3);

        specialinvoke $r9.<org.spongycastle.cert.'cmp'.ProtectedPKIMessage: void <init>(org.spongycastle.asn1.'cmp'.PKIMessage)>($r10);

        return $r9;

     label3:
        $r9 = new org.spongycastle.cert.'cmp'.ProtectedPKIMessage;

        $r10 = new org.spongycastle.asn1.'cmp'.PKIMessage;

        $r11 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIBody body>;

        specialinvoke $r10.<org.spongycastle.asn1.'cmp'.PKIMessage: void <init>(org.spongycastle.asn1.'cmp'.PKIHeader,org.spongycastle.asn1.'cmp'.PKIBody,org.spongycastle.asn1.DERBitString)>($r1, $r11, $r2);

        specialinvoke $r9.<org.spongycastle.cert.'cmp'.ProtectedPKIMessage: void <init>(org.spongycastle.asn1.'cmp'.PKIMessage)>($r10);

        return $r9;
    }
    public org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder addCMPCertificate(org.spongycastle.cert.X509CertificateHolder)
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        org.spongycastle.cert.X509CertificateHolder $r1;
        java.util.List $r2;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: org.spongycastle.cert.X509CertificateHolder;

        $r2 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: java.util.List extraCerts>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return r0;
    }
    public org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder addGeneralInfo(org.spongycastle.asn1.'cmp'.InfoTypeAndValue)
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        org.spongycastle.asn1.'cmp'.InfoTypeAndValue $r1;
        java.util.List $r2;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.'cmp'.InfoTypeAndValue;

        $r2 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: java.util.List generalInfos>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return r0;
    }
    public org.spongycastle.cert.'cmp'.ProtectedPKIMessage build(org.spongycastle.operator.ContentSigner) throws org.spongycastle.cert.'cmp'.CMPException
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        org.spongycastle.operator.ContentSigner $r1;
        java.io.IOException r2;
        org.spongycastle.asn1.DERBitString r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        org.spongycastle.asn1.'cmp'.PKIHeaderBuilder $r5;
        org.spongycastle.asn1.'cmp'.PKIHeader $r6;
        org.spongycastle.asn1.'cmp'.PKIBody $r7;
        byte[] $r8;
        org.spongycastle.cert.'cmp'.ProtectedPKIMessage $r9;
        org.spongycastle.cert.'cmp'.CMPException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: org.spongycastle.operator.ContentSigner;

        $r4 = interfaceinvoke $r1.<org.spongycastle.operator.ContentSigner: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        specialinvoke r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: void finaliseHeader(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r4);

        $r5 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder hdrBuilder>;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.'cmp'.PKIHeaderBuilder: org.spongycastle.asn1.'cmp'.PKIHeader build()>();

        r3 = new org.spongycastle.asn1.DERBitString;

        $r7 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIBody body>;

     label1:
        $r8 = specialinvoke r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: byte[] calculateSignature(org.spongycastle.operator.ContentSigner,org.spongycastle.asn1.'cmp'.PKIHeader,org.spongycastle.asn1.'cmp'.PKIBody)>($r1, $r6, $r7);

        specialinvoke r3.<org.spongycastle.asn1.DERBitString: void <init>(byte[])>($r8);

        $r9 = specialinvoke r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.cert.'cmp'.ProtectedPKIMessage finaliseMessage(org.spongycastle.asn1.'cmp'.PKIHeader,org.spongycastle.asn1.DERBitString)>($r6, r3);

     label2:
        return $r9;

     label3:
        r2 := @caughtexception;

        $r10 = new org.spongycastle.cert.'cmp'.CMPException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to encode signature input: ");

        $r12 = virtualinvoke r2.<java.io.IOException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.spongycastle.cert.'cmp'.CMPException: void <init>(java.lang.String,java.lang.Throwable)>($r12, r2);

        throw $r10;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public org.spongycastle.cert.'cmp'.ProtectedPKIMessage build(org.spongycastle.operator.MacCalculator) throws org.spongycastle.cert.'cmp'.CMPException
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        org.spongycastle.operator.MacCalculator $r1;
        java.io.IOException r2;
        org.spongycastle.asn1.DERBitString r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        org.spongycastle.asn1.'cmp'.PKIHeaderBuilder $r5;
        org.spongycastle.asn1.'cmp'.PKIHeader $r6;
        org.spongycastle.asn1.'cmp'.PKIBody $r7;
        byte[] $r8;
        org.spongycastle.cert.'cmp'.ProtectedPKIMessage $r9;
        org.spongycastle.cert.'cmp'.CMPException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: org.spongycastle.operator.MacCalculator;

        $r4 = interfaceinvoke $r1.<org.spongycastle.operator.MacCalculator: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        specialinvoke r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: void finaliseHeader(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r4);

        $r5 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder hdrBuilder>;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.'cmp'.PKIHeaderBuilder: org.spongycastle.asn1.'cmp'.PKIHeader build()>();

        r3 = new org.spongycastle.asn1.DERBitString;

        $r7 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIBody body>;

     label1:
        $r8 = specialinvoke r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: byte[] calculateMac(org.spongycastle.operator.MacCalculator,org.spongycastle.asn1.'cmp'.PKIHeader,org.spongycastle.asn1.'cmp'.PKIBody)>($r1, $r6, $r7);

        specialinvoke r3.<org.spongycastle.asn1.DERBitString: void <init>(byte[])>($r8);

        $r9 = specialinvoke r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.cert.'cmp'.ProtectedPKIMessage finaliseMessage(org.spongycastle.asn1.'cmp'.PKIHeader,org.spongycastle.asn1.DERBitString)>($r6, r3);

     label2:
        return $r9;

     label3:
        r2 := @caughtexception;

        $r10 = new org.spongycastle.cert.'cmp'.CMPException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to encode MAC input: ");

        $r12 = virtualinvoke r2.<java.io.IOException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.spongycastle.cert.'cmp'.CMPException: void <init>(java.lang.String,java.lang.Throwable)>($r12, r2);

        throw $r10;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder setBody(org.spongycastle.asn1.'cmp'.PKIBody)
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        org.spongycastle.asn1.'cmp'.PKIBody $r1;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.'cmp'.PKIBody;

        r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIBody body> = $r1;

        return r0;
    }
    public org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder setFreeText(org.spongycastle.asn1.'cmp'.PKIFreeText)
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        org.spongycastle.asn1.'cmp'.PKIFreeText $r1;
        org.spongycastle.asn1.'cmp'.PKIHeaderBuilder $r2;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.'cmp'.PKIFreeText;

        $r2 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder hdrBuilder>;

        virtualinvoke $r2.<org.spongycastle.asn1.'cmp'.PKIHeaderBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder setFreeText(org.spongycastle.asn1.'cmp'.PKIFreeText)>($r1);

        return r0;
    }
    public org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder setMessageTime(java.util.Date)
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        java.util.Date $r1;
        org.spongycastle.asn1.'cmp'.PKIHeaderBuilder $r2;
        org.spongycastle.asn1.ASN1GeneralizedTime $r3;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: java.util.Date;

        $r2 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder hdrBuilder>;

        $r3 = new org.spongycastle.asn1.ASN1GeneralizedTime;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1GeneralizedTime: void <init>(java.util.Date)>($r1);

        virtualinvoke $r2.<org.spongycastle.asn1.'cmp'.PKIHeaderBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder setMessageTime(org.spongycastle.asn1.ASN1GeneralizedTime)>($r3);

        return r0;
    }
    public org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder setRecipKID(byte[])
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        byte[] $r1;
        org.spongycastle.asn1.'cmp'.PKIHeaderBuilder $r2;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: byte[];

        $r2 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder hdrBuilder>;

        virtualinvoke $r2.<org.spongycastle.asn1.'cmp'.PKIHeaderBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder setRecipKID(byte[])>($r1);

        return r0;
    }
    public org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder setRecipNonce(byte[])
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        byte[] $r1;
        org.spongycastle.asn1.'cmp'.PKIHeaderBuilder $r2;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: byte[];

        $r2 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder hdrBuilder>;

        virtualinvoke $r2.<org.spongycastle.asn1.'cmp'.PKIHeaderBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder setRecipNonce(byte[])>($r1);

        return r0;
    }
    public org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder setSenderKID(byte[])
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        byte[] $r1;
        org.spongycastle.asn1.'cmp'.PKIHeaderBuilder $r2;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: byte[];

        $r2 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder hdrBuilder>;

        virtualinvoke $r2.<org.spongycastle.asn1.'cmp'.PKIHeaderBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder setSenderKID(byte[])>($r1);

        return r0;
    }
    public org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder setSenderNonce(byte[])
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        byte[] $r1;
        org.spongycastle.asn1.'cmp'.PKIHeaderBuilder $r2;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: byte[];

        $r2 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder hdrBuilder>;

        virtualinvoke $r2.<org.spongycastle.asn1.'cmp'.PKIHeaderBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder setSenderNonce(byte[])>($r1);

        return r0;
    }
    public org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder setTransactionID(byte[])
    {
        org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder r0;
        byte[] $r1;
        org.spongycastle.asn1.'cmp'.PKIHeaderBuilder $r2;

        r0 := @this: org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder;

        $r1 := @parameter0: byte[];

        $r2 = r0.<org.spongycastle.cert.'cmp'.ProtectedPKIMessageBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder hdrBuilder>;

        virtualinvoke $r2.<org.spongycastle.asn1.'cmp'.PKIHeaderBuilder: org.spongycastle.asn1.'cmp'.PKIHeaderBuilder setTransactionID(byte[])>($r1);

        return r0;
    }
