org.spongycastle.cert.cmp.GeneralPKIMessage extends java.lang.Object
private final org.spongycastle.asn1.'cmp'.PKIMessage pkiMessage
    public void <init>(org.spongycastle.asn1.'cmp'.PKIMessage)
    {
        org.spongycastle.cert.'cmp'.GeneralPKIMessage r0;
        org.spongycastle.asn1.'cmp'.PKIMessage $r1;

        r0 := @this: org.spongycastle.cert.'cmp'.GeneralPKIMessage;

        $r1 := @parameter0: org.spongycastle.asn1.'cmp'.PKIMessage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.'cmp'.GeneralPKIMessage: org.spongycastle.asn1.'cmp'.PKIMessage pkiMessage> = $r1;

        return;
    }
    public void <init>(byte[]) throws java.io.IOException
    {
        org.spongycastle.cert.'cmp'.GeneralPKIMessage r0;
        byte[] $r1;
        org.spongycastle.asn1.'cmp'.PKIMessage $r2;

        r0 := @this: org.spongycastle.cert.'cmp'.GeneralPKIMessage;

        $r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.spongycastle.cert.'cmp'.GeneralPKIMessage: org.spongycastle.asn1.'cmp'.PKIMessage parseBytes(byte[])>($r1);

        specialinvoke r0.<org.spongycastle.cert.'cmp'.GeneralPKIMessage: void <init>(org.spongycastle.asn1.'cmp'.PKIMessage)>($r2);

        return;
    }
    private static org.spongycastle.asn1.'cmp'.PKIMessage parseBytes(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.'cmp'.PKIMessage $r2;
        java.lang.ClassCastException r3;
        org.spongycastle.cert.CertIOException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.IllegalArgumentException r7;

        $r0 := @parameter0: byte[];

     label1:
        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r0);

        $r2 = staticinvoke <org.spongycastle.asn1.'cmp'.PKIMessage: org.spongycastle.asn1.'cmp'.PKIMessage getInstance(java.lang.Object)>($r1);

     label2:
        return $r2;

     label3:
        r3 := @caughtexception;

        $r4 = new org.spongycastle.cert.CertIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed data: ");

        $r6 = virtualinvoke r3.<java.lang.ClassCastException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.cert.CertIOException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r3);

        throw $r4;

     label4:
        r7 := @caughtexception;

        $r4 = new org.spongycastle.cert.CertIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed data: ");

        $r6 = virtualinvoke r7.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.cert.CertIOException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r7);

        throw $r4;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
    }
    public org.spongycastle.asn1.'cmp'.PKIBody getBody()
    {
        org.spongycastle.cert.'cmp'.GeneralPKIMessage r0;
        org.spongycastle.asn1.'cmp'.PKIBody $r1;
        org.spongycastle.asn1.'cmp'.PKIMessage $r2;

        r0 := @this: org.spongycastle.cert.'cmp'.GeneralPKIMessage;

        $r2 = r0.<org.spongycastle.cert.'cmp'.GeneralPKIMessage: org.spongycastle.asn1.'cmp'.PKIMessage pkiMessage>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.'cmp'.PKIMessage: org.spongycastle.asn1.'cmp'.PKIBody getBody()>();

        return $r1;
    }
    public org.spongycastle.asn1.'cmp'.PKIHeader getHeader()
    {
        org.spongycastle.cert.'cmp'.GeneralPKIMessage r0;
        org.spongycastle.asn1.'cmp'.PKIHeader $r1;
        org.spongycastle.asn1.'cmp'.PKIMessage $r2;

        r0 := @this: org.spongycastle.cert.'cmp'.GeneralPKIMessage;

        $r2 = r0.<org.spongycastle.cert.'cmp'.GeneralPKIMessage: org.spongycastle.asn1.'cmp'.PKIMessage pkiMessage>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.'cmp'.PKIMessage: org.spongycastle.asn1.'cmp'.PKIHeader getHeader()>();

        return $r1;
    }
    public boolean hasProtection()
    {
        org.spongycastle.cert.'cmp'.GeneralPKIMessage r0;
        org.spongycastle.asn1.'cmp'.PKIMessage $r1;
        org.spongycastle.asn1.'cmp'.PKIHeader $r2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;

        r0 := @this: org.spongycastle.cert.'cmp'.GeneralPKIMessage;

        $r1 = r0.<org.spongycastle.cert.'cmp'.GeneralPKIMessage: org.spongycastle.asn1.'cmp'.PKIMessage pkiMessage>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.'cmp'.PKIMessage: org.spongycastle.asn1.'cmp'.PKIHeader getHeader()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.'cmp'.PKIHeader: org.spongycastle.asn1.x509.AlgorithmIdentifier getProtectionAlg()>();

        if $r3 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public org.spongycastle.asn1.'cmp'.PKIMessage toASN1Structure()
    {
        org.spongycastle.cert.'cmp'.GeneralPKIMessage r0;
        org.spongycastle.asn1.'cmp'.PKIMessage r1;

        r0 := @this: org.spongycastle.cert.'cmp'.GeneralPKIMessage;

        r1 = r0.<org.spongycastle.cert.'cmp'.GeneralPKIMessage: org.spongycastle.asn1.'cmp'.PKIMessage pkiMessage>;

        return r1;
    }
