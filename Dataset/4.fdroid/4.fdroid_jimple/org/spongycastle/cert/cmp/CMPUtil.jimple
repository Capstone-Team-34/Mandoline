org.spongycastle.cert.cmp.CMPUtil extends java.lang.Object
    void <init>()
    {
        org.spongycastle.cert.'cmp'.CMPUtil r0;

        r0 := @this: org.spongycastle.cert.'cmp'.CMPUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static void derEncodeToStream(org.spongycastle.asn1.ASN1Encodable, java.io.OutputStream)
    {
        org.spongycastle.asn1.ASN1Encodable $r0;
        java.io.OutputStream $r1;
        org.spongycastle.asn1.DEROutputStream r2;
        java.io.IOException r3;
        org.spongycastle.cert.'cmp'.CMPRuntimeException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @parameter0: org.spongycastle.asn1.ASN1Encodable;

        $r1 := @parameter1: java.io.OutputStream;

        r2 = new org.spongycastle.asn1.DEROutputStream;

        specialinvoke r2.<org.spongycastle.asn1.DEROutputStream: void <init>(java.io.OutputStream)>($r1);

     label1:
        virtualinvoke r2.<org.spongycastle.asn1.DEROutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>($r0);

        virtualinvoke r2.<org.spongycastle.asn1.DEROutputStream: void close()>();

     label2:
        return;

     label3:
        r3 := @caughtexception;

        $r4 = new org.spongycastle.cert.'cmp'.CMPRuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to DER encode object: ");

        $r6 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.cert.'cmp'.CMPRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }
