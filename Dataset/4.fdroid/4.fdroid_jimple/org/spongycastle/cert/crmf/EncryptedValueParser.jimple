org.spongycastle.cert.crmf.EncryptedValueParser extends java.lang.Object
private org.spongycastle.cert.crmf.EncryptedValuePadder padder
private org.spongycastle.asn1.crmf.EncryptedValue value
    public void <init>(org.spongycastle.asn1.crmf.EncryptedValue)
    {
        org.spongycastle.cert.crmf.EncryptedValueParser r0;
        org.spongycastle.asn1.crmf.EncryptedValue $r1;

        r0 := @this: org.spongycastle.cert.crmf.EncryptedValueParser;

        $r1 := @parameter0: org.spongycastle.asn1.crmf.EncryptedValue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.crmf.EncryptedValueParser: org.spongycastle.asn1.crmf.EncryptedValue value> = $r1;

        return;
    }
    public void <init>(org.spongycastle.asn1.crmf.EncryptedValue, org.spongycastle.cert.crmf.EncryptedValuePadder)
    {
        org.spongycastle.cert.crmf.EncryptedValueParser r0;
        org.spongycastle.asn1.crmf.EncryptedValue $r1;
        org.spongycastle.cert.crmf.EncryptedValuePadder $r2;

        r0 := @this: org.spongycastle.cert.crmf.EncryptedValueParser;

        $r1 := @parameter0: org.spongycastle.asn1.crmf.EncryptedValue;

        $r2 := @parameter1: org.spongycastle.cert.crmf.EncryptedValuePadder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.crmf.EncryptedValueParser: org.spongycastle.asn1.crmf.EncryptedValue value> = $r1;

        r0.<org.spongycastle.cert.crmf.EncryptedValueParser: org.spongycastle.cert.crmf.EncryptedValuePadder padder> = $r2;

        return;
    }
    private byte[] decryptValue(org.spongycastle.cert.crmf.ValueDecryptorGenerator) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.EncryptedValueParser r0;
        org.spongycastle.cert.crmf.ValueDecryptorGenerator $r1;
        java.io.IOException r2;
        org.spongycastle.asn1.crmf.EncryptedValue $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4, $r7;
        java.lang.UnsupportedOperationException $r5;
        org.spongycastle.asn1.ASN1OctetString $r6;
        org.spongycastle.asn1.DERBitString $r8;
        byte[] $r9;
        org.spongycastle.operator.InputDecryptor $r10;
        java.io.ByteArrayInputStream $r11;
        java.io.InputStream $r12;
        org.spongycastle.cert.crmf.EncryptedValuePadder $r13;
        org.spongycastle.cert.crmf.CRMFException $r14;
        java.lang.StringBuilder $r15;
        java.lang.String $r16;

        r0 := @this: org.spongycastle.cert.crmf.EncryptedValueParser;

        $r1 := @parameter0: org.spongycastle.cert.crmf.ValueDecryptorGenerator;

        $r3 = r0.<org.spongycastle.cert.crmf.EncryptedValueParser: org.spongycastle.asn1.crmf.EncryptedValue value>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.crmf.EncryptedValue: org.spongycastle.asn1.x509.AlgorithmIdentifier getIntendedAlg()>();

        if $r4 == null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;

     label1:
        $r3 = r0.<org.spongycastle.cert.crmf.EncryptedValueParser: org.spongycastle.asn1.crmf.EncryptedValue value>;

        $r6 = virtualinvoke $r3.<org.spongycastle.asn1.crmf.EncryptedValue: org.spongycastle.asn1.ASN1OctetString getValueHint()>();

        if $r6 == null goto label2;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;

     label2:
        $r3 = r0.<org.spongycastle.cert.crmf.EncryptedValueParser: org.spongycastle.asn1.crmf.EncryptedValue value>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.crmf.EncryptedValue: org.spongycastle.asn1.x509.AlgorithmIdentifier getKeyAlg()>();

        $r3 = r0.<org.spongycastle.cert.crmf.EncryptedValueParser: org.spongycastle.asn1.crmf.EncryptedValue value>;

        $r7 = virtualinvoke $r3.<org.spongycastle.asn1.crmf.EncryptedValue: org.spongycastle.asn1.x509.AlgorithmIdentifier getSymmAlg()>();

        $r3 = r0.<org.spongycastle.cert.crmf.EncryptedValueParser: org.spongycastle.asn1.crmf.EncryptedValue value>;

        $r8 = virtualinvoke $r3.<org.spongycastle.asn1.crmf.EncryptedValue: org.spongycastle.asn1.DERBitString getEncSymmKey()>();

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        $r10 = interfaceinvoke $r1.<org.spongycastle.cert.crmf.ValueDecryptorGenerator: org.spongycastle.operator.InputDecryptor getValueDecryptor(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r4, $r7, $r9);

        $r11 = new java.io.ByteArrayInputStream;

        $r3 = r0.<org.spongycastle.cert.crmf.EncryptedValueParser: org.spongycastle.asn1.crmf.EncryptedValue value>;

        $r8 = virtualinvoke $r3.<org.spongycastle.asn1.crmf.EncryptedValue: org.spongycastle.asn1.DERBitString getEncValue()>();

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        specialinvoke $r11.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9);

        $r12 = interfaceinvoke $r10.<org.spongycastle.operator.InputDecryptor: java.io.InputStream getInputStream(java.io.InputStream)>($r11);

     label3:
        $r9 = staticinvoke <org.spongycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>($r12);

     label4:
        $r13 = r0.<org.spongycastle.cert.crmf.EncryptedValueParser: org.spongycastle.cert.crmf.EncryptedValuePadder padder>;

        if $r13 == null goto label8;

        $r13 = r0.<org.spongycastle.cert.crmf.EncryptedValueParser: org.spongycastle.cert.crmf.EncryptedValuePadder padder>;

     label5:
        $r9 = interfaceinvoke $r13.<org.spongycastle.cert.crmf.EncryptedValuePadder: byte[] getUnpaddedData(byte[])>($r9);

     label6:
        return $r9;

     label7:
        r2 := @caughtexception;

        $r14 = new org.spongycastle.cert.crmf.CRMFException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot parse decrypted data: ");

        $r16 = virtualinvoke r2.<java.io.IOException: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>($r16, r2);

        throw $r14;

     label8:
        return $r9;

        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }
    public org.spongycastle.cert.X509CertificateHolder readCertificateHolder(org.spongycastle.cert.crmf.ValueDecryptorGenerator) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.EncryptedValueParser r0;
        org.spongycastle.cert.crmf.ValueDecryptorGenerator $r1;
        org.spongycastle.cert.X509CertificateHolder $r2;
        byte[] $r3;
        org.spongycastle.asn1.x509.Certificate $r4;

        r0 := @this: org.spongycastle.cert.crmf.EncryptedValueParser;

        $r1 := @parameter0: org.spongycastle.cert.crmf.ValueDecryptorGenerator;

        $r2 = new org.spongycastle.cert.X509CertificateHolder;

        $r3 = specialinvoke r0.<org.spongycastle.cert.crmf.EncryptedValueParser: byte[] decryptValue(org.spongycastle.cert.crmf.ValueDecryptorGenerator)>($r1);

        $r4 = staticinvoke <org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Certificate getInstance(java.lang.Object)>($r3);

        specialinvoke $r2.<org.spongycastle.cert.X509CertificateHolder: void <init>(org.spongycastle.asn1.x509.Certificate)>($r4);

        return $r2;
    }
    public char[] readPassphrase(org.spongycastle.cert.crmf.ValueDecryptorGenerator) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.EncryptedValueParser r0;
        org.spongycastle.cert.crmf.ValueDecryptorGenerator $r1;
        byte[] $r2;
        java.lang.String $r3;
        char[] $r4;

        r0 := @this: org.spongycastle.cert.crmf.EncryptedValueParser;

        $r1 := @parameter0: org.spongycastle.cert.crmf.ValueDecryptorGenerator;

        $r2 = specialinvoke r0.<org.spongycastle.cert.crmf.EncryptedValueParser: byte[] decryptValue(org.spongycastle.cert.crmf.ValueDecryptorGenerator)>($r1);

        $r3 = staticinvoke <org.spongycastle.util.Strings: java.lang.String fromUTF8ByteArray(byte[])>($r2);

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        return $r4;
    }
