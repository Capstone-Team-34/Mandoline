org.spongycastle.cert.crmf.CertificateRequestMessageBuilder extends java.lang.Object
private final java.math.BigInteger certReqId
private java.util.List controls
private org.spongycastle.asn1.x509.ExtensionsGenerator extGenerator
private char[] password
private org.spongycastle.cert.crmf.PKMACBuilder pkmacBuilder
private org.spongycastle.asn1.ASN1Null popRaVerified
private org.spongycastle.operator.ContentSigner popSigner
private org.spongycastle.asn1.crmf.POPOPrivKey popoPrivKey
private org.spongycastle.asn1.x509.GeneralName sender
private org.spongycastle.asn1.crmf.CertTemplateBuilder templateBuilder
    public void <init>(java.math.BigInteger)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        java.math.BigInteger $r1;
        org.spongycastle.asn1.x509.ExtensionsGenerator $r2;
        org.spongycastle.asn1.crmf.CertTemplateBuilder $r3;
        java.util.ArrayList $r4;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: java.math.BigInteger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: java.math.BigInteger certReqId> = $r1;

        $r2 = new org.spongycastle.asn1.x509.ExtensionsGenerator;

        specialinvoke $r2.<org.spongycastle.asn1.x509.ExtensionsGenerator: void <init>()>();

        r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.x509.ExtensionsGenerator extGenerator> = $r2;

        $r3 = new org.spongycastle.asn1.crmf.CertTemplateBuilder;

        specialinvoke $r3.<org.spongycastle.asn1.crmf.CertTemplateBuilder: void <init>()>();

        r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder templateBuilder> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: java.util.List controls> = $r4;

        return;
    }
    private org.spongycastle.asn1.x509.Time createTime(java.util.Date)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        java.util.Date $r1;
        org.spongycastle.asn1.x509.Time $r2;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: java.util.Date;

        if $r1 == null goto label1;

        $r2 = new org.spongycastle.asn1.x509.Time;

        specialinvoke $r2.<org.spongycastle.asn1.x509.Time: void <init>(java.util.Date)>($r1);

        return $r2;

     label1:
        return null;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder addControl(org.spongycastle.cert.crmf.Control)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        org.spongycastle.cert.crmf.Control $r1;
        java.util.List $r2;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: org.spongycastle.cert.crmf.Control;

        $r2 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: java.util.List controls>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return r0;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder addExtension(org.spongycastle.asn1.ASN1ObjectIdentifier, boolean, org.spongycastle.asn1.ASN1Encodable) throws org.spongycastle.cert.CertIOException
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        boolean $z0;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.x509.ExtensionsGenerator $r3;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: org.spongycastle.asn1.ASN1Encodable;

        $r3 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.x509.ExtensionsGenerator extGenerator>;

        staticinvoke <org.spongycastle.cert.crmf.CRMFUtil: void addExtension(org.spongycastle.asn1.x509.ExtensionsGenerator,org.spongycastle.asn1.ASN1ObjectIdentifier,boolean,org.spongycastle.asn1.ASN1Encodable)>($r3, $r1, $z0, $r2);

        return r0;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder addExtension(org.spongycastle.asn1.ASN1ObjectIdentifier, boolean, byte[])
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        boolean $z0;
        byte[] $r2;
        org.spongycastle.asn1.x509.ExtensionsGenerator $r3;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: byte[];

        $r3 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.x509.ExtensionsGenerator extGenerator>;

        virtualinvoke $r3.<org.spongycastle.asn1.x509.ExtensionsGenerator: void addExtension(org.spongycastle.asn1.ASN1ObjectIdentifier,boolean,byte[])>($r1, $z0, $r2);

        return r0;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessage build() throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        org.spongycastle.asn1.ASN1EncodableVector r1, r3;
        org.spongycastle.cert.crmf.PKMACValueGenerator r2;
        org.spongycastle.asn1.ASN1Integer $r4;
        java.math.BigInteger $r5;
        org.spongycastle.asn1.x509.ExtensionsGenerator $r6;
        boolean $z0;
        org.spongycastle.asn1.crmf.CertTemplateBuilder $r7;
        org.spongycastle.asn1.x509.Extensions $r8;
        org.spongycastle.asn1.crmf.CertTemplate $r9;
        java.util.List $r10;
        java.util.Iterator $r11;
        java.lang.Object $r12;
        org.spongycastle.cert.crmf.Control r13;
        org.spongycastle.asn1.crmf.AttributeTypeAndValue $r14;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r15;
        org.spongycastle.asn1.ASN1Encodable $r16;
        org.spongycastle.asn1.DERSequence $r17;
        org.spongycastle.asn1.crmf.CertRequest $r18;
        org.spongycastle.operator.ContentSigner $r19;
        org.spongycastle.asn1.x500.X500Name $r20;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r21;
        org.spongycastle.cert.crmf.ProofOfPossessionSigningKeyBuilder r22;
        org.spongycastle.asn1.x509.GeneralName $r23;
        org.spongycastle.asn1.crmf.ProofOfPossession $r24;
        org.spongycastle.asn1.crmf.POPOSigningKey $r25;
        org.spongycastle.cert.crmf.CertificateRequestMessage $r26;
        org.spongycastle.asn1.crmf.CertReqMsg $r27;
        org.spongycastle.cert.crmf.PKMACBuilder $r28;
        char[] $r29;
        org.spongycastle.asn1.crmf.POPOPrivKey $r30;
        org.spongycastle.asn1.ASN1Null $r31;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        r3 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r3.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r4 = new org.spongycastle.asn1.ASN1Integer;

        $r5 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: java.math.BigInteger certReqId>;

        specialinvoke $r4.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r5);

        virtualinvoke r3.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r6 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.x509.ExtensionsGenerator extGenerator>;

        $z0 = virtualinvoke $r6.<org.spongycastle.asn1.x509.ExtensionsGenerator: boolean isEmpty()>();

        if $z0 != 0 goto label01;

        $r7 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder templateBuilder>;

        $r6 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.x509.ExtensionsGenerator extGenerator>;

        $r8 = virtualinvoke $r6.<org.spongycastle.asn1.x509.ExtensionsGenerator: org.spongycastle.asn1.x509.Extensions generate()>();

        virtualinvoke $r7.<org.spongycastle.asn1.crmf.CertTemplateBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder setExtensions(org.spongycastle.asn1.x509.Extensions)>($r8);

     label01:
        $r7 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder templateBuilder>;

        $r9 = virtualinvoke $r7.<org.spongycastle.asn1.crmf.CertTemplateBuilder: org.spongycastle.asn1.crmf.CertTemplate build()>();

        virtualinvoke r3.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r9);

        $r10 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: java.util.List controls>;

        $z0 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label04;

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r10 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: java.util.List controls>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.spongycastle.cert.crmf.Control) $r12;

        $r14 = new org.spongycastle.asn1.crmf.AttributeTypeAndValue;

        $r15 = interfaceinvoke r13.<org.spongycastle.cert.crmf.Control: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        $r16 = interfaceinvoke r13.<org.spongycastle.cert.crmf.Control: org.spongycastle.asn1.ASN1Encodable getValue()>();

        specialinvoke $r14.<org.spongycastle.asn1.crmf.AttributeTypeAndValue: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r15, $r16);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r14);

        goto label02;

     label03:
        $r17 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r17.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        virtualinvoke r3.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r17);

     label04:
        $r17 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r17.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r3);

        $r18 = staticinvoke <org.spongycastle.asn1.crmf.CertRequest: org.spongycastle.asn1.crmf.CertRequest getInstance(java.lang.Object)>($r17);

        r1 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r18);

        $r19 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.operator.ContentSigner popSigner>;

        if $r19 == null goto label10;

        $r9 = virtualinvoke $r18.<org.spongycastle.asn1.crmf.CertRequest: org.spongycastle.asn1.crmf.CertTemplate getCertTemplate()>();

        $r20 = virtualinvoke $r9.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x500.X500Name getSubject()>();

        if $r20 == null goto label05;

        $r21 = virtualinvoke $r9.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getPublicKey()>();

        if $r21 != null goto label09;

     label05:
        $r9 = virtualinvoke $r18.<org.spongycastle.asn1.crmf.CertRequest: org.spongycastle.asn1.crmf.CertTemplate getCertTemplate()>();

        $r21 = virtualinvoke $r9.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getPublicKey()>();

        r22 = new org.spongycastle.cert.crmf.ProofOfPossessionSigningKeyBuilder;

        specialinvoke r22.<org.spongycastle.cert.crmf.ProofOfPossessionSigningKeyBuilder: void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r21);

        $r23 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.x509.GeneralName sender>;

        if $r23 == null goto label08;

        $r23 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.x509.GeneralName sender>;

        virtualinvoke r22.<org.spongycastle.cert.crmf.ProofOfPossessionSigningKeyBuilder: org.spongycastle.cert.crmf.ProofOfPossessionSigningKeyBuilder setSender(org.spongycastle.asn1.x509.GeneralName)>($r23);

     label06:
        $r24 = new org.spongycastle.asn1.crmf.ProofOfPossession;

        $r19 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.operator.ContentSigner popSigner>;

        $r25 = virtualinvoke r22.<org.spongycastle.cert.crmf.ProofOfPossessionSigningKeyBuilder: org.spongycastle.asn1.crmf.POPOSigningKey build(org.spongycastle.operator.ContentSigner)>($r19);

        specialinvoke $r24.<org.spongycastle.asn1.crmf.ProofOfPossession: void <init>(org.spongycastle.asn1.crmf.POPOSigningKey)>($r25);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r24);

     label07:
        $r26 = new org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r17 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r17.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r1);

        $r27 = staticinvoke <org.spongycastle.asn1.crmf.CertReqMsg: org.spongycastle.asn1.crmf.CertReqMsg getInstance(java.lang.Object)>($r17);

        specialinvoke $r26.<org.spongycastle.cert.crmf.CertificateRequestMessage: void <init>(org.spongycastle.asn1.crmf.CertReqMsg)>($r27);

        return $r26;

     label08:
        r2 = new org.spongycastle.cert.crmf.PKMACValueGenerator;

        $r28 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.cert.crmf.PKMACBuilder pkmacBuilder>;

        specialinvoke r2.<org.spongycastle.cert.crmf.PKMACValueGenerator: void <init>(org.spongycastle.cert.crmf.PKMACBuilder)>($r28);

        $r29 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: char[] password>;

        virtualinvoke r22.<org.spongycastle.cert.crmf.ProofOfPossessionSigningKeyBuilder: org.spongycastle.cert.crmf.ProofOfPossessionSigningKeyBuilder setPublicKeyMac(org.spongycastle.cert.crmf.PKMACValueGenerator,char[])>(r2, $r29);

        goto label06;

     label09:
        r22 = new org.spongycastle.cert.crmf.ProofOfPossessionSigningKeyBuilder;

        specialinvoke r22.<org.spongycastle.cert.crmf.ProofOfPossessionSigningKeyBuilder: void <init>(org.spongycastle.asn1.crmf.CertRequest)>($r18);

        $r24 = new org.spongycastle.asn1.crmf.ProofOfPossession;

        $r19 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.operator.ContentSigner popSigner>;

        $r25 = virtualinvoke r22.<org.spongycastle.cert.crmf.ProofOfPossessionSigningKeyBuilder: org.spongycastle.asn1.crmf.POPOSigningKey build(org.spongycastle.operator.ContentSigner)>($r19);

        specialinvoke $r24.<org.spongycastle.asn1.crmf.ProofOfPossession: void <init>(org.spongycastle.asn1.crmf.POPOSigningKey)>($r25);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r24);

        goto label07;

     label10:
        $r30 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.crmf.POPOPrivKey popoPrivKey>;

        if $r30 == null goto label11;

        $r24 = new org.spongycastle.asn1.crmf.ProofOfPossession;

        $r30 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.crmf.POPOPrivKey popoPrivKey>;

        specialinvoke $r24.<org.spongycastle.asn1.crmf.ProofOfPossession: void <init>(int,org.spongycastle.asn1.crmf.POPOPrivKey)>(2, $r30);

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r24);

        goto label07;

     label11:
        $r31 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.ASN1Null popRaVerified>;

        if $r31 == null goto label07;

        $r24 = new org.spongycastle.asn1.crmf.ProofOfPossession;

        specialinvoke $r24.<org.spongycastle.asn1.crmf.ProofOfPossession: void <init>()>();

        virtualinvoke r1.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r24);

        goto label07;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder setAuthInfoPKMAC(org.spongycastle.cert.crmf.PKMACBuilder, char[])
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        org.spongycastle.cert.crmf.PKMACBuilder $r1;
        char[] $r2;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: org.spongycastle.cert.crmf.PKMACBuilder;

        $r2 := @parameter1: char[];

        r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.cert.crmf.PKMACBuilder pkmacBuilder> = $r1;

        r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: char[] password> = $r2;

        return r0;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder setAuthInfoSender(org.spongycastle.asn1.x500.X500Name)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        org.spongycastle.asn1.x500.X500Name $r1;
        org.spongycastle.asn1.x509.GeneralName $r2;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x500.X500Name;

        $r2 = new org.spongycastle.asn1.x509.GeneralName;

        specialinvoke $r2.<org.spongycastle.asn1.x509.GeneralName: void <init>(org.spongycastle.asn1.x500.X500Name)>($r1);

        r0 = virtualinvoke r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder setAuthInfoSender(org.spongycastle.asn1.x509.GeneralName)>($r2);

        return r0;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder setAuthInfoSender(org.spongycastle.asn1.x509.GeneralName)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        org.spongycastle.asn1.x509.GeneralName $r1;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralName;

        r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.x509.GeneralName sender> = $r1;

        return r0;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder setIssuer(org.spongycastle.asn1.x500.X500Name)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        org.spongycastle.asn1.x500.X500Name $r1;
        org.spongycastle.asn1.crmf.CertTemplateBuilder $r2;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x500.X500Name;

        if $r1 == null goto label1;

        $r2 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder templateBuilder>;

        virtualinvoke $r2.<org.spongycastle.asn1.crmf.CertTemplateBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder setIssuer(org.spongycastle.asn1.x500.X500Name)>($r1);

     label1:
        return r0;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder setProofOfPossessionRaVerified()
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        org.spongycastle.operator.ContentSigner $r1;
        org.spongycastle.asn1.crmf.POPOPrivKey $r2;
        java.lang.IllegalStateException $r3;
        org.spongycastle.asn1.DERNull $r4;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.operator.ContentSigner popSigner>;

        if $r1 != null goto label1;

        $r2 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.crmf.POPOPrivKey popoPrivKey>;

        if $r2 == null goto label2;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("only one proof of possession allowed");

        throw $r3;

     label2:
        $r4 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.ASN1Null popRaVerified> = $r4;

        return r0;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder setProofOfPossessionSigningKeySigner(org.spongycastle.operator.ContentSigner)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        org.spongycastle.operator.ContentSigner $r1;
        org.spongycastle.asn1.crmf.POPOPrivKey $r2;
        org.spongycastle.asn1.ASN1Null $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: org.spongycastle.operator.ContentSigner;

        $r2 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.crmf.POPOPrivKey popoPrivKey>;

        if $r2 != null goto label1;

        $r3 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.ASN1Null popRaVerified>;

        if $r3 == null goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("only one proof of possession allowed");

        throw $r4;

     label2:
        r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.operator.ContentSigner popSigner> = $r1;

        return r0;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder setProofOfPossessionSubsequentMessage(org.spongycastle.asn1.crmf.SubsequentMessage)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        org.spongycastle.asn1.crmf.SubsequentMessage $r1;
        org.spongycastle.operator.ContentSigner $r2;
        org.spongycastle.asn1.ASN1Null $r3;
        java.lang.IllegalStateException $r4;
        org.spongycastle.asn1.crmf.POPOPrivKey $r5;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.crmf.SubsequentMessage;

        $r2 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.operator.ContentSigner popSigner>;

        if $r2 != null goto label1;

        $r3 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.ASN1Null popRaVerified>;

        if $r3 == null goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("only one proof of possession allowed");

        throw $r4;

     label2:
        $r5 = new org.spongycastle.asn1.crmf.POPOPrivKey;

        specialinvoke $r5.<org.spongycastle.asn1.crmf.POPOPrivKey: void <init>(org.spongycastle.asn1.crmf.SubsequentMessage)>($r1);

        r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.crmf.POPOPrivKey popoPrivKey> = $r5;

        return r0;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder setPublicKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        org.spongycastle.asn1.crmf.CertTemplateBuilder $r2;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        if $r1 == null goto label1;

        $r2 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder templateBuilder>;

        virtualinvoke $r2.<org.spongycastle.asn1.crmf.CertTemplateBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder setPublicKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r1);

     label1:
        return r0;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder setSerialNumber(java.math.BigInteger)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        java.math.BigInteger $r1;
        org.spongycastle.asn1.crmf.CertTemplateBuilder $r2;
        org.spongycastle.asn1.ASN1Integer $r3;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: java.math.BigInteger;

        if $r1 == null goto label1;

        $r2 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder templateBuilder>;

        $r3 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r3.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r1);

        virtualinvoke $r2.<org.spongycastle.asn1.crmf.CertTemplateBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder setSerialNumber(org.spongycastle.asn1.ASN1Integer)>($r3);

     label1:
        return r0;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder setSubject(org.spongycastle.asn1.x500.X500Name)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        org.spongycastle.asn1.x500.X500Name $r1;
        org.spongycastle.asn1.crmf.CertTemplateBuilder $r2;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x500.X500Name;

        if $r1 == null goto label1;

        $r2 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder templateBuilder>;

        virtualinvoke $r2.<org.spongycastle.asn1.crmf.CertTemplateBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder setSubject(org.spongycastle.asn1.x500.X500Name)>($r1);

     label1:
        return r0;
    }
    public org.spongycastle.cert.crmf.CertificateRequestMessageBuilder setValidity(java.util.Date, java.util.Date)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessageBuilder r0;
        java.util.Date $r1, $r2;
        org.spongycastle.asn1.crmf.CertTemplateBuilder $r3;
        org.spongycastle.asn1.crmf.OptionalValidity $r4;
        org.spongycastle.asn1.x509.Time $r5, $r6;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessageBuilder;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: java.util.Date;

        $r3 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder templateBuilder>;

        $r4 = new org.spongycastle.asn1.crmf.OptionalValidity;

        $r5 = specialinvoke r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.x509.Time createTime(java.util.Date)>($r1);

        $r6 = specialinvoke r0.<org.spongycastle.cert.crmf.CertificateRequestMessageBuilder: org.spongycastle.asn1.x509.Time createTime(java.util.Date)>($r2);

        specialinvoke $r4.<org.spongycastle.asn1.crmf.OptionalValidity: void <init>(org.spongycastle.asn1.x509.Time,org.spongycastle.asn1.x509.Time)>($r5, $r6);

        virtualinvoke $r3.<org.spongycastle.asn1.crmf.CertTemplateBuilder: org.spongycastle.asn1.crmf.CertTemplateBuilder setValidity(org.spongycastle.asn1.crmf.OptionalValidity)>($r4);

        return r0;
    }
