org.spongycastle.cert.crmf.jcajce.CRMFHelper extends java.lang.Object
protected static final java.util.Map BASE_CIPHER_NAMES
protected static final java.util.Map CIPHER_ALG_NAMES
protected static final java.util.Map DIGEST_ALG_NAMES
protected static final java.util.Map KEY_ALG_NAMES
protected static final java.util.Map MAC_ALG_NAMES
private org.spongycastle.jcajce.util.JcaJceHelper helper
    static void <clinit>()
    {
        java.lang.String $r0;
        java.util.HashMap $r1;
        java.util.Map $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3, $r4;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map BASE_CIPHER_NAMES> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map CIPHER_ALG_NAMES> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map DIGEST_ALG_NAMES> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map KEY_ALG_NAMES> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map MAC_ALG_NAMES> = $r1;

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier des_EDE3_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "DESEDE");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes128_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes192_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_aes256_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier DES_EDE3_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "DESEDE/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES128_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES192_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier AES256_CBC>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "AES/CBC/PKCS5Padding");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map CIPHER_ALG_NAMES>;

        $r3 = new org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r4 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rsaEncryption>;

        $r0 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        specialinvoke $r3.<org.spongycastle.asn1.ASN1ObjectIdentifier: void <init>(java.lang.String)>($r0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "RSA/ECB/PKCS1Padding");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map DIGEST_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier idSHA1>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "SHA1");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map DIGEST_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_sha224>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "SHA224");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map DIGEST_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_sha256>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "SHA256");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map DIGEST_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_sha384>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "SHA384");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map DIGEST_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.nist.NISTObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_sha512>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "SHA512");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.iana.IANAObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier hmacSHA1>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "HMACSHA1");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_hmacWithSHA1>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "HMACSHA1");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_hmacWithSHA224>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "HMACSHA224");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_hmacWithSHA256>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "HMACSHA256");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_hmacWithSHA384>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "HMACSHA384");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map MAC_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_hmacWithSHA512>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "HMACSHA512");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map KEY_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.pkcs.PKCSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier rsaEncryption>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "RSA");

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map KEY_ALG_NAMES>;

        $r3 = <org.spongycastle.asn1.x9.X9ObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_dsa>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "DSA");

        return;
    }
    void <init>(org.spongycastle.jcajce.util.JcaJceHelper)
    {
        org.spongycastle.cert.crmf.jcajce.CRMFHelper r0;
        org.spongycastle.jcajce.util.JcaJceHelper $r1;

        r0 := @this: org.spongycastle.cert.crmf.jcajce.CRMFHelper;

        $r1 := @parameter0: org.spongycastle.jcajce.util.JcaJceHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper> = $r1;

        return;
    }
    static java.lang.Object execute(org.spongycastle.cert.crmf.jcajce.CRMFHelper$JCECallback) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.jcajce.CRMFHelper$JCECallback $r0;
        java.lang.Object $r1;
        java.security.NoSuchAlgorithmException r2;
        org.spongycastle.cert.crmf.CRMFException $r3;
        java.security.InvalidKeyException r4;
        java.security.NoSuchProviderException r5;
        javax.crypto.NoSuchPaddingException r6;
        java.security.InvalidAlgorithmParameterException r7;
        java.security.spec.InvalidParameterSpecException r8;

        $r0 := @parameter0: org.spongycastle.cert.crmf.jcajce.CRMFHelper$JCECallback;

     label1:
        $r1 = interfaceinvoke $r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper$JCECallback: java.lang.Object doInJCE()>();

     label2:
        return $r1;

     label3:
        r2 := @caughtexception;

        $r3 = new org.spongycastle.cert.crmf.CRMFException;

        specialinvoke $r3.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>("can\'t find algorithm.", r2);

        throw $r3;

     label4:
        r4 := @caughtexception;

        $r3 = new org.spongycastle.cert.crmf.CRMFException;

        specialinvoke $r3.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>("key invalid in message.", r4);

        throw $r3;

     label5:
        r5 := @caughtexception;

        $r3 = new org.spongycastle.cert.crmf.CRMFException;

        specialinvoke $r3.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>("can\'t find provider.", r5);

        throw $r3;

     label6:
        r6 := @caughtexception;

        $r3 = new org.spongycastle.cert.crmf.CRMFException;

        specialinvoke $r3.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>("required padding not supported.", r6);

        throw $r3;

     label7:
        r7 := @caughtexception;

        $r3 = new org.spongycastle.cert.crmf.CRMFException;

        specialinvoke $r3.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>("algorithm parameters invalid.", r7);

        throw $r3;

     label8:
        r8 := @caughtexception;

        $r3 = new org.spongycastle.cert.crmf.CRMFException;

        specialinvoke $r3.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>("MAC algorithm parameter spec invalid.", r8);

        throw $r3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.security.InvalidKeyException from label1 to label2 with label4;
        catch java.security.NoSuchProviderException from label1 to label2 with label5;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label6;
        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label7;
        catch java.security.spec.InvalidParameterSpecException from label1 to label2 with label8;
    }
    java.security.AlgorithmParameterGenerator createAlgorithmParameterGenerator(org.spongycastle.asn1.ASN1ObjectIdentifier) throws java.security.GeneralSecurityException
    {
        org.spongycastle.cert.crmf.jcajce.CRMFHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r4;
        org.spongycastle.jcajce.util.JcaJceHelper $r5;
        java.security.AlgorithmParameterGenerator $r6;
        java.security.NoSuchAlgorithmException $r7;

        r0 := @this: org.spongycastle.cert.crmf.jcajce.CRMFHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.String) $r3;

        if r4 == null goto label4;

        $r5 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label1:
        $r6 = interfaceinvoke $r5.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.AlgorithmParameterGenerator createAlgorithmParameterGenerator(java.lang.String)>(r4);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

     label4:
        $r5 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        r4 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r6 = interfaceinvoke $r5.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.AlgorithmParameterGenerator createAlgorithmParameterGenerator(java.lang.String)>(r4);

        return $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }
    java.security.AlgorithmParameters createAlgorithmParameters(org.spongycastle.asn1.ASN1ObjectIdentifier) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException
    {
        org.spongycastle.cert.crmf.jcajce.CRMFHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r4;
        org.spongycastle.jcajce.util.JcaJceHelper $r5;
        java.security.AlgorithmParameters $r6;
        java.security.NoSuchAlgorithmException $r7;

        r0 := @this: org.spongycastle.cert.crmf.jcajce.CRMFHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map BASE_CIPHER_NAMES>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.String) $r3;

        if r4 == null goto label4;

        $r5 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label1:
        $r6 = interfaceinvoke $r5.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)>(r4);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

     label4:
        $r5 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

        r4 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r6 = interfaceinvoke $r5.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)>(r4);

        return $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }
    javax.crypto.Cipher createCipher(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.jcajce.CRMFHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.GeneralSecurityException r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.jcajce.util.JcaJceHelper $r6;
        javax.crypto.Cipher $r7;
        java.security.NoSuchAlgorithmException $r8;
        org.spongycastle.cert.crmf.CRMFException $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: org.spongycastle.cert.crmf.jcajce.CRMFHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map CIPHER_ALG_NAMES>;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        r5 = (java.lang.String) $r4;

        if r5 == null goto label6;

        $r6 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label3:
        $r7 = interfaceinvoke $r6.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.Cipher createCipher(java.lang.String)>(r5);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

     label6:
        $r6 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label7:
        r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r7 = interfaceinvoke $r6.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.Cipher createCipher(java.lang.String)>(r5);

     label8:
        return $r7;

     label9:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cert.crmf.CRMFException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create cipher: ");

        r5 = virtualinvoke r2.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>(r5, r2);

        throw $r9;

        catch java.security.GeneralSecurityException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label9;
        catch java.security.GeneralSecurityException from label7 to label8 with label9;
    }
    javax.crypto.Cipher createContentCipher(java.security.Key, org.spongycastle.asn1.x509.AlgorithmIdentifier) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.jcajce.CRMFHelper r0;
        java.security.Key $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        java.lang.Object $r3;
        org.spongycastle.cert.crmf.jcajce.CRMFHelper$1 $r4;
        javax.crypto.Cipher $r5;

        r0 := @this: org.spongycastle.cert.crmf.jcajce.CRMFHelper;

        $r1 := @parameter0: java.security.Key;

        $r2 := @parameter1: org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r4 = new org.spongycastle.cert.crmf.jcajce.CRMFHelper$1;

        specialinvoke $r4.<org.spongycastle.cert.crmf.jcajce.CRMFHelper$1: void <init>(org.spongycastle.cert.crmf.jcajce.CRMFHelper,org.spongycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>(r0, $r2, $r1);

        $r3 = staticinvoke <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.lang.Object execute(org.spongycastle.cert.crmf.jcajce.CRMFHelper$JCECallback)>($r4);

        $r5 = (javax.crypto.Cipher) $r3;

        return $r5;
    }
    java.security.MessageDigest createDigest(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.jcajce.CRMFHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.GeneralSecurityException r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.jcajce.util.JcaJceHelper $r6;
        java.security.MessageDigest $r7;
        java.security.NoSuchAlgorithmException $r8;
        org.spongycastle.cert.crmf.CRMFException $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: org.spongycastle.cert.crmf.jcajce.CRMFHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map DIGEST_ALG_NAMES>;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        r5 = (java.lang.String) $r4;

        if r5 == null goto label6;

        $r6 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label3:
        $r7 = interfaceinvoke $r6.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.MessageDigest createDigest(java.lang.String)>(r5);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

     label6:
        $r6 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label7:
        r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r7 = interfaceinvoke $r6.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.MessageDigest createDigest(java.lang.String)>(r5);

     label8:
        return $r7;

     label9:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cert.crmf.CRMFException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create cipher: ");

        r5 = virtualinvoke r2.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>(r5, r2);

        throw $r9;

        catch java.security.GeneralSecurityException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label9;
        catch java.security.GeneralSecurityException from label7 to label8 with label9;
    }
    java.security.KeyFactory createKeyFactory(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.jcajce.CRMFHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.GeneralSecurityException r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.jcajce.util.JcaJceHelper $r6;
        java.security.KeyFactory $r7;
        java.security.NoSuchAlgorithmException $r8;
        org.spongycastle.cert.crmf.CRMFException $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: org.spongycastle.cert.crmf.jcajce.CRMFHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map KEY_ALG_NAMES>;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        r5 = (java.lang.String) $r4;

        if r5 == null goto label6;

        $r6 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label3:
        $r7 = interfaceinvoke $r6.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>(r5);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

     label6:
        $r6 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label7:
        r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r7 = interfaceinvoke $r6.<org.spongycastle.jcajce.util.JcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>(r5);

     label8:
        return $r7;

     label9:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cert.crmf.CRMFException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create cipher: ");

        r5 = virtualinvoke r2.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>(r5, r2);

        throw $r9;

        catch java.security.GeneralSecurityException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label9;
        catch java.security.GeneralSecurityException from label7 to label8 with label9;
    }
    public javax.crypto.KeyGenerator createKeyGenerator(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.jcajce.CRMFHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.GeneralSecurityException r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.jcajce.util.JcaJceHelper $r6;
        javax.crypto.KeyGenerator $r7;
        java.security.NoSuchAlgorithmException $r8;
        org.spongycastle.cert.crmf.CRMFException $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: org.spongycastle.cert.crmf.jcajce.CRMFHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map BASE_CIPHER_NAMES>;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        r5 = (java.lang.String) $r4;

        if r5 == null goto label6;

        $r6 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label3:
        $r7 = interfaceinvoke $r6.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.KeyGenerator createKeyGenerator(java.lang.String)>(r5);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

     label6:
        $r6 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label7:
        r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r7 = interfaceinvoke $r6.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.KeyGenerator createKeyGenerator(java.lang.String)>(r5);

     label8:
        return $r7;

     label9:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cert.crmf.CRMFException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create key generator: ");

        r5 = virtualinvoke r2.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>(r5, r2);

        throw $r9;

        catch java.security.GeneralSecurityException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label9;
        catch java.security.GeneralSecurityException from label7 to label8 with label9;
    }
    javax.crypto.Mac createMac(org.spongycastle.asn1.ASN1ObjectIdentifier) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.jcajce.CRMFHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.GeneralSecurityException r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        org.spongycastle.jcajce.util.JcaJceHelper $r6;
        javax.crypto.Mac $r7;
        java.security.NoSuchAlgorithmException $r8;
        org.spongycastle.cert.crmf.CRMFException $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: org.spongycastle.cert.crmf.jcajce.CRMFHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = <org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.util.Map MAC_ALG_NAMES>;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        r5 = (java.lang.String) $r4;

        if r5 == null goto label6;

        $r6 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label3:
        $r7 = interfaceinvoke $r6.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.Mac createMac(java.lang.String)>(r5);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

     label6:
        $r6 = r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: org.spongycastle.jcajce.util.JcaJceHelper helper>;

     label7:
        r5 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $r7 = interfaceinvoke $r6.<org.spongycastle.jcajce.util.JcaJceHelper: javax.crypto.Mac createMac(java.lang.String)>(r5);

     label8:
        return $r7;

     label9:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cert.crmf.CRMFException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create mac: ");

        r5 = virtualinvoke r2.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>(r5, r2);

        throw $r9;

        catch java.security.GeneralSecurityException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label9;
        catch java.security.GeneralSecurityException from label7 to label8 with label9;
    }
    java.security.AlgorithmParameters generateParameters(org.spongycastle.asn1.ASN1ObjectIdentifier, javax.crypto.SecretKey, java.security.SecureRandom) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.jcajce.CRMFHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r6;
        javax.crypto.SecretKey $r2;
        java.security.SecureRandom $r3;
        byte[] r4, $r8;
        java.security.AlgorithmParameterGenerator $r5;
        boolean $z0;
        javax.crypto.spec.RC2ParameterSpec $r7;
        int $i0;
        java.security.AlgorithmParameters $r9;
        java.security.InvalidAlgorithmParameterException r10;
        org.spongycastle.cert.crmf.CRMFException $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13;
        java.security.NoSuchAlgorithmException r14;
        java.security.GeneralSecurityException r15;

        r0 := @this: org.spongycastle.cert.crmf.jcajce.CRMFHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: javax.crypto.SecretKey;

        $r3 := @parameter2: java.security.SecureRandom;

     label01:
        $r5 = virtualinvoke r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.security.AlgorithmParameterGenerator createAlgorithmParameterGenerator(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

     label02:
        $r6 = <org.spongycastle.cms.CMSAlgorithm: org.spongycastle.asn1.ASN1ObjectIdentifier RC2_CBC>;

     label03:
        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r6);

     label04:
        if $z0 == 0 goto label10;

        r4 = newarray (byte)[8];

     label05:
        virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>(r4);

     label06:
        $r7 = new javax.crypto.spec.RC2ParameterSpec;

     label07:
        $r8 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label08:
        $i0 = lengthof $r8;

        $i0 = $i0 * 8;

     label09:
        specialinvoke $r7.<javax.crypto.spec.RC2ParameterSpec: void <init>(int,byte[])>($i0, r4);

        virtualinvoke $r5.<java.security.AlgorithmParameterGenerator: void init(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r7, $r3);

     label10:
        $r9 = virtualinvoke $r5.<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameters generateParameters()>();

     label11:
        return $r9;

     label12:
        r10 := @caughtexception;

        $r11 = new org.spongycastle.cert.crmf.CRMFException;

        $r12 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parameters generation error: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r10);

     label14:
        throw $r11;

     label15:
        r14 := @caughtexception;

        return null;

     label16:
        r15 := @caughtexception;

        $r11 = new org.spongycastle.cert.crmf.CRMFException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception creating algorithm parameter generator: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r15);

        throw $r11;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label15;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label15;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label15;
        catch java.security.GeneralSecurityException from label01 to label02 with label16;
        catch java.security.GeneralSecurityException from label03 to label04 with label16;
        catch java.security.GeneralSecurityException from label05 to label06 with label16;
        catch java.security.InvalidAlgorithmParameterException from label07 to label08 with label12;
        catch java.security.InvalidAlgorithmParameterException from label09 to label10 with label12;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label15;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label15;
        catch java.security.GeneralSecurityException from label07 to label08 with label16;
        catch java.security.GeneralSecurityException from label09 to label10 with label16;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label15;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label15;
        catch java.security.GeneralSecurityException from label10 to label11 with label16;
        catch java.security.GeneralSecurityException from label13 to label14 with label16;
    }
    org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(org.spongycastle.asn1.ASN1ObjectIdentifier, java.security.AlgorithmParameters) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.jcajce.CRMFHelper r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        java.security.AlgorithmParameters $r2;
        java.io.IOException r3;
        org.spongycastle.asn1.ASN1Encodable $r4;
        java.lang.Object r5;
        java.lang.StringBuilder $r6, $r9;
        java.lang.String $r7;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r8;
        org.spongycastle.cert.crmf.CRMFException $r10;

        r0 := @this: org.spongycastle.cert.crmf.jcajce.CRMFHelper;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 := @parameter1: java.security.AlgorithmParameters;

        if $r2 == null goto label5;

     label1:
        $r4 = staticinvoke <org.spongycastle.jcajce.util.AlgorithmParametersUtils: org.spongycastle.asn1.ASN1Encodable extractParameters(java.security.AlgorithmParameters)>($r2);

     label2:
        r5 = $r4;

     label3:
        $r8 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r4 = (org.spongycastle.asn1.ASN1Encodable) r5;

        specialinvoke $r8.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, $r4);

        return $r8;

     label4:
        r3 := @caughtexception;

        $r10 = new org.spongycastle.cert.crmf.CRMFException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot encode parameters: ");

        $r7 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>($r7, r3);

        throw $r10;

     label5:
        r5 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        goto label3;

        catch java.io.IOException from label1 to label2 with label4;
    }
    java.security.PublicKey toPublicKey(org.spongycastle.asn1.x509.SubjectPublicKeyInfo) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.jcajce.CRMFHelper r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        java.lang.Exception r2;
        java.security.spec.X509EncodedKeySpec r3;
        byte[] $r4;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r5;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r6;
        java.security.KeyFactory $r7;
        java.security.PublicKey $r8;
        org.spongycastle.cert.crmf.CRMFException $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;

        r0 := @this: org.spongycastle.cert.crmf.jcajce.CRMFHelper;

        $r1 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        r3 = new java.security.spec.X509EncodedKeySpec;

     label1:
        $r4 = virtualinvoke $r1.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: byte[] getEncoded()>();

        specialinvoke r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r4);

        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r7 = virtualinvoke r0.<org.spongycastle.cert.crmf.jcajce.CRMFHelper: java.security.KeyFactory createKeyFactory(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r6);

        $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r3);

     label2:
        return $r8;

     label3:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cert.crmf.CRMFException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid key: ");

        $r11 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r2);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }
