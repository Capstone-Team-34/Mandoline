org.spongycastle.cert.crmf.PKIArchiveControl extends java.lang.Object implements org.spongycastle.cert.crmf.Control
public static final int archiveRemGenPrivKey
public static final int encryptedPrivKey
public static final int keyGenParameters
private static final org.spongycastle.asn1.ASN1ObjectIdentifier type
private final org.spongycastle.asn1.crmf.PKIArchiveOptions pkiArchiveOptions
    static void <clinit>()
    {
        org.spongycastle.asn1.ASN1ObjectIdentifier $r0;

        $r0 = <org.spongycastle.asn1.crmf.CRMFObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_regCtrl_pkiArchiveOptions>;

        <org.spongycastle.cert.crmf.PKIArchiveControl: org.spongycastle.asn1.ASN1ObjectIdentifier type> = $r0;

        return;
    }
    public void <init>(org.spongycastle.asn1.crmf.PKIArchiveOptions)
    {
        org.spongycastle.cert.crmf.PKIArchiveControl r0;
        org.spongycastle.asn1.crmf.PKIArchiveOptions $r1;

        r0 := @this: org.spongycastle.cert.crmf.PKIArchiveControl;

        $r1 := @parameter0: org.spongycastle.asn1.crmf.PKIArchiveOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.crmf.PKIArchiveControl: org.spongycastle.asn1.crmf.PKIArchiveOptions pkiArchiveOptions> = $r1;

        return;
    }
    public int getArchiveType()
    {
        org.spongycastle.cert.crmf.PKIArchiveControl r0;
        int $i0;
        org.spongycastle.asn1.crmf.PKIArchiveOptions $r1;

        r0 := @this: org.spongycastle.cert.crmf.PKIArchiveControl;

        $r1 = r0.<org.spongycastle.cert.crmf.PKIArchiveControl: org.spongycastle.asn1.crmf.PKIArchiveOptions pkiArchiveOptions>;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.crmf.PKIArchiveOptions: int getType()>();

        return $i0;
    }
    public org.spongycastle.cms.CMSEnvelopedData getEnvelopedData() throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.PKIArchiveControl r0;
        org.spongycastle.asn1.crmf.PKIArchiveOptions $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.crmf.EncryptedKey $r3;
        org.spongycastle.asn1.cms.EnvelopedData $r4;
        org.spongycastle.cms.CMSEnvelopedData $r5;
        org.spongycastle.asn1.cms.ContentInfo $r6;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r7;
        org.spongycastle.cms.CMSException r8;
        org.spongycastle.cert.crmf.CRMFException $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;
        java.lang.Throwable $r12;
        java.lang.Exception r13;

        r0 := @this: org.spongycastle.cert.crmf.PKIArchiveControl;

     label1:
        $r1 = r0.<org.spongycastle.cert.crmf.PKIArchiveControl: org.spongycastle.asn1.crmf.PKIArchiveOptions pkiArchiveOptions>;

     label2:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.crmf.PKIArchiveOptions: org.spongycastle.asn1.ASN1Encodable getValue()>();

        $r3 = staticinvoke <org.spongycastle.asn1.crmf.EncryptedKey: org.spongycastle.asn1.crmf.EncryptedKey getInstance(java.lang.Object)>($r2);

        $r2 = virtualinvoke $r3.<org.spongycastle.asn1.crmf.EncryptedKey: org.spongycastle.asn1.ASN1Encodable getValue()>();

        $r4 = staticinvoke <org.spongycastle.asn1.cms.EnvelopedData: org.spongycastle.asn1.cms.EnvelopedData getInstance(java.lang.Object)>($r2);

     label3:
        $r5 = new org.spongycastle.cms.CMSEnvelopedData;

        $r6 = new org.spongycastle.asn1.cms.ContentInfo;

        $r7 = <org.spongycastle.asn1.cms.CMSObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier envelopedData>;

     label4:
        specialinvoke $r6.<org.spongycastle.asn1.cms.ContentInfo: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r7, $r4);

        specialinvoke $r5.<org.spongycastle.cms.CMSEnvelopedData: void <init>(org.spongycastle.asn1.cms.ContentInfo)>($r6);

     label5:
        return $r5;

     label6:
        r8 := @caughtexception;

        $r9 = new org.spongycastle.cert.crmf.CRMFException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CMS parsing error: ");

        $r11 = virtualinvoke r8.<org.spongycastle.cms.CMSException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke r8.<org.spongycastle.cms.CMSException: java.lang.Throwable getCause()>();

        specialinvoke $r9.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r12);

        throw $r9;

     label7:
        r13 := @caughtexception;

        $r9 = new org.spongycastle.cert.crmf.CRMFException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CRMF parsing error: ");

        $r11 = virtualinvoke r13.<java.lang.Exception: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r13);

        throw $r9;

        catch org.spongycastle.cms.CMSException from label2 to label3 with label6;
        catch org.spongycastle.cms.CMSException from label4 to label5 with label6;
        catch java.lang.Exception from label1 to label3 with label7;
        catch java.lang.Exception from label4 to label5 with label7;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getType()
    {
        org.spongycastle.cert.crmf.PKIArchiveControl r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier r1;

        r0 := @this: org.spongycastle.cert.crmf.PKIArchiveControl;

        r1 = <org.spongycastle.cert.crmf.PKIArchiveControl: org.spongycastle.asn1.ASN1ObjectIdentifier type>;

        return r1;
    }
    public org.spongycastle.asn1.ASN1Encodable getValue()
    {
        org.spongycastle.cert.crmf.PKIArchiveControl r0;
        org.spongycastle.asn1.crmf.PKIArchiveOptions r1;

        r0 := @this: org.spongycastle.cert.crmf.PKIArchiveControl;

        r1 = r0.<org.spongycastle.cert.crmf.PKIArchiveControl: org.spongycastle.asn1.crmf.PKIArchiveOptions pkiArchiveOptions>;

        return r1;
    }
    public boolean isEnvelopedData()
    {
        org.spongycastle.cert.crmf.PKIArchiveControl r0;
        org.spongycastle.asn1.crmf.PKIArchiveOptions $r1;
        org.spongycastle.asn1.ASN1Encodable $r2;
        org.spongycastle.asn1.crmf.EncryptedKey $r3;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.crmf.PKIArchiveControl;

        $r1 = r0.<org.spongycastle.cert.crmf.PKIArchiveControl: org.spongycastle.asn1.crmf.PKIArchiveOptions pkiArchiveOptions>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.crmf.PKIArchiveOptions: org.spongycastle.asn1.ASN1Encodable getValue()>();

        $r3 = staticinvoke <org.spongycastle.asn1.crmf.EncryptedKey: org.spongycastle.asn1.crmf.EncryptedKey getInstance(java.lang.Object)>($r2);

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.crmf.EncryptedKey: boolean isEncryptedValue()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
