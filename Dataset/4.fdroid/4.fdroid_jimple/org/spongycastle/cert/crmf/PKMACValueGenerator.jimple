org.spongycastle.cert.crmf.PKMACValueGenerator extends java.lang.Object
private org.spongycastle.cert.crmf.PKMACBuilder builder
    public void <init>(org.spongycastle.cert.crmf.PKMACBuilder)
    {
        org.spongycastle.cert.crmf.PKMACValueGenerator r0;
        org.spongycastle.cert.crmf.PKMACBuilder $r1;

        r0 := @this: org.spongycastle.cert.crmf.PKMACValueGenerator;

        $r1 := @parameter0: org.spongycastle.cert.crmf.PKMACBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.crmf.PKMACValueGenerator: org.spongycastle.cert.crmf.PKMACBuilder builder> = $r1;

        return;
    }
    public org.spongycastle.asn1.crmf.PKMACValue generate(char[], org.spongycastle.asn1.x509.SubjectPublicKeyInfo) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.PKMACValueGenerator r0;
        char[] $r1;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r2;
        java.io.IOException r3;
        org.spongycastle.cert.crmf.PKMACBuilder $r4;
        org.spongycastle.operator.MacCalculator $r5;
        java.io.OutputStream $r6;
        byte[] $r7;
        org.spongycastle.asn1.crmf.PKMACValue $r8;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r9;
        org.spongycastle.asn1.DERBitString $r10;
        org.spongycastle.cert.crmf.CRMFException $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13;

        r0 := @this: org.spongycastle.cert.crmf.PKMACValueGenerator;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r4 = r0.<org.spongycastle.cert.crmf.PKMACValueGenerator: org.spongycastle.cert.crmf.PKMACBuilder builder>;

        $r5 = virtualinvoke $r4.<org.spongycastle.cert.crmf.PKMACBuilder: org.spongycastle.operator.MacCalculator build(char[])>($r1);

        $r6 = interfaceinvoke $r5.<org.spongycastle.operator.MacCalculator: java.io.OutputStream getOutputStream()>();

     label1:
        $r7 = virtualinvoke $r2.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: byte[] getEncoded(java.lang.String)>("DER");

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r7);

        virtualinvoke $r6.<java.io.OutputStream: void close()>();

     label2:
        $r8 = new org.spongycastle.asn1.crmf.PKMACValue;

        $r9 = interfaceinvoke $r5.<org.spongycastle.operator.MacCalculator: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r10 = new org.spongycastle.asn1.DERBitString;

        $r7 = interfaceinvoke $r5.<org.spongycastle.operator.MacCalculator: byte[] getMac()>();

        specialinvoke $r10.<org.spongycastle.asn1.DERBitString: void <init>(byte[])>($r7);

        specialinvoke $r8.<org.spongycastle.asn1.crmf.PKMACValue: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.DERBitString)>($r9, $r10);

        return $r8;

     label3:
        r3 := @caughtexception;

        $r11 = new org.spongycastle.cert.crmf.CRMFException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception encoding mac input: ");

        $r13 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r3);

        throw $r11;

        catch java.io.IOException from label1 to label2 with label3;
    }
