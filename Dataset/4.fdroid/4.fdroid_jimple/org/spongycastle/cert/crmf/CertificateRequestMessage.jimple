org.spongycastle.cert.crmf.CertificateRequestMessage extends java.lang.Object implements org.spongycastle.util.Encodable
public static final int popKeyAgreement
public static final int popKeyEncipherment
public static final int popRaVerified
public static final int popSigningKey
private final org.spongycastle.asn1.crmf.CertReqMsg certReqMsg
private final org.spongycastle.asn1.crmf.Controls controls
    public void <init>(org.spongycastle.asn1.crmf.CertReqMsg)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        org.spongycastle.asn1.crmf.CertReqMsg $r1;
        org.spongycastle.asn1.crmf.CertRequest $r2;
        org.spongycastle.asn1.crmf.Controls $r3;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r1 := @parameter0: org.spongycastle.asn1.crmf.CertReqMsg;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.CertReqMsg certReqMsg> = $r1;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.crmf.CertReqMsg: org.spongycastle.asn1.crmf.CertRequest getCertReq()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.CertRequest: org.spongycastle.asn1.crmf.Controls getControls()>();

        r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.Controls controls> = $r3;

        return;
    }
    public void <init>(byte[]) throws java.io.IOException
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        byte[] $r1;
        org.spongycastle.asn1.crmf.CertReqMsg $r2;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.CertReqMsg parseBytes(byte[])>($r1);

        specialinvoke r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: void <init>(org.spongycastle.asn1.crmf.CertReqMsg)>($r2);

        return;
    }
    private org.spongycastle.asn1.crmf.AttributeTypeAndValue findControl(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r5;
        org.spongycastle.asn1.crmf.Controls $r2;
        org.spongycastle.asn1.crmf.AttributeTypeAndValue[] $r3;
        int i0, $i1;
        org.spongycastle.asn1.crmf.AttributeTypeAndValue $r4;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.Controls controls>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.Controls controls>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.Controls: org.spongycastle.asn1.crmf.AttributeTypeAndValue[] toAttributeTypeAndValueArray()>();

        i0 = 0;

     label2:
        $i1 = lengthof $r3;

        if i0 == $i1 goto label4;

        $r4 = $r3[i0];

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.crmf.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        $z0 = virtualinvoke $r5.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r4 = $r3[i0];

        return $r4;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return null;
    }
    private static org.spongycastle.asn1.crmf.CertReqMsg parseBytes(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        org.spongycastle.asn1.ASN1Primitive $r1;
        org.spongycastle.asn1.crmf.CertReqMsg $r2;
        java.lang.ClassCastException r3;
        org.spongycastle.cert.CertIOException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.IllegalArgumentException r7;

        $r0 := @parameter0: byte[];

     label1:
        $r1 = staticinvoke <org.spongycastle.asn1.ASN1Primitive: org.spongycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r0);

        $r2 = staticinvoke <org.spongycastle.asn1.crmf.CertReqMsg: org.spongycastle.asn1.crmf.CertReqMsg getInstance(java.lang.Object)>($r1);

     label2:
        return $r2;

     label3:
        r3 := @caughtexception;

        $r4 = new org.spongycastle.cert.CertIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed data: ");

        $r6 = virtualinvoke r3.<java.lang.ClassCastException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.cert.CertIOException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r3);

        throw $r4;

     label4:
        r7 := @caughtexception;

        $r4 = new org.spongycastle.cert.CertIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed data: ");

        $r6 = virtualinvoke r7.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.cert.CertIOException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r7);

        throw $r4;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
    }
    private boolean verifySignature(org.spongycastle.operator.ContentVerifierProvider, org.spongycastle.asn1.crmf.POPOSigningKey) throws org.spongycastle.cert.crmf.CRMFException
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        org.spongycastle.operator.ContentVerifierProvider $r1;
        org.spongycastle.asn1.crmf.POPOSigningKey $r2;
        org.spongycastle.operator.OperatorCreationException r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        org.spongycastle.operator.ContentVerifier $r5;
        org.spongycastle.asn1.crmf.POPOSigningKeyInput $r6;
        java.io.OutputStream $r7;
        org.spongycastle.asn1.DERBitString $r8;
        byte[] $r9;
        boolean $z0;
        org.spongycastle.cert.crmf.CRMFException $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;
        org.spongycastle.asn1.crmf.CertReqMsg $r13;
        org.spongycastle.asn1.crmf.CertRequest $r14;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r1 := @parameter0: org.spongycastle.operator.ContentVerifierProvider;

        $r2 := @parameter1: org.spongycastle.asn1.crmf.POPOSigningKey;

     label1:
        $r4 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.POPOSigningKey: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r5 = interfaceinvoke $r1.<org.spongycastle.operator.ContentVerifierProvider: org.spongycastle.operator.ContentVerifier get(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r4);

     label2:
        $r6 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.POPOSigningKey: org.spongycastle.asn1.crmf.POPOSigningKeyInput getPoposkInput()>();

        if $r6 == null goto label5;

        $r6 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.POPOSigningKey: org.spongycastle.asn1.crmf.POPOSigningKeyInput getPoposkInput()>();

        $r7 = interfaceinvoke $r5.<org.spongycastle.operator.ContentVerifier: java.io.OutputStream getOutputStream()>();

        staticinvoke <org.spongycastle.cert.crmf.CRMFUtil: void derEncodeToStream(org.spongycastle.asn1.ASN1Encodable,java.io.OutputStream)>($r6, $r7);

     label3:
        $r8 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.POPOSigningKey: org.spongycastle.asn1.DERBitString getSignature()>();

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        $z0 = interfaceinvoke $r5.<org.spongycastle.operator.ContentVerifier: boolean verify(byte[])>($r9);

        return $z0;

     label4:
        r3 := @caughtexception;

        $r10 = new org.spongycastle.cert.crmf.CRMFException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to create verifier: ");

        $r12 = virtualinvoke r3.<org.spongycastle.operator.OperatorCreationException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.spongycastle.cert.crmf.CRMFException: void <init>(java.lang.String,java.lang.Throwable)>($r12, r3);

        throw $r10;

     label5:
        $r13 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.CertReqMsg certReqMsg>;

        $r14 = virtualinvoke $r13.<org.spongycastle.asn1.crmf.CertReqMsg: org.spongycastle.asn1.crmf.CertRequest getCertReq()>();

        $r7 = interfaceinvoke $r5.<org.spongycastle.operator.ContentVerifier: java.io.OutputStream getOutputStream()>();

        staticinvoke <org.spongycastle.cert.crmf.CRMFUtil: void derEncodeToStream(org.spongycastle.asn1.ASN1Encodable,java.io.OutputStream)>($r14, $r7);

        goto label3;

        catch org.spongycastle.operator.OperatorCreationException from label1 to label2 with label4;
    }
    public org.spongycastle.asn1.crmf.CertTemplate getCertTemplate()
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        org.spongycastle.asn1.crmf.CertReqMsg $r1;
        org.spongycastle.asn1.crmf.CertRequest $r2;
        org.spongycastle.asn1.crmf.CertTemplate $r3;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r1 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.CertReqMsg certReqMsg>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.crmf.CertReqMsg: org.spongycastle.asn1.crmf.CertRequest getCertReq()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.CertRequest: org.spongycastle.asn1.crmf.CertTemplate getCertTemplate()>();

        return $r3;
    }
    public org.spongycastle.cert.crmf.Control getControl(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1, $r3;
        org.spongycastle.asn1.crmf.AttributeTypeAndValue $r2;
        boolean $z0;
        org.spongycastle.cert.crmf.PKIArchiveControl $r4;
        org.spongycastle.asn1.ASN1Encodable $r5;
        org.spongycastle.asn1.crmf.PKIArchiveOptions $r6;
        org.spongycastle.cert.crmf.RegTokenControl $r7;
        org.spongycastle.asn1.DERUTF8String $r8;
        org.spongycastle.cert.crmf.AuthenticatorControl $r9;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = specialinvoke r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.AttributeTypeAndValue findControl(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        if $r2 == null goto label3;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        $r3 = <org.spongycastle.asn1.crmf.CRMFObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_regCtrl_pkiArchiveOptions>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = new org.spongycastle.cert.crmf.PKIArchiveControl;

        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.AttributeTypeAndValue: org.spongycastle.asn1.ASN1Encodable getValue()>();

        $r6 = staticinvoke <org.spongycastle.asn1.crmf.PKIArchiveOptions: org.spongycastle.asn1.crmf.PKIArchiveOptions getInstance(java.lang.Object)>($r5);

        specialinvoke $r4.<org.spongycastle.cert.crmf.PKIArchiveControl: void <init>(org.spongycastle.asn1.crmf.PKIArchiveOptions)>($r6);

        return $r4;

     label1:
        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        $r3 = <org.spongycastle.asn1.crmf.CRMFObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_regCtrl_regToken>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r7 = new org.spongycastle.cert.crmf.RegTokenControl;

        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.AttributeTypeAndValue: org.spongycastle.asn1.ASN1Encodable getValue()>();

        $r8 = staticinvoke <org.spongycastle.asn1.DERUTF8String: org.spongycastle.asn1.DERUTF8String getInstance(java.lang.Object)>($r5);

        specialinvoke $r7.<org.spongycastle.cert.crmf.RegTokenControl: void <init>(org.spongycastle.asn1.DERUTF8String)>($r8);

        return $r7;

     label2:
        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        $r3 = <org.spongycastle.asn1.crmf.CRMFObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier id_regCtrl_authenticator>;

        $z0 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $r9 = new org.spongycastle.cert.crmf.AuthenticatorControl;

        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.AttributeTypeAndValue: org.spongycastle.asn1.ASN1Encodable getValue()>();

        $r8 = staticinvoke <org.spongycastle.asn1.DERUTF8String: org.spongycastle.asn1.DERUTF8String getInstance(java.lang.Object)>($r5);

        specialinvoke $r9.<org.spongycastle.cert.crmf.AuthenticatorControl: void <init>(org.spongycastle.asn1.DERUTF8String)>($r8);

        return $r9;

     label3:
        return null;
    }
    public byte[] getEncoded() throws java.io.IOException
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        byte[] $r1;
        org.spongycastle.asn1.crmf.CertReqMsg $r2;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r2 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.CertReqMsg certReqMsg>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.CertReqMsg: byte[] getEncoded()>();

        return $r1;
    }
    public int getProofOfPossessionType()
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        org.spongycastle.asn1.crmf.CertReqMsg $r1;
        org.spongycastle.asn1.crmf.ProofOfPossession $r2;
        int $i0;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r1 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.CertReqMsg certReqMsg>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.crmf.CertReqMsg: org.spongycastle.asn1.crmf.ProofOfPossession getPopo()>();

        $i0 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.ProofOfPossession: int getType()>();

        return $i0;
    }
    public boolean hasControl(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.crmf.AttributeTypeAndValue $r2;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r2 = specialinvoke r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.AttributeTypeAndValue findControl(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean hasControls()
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        org.spongycastle.asn1.crmf.Controls $r1;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r1 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.Controls controls>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean hasProofOfPossession()
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        org.spongycastle.asn1.crmf.ProofOfPossession $r1;
        org.spongycastle.asn1.crmf.CertReqMsg $r2;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r2 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.CertReqMsg certReqMsg>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.CertReqMsg: org.spongycastle.asn1.crmf.ProofOfPossession getPopo()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean hasSigningKeyProofOfPossessionWithPKMAC()
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        org.spongycastle.asn1.crmf.CertReqMsg $r1;
        org.spongycastle.asn1.crmf.ProofOfPossession $r2;
        int $i0;
        org.spongycastle.asn1.ASN1Encodable $r3;
        org.spongycastle.asn1.crmf.POPOSigningKey $r4;
        org.spongycastle.asn1.crmf.POPOSigningKeyInput $r5;
        org.spongycastle.asn1.crmf.PKMACValue $r6;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r1 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.CertReqMsg certReqMsg>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.crmf.CertReqMsg: org.spongycastle.asn1.crmf.ProofOfPossession getPopo()>();

        $i0 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.ProofOfPossession: int getType()>();

        if $i0 != 1 goto label1;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.ProofOfPossession: org.spongycastle.asn1.ASN1Encodable getObject()>();

        $r4 = staticinvoke <org.spongycastle.asn1.crmf.POPOSigningKey: org.spongycastle.asn1.crmf.POPOSigningKey getInstance(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.crmf.POPOSigningKey: org.spongycastle.asn1.crmf.POPOSigningKeyInput getPoposkInput()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.crmf.POPOSigningKeyInput: org.spongycastle.asn1.crmf.PKMACValue getPublicKeyMAC()>();

        if $r6 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isValidSigningKeyPOP(org.spongycastle.operator.ContentVerifierProvider) throws org.spongycastle.cert.crmf.CRMFException, java.lang.IllegalStateException
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        org.spongycastle.operator.ContentVerifierProvider $r1;
        org.spongycastle.asn1.crmf.CertReqMsg $r2;
        org.spongycastle.asn1.crmf.ProofOfPossession $r3;
        int $i0;
        org.spongycastle.asn1.ASN1Encodable $r4;
        org.spongycastle.asn1.crmf.POPOSigningKey $r5;
        org.spongycastle.asn1.crmf.POPOSigningKeyInput $r6;
        org.spongycastle.asn1.crmf.PKMACValue $r7;
        java.lang.IllegalStateException $r8;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r1 := @parameter0: org.spongycastle.operator.ContentVerifierProvider;

        $r2 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.CertReqMsg certReqMsg>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.crmf.CertReqMsg: org.spongycastle.asn1.crmf.ProofOfPossession getPopo()>();

        $i0 = virtualinvoke $r3.<org.spongycastle.asn1.crmf.ProofOfPossession: int getType()>();

        if $i0 != 1 goto label2;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.crmf.ProofOfPossession: org.spongycastle.asn1.ASN1Encodable getObject()>();

        $r5 = staticinvoke <org.spongycastle.asn1.crmf.POPOSigningKey: org.spongycastle.asn1.crmf.POPOSigningKey getInstance(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.crmf.POPOSigningKey: org.spongycastle.asn1.crmf.POPOSigningKeyInput getPoposkInput()>();

        if $r6 == null goto label1;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.crmf.POPOSigningKey: org.spongycastle.asn1.crmf.POPOSigningKeyInput getPoposkInput()>();

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.crmf.POPOSigningKeyInput: org.spongycastle.asn1.crmf.PKMACValue getPublicKeyMAC()>();

        if $r7 == null goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("verification requires password check");

        throw $r8;

     label1:
        $z0 = specialinvoke r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: boolean verifySignature(org.spongycastle.operator.ContentVerifierProvider,org.spongycastle.asn1.crmf.POPOSigningKey)>($r1, $r5);

        return $z0;

     label2:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not Signing Key type of proof of possession");

        throw $r8;
    }
    public boolean isValidSigningKeyPOP(org.spongycastle.operator.ContentVerifierProvider, org.spongycastle.cert.crmf.PKMACBuilder, char[]) throws org.spongycastle.cert.crmf.CRMFException, java.lang.IllegalStateException
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        org.spongycastle.operator.ContentVerifierProvider $r1;
        org.spongycastle.cert.crmf.PKMACBuilder $r2;
        char[] $r3;
        org.spongycastle.cert.crmf.PKMACValueVerifier r4;
        org.spongycastle.asn1.crmf.CertReqMsg $r5;
        org.spongycastle.asn1.crmf.ProofOfPossession $r6;
        int $i0;
        org.spongycastle.asn1.ASN1Encodable $r7;
        org.spongycastle.asn1.crmf.POPOSigningKey $r8;
        org.spongycastle.asn1.crmf.POPOSigningKeyInput $r9;
        org.spongycastle.asn1.x509.GeneralName $r10;
        java.lang.IllegalStateException $r11;
        org.spongycastle.asn1.crmf.PKMACValue $r12;
        org.spongycastle.asn1.crmf.CertTemplate $r13;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r14;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        $r1 := @parameter0: org.spongycastle.operator.ContentVerifierProvider;

        $r2 := @parameter1: org.spongycastle.cert.crmf.PKMACBuilder;

        $r3 := @parameter2: char[];

        $r5 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.CertReqMsg certReqMsg>;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.crmf.CertReqMsg: org.spongycastle.asn1.crmf.ProofOfPossession getPopo()>();

        $i0 = virtualinvoke $r6.<org.spongycastle.asn1.crmf.ProofOfPossession: int getType()>();

        if $i0 != 1 goto label4;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.crmf.ProofOfPossession: org.spongycastle.asn1.ASN1Encodable getObject()>();

        $r8 = staticinvoke <org.spongycastle.asn1.crmf.POPOSigningKey: org.spongycastle.asn1.crmf.POPOSigningKey getInstance(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.crmf.POPOSigningKey: org.spongycastle.asn1.crmf.POPOSigningKeyInput getPoposkInput()>();

        if $r9 == null goto label1;

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.crmf.POPOSigningKey: org.spongycastle.asn1.crmf.POPOSigningKeyInput getPoposkInput()>();

        $r10 = virtualinvoke $r9.<org.spongycastle.asn1.crmf.POPOSigningKeyInput: org.spongycastle.asn1.x509.GeneralName getSender()>();

        if $r10 == null goto label2;

     label1:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no PKMAC present in proof of possession");

        throw $r11;

     label2:
        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.crmf.POPOSigningKey: org.spongycastle.asn1.crmf.POPOSigningKeyInput getPoposkInput()>();

        $r12 = virtualinvoke $r9.<org.spongycastle.asn1.crmf.POPOSigningKeyInput: org.spongycastle.asn1.crmf.PKMACValue getPublicKeyMAC()>();

        r4 = new org.spongycastle.cert.crmf.PKMACValueVerifier;

        specialinvoke r4.<org.spongycastle.cert.crmf.PKMACValueVerifier: void <init>(org.spongycastle.cert.crmf.PKMACBuilder)>($r2);

        $r13 = virtualinvoke r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.CertTemplate getCertTemplate()>();

        $r14 = virtualinvoke $r13.<org.spongycastle.asn1.crmf.CertTemplate: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getPublicKey()>();

        $z0 = virtualinvoke r4.<org.spongycastle.cert.crmf.PKMACValueVerifier: boolean isValid(org.spongycastle.asn1.crmf.PKMACValue,char[],org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r12, $r3, $r14);

        if $z0 == 0 goto label3;

        $z0 = specialinvoke r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: boolean verifySignature(org.spongycastle.operator.ContentVerifierProvider,org.spongycastle.asn1.crmf.POPOSigningKey)>($r1, $r8);

        return $z0;

     label3:
        return 0;

     label4:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not Signing Key type of proof of possession");

        throw $r11;
    }
    public org.spongycastle.asn1.crmf.CertReqMsg toASN1Structure()
    {
        org.spongycastle.cert.crmf.CertificateRequestMessage r0;
        org.spongycastle.asn1.crmf.CertReqMsg r1;

        r0 := @this: org.spongycastle.cert.crmf.CertificateRequestMessage;

        r1 = r0.<org.spongycastle.cert.crmf.CertificateRequestMessage: org.spongycastle.asn1.crmf.CertReqMsg certReqMsg>;

        return r1;
    }
