org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector extends java.lang.Object implements org.spongycastle.util.Selector
private final org.spongycastle.cert.X509AttributeCertificateHolder attributeCert
private final java.util.Date attributeCertificateValid
private final org.spongycastle.cert.AttributeCertificateHolder holder
private final org.spongycastle.cert.AttributeCertificateIssuer issuer
private final java.math.BigInteger serialNumber
private final java.util.Collection targetGroups
private final java.util.Collection targetNames
    void <init>(org.spongycastle.cert.AttributeCertificateHolder, org.spongycastle.cert.AttributeCertificateIssuer, java.math.BigInteger, java.util.Date, org.spongycastle.cert.X509AttributeCertificateHolder, java.util.Collection, java.util.Collection)
    {
        org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector r0;
        org.spongycastle.cert.AttributeCertificateHolder $r1;
        org.spongycastle.cert.AttributeCertificateIssuer $r2;
        java.math.BigInteger $r3;
        java.util.Date $r4;
        org.spongycastle.cert.X509AttributeCertificateHolder $r5;
        java.util.Collection $r6, $r7;

        r0 := @this: org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector;

        $r1 := @parameter0: org.spongycastle.cert.AttributeCertificateHolder;

        $r2 := @parameter1: org.spongycastle.cert.AttributeCertificateIssuer;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 := @parameter3: java.util.Date;

        $r5 := @parameter4: org.spongycastle.cert.X509AttributeCertificateHolder;

        $r6 := @parameter5: java.util.Collection;

        $r7 := @parameter6: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.AttributeCertificateHolder holder> = $r1;

        r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.AttributeCertificateIssuer issuer> = $r2;

        r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.math.BigInteger serialNumber> = $r3;

        r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Date attributeCertificateValid> = $r4;

        r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.X509AttributeCertificateHolder attributeCert> = $r5;

        r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Collection targetNames> = $r6;

        r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Collection targetGroups> = $r7;

        return;
    }
    public java.lang.Object clone()
    {
        org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector r0, r1;
        org.spongycastle.cert.AttributeCertificateHolder $r2;
        org.spongycastle.cert.AttributeCertificateIssuer $r3;
        java.math.BigInteger $r4;
        java.util.Date $r5;
        org.spongycastle.cert.X509AttributeCertificateHolder $r6;
        java.util.Collection $r7, $r8;

        r0 := @this: org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector;

        r1 = new org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector;

        $r2 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.AttributeCertificateHolder holder>;

        $r3 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.AttributeCertificateIssuer issuer>;

        $r4 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.math.BigInteger serialNumber>;

        $r5 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Date attributeCertificateValid>;

        $r6 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.X509AttributeCertificateHolder attributeCert>;

        $r7 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Collection targetNames>;

        $r8 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Collection targetGroups>;

        specialinvoke r1.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: void <init>(org.spongycastle.cert.AttributeCertificateHolder,org.spongycastle.cert.AttributeCertificateIssuer,java.math.BigInteger,java.util.Date,org.spongycastle.cert.X509AttributeCertificateHolder,java.util.Collection,java.util.Collection)>($r2, $r3, $r4, $r5, $r6, $r7, $r8);

        return r1;
    }
    public org.spongycastle.cert.X509AttributeCertificateHolder getAttributeCert()
    {
        org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector r0;
        org.spongycastle.cert.X509AttributeCertificateHolder r1;

        r0 := @this: org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector;

        r1 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.X509AttributeCertificateHolder attributeCert>;

        return r1;
    }
    public java.util.Date getAttributeCertificateValid()
    {
        org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector r0;
        java.util.Date $r1, $r2;
        long $l0;

        r0 := @this: org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector;

        $r1 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Date attributeCertificateValid>;

        if $r1 == null goto label1;

        $r2 = new java.util.Date;

        $r1 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Date attributeCertificateValid>;

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l0);

        return $r2;

     label1:
        return null;
    }
    public org.spongycastle.cert.AttributeCertificateHolder getHolder()
    {
        org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector r0;
        org.spongycastle.cert.AttributeCertificateHolder r1;

        r0 := @this: org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector;

        r1 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.AttributeCertificateHolder holder>;

        return r1;
    }
    public org.spongycastle.cert.AttributeCertificateIssuer getIssuer()
    {
        org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector r0;
        org.spongycastle.cert.AttributeCertificateIssuer r1;

        r0 := @this: org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector;

        r1 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.AttributeCertificateIssuer issuer>;

        return r1;
    }
    public java.math.BigInteger getSerialNumber()
    {
        org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector;

        r1 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.math.BigInteger serialNumber>;

        return r1;
    }
    public java.util.Collection getTargetGroups()
    {
        org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector r0;
        java.util.Collection r1;

        r0 := @this: org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector;

        r1 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Collection targetGroups>;

        return r1;
    }
    public java.util.Collection getTargetNames()
    {
        org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector r0;
        java.util.Collection r1;

        r0 := @this: org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector;

        r1 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Collection targetNames>;

        return r1;
    }
    public boolean match(java.lang.Object)
    {
        org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector r0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException r2;
        boolean $z0, $z1;
        org.spongycastle.cert.X509AttributeCertificateHolder r3, $r4;
        java.math.BigInteger $r5, $r6;
        org.spongycastle.cert.AttributeCertificateHolder $r7, $r8;
        org.spongycastle.cert.AttributeCertificateIssuer $r9, $r10;
        java.util.Date $r11;
        java.util.Collection $r12;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r13;
        org.spongycastle.asn1.x509.Extension $r14;
        org.spongycastle.asn1.ASN1Encodable $r15;
        org.spongycastle.asn1.x509.TargetInformation $r16;
        org.spongycastle.asn1.x509.Targets[] $r17;
        int i0, $i1, $i2;
        org.spongycastle.asn1.x509.Targets r18;
        org.spongycastle.asn1.x509.Target[] $r19;
        org.spongycastle.asn1.x509.Target $r20;
        org.spongycastle.asn1.x509.GeneralName $r21;

        r0 := @this: org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.spongycastle.cert.X509AttributeCertificateHolder;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r3 = (org.spongycastle.cert.X509AttributeCertificateHolder) $r1;

        $r4 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.X509AttributeCertificateHolder attributeCert>;

        if $r4 == null goto label02;

        $r4 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.X509AttributeCertificateHolder attributeCert>;

        $z0 = virtualinvoke $r4.<org.spongycastle.cert.X509AttributeCertificateHolder: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label23;

     label02:
        $r5 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.math.BigInteger serialNumber>;

        if $r5 == null goto label03;

        $r5 = virtualinvoke r3.<org.spongycastle.cert.X509AttributeCertificateHolder: java.math.BigInteger getSerialNumber()>();

        $r6 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.math.BigInteger serialNumber>;

        $z0 = virtualinvoke $r5.<java.math.BigInteger: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label23;

     label03:
        $r7 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.AttributeCertificateHolder holder>;

        if $r7 == null goto label04;

        $r7 = virtualinvoke r3.<org.spongycastle.cert.X509AttributeCertificateHolder: org.spongycastle.cert.AttributeCertificateHolder getHolder()>();

        $r8 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.AttributeCertificateHolder holder>;

        $z0 = virtualinvoke $r7.<org.spongycastle.cert.AttributeCertificateHolder: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label23;

     label04:
        $r9 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.AttributeCertificateIssuer issuer>;

        if $r9 == null goto label05;

        $r9 = virtualinvoke r3.<org.spongycastle.cert.X509AttributeCertificateHolder: org.spongycastle.cert.AttributeCertificateIssuer getIssuer()>();

        $r10 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: org.spongycastle.cert.AttributeCertificateIssuer issuer>;

        $z0 = virtualinvoke $r9.<org.spongycastle.cert.AttributeCertificateIssuer: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label23;

     label05:
        $r11 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Date attributeCertificateValid>;

        if $r11 == null goto label06;

        $r11 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Date attributeCertificateValid>;

        $z0 = virtualinvoke r3.<org.spongycastle.cert.X509AttributeCertificateHolder: boolean isValidOn(java.util.Date)>($r11);

        if $z0 == 0 goto label23;

     label06:
        $r12 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Collection targetNames>;

        $z0 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label07;

        $r12 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Collection targetGroups>;

        $z0 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label22;

     label07:
        $r13 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier targetInformation>;

        $r14 = virtualinvoke r3.<org.spongycastle.cert.X509AttributeCertificateHolder: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r13);

        if $r14 == null goto label22;

     label08:
        $r15 = virtualinvoke $r14.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1Encodable getParsedValue()>();

        $r16 = staticinvoke <org.spongycastle.asn1.x509.TargetInformation: org.spongycastle.asn1.x509.TargetInformation getInstance(java.lang.Object)>($r15);

     label09:
        $r17 = virtualinvoke $r16.<org.spongycastle.asn1.x509.TargetInformation: org.spongycastle.asn1.x509.Targets[] getTargetsObjects()>();

        $r12 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Collection targetNames>;

        $z0 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label16;

        $z0 = 0;

        i0 = 0;

     label10:
        $i1 = lengthof $r17;

        if i0 >= $i1 goto label15;

        r18 = $r17[i0];

        $r19 = virtualinvoke r18.<org.spongycastle.asn1.x509.Targets: org.spongycastle.asn1.x509.Target[] getTargets()>();

        $i1 = 0;

     label11:
        $i2 = lengthof $r19;

        if $i1 >= $i2 goto label12;

        $r12 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Collection targetNames>;

        $r20 = $r19[$i1];

        $r21 = virtualinvoke $r20.<org.spongycastle.asn1.x509.Target: org.spongycastle.asn1.x509.GeneralName getTargetName()>();

        $r21 = staticinvoke <org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.x509.GeneralName getInstance(java.lang.Object)>($r21);

        $z1 = interfaceinvoke $r12.<java.util.Collection: boolean contains(java.lang.Object)>($r21);

        if $z1 == 0 goto label14;

        $z0 = 1;

     label12:
        i0 = i0 + 1;

        goto label10;

     label13:
        r2 := @caughtexception;

        return 0;

     label14:
        $i1 = $i1 + 1;

        goto label11;

     label15:
        if $z0 == 0 goto label23;

     label16:
        $r12 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Collection targetGroups>;

        $z0 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label22;

        $z0 = 0;

        i0 = 0;

     label17:
        $i1 = lengthof $r17;

        if i0 >= $i1 goto label21;

        r18 = $r17[i0];

        $r19 = virtualinvoke r18.<org.spongycastle.asn1.x509.Targets: org.spongycastle.asn1.x509.Target[] getTargets()>();

        $i1 = 0;

     label18:
        $i2 = lengthof $r19;

        if $i1 >= $i2 goto label19;

        $r12 = r0.<org.spongycastle.cert.selector.X509AttributeCertificateHolderSelector: java.util.Collection targetGroups>;

        $r20 = $r19[$i1];

        $r21 = virtualinvoke $r20.<org.spongycastle.asn1.x509.Target: org.spongycastle.asn1.x509.GeneralName getTargetGroup()>();

        $r21 = staticinvoke <org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.x509.GeneralName getInstance(java.lang.Object)>($r21);

        $z1 = interfaceinvoke $r12.<java.util.Collection: boolean contains(java.lang.Object)>($r21);

        if $z1 == 0 goto label20;

        $z0 = 1;

     label19:
        i0 = i0 + 1;

        goto label17;

     label20:
        $i1 = $i1 + 1;

        goto label18;

     label21:
        if $z0 == 0 goto label23;

     label22:
        return 1;

     label23:
        return 0;

        catch java.lang.IllegalArgumentException from label08 to label09 with label13;
    }
