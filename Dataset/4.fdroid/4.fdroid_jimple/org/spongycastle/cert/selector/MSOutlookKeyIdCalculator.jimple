org.spongycastle.cert.selector.MSOutlookKeyIdCalculator extends java.lang.Object
    void <init>()
    {
        org.spongycastle.cert.selector.MSOutlookKeyIdCalculator r0;

        r0 := @this: org.spongycastle.cert.selector.MSOutlookKeyIdCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static byte[] calculateKeyId(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)
    {
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r0;
        org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest r1;
        java.io.IOException r2;
        int $i0;
        byte[] r3, r4;

        $r0 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        r1 = new org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest;

        specialinvoke r1.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: void <init>()>();

        $i0 = virtualinvoke r1.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int getDigestSize()>();

        r3 = newarray (byte)[$i0];

        r4 = newarray (byte)[0];

     label1:
        r4 = virtualinvoke $r0.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        $i0 = lengthof r4;

        virtualinvoke r1.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: void update(byte[],int,int)>(r4, 0, $i0);

        virtualinvoke r1.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int doFinal(byte[],int)>(r3, 0);

        return r3;

     label3:
        r2 := @caughtexception;

        r3 = newarray (byte)[0];

        return r3;

        catch java.io.IOException from label1 to label2 with label3;
    }
