org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest extends org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$GeneralDigest
private static final int DIGEST_LENGTH
private static final int Y1
private static final int Y2
private static final int Y3
private static final int Y4
private int H1
private int H2
private int H3
private int H4
private int H5
private int[] X
private int xOff
    public void <init>()
    {
        org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest r0;
        int[] $r1;

        r0 := @this: org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest;

        specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$GeneralDigest: void <init>()>();

        $r1 = newarray (int)[80];

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X> = $r1;

        virtualinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: void reset()>();

        return;
    }
    private int f(int, int, int)
    {
        org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest r0;
        int $i0, $i1, $i2;

        r0 := @this: org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i1 = $i0 & $i1;

        $i0 = $i0 ^ -1;

        $i0 = $i0 & $i2;

        $i0 = $i1 | $i0;

        return $i0;
    }
    private int g(int, int, int)
    {
        org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = $i0 & $i1;

        $i0 = $i0 & $i2;

        $i0 = $i3 | $i0;

        $i1 = $i1 & $i2;

        $i0 = $i0 | $i1;

        return $i0;
    }
    private int h(int, int, int)
    {
        org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest r0;
        int $i0, $i1, $i2;

        r0 := @this: org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i0 = $i0 ^ $i1;

        $i0 = $i0 ^ $i2;

        return $i0;
    }
    public int doFinal(byte[], int)
    {
        org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest r0;
        byte[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        virtualinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: void finish()>();

        $i1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H1>;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i1, $r1, $i0);

        $i1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H2>;

        $i2 = $i0 + 4;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i1, $r1, $i2);

        $i1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H3>;

        $i2 = $i0 + 8;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i1, $r1, $i2);

        $i1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H4>;

        $i2 = $i0 + 12;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i1, $r1, $i2);

        $i1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H5>;

        $i0 = $i0 + 16;

        staticinvoke <org.spongycastle.util.Pack: void intToBigEndian(int,byte[],int)>($i1, $r1, $i0);

        virtualinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: void reset()>();

        return 20;
    }
    public java.lang.String getAlgorithmName()
    {
        org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest r0;

        r0 := @this: org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest;

        return "SHA-1";
    }
    public int getDigestSize()
    {
        org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest r0;

        r0 := @this: org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest;

        return 20;
    }
    protected void processBlock()
    {
        org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest r0;
        int i0, i1, $i2, i3, i4, i5, i6, $i7, $i8;
        int[] $r1;

        r0 := @this: org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest;

        i1 = 16;

     label01:
        if i1 >= 80 goto label02;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i2 = i1 + -3;

        $i2 = $r1[$i2];

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        i0 = i1 + -8;

        i0 = $r1[i0];

        $i2 = $i2 ^ i0;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        i0 = i1 + -14;

        i0 = $r1[i0];

        $i2 = $i2 ^ i0;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        i0 = i1 + -16;

        i0 = $r1[i0];

        i0 = $i2 ^ i0;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i2 = i0 << 1;

        i0 = i0 >>> 31;

        $i2 = $i2 | i0;

        $r1[i1] = $i2;

        i1 = i1 + 1;

        goto label01;

     label02:
        i3 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H1>;

        i4 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H2>;

        i0 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H3>;

        $i2 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H4>;

        i1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H5>;

        i5 = 0;

        i6 = 0;

     label03:
        if i5 >= 4 goto label04;

        $i7 = i3 << 5;

        $i8 = i3 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int f(int,int,int)>(i4, i0, $i2);

        $i8 = $i7 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i7 = i6 + 1;

        i6 = $r1[i6];

        i6 = $i8 + i6;

        i6 = i6 + 1518500249;

        i1 = i1 + i6;

        i6 = i4 << 30;

        i4 = i4 >>> 2;

        i4 = i6 | i4;

        i6 = i1 << 5;

        $i8 = i1 >>> 27;

        i6 = i6 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int f(int,int,int)>(i3, i4, i0);

        $i8 = i6 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + 1518500249;

        $i2 = $i2 + $i7;

        $i7 = i3 << 30;

        i3 = i3 >>> 2;

        i3 = $i7 | i3;

        $i7 = $i2 << 5;

        $i8 = $i2 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int f(int,int,int)>(i1, i3, i4);

        $i8 = $i7 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i7 = i6 + 1;

        i6 = $r1[i6];

        i6 = $i8 + i6;

        i6 = i6 + 1518500249;

        i0 = i0 + i6;

        i6 = i1 << 30;

        i1 = i1 >>> 2;

        i1 = i6 | i1;

        i6 = i0 << 5;

        $i8 = i0 >>> 27;

        i6 = i6 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int f(int,int,int)>($i2, i1, i3);

        $i8 = i6 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + 1518500249;

        i4 = i4 + $i7;

        $i7 = $i2 << 30;

        $i2 = $i2 >>> 2;

        $i2 = $i7 | $i2;

        $i7 = i4 << 5;

        $i8 = i4 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int f(int,int,int)>(i0, $i2, i1);

        $i8 = $i7 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i7 = i6 + 1;

        i6 = $r1[i6];

        i6 = $i8 + i6;

        i6 = i6 + 1518500249;

        i3 = i3 + i6;

        i6 = i0 << 30;

        i0 = i0 >>> 2;

        i0 = i6 | i0;

        i5 = i5 + 1;

        i6 = $i7;

        goto label03;

     label04:
        i5 = 0;

     label05:
        if i5 >= 4 goto label06;

        $i7 = i3 << 5;

        $i8 = i3 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int h(int,int,int)>(i4, i0, $i2);

        $i8 = $i7 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i7 = i6 + 1;

        i6 = $r1[i6];

        i6 = $i8 + i6;

        i6 = i6 + 1859775393;

        i1 = i1 + i6;

        i6 = i4 << 30;

        i4 = i4 >>> 2;

        i4 = i6 | i4;

        i6 = i1 << 5;

        $i8 = i1 >>> 27;

        i6 = i6 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int h(int,int,int)>(i3, i4, i0);

        $i8 = i6 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + 1859775393;

        $i2 = $i2 + $i7;

        $i7 = i3 << 30;

        i3 = i3 >>> 2;

        i3 = $i7 | i3;

        $i7 = $i2 << 5;

        $i8 = $i2 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int h(int,int,int)>(i1, i3, i4);

        $i8 = $i7 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i7 = i6 + 1;

        i6 = $r1[i6];

        i6 = $i8 + i6;

        i6 = i6 + 1859775393;

        i0 = i0 + i6;

        i6 = i1 << 30;

        i1 = i1 >>> 2;

        i1 = i6 | i1;

        i6 = i0 << 5;

        $i8 = i0 >>> 27;

        i6 = i6 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int h(int,int,int)>($i2, i1, i3);

        $i8 = i6 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + 1859775393;

        i4 = i4 + $i7;

        $i7 = $i2 << 30;

        $i2 = $i2 >>> 2;

        $i2 = $i7 | $i2;

        $i7 = i4 << 5;

        $i8 = i4 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int h(int,int,int)>(i0, $i2, i1);

        $i8 = $i7 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i7 = i6 + 1;

        i6 = $r1[i6];

        i6 = $i8 + i6;

        i6 = i6 + 1859775393;

        i3 = i3 + i6;

        i6 = i0 << 30;

        i0 = i0 >>> 2;

        i0 = i6 | i0;

        i5 = i5 + 1;

        i6 = $i7;

        goto label05;

     label06:
        i5 = 0;

     label07:
        if i5 >= 4 goto label08;

        $i7 = i3 << 5;

        $i8 = i3 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int g(int,int,int)>(i4, i0, $i2);

        $i8 = $i7 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i7 = i6 + 1;

        i6 = $r1[i6];

        i6 = $i8 + i6;

        i6 = i6 + -1894007588;

        i1 = i1 + i6;

        i6 = i4 << 30;

        i4 = i4 >>> 2;

        i4 = i6 | i4;

        i6 = i1 << 5;

        $i8 = i1 >>> 27;

        i6 = i6 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int g(int,int,int)>(i3, i4, i0);

        $i8 = i6 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + -1894007588;

        $i2 = $i2 + $i7;

        $i7 = i3 << 30;

        i3 = i3 >>> 2;

        i3 = $i7 | i3;

        $i7 = $i2 << 5;

        $i8 = $i2 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int g(int,int,int)>(i1, i3, i4);

        $i8 = $i7 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i7 = i6 + 1;

        i6 = $r1[i6];

        i6 = $i8 + i6;

        i6 = i6 + -1894007588;

        i0 = i0 + i6;

        i6 = i1 << 30;

        i1 = i1 >>> 2;

        i1 = i6 | i1;

        i6 = i0 << 5;

        $i8 = i0 >>> 27;

        i6 = i6 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int g(int,int,int)>($i2, i1, i3);

        $i8 = i6 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + -1894007588;

        i4 = i4 + $i7;

        $i7 = $i2 << 30;

        $i2 = $i2 >>> 2;

        $i2 = $i7 | $i2;

        $i7 = i4 << 5;

        $i8 = i4 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int g(int,int,int)>(i0, $i2, i1);

        $i8 = $i7 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i7 = i6 + 1;

        i6 = $r1[i6];

        i6 = $i8 + i6;

        i6 = i6 + -1894007588;

        i3 = i3 + i6;

        i6 = i0 << 30;

        i0 = i0 >>> 2;

        i0 = i6 | i0;

        i5 = i5 + 1;

        i6 = $i7;

        goto label07;

     label08:
        i5 = 0;

     label09:
        if i5 > 3 goto label10;

        $i7 = i3 << 5;

        $i8 = i3 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int h(int,int,int)>(i4, i0, $i2);

        $i8 = $i7 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i7 = i6 + 1;

        i6 = $r1[i6];

        i6 = $i8 + i6;

        i6 = i6 + -899497514;

        i1 = i1 + i6;

        i6 = i4 << 30;

        i4 = i4 >>> 2;

        i4 = i6 | i4;

        i6 = i1 << 5;

        $i8 = i1 >>> 27;

        i6 = i6 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int h(int,int,int)>(i3, i4, i0);

        $i8 = i6 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + -899497514;

        $i2 = $i2 + $i7;

        $i7 = i3 << 30;

        i3 = i3 >>> 2;

        i3 = $i7 | i3;

        $i7 = $i2 << 5;

        $i8 = $i2 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int h(int,int,int)>(i1, i3, i4);

        $i8 = $i7 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i7 = i6 + 1;

        i6 = $r1[i6];

        i6 = $i8 + i6;

        i6 = i6 + -899497514;

        i0 = i0 + i6;

        i6 = i1 << 30;

        i1 = i1 >>> 2;

        i1 = i6 | i1;

        i6 = i0 << 5;

        $i8 = i0 >>> 27;

        i6 = i6 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int h(int,int,int)>($i2, i1, i3);

        $i8 = i6 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        i6 = $i7 + 1;

        $i7 = $r1[$i7];

        $i7 = $i8 + $i7;

        $i7 = $i7 + -899497514;

        i4 = i4 + $i7;

        $i7 = $i2 << 30;

        $i2 = $i2 >>> 2;

        $i2 = $i7 | $i2;

        $i7 = i4 << 5;

        $i8 = i4 >>> 27;

        $i7 = $i7 | $i8;

        $i8 = specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int h(int,int,int)>(i0, $i2, i1);

        $i8 = $i7 + $i8;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i7 = i6 + 1;

        i6 = $r1[i6];

        i6 = $i8 + i6;

        i6 = i6 + -899497514;

        i3 = i3 + i6;

        i6 = i0 << 30;

        i0 = i0 >>> 2;

        i0 = i6 | i0;

        i5 = i5 + 1;

        i6 = $i7;

        goto label09;

     label10:
        i5 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H1>;

        i3 = i5 + i3;

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H1> = i3;

        i3 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H2>;

        i4 = i3 + i4;

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H2> = i4;

        i4 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H3>;

        i0 = i4 + i0;

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H3> = i0;

        i0 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H4>;

        $i2 = i0 + $i2;

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H4> = $i2;

        $i2 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H5>;

        i1 = $i2 + i1;

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H5> = i1;

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int xOff> = 0;

        i1 = 0;

     label11:
        if i1 >= 16 goto label12;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $r1[i1] = 0;

        i1 = i1 + 1;

        goto label11;

     label12:
        return;
    }
    protected void processLength(long)
    {
        org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest r0;
        long $l0, $l2;
        int $i1;
        int[] $r1;

        r0 := @this: org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest;

        $l0 := @parameter0: long;

        $i1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int xOff>;

        if $i1 <= 14 goto label1;

        virtualinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: void processBlock()>();

     label1:
        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $l2 = $l0 >>> 32;

        $i1 = (int) $l2;

        $r1[14] = $i1;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $l0 = -1L & $l0;

        $i1 = (int) $l0;

        $r1[15] = $i1;

        return;
    }
    protected void processWord(byte[], int)
    {
        org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest r0;
        byte[] $r1;
        int $i0, i2, $i3;
        byte $b1;
        int[] $r2;

        r0 := @this: org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $b1 = $r1[$i0];

        i2 = $b1 << 24;

        $i0 = $i0 + 1;

        $b1 = $r1[$i0];

        $i3 = $b1 & 255;

        $i3 = $i3 << 16;

        i2 = i2 | $i3;

        $i0 = $i0 + 1;

        $b1 = $r1[$i0];

        $i3 = $b1 & 255;

        $i3 = $i3 << 8;

        i2 = i2 | $i3;

        $i0 = $i0 + 1;

        $b1 = $r1[$i0];

        $i0 = $b1 & 255;

        $i0 = i2 | $i0;

        $r2 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        i2 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int xOff>;

        $r2[i2] = $i0;

        $i0 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int xOff>;

        $i0 = $i0 + 1;

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int xOff> = $i0;

        if $i0 != 16 goto label1;

        virtualinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: void processBlock()>();

     label1:
        return;
    }
    public void reset()
    {
        org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest;

        specialinvoke r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$GeneralDigest: void reset()>();

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H1> = 1732584193;

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H2> = -271733879;

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H3> = -1732584194;

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H4> = 271733878;

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int H5> = -1009589776;

        r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int xOff> = 0;

        i0 = 0;

     label1:
        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $i1 = lengthof $r1;

        if i0 == $i1 goto label2;

        $r1 = r0.<org.spongycastle.cert.selector.MSOutlookKeyIdCalculator$SHA1Digest: int[] X>;

        $r1[i0] = 0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
