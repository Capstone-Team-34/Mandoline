org.spongycastle.cert.selector.X509CertificateHolderSelector extends java.lang.Object implements org.spongycastle.util.Selector
private org.spongycastle.asn1.x500.X500Name issuer
private java.math.BigInteger serialNumber
private byte[] subjectKeyId
    public void <init>(org.spongycastle.asn1.x500.X500Name, java.math.BigInteger)
    {
        org.spongycastle.cert.selector.X509CertificateHolderSelector r0;
        org.spongycastle.asn1.x500.X500Name $r1;
        java.math.BigInteger $r2;

        r0 := @this: org.spongycastle.cert.selector.X509CertificateHolderSelector;

        $r1 := @parameter0: org.spongycastle.asn1.x500.X500Name;

        $r2 := @parameter1: java.math.BigInteger;

        specialinvoke r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: void <init>(org.spongycastle.asn1.x500.X500Name,java.math.BigInteger,byte[])>($r1, $r2, null);

        return;
    }
    public void <init>(org.spongycastle.asn1.x500.X500Name, java.math.BigInteger, byte[])
    {
        org.spongycastle.cert.selector.X509CertificateHolderSelector r0;
        org.spongycastle.asn1.x500.X500Name $r1;
        java.math.BigInteger $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.cert.selector.X509CertificateHolderSelector;

        $r1 := @parameter0: org.spongycastle.asn1.x500.X500Name;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: org.spongycastle.asn1.x500.X500Name issuer> = $r1;

        r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: java.math.BigInteger serialNumber> = $r2;

        r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: byte[] subjectKeyId> = $r3;

        return;
    }
    public void <init>(byte[])
    {
        org.spongycastle.cert.selector.X509CertificateHolderSelector r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.cert.selector.X509CertificateHolderSelector;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: void <init>(org.spongycastle.asn1.x500.X500Name,java.math.BigInteger,byte[])>(null, null, $r1);

        return;
    }
    private boolean equalsObj(java.lang.Object, java.lang.Object)
    {
        org.spongycastle.cert.selector.X509CertificateHolderSelector r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.selector.X509CertificateHolderSelector;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        return $z0;

     label1:
        if $r2 != null goto label2;

        return 1;

     label2:
        return 0;
    }
    public java.lang.Object clone()
    {
        org.spongycastle.cert.selector.X509CertificateHolderSelector r0, $r1;
        org.spongycastle.asn1.x500.X500Name $r2;
        java.math.BigInteger $r3;
        byte[] $r4;

        r0 := @this: org.spongycastle.cert.selector.X509CertificateHolderSelector;

        $r1 = new org.spongycastle.cert.selector.X509CertificateHolderSelector;

        $r2 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: org.spongycastle.asn1.x500.X500Name issuer>;

        $r3 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: java.math.BigInteger serialNumber>;

        $r4 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: byte[] subjectKeyId>;

        specialinvoke $r1.<org.spongycastle.cert.selector.X509CertificateHolderSelector: void <init>(org.spongycastle.asn1.x500.X500Name,java.math.BigInteger,byte[])>($r2, $r3, $r4);

        return $r1;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.cert.selector.X509CertificateHolderSelector r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        byte[] $r3, $r4;
        java.math.BigInteger $r5, $r6;
        org.spongycastle.asn1.x500.X500Name $r7, $r8;

        r0 := @this: org.spongycastle.cert.selector.X509CertificateHolderSelector;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.spongycastle.cert.selector.X509CertificateHolderSelector;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.cert.selector.X509CertificateHolderSelector) $r1;

        $r3 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: byte[] subjectKeyId>;

        $r4 = r2.<org.spongycastle.cert.selector.X509CertificateHolderSelector: byte[] subjectKeyId>;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r3, $r4);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: java.math.BigInteger serialNumber>;

        $r6 = r2.<org.spongycastle.cert.selector.X509CertificateHolderSelector: java.math.BigInteger serialNumber>;

        $z0 = specialinvoke r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: boolean equalsObj(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 == 0 goto label2;

        $r7 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: org.spongycastle.asn1.x500.X500Name issuer>;

        $r8 = r2.<org.spongycastle.cert.selector.X509CertificateHolderSelector: org.spongycastle.asn1.x500.X500Name issuer>;

        $z0 = specialinvoke r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: boolean equalsObj(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }
    public org.spongycastle.asn1.x500.X500Name getIssuer()
    {
        org.spongycastle.cert.selector.X509CertificateHolderSelector r0;
        org.spongycastle.asn1.x500.X500Name r1;

        r0 := @this: org.spongycastle.cert.selector.X509CertificateHolderSelector;

        r1 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: org.spongycastle.asn1.x500.X500Name issuer>;

        return r1;
    }
    public java.math.BigInteger getSerialNumber()
    {
        org.spongycastle.cert.selector.X509CertificateHolderSelector r0;
        java.math.BigInteger r1;

        r0 := @this: org.spongycastle.cert.selector.X509CertificateHolderSelector;

        r1 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: java.math.BigInteger serialNumber>;

        return r1;
    }
    public byte[] getSubjectKeyIdentifier()
    {
        org.spongycastle.cert.selector.X509CertificateHolderSelector r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.cert.selector.X509CertificateHolderSelector;

        $r1 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: byte[] subjectKeyId>;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        return $r1;
    }
    public int hashCode()
    {
        org.spongycastle.cert.selector.X509CertificateHolderSelector r0;
        byte[] $r1;
        int $i0, i1;
        java.math.BigInteger $r2;
        org.spongycastle.asn1.x500.X500Name $r3;

        r0 := @this: org.spongycastle.cert.selector.X509CertificateHolderSelector;

        $r1 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: byte[] subjectKeyId>;

        $i0 = staticinvoke <org.spongycastle.util.Arrays: int hashCode(byte[])>($r1);

        i1 = $i0;

        $r2 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: java.math.BigInteger serialNumber>;

        if $r2 == null goto label1;

        $r2 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: java.math.BigInteger serialNumber>;

        i1 = virtualinvoke $r2.<java.math.BigInteger: int hashCode()>();

        i1 = $i0 ^ i1;

     label1:
        $r3 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: org.spongycastle.asn1.x500.X500Name issuer>;

        if $r3 == null goto label2;

        $r3 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: org.spongycastle.asn1.x500.X500Name issuer>;

        $i0 = virtualinvoke $r3.<org.spongycastle.asn1.x500.X500Name: int hashCode()>();

        $i0 = i1 ^ $i0;

        return $i0;

     label2:
        return i1;
    }
    public boolean match(java.lang.Object)
    {
        org.spongycastle.cert.selector.X509CertificateHolderSelector r0;
        org.spongycastle.asn1.cms.IssuerAndSerialNumber r1;
        java.lang.Object r2;
        boolean $z0;
        org.spongycastle.cert.X509CertificateHolder r3;
        java.math.BigInteger $r4, $r9;
        org.spongycastle.asn1.x509.Certificate $r5;
        org.spongycastle.asn1.x500.X500Name $r6, $r7;
        org.spongycastle.asn1.ASN1Integer $r8;
        byte[] $r10, $r14;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r11;
        org.spongycastle.asn1.x509.Extension $r12;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r13;
        org.spongycastle.asn1.ASN1Encodable $r15;
        org.spongycastle.asn1.ASN1OctetString $r16;

        r0 := @this: org.spongycastle.cert.selector.X509CertificateHolderSelector;

        r2 := @parameter0: java.lang.Object;

        $z0 = r2 instanceof org.spongycastle.cert.X509CertificateHolder;

        if $z0 == 0 goto label3;

        r3 = (org.spongycastle.cert.X509CertificateHolder) r2;

        $r4 = virtualinvoke r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: java.math.BigInteger getSerialNumber()>();

        if $r4 == null goto label1;

        r1 = new org.spongycastle.asn1.cms.IssuerAndSerialNumber;

        $r5 = virtualinvoke r3.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate toASN1Structure()>();

        specialinvoke r1.<org.spongycastle.asn1.cms.IssuerAndSerialNumber: void <init>(org.spongycastle.asn1.x509.Certificate)>($r5);

        $r6 = virtualinvoke r1.<org.spongycastle.asn1.cms.IssuerAndSerialNumber: org.spongycastle.asn1.x500.X500Name getName()>();

        $r7 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: org.spongycastle.asn1.x500.X500Name issuer>;

        $z0 = virtualinvoke $r6.<org.spongycastle.asn1.x500.X500Name: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label4;

        $r8 = virtualinvoke r1.<org.spongycastle.asn1.cms.IssuerAndSerialNumber: org.spongycastle.asn1.ASN1Integer getSerialNumber()>();

        $r4 = virtualinvoke $r8.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $r9 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: java.math.BigInteger serialNumber>;

        $z0 = virtualinvoke $r4.<java.math.BigInteger: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label4;

        return 1;

     label1:
        $r10 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: byte[] subjectKeyId>;

        if $r10 == null goto label4;

        $r11 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier subjectKeyIdentifier>;

        $r12 = virtualinvoke r3.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r11);

        if $r12 != null goto label2;

        $r10 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: byte[] subjectKeyId>;

        $r13 = virtualinvoke r3.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

        $r14 = staticinvoke <org.spongycastle.cert.selector.MSOutlookKeyIdCalculator: byte[] calculateKeyId(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r13);

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r10, $r14);

        return $z0;

     label2:
        $r15 = virtualinvoke $r12.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1Encodable getParsedValue()>();

        $r16 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r15);

        $r10 = virtualinvoke $r16.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r14 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: byte[] subjectKeyId>;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r14, $r10);

        return $z0;

     label3:
        $z0 = r2 instanceof byte[];

        if $z0 == 0 goto label4;

        $r10 = r0.<org.spongycastle.cert.selector.X509CertificateHolderSelector: byte[] subjectKeyId>;

        $r14 = (byte[]) r2;

        $z0 = staticinvoke <org.spongycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r10, $r14);

        return $z0;

     label4:
        return 0;
    }
