org.spongycastle.cert.selector.jcajce.JcaSelectorConverter extends java.lang.Object
    public void <init>()
    {
        org.spongycastle.cert.selector.jcajce.JcaSelectorConverter r0;

        r0 := @this: org.spongycastle.cert.selector.jcajce.JcaSelectorConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.spongycastle.cert.selector.X509CertificateHolderSelector getCertificateHolderSelector(java.security.cert.X509CertSelector)
    {
        org.spongycastle.cert.selector.jcajce.JcaSelectorConverter r0;
        java.security.cert.X509CertSelector $r1;
        java.io.IOException r2;
        byte[] $r3;
        org.spongycastle.cert.selector.X509CertificateHolderSelector $r4;
        org.spongycastle.asn1.x500.X500Name $r5;
        java.math.BigInteger $r6;
        org.spongycastle.asn1.ASN1OctetString $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        r0 := @this: org.spongycastle.cert.selector.jcajce.JcaSelectorConverter;

        $r1 := @parameter0: java.security.cert.X509CertSelector;

     label1:
        $r3 = virtualinvoke $r1.<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>();

     label2:
        if $r3 == null goto label5;

        $r4 = new org.spongycastle.cert.selector.X509CertificateHolderSelector;

     label3:
        $r3 = virtualinvoke $r1.<java.security.cert.X509CertSelector: byte[] getIssuerAsBytes()>();

        $r5 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r1.<java.security.cert.X509CertSelector: java.math.BigInteger getSerialNumber()>();

        $r3 = virtualinvoke $r1.<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()>();

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r4.<org.spongycastle.cert.selector.X509CertificateHolderSelector: void <init>(org.spongycastle.asn1.x500.X500Name,java.math.BigInteger,byte[])>($r5, $r6, $r3);

     label4:
        return $r4;

     label5:
        $r4 = new org.spongycastle.cert.selector.X509CertificateHolderSelector;

     label6:
        $r3 = virtualinvoke $r1.<java.security.cert.X509CertSelector: byte[] getIssuerAsBytes()>();

        $r5 = staticinvoke <org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.X500Name getInstance(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r1.<java.security.cert.X509CertSelector: java.math.BigInteger getSerialNumber()>();

        specialinvoke $r4.<org.spongycastle.cert.selector.X509CertificateHolderSelector: void <init>(org.spongycastle.asn1.x500.X500Name,java.math.BigInteger)>($r5, $r6);

     label7:
        return $r4;

     label8:
        r2 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to convert issuer: ");

        $r10 = virtualinvoke r2.<java.io.IOException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r8;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }
