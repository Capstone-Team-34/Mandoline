org.spongycastle.cert.selector.jcajce.JcaX509CertSelectorConverter extends java.lang.Object
    public void <init>()
    {
        org.spongycastle.cert.selector.jcajce.JcaX509CertSelectorConverter r0;

        r0 := @this: org.spongycastle.cert.selector.jcajce.JcaX509CertSelectorConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    protected java.security.cert.X509CertSelector doConversion(org.spongycastle.asn1.x500.X500Name, java.math.BigInteger, byte[])
    {
        org.spongycastle.cert.selector.jcajce.JcaX509CertSelectorConverter r0;
        org.spongycastle.asn1.x500.X500Name $r1;
        java.math.BigInteger $r2;
        byte[] $r3, $r5;
        java.security.cert.X509CertSelector r4;
        org.spongycastle.asn1.DEROctetString $r6;
        java.io.IOException r7, r11;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        r0 := @this: org.spongycastle.cert.selector.jcajce.JcaX509CertSelectorConverter;

        $r1 := @parameter0: org.spongycastle.asn1.x500.X500Name;

        $r2 := @parameter1: java.math.BigInteger;

        $r3 := @parameter2: byte[];

        r4 = new java.security.cert.X509CertSelector;

        specialinvoke r4.<java.security.cert.X509CertSelector: void <init>()>();

        if $r1 == null goto label2;

     label1:
        $r5 = virtualinvoke $r1.<org.spongycastle.asn1.x500.X500Name: byte[] getEncoded()>();

        virtualinvoke r4.<java.security.cert.X509CertSelector: void setIssuer(byte[])>($r5);

     label2:
        if $r2 == null goto label3;

        virtualinvoke r4.<java.security.cert.X509CertSelector: void setSerialNumber(java.math.BigInteger)>($r2);

     label3:
        if $r3 == null goto label8;

        $r6 = new org.spongycastle.asn1.DEROctetString;

     label4:
        specialinvoke $r6.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r3);

        $r3 = virtualinvoke $r6.<org.spongycastle.asn1.DEROctetString: byte[] getEncoded()>();

        virtualinvoke r4.<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>($r3);

     label5:
        return r4;

     label6:
        r7 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to convert issuer: ");

        $r10 = virtualinvoke r7.<java.io.IOException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label7:
        r11 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to convert issuer: ");

        $r10 = virtualinvoke r11.<java.io.IOException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label8:
        return r4;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label4 to label5 with label7;
    }
    public java.security.cert.X509CertSelector getCertSelector(org.spongycastle.cert.selector.X509CertificateHolderSelector)
    {
        org.spongycastle.cert.selector.jcajce.JcaX509CertSelectorConverter r0;
        org.spongycastle.cert.selector.X509CertificateHolderSelector $r1;
        org.spongycastle.asn1.x500.X500Name $r2;
        java.math.BigInteger $r3;
        byte[] $r4;
        java.security.cert.X509CertSelector $r5;

        r0 := @this: org.spongycastle.cert.selector.jcajce.JcaX509CertSelectorConverter;

        $r1 := @parameter0: org.spongycastle.cert.selector.X509CertificateHolderSelector;

        $r2 = virtualinvoke $r1.<org.spongycastle.cert.selector.X509CertificateHolderSelector: org.spongycastle.asn1.x500.X500Name getIssuer()>();

        $r3 = virtualinvoke $r1.<org.spongycastle.cert.selector.X509CertificateHolderSelector: java.math.BigInteger getSerialNumber()>();

        $r4 = virtualinvoke $r1.<org.spongycastle.cert.selector.X509CertificateHolderSelector: byte[] getSubjectKeyIdentifier()>();

        $r5 = virtualinvoke r0.<org.spongycastle.cert.selector.jcajce.JcaX509CertSelectorConverter: java.security.cert.X509CertSelector doConversion(org.spongycastle.asn1.x500.X500Name,java.math.BigInteger,byte[])>($r2, $r3, $r4);

        return $r5;
    }
