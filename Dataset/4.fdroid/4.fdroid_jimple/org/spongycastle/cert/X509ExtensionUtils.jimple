org.spongycastle.cert.X509ExtensionUtils extends java.lang.Object
private org.spongycastle.operator.DigestCalculator calculator
    public void <init>(org.spongycastle.operator.DigestCalculator)
    {
        org.spongycastle.cert.X509ExtensionUtils r0;
        org.spongycastle.operator.DigestCalculator $r1;

        r0 := @this: org.spongycastle.cert.X509ExtensionUtils;

        $r1 := @parameter0: org.spongycastle.operator.DigestCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.X509ExtensionUtils: org.spongycastle.operator.DigestCalculator calculator> = $r1;

        return;
    }
    private byte[] calculateIdentifier(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)
    {
        org.spongycastle.cert.X509ExtensionUtils r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        java.io.IOException r2;
        org.spongycastle.asn1.DERBitString $r3;
        byte[] $r4;
        org.spongycastle.operator.DigestCalculator $r5;
        java.io.OutputStream $r6;
        org.spongycastle.cert.CertRuntimeException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        r0 := @this: org.spongycastle.cert.X509ExtensionUtils;

        $r1 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r3 = virtualinvoke $r1.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.DERBitString getPublicKeyData()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        $r5 = r0.<org.spongycastle.cert.X509ExtensionUtils: org.spongycastle.operator.DigestCalculator calculator>;

        $r6 = interfaceinvoke $r5.<org.spongycastle.operator.DigestCalculator: java.io.OutputStream getOutputStream()>();

     label1:
        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r4);

        virtualinvoke $r6.<java.io.OutputStream: void close()>();

     label2:
        $r5 = r0.<org.spongycastle.cert.X509ExtensionUtils: org.spongycastle.operator.DigestCalculator calculator>;

        $r4 = interfaceinvoke $r5.<org.spongycastle.operator.DigestCalculator: byte[] getDigest()>();

        return $r4;

     label3:
        r2 := @caughtexception;

        $r7 = new org.spongycastle.cert.CertRuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to calculate identifier: ");

        $r9 = virtualinvoke r2.<java.io.IOException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.spongycastle.cert.CertRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r9, r2);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }
    private byte[] getSubjectKeyIdentifier(org.spongycastle.cert.X509CertificateHolder)
    {
        org.spongycastle.cert.X509ExtensionUtils r0;
        org.spongycastle.cert.X509CertificateHolder $r1;
        int $i0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r2;
        byte[] $r3;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r4;
        org.spongycastle.asn1.x509.Extension $r5;
        org.spongycastle.asn1.ASN1Encodable $r6;
        org.spongycastle.asn1.ASN1OctetString $r7;

        r0 := @this: org.spongycastle.cert.X509ExtensionUtils;

        $r1 := @parameter0: org.spongycastle.cert.X509CertificateHolder;

        $i0 = virtualinvoke $r1.<org.spongycastle.cert.X509CertificateHolder: int getVersionNumber()>();

        if $i0 == 3 goto label1;

        $r2 = virtualinvoke $r1.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

        $r3 = specialinvoke r0.<org.spongycastle.cert.X509ExtensionUtils: byte[] calculateIdentifier(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r2);

        return $r3;

     label1:
        $r4 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier subjectKeyIdentifier>;

        $r5 = virtualinvoke $r1.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r4);

        if $r5 == null goto label2;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1Encodable getParsedValue()>();

        $r7 = staticinvoke <org.spongycastle.asn1.ASN1OctetString: org.spongycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r6);

        $r3 = virtualinvoke $r7.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        return $r3;

     label2:
        $r2 = virtualinvoke $r1.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

        $r3 = specialinvoke r0.<org.spongycastle.cert.X509ExtensionUtils: byte[] calculateIdentifier(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r2);

        return $r3;
    }
    public org.spongycastle.asn1.x509.AuthorityKeyIdentifier createAuthorityKeyIdentifier(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)
    {
        org.spongycastle.cert.X509ExtensionUtils r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        org.spongycastle.asn1.x509.AuthorityKeyIdentifier $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.cert.X509ExtensionUtils;

        $r1 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r2 = new org.spongycastle.asn1.x509.AuthorityKeyIdentifier;

        $r3 = specialinvoke r0.<org.spongycastle.cert.X509ExtensionUtils: byte[] calculateIdentifier(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r1);

        specialinvoke $r2.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(byte[])>($r3);

        return $r2;
    }
    public org.spongycastle.asn1.x509.AuthorityKeyIdentifier createAuthorityKeyIdentifier(org.spongycastle.asn1.x509.SubjectPublicKeyInfo, org.spongycastle.asn1.x509.GeneralNames, java.math.BigInteger)
    {
        org.spongycastle.cert.X509ExtensionUtils r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        org.spongycastle.asn1.x509.GeneralNames $r2;
        java.math.BigInteger $r3;
        org.spongycastle.asn1.x509.AuthorityKeyIdentifier $r4;
        byte[] $r5;

        r0 := @this: org.spongycastle.cert.X509ExtensionUtils;

        $r1 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r2 := @parameter1: org.spongycastle.asn1.x509.GeneralNames;

        $r3 := @parameter2: java.math.BigInteger;

        $r4 = new org.spongycastle.asn1.x509.AuthorityKeyIdentifier;

        $r5 = specialinvoke r0.<org.spongycastle.cert.X509ExtensionUtils: byte[] calculateIdentifier(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r1);

        specialinvoke $r4.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(byte[],org.spongycastle.asn1.x509.GeneralNames,java.math.BigInteger)>($r5, $r2, $r3);

        return $r4;
    }
    public org.spongycastle.asn1.x509.AuthorityKeyIdentifier createAuthorityKeyIdentifier(org.spongycastle.cert.X509CertificateHolder)
    {
        org.spongycastle.cert.X509ExtensionUtils r0;
        org.spongycastle.cert.X509CertificateHolder $r1;
        org.spongycastle.asn1.x509.GeneralName r2;
        org.spongycastle.asn1.x509.GeneralNames $r3;
        org.spongycastle.asn1.x500.X500Name $r4;
        org.spongycastle.asn1.x509.AuthorityKeyIdentifier $r5;
        byte[] $r6;
        java.math.BigInteger $r7;

        r0 := @this: org.spongycastle.cert.X509ExtensionUtils;

        $r1 := @parameter0: org.spongycastle.cert.X509CertificateHolder;

        r2 = new org.spongycastle.asn1.x509.GeneralName;

        $r4 = virtualinvoke $r1.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x500.X500Name getIssuer()>();

        specialinvoke r2.<org.spongycastle.asn1.x509.GeneralName: void <init>(org.spongycastle.asn1.x500.X500Name)>($r4);

        $r5 = new org.spongycastle.asn1.x509.AuthorityKeyIdentifier;

        $r6 = specialinvoke r0.<org.spongycastle.cert.X509ExtensionUtils: byte[] getSubjectKeyIdentifier(org.spongycastle.cert.X509CertificateHolder)>($r1);

        $r3 = new org.spongycastle.asn1.x509.GeneralNames;

        specialinvoke $r3.<org.spongycastle.asn1.x509.GeneralNames: void <init>(org.spongycastle.asn1.x509.GeneralName)>(r2);

        $r7 = virtualinvoke $r1.<org.spongycastle.cert.X509CertificateHolder: java.math.BigInteger getSerialNumber()>();

        specialinvoke $r5.<org.spongycastle.asn1.x509.AuthorityKeyIdentifier: void <init>(byte[],org.spongycastle.asn1.x509.GeneralNames,java.math.BigInteger)>($r6, $r3, $r7);

        return $r5;
    }
    public org.spongycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyIdentifier(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)
    {
        org.spongycastle.cert.X509ExtensionUtils r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        org.spongycastle.asn1.x509.SubjectKeyIdentifier $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.cert.X509ExtensionUtils;

        $r1 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r2 = new org.spongycastle.asn1.x509.SubjectKeyIdentifier;

        $r3 = specialinvoke r0.<org.spongycastle.cert.X509ExtensionUtils: byte[] calculateIdentifier(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r1);

        specialinvoke $r2.<org.spongycastle.asn1.x509.SubjectKeyIdentifier: void <init>(byte[])>($r3);

        return $r2;
    }
    public org.spongycastle.asn1.x509.SubjectKeyIdentifier createTruncatedSubjectKeyIdentifier(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)
    {
        org.spongycastle.cert.X509ExtensionUtils r0;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r1;
        byte[] r2, $r3;
        int $i0, $i1;
        byte $b2;
        org.spongycastle.asn1.x509.SubjectKeyIdentifier $r4;

        r0 := @this: org.spongycastle.cert.X509ExtensionUtils;

        $r1 := @parameter0: org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r3 = specialinvoke r0.<org.spongycastle.cert.X509ExtensionUtils: byte[] calculateIdentifier(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r1);

        r2 = newarray (byte)[8];

        $i0 = lengthof $r3;

        $i1 = $i0 + -8;

        $i0 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, r2, 0, $i0);

        $b2 = r2[0];

        $i0 = $b2 & 15;

        $b2 = (byte) $i0;

        r2[0] = $b2;

        $b2 = r2[0];

        $i0 = $b2 | 64;

        $b2 = (byte) $i0;

        r2[0] = $b2;

        $r4 = new org.spongycastle.asn1.x509.SubjectKeyIdentifier;

        specialinvoke $r4.<org.spongycastle.asn1.x509.SubjectKeyIdentifier: void <init>(byte[])>(r2);

        return $r4;
    }
