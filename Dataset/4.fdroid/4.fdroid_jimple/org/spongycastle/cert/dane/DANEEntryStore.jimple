org.spongycastle.cert.dane.DANEEntryStore extends java.lang.Object implements org.spongycastle.util.Store
private final java.util.Map entries
    void <init>(java.util.List)
    {
        org.spongycastle.cert.dane.DANEEntryStore r0;
        java.util.List $r1;
        java.util.HashMap r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.spongycastle.cert.dane.DANEEntry r5;
        java.lang.String $r6;
        java.util.Map $r7;

        r0 := @this: org.spongycastle.cert.dane.DANEEntryStore;

        $r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.spongycastle.cert.dane.DANEEntry) $r4;

        $r6 = virtualinvoke r5.<org.spongycastle.cert.dane.DANEEntry: java.lang.String getDomainName()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r5);

        goto label1;

     label2:
        $r7 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r2);

        r0.<org.spongycastle.cert.dane.DANEEntryStore: java.util.Map entries> = $r7;

        return;
    }
    public java.util.Collection getMatches(org.spongycastle.util.Selector) throws org.spongycastle.util.StoreException
    {
        org.spongycastle.cert.dane.DANEEntryStore r0;
        org.spongycastle.util.Selector $r1;
        java.util.ArrayList r2;
        java.util.Map $r3;
        java.util.Collection $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.util.List $r7;

        r0 := @this: org.spongycastle.cert.dane.DANEEntryStore;

        $r1 := @parameter0: org.spongycastle.util.Selector;

        if $r1 != null goto label1;

        $r3 = r0.<org.spongycastle.cert.dane.DANEEntryStore: java.util.Map entries>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        return $r4;

     label1:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<org.spongycastle.cert.dane.DANEEntryStore: java.util.Map entries>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $z0 = interfaceinvoke $r1.<org.spongycastle.util.Selector: boolean match(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r2);

        return $r7;
    }
    public org.spongycastle.util.Store toCertificateStore()
    {
        org.spongycastle.cert.dane.DANEEntryStore r0;
        java.util.ArrayList r1;
        java.util.Collection $r2;
        int $i0;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.spongycastle.cert.dane.DANEEntry r5;
        org.spongycastle.cert.X509CertificateHolder $r6;
        org.spongycastle.util.CollectionStore $r7;

        r0 := @this: org.spongycastle.cert.dane.DANEEntryStore;

        $r2 = virtualinvoke r0.<org.spongycastle.cert.dane.DANEEntryStore: java.util.Collection getMatches(org.spongycastle.util.Selector)>(null);

        r1 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        specialinvoke r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.spongycastle.cert.dane.DANEEntry) $r4;

        $r6 = virtualinvoke r5.<org.spongycastle.cert.dane.DANEEntry: org.spongycastle.cert.X509CertificateHolder getCertificate()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r7 = new org.spongycastle.util.CollectionStore;

        specialinvoke $r7.<org.spongycastle.util.CollectionStore: void <init>(java.util.Collection)>(r1);

        return $r7;
    }
