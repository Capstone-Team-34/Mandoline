org.spongycastle.cert.dane.DANEEntrySelectorFactory extends java.lang.Object
private final org.spongycastle.operator.DigestCalculator digestCalculator
    public void <init>(org.spongycastle.operator.DigestCalculator)
    {
        org.spongycastle.cert.dane.DANEEntrySelectorFactory r0;
        org.spongycastle.operator.DigestCalculator $r1;

        r0 := @this: org.spongycastle.cert.dane.DANEEntrySelectorFactory;

        $r1 := @parameter0: org.spongycastle.operator.DigestCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.dane.DANEEntrySelectorFactory: org.spongycastle.operator.DigestCalculator digestCalculator> = $r1;

        return;
    }
    public org.spongycastle.cert.dane.DANEEntrySelector createSelector(java.lang.String) throws org.spongycastle.cert.dane.DANEException
    {
        org.spongycastle.cert.dane.DANEEntrySelectorFactory r0;
        java.lang.String $r1, $r3;
        java.io.IOException r2;
        int $i0;
        byte[] $r4;
        org.spongycastle.operator.DigestCalculator $r5;
        java.io.OutputStream $r6;
        java.lang.StringBuilder $r7;
        org.spongycastle.cert.dane.DANEEntrySelector $r8;
        org.spongycastle.cert.dane.DANEException $r9;

        r0 := @this: org.spongycastle.cert.dane.DANEEntrySelectorFactory;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r4 = staticinvoke <org.spongycastle.util.Strings: byte[] toUTF8ByteArray(java.lang.String)>($r3);

        $r5 = r0.<org.spongycastle.cert.dane.DANEEntrySelectorFactory: org.spongycastle.operator.DigestCalculator digestCalculator>;

     label1:
        $r6 = interfaceinvoke $r5.<org.spongycastle.operator.DigestCalculator: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r4);

        virtualinvoke $r6.<java.io.OutputStream: void close()>();

     label2:
        $r5 = r0.<org.spongycastle.cert.dane.DANEEntrySelectorFactory: org.spongycastle.operator.DigestCalculator digestCalculator>;

        $r4 = interfaceinvoke $r5.<org.spongycastle.operator.DigestCalculator: byte[] getDigest()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <org.spongycastle.util.encoders.Hex: byte[] encode(byte[])>($r4);

        $r3 = staticinvoke <org.spongycastle.util.Strings: java.lang.String fromByteArray(byte[])>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("._smimecert.");

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new org.spongycastle.cert.dane.DANEEntrySelector;

        specialinvoke $r8.<org.spongycastle.cert.dane.DANEEntrySelector: void <init>(java.lang.String)>($r1);

        return $r8;

     label3:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cert.dane.DANEException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to calculate digest string: ");

        $r1 = virtualinvoke r2.<java.io.IOException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cert.dane.DANEException: void <init>(java.lang.String,java.lang.Throwable)>($r1, r2);

        throw $r9;

        catch java.io.IOException from label1 to label2 with label3;
    }
