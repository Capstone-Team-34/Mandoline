org.spongycastle.cert.dane.DANEEntry extends java.lang.Object
static final int CERT_USAGE
static final int MATCHING_TYPE
static final int SELECTOR
private final org.spongycastle.cert.X509CertificateHolder certHolder
private final java.lang.String domainName
private final byte[] flags
    public void <init>(java.lang.String, byte[]) throws java.io.IOException
    {
        org.spongycastle.cert.dane.DANEEntry r0;
        java.lang.String $r1;
        byte[] $r2, $r4;
        org.spongycastle.cert.X509CertificateHolder $r3;
        int $i0;

        r0 := @this: org.spongycastle.cert.dane.DANEEntry;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        $r4 = staticinvoke <org.spongycastle.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r2, 0, 3);

        $r3 = new org.spongycastle.cert.X509CertificateHolder;

        $i0 = lengthof $r2;

        $r2 = staticinvoke <org.spongycastle.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r2, 3, $i0);

        specialinvoke $r3.<org.spongycastle.cert.X509CertificateHolder: void <init>(byte[])>($r2);

        specialinvoke r0.<org.spongycastle.cert.dane.DANEEntry: void <init>(java.lang.String,byte[],org.spongycastle.cert.X509CertificateHolder)>($r1, $r4, $r3);

        return;
    }
    void <init>(java.lang.String, byte[], org.spongycastle.cert.X509CertificateHolder)
    {
        org.spongycastle.cert.dane.DANEEntry r0;
        java.lang.String $r1;
        byte[] $r2;
        org.spongycastle.cert.X509CertificateHolder $r3;

        r0 := @this: org.spongycastle.cert.dane.DANEEntry;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: org.spongycastle.cert.X509CertificateHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.dane.DANEEntry: byte[] flags> = $r2;

        r0.<org.spongycastle.cert.dane.DANEEntry: java.lang.String domainName> = $r1;

        r0.<org.spongycastle.cert.dane.DANEEntry: org.spongycastle.cert.X509CertificateHolder certHolder> = $r3;

        return;
    }
    public static boolean isValidCertificate(byte[])
    {
        byte[] $r0;
        byte $b0;

        $r0 := @parameter0: byte[];

        $b0 = $r0[0];

        if $b0 != 3 goto label1;

        $b0 = $r0[1];

        if $b0 != 0 goto label1;

        $b0 = $r0[2];

        if $b0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public org.spongycastle.cert.X509CertificateHolder getCertificate()
    {
        org.spongycastle.cert.dane.DANEEntry r0;
        org.spongycastle.cert.X509CertificateHolder r1;

        r0 := @this: org.spongycastle.cert.dane.DANEEntry;

        r1 = r0.<org.spongycastle.cert.dane.DANEEntry: org.spongycastle.cert.X509CertificateHolder certHolder>;

        return r1;
    }
    public java.lang.String getDomainName()
    {
        org.spongycastle.cert.dane.DANEEntry r0;
        java.lang.String r1;

        r0 := @this: org.spongycastle.cert.dane.DANEEntry;

        r1 = r0.<org.spongycastle.cert.dane.DANEEntry: java.lang.String domainName>;

        return r1;
    }
    public byte[] getFlags()
    {
        org.spongycastle.cert.dane.DANEEntry r0;
        byte[] $r1;

        r0 := @this: org.spongycastle.cert.dane.DANEEntry;

        $r1 = r0.<org.spongycastle.cert.dane.DANEEntry: byte[] flags>;

        $r1 = staticinvoke <org.spongycastle.util.Arrays: byte[] clone(byte[])>($r1);

        return $r1;
    }
    public byte[] getRDATA() throws java.io.IOException
    {
        org.spongycastle.cert.dane.DANEEntry r0;
        byte[] r1, $r2, $r4, $r5;
        org.spongycastle.cert.X509CertificateHolder $r3;
        int $i0, $i1;

        r0 := @this: org.spongycastle.cert.dane.DANEEntry;

        $r3 = r0.<org.spongycastle.cert.dane.DANEEntry: org.spongycastle.cert.X509CertificateHolder certHolder>;

        $r2 = virtualinvoke $r3.<org.spongycastle.cert.X509CertificateHolder: byte[] getEncoded()>();

        r1 = r0.<org.spongycastle.cert.dane.DANEEntry: byte[] flags>;

        $i0 = lengthof r1;

        $i1 = lengthof $r2;

        $i0 = $i0 + $i1;

        r1 = newarray (byte)[$i0];

        $r4 = r0.<org.spongycastle.cert.dane.DANEEntry: byte[] flags>;

        $r5 = r0.<org.spongycastle.cert.dane.DANEEntry: byte[] flags>;

        $i0 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, 0, $i0);

        $r4 = r0.<org.spongycastle.cert.dane.DANEEntry: byte[] flags>;

        $i0 = lengthof $r4;

        $i1 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, $i0, $i1);

        return r1;
    }
