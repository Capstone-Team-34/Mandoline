org.spongycastle.cert.ocsp.CertificateID extends java.lang.Object
public static final org.spongycastle.asn1.x509.AlgorithmIdentifier HASH_SHA1
private final org.spongycastle.asn1.ocsp.CertID id
    static void <clinit>()
    {
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.DERNull $r2;

        $r0 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r1 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier idSHA1>;

        $r2 = <org.spongycastle.asn1.DERNull: org.spongycastle.asn1.DERNull INSTANCE>;

        specialinvoke $r0.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r1, $r2);

        <org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.x509.AlgorithmIdentifier HASH_SHA1> = $r0;

        return;
    }
    public void <init>(org.spongycastle.asn1.ocsp.CertID)
    {
        org.spongycastle.cert.ocsp.CertificateID r0;
        org.spongycastle.asn1.ocsp.CertID $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.spongycastle.cert.ocsp.CertificateID;

        $r1 := @parameter0: org.spongycastle.asn1.ocsp.CertID;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'id\' cannot be null");

        throw $r2;

     label1:
        r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id> = $r1;

        return;
    }
    public void <init>(org.spongycastle.operator.DigestCalculator, org.spongycastle.cert.X509CertificateHolder, java.math.BigInteger) throws org.spongycastle.cert.ocsp.OCSPException
    {
        org.spongycastle.cert.ocsp.CertificateID r0;
        org.spongycastle.operator.DigestCalculator $r1;
        org.spongycastle.cert.X509CertificateHolder $r2;
        java.math.BigInteger $r3;
        org.spongycastle.asn1.ocsp.CertID $r4;
        org.spongycastle.asn1.ASN1Integer $r5;

        r0 := @this: org.spongycastle.cert.ocsp.CertificateID;

        $r1 := @parameter0: org.spongycastle.operator.DigestCalculator;

        $r2 := @parameter1: org.spongycastle.cert.X509CertificateHolder;

        $r3 := @parameter2: java.math.BigInteger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r5.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r3);

        $r4 = staticinvoke <org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID createCertID(org.spongycastle.operator.DigestCalculator,org.spongycastle.cert.X509CertificateHolder,org.spongycastle.asn1.ASN1Integer)>($r1, $r2, $r5);

        r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id> = $r4;

        return;
    }
    private static org.spongycastle.asn1.ocsp.CertID createCertID(org.spongycastle.operator.DigestCalculator, org.spongycastle.cert.X509CertificateHolder, org.spongycastle.asn1.ASN1Integer) throws org.spongycastle.cert.ocsp.OCSPException
    {
        org.spongycastle.operator.DigestCalculator $r0;
        org.spongycastle.cert.X509CertificateHolder $r1;
        org.spongycastle.asn1.ASN1Integer $r2;
        java.lang.Exception r3;
        org.spongycastle.asn1.DEROctetString r4, r5;
        java.io.OutputStream $r6;
        org.spongycastle.asn1.x509.Certificate $r7;
        org.spongycastle.asn1.x500.X500Name $r8;
        byte[] $r9;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r10;
        org.spongycastle.asn1.DERBitString $r11;
        org.spongycastle.asn1.ocsp.CertID $r12;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r13;
        org.spongycastle.cert.ocsp.OCSPException $r14;
        java.lang.StringBuilder $r15;
        java.lang.String $r16;

        $r0 := @parameter0: org.spongycastle.operator.DigestCalculator;

        $r1 := @parameter1: org.spongycastle.cert.X509CertificateHolder;

        $r2 := @parameter2: org.spongycastle.asn1.ASN1Integer;

     label1:
        $r6 = interfaceinvoke $r0.<org.spongycastle.operator.DigestCalculator: java.io.OutputStream getOutputStream()>();

        $r7 = virtualinvoke $r1.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate toASN1Structure()>();

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x500.X500Name getSubject()>();

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.x500.X500Name: byte[] getEncoded(java.lang.String)>("DER");

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r9);

        virtualinvoke $r6.<java.io.OutputStream: void close()>();

     label2:
        r5 = new org.spongycastle.asn1.DEROctetString;

     label3:
        $r9 = interfaceinvoke $r0.<org.spongycastle.operator.DigestCalculator: byte[] getDigest()>();

        specialinvoke r5.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r9);

        $r10 = virtualinvoke $r1.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

        $r6 = interfaceinvoke $r0.<org.spongycastle.operator.DigestCalculator: java.io.OutputStream getOutputStream()>();

        $r11 = virtualinvoke $r10.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.DERBitString getPublicKeyData()>();

        $r9 = virtualinvoke $r11.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r9);

        virtualinvoke $r6.<java.io.OutputStream: void close()>();

     label4:
        r4 = new org.spongycastle.asn1.DEROctetString;

     label5:
        $r9 = interfaceinvoke $r0.<org.spongycastle.operator.DigestCalculator: byte[] getDigest()>();

        specialinvoke r4.<org.spongycastle.asn1.DEROctetString: void <init>(byte[])>($r9);

     label6:
        $r12 = new org.spongycastle.asn1.ocsp.CertID;

     label7:
        $r13 = interfaceinvoke $r0.<org.spongycastle.operator.DigestCalculator: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        specialinvoke $r12.<org.spongycastle.asn1.ocsp.CertID: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1OctetString,org.spongycastle.asn1.ASN1OctetString,org.spongycastle.asn1.ASN1Integer)>($r13, r5, r4, $r2);

     label8:
        return $r12;

     label9:
        r3 := @caughtexception;

        $r14 = new org.spongycastle.cert.ocsp.OCSPException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem creating ID: ");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.spongycastle.cert.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Throwable)>($r16, r3);

        throw $r14;

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }
    public static org.spongycastle.cert.ocsp.CertificateID deriveCertificateID(org.spongycastle.cert.ocsp.CertificateID, java.math.BigInteger)
    {
        org.spongycastle.cert.ocsp.CertificateID $r0, $r2;
        java.math.BigInteger $r1;
        org.spongycastle.asn1.ocsp.CertID $r3, $r5;
        org.spongycastle.asn1.ASN1Integer $r4;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r6;
        org.spongycastle.asn1.ASN1OctetString $r7, $r8;

        $r0 := @parameter0: org.spongycastle.cert.ocsp.CertificateID;

        $r1 := @parameter1: java.math.BigInteger;

        $r2 = new org.spongycastle.cert.ocsp.CertificateID;

        $r3 = new org.spongycastle.asn1.ocsp.CertID;

        $r5 = $r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ocsp.CertID: org.spongycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()>();

        $r5 = $r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

        $r7 = virtualinvoke $r5.<org.spongycastle.asn1.ocsp.CertID: org.spongycastle.asn1.ASN1OctetString getIssuerNameHash()>();

        $r5 = $r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

        $r8 = virtualinvoke $r5.<org.spongycastle.asn1.ocsp.CertID: org.spongycastle.asn1.ASN1OctetString getIssuerKeyHash()>();

        $r4 = new org.spongycastle.asn1.ASN1Integer;

        specialinvoke $r4.<org.spongycastle.asn1.ASN1Integer: void <init>(java.math.BigInteger)>($r1);

        specialinvoke $r3.<org.spongycastle.asn1.ocsp.CertID: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1OctetString,org.spongycastle.asn1.ASN1OctetString,org.spongycastle.asn1.ASN1Integer)>($r6, $r7, $r8, $r4);

        specialinvoke $r2.<org.spongycastle.cert.ocsp.CertificateID: void <init>(org.spongycastle.asn1.ocsp.CertID)>($r3);

        return $r2;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.cert.ocsp.CertificateID r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        org.spongycastle.asn1.ocsp.CertID $r3;
        org.spongycastle.asn1.ASN1Primitive $r4, $r5;

        r0 := @this: org.spongycastle.cert.ocsp.CertificateID;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.spongycastle.cert.ocsp.CertificateID;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.spongycastle.cert.ocsp.CertificateID) $r1;

        $r3 = r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ocsp.CertID: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r3 = r2.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.ocsp.CertID: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $z0 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getHashAlgOID()
    {
        org.spongycastle.cert.ocsp.CertificateID r0;
        org.spongycastle.asn1.ocsp.CertID $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;

        r0 := @this: org.spongycastle.cert.ocsp.CertificateID;

        $r1 = r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.CertID: org.spongycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        return $r3;
    }
    public byte[] getIssuerKeyHash()
    {
        org.spongycastle.cert.ocsp.CertificateID r0;
        org.spongycastle.asn1.ocsp.CertID $r1;
        org.spongycastle.asn1.ASN1OctetString $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.cert.ocsp.CertificateID;

        $r1 = r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.CertID: org.spongycastle.asn1.ASN1OctetString getIssuerKeyHash()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        return $r3;
    }
    public byte[] getIssuerNameHash()
    {
        org.spongycastle.cert.ocsp.CertificateID r0;
        org.spongycastle.asn1.ocsp.CertID $r1;
        org.spongycastle.asn1.ASN1OctetString $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.cert.ocsp.CertificateID;

        $r1 = r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.CertID: org.spongycastle.asn1.ASN1OctetString getIssuerNameHash()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        return $r3;
    }
    public java.math.BigInteger getSerialNumber()
    {
        org.spongycastle.cert.ocsp.CertificateID r0;
        org.spongycastle.asn1.ocsp.CertID $r1;
        org.spongycastle.asn1.ASN1Integer $r2;
        java.math.BigInteger $r3;

        r0 := @this: org.spongycastle.cert.ocsp.CertificateID;

        $r1 = r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.CertID: org.spongycastle.asn1.ASN1Integer getSerialNumber()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        return $r3;
    }
    public int hashCode()
    {
        org.spongycastle.cert.ocsp.CertificateID r0;
        org.spongycastle.asn1.ocsp.CertID $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        int $i0;

        r0 := @this: org.spongycastle.cert.ocsp.CertificateID;

        $r1 = r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.CertID: org.spongycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $i0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Primitive: int hashCode()>();

        return $i0;
    }
    public boolean matchesIssuer(org.spongycastle.cert.X509CertificateHolder, org.spongycastle.operator.DigestCalculatorProvider) throws org.spongycastle.cert.ocsp.OCSPException
    {
        org.spongycastle.cert.ocsp.CertificateID r0;
        org.spongycastle.cert.X509CertificateHolder $r1;
        org.spongycastle.operator.DigestCalculatorProvider $r2;
        org.spongycastle.operator.OperatorCreationException r3;
        org.spongycastle.asn1.ocsp.CertID $r4, $r8;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r5;
        org.spongycastle.operator.DigestCalculator $r6;
        org.spongycastle.asn1.ASN1Integer $r7;
        boolean $z0;
        org.spongycastle.cert.ocsp.OCSPException $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;

        r0 := @this: org.spongycastle.cert.ocsp.CertificateID;

        $r1 := @parameter0: org.spongycastle.cert.X509CertificateHolder;

        $r2 := @parameter1: org.spongycastle.operator.DigestCalculatorProvider;

        $r4 = r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

     label1:
        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ocsp.CertID: org.spongycastle.asn1.x509.AlgorithmIdentifier getHashAlgorithm()>();

        $r6 = interfaceinvoke $r2.<org.spongycastle.operator.DigestCalculatorProvider: org.spongycastle.operator.DigestCalculator get(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r5);

     label2:
        $r4 = r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

     label3:
        $r7 = virtualinvoke $r4.<org.spongycastle.asn1.ocsp.CertID: org.spongycastle.asn1.ASN1Integer getSerialNumber()>();

        $r4 = staticinvoke <org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID createCertID(org.spongycastle.operator.DigestCalculator,org.spongycastle.cert.X509CertificateHolder,org.spongycastle.asn1.ASN1Integer)>($r6, $r1, $r7);

     label4:
        $r8 = r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

     label5:
        $z0 = virtualinvoke $r4.<org.spongycastle.asn1.ocsp.CertID: boolean equals(java.lang.Object)>($r8);

     label6:
        return $z0;

     label7:
        r3 := @caughtexception;

        $r9 = new org.spongycastle.cert.ocsp.OCSPException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to create digest calculator: ");

        $r11 = virtualinvoke r3.<org.spongycastle.operator.OperatorCreationException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cert.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r3);

        throw $r9;

        catch org.spongycastle.operator.OperatorCreationException from label1 to label2 with label7;
        catch org.spongycastle.operator.OperatorCreationException from label3 to label4 with label7;
        catch org.spongycastle.operator.OperatorCreationException from label5 to label6 with label7;
    }
    public org.spongycastle.asn1.ocsp.CertID toASN1Primitive()
    {
        org.spongycastle.cert.ocsp.CertificateID r0;
        org.spongycastle.asn1.ocsp.CertID r1;

        r0 := @this: org.spongycastle.cert.ocsp.CertificateID;

        r1 = r0.<org.spongycastle.cert.ocsp.CertificateID: org.spongycastle.asn1.ocsp.CertID id>;

        return r1;
    }
