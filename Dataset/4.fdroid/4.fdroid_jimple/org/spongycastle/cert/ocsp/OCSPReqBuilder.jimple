org.spongycastle.cert.ocsp.OCSPReqBuilder extends java.lang.Object
private java.util.List list
private org.spongycastle.asn1.x509.Extensions requestExtensions
private org.spongycastle.asn1.x509.GeneralName requestorName
    public void <init>()
    {
        org.spongycastle.cert.ocsp.OCSPReqBuilder r0;
        java.util.ArrayList $r1;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReqBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: java.util.List list> = $r1;

        r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: org.spongycastle.asn1.x509.GeneralName requestorName> = null;

        r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: org.spongycastle.asn1.x509.Extensions requestExtensions> = null;

        return;
    }
    private org.spongycastle.cert.ocsp.OCSPReq generateRequest(org.spongycastle.operator.ContentSigner, org.spongycastle.cert.X509CertificateHolder[]) throws org.spongycastle.cert.ocsp.OCSPException
    {
        org.spongycastle.cert.ocsp.OCSPReqBuilder r0;
        org.spongycastle.operator.ContentSigner $r1;
        org.spongycastle.cert.X509CertificateHolder[] $r2;
        org.spongycastle.asn1.DERBitString r3;
        org.spongycastle.asn1.ASN1EncodableVector r4;
        org.spongycastle.asn1.ocsp.TBSRequest r5;
        java.util.List $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        org.spongycastle.cert.ocsp.OCSPReqBuilder$RequestObject $r9;
        org.spongycastle.asn1.ocsp.Request $r10;
        java.lang.Exception r11, r22;
        org.spongycastle.cert.ocsp.OCSPException $r12;
        org.spongycastle.asn1.x509.GeneralName $r13;
        org.spongycastle.asn1.DERSequence $r14;
        org.spongycastle.asn1.x509.Extensions $r15;
        org.spongycastle.asn1.ocsp.Signature r16;
        java.io.OutputStream $r17;
        byte[] $r18;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r19;
        int $i0, $i1;
        org.spongycastle.cert.X509CertificateHolder $r20;
        org.spongycastle.asn1.x509.Certificate $r21;
        java.lang.StringBuilder $r23;
        java.lang.String $r24;
        org.spongycastle.cert.ocsp.OCSPReq $r25;
        org.spongycastle.asn1.ocsp.OCSPRequest $r26;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReqBuilder;

        $r1 := @parameter0: org.spongycastle.operator.ContentSigner;

        $r2 := @parameter1: org.spongycastle.cert.X509CertificateHolder[];

        $r6 = r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: java.util.List list>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

     label01:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

     label02:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.spongycastle.cert.ocsp.OCSPReqBuilder$RequestObject) $r8;

        $r10 = virtualinvoke $r9.<org.spongycastle.cert.ocsp.OCSPReqBuilder$RequestObject: org.spongycastle.asn1.ocsp.Request toRequest()>();

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r10);

     label03:
        goto label01;

     label04:
        r11 := @caughtexception;

        $r12 = new org.spongycastle.cert.ocsp.OCSPException;

        specialinvoke $r12.<org.spongycastle.cert.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Throwable)>("exception creating Request", r11);

        throw $r12;

     label05:
        r5 = new org.spongycastle.asn1.ocsp.TBSRequest;

        $r13 = r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: org.spongycastle.asn1.x509.GeneralName requestorName>;

        $r14 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r14.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        $r15 = r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: org.spongycastle.asn1.x509.Extensions requestExtensions>;

        specialinvoke r5.<org.spongycastle.asn1.ocsp.TBSRequest: void <init>(org.spongycastle.asn1.x509.GeneralName,org.spongycastle.asn1.ASN1Sequence,org.spongycastle.asn1.x509.Extensions)>($r13, $r14, $r15);

        r16 = null;

        if $r1 == null goto label11;

        $r13 = r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: org.spongycastle.asn1.x509.GeneralName requestorName>;

        if $r13 != null goto label06;

        $r12 = new org.spongycastle.cert.ocsp.OCSPException;

        specialinvoke $r12.<org.spongycastle.cert.ocsp.OCSPException: void <init>(java.lang.String)>("requestorName must be specified if request is signed.");

        throw $r12;

     label06:
        $r17 = interfaceinvoke $r1.<org.spongycastle.operator.ContentSigner: java.io.OutputStream getOutputStream()>();

        $r18 = virtualinvoke r5.<org.spongycastle.asn1.ocsp.TBSRequest: byte[] getEncoded(java.lang.String)>("DER");

        virtualinvoke $r17.<java.io.OutputStream: void write(byte[])>($r18);

        virtualinvoke $r17.<java.io.OutputStream: void close()>();

     label07:
        r3 = new org.spongycastle.asn1.DERBitString;

        $r18 = interfaceinvoke $r1.<org.spongycastle.operator.ContentSigner: byte[] getSignature()>();

        specialinvoke r3.<org.spongycastle.asn1.DERBitString: void <init>(byte[])>($r18);

        $r19 = interfaceinvoke $r1.<org.spongycastle.operator.ContentSigner: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        if $r2 == null goto label12;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label12;

        r4 = new org.spongycastle.asn1.ASN1EncodableVector;

        specialinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void <init>()>();

        $i0 = 0;

     label08:
        $i1 = lengthof $r2;

        if $i0 == $i1 goto label10;

        $r20 = $r2[$i0];

        $r21 = virtualinvoke $r20.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Certificate toASN1Structure()>();

        virtualinvoke r4.<org.spongycastle.asn1.ASN1EncodableVector: void add(org.spongycastle.asn1.ASN1Encodable)>($r21);

        $i0 = $i0 + 1;

        goto label08;

     label09:
        r22 := @caughtexception;

        $r12 = new org.spongycastle.cert.ocsp.OCSPException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception processing TBSRequest: ");

        $r23 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.spongycastle.cert.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Throwable)>($r24, r22);

        throw $r12;

     label10:
        r16 = new org.spongycastle.asn1.ocsp.Signature;

        $r14 = new org.spongycastle.asn1.DERSequence;

        specialinvoke $r14.<org.spongycastle.asn1.DERSequence: void <init>(org.spongycastle.asn1.ASN1EncodableVector)>(r4);

        specialinvoke r16.<org.spongycastle.asn1.ocsp.Signature: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.DERBitString,org.spongycastle.asn1.ASN1Sequence)>($r19, r3, $r14);

     label11:
        $r25 = new org.spongycastle.cert.ocsp.OCSPReq;

        $r26 = new org.spongycastle.asn1.ocsp.OCSPRequest;

        specialinvoke $r26.<org.spongycastle.asn1.ocsp.OCSPRequest: void <init>(org.spongycastle.asn1.ocsp.TBSRequest,org.spongycastle.asn1.ocsp.Signature)>(r5, r16);

        specialinvoke $r25.<org.spongycastle.cert.ocsp.OCSPReq: void <init>(org.spongycastle.asn1.ocsp.OCSPRequest)>($r26);

        return $r25;

     label12:
        r16 = new org.spongycastle.asn1.ocsp.Signature;

        specialinvoke r16.<org.spongycastle.asn1.ocsp.Signature: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.DERBitString)>($r19, r3);

        goto label11;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label06 to label07 with label09;
    }
    public org.spongycastle.cert.ocsp.OCSPReqBuilder addRequest(org.spongycastle.cert.ocsp.CertificateID)
    {
        org.spongycastle.cert.ocsp.OCSPReqBuilder r0;
        org.spongycastle.cert.ocsp.CertificateID $r1;
        java.util.List $r2;
        org.spongycastle.cert.ocsp.OCSPReqBuilder$RequestObject $r3;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReqBuilder;

        $r1 := @parameter0: org.spongycastle.cert.ocsp.CertificateID;

        $r2 = r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: java.util.List list>;

        $r3 = new org.spongycastle.cert.ocsp.OCSPReqBuilder$RequestObject;

        specialinvoke $r3.<org.spongycastle.cert.ocsp.OCSPReqBuilder$RequestObject: void <init>(org.spongycastle.cert.ocsp.OCSPReqBuilder,org.spongycastle.cert.ocsp.CertificateID,org.spongycastle.asn1.x509.Extensions)>(r0, $r1, null);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return r0;
    }
    public org.spongycastle.cert.ocsp.OCSPReqBuilder addRequest(org.spongycastle.cert.ocsp.CertificateID, org.spongycastle.asn1.x509.Extensions)
    {
        org.spongycastle.cert.ocsp.OCSPReqBuilder r0;
        org.spongycastle.cert.ocsp.CertificateID $r1;
        org.spongycastle.asn1.x509.Extensions $r2;
        java.util.List $r3;
        org.spongycastle.cert.ocsp.OCSPReqBuilder$RequestObject $r4;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReqBuilder;

        $r1 := @parameter0: org.spongycastle.cert.ocsp.CertificateID;

        $r2 := @parameter1: org.spongycastle.asn1.x509.Extensions;

        $r3 = r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: java.util.List list>;

        $r4 = new org.spongycastle.cert.ocsp.OCSPReqBuilder$RequestObject;

        specialinvoke $r4.<org.spongycastle.cert.ocsp.OCSPReqBuilder$RequestObject: void <init>(org.spongycastle.cert.ocsp.OCSPReqBuilder,org.spongycastle.cert.ocsp.CertificateID,org.spongycastle.asn1.x509.Extensions)>(r0, $r1, $r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return r0;
    }
    public org.spongycastle.cert.ocsp.OCSPReq build() throws org.spongycastle.cert.ocsp.OCSPException
    {
        org.spongycastle.cert.ocsp.OCSPReqBuilder r0;
        org.spongycastle.cert.ocsp.OCSPReq $r1;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReqBuilder;

        $r1 = specialinvoke r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: org.spongycastle.cert.ocsp.OCSPReq generateRequest(org.spongycastle.operator.ContentSigner,org.spongycastle.cert.X509CertificateHolder[])>(null, null);

        return $r1;
    }
    public org.spongycastle.cert.ocsp.OCSPReq build(org.spongycastle.operator.ContentSigner, org.spongycastle.cert.X509CertificateHolder[]) throws org.spongycastle.cert.ocsp.OCSPException, java.lang.IllegalArgumentException
    {
        org.spongycastle.cert.ocsp.OCSPReqBuilder r0;
        org.spongycastle.operator.ContentSigner $r1;
        org.spongycastle.cert.X509CertificateHolder[] $r2;
        org.spongycastle.cert.ocsp.OCSPReq $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReqBuilder;

        $r1 := @parameter0: org.spongycastle.operator.ContentSigner;

        $r2 := @parameter1: org.spongycastle.cert.X509CertificateHolder[];

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no signer specified");

        throw $r4;

     label1:
        $r3 = specialinvoke r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: org.spongycastle.cert.ocsp.OCSPReq generateRequest(org.spongycastle.operator.ContentSigner,org.spongycastle.cert.X509CertificateHolder[])>($r1, $r2);

        return $r3;
    }
    public org.spongycastle.cert.ocsp.OCSPReqBuilder setRequestExtensions(org.spongycastle.asn1.x509.Extensions)
    {
        org.spongycastle.cert.ocsp.OCSPReqBuilder r0;
        org.spongycastle.asn1.x509.Extensions $r1;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReqBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x509.Extensions;

        r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: org.spongycastle.asn1.x509.Extensions requestExtensions> = $r1;

        return r0;
    }
    public org.spongycastle.cert.ocsp.OCSPReqBuilder setRequestorName(org.spongycastle.asn1.x500.X500Name)
    {
        org.spongycastle.cert.ocsp.OCSPReqBuilder r0;
        org.spongycastle.asn1.x500.X500Name $r1;
        org.spongycastle.asn1.x509.GeneralName $r2;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReqBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x500.X500Name;

        $r2 = new org.spongycastle.asn1.x509.GeneralName;

        specialinvoke $r2.<org.spongycastle.asn1.x509.GeneralName: void <init>(int,org.spongycastle.asn1.ASN1Encodable)>(4, $r1);

        r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: org.spongycastle.asn1.x509.GeneralName requestorName> = $r2;

        return r0;
    }
    public org.spongycastle.cert.ocsp.OCSPReqBuilder setRequestorName(org.spongycastle.asn1.x509.GeneralName)
    {
        org.spongycastle.cert.ocsp.OCSPReqBuilder r0;
        org.spongycastle.asn1.x509.GeneralName $r1;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReqBuilder;

        $r1 := @parameter0: org.spongycastle.asn1.x509.GeneralName;

        r0.<org.spongycastle.cert.ocsp.OCSPReqBuilder: org.spongycastle.asn1.x509.GeneralName requestorName> = $r1;

        return r0;
    }
