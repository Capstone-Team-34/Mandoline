org.spongycastle.cert.ocsp.BasicOCSPResp extends java.lang.Object implements org.spongycastle.util.Encodable
private org.spongycastle.asn1.ocsp.ResponseData data
private org.spongycastle.asn1.x509.Extensions extensions
private org.spongycastle.asn1.ocsp.BasicOCSPResponse resp
    public void <init>(org.spongycastle.asn1.ocsp.BasicOCSPResponse)
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        org.spongycastle.asn1.ocsp.BasicOCSPResponse $r1;
        org.spongycastle.asn1.ocsp.ResponseData $r2;
        org.spongycastle.asn1.x509.Extensions $r3;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r1 := @parameter0: org.spongycastle.asn1.ocsp.BasicOCSPResponse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.BasicOCSPResponse resp> = $r1;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.BasicOCSPResponse: org.spongycastle.asn1.ocsp.ResponseData getTbsResponseData()>();

        r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.ResponseData data> = $r2;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.BasicOCSPResponse: org.spongycastle.asn1.ocsp.ResponseData getTbsResponseData()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ocsp.ResponseData: org.spongycastle.asn1.x509.Extensions getResponseExtensions()>();

        $r3 = staticinvoke <org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extensions getInstance(java.lang.Object)>($r3);

        r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.x509.Extensions extensions> = $r3;

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0, r3;
        java.lang.Object $r1;
        org.spongycastle.asn1.ocsp.BasicOCSPResponse $r2, $r4;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.spongycastle.cert.ocsp.BasicOCSPResp;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = (org.spongycastle.cert.ocsp.BasicOCSPResp) $r1;

        $r4 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.BasicOCSPResponse resp>;

        $r2 = r3.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.BasicOCSPResponse resp>;

        $z0 = virtualinvoke $r4.<org.spongycastle.asn1.ocsp.BasicOCSPResponse: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }
    public org.spongycastle.cert.X509CertificateHolder[] getCerts()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        org.spongycastle.asn1.ocsp.BasicOCSPResponse $r1;
        org.spongycastle.asn1.ASN1Sequence $r2;
        int $i0, $i1;
        org.spongycastle.cert.X509CertificateHolder[] r3;
        org.spongycastle.cert.X509CertificateHolder $r4;
        org.spongycastle.asn1.ASN1Encodable $r5;
        org.spongycastle.asn1.x509.Certificate $r6;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r1 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.BasicOCSPResponse resp>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.BasicOCSPResponse: org.spongycastle.asn1.ASN1Sequence getCerts()>();

        if $r2 == null goto label3;

        $r1 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.BasicOCSPResponse resp>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.BasicOCSPResponse: org.spongycastle.asn1.ASN1Sequence getCerts()>();

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        r3 = newarray (org.spongycastle.cert.X509CertificateHolder)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r3;

        if $i0 == $i1 goto label4;

        $r4 = new org.spongycastle.cert.X509CertificateHolder;

        $r5 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r6 = staticinvoke <org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Certificate getInstance(java.lang.Object)>($r5);

        specialinvoke $r4.<org.spongycastle.cert.X509CertificateHolder: void <init>(org.spongycastle.asn1.x509.Certificate)>($r6);

        r3[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r3 = <org.spongycastle.cert.ocsp.OCSPUtils: org.spongycastle.cert.X509CertificateHolder[] EMPTY_CERTS>;

        return r3;

     label3:
        r3 = <org.spongycastle.cert.ocsp.OCSPUtils: org.spongycastle.cert.X509CertificateHolder[] EMPTY_CERTS>;

     label4:
        return r3;
    }
    public java.util.Set getCriticalExtensionOIDs()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        java.util.Set $r1;
        org.spongycastle.asn1.x509.Extensions $r2;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r2 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.x509.Extensions extensions>;

        $r1 = staticinvoke <org.spongycastle.cert.ocsp.OCSPUtils: java.util.Set getCriticalExtensionOIDs(org.spongycastle.asn1.x509.Extensions)>($r2);

        return $r1;
    }
    public byte[] getEncoded() throws java.io.IOException
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        byte[] $r1;
        org.spongycastle.asn1.ocsp.BasicOCSPResponse $r2;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r2 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.BasicOCSPResponse resp>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ocsp.BasicOCSPResponse: byte[] getEncoded()>();

        return $r1;
    }
    public org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.x509.Extension $r2;
        org.spongycastle.asn1.x509.Extensions $r3;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.x509.Extensions extensions>;

        if $r3 == null goto label1;

        $r3 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.x509.Extensions extensions>;

        $r2 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        return $r2;

     label1:
        return null;
    }
    public java.util.List getExtensionOIDs()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        java.util.List $r1;
        org.spongycastle.asn1.x509.Extensions $r2;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r2 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.x509.Extensions extensions>;

        $r1 = staticinvoke <org.spongycastle.cert.ocsp.OCSPUtils: java.util.List getExtensionOIDs(org.spongycastle.asn1.x509.Extensions)>($r2);

        return $r1;
    }
    public java.util.Set getNonCriticalExtensionOIDs()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        java.util.Set $r1;
        org.spongycastle.asn1.x509.Extensions $r2;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r2 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.x509.Extensions extensions>;

        $r1 = staticinvoke <org.spongycastle.cert.ocsp.OCSPUtils: java.util.Set getNonCriticalExtensionOIDs(org.spongycastle.asn1.x509.Extensions)>($r2);

        return $r1;
    }
    public java.util.Date getProducedAt()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        org.spongycastle.asn1.ocsp.ResponseData $r1;
        org.spongycastle.asn1.ASN1GeneralizedTime $r2;
        java.util.Date $r3;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r1 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.ResponseData data>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.ResponseData: org.spongycastle.asn1.ASN1GeneralizedTime getProducedAt()>();

        $r3 = staticinvoke <org.spongycastle.cert.ocsp.OCSPUtils: java.util.Date extractDate(org.spongycastle.asn1.ASN1GeneralizedTime)>($r2);

        return $r3;
    }
    public org.spongycastle.cert.ocsp.RespID getResponderId()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        org.spongycastle.cert.ocsp.RespID $r1;
        org.spongycastle.asn1.ocsp.ResponderID $r2;
        org.spongycastle.asn1.ocsp.ResponseData $r3;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r1 = new org.spongycastle.cert.ocsp.RespID;

        $r3 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.ResponseData data>;

        $r2 = virtualinvoke $r3.<org.spongycastle.asn1.ocsp.ResponseData: org.spongycastle.asn1.ocsp.ResponderID getResponderID()>();

        specialinvoke $r1.<org.spongycastle.cert.ocsp.RespID: void <init>(org.spongycastle.asn1.ocsp.ResponderID)>($r2);

        return $r1;
    }
    public org.spongycastle.cert.ocsp.SingleResp[] getResponses()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        org.spongycastle.cert.ocsp.SingleResp[] r1;
        org.spongycastle.asn1.ocsp.ResponseData $r2;
        org.spongycastle.asn1.ASN1Sequence $r3;
        int $i0, $i1;
        org.spongycastle.cert.ocsp.SingleResp $r4;
        org.spongycastle.asn1.ASN1Encodable $r5;
        org.spongycastle.asn1.ocsp.SingleResponse $r6;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r2 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.ResponseData data>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ocsp.ResponseData: org.spongycastle.asn1.ASN1Sequence getResponses()>();

        $i0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        r1 = newarray (org.spongycastle.cert.ocsp.SingleResp)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 == $i1 goto label2;

        $r4 = new org.spongycastle.cert.ocsp.SingleResp;

        $r5 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r6 = staticinvoke <org.spongycastle.asn1.ocsp.SingleResponse: org.spongycastle.asn1.ocsp.SingleResponse getInstance(java.lang.Object)>($r5);

        specialinvoke $r4.<org.spongycastle.cert.ocsp.SingleResp: void <init>(org.spongycastle.asn1.ocsp.SingleResponse)>($r6);

        r1[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public byte[] getSignature()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        org.spongycastle.asn1.ocsp.BasicOCSPResponse $r1;
        org.spongycastle.asn1.DERBitString $r2;
        byte[] $r3;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r1 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.BasicOCSPResponse resp>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.BasicOCSPResponse: org.spongycastle.asn1.DERBitString getSignature()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        return $r3;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getSignatureAlgOID()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        org.spongycastle.asn1.ocsp.BasicOCSPResponse $r1;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r1 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.BasicOCSPResponse resp>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.BasicOCSPResponse: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        return $r3;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithmID()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.ocsp.BasicOCSPResponse $r2;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r2 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.BasicOCSPResponse resp>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ocsp.BasicOCSPResponse: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        return $r1;
    }
    public byte[] getTBSResponseData()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        java.io.IOException r1;
        org.spongycastle.asn1.ocsp.BasicOCSPResponse $r2;
        org.spongycastle.asn1.ocsp.ResponseData $r3;
        byte[] $r4;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r2 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.BasicOCSPResponse resp>;

     label1:
        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ocsp.BasicOCSPResponse: org.spongycastle.asn1.ocsp.ResponseData getTbsResponseData()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ocsp.ResponseData: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r4;

     label3:
        r1 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }
    public int getVersion()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        org.spongycastle.asn1.ocsp.ResponseData $r1;
        org.spongycastle.asn1.ASN1Integer $r2;
        java.math.BigInteger $r3;
        int $i0;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r1 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.ResponseData data>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.ResponseData: org.spongycastle.asn1.ASN1Integer getVersion()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r3.<java.math.BigInteger: int intValue()>();

        $i0 = $i0 + 1;

        return $i0;
    }
    public boolean hasExtensions()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        org.spongycastle.asn1.x509.Extensions $r1;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r1 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.x509.Extensions extensions>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public int hashCode()
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        int $i0;
        org.spongycastle.asn1.ocsp.BasicOCSPResponse $r1;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r1 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.BasicOCSPResponse resp>;

        $i0 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.BasicOCSPResponse: int hashCode()>();

        return $i0;
    }
    public boolean isSignatureValid(org.spongycastle.operator.ContentVerifierProvider) throws org.spongycastle.cert.ocsp.OCSPException
    {
        org.spongycastle.cert.ocsp.BasicOCSPResp r0;
        org.spongycastle.operator.ContentVerifierProvider $r1;
        java.lang.Exception r2;
        org.spongycastle.asn1.ocsp.BasicOCSPResponse $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        org.spongycastle.operator.ContentVerifier $r5;
        java.io.OutputStream $r6;
        org.spongycastle.asn1.ocsp.ResponseData $r7;
        byte[] $r8;
        boolean $z0;
        org.spongycastle.cert.ocsp.OCSPException $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;

        r0 := @this: org.spongycastle.cert.ocsp.BasicOCSPResp;

        $r1 := @parameter0: org.spongycastle.operator.ContentVerifierProvider;

     label1:
        $r3 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.BasicOCSPResponse resp>;

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ocsp.BasicOCSPResponse: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r5 = interfaceinvoke $r1.<org.spongycastle.operator.ContentVerifierProvider: org.spongycastle.operator.ContentVerifier get(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r4);

        $r6 = interfaceinvoke $r5.<org.spongycastle.operator.ContentVerifier: java.io.OutputStream getOutputStream()>();

        $r3 = r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: org.spongycastle.asn1.ocsp.BasicOCSPResponse resp>;

        $r7 = virtualinvoke $r3.<org.spongycastle.asn1.ocsp.BasicOCSPResponse: org.spongycastle.asn1.ocsp.ResponseData getTbsResponseData()>();

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.ocsp.ResponseData: byte[] getEncoded(java.lang.String)>("DER");

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r8);

        virtualinvoke $r6.<java.io.OutputStream: void close()>();

        $r8 = virtualinvoke r0.<org.spongycastle.cert.ocsp.BasicOCSPResp: byte[] getSignature()>();

        $z0 = interfaceinvoke $r5.<org.spongycastle.operator.ContentVerifier: boolean verify(byte[])>($r8);

     label2:
        return $z0;

     label3:
        r2 := @caughtexception;

        $r9 = new org.spongycastle.cert.ocsp.OCSPException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception processing sig: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cert.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r2);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }
