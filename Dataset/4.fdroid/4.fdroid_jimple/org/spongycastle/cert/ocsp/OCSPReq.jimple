org.spongycastle.cert.ocsp.OCSPReq extends java.lang.Object
private static final org.spongycastle.cert.X509CertificateHolder[] EMPTY_CERTS
private org.spongycastle.asn1.x509.Extensions extensions
private org.spongycastle.asn1.ocsp.OCSPRequest req
    static void <clinit>()
    {
        org.spongycastle.cert.X509CertificateHolder[] $r0;

        $r0 = newarray (org.spongycastle.cert.X509CertificateHolder)[0];

        <org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.cert.X509CertificateHolder[] EMPTY_CERTS> = $r0;

        return;
    }
    private void <init>(org.spongycastle.asn1.ASN1InputStream) throws java.io.IOException
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        org.spongycastle.asn1.ASN1InputStream $r1;
        org.spongycastle.asn1.ASN1Primitive $r2;
        org.spongycastle.asn1.ocsp.OCSPRequest $r3;
        org.spongycastle.cert.CertIOException $r4;
        java.lang.IllegalArgumentException r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        org.spongycastle.asn1.ocsp.TBSRequest $r8;
        org.spongycastle.asn1.x509.Extensions $r9;
        java.lang.ClassCastException r10;
        org.spongycastle.asn1.ASN1Exception r11;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label01:
        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ASN1InputStream: org.spongycastle.asn1.ASN1Primitive readObject()>();

        $r3 = staticinvoke <org.spongycastle.asn1.ocsp.OCSPRequest: org.spongycastle.asn1.ocsp.OCSPRequest getInstance(java.lang.Object)>($r2);

     label02:
        r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req> = $r3;

        $r3 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req>;

        if $r3 != null goto label06;

        $r4 = new org.spongycastle.cert.CertIOException;

     label03:
        specialinvoke $r4.<org.spongycastle.cert.CertIOException: void <init>(java.lang.String)>("malformed request: no request data found");

     label04:
        throw $r4;

     label05:
        r5 := @caughtexception;

        $r4 = new org.spongycastle.cert.CertIOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed request: ");

        $r7 = virtualinvoke r5.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.cert.CertIOException: void <init>(java.lang.String,java.lang.Throwable)>($r7, r5);

        throw $r4;

     label06:
        $r3 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req>;

     label07:
        $r8 = virtualinvoke $r3.<org.spongycastle.asn1.ocsp.OCSPRequest: org.spongycastle.asn1.ocsp.TBSRequest getTbsRequest()>();

        $r9 = virtualinvoke $r8.<org.spongycastle.asn1.ocsp.TBSRequest: org.spongycastle.asn1.x509.Extensions getRequestExtensions()>();

     label08:
        r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.x509.Extensions extensions> = $r9;

        return;

     label09:
        r10 := @caughtexception;

        $r4 = new org.spongycastle.cert.CertIOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed request: ");

        $r7 = virtualinvoke r10.<java.lang.ClassCastException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.cert.CertIOException: void <init>(java.lang.String,java.lang.Throwable)>($r7, r10);

        throw $r4;

     label10:
        r11 := @caughtexception;

        $r4 = new org.spongycastle.cert.CertIOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed request: ");

        $r7 = virtualinvoke r11.<org.spongycastle.asn1.ASN1Exception: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.spongycastle.cert.CertIOException: void <init>(java.lang.String,java.lang.Throwable)>($r7, r11);

        throw $r4;

        catch java.lang.IllegalArgumentException from label01 to label02 with label05;
        catch java.lang.IllegalArgumentException from label03 to label04 with label05;
        catch java.lang.ClassCastException from label01 to label02 with label09;
        catch java.lang.ClassCastException from label03 to label04 with label09;
        catch org.spongycastle.asn1.ASN1Exception from label01 to label02 with label10;
        catch org.spongycastle.asn1.ASN1Exception from label03 to label04 with label10;
        catch java.lang.IllegalArgumentException from label07 to label08 with label05;
        catch java.lang.ClassCastException from label07 to label08 with label09;
        catch org.spongycastle.asn1.ASN1Exception from label07 to label08 with label10;
    }
    public void <init>(org.spongycastle.asn1.ocsp.OCSPRequest)
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        org.spongycastle.asn1.ocsp.OCSPRequest $r1;
        org.spongycastle.asn1.ocsp.TBSRequest $r2;
        org.spongycastle.asn1.x509.Extensions $r3;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r1 := @parameter0: org.spongycastle.asn1.ocsp.OCSPRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req> = $r1;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.OCSPRequest: org.spongycastle.asn1.ocsp.TBSRequest getTbsRequest()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ocsp.TBSRequest: org.spongycastle.asn1.x509.Extensions getRequestExtensions()>();

        r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.x509.Extensions extensions> = $r3;

        return;
    }
    public void <init>(byte[]) throws java.io.IOException
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        byte[] $r1;
        org.spongycastle.asn1.ASN1InputStream $r2;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r1 := @parameter0: byte[];

        $r2 = new org.spongycastle.asn1.ASN1InputStream;

        specialinvoke $r2.<org.spongycastle.asn1.ASN1InputStream: void <init>(byte[])>($r1);

        specialinvoke r0.<org.spongycastle.cert.ocsp.OCSPReq: void <init>(org.spongycastle.asn1.ASN1InputStream)>($r2);

        return;
    }
    public org.spongycastle.cert.X509CertificateHolder[] getCerts()
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        org.spongycastle.asn1.ocsp.OCSPRequest $r1;
        org.spongycastle.asn1.ocsp.Signature $r2;
        org.spongycastle.asn1.ASN1Sequence $r3;
        int $i0, $i1;
        org.spongycastle.cert.X509CertificateHolder[] r4;
        org.spongycastle.cert.X509CertificateHolder $r5;
        org.spongycastle.asn1.ASN1Encodable $r6;
        org.spongycastle.asn1.x509.Certificate $r7;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r1 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.OCSPRequest: org.spongycastle.asn1.ocsp.Signature getOptionalSignature()>();

        if $r2 == null goto label3;

        $r1 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.OCSPRequest: org.spongycastle.asn1.ocsp.Signature getOptionalSignature()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ocsp.Signature: org.spongycastle.asn1.ASN1Sequence getCerts()>();

        if $r3 == null goto label2;

        $i0 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        r4 = newarray (org.spongycastle.cert.X509CertificateHolder)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r4;

        if $i0 == $i1 goto label4;

        $r5 = new org.spongycastle.cert.X509CertificateHolder;

        $r6 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r7 = staticinvoke <org.spongycastle.asn1.x509.Certificate: org.spongycastle.asn1.x509.Certificate getInstance(java.lang.Object)>($r6);

        specialinvoke $r5.<org.spongycastle.cert.X509CertificateHolder: void <init>(org.spongycastle.asn1.x509.Certificate)>($r7);

        r4[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r4 = <org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.cert.X509CertificateHolder[] EMPTY_CERTS>;

        return r4;

     label3:
        r4 = <org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.cert.X509CertificateHolder[] EMPTY_CERTS>;

     label4:
        return r4;
    }
    public java.util.Set getCriticalExtensionOIDs()
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        java.util.Set $r1;
        org.spongycastle.asn1.x509.Extensions $r2;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r2 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.x509.Extensions extensions>;

        $r1 = staticinvoke <org.spongycastle.cert.ocsp.OCSPUtils: java.util.Set getCriticalExtensionOIDs(org.spongycastle.asn1.x509.Extensions)>($r2);

        return $r1;
    }
    public byte[] getEncoded() throws java.io.IOException
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        org.spongycastle.asn1.ASN1OutputStream r1;
        java.io.ByteArrayOutputStream r2;
        byte[] $r3;
        org.spongycastle.asn1.ocsp.OCSPRequest $r4;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        r2 = new java.io.ByteArrayOutputStream;

        specialinvoke r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = new org.spongycastle.asn1.ASN1OutputStream;

        specialinvoke r1.<org.spongycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>(r2);

        $r4 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req>;

        virtualinvoke r1.<org.spongycastle.asn1.ASN1OutputStream: void writeObject(org.spongycastle.asn1.ASN1Encodable)>($r4);

        $r3 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;
    }
    public org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r1;
        org.spongycastle.asn1.x509.Extension $r2;
        org.spongycastle.asn1.x509.Extensions $r3;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1ObjectIdentifier;

        $r3 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.x509.Extensions extensions>;

        if $r3 == null goto label1;

        $r3 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.x509.Extensions extensions>;

        $r2 = virtualinvoke $r3.<org.spongycastle.asn1.x509.Extensions: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r1);

        return $r2;

     label1:
        return null;
    }
    public java.util.List getExtensionOIDs()
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        java.util.List $r1;
        org.spongycastle.asn1.x509.Extensions $r2;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r2 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.x509.Extensions extensions>;

        $r1 = staticinvoke <org.spongycastle.cert.ocsp.OCSPUtils: java.util.List getExtensionOIDs(org.spongycastle.asn1.x509.Extensions)>($r2);

        return $r1;
    }
    public java.util.Set getNonCriticalExtensionOIDs()
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        java.util.Set $r1;
        org.spongycastle.asn1.x509.Extensions $r2;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r2 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.x509.Extensions extensions>;

        $r1 = staticinvoke <org.spongycastle.cert.ocsp.OCSPUtils: java.util.Set getNonCriticalExtensionOIDs(org.spongycastle.asn1.x509.Extensions)>($r2);

        return $r1;
    }
    public org.spongycastle.cert.ocsp.Req[] getRequestList()
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        org.spongycastle.cert.ocsp.Req[] r1;
        org.spongycastle.asn1.ocsp.OCSPRequest $r2;
        org.spongycastle.asn1.ocsp.TBSRequest $r3;
        org.spongycastle.asn1.ASN1Sequence $r4;
        int $i0, $i1;
        org.spongycastle.cert.ocsp.Req $r5;
        org.spongycastle.asn1.ASN1Encodable $r6;
        org.spongycastle.asn1.ocsp.Request $r7;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r2 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req>;

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ocsp.OCSPRequest: org.spongycastle.asn1.ocsp.TBSRequest getTbsRequest()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ocsp.TBSRequest: org.spongycastle.asn1.ASN1Sequence getRequestList()>();

        $i0 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Sequence: int size()>();

        r1 = newarray (org.spongycastle.cert.ocsp.Req)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof r1;

        if $i0 == $i1 goto label2;

        $r5 = new org.spongycastle.cert.ocsp.Req;

        $r6 = virtualinvoke $r4.<org.spongycastle.asn1.ASN1Sequence: org.spongycastle.asn1.ASN1Encodable getObjectAt(int)>($i0);

        $r7 = staticinvoke <org.spongycastle.asn1.ocsp.Request: org.spongycastle.asn1.ocsp.Request getInstance(java.lang.Object)>($r6);

        specialinvoke $r5.<org.spongycastle.cert.ocsp.Req: void <init>(org.spongycastle.asn1.ocsp.Request)>($r7);

        r1[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public org.spongycastle.asn1.x509.GeneralName getRequestorName()
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        org.spongycastle.asn1.ocsp.OCSPRequest $r1;
        org.spongycastle.asn1.ocsp.TBSRequest $r2;
        org.spongycastle.asn1.x509.GeneralName $r3;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r1 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.OCSPRequest: org.spongycastle.asn1.ocsp.TBSRequest getTbsRequest()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ocsp.TBSRequest: org.spongycastle.asn1.x509.GeneralName getRequestorName()>();

        $r3 = staticinvoke <org.spongycastle.asn1.x509.GeneralName: org.spongycastle.asn1.x509.GeneralName getInstance(java.lang.Object)>($r3);

        return $r3;
    }
    public byte[] getSignature()
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        boolean $z0;
        org.spongycastle.asn1.ocsp.OCSPRequest $r1;
        org.spongycastle.asn1.ocsp.Signature $r2;
        org.spongycastle.asn1.DERBitString $r3;
        byte[] $r4;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $z0 = virtualinvoke r0.<org.spongycastle.cert.ocsp.OCSPReq: boolean isSigned()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.OCSPRequest: org.spongycastle.asn1.ocsp.Signature getOptionalSignature()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ocsp.Signature: org.spongycastle.asn1.DERBitString getSignature()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.DERBitString: byte[] getBytes()>();

        return $r4;
    }
    public org.spongycastle.asn1.ASN1ObjectIdentifier getSignatureAlgOID()
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        boolean $z0;
        org.spongycastle.asn1.ocsp.OCSPRequest $r1;
        org.spongycastle.asn1.ocsp.Signature $r2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r4;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $z0 = virtualinvoke r0.<org.spongycastle.cert.ocsp.OCSPReq: boolean isSigned()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.OCSPRequest: org.spongycastle.asn1.ocsp.Signature getOptionalSignature()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ocsp.Signature: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        return $r4;
    }
    public int getVersionNumber()
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        org.spongycastle.asn1.ocsp.OCSPRequest $r1;
        org.spongycastle.asn1.ocsp.TBSRequest $r2;
        org.spongycastle.asn1.ASN1Integer $r3;
        java.math.BigInteger $r4;
        int $i0;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r1 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.spongycastle.asn1.ocsp.OCSPRequest: org.spongycastle.asn1.ocsp.TBSRequest getTbsRequest()>();

        $r3 = virtualinvoke $r2.<org.spongycastle.asn1.ocsp.TBSRequest: org.spongycastle.asn1.ASN1Integer getVersion()>();

        $r4 = virtualinvoke $r3.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

        $i0 = $i0 + 1;

        return $i0;
    }
    public boolean hasExtensions()
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        org.spongycastle.asn1.x509.Extensions $r1;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r1 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.x509.Extensions extensions>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isSignatureValid(org.spongycastle.operator.ContentVerifierProvider) throws org.spongycastle.cert.ocsp.OCSPException
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        org.spongycastle.operator.ContentVerifierProvider $r1;
        java.lang.Exception r2;
        boolean $z0;
        org.spongycastle.cert.ocsp.OCSPException $r3;
        org.spongycastle.asn1.ocsp.OCSPRequest $r4;
        org.spongycastle.asn1.ocsp.Signature $r5;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r6;
        org.spongycastle.operator.ContentVerifier $r7;
        java.io.OutputStream $r8;
        org.spongycastle.asn1.ocsp.TBSRequest $r9;
        byte[] $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r1 := @parameter0: org.spongycastle.operator.ContentVerifierProvider;

        $z0 = virtualinvoke r0.<org.spongycastle.cert.ocsp.OCSPReq: boolean isSigned()>();

        if $z0 != 0 goto label1;

        $r3 = new org.spongycastle.cert.ocsp.OCSPException;

        specialinvoke $r3.<org.spongycastle.cert.ocsp.OCSPException: void <init>(java.lang.String)>("attempt to verify signature on unsigned object");

        throw $r3;

     label1:
        $r4 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req>;

        $r5 = virtualinvoke $r4.<org.spongycastle.asn1.ocsp.OCSPRequest: org.spongycastle.asn1.ocsp.Signature getOptionalSignature()>();

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.ocsp.Signature: org.spongycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r7 = interfaceinvoke $r1.<org.spongycastle.operator.ContentVerifierProvider: org.spongycastle.operator.ContentVerifier get(org.spongycastle.asn1.x509.AlgorithmIdentifier)>($r6);

        $r8 = interfaceinvoke $r7.<org.spongycastle.operator.ContentVerifier: java.io.OutputStream getOutputStream()>();

        $r4 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req>;

        $r9 = virtualinvoke $r4.<org.spongycastle.asn1.ocsp.OCSPRequest: org.spongycastle.asn1.ocsp.TBSRequest getTbsRequest()>();

        $r10 = virtualinvoke $r9.<org.spongycastle.asn1.ocsp.TBSRequest: byte[] getEncoded(java.lang.String)>("DER");

        virtualinvoke $r8.<java.io.OutputStream: void write(byte[])>($r10);

        $r10 = virtualinvoke r0.<org.spongycastle.cert.ocsp.OCSPReq: byte[] getSignature()>();

        $z0 = interfaceinvoke $r7.<org.spongycastle.operator.ContentVerifier: boolean verify(byte[])>($r10);

     label2:
        return $z0;

     label3:
        r2 := @caughtexception;

        $r3 = new org.spongycastle.cert.ocsp.OCSPException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception processing signature: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.spongycastle.cert.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Throwable)>($r12, r2);

        throw $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public boolean isSigned()
    {
        org.spongycastle.cert.ocsp.OCSPReq r0;
        org.spongycastle.asn1.ocsp.Signature $r1;
        org.spongycastle.asn1.ocsp.OCSPRequest $r2;

        r0 := @this: org.spongycastle.cert.ocsp.OCSPReq;

        $r2 = r0.<org.spongycastle.cert.ocsp.OCSPReq: org.spongycastle.asn1.ocsp.OCSPRequest req>;

        $r1 = virtualinvoke $r2.<org.spongycastle.asn1.ocsp.OCSPRequest: org.spongycastle.asn1.ocsp.Signature getOptionalSignature()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
