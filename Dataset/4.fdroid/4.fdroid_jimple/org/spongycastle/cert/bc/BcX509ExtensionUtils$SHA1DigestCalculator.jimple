org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator extends java.lang.Object implements org.spongycastle.operator.DigestCalculator
private java.io.ByteArrayOutputStream bOut
    private void <init>()
    {
        org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator r0;
        java.io.ByteArrayOutputStream $r1;

        r0 := @this: org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator: java.io.ByteArrayOutputStream bOut> = $r1;

        return;
    }
    void <init>(org.spongycastle.cert.bc.BcX509ExtensionUtils$1)
    {
        org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator r0;
        org.spongycastle.cert.bc.BcX509ExtensionUtils$1 $r1;

        r0 := @this: org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator;

        $r1 := @parameter0: org.spongycastle.cert.bc.BcX509ExtensionUtils$1;

        specialinvoke r0.<org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator: void <init>()>();

        return;
    }
    public org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier()
    {
        org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator r0;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r1;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r2;

        r0 := @this: org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator;

        $r1 = new org.spongycastle.asn1.x509.AlgorithmIdentifier;

        $r2 = <org.spongycastle.asn1.oiw.OIWObjectIdentifiers: org.spongycastle.asn1.ASN1ObjectIdentifier idSHA1>;

        specialinvoke $r1.<org.spongycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r2);

        return $r1;
    }
    public byte[] getDigest()
    {
        org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator r0;
        byte[] r1;
        org.spongycastle.crypto.digests.SHA1Digest r2;
        java.io.ByteArrayOutputStream $r3;
        int $i0;

        r0 := @this: org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator;

        $r3 = r0.<org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator: java.io.ByteArrayOutputStream bOut>;

        r1 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r3 = r0.<org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void reset()>();

        r2 = new org.spongycastle.crypto.digests.SHA1Digest;

        specialinvoke r2.<org.spongycastle.crypto.digests.SHA1Digest: void <init>()>();

        $i0 = lengthof r1;

        interfaceinvoke r2.<org.spongycastle.crypto.Digest: void update(byte[],int,int)>(r1, 0, $i0);

        $i0 = interfaceinvoke r2.<org.spongycastle.crypto.Digest: int getDigestSize()>();

        r1 = newarray (byte)[$i0];

        interfaceinvoke r2.<org.spongycastle.crypto.Digest: int doFinal(byte[],int)>(r1, 0);

        return r1;
    }
    public java.io.OutputStream getOutputStream()
    {
        org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator r0;
        java.io.ByteArrayOutputStream r1;

        r0 := @this: org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator;

        r1 = r0.<org.spongycastle.cert.bc.BcX509ExtensionUtils$SHA1DigestCalculator: java.io.ByteArrayOutputStream bOut>;

        return r1;
    }
