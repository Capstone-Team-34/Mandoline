org.spongycastle.cert.path.validations.CertificatePoliciesValidation extends java.lang.Object implements org.spongycastle.cert.path.CertPathValidation
private int explicitPolicy
private int inhibitAnyPolicy
private int policyMapping
    void <init>(int)
    {
        org.spongycastle.cert.path.validations.CertificatePoliciesValidation r0;
        int $i0;

        r0 := @this: org.spongycastle.cert.path.validations.CertificatePoliciesValidation;

        $i0 := @parameter0: int;

        specialinvoke r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: void <init>(int,boolean,boolean,boolean)>($i0, 0, 0, 0);

        return;
    }
    void <init>(int, boolean, boolean, boolean)
    {
        org.spongycastle.cert.path.validations.CertificatePoliciesValidation r0;
        int $i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.spongycastle.cert.path.validations.CertificatePoliciesValidation;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $z0 == 0 goto label3;

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int explicitPolicy> = 0;

     label1:
        if $z1 == 0 goto label4;

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int inhibitAnyPolicy> = 0;

     label2:
        if $z2 == 0 goto label5;

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int policyMapping> = 0;

        return;

     label3:
        $i1 = $i0 + 1;

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int explicitPolicy> = $i1;

        goto label1;

     label4:
        $i1 = $i0 + 1;

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int inhibitAnyPolicy> = $i1;

        goto label2;

     label5:
        $i0 = $i0 + 1;

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int policyMapping> = $i0;

        return;
    }
    private int countDown(int)
    {
        org.spongycastle.cert.path.validations.CertificatePoliciesValidation r0;
        int $i0;

        r0 := @this: org.spongycastle.cert.path.validations.CertificatePoliciesValidation;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $i0 = $i0 + -1;

        return $i0;

     label1:
        return 0;
    }
    public org.spongycastle.util.Memoable copy()
    {
        org.spongycastle.cert.path.validations.CertificatePoliciesValidation r0;

        r0 := @this: org.spongycastle.cert.path.validations.CertificatePoliciesValidation;

        r0 = new org.spongycastle.cert.path.validations.CertificatePoliciesValidation;

        specialinvoke r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: void <init>(int)>(0);

        return r0;
    }
    public void reset(org.spongycastle.util.Memoable)
    {
        org.spongycastle.cert.path.validations.CertificatePoliciesValidation r0;
        org.spongycastle.util.Memoable $r1;

        r0 := @this: org.spongycastle.cert.path.validations.CertificatePoliciesValidation;

        $r1 := @parameter0: org.spongycastle.util.Memoable;

        r0 = (org.spongycastle.cert.path.validations.CertificatePoliciesValidation) $r1;

        return;
    }
    public void validate(org.spongycastle.cert.path.CertPathValidationContext, org.spongycastle.cert.X509CertificateHolder) throws org.spongycastle.cert.path.CertPathValidationException
    {
        org.spongycastle.cert.path.validations.CertificatePoliciesValidation r0;
        org.spongycastle.cert.path.CertPathValidationContext $r1;
        org.spongycastle.cert.X509CertificateHolder $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        boolean $z0;
        int $i0, $i1;
        org.spongycastle.asn1.x509.Extensions $r4;
        org.spongycastle.asn1.x509.PolicyConstraints $r5;
        java.math.BigInteger $r6;
        org.spongycastle.asn1.x509.Extension $r7;
        org.spongycastle.asn1.ASN1Encodable $r8;
        org.spongycastle.asn1.ASN1Integer $r9;

        r0 := @this: org.spongycastle.cert.path.validations.CertificatePoliciesValidation;

        $r1 := @parameter0: org.spongycastle.cert.path.CertPathValidationContext;

        $r2 := @parameter1: org.spongycastle.cert.X509CertificateHolder;

        $r3 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier policyConstraints>;

        virtualinvoke $r1.<org.spongycastle.cert.path.CertPathValidationContext: void addHandledExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r3);

        $r3 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier inhibitAnyPolicy>;

        virtualinvoke $r1.<org.spongycastle.cert.path.CertPathValidationContext: void addHandledExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r3);

        $z0 = virtualinvoke $r1.<org.spongycastle.cert.path.CertPathValidationContext: boolean isEndEntity()>();

        if $z0 != 0 goto label3;

        $z0 = staticinvoke <org.spongycastle.cert.path.validations.ValidationUtils: boolean isSelfIssued(org.spongycastle.cert.X509CertificateHolder)>($r2);

        if $z0 != 0 goto label3;

        $i0 = r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int explicitPolicy>;

        $i0 = specialinvoke r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int countDown(int)>($i0);

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int explicitPolicy> = $i0;

        $i0 = r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int policyMapping>;

        $i0 = specialinvoke r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int countDown(int)>($i0);

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int policyMapping> = $i0;

        $i0 = r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int inhibitAnyPolicy>;

        $i0 = specialinvoke r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int countDown(int)>($i0);

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int inhibitAnyPolicy> = $i0;

        $r4 = virtualinvoke $r2.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        $r5 = staticinvoke <org.spongycastle.asn1.x509.PolicyConstraints: org.spongycastle.asn1.x509.PolicyConstraints fromExtensions(org.spongycastle.asn1.x509.Extensions)>($r4);

        if $r5 == null goto label2;

        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.PolicyConstraints: java.math.BigInteger getRequireExplicitPolicyMapping()>();

        if $r6 == null goto label1;

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        $i1 = r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int explicitPolicy>;

        if $i0 >= $i1 goto label1;

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int explicitPolicy> = $i0;

     label1:
        $r6 = virtualinvoke $r5.<org.spongycastle.asn1.x509.PolicyConstraints: java.math.BigInteger getInhibitPolicyMapping()>();

        if $r6 == null goto label2;

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        $i1 = r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int policyMapping>;

        if $i0 >= $i1 goto label2;

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int policyMapping> = $i0;

     label2:
        $r3 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier inhibitAnyPolicy>;

        $r7 = virtualinvoke $r2.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Extension getExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r3);

        if $r7 == null goto label3;

        $r8 = virtualinvoke $r7.<org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1Encodable getParsedValue()>();

        $r9 = staticinvoke <org.spongycastle.asn1.ASN1Integer: org.spongycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r8);

        $r6 = virtualinvoke $r9.<org.spongycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        $i1 = r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int inhibitAnyPolicy>;

        if $i0 >= $i1 goto label3;

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: int inhibitAnyPolicy> = $i0;

     label3:
        return;
    }
