org.spongycastle.cert.path.validations.KeyUsageValidation extends java.lang.Object implements org.spongycastle.cert.path.CertPathValidation
private boolean isMandatory
    public void <init>()
    {
        org.spongycastle.cert.path.validations.KeyUsageValidation r0;

        r0 := @this: org.spongycastle.cert.path.validations.KeyUsageValidation;

        specialinvoke r0.<org.spongycastle.cert.path.validations.KeyUsageValidation: void <init>(boolean)>(1);

        return;
    }
    public void <init>(boolean)
    {
        org.spongycastle.cert.path.validations.KeyUsageValidation r0;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.path.validations.KeyUsageValidation;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.path.validations.KeyUsageValidation: boolean isMandatory> = $z0;

        return;
    }
    public org.spongycastle.util.Memoable copy()
    {
        org.spongycastle.cert.path.validations.KeyUsageValidation r0, $r1;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.path.validations.KeyUsageValidation;

        $r1 = new org.spongycastle.cert.path.validations.KeyUsageValidation;

        $z0 = r0.<org.spongycastle.cert.path.validations.KeyUsageValidation: boolean isMandatory>;

        specialinvoke $r1.<org.spongycastle.cert.path.validations.KeyUsageValidation: void <init>(boolean)>($z0);

        return $r1;
    }
    public void reset(org.spongycastle.util.Memoable)
    {
        org.spongycastle.cert.path.validations.KeyUsageValidation r0, r2;
        org.spongycastle.util.Memoable $r1;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.path.validations.KeyUsageValidation;

        $r1 := @parameter0: org.spongycastle.util.Memoable;

        r2 = (org.spongycastle.cert.path.validations.KeyUsageValidation) $r1;

        $z0 = r2.<org.spongycastle.cert.path.validations.KeyUsageValidation: boolean isMandatory>;

        r0.<org.spongycastle.cert.path.validations.KeyUsageValidation: boolean isMandatory> = $z0;

        return;
    }
    public void validate(org.spongycastle.cert.path.CertPathValidationContext, org.spongycastle.cert.X509CertificateHolder) throws org.spongycastle.cert.path.CertPathValidationException
    {
        org.spongycastle.cert.path.validations.KeyUsageValidation r0;
        org.spongycastle.cert.path.CertPathValidationContext $r1;
        org.spongycastle.cert.X509CertificateHolder $r2;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r3;
        boolean $z0;
        org.spongycastle.asn1.x509.Extensions $r4;
        org.spongycastle.asn1.x509.KeyUsage $r5;
        org.spongycastle.cert.path.CertPathValidationException $r6;

        r0 := @this: org.spongycastle.cert.path.validations.KeyUsageValidation;

        $r1 := @parameter0: org.spongycastle.cert.path.CertPathValidationContext;

        $r2 := @parameter1: org.spongycastle.cert.X509CertificateHolder;

        $r3 = <org.spongycastle.asn1.x509.Extension: org.spongycastle.asn1.ASN1ObjectIdentifier keyUsage>;

        virtualinvoke $r1.<org.spongycastle.cert.path.CertPathValidationContext: void addHandledExtension(org.spongycastle.asn1.ASN1ObjectIdentifier)>($r3);

        $z0 = virtualinvoke $r1.<org.spongycastle.cert.path.CertPathValidationContext: boolean isEndEntity()>();

        if $z0 != 0 goto label2;

        $r4 = virtualinvoke $r2.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.Extensions getExtensions()>();

        $r5 = staticinvoke <org.spongycastle.asn1.x509.KeyUsage: org.spongycastle.asn1.x509.KeyUsage fromExtensions(org.spongycastle.asn1.x509.Extensions)>($r4);

        if $r5 == null goto label1;

        $z0 = virtualinvoke $r5.<org.spongycastle.asn1.x509.KeyUsage: boolean hasUsages(int)>(4);

        if $z0 != 0 goto label2;

        $r6 = new org.spongycastle.cert.path.CertPathValidationException;

        specialinvoke $r6.<org.spongycastle.cert.path.CertPathValidationException: void <init>(java.lang.String)>("Issuer certificate KeyUsage extension does not permit key signing");

        throw $r6;

     label1:
        $z0 = r0.<org.spongycastle.cert.path.validations.KeyUsageValidation: boolean isMandatory>;

        if $z0 == 0 goto label2;

        $r6 = new org.spongycastle.cert.path.CertPathValidationException;

        specialinvoke $r6.<org.spongycastle.cert.path.CertPathValidationException: void <init>(java.lang.String)>("KeyUsage extension not present in CA certificate");

        throw $r6;

     label2:
        return;
    }
