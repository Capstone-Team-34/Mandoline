org.spongycastle.cert.path.validations.ParentCertIssuedValidation extends java.lang.Object implements org.spongycastle.cert.path.CertPathValidation
private org.spongycastle.cert.X509ContentVerifierProviderBuilder contentVerifierProvider
private org.spongycastle.asn1.x509.AlgorithmIdentifier workingAlgId
private org.spongycastle.asn1.x500.X500Name workingIssuerName
private org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey
    public void <init>(org.spongycastle.cert.X509ContentVerifierProviderBuilder)
    {
        org.spongycastle.cert.path.validations.ParentCertIssuedValidation r0;
        org.spongycastle.cert.X509ContentVerifierProviderBuilder $r1;

        r0 := @this: org.spongycastle.cert.path.validations.ParentCertIssuedValidation;

        $r1 := @parameter0: org.spongycastle.cert.X509ContentVerifierProviderBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.cert.X509ContentVerifierProviderBuilder contentVerifierProvider> = $r1;

        return;
    }
    private boolean isNull(org.spongycastle.asn1.ASN1Encodable)
    {
        org.spongycastle.cert.path.validations.ParentCertIssuedValidation r0;
        org.spongycastle.asn1.ASN1Encodable $r1;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.path.validations.ParentCertIssuedValidation;

        $r1 := @parameter0: org.spongycastle.asn1.ASN1Encodable;

        if $r1 == null goto label1;

        $z0 = $r1 instanceof org.spongycastle.asn1.ASN1Null;

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public org.spongycastle.util.Memoable copy()
    {
        org.spongycastle.cert.path.validations.ParentCertIssuedValidation r0, r1;
        org.spongycastle.cert.X509ContentVerifierProviderBuilder $r2;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r3;
        org.spongycastle.asn1.x500.X500Name $r4;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r5;

        r0 := @this: org.spongycastle.cert.path.validations.ParentCertIssuedValidation;

        r1 = new org.spongycastle.cert.path.validations.ParentCertIssuedValidation;

        $r2 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.cert.X509ContentVerifierProviderBuilder contentVerifierProvider>;

        specialinvoke r1.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: void <init>(org.spongycastle.cert.X509ContentVerifierProviderBuilder)>($r2);

        $r3 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.AlgorithmIdentifier workingAlgId>;

        r1.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.AlgorithmIdentifier workingAlgId> = $r3;

        $r4 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x500.X500Name workingIssuerName>;

        r1.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x500.X500Name workingIssuerName> = $r4;

        $r5 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey>;

        r1.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey> = $r5;

        return r1;
    }
    public void reset(org.spongycastle.util.Memoable)
    {
        org.spongycastle.cert.path.validations.ParentCertIssuedValidation r0, r2;
        org.spongycastle.util.Memoable $r1;
        org.spongycastle.cert.X509ContentVerifierProviderBuilder $r3;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r4;
        org.spongycastle.asn1.x500.X500Name $r5;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r6;

        r0 := @this: org.spongycastle.cert.path.validations.ParentCertIssuedValidation;

        $r1 := @parameter0: org.spongycastle.util.Memoable;

        r2 = (org.spongycastle.cert.path.validations.ParentCertIssuedValidation) $r1;

        $r3 = r2.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.cert.X509ContentVerifierProviderBuilder contentVerifierProvider>;

        r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.cert.X509ContentVerifierProviderBuilder contentVerifierProvider> = $r3;

        $r4 = r2.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.AlgorithmIdentifier workingAlgId>;

        r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.AlgorithmIdentifier workingAlgId> = $r4;

        $r5 = r2.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x500.X500Name workingIssuerName>;

        r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x500.X500Name workingIssuerName> = $r5;

        $r6 = r2.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey>;

        r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey> = $r6;

        return;
    }
    public void validate(org.spongycastle.cert.path.CertPathValidationContext, org.spongycastle.cert.X509CertificateHolder) throws org.spongycastle.cert.path.CertPathValidationException
    {
        org.spongycastle.cert.path.validations.ParentCertIssuedValidation r0;
        org.spongycastle.cert.path.CertPathValidationContext $r1;
        org.spongycastle.cert.X509CertificateHolder $r2;
        org.spongycastle.asn1.x500.X500Name $r3, $r4;
        boolean $z0;
        org.spongycastle.cert.path.CertPathValidationException $r5;
        org.spongycastle.asn1.x509.SubjectPublicKeyInfo $r6, $r14;
        org.spongycastle.asn1.x509.AlgorithmIdentifier $r7, $r8;
        org.spongycastle.cert.X509ContentVerifierProviderBuilder $r9;
        org.spongycastle.operator.ContentVerifierProvider $r10;
        org.spongycastle.operator.OperatorCreationException r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r13;
        org.spongycastle.asn1.ASN1Primitive $r15;
        org.spongycastle.cert.CertException r16;
        java.io.IOException r17;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r18, $r19;
        org.spongycastle.asn1.ASN1Encodable $r20;

        r0 := @this: org.spongycastle.cert.path.validations.ParentCertIssuedValidation;

        $r1 := @parameter0: org.spongycastle.cert.path.CertPathValidationContext;

        $r2 := @parameter1: org.spongycastle.cert.X509CertificateHolder;

        $r3 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x500.X500Name workingIssuerName>;

        if $r3 == null goto label01;

        $r3 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x500.X500Name workingIssuerName>;

        $r4 = virtualinvoke $r2.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x500.X500Name getIssuer()>();

        $z0 = virtualinvoke $r3.<org.spongycastle.asn1.x500.X500Name: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label01;

        $r5 = new org.spongycastle.cert.path.CertPathValidationException;

        specialinvoke $r5.<org.spongycastle.cert.path.CertPathValidationException: void <init>(java.lang.String)>("Certificate issue does not match parent");

        throw $r5;

     label01:
        $r6 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey>;

        if $r6 == null goto label17;

        $r6 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey>;

     label02:
        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

     label03:
        $r8 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.AlgorithmIdentifier workingAlgId>;

     label04:
        $z0 = virtualinvoke $r7.<org.spongycastle.asn1.x509.AlgorithmIdentifier: boolean equals(java.lang.Object)>($r8);

     label05:
        if $z0 == 0 goto label12;

        $r6 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey>;

     label06:
        $r9 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.cert.X509ContentVerifierProviderBuilder contentVerifierProvider>;

     label07:
        $r10 = interfaceinvoke $r9.<org.spongycastle.cert.X509ContentVerifierProviderBuilder: org.spongycastle.operator.ContentVerifierProvider build(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>($r6);

        $z0 = virtualinvoke $r2.<org.spongycastle.cert.X509CertificateHolder: boolean isSignatureValid(org.spongycastle.operator.ContentVerifierProvider)>($r10);

     label08:
        if $z0 != 0 goto label17;

        $r5 = new org.spongycastle.cert.path.CertPathValidationException;

     label09:
        specialinvoke $r5.<org.spongycastle.cert.path.CertPathValidationException: void <init>(java.lang.String)>("Certificate signature not for public key in parent");

     label10:
        throw $r5;

     label11:
        r11 := @caughtexception;

        $r5 = new org.spongycastle.cert.path.CertPathValidationException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create verifier: ");

        $r13 = virtualinvoke r11.<org.spongycastle.operator.OperatorCreationException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.spongycastle.cert.path.CertPathValidationException: void <init>(java.lang.String,java.lang.Exception)>($r13, r11);

        throw $r5;

     label12:
        $r6 = new org.spongycastle.asn1.x509.SubjectPublicKeyInfo;

        $r7 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.AlgorithmIdentifier workingAlgId>;

        $r14 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey>;

     label13:
        $r15 = virtualinvoke $r14.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.ASN1Primitive parsePublicKey()>();

        specialinvoke $r6.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1Encodable)>($r7, $r15);

     label14:
        goto label06;

     label15:
        r16 := @caughtexception;

        $r5 = new org.spongycastle.cert.path.CertPathValidationException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to validate signature: ");

        $r13 = virtualinvoke r16.<org.spongycastle.cert.CertException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.spongycastle.cert.path.CertPathValidationException: void <init>(java.lang.String,java.lang.Exception)>($r13, r16);

        throw $r5;

     label16:
        r17 := @caughtexception;

        $r5 = new org.spongycastle.cert.path.CertPathValidationException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to build public key: ");

        $r13 = virtualinvoke r17.<java.io.IOException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.spongycastle.cert.path.CertPathValidationException: void <init>(java.lang.String,java.lang.Exception)>($r13, r17);

        throw $r5;

     label17:
        $r3 = virtualinvoke $r2.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x500.X500Name getSubject()>();

        r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x500.X500Name workingIssuerName> = $r3;

        $r6 = virtualinvoke $r2.<org.spongycastle.cert.X509CertificateHolder: org.spongycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()>();

        r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey> = $r6;

        $r7 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.AlgorithmIdentifier workingAlgId>;

        if $r7 == null goto label19;

        $r6 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey>;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        $r18 = virtualinvoke $r7.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $r7 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.AlgorithmIdentifier workingAlgId>;

        $r19 = virtualinvoke $r7.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1ObjectIdentifier getAlgorithm()>();

        $z0 = virtualinvoke $r18.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r19);

        if $z0 == 0 goto label18;

        $r6 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey>;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        $r20 = virtualinvoke $r7.<org.spongycastle.asn1.x509.AlgorithmIdentifier: org.spongycastle.asn1.ASN1Encodable getParameters()>();

        $z0 = specialinvoke r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: boolean isNull(org.spongycastle.asn1.ASN1Encodable)>($r20);

        if $z0 != 0 goto label20;

        $r6 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey>;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.AlgorithmIdentifier workingAlgId> = $r7;

        return;

     label18:
        $r6 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey>;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.AlgorithmIdentifier workingAlgId> = $r7;

        return;

     label19:
        $r6 = r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.SubjectPublicKeyInfo workingPublicKey>;

        $r7 = virtualinvoke $r6.<org.spongycastle.asn1.x509.SubjectPublicKeyInfo: org.spongycastle.asn1.x509.AlgorithmIdentifier getAlgorithm()>();

        r0.<org.spongycastle.cert.path.validations.ParentCertIssuedValidation: org.spongycastle.asn1.x509.AlgorithmIdentifier workingAlgId> = $r7;

     label20:
        return;

        catch org.spongycastle.operator.OperatorCreationException from label02 to label03 with label11;
        catch org.spongycastle.operator.OperatorCreationException from label04 to label05 with label11;
        catch org.spongycastle.operator.OperatorCreationException from label07 to label08 with label11;
        catch org.spongycastle.operator.OperatorCreationException from label09 to label10 with label11;
        catch org.spongycastle.cert.CertException from label02 to label03 with label15;
        catch org.spongycastle.cert.CertException from label04 to label05 with label15;
        catch org.spongycastle.cert.CertException from label07 to label08 with label15;
        catch org.spongycastle.cert.CertException from label09 to label10 with label15;
        catch java.io.IOException from label02 to label03 with label16;
        catch java.io.IOException from label04 to label05 with label16;
        catch java.io.IOException from label07 to label08 with label16;
        catch java.io.IOException from label09 to label10 with label16;
        catch org.spongycastle.operator.OperatorCreationException from label13 to label14 with label11;
        catch org.spongycastle.cert.CertException from label13 to label14 with label15;
        catch java.io.IOException from label13 to label14 with label16;
    }
