org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder extends java.lang.Object
private boolean isAnyPolicyInhibited
private boolean isExplicitPolicyRequired
private boolean isPolicyMappingInhibited
    public void <init>()
    {
        org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder r0;

        r0 := @this: org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public org.spongycastle.cert.path.validations.CertificatePoliciesValidation build(int)
    {
        org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder r0;
        int $i0;
        org.spongycastle.cert.path.validations.CertificatePoliciesValidation $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder;

        $i0 := @parameter0: int;

        $r1 = new org.spongycastle.cert.path.validations.CertificatePoliciesValidation;

        $z0 = r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder: boolean isExplicitPolicyRequired>;

        $z1 = r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder: boolean isAnyPolicyInhibited>;

        $z2 = r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder: boolean isPolicyMappingInhibited>;

        specialinvoke $r1.<org.spongycastle.cert.path.validations.CertificatePoliciesValidation: void <init>(int,boolean,boolean,boolean)>($i0, $z0, $z1, $z2);

        return $r1;
    }
    public org.spongycastle.cert.path.validations.CertificatePoliciesValidation build(org.spongycastle.cert.path.CertPath)
    {
        org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder r0;
        org.spongycastle.cert.path.CertPath $r1;
        int $i0;
        org.spongycastle.cert.path.validations.CertificatePoliciesValidation $r2;

        r0 := @this: org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder;

        $r1 := @parameter0: org.spongycastle.cert.path.CertPath;

        $i0 = virtualinvoke $r1.<org.spongycastle.cert.path.CertPath: int length()>();

        $r2 = virtualinvoke r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder: org.spongycastle.cert.path.validations.CertificatePoliciesValidation build(int)>($i0);

        return $r2;
    }
    public void setAnyPolicyInhibited(boolean)
    {
        org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder r0;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder: boolean isAnyPolicyInhibited> = $z0;

        return;
    }
    public void setExplicitPolicyRequired(boolean)
    {
        org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder r0;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder: boolean isExplicitPolicyRequired> = $z0;

        return;
    }
    public void setPolicyMappingInhibited(boolean)
    {
        org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder r0;
        boolean $z0;

        r0 := @this: org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder;

        $z0 := @parameter0: boolean;

        r0.<org.spongycastle.cert.path.validations.CertificatePoliciesValidationBuilder: boolean isPolicyMappingInhibited> = $z0;

        return;
    }
