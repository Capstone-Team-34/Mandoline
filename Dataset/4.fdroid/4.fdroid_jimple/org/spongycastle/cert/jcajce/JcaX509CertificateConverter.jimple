org.spongycastle.cert.jcajce.JcaX509CertificateConverter extends java.lang.Object
private org.spongycastle.cert.jcajce.CertHelper helper
    public void <init>()
    {
        org.spongycastle.cert.jcajce.JcaX509CertificateConverter r0;
        org.spongycastle.cert.jcajce.DefaultCertHelper $r1;

        r0 := @this: org.spongycastle.cert.jcajce.JcaX509CertificateConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.spongycastle.cert.jcajce.DefaultCertHelper;

        specialinvoke $r1.<org.spongycastle.cert.jcajce.DefaultCertHelper: void <init>()>();

        r0.<org.spongycastle.cert.jcajce.JcaX509CertificateConverter: org.spongycastle.cert.jcajce.CertHelper helper> = $r1;

        $r1 = new org.spongycastle.cert.jcajce.DefaultCertHelper;

        specialinvoke $r1.<org.spongycastle.cert.jcajce.DefaultCertHelper: void <init>()>();

        r0.<org.spongycastle.cert.jcajce.JcaX509CertificateConverter: org.spongycastle.cert.jcajce.CertHelper helper> = $r1;

        return;
    }
    public java.security.cert.X509Certificate getCertificate(org.spongycastle.cert.X509CertificateHolder) throws java.security.cert.CertificateException
    {
        org.spongycastle.cert.jcajce.JcaX509CertificateConverter r0;
        org.spongycastle.cert.X509CertificateHolder $r1;
        org.spongycastle.cert.jcajce.CertHelper $r2;
        java.security.cert.CertificateFactory $r3;
        java.io.ByteArrayInputStream $r4;
        byte[] $r5;
        java.security.cert.Certificate $r6;
        java.security.cert.X509Certificate $r7;
        java.io.IOException r8;
        org.spongycastle.cert.jcajce.JcaX509CertificateConverter$ExCertificateParsingException $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;
        java.security.NoSuchProviderException r12;
        org.spongycastle.cert.jcajce.JcaX509CertificateConverter$ExCertificateException $r13;

        r0 := @this: org.spongycastle.cert.jcajce.JcaX509CertificateConverter;

        $r1 := @parameter0: org.spongycastle.cert.X509CertificateHolder;

        $r2 = r0.<org.spongycastle.cert.jcajce.JcaX509CertificateConverter: org.spongycastle.cert.jcajce.CertHelper helper>;

     label1:
        $r3 = virtualinvoke $r2.<org.spongycastle.cert.jcajce.CertHelper: java.security.cert.CertificateFactory getCertificateFactory(java.lang.String)>("X.509");

     label2:
        $r4 = new java.io.ByteArrayInputStream;

     label3:
        $r5 = virtualinvoke $r1.<org.spongycastle.cert.X509CertificateHolder: byte[] getEncoded()>();

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        $r6 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4);

     label4:
        $r7 = (java.security.cert.X509Certificate) $r6;

        return $r7;

     label5:
        r8 := @caughtexception;

        $r9 = new org.spongycastle.cert.jcajce.JcaX509CertificateConverter$ExCertificateParsingException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception parsing certificate: ");

        $r11 = virtualinvoke r8.<java.io.IOException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.spongycastle.cert.jcajce.JcaX509CertificateConverter$ExCertificateParsingException: void <init>(org.spongycastle.cert.jcajce.JcaX509CertificateConverter,java.lang.String,java.lang.Throwable)>(r0, $r11, r8);

        throw $r9;

     label6:
        r12 := @caughtexception;

        $r13 = new org.spongycastle.cert.jcajce.JcaX509CertificateConverter$ExCertificateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot find required provider:");

        $r11 = virtualinvoke r12.<java.security.NoSuchProviderException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.spongycastle.cert.jcajce.JcaX509CertificateConverter$ExCertificateException: void <init>(org.spongycastle.cert.jcajce.JcaX509CertificateConverter,java.lang.String,java.lang.Throwable)>(r0, $r11, r12);

        throw $r13;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
        catch java.security.NoSuchProviderException from label1 to label2 with label6;
        catch java.security.NoSuchProviderException from label3 to label4 with label6;
    }
    public org.spongycastle.cert.jcajce.JcaX509CertificateConverter setProvider(java.lang.String)
    {
        org.spongycastle.cert.jcajce.JcaX509CertificateConverter r0;
        java.lang.String $r1;
        org.spongycastle.cert.jcajce.NamedCertHelper $r2;

        r0 := @this: org.spongycastle.cert.jcajce.JcaX509CertificateConverter;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.spongycastle.cert.jcajce.NamedCertHelper;

        specialinvoke $r2.<org.spongycastle.cert.jcajce.NamedCertHelper: void <init>(java.lang.String)>($r1);

        r0.<org.spongycastle.cert.jcajce.JcaX509CertificateConverter: org.spongycastle.cert.jcajce.CertHelper helper> = $r2;

        return r0;
    }
    public org.spongycastle.cert.jcajce.JcaX509CertificateConverter setProvider(java.security.Provider)
    {
        org.spongycastle.cert.jcajce.JcaX509CertificateConverter r0;
        java.security.Provider $r1;
        org.spongycastle.cert.jcajce.ProviderCertHelper $r2;

        r0 := @this: org.spongycastle.cert.jcajce.JcaX509CertificateConverter;

        $r1 := @parameter0: java.security.Provider;

        $r2 = new org.spongycastle.cert.jcajce.ProviderCertHelper;

        specialinvoke $r2.<org.spongycastle.cert.jcajce.ProviderCertHelper: void <init>(java.security.Provider)>($r1);

        r0.<org.spongycastle.cert.jcajce.JcaX509CertificateConverter: org.spongycastle.cert.jcajce.CertHelper helper> = $r2;

        return r0;
    }
