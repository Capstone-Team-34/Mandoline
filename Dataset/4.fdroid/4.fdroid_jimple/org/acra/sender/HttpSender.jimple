org.acra.sender.HttpSender extends java.lang.Object implements org.acra.sender.ReportSender
private final android.net.Uri mFormUri
private final java.util.Map mMapping
private final org.acra.sender.HttpSender$Method mMethod
private java.lang.String mPassword
private final org.acra.sender.HttpSender$Type mType
private java.lang.String mUsername
    public void <init>(org.acra.sender.HttpSender$Method, org.acra.sender.HttpSender$Type, java.util.Map)
    {
        org.acra.sender.HttpSender r0;
        org.acra.sender.HttpSender$Method $r1;
        org.acra.sender.HttpSender$Type $r2;
        java.util.Map r3;

        r0 := @this: org.acra.sender.HttpSender;

        $r1 := @parameter0: org.acra.sender.HttpSender$Method;

        $r2 := @parameter1: org.acra.sender.HttpSender$Type;

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.acra.sender.HttpSender: org.acra.sender.HttpSender$Method mMethod> = $r1;

        r0.<org.acra.sender.HttpSender: android.net.Uri mFormUri> = null;

        r0.<org.acra.sender.HttpSender: java.util.Map mMapping> = r3;

        r0.<org.acra.sender.HttpSender: org.acra.sender.HttpSender$Type mType> = $r2;

        r0.<org.acra.sender.HttpSender: java.lang.String mUsername> = null;

        r0.<org.acra.sender.HttpSender: java.lang.String mPassword> = null;

        return;
    }
    private java.util.Map remap(java.util.Map)
    {
        org.acra.sender.HttpSender r0;
        java.util.Map r1, $r7;
        org.acra.ReportField[] r2, r6;
        org.acra.ReportField r3;
        java.util.HashMap r4;
        int i0, i1;
        org.acra.ACRAConfiguration $r5;
        java.lang.Object $r8, $r10;
        java.lang.String $r9;

        r0 := @this: org.acra.sender.HttpSender;

        r1 := @parameter0: java.util.Map;

        $r5 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        r2 = virtualinvoke $r5.<org.acra.ACRAConfiguration: org.acra.ReportField[] customReportContent()>();

        r6 = r2;

        i0 = lengthof r2;

        if i0 != 0 goto label1;

        r6 = <org.acra.ACRAConstants: org.acra.ReportField[] DEFAULT_REPORT_FIELDS>;

     label1:
        r4 = new java.util.HashMap;

        i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        specialinvoke r4.<java.util.HashMap: void <init>(int)>(i0);

        r2 = r6;

        i0 = lengthof r6;

        i1 = 0;

     label2:
        if i1 >= i0 goto label6;

        r3 = r2[i1];

        $r7 = r0.<org.acra.sender.HttpSender: java.util.Map mMapping>;

        if $r7 == null goto label3;

        $r7 = r0.<org.acra.sender.HttpSender: java.util.Map mMapping>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        if $r8 != null goto label5;

     label3:
        $r9 = virtualinvoke r3.<org.acra.ReportField: java.lang.String toString()>();

        $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r8);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        $r7 = r0.<org.acra.sender.HttpSender: java.util.Map mMapping>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r10);

        goto label4;

     label6:
        return r4;
    }
    public void send(android.content.Context, org.acra.collector.CrashReportData) throws org.acra.sender.ReportSenderException
    {
        org.acra.sender.HttpSender r0;
        android.content.Context $r1;
        org.acra.collector.CrashReportData $r2;
        java.net.URL r3, r7;
        org.acra.util.HttpRequest r4;
        java.lang.String r5, $r9, $r12;
        android.net.Uri $r6;
        org.acra.ACRAConfiguration $r8;
        org.acra.log.ACRALog $r10;
        java.lang.StringBuilder $r11;
        int $i0;
        java.util.Map $r13;
        int[] $r14;
        org.acra.sender.HttpSender$Type $r15;
        org.acra.sender.HttpSender$Method $r16;
        java.lang.UnsupportedOperationException $r17;
        java.io.IOException r18;
        org.acra.sender.ReportSenderException $r19;
        org.acra.util.JSONReportBuilder$JSONReportException r20;
        boolean $z0;
        org.json.JSONObject $r21;
        org.acra.ReportField $r22;

        r0 := @this: org.acra.sender.HttpSender;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: org.acra.collector.CrashReportData;

        r5 = null;

        $r6 = r0.<org.acra.sender.HttpSender: android.net.Uri mFormUri>;

        if $r6 != null goto label21;

        r7 = new java.net.URL;

     label01:
        $r8 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        $r9 = virtualinvoke $r8.<org.acra.ACRAConfiguration: java.lang.String formUri()>();

        specialinvoke r7.<java.net.URL: void <init>(java.lang.String)>($r9);

     label02:
        $r10 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r9 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        $r11 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connect to ");

        $r12 = virtualinvoke r7.<java.net.URL: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.acra.log.ACRALog: int d(java.lang.String,java.lang.String)>($r9, $r12);

     label04:
        $r9 = r0.<org.acra.sender.HttpSender: java.lang.String mUsername>;

        if $r9 == null goto label25;

        $r9 = r0.<org.acra.sender.HttpSender: java.lang.String mUsername>;

     label05:
        $r12 = r0.<org.acra.sender.HttpSender: java.lang.String mPassword>;

        if $r12 == null goto label29;

        r5 = r0.<org.acra.sender.HttpSender: java.lang.String mPassword>;

     label06:
        r4 = new org.acra.util.HttpRequest;

     label07:
        specialinvoke r4.<org.acra.util.HttpRequest: void <init>()>();

        $r8 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        $i0 = virtualinvoke $r8.<org.acra.ACRAConfiguration: int connectionTimeout()>();

        virtualinvoke r4.<org.acra.util.HttpRequest: void setConnectionTimeOut(int)>($i0);

        $r8 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        $i0 = virtualinvoke $r8.<org.acra.ACRAConfiguration: int socketTimeout()>();

        virtualinvoke r4.<org.acra.util.HttpRequest: void setSocketTimeOut(int)>($i0);

        virtualinvoke r4.<org.acra.util.HttpRequest: void setLogin(java.lang.String)>($r9);

        virtualinvoke r4.<org.acra.util.HttpRequest: void setPassword(java.lang.String)>(r5);

        $r8 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        $r13 = virtualinvoke $r8.<org.acra.ACRAConfiguration: java.util.Map getHttpHeaders()>();

        virtualinvoke r4.<org.acra.util.HttpRequest: void setHeaders(java.util.Map)>($r13);

     label08:
        $r14 = <org.acra.sender.HttpSender$1: int[] $SwitchMap$org$acra$sender$HttpSender$Type>;

        $r15 = r0.<org.acra.sender.HttpSender: org.acra.sender.HttpSender$Type mType>;

     label09:
        $i0 = virtualinvoke $r15.<org.acra.sender.HttpSender$Type: int ordinal()>();

     label10:
        $i0 = $r14[$i0];

        lookupswitch($i0)
        {
            case 1: goto label33;
            default: goto label11;
        };

     label11:
        $r13 = specialinvoke r0.<org.acra.sender.HttpSender: java.util.Map remap(java.util.Map)>($r2);

        r5 = staticinvoke <org.acra.util.HttpRequest: java.lang.String getParamsAsFormString(java.util.Map)>($r13);

     label12:
        $r14 = <org.acra.sender.HttpSender$1: int[] $SwitchMap$org$acra$sender$HttpSender$Method>;

        $r16 = r0.<org.acra.sender.HttpSender: org.acra.sender.HttpSender$Method mMethod>;

     label13:
        $i0 = virtualinvoke $r16.<org.acra.sender.HttpSender$Method: int ordinal()>();

     label14:
        $i0 = $r14[$i0];

        lookupswitch($i0)
        {
            case 1: goto label40;
            case 2: goto label35;
            default: goto label15;
        };

     label15:
        $r17 = new java.lang.UnsupportedOperationException;

        $r11 = new java.lang.StringBuilder;

     label16:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown method: ");

     label17:
        $r16 = r0.<org.acra.sender.HttpSender: org.acra.sender.HttpSender$Method mMethod>;

     label18:
        r5 = virtualinvoke $r16.<org.acra.sender.HttpSender$Method: java.lang.String name()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(r5);

     label19:
        throw $r17;

     label20:
        r18 := @caughtexception;

        $r19 = new org.acra.sender.ReportSenderException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while sending ");

        $r8 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        $r15 = virtualinvoke $r8.<org.acra.ACRAConfiguration: org.acra.sender.HttpSender$Type reportType()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" report via Http ");

        $r16 = r0.<org.acra.sender.HttpSender: org.acra.sender.HttpSender$Method mMethod>;

        r5 = virtualinvoke $r16.<org.acra.sender.HttpSender$Method: java.lang.String name()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.acra.sender.ReportSenderException: void <init>(java.lang.String,java.lang.Throwable)>(r5, r18);

        throw $r19;

     label21:
        r7 = new java.net.URL;

        $r6 = r0.<org.acra.sender.HttpSender: android.net.Uri mFormUri>;

     label22:
        $r9 = virtualinvoke $r6.<android.net.Uri: java.lang.String toString()>();

        specialinvoke r7.<java.net.URL: void <init>(java.lang.String)>($r9);

     label23:
        goto label02;

     label24:
        r20 := @caughtexception;

        $r19 = new org.acra.sender.ReportSenderException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while sending ");

        $r8 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        $r15 = virtualinvoke $r8.<org.acra.ACRAConfiguration: org.acra.sender.HttpSender$Type reportType()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" report via Http ");

        $r16 = r0.<org.acra.sender.HttpSender: org.acra.sender.HttpSender$Method mMethod>;

        r5 = virtualinvoke $r16.<org.acra.sender.HttpSender$Method: java.lang.String name()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.acra.sender.ReportSenderException: void <init>(java.lang.String,java.lang.Throwable)>(r5, r20);

        throw $r19;

     label25:
        $r8 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        $r9 = virtualinvoke $r8.<org.acra.ACRAConfiguration: java.lang.String formUriBasicAuthLogin()>();

        $z0 = staticinvoke <org.acra.ACRAConfiguration: boolean isNull(java.lang.String)>($r9);

     label26:
        if $z0 == 0 goto label27;

        $r9 = null;

        goto label05;

     label27:
        $r8 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        $r9 = virtualinvoke $r8.<org.acra.ACRAConfiguration: java.lang.String formUriBasicAuthLogin()>();

     label28:
        goto label05;

     label29:
        $r8 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        $r12 = virtualinvoke $r8.<org.acra.ACRAConfiguration: java.lang.String formUriBasicAuthPassword()>();

        $z0 = staticinvoke <org.acra.ACRAConfiguration: boolean isNull(java.lang.String)>($r12);

     label30:
        if $z0 != 0 goto label06;

     label31:
        $r8 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        r5 = virtualinvoke $r8.<org.acra.ACRAConfiguration: java.lang.String formUriBasicAuthPassword()>();

     label32:
        goto label06;

     label33:
        $r21 = virtualinvoke $r2.<org.acra.collector.CrashReportData: org.json.JSONObject toJSON()>();

        r5 = virtualinvoke $r21.<org.json.JSONObject: java.lang.String toString()>();

     label34:
        goto label12;

     label35:
        r3 = new java.net.URL;

        $r11 = new java.lang.StringBuilder;

     label36:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r7.<java.net.URL: java.lang.String toString()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

     label37:
        $r22 = <org.acra.ReportField: org.acra.ReportField REPORT_ID>;

     label38:
        $r9 = virtualinvoke $r2.<org.acra.collector.CrashReportData: java.lang.String getProperty(org.acra.ReportField)>($r22);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.net.URL: void <init>(java.lang.String)>($r9);

     label39:
        r7 = r3;

     label40:
        $r16 = r0.<org.acra.sender.HttpSender: org.acra.sender.HttpSender$Method mMethod>;

        $r15 = r0.<org.acra.sender.HttpSender: org.acra.sender.HttpSender$Type mType>;

     label41:
        virtualinvoke r4.<org.acra.util.HttpRequest: void send(java.net.URL,org.acra.sender.HttpSender$Method,java.lang.String,org.acra.sender.HttpSender$Type)>(r7, $r16, r5, $r15);

     label42:
        return;

        catch java.io.IOException from label01 to label02 with label20;
        catch java.io.IOException from label03 to label04 with label20;
        catch java.io.IOException from label07 to label08 with label20;
        catch java.io.IOException from label09 to label10 with label20;
        catch java.io.IOException from label11 to label12 with label20;
        catch java.io.IOException from label13 to label14 with label20;
        catch java.io.IOException from label16 to label17 with label20;
        catch java.io.IOException from label18 to label19 with label20;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label01 to label02 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label03 to label04 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label07 to label08 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label09 to label10 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label11 to label12 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label13 to label14 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label16 to label17 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label18 to label19 with label24;
        catch java.io.IOException from label22 to label23 with label20;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label22 to label23 with label24;
        catch java.io.IOException from label25 to label26 with label20;
        catch java.io.IOException from label27 to label28 with label20;
        catch java.io.IOException from label29 to label30 with label20;
        catch java.io.IOException from label31 to label32 with label20;
        catch java.io.IOException from label33 to label34 with label20;
        catch java.io.IOException from label36 to label37 with label20;
        catch java.io.IOException from label38 to label39 with label20;
        catch java.io.IOException from label41 to label42 with label20;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label25 to label26 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label27 to label28 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label29 to label30 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label31 to label32 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label33 to label34 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label36 to label37 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label38 to label39 with label24;
        catch org.acra.util.JSONReportBuilder$JSONReportException from label41 to label42 with label24;
    }
