org.acra.util.Installation extends java.lang.Object
private static java.lang.String sID
    public static java.lang.String id(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File r1, $r3;
        java.lang.String $r2, $r7;
        boolean $z0;
        java.io.IOException r4;
        org.acra.log.ACRALog $r5;
        java.lang.StringBuilder $r6;
        java.lang.RuntimeException r8;
        java.lang.Throwable $r9;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lorg/acra/util/Installation;";

     label01:
        $r2 = <org.acra.util.Installation: java.lang.String sID>;

        if $r2 != null goto label07;

        r1 = new java.io.File;

        $r3 = virtualinvoke $r0.<android.content.Context: java.io.File getFilesDir()>();

        specialinvoke r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "ACRA-INSTALLATION");

     label02:
        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

     label03:
        if $z0 != 0 goto label05;

     label04:
        staticinvoke <org.acra.util.Installation: void writeInstallationFile(java.io.File)>(r1);

     label05:
        $r2 = staticinvoke <org.acra.util.Installation: java.lang.String readInstallationFile(java.io.File)>(r1);

     label06:
        <org.acra.util.Installation: java.lang.String sID> = $r2;

     label07:
        $r2 = <org.acra.util.Installation: java.lang.String sID>;

     label08:
        exitmonitor class "Lorg/acra/util/Installation;";

        return $r2;

     label09:
        r4 := @caughtexception;

     label10:
        $r5 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r2 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t retrieve InstallationId for ");

        $r7 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, $r7, r4);

        $r2 = "Couldn\'t retrieve InstallationId";

        goto label08;

     label11:
        r8 := @caughtexception;

        $r5 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r2 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t retrieve InstallationId for ");

        $r7 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, $r7, r8);

        $r2 = "Couldn\'t retrieve InstallationId";

     label12:
        goto label08;

     label13:
        $r9 := @caughtexception;

        exitmonitor class "Lorg/acra/util/Installation;";

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.io.IOException from label02 to label03 with label09;
        catch java.io.IOException from label04 to label06 with label09;
        catch java.lang.RuntimeException from label02 to label03 with label11;
        catch java.lang.RuntimeException from label04 to label06 with label11;
        catch java.lang.Throwable from label02 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label12 with label13;
    }
    private static java.lang.String readInstallationFile(java.io.File) throws java.io.IOException
    {
        java.io.File $r0;
        byte[] r1;
        java.io.RandomAccessFile r2;
        long $l0;
        int $i1;
        java.lang.String $r3;
        java.lang.Throwable $r4;

        $r0 := @parameter0: java.io.File;

        r2 = new java.io.RandomAccessFile;

        specialinvoke r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r0, "r");

        $l0 = virtualinvoke r2.<java.io.RandomAccessFile: long length()>();

        $i1 = (int) $l0;

        r1 = newarray (byte)[$i1];

     label1:
        virtualinvoke r2.<java.io.RandomAccessFile: void readFully(byte[])>(r1);

     label2:
        virtualinvoke r2.<java.io.RandomAccessFile: void close()>();

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[])>(r1);

        return $r3;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r2.<java.io.RandomAccessFile: void close()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    private static void writeInstallationFile(java.io.File) throws java.io.IOException
    {
        java.io.File $r0;
        java.io.FileOutputStream r1;
        java.util.UUID $r2;
        java.lang.String $r3;
        byte[] $r4;
        java.lang.Throwable $r5;

        $r0 := @parameter0: java.io.File;

        r1 = new java.io.FileOutputStream;

        specialinvoke r1.<java.io.FileOutputStream: void <init>(java.io.File)>($r0);

     label1:
        $r2 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r3 = virtualinvoke $r2.<java.util.UUID: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r1.<java.io.FileOutputStream: void write(byte[])>($r4);

     label2:
        virtualinvoke r1.<java.io.FileOutputStream: void close()>();

        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r1.<java.io.FileOutputStream: void close()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
