org.acra.collector.ConfigurationCollector extends java.lang.Object
private final java.util.HashMap mValueArrays
    private void <init>()
    {
        org.acra.collector.ConfigurationCollector r0;
        java.lang.reflect.Field r1;
        android.util.SparseArray r2, r3, r4, r5, r6, r7, r8, r9, r10;
        int i0, i1, $i2;
        java.util.HashMap $r11;
        java.lang.Class $r12;
        java.lang.reflect.Field[] $r13;
        boolean $z0;
        java.lang.String $r14;
        java.lang.IllegalArgumentException r15;
        org.acra.log.ACRALog $r16;
        java.lang.IllegalAccessException r17;

        r0 := @this: org.acra.collector.ConfigurationCollector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r0.<org.acra.collector.ConfigurationCollector: java.util.HashMap mValueArrays> = $r11;

        r2 = new android.util.SparseArray;

        specialinvoke r2.<android.util.SparseArray: void <init>()>();

        r4 = new android.util.SparseArray;

        specialinvoke r4.<android.util.SparseArray: void <init>()>();

        r3 = new android.util.SparseArray;

        specialinvoke r3.<android.util.SparseArray: void <init>()>();

        r6 = new android.util.SparseArray;

        specialinvoke r6.<android.util.SparseArray: void <init>()>();

        r5 = new android.util.SparseArray;

        specialinvoke r5.<android.util.SparseArray: void <init>()>();

        r7 = new android.util.SparseArray;

        specialinvoke r7.<android.util.SparseArray: void <init>()>();

        r8 = new android.util.SparseArray;

        specialinvoke r8.<android.util.SparseArray: void <init>()>();

        r9 = new android.util.SparseArray;

        specialinvoke r9.<android.util.SparseArray: void <init>()>();

        r10 = new android.util.SparseArray;

        specialinvoke r10.<android.util.SparseArray: void <init>()>();

        $r12 = class "Landroid/content/res/Configuration;";

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        i0 = lengthof $r13;

        i1 = 0;

     label01:
        if i1 >= i0 goto label40;

        r1 = $r13[i1];

        $i2 = virtualinvoke r1.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i2);

        if $z0 == 0 goto label05;

        $i2 = virtualinvoke r1.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i2);

        if $z0 == 0 goto label05;

        $r14 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

     label02:
        $z0 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("HARDKEYBOARDHIDDEN_");

     label03:
        if $z0 == 0 goto label06;

     label04:
        $i2 = virtualinvoke r1.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        virtualinvoke r2.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r14);

     label05:
        i1 = i1 + 1;

        goto label01;

     label06:
        $z0 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("KEYBOARD_");

     label07:
        if $z0 == 0 goto label11;

     label08:
        $i2 = virtualinvoke r1.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        virtualinvoke r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r14);

     label09:
        goto label05;

     label10:
        r15 := @caughtexception;

        $r16 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r14 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r16.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "Error while inspecting device configuration: ", r15);

        goto label05;

     label11:
        $z0 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("KEYBOARDHIDDEN_");

     label12:
        if $z0 == 0 goto label16;

     label13:
        $i2 = virtualinvoke r1.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        virtualinvoke r3.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r14);

     label14:
        goto label05;

     label15:
        r17 := @caughtexception;

        $r16 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r14 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r16.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "Error while inspecting device configuration: ", r17);

        goto label05;

     label16:
        $z0 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("NAVIGATION_");

     label17:
        if $z0 == 0 goto label20;

     label18:
        $i2 = virtualinvoke r1.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        virtualinvoke r6.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r14);

     label19:
        goto label05;

     label20:
        $z0 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("NAVIGATIONHIDDEN_");

     label21:
        if $z0 == 0 goto label24;

     label22:
        $i2 = virtualinvoke r1.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        virtualinvoke r5.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r14);

     label23:
        goto label05;

     label24:
        $z0 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("ORIENTATION_");

     label25:
        if $z0 == 0 goto label28;

     label26:
        $i2 = virtualinvoke r1.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        virtualinvoke r7.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r14);

     label27:
        goto label05;

     label28:
        $z0 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("SCREENLAYOUT_");

     label29:
        if $z0 == 0 goto label32;

     label30:
        $i2 = virtualinvoke r1.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        virtualinvoke r8.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r14);

     label31:
        goto label05;

     label32:
        $z0 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("TOUCHSCREEN_");

     label33:
        if $z0 == 0 goto label36;

     label34:
        $i2 = virtualinvoke r1.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        virtualinvoke r9.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r14);

     label35:
        goto label05;

     label36:
        $z0 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("UI_MODE_");

     label37:
        if $z0 == 0 goto label05;

     label38:
        $i2 = virtualinvoke r1.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        virtualinvoke r10.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r14);

     label39:
        goto label05;

     label40:
        $r11 = r0.<org.acra.collector.ConfigurationCollector: java.util.HashMap mValueArrays>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("HARDKEYBOARDHIDDEN_", r2);

        $r11 = r0.<org.acra.collector.ConfigurationCollector: java.util.HashMap mValueArrays>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KEYBOARD_", r4);

        $r11 = r0.<org.acra.collector.ConfigurationCollector: java.util.HashMap mValueArrays>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KEYBOARDHIDDEN_", r3);

        $r11 = r0.<org.acra.collector.ConfigurationCollector: java.util.HashMap mValueArrays>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("NAVIGATION_", r6);

        $r11 = r0.<org.acra.collector.ConfigurationCollector: java.util.HashMap mValueArrays>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("NAVIGATIONHIDDEN_", r5);

        $r11 = r0.<org.acra.collector.ConfigurationCollector: java.util.HashMap mValueArrays>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ORIENTATION_", r7);

        $r11 = r0.<org.acra.collector.ConfigurationCollector: java.util.HashMap mValueArrays>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("SCREENLAYOUT_", r8);

        $r11 = r0.<org.acra.collector.ConfigurationCollector: java.util.HashMap mValueArrays>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("TOUCHSCREEN_", r9);

        $r11 = r0.<org.acra.collector.ConfigurationCollector: java.util.HashMap mValueArrays>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("UI_MODE_", r10);

        return;

        catch java.lang.IllegalArgumentException from label02 to label03 with label10;
        catch java.lang.IllegalArgumentException from label04 to label05 with label10;
        catch java.lang.IllegalArgumentException from label06 to label07 with label10;
        catch java.lang.IllegalArgumentException from label08 to label09 with label10;
        catch java.lang.IllegalAccessException from label02 to label03 with label15;
        catch java.lang.IllegalAccessException from label04 to label05 with label15;
        catch java.lang.IllegalAccessException from label06 to label07 with label15;
        catch java.lang.IllegalAccessException from label08 to label09 with label15;
        catch java.lang.IllegalArgumentException from label11 to label12 with label10;
        catch java.lang.IllegalArgumentException from label13 to label14 with label10;
        catch java.lang.IllegalAccessException from label11 to label12 with label15;
        catch java.lang.IllegalAccessException from label13 to label14 with label15;
        catch java.lang.IllegalArgumentException from label16 to label17 with label10;
        catch java.lang.IllegalArgumentException from label18 to label19 with label10;
        catch java.lang.IllegalArgumentException from label20 to label21 with label10;
        catch java.lang.IllegalArgumentException from label22 to label23 with label10;
        catch java.lang.IllegalArgumentException from label24 to label25 with label10;
        catch java.lang.IllegalArgumentException from label26 to label27 with label10;
        catch java.lang.IllegalArgumentException from label28 to label29 with label10;
        catch java.lang.IllegalArgumentException from label30 to label31 with label10;
        catch java.lang.IllegalArgumentException from label32 to label33 with label10;
        catch java.lang.IllegalArgumentException from label34 to label35 with label10;
        catch java.lang.IllegalArgumentException from label36 to label37 with label10;
        catch java.lang.IllegalArgumentException from label38 to label39 with label10;
        catch java.lang.IllegalAccessException from label16 to label17 with label15;
        catch java.lang.IllegalAccessException from label18 to label19 with label15;
        catch java.lang.IllegalAccessException from label20 to label21 with label15;
        catch java.lang.IllegalAccessException from label22 to label23 with label15;
        catch java.lang.IllegalAccessException from label24 to label25 with label15;
        catch java.lang.IllegalAccessException from label26 to label27 with label15;
        catch java.lang.IllegalAccessException from label28 to label29 with label15;
        catch java.lang.IllegalAccessException from label30 to label31 with label15;
        catch java.lang.IllegalAccessException from label32 to label33 with label15;
        catch java.lang.IllegalAccessException from label34 to label35 with label15;
        catch java.lang.IllegalAccessException from label36 to label37 with label15;
        catch java.lang.IllegalAccessException from label38 to label39 with label15;
    }
    private static java.lang.String activeFlags(android.util.SparseArray, int)
    {
        android.util.SparseArray r0;
        int $i0, i1, i2, $i3;
        java.lang.StringBuilder r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @parameter0: android.util.SparseArray;

        $i0 := @parameter1: int;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label1:
        i1 = virtualinvoke r0.<android.util.SparseArray: int size()>();

        if i2 >= i1 goto label4;

        i1 = virtualinvoke r0.<android.util.SparseArray: int keyAt(int)>(i2);

        $r2 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        $r3 = (java.lang.String) $r2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>("_MASK");

        if $z0 == 0 goto label3;

        i1 = $i0 & i1;

        if i1 <= 0 goto label3;

        $i3 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i3 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

     label2:
        $r2 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        $r3 = (java.lang.String) $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
    public static java.lang.String collectConfiguration(android.content.Context)
    {
        android.content.Context $r0;
        org.acra.collector.ConfigurationCollector r1;
        java.lang.RuntimeException r2;
        java.lang.String $r3, $r8;
        android.content.res.Resources $r4;
        android.content.res.Configuration $r5;
        org.acra.log.ACRALog $r6;
        java.lang.StringBuilder $r7;

        $r0 := @parameter0: android.content.Context;

        r1 = new org.acra.collector.ConfigurationCollector;

     label1:
        specialinvoke r1.<org.acra.collector.ConfigurationCollector: void <init>()>();

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r3 = specialinvoke r1.<org.acra.collector.ConfigurationCollector: java.lang.String toString(android.content.res.Configuration)>($r5);

     label2:
        return $r3;

     label3:
        r2 := @caughtexception;

        $r6 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r3 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t retrieve CrashConfiguration for : ");

        $r8 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, $r8, r2);

        return "Couldn\'t retrieve crash config";

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }
    private java.lang.String getFieldValueName(android.content.res.Configuration, java.lang.reflect.Field) throws java.lang.IllegalAccessException
    {
        org.acra.collector.ConfigurationCollector r0;
        android.content.res.Configuration $r1;
        java.lang.reflect.Field $r2;
        java.lang.String $r3;
        boolean $z0;
        int $i0;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        android.util.SparseArray $r6;
        java.lang.StringBuilder $r7;

        r0 := @this: org.acra.collector.ConfigurationCollector;

        $r1 := @parameter0: android.content.res.Configuration;

        $r2 := @parameter1: java.lang.reflect.Field;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("mcc");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("mnc");

        if $z0 == 0 goto label2;

     label1:
        $i0 = virtualinvoke $r2.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r3;

     label2:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("uiMode");

        if $z0 == 0 goto label3;

        $r4 = r0.<org.acra.collector.ConfigurationCollector: java.util.HashMap mValueArrays>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("UI_MODE_");

        $r6 = (android.util.SparseArray) $r5;

        $i0 = virtualinvoke $r2.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r1);

        $r3 = staticinvoke <org.acra.collector.ConfigurationCollector: java.lang.String activeFlags(android.util.SparseArray,int)>($r6, $i0);

        return $r3;

     label3:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("screenLayout");

        if $z0 == 0 goto label4;

        $r4 = r0.<org.acra.collector.ConfigurationCollector: java.util.HashMap mValueArrays>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("SCREENLAYOUT_");

        $r6 = (android.util.SparseArray) $r5;

        $i0 = virtualinvoke $r2.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r1);

        $r3 = staticinvoke <org.acra.collector.ConfigurationCollector: java.lang.String activeFlags(android.util.SparseArray,int)>($r6, $i0);

        return $r3;

     label4:
        $r4 = r0.<org.acra.collector.ConfigurationCollector: java.util.HashMap mValueArrays>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r6 = (android.util.SparseArray) $r5;

        if $r6 != null goto label5;

        $i0 = virtualinvoke $r2.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r3;

     label5:
        $i0 = virtualinvoke $r2.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r3 = (java.lang.String) $r5;

        if $r3 != null goto label6;

        $i0 = virtualinvoke $r2.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

     label6:
        return $r3;
    }
    private java.lang.String toString(android.content.res.Configuration)
    {
        org.acra.collector.ConfigurationCollector r0;
        android.content.res.Configuration $r1;
        java.lang.reflect.Field r2;
        int i0, i1, $i2;
        java.lang.StringBuilder r3, $r7;
        java.lang.Class $r4, $r8;
        java.lang.reflect.Field[] $r5;
        boolean $z0;
        java.lang.String $r6;
        java.lang.Object $r9;
        java.lang.IllegalArgumentException r10;
        org.acra.log.ACRALog $r11;
        java.lang.IllegalAccessException r12;

        r0 := @this: org.acra.collector.ConfigurationCollector;

        $r1 := @parameter0: android.content.res.Configuration;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        i0 = lengthof $r5;

        i1 = 0;

     label01:
        if i1 >= i0 goto label17;

        r2 = $r5[i1];

     label02:
        $i2 = virtualinvoke r2.<java.lang.reflect.Field: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i2);

     label03:
        if $z0 != 0 goto label10;

     label04:
        $r6 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();

        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r4 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Class getType()>();

     label05:
        $r8 = <java.lang.Integer: java.lang.Class TYPE>;

     label06:
        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

     label07:
        if $z0 == 0 goto label11;

     label08:
        $r6 = specialinvoke r0.<org.acra.collector.ConfigurationCollector: java.lang.String getFieldValueName(android.content.res.Configuration,java.lang.reflect.Field)>($r1, r2);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label09:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label10:
        i1 = i1 + 1;

        goto label01;

     label11:
        $r9 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

     label12:
        if $r9 == null goto label09;

     label13:
        $r9 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label14:
        goto label09;

     label15:
        r10 := @caughtexception;

        $r11 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r6 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r11.<org.acra.log.ACRALog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Error while inspecting device configuration: ", r10);

        goto label10;

     label16:
        r12 := @caughtexception;

        $r11 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r6 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r11.<org.acra.log.ACRALog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Error while inspecting device configuration: ", r12);

        goto label10;

     label17:
        $r6 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

        catch java.lang.IllegalArgumentException from label02 to label03 with label15;
        catch java.lang.IllegalArgumentException from label04 to label05 with label15;
        catch java.lang.IllegalArgumentException from label06 to label07 with label15;
        catch java.lang.IllegalArgumentException from label08 to label10 with label15;
        catch java.lang.IllegalArgumentException from label11 to label12 with label15;
        catch java.lang.IllegalArgumentException from label13 to label14 with label15;
        catch java.lang.IllegalAccessException from label02 to label03 with label16;
        catch java.lang.IllegalAccessException from label04 to label05 with label16;
        catch java.lang.IllegalAccessException from label06 to label07 with label16;
        catch java.lang.IllegalAccessException from label08 to label10 with label16;
        catch java.lang.IllegalAccessException from label11 to label12 with label16;
        catch java.lang.IllegalAccessException from label13 to label14 with label16;
    }
