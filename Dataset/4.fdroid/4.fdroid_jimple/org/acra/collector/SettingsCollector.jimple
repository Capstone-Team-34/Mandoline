org.acra.collector.SettingsCollector extends java.lang.Object
    public static java.lang.String collectGlobalSettings(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.reflect.Field r1;
        int i0, i1;
        java.lang.StringBuilder r2, $r11;
        java.lang.Class $r3;
        java.lang.reflect.Field[] $r4;
        java.lang.Class[] $r5;
        java.lang.reflect.Method $r6;
        boolean $z0;
        java.lang.Object[] $r7;
        android.content.ContentResolver $r8;
        java.lang.Object $r9;
        java.lang.String $r10;
        java.lang.IllegalArgumentException r12;
        org.acra.log.ACRALog $r13;
        java.lang.IllegalAccessException r14;
        java.lang.ClassNotFoundException r15;
        java.lang.SecurityException r16;
        java.lang.NoSuchMethodException r17;
        java.lang.reflect.InvocationTargetException r18;

        $r0 := @parameter0: android.content.Context;

        i0 = staticinvoke <org.acra.collector.Compatibility: int getAPILevel()>();

        if i0 >= 17 goto label01;

        return "";

     label01:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

     label02:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.provider.Settings$Global");

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

     label03:
        $r5 = newarray (java.lang.Class)[2];

        $r5[0] = class "Landroid/content/ContentResolver;";

        $r5[1] = class "Ljava/lang/String;";

     label04:
        $r6 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getString", $r5);

     label05:
        i0 = lengthof $r4;

        i1 = 0;

     label06:
        if i1 >= i0 goto label22;

        r1 = $r4[i1];

     label07:
        $z0 = virtualinvoke r1.<java.lang.reflect.Field: boolean isAnnotationPresent(java.lang.Class)>(class "Ljava/lang/Deprecated;");

     label08:
        if $z0 != 0 goto label20;

     label09:
        $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Class getType()>();

     label10:
        if $r3 != class "Ljava/lang/String;" goto label20;

     label11:
        $z0 = staticinvoke <org.acra.collector.SettingsCollector: boolean isAuthorized(java.lang.reflect.Field)>(r1);

     label12:
        if $z0 == 0 goto label20;

        $r7 = newarray (java.lang.Object)[2];

     label13:
        $r8 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label14:
        $r7[0] = $r8;

     label15:
        $r9 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

     label16:
        $r10 = (java.lang.String) $r9;

        $r7[1] = $r10;

     label17:
        $r9 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r7);

     label18:
        if $r9 == null goto label20;

     label19:
        $r10 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label20:
        i1 = i1 + 1;

        goto label06;

     label21:
        r12 := @caughtexception;

        $r13 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r10 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r13.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r10, "Error : ", r12);

     label22:
        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label23:
        r14 := @caughtexception;

        $r13 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r10 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r13.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r10, "Error : ", r14);

        goto label22;

     label24:
        r15 := @caughtexception;

        $r13 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r10 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r13.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r10, "Error : ", r15);

        goto label22;

     label25:
        r16 := @caughtexception;

        $r13 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r10 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r13.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r10, "Error : ", r16);

        goto label22;

     label26:
        r17 := @caughtexception;

        $r13 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r10 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r13.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r10, "Error : ", r17);

        goto label22;

     label27:
        r18 := @caughtexception;

        $r13 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r10 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r13.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r10, "Error : ", r18);

        goto label22;

        catch java.lang.IllegalArgumentException from label02 to label03 with label21;
        catch java.lang.IllegalArgumentException from label04 to label05 with label21;
        catch java.lang.IllegalArgumentException from label07 to label08 with label21;
        catch java.lang.IllegalArgumentException from label09 to label10 with label21;
        catch java.lang.IllegalArgumentException from label11 to label12 with label21;
        catch java.lang.IllegalArgumentException from label13 to label14 with label21;
        catch java.lang.IllegalArgumentException from label15 to label16 with label21;
        catch java.lang.IllegalArgumentException from label17 to label18 with label21;
        catch java.lang.IllegalArgumentException from label19 to label20 with label21;
        catch java.lang.IllegalAccessException from label02 to label03 with label23;
        catch java.lang.IllegalAccessException from label04 to label05 with label23;
        catch java.lang.IllegalAccessException from label07 to label08 with label23;
        catch java.lang.IllegalAccessException from label09 to label10 with label23;
        catch java.lang.IllegalAccessException from label11 to label12 with label23;
        catch java.lang.IllegalAccessException from label13 to label14 with label23;
        catch java.lang.IllegalAccessException from label15 to label16 with label23;
        catch java.lang.IllegalAccessException from label17 to label18 with label23;
        catch java.lang.IllegalAccessException from label19 to label20 with label23;
        catch java.lang.ClassNotFoundException from label02 to label03 with label24;
        catch java.lang.ClassNotFoundException from label04 to label05 with label24;
        catch java.lang.ClassNotFoundException from label07 to label08 with label24;
        catch java.lang.ClassNotFoundException from label09 to label10 with label24;
        catch java.lang.ClassNotFoundException from label11 to label12 with label24;
        catch java.lang.ClassNotFoundException from label13 to label14 with label24;
        catch java.lang.ClassNotFoundException from label15 to label16 with label24;
        catch java.lang.ClassNotFoundException from label17 to label18 with label24;
        catch java.lang.ClassNotFoundException from label19 to label20 with label24;
        catch java.lang.SecurityException from label02 to label03 with label25;
        catch java.lang.SecurityException from label04 to label05 with label25;
        catch java.lang.SecurityException from label07 to label08 with label25;
        catch java.lang.SecurityException from label09 to label10 with label25;
        catch java.lang.SecurityException from label11 to label12 with label25;
        catch java.lang.SecurityException from label13 to label14 with label25;
        catch java.lang.SecurityException from label15 to label16 with label25;
        catch java.lang.SecurityException from label17 to label18 with label25;
        catch java.lang.SecurityException from label19 to label20 with label25;
        catch java.lang.NoSuchMethodException from label02 to label03 with label26;
        catch java.lang.NoSuchMethodException from label04 to label05 with label26;
        catch java.lang.NoSuchMethodException from label07 to label08 with label26;
        catch java.lang.NoSuchMethodException from label09 to label10 with label26;
        catch java.lang.NoSuchMethodException from label11 to label12 with label26;
        catch java.lang.NoSuchMethodException from label13 to label14 with label26;
        catch java.lang.NoSuchMethodException from label15 to label16 with label26;
        catch java.lang.NoSuchMethodException from label17 to label18 with label26;
        catch java.lang.NoSuchMethodException from label19 to label20 with label26;
        catch java.lang.reflect.InvocationTargetException from label02 to label03 with label27;
        catch java.lang.reflect.InvocationTargetException from label04 to label05 with label27;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label27;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label27;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label27;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label27;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label27;
        catch java.lang.reflect.InvocationTargetException from label17 to label18 with label27;
        catch java.lang.reflect.InvocationTargetException from label19 to label20 with label27;
    }
    public static java.lang.String collectSecureSettings(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.reflect.Field r1;
        int i0, i1;
        java.lang.StringBuilder r2, $r9;
        java.lang.Class $r3;
        java.lang.reflect.Field[] $r4;
        boolean $z0;
        android.content.ContentResolver $r5;
        java.lang.Object $r6;
        java.lang.String $r7, $r8;
        java.lang.IllegalArgumentException r10;
        org.acra.log.ACRALog $r11;
        java.lang.IllegalAccessException r12;

        $r0 := @parameter0: android.content.Context;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = class "Landroid/provider/Settings$Secure;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        i0 = lengthof $r4;

        i1 = 0;

     label01:
        if i1 >= i0 goto label10;

        r1 = $r4[i1];

        $z0 = virtualinvoke r1.<java.lang.reflect.Field: boolean isAnnotationPresent(java.lang.Class)>(class "Ljava/lang/Deprecated;");

        if $z0 != 0 goto label07;

        $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Class getType()>();

        if $r3 != class "Ljava/lang/String;" goto label07;

        $z0 = staticinvoke <org.acra.collector.SettingsCollector: boolean isAuthorized(java.lang.reflect.Field)>(r1);

        if $z0 == 0 goto label07;

     label02:
        $r5 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

     label03:
        $r7 = (java.lang.String) $r6;

     label04:
        $r7 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r5, $r7);

     label05:
        if $r7 == null goto label07;

     label06:
        $r8 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label07:
        i1 = i1 + 1;

        goto label01;

     label08:
        r10 := @caughtexception;

        $r11 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r7 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r11.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Error : ", r10);

        goto label07;

     label09:
        r12 := @caughtexception;

        $r11 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r7 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r11.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Error : ", r12);

        goto label07;

     label10:
        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

        catch java.lang.IllegalArgumentException from label02 to label03 with label08;
        catch java.lang.IllegalArgumentException from label04 to label05 with label08;
        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
        catch java.lang.IllegalAccessException from label02 to label03 with label09;
        catch java.lang.IllegalAccessException from label04 to label05 with label09;
        catch java.lang.IllegalAccessException from label06 to label07 with label09;
    }
    public static java.lang.String collectSystemSettings(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.reflect.Field r1;
        int i0, i1;
        java.lang.StringBuilder r2, $r9;
        java.lang.Class $r3;
        java.lang.reflect.Field[] $r4;
        boolean $z0;
        android.content.ContentResolver $r5;
        java.lang.Object $r6;
        java.lang.String $r7, $r8;
        java.lang.IllegalArgumentException r10;
        org.acra.log.ACRALog $r11;
        java.lang.IllegalAccessException r12;

        $r0 := @parameter0: android.content.Context;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = class "Landroid/provider/Settings$System;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        i0 = lengthof $r4;

        i1 = 0;

     label01:
        if i1 >= i0 goto label10;

        r1 = $r4[i1];

        $z0 = virtualinvoke r1.<java.lang.reflect.Field: boolean isAnnotationPresent(java.lang.Class)>(class "Ljava/lang/Deprecated;");

        if $z0 != 0 goto label07;

        $r3 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Class getType()>();

        if $r3 != class "Ljava/lang/String;" goto label07;

     label02:
        $r5 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

     label03:
        $r7 = (java.lang.String) $r6;

     label04:
        $r7 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r5, $r7);

     label05:
        if $r7 == null goto label07;

     label06:
        $r8 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label07:
        i1 = i1 + 1;

        goto label01;

     label08:
        r10 := @caughtexception;

        $r11 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r7 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r11.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Error : ", r10);

        goto label07;

     label09:
        r12 := @caughtexception;

        $r11 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r7 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r11.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Error : ", r12);

        goto label07;

     label10:
        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

        catch java.lang.IllegalArgumentException from label02 to label03 with label08;
        catch java.lang.IllegalArgumentException from label04 to label05 with label08;
        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
        catch java.lang.IllegalAccessException from label02 to label03 with label09;
        catch java.lang.IllegalAccessException from label04 to label05 with label09;
        catch java.lang.IllegalAccessException from label06 to label07 with label09;
    }
    private static boolean isAuthorized(java.lang.reflect.Field)
    {
        java.lang.reflect.Field $r0;
        int i0, i1;
        java.lang.String r1, $r4;
        boolean $z0;
        org.acra.ACRAConfiguration $r2;
        java.lang.String[] $r3;

        $r0 := @parameter0: java.lang.reflect.Field;

        if $r0 == null goto label4;

        r1 = virtualinvoke $r0.<java.lang.reflect.Field: java.lang.String getName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("WIFI_AP");

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        $r3 = virtualinvoke $r2.<org.acra.ACRAConfiguration: java.lang.String[] excludeMatchingSettingsKeys()>();

        i0 = lengthof $r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r1 = $r3[i1];

        $r4 = virtualinvoke $r0.<java.lang.reflect.Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean matches(java.lang.String)>(r1);

        if $z0 != 0 goto label4;

        i1 = i1 + 1;

        goto label2;

     label3:
        return 1;

     label4:
        return 0;
    }
