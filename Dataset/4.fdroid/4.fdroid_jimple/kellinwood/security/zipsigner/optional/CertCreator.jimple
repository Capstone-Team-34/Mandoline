kellinwood.security.zipsigner.optional.CertCreator extends java.lang.Object
    public void <init>()
    {
        kellinwood.security.zipsigner.optional.CertCreator r0;

        r0 := @this: kellinwood.security.zipsigner.optional.CertCreator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static kellinwood.security.zipsigner.KeySet createKey(java.lang.String, int, java.lang.String, java.lang.String, int, kellinwood.security.zipsigner.optional.DistinguishedNameValues)
    {
        java.lang.String $r0, $r1, $r2;
        int $i0, $i1;
        kellinwood.security.zipsigner.optional.DistinguishedNameValues $r3;
        kellinwood.security.zipsigner.KeySet r4;
        org.spongycastle.x509.X509V3CertificateGenerator r5;
        java.lang.Exception r6;
        java.security.KeyPairGenerator $r7;
        java.security.KeyPair $r8;
        org.spongycastle.jce.X509Principal $r9;
        java.security.SecureRandom $r10;
        long $l2, $l3;
        java.math.BigInteger $r11, $r12;
        java.util.Date $r13;
        java.security.PublicKey $r14;
        java.security.PrivateKey $r15;
        java.security.cert.X509Certificate $r16;
        java.lang.RuntimeException $r17;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $i1 := @parameter4: int;

        $r3 := @parameter5: kellinwood.security.zipsigner.optional.DistinguishedNameValues;

     label01:
        $r7 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r0);

        virtualinvoke $r7.<java.security.KeyPairGenerator: void initialize(int)>($i0);

        $r8 = virtualinvoke $r7.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

     label02:
        r5 = new org.spongycastle.x509.X509V3CertificateGenerator;

     label03:
        specialinvoke r5.<org.spongycastle.x509.X509V3CertificateGenerator: void <init>()>();

        $r9 = virtualinvoke $r3.<kellinwood.security.zipsigner.optional.DistinguishedNameValues: org.spongycastle.jce.X509Principal getPrincipal()>();

     label04:
        $r10 = new java.security.SecureRandom;

     label05:
        specialinvoke $r10.<java.security.SecureRandom: void <init>()>();

        $i0 = virtualinvoke $r10.<java.security.SecureRandom: int nextInt()>();

     label06:
        $l2 = (long) $i0;

     label07:
        $r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l2);

     label08:
        $r12 = <java.math.BigInteger: java.math.BigInteger ZERO>;

     label09:
        $i0 = virtualinvoke $r11.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r12);

     label10:
        if $i0 >= 0 goto label15;

        $r10 = new java.security.SecureRandom;

     label11:
        specialinvoke $r10.<java.security.SecureRandom: void <init>()>();

        $i0 = virtualinvoke $r10.<java.security.SecureRandom: int nextInt()>();

     label12:
        $l2 = (long) $i0;

     label13:
        $r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l2);

     label14:
        goto label08;

     label15:
        virtualinvoke r5.<org.spongycastle.x509.X509V3CertificateGenerator: void setSerialNumber(java.math.BigInteger)>($r11);

        virtualinvoke r5.<org.spongycastle.x509.X509V3CertificateGenerator: void setIssuerDN(org.spongycastle.asn1.x509.X509Name)>($r9);

     label16:
        $r13 = new java.util.Date;

     label17:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label18:
        $l2 = $l2 - 2592000000L;

     label19:
        specialinvoke $r13.<java.util.Date: void <init>(long)>($l2);

        virtualinvoke r5.<org.spongycastle.x509.X509V3CertificateGenerator: void setNotBefore(java.util.Date)>($r13);

     label20:
        $r13 = new java.util.Date;

     label21:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label22:
        $l3 = (long) $i1;

        $l3 = 31622400000L * $l3;

        $l2 = $l2 + $l3;

     label23:
        specialinvoke $r13.<java.util.Date: void <init>(long)>($l2);

        virtualinvoke r5.<org.spongycastle.x509.X509V3CertificateGenerator: void setNotAfter(java.util.Date)>($r13);

        virtualinvoke r5.<org.spongycastle.x509.X509V3CertificateGenerator: void setSubjectDN(org.spongycastle.asn1.x509.X509Name)>($r9);

        $r14 = virtualinvoke $r8.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        virtualinvoke r5.<org.spongycastle.x509.X509V3CertificateGenerator: void setPublicKey(java.security.PublicKey)>($r14);

        virtualinvoke r5.<org.spongycastle.x509.X509V3CertificateGenerator: void setSignatureAlgorithm(java.lang.String)>($r2);

        $r15 = virtualinvoke $r8.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        $r16 = virtualinvoke r5.<org.spongycastle.x509.X509V3CertificateGenerator: java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String)>($r15, "BC");

     label24:
        r4 = new kellinwood.security.zipsigner.KeySet;

     label25:
        specialinvoke r4.<kellinwood.security.zipsigner.KeySet: void <init>()>();

        virtualinvoke r4.<kellinwood.security.zipsigner.KeySet: void setName(java.lang.String)>($r1);

        $r15 = virtualinvoke $r8.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        virtualinvoke r4.<kellinwood.security.zipsigner.KeySet: void setPrivateKey(java.security.PrivateKey)>($r15);

        virtualinvoke r4.<kellinwood.security.zipsigner.KeySet: void setPublicKey(java.security.cert.X509Certificate)>($r16);

     label26:
        return r4;

     label27:
        r6 := @caughtexception;

        $r17 = new java.lang.RuntimeException;

        $r0 = virtualinvoke r6.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r0, r6);

        throw $r17;

        catch java.lang.Exception from label01 to label02 with label27;
        catch java.lang.Exception from label03 to label04 with label27;
        catch java.lang.Exception from label05 to label06 with label27;
        catch java.lang.Exception from label07 to label08 with label27;
        catch java.lang.Exception from label09 to label10 with label27;
        catch java.lang.Exception from label11 to label12 with label27;
        catch java.lang.Exception from label13 to label14 with label27;
        catch java.lang.Exception from label15 to label16 with label27;
        catch java.lang.Exception from label17 to label18 with label27;
        catch java.lang.Exception from label19 to label20 with label27;
        catch java.lang.Exception from label21 to label22 with label27;
        catch java.lang.Exception from label23 to label24 with label27;
        catch java.lang.Exception from label25 to label26 with label27;
    }
    public static kellinwood.security.zipsigner.KeySet createKey(java.lang.String, char[], java.lang.String, int, java.lang.String, char[], java.lang.String, int, kellinwood.security.zipsigner.optional.DistinguishedNameValues)
    {
        java.lang.String $r0, $r2, $r3, $r5;
        char[] $r1, $r4;
        int $i0, $i1;
        kellinwood.security.zipsigner.optional.DistinguishedNameValues $r6;
        kellinwood.security.zipsigner.KeySet $r7;
        java.security.KeyStore $r8;
        java.security.PrivateKey $r9;
        java.lang.Object[] $r10;
        java.security.cert.X509Certificate $r11;
        java.lang.RuntimeException r12, $r14;
        java.lang.Exception r13;
        java.security.cert.Certificate[] $r15;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: char[];

        $r2 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r3 := @parameter4: java.lang.String;

        $r4 := @parameter5: char[];

        $r5 := @parameter6: java.lang.String;

        $i1 := @parameter7: int;

        $r6 := @parameter8: kellinwood.security.zipsigner.optional.DistinguishedNameValues;

     label1:
        $r7 = staticinvoke <kellinwood.security.zipsigner.optional.CertCreator: kellinwood.security.zipsigner.KeySet createKey(java.lang.String,int,java.lang.String,java.lang.String,int,kellinwood.security.zipsigner.optional.DistinguishedNameValues)>($r2, $i0, $r3, $r5, $i1, $r6);

        $r8 = staticinvoke <kellinwood.security.zipsigner.optional.KeyStoreFileManager: java.security.KeyStore loadKeyStore(java.lang.String,char[])>($r0, $r1);

        $r9 = virtualinvoke $r7.<kellinwood.security.zipsigner.KeySet: java.security.PrivateKey getPrivateKey()>();

     label2:
        $r10 = newarray (java.security.cert.Certificate)[1];

     label3:
        $r11 = virtualinvoke $r7.<kellinwood.security.zipsigner.KeySet: java.security.cert.X509Certificate getPublicKey()>();

     label4:
        $r10[0] = $r11;

        $r15 = (java.security.cert.Certificate[]) $r10;

     label5:
        virtualinvoke $r8.<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>($r3, $r9, $r4, $r15);

        staticinvoke <kellinwood.security.zipsigner.optional.KeyStoreFileManager: void writeKeyStore(java.security.KeyStore,java.lang.String,char[])>($r8, $r0, $r1);

     label6:
        return $r7;

     label7:
        r12 := @caughtexception;

        throw r12;

     label8:
        r13 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        $r0 = virtualinvoke r13.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r0, r13);

        throw $r14;

        catch java.lang.RuntimeException from label1 to label6 with label7;
        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label5 to label6 with label8;
    }
    public static kellinwood.security.zipsigner.KeySet createKeystoreAndKey(java.lang.String, char[], java.lang.String, int, java.lang.String, char[], java.lang.String, int, kellinwood.security.zipsigner.optional.DistinguishedNameValues)
    {
        java.lang.String $r0, $r2, $r3, $r5;
        char[] $r1, $r4;
        int $i0, $i1;
        kellinwood.security.zipsigner.optional.DistinguishedNameValues $r6;
        kellinwood.security.zipsigner.KeySet $r8;
        java.security.KeyStore $r9;
        java.security.PrivateKey $r10;
        java.lang.Object[] $r11;
        java.security.cert.X509Certificate $r12;
        boolean $z0;
        java.lang.StringBuilder $r14, $r18;
        java.lang.RuntimeException r15, $r20;
        java.lang.Exception r16;
        java.io.File $r17;
        java.io.IOException $r19;
        java.security.cert.Certificate[] $r21;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: char[];

        $r2 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r3 := @parameter4: java.lang.String;

        $r4 := @parameter5: char[];

        $r5 := @parameter6: java.lang.String;

        $i1 := @parameter7: int;

        $r6 := @parameter8: kellinwood.security.zipsigner.optional.DistinguishedNameValues;

     label01:
        $r8 = staticinvoke <kellinwood.security.zipsigner.optional.CertCreator: kellinwood.security.zipsigner.KeySet createKey(java.lang.String,int,java.lang.String,java.lang.String,int,kellinwood.security.zipsigner.optional.DistinguishedNameValues)>($r2, $i0, $r3, $r5, $i1, $r6);

        $r9 = staticinvoke <kellinwood.security.zipsigner.optional.KeyStoreFileManager: java.security.KeyStore createKeyStore(java.lang.String,char[])>($r0, $r1);

        $r10 = virtualinvoke $r8.<kellinwood.security.zipsigner.KeySet: java.security.PrivateKey getPrivateKey()>();

     label02:
        $r11 = newarray (java.security.cert.Certificate)[1];

     label03:
        $r12 = virtualinvoke $r8.<kellinwood.security.zipsigner.KeySet: java.security.cert.X509Certificate getPublicKey()>();

     label04:
        $r11[0] = $r12;

        $r21 = (java.security.cert.Certificate[]) $r11;

     label05:
        virtualinvoke $r9.<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>($r3, $r10, $r4, $r21);

     label06:
        $r17 = new java.io.File;

     label07:
        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r17.<java.io.File: boolean exists()>();

     label08:
        if $z0 == 0 goto label11;

        $r19 = new java.io.IOException;

        $r18 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File already exists: ");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>($r0);

        throw $r19;

     label10:
        r15 := @caughtexception;

        throw r15;

     label11:
        staticinvoke <kellinwood.security.zipsigner.optional.KeyStoreFileManager: void writeKeyStore(java.security.KeyStore,java.lang.String,char[])>($r9, $r0, $r1);

     label12:
        return $r8;

     label13:
        r16 := @caughtexception;

        $r20 = new java.lang.RuntimeException;

        $r0 = virtualinvoke r16.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r0, r16);

        throw $r20;

        catch java.lang.RuntimeException from label01 to label06 with label10;
        catch java.lang.RuntimeException from label07 to label08 with label10;
        catch java.lang.RuntimeException from label09 to label10 with label10;
        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.RuntimeException from label11 to label12 with label10;
        catch java.lang.Exception from label11 to label12 with label13;
    }
    public static void createKeystoreAndKey(java.lang.String, char[], java.lang.String, kellinwood.security.zipsigner.optional.DistinguishedNameValues)
    {
        java.lang.String $r0, $r2;
        char[] $r1;
        kellinwood.security.zipsigner.optional.DistinguishedNameValues $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: char[];

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: kellinwood.security.zipsigner.optional.DistinguishedNameValues;

        staticinvoke <kellinwood.security.zipsigner.optional.CertCreator: kellinwood.security.zipsigner.KeySet createKeystoreAndKey(java.lang.String,char[],java.lang.String,int,java.lang.String,char[],java.lang.String,int,kellinwood.security.zipsigner.optional.DistinguishedNameValues)>($r0, $r1, "RSA", 2048, $r2, $r1, "SHA1withRSA", 30, $r3);

        return;
    }
