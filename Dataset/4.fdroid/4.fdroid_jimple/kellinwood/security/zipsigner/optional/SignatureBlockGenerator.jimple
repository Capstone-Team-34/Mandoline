kellinwood.security.zipsigner.optional.SignatureBlockGenerator extends java.lang.Object
    public void <init>()
    {
        kellinwood.security.zipsigner.optional.SignatureBlockGenerator r0;

        r0 := @this: kellinwood.security.zipsigner.optional.SignatureBlockGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static byte[] generate(kellinwood.security.zipsigner.KeySet, byte[])
    {
        kellinwood.security.zipsigner.KeySet $r0;
        byte[] $r1;
        java.util.ArrayList r2;
        org.spongycastle.cert.jcajce.JcaCertStore r3;
        org.spongycastle.cms.CMSSignedDataGenerator r4;
        org.spongycastle.cms.jcajce.JcaSignerInfoGeneratorBuilder r5;
        org.spongycastle.cms.CMSProcessableByteArray r6;
        java.lang.Exception r7;
        java.security.cert.X509Certificate $r8;
        org.spongycastle.operator.jcajce.JcaContentSignerBuilder $r9;
        java.lang.String $r10;
        java.security.PrivateKey $r11;
        org.spongycastle.operator.ContentSigner $r12;
        org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder $r13;
        org.spongycastle.operator.DigestCalculatorProvider $r14;
        org.spongycastle.cms.SignerInfoGenerator $r15;
        org.spongycastle.cms.CMSSignedData $r16;
        org.spongycastle.asn1.cms.ContentInfo $r17;
        java.lang.RuntimeException $r18;

        $r0 := @parameter0: kellinwood.security.zipsigner.KeySet;

        $r1 := @parameter1: byte[];

        r2 = new java.util.ArrayList;

     label01:
        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label02:
        r6 = new org.spongycastle.cms.CMSProcessableByteArray;

     label03:
        specialinvoke r6.<org.spongycastle.cms.CMSProcessableByteArray: void <init>(byte[])>($r1);

        $r8 = virtualinvoke $r0.<kellinwood.security.zipsigner.KeySet: java.security.cert.X509Certificate getPublicKey()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r8);

     label04:
        r3 = new org.spongycastle.cert.jcajce.JcaCertStore;

     label05:
        specialinvoke r3.<org.spongycastle.cert.jcajce.JcaCertStore: void <init>(java.util.Collection)>(r2);

     label06:
        r4 = new org.spongycastle.cms.CMSSignedDataGenerator;

     label07:
        specialinvoke r4.<org.spongycastle.cms.CMSSignedDataGenerator: void <init>()>();

     label08:
        $r9 = new org.spongycastle.operator.jcajce.JcaContentSignerBuilder;

     label09:
        $r10 = virtualinvoke $r0.<kellinwood.security.zipsigner.KeySet: java.lang.String getSignatureAlgorithm()>();

        specialinvoke $r9.<org.spongycastle.operator.jcajce.JcaContentSignerBuilder: void <init>(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<org.spongycastle.operator.jcajce.JcaContentSignerBuilder: org.spongycastle.operator.jcajce.JcaContentSignerBuilder setProvider(java.lang.String)>("SC");

        $r11 = virtualinvoke $r0.<kellinwood.security.zipsigner.KeySet: java.security.PrivateKey getPrivateKey()>();

        $r12 = virtualinvoke $r9.<org.spongycastle.operator.jcajce.JcaContentSignerBuilder: org.spongycastle.operator.ContentSigner build(java.security.PrivateKey)>($r11);

     label10:
        $r13 = new org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder;

     label11:
        specialinvoke $r13.<org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder: org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder setProvider(java.lang.String)>("SC");

        $r14 = virtualinvoke $r13.<org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder: org.spongycastle.operator.DigestCalculatorProvider build()>();

     label12:
        r5 = new org.spongycastle.cms.jcajce.JcaSignerInfoGeneratorBuilder;

     label13:
        specialinvoke r5.<org.spongycastle.cms.jcajce.JcaSignerInfoGeneratorBuilder: void <init>(org.spongycastle.operator.DigestCalculatorProvider)>($r14);

        virtualinvoke r5.<org.spongycastle.cms.jcajce.JcaSignerInfoGeneratorBuilder: org.spongycastle.cms.jcajce.JcaSignerInfoGeneratorBuilder setDirectSignature(boolean)>(1);

        $r8 = virtualinvoke $r0.<kellinwood.security.zipsigner.KeySet: java.security.cert.X509Certificate getPublicKey()>();

        $r15 = virtualinvoke r5.<org.spongycastle.cms.jcajce.JcaSignerInfoGeneratorBuilder: org.spongycastle.cms.SignerInfoGenerator build(org.spongycastle.operator.ContentSigner,java.security.cert.X509Certificate)>($r12, $r8);

        virtualinvoke r4.<org.spongycastle.cms.CMSSignedDataGenerator: void addSignerInfoGenerator(org.spongycastle.cms.SignerInfoGenerator)>($r15);

        virtualinvoke r4.<org.spongycastle.cms.CMSSignedDataGenerator: void addCertificates(org.spongycastle.util.Store)>(r3);

        $r16 = virtualinvoke r4.<org.spongycastle.cms.CMSSignedDataGenerator: org.spongycastle.cms.CMSSignedData generate(org.spongycastle.cms.CMSTypedData,boolean)>(r6, 0);

        $r17 = virtualinvoke $r16.<org.spongycastle.cms.CMSSignedData: org.spongycastle.asn1.cms.ContentInfo toASN1Structure()>();

        $r1 = virtualinvoke $r17.<org.spongycastle.asn1.cms.ContentInfo: byte[] getEncoded(java.lang.String)>("DER");

     label14:
        return $r1;

     label15:
        r7 := @caughtexception;

        $r18 = new java.lang.RuntimeException;

        $r10 = virtualinvoke r7.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r7);

        throw $r18;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }
