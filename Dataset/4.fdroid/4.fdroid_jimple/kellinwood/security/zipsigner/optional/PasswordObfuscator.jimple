kellinwood.security.zipsigner.optional.PasswordObfuscator extends java.lang.Object
private static kellinwood.security.zipsigner.optional.PasswordObfuscator instance
static final java.lang.String x
kellinwood.logging.LoggerInterface logger
javax.crypto.spec.SecretKeySpec skeySpec
    static void <clinit>()
    {
        <kellinwood.security.zipsigner.optional.PasswordObfuscator: kellinwood.security.zipsigner.optional.PasswordObfuscator instance> = null;

        return;
    }
    private void <init>()
    {
        kellinwood.security.zipsigner.optional.PasswordObfuscator r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        kellinwood.logging.LoggerInterface $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        byte[] $r5;

        r0 := @this: kellinwood.security.zipsigner.optional.PasswordObfuscator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = class "Lkellinwood/security/zipsigner/optional/PasswordObfuscator;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <kellinwood.logging.LoggerManager: kellinwood.logging.LoggerInterface getLogger(java.lang.String)>($r2);

        r0.<kellinwood.security.zipsigner.optional.PasswordObfuscator: kellinwood.logging.LoggerInterface logger> = $r3;

        $r4 = new javax.crypto.spec.SecretKeySpec;

        $r2 = "harold-and-maude";

        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, "AES");

        r0.<kellinwood.security.zipsigner.optional.PasswordObfuscator: javax.crypto.spec.SecretKeySpec skeySpec> = $r4;

        return;
    }
    public static void flush(byte[])
    {
        byte[] $r0;
        int i0, $i1;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return;

     label1:
        i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label3;

        $r0[i0] = 0;

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }
    public static void flush(char[])
    {
        char[] $r0;
        int i0, $i1;

        $r0 := @parameter0: char[];

        if $r0 != null goto label1;

        return;

     label1:
        i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label3;

        $r0[i0] = 0;

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }
    public static kellinwood.security.zipsigner.optional.PasswordObfuscator getInstance()
    {
        kellinwood.security.zipsigner.optional.PasswordObfuscator $r0;

        $r0 = <kellinwood.security.zipsigner.optional.PasswordObfuscator: kellinwood.security.zipsigner.optional.PasswordObfuscator instance>;

        if $r0 != null goto label1;

        $r0 = new kellinwood.security.zipsigner.optional.PasswordObfuscator;

        specialinvoke $r0.<kellinwood.security.zipsigner.optional.PasswordObfuscator: void <init>()>();

        <kellinwood.security.zipsigner.optional.PasswordObfuscator: kellinwood.security.zipsigner.optional.PasswordObfuscator instance> = $r0;

     label1:
        $r0 = <kellinwood.security.zipsigner.optional.PasswordObfuscator: kellinwood.security.zipsigner.optional.PasswordObfuscator instance>;

        return $r0;
    }
    public char[] decode(java.lang.String, java.lang.String)
    {
        kellinwood.security.zipsigner.optional.PasswordObfuscator r0;
        java.lang.String $r1, $r2, $r8;
        char[] r3, r12;
        java.io.BufferedReader r4;
        javax.crypto.spec.SecretKeySpec r5;
        java.lang.Exception r6;
        javax.crypto.Cipher $r7;
        byte[] $r9;
        java.io.InputStreamReader $r10;
        java.io.ByteArrayInputStream $r11;
        int i0, $i1, $i2;
        char $c3;
        kellinwood.logging.LoggerInterface $r13;

        r0 := @this: kellinwood.security.zipsigner.optional.PasswordObfuscator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r2 != null goto label01;

        return null;

     label01:
        $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/ECB/PKCS5Padding");

     label02:
        r5 = new javax.crypto.spec.SecretKeySpec;

        $r8 = "harold-and-maude";

     label03:
        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>();

        specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, "AES");

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, r5);

        $r9 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $r9 = staticinvoke <kellinwood.security.zipsigner.Base64: byte[] decode(byte[])>($r9);

        $r9 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r9);

     label04:
        r4 = new java.io.BufferedReader;

        $r10 = new java.io.InputStreamReader;

        $r11 = new java.io.ByteArrayInputStream;

     label05:
        specialinvoke $r11.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9);

        specialinvoke $r10.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r11);

        specialinvoke r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r10);

        r3 = newarray (char)[128];

     label06:
        i0 = 0;

     label07:
        $i1 = 128 - i0;

     label08:
        $i1 = virtualinvoke r4.<java.io.BufferedReader: int read(char[],int,int)>(r3, i0, $i1);

     label09:
        if $i1 == -1 goto label10;

        i0 = i0 + $i1;

        goto label07;

     label10:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label11:
        if i0 > $i1 goto label12;

        return null;

     label12:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label13:
        $i1 = i0 - $i1;

     label14:
        r12 = newarray (char)[$i1];

     label15:
        $i1 = 0;

     label16:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label17:
        if $i2 >= i0 goto label20;

     label18:
        $c3 = r3[$i2];

        r12[$i1] = $c3;

     label19:
        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label17;

     label20:
        staticinvoke <kellinwood.security.zipsigner.optional.PasswordObfuscator: void flush(char[])>(r3);

     label21:
        return r12;

     label22:
        r6 := @caughtexception;

        $r13 = r0.<kellinwood.security.zipsigner.optional.PasswordObfuscator: kellinwood.logging.LoggerInterface logger>;

        interfaceinvoke $r13.<kellinwood.logging.LoggerInterface: void error(java.lang.String,java.lang.Throwable)>("Failed to decode password", r6);

        return null;

        catch java.lang.Exception from label01 to label02 with label22;
        catch java.lang.Exception from label03 to label04 with label22;
        catch java.lang.Exception from label05 to label06 with label22;
        catch java.lang.Exception from label08 to label09 with label22;
        catch java.lang.Exception from label10 to label11 with label22;
        catch java.lang.Exception from label12 to label13 with label22;
        catch java.lang.Exception from label14 to label15 with label22;
        catch java.lang.Exception from label16 to label17 with label22;
        catch java.lang.Exception from label18 to label19 with label22;
        catch java.lang.Exception from label20 to label21 with label22;
    }
    public char[] decodeAliasPassword(java.lang.String, java.lang.String, java.lang.String)
    {
        kellinwood.security.zipsigner.optional.PasswordObfuscator r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.StringBuilder $r4;
        char[] $r5;

        r0 := @this: kellinwood.security.zipsigner.optional.PasswordObfuscator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<kellinwood.security.zipsigner.optional.PasswordObfuscator: char[] decode(java.lang.String,java.lang.String)>($r1, $r3);

        return $r5;
    }
    public char[] decodeKeystorePassword(java.lang.String, java.lang.String)
    {
        kellinwood.security.zipsigner.optional.PasswordObfuscator r0;
        java.lang.String $r1, $r2;
        char[] $r3;

        r0 := @this: kellinwood.security.zipsigner.optional.PasswordObfuscator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<kellinwood.security.zipsigner.optional.PasswordObfuscator: char[] decode(java.lang.String,java.lang.String)>($r1, $r2);

        return $r3;
    }
    public java.lang.String encode(java.lang.String, java.lang.String)
    {
        kellinwood.security.zipsigner.optional.PasswordObfuscator r0;
        java.lang.String $r1, $r2;
        char[] $r3;

        r0 := @this: kellinwood.security.zipsigner.optional.PasswordObfuscator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $r1 = virtualinvoke r0.<kellinwood.security.zipsigner.optional.PasswordObfuscator: java.lang.String encode(java.lang.String,char[])>($r1, $r3);

        staticinvoke <kellinwood.security.zipsigner.optional.PasswordObfuscator: void flush(char[])>($r3);

        return $r1;
    }
    public java.lang.String encode(java.lang.String, char[])
    {
        kellinwood.security.zipsigner.optional.PasswordObfuscator r0;
        java.lang.String $r1;
        char[] $r2;
        java.io.ByteArrayOutputStream r3;
        java.io.OutputStreamWriter r4;
        java.lang.Exception r5;
        javax.crypto.Cipher $r6;
        javax.crypto.spec.SecretKeySpec $r7;
        byte[] $r8;
        kellinwood.logging.LoggerInterface $r9;

        r0 := @this: kellinwood.security.zipsigner.optional.PasswordObfuscator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: char[];

        if $r2 != null goto label1;

        return null;

     label1:
        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/ECB/PKCS5Padding");

        $r7 = r0.<kellinwood.security.zipsigner.optional.PasswordObfuscator: javax.crypto.spec.SecretKeySpec skeySpec>;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r7);

     label2:
        r3 = new java.io.ByteArrayOutputStream;

     label3:
        specialinvoke r3.<java.io.ByteArrayOutputStream: void <init>()>();

     label4:
        r4 = new java.io.OutputStreamWriter;

     label5:
        specialinvoke r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r3);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r1);

        virtualinvoke r4.<java.io.Writer: void write(char[])>($r2);

        virtualinvoke r4.<java.io.Writer: void flush()>();

        $r8 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r8 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r8);

        $r1 = staticinvoke <kellinwood.security.zipsigner.Base64: java.lang.String encode(byte[])>($r8);

     label6:
        return $r1;

     label7:
        r5 := @caughtexception;

        $r9 = r0.<kellinwood.security.zipsigner.optional.PasswordObfuscator: kellinwood.logging.LoggerInterface logger>;

        interfaceinvoke $r9.<kellinwood.logging.LoggerInterface: void error(java.lang.String,java.lang.Throwable)>("Failed to obfuscate password", r5);

        return null;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
    public java.lang.String encodeAliasPassword(java.lang.String, java.lang.String, java.lang.String)
    {
        kellinwood.security.zipsigner.optional.PasswordObfuscator r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.StringBuilder $r4;

        r0 := @this: kellinwood.security.zipsigner.optional.PasswordObfuscator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke r0.<kellinwood.security.zipsigner.optional.PasswordObfuscator: java.lang.String encode(java.lang.String,java.lang.String)>($r1, $r3);

        return $r1;
    }
    public java.lang.String encodeAliasPassword(java.lang.String, java.lang.String, char[])
    {
        kellinwood.security.zipsigner.optional.PasswordObfuscator r0;
        java.lang.String $r1, $r2;
        char[] $r3;
        java.lang.StringBuilder $r4;

        r0 := @this: kellinwood.security.zipsigner.optional.PasswordObfuscator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: char[];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke r0.<kellinwood.security.zipsigner.optional.PasswordObfuscator: java.lang.String encode(java.lang.String,char[])>($r1, $r3);

        return $r1;
    }
    public java.lang.String encodeKeystorePassword(java.lang.String, java.lang.String)
    {
        kellinwood.security.zipsigner.optional.PasswordObfuscator r0;
        java.lang.String $r1, $r2;

        r0 := @this: kellinwood.security.zipsigner.optional.PasswordObfuscator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<kellinwood.security.zipsigner.optional.PasswordObfuscator: java.lang.String encode(java.lang.String,java.lang.String)>($r1, $r2);

        return $r1;
    }
    public java.lang.String encodeKeystorePassword(java.lang.String, char[])
    {
        kellinwood.security.zipsigner.optional.PasswordObfuscator r0;
        java.lang.String $r1;
        char[] $r2;

        r0 := @this: kellinwood.security.zipsigner.optional.PasswordObfuscator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: char[];

        $r1 = virtualinvoke r0.<kellinwood.security.zipsigner.optional.PasswordObfuscator: java.lang.String encode(java.lang.String,char[])>($r1, $r2);

        return $r1;
    }
