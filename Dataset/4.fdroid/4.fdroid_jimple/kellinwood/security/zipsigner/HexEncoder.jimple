kellinwood.security.zipsigner.HexEncoder extends java.lang.Object
protected final byte[] decodingTable
protected final byte[] encodingTable
    public void <init>()
    {
        kellinwood.security.zipsigner.HexEncoder r0;
        byte[] $r1;

        r0 := @this: kellinwood.security.zipsigner.HexEncoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[16];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 97;

        $r1[11] = 98;

        $r1[12] = 99;

        $r1[13] = 100;

        $r1[14] = 101;

        $r1[15] = 102;

        r0.<kellinwood.security.zipsigner.HexEncoder: byte[] encodingTable> = $r1;

        $r1 = newarray (byte)[128];

        r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable> = $r1;

        virtualinvoke r0.<kellinwood.security.zipsigner.HexEncoder: void initialiseDecodingTable()>();

        return;
    }
    private boolean ignore(char)
    {
        kellinwood.security.zipsigner.HexEncoder r0;
        char $c0;

        r0 := @this: kellinwood.security.zipsigner.HexEncoder;

        $c0 := @parameter0: char;

        if $c0 == 10 goto label1;

        if $c0 == 13 goto label1;

        if $c0 == 9 goto label1;

        if $c0 != 32 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public int decode(java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        kellinwood.security.zipsigner.HexEncoder r0;
        java.lang.String $r1;
        java.io.OutputStream $r2;
        byte b0, b1;
        int i2, $i3, $i4, i6;
        char $c5;
        boolean $z0;
        byte[] $r3;

        r0 := @this: kellinwood.security.zipsigner.HexEncoder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.OutputStream;

        i2 = 0;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

     label1:
        if $i3 <= 0 goto label2;

        $i4 = $i3 + -1;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i4);

        $z0 = specialinvoke r0.<kellinwood.security.zipsigner.HexEncoder: boolean ignore(char)>($c5);

        if $z0 != 0 goto label5;

     label2:
        $i4 = 0;

     label3:
        if $i4 >= $i3 goto label9;

     label4:
        if $i4 >= $i3 goto label6;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i4);

        $z0 = specialinvoke r0.<kellinwood.security.zipsigner.HexEncoder: boolean ignore(char)>($c5);

        if $z0 == 0 goto label6;

        $i4 = $i4 + 1;

        goto label4;

     label5:
        $i3 = $i3 + -1;

        goto label1;

     label6:
        $r3 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i4);

        b0 = $r3[$c5];

        i6 = $i4 + 1;

     label7:
        if i6 >= $i3 goto label8;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i6);

        $z0 = specialinvoke r0.<kellinwood.security.zipsigner.HexEncoder: boolean ignore(char)>($c5);

        if $z0 == 0 goto label8;

        i6 = i6 + 1;

        goto label7;

     label8:
        $r3 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $i4 = i6 + 1;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i6);

        b1 = $r3[$c5];

        i6 = b0 << 4;

        i6 = i6 | b1;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>(i6);

        i2 = i2 + 1;

        goto label3;

     label9:
        return i2;
    }
    public int decode(byte[], int, int, java.io.OutputStream) throws java.io.IOException
    {
        kellinwood.security.zipsigner.HexEncoder r0;
        byte[] $r1, $r3;
        int $i0, $i1, i4, $i5;
        java.io.OutputStream $r2;
        byte b2, b3;
        char $c6;
        boolean $z0;

        r0 := @this: kellinwood.security.zipsigner.HexEncoder;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.io.OutputStream;

        i4 = 0;

        $i1 = $i0 + $i1;

     label1:
        if $i1 <= $i0 goto label2;

        $i5 = $i1 + -1;

        b2 = $r1[$i5];

        $c6 = (char) b2;

        $z0 = specialinvoke r0.<kellinwood.security.zipsigner.HexEncoder: boolean ignore(char)>($c6);

        if $z0 != 0 goto label4;

     label2:
        if $i0 >= $i1 goto label8;

     label3:
        if $i0 >= $i1 goto label5;

        b2 = $r1[$i0];

        $c6 = (char) b2;

        $z0 = specialinvoke r0.<kellinwood.security.zipsigner.HexEncoder: boolean ignore(char)>($c6);

        if $z0 == 0 goto label5;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $i1 = $i1 + -1;

        goto label1;

     label5:
        $r3 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        b2 = $r1[$i0];

        b2 = $r3[b2];

        $i5 = $i0 + 1;

     label6:
        if $i5 >= $i1 goto label7;

        b3 = $r1[$i5];

        $c6 = (char) b3;

        $z0 = specialinvoke r0.<kellinwood.security.zipsigner.HexEncoder: boolean ignore(char)>($c6);

        if $z0 == 0 goto label7;

        $i5 = $i5 + 1;

        goto label6;

     label7:
        $r3 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $i0 = $i5 + 1;

        b3 = $r1[$i5];

        b3 = $r3[b3];

        $i5 = b2 << 4;

        $i5 = $i5 | b3;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>($i5);

        i4 = i4 + 1;

        goto label2;

     label8:
        return i4;
    }
    public int encode(byte[], int, int, java.io.OutputStream) throws java.io.IOException
    {
        kellinwood.security.zipsigner.HexEncoder r0;
        byte[] $r1, $r3;
        int $i0, $i1, i2, i3, $i5;
        java.io.OutputStream $r2;
        byte $b4;

        r0 := @this: kellinwood.security.zipsigner.HexEncoder;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.io.OutputStream;

        i3 = $i0;

     label1:
        i2 = $i0 + $i1;

        if i3 >= i2 goto label2;

        $b4 = $r1[i3];

        i2 = $b4 & 255;

        $r3 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] encodingTable>;

        $i5 = i2 >>> 4;

        $b4 = $r3[$i5];

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>($b4);

        $r3 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] encodingTable>;

        i2 = i2 & 15;

        $b4 = $r3[i2];

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>($b4);

        i3 = i3 + 1;

        goto label1;

     label2:
        $i0 = $i1 * 2;

        return $i0;
    }
    protected void initialiseDecodingTable()
    {
        kellinwood.security.zipsigner.HexEncoder r0;
        int i0, $i1;
        byte[] $r1, $r2;
        byte $b2, $b3;

        r0 := @this: kellinwood.security.zipsigner.HexEncoder;

        i0 = 0;

     label1:
        $r1 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] encodingTable>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label2;

        $r1 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $r2 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] encodingTable>;

        $b2 = $r2[i0];

        $b3 = (byte) i0;

        $r1[$b2] = $b3;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r1 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $r2 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $b2 = $r2[97];

        $r1[65] = $b2;

        $r1 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $r2 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $b2 = $r2[98];

        $r1[66] = $b2;

        $r1 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $r2 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $b2 = $r2[99];

        $r1[67] = $b2;

        $r1 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $r2 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $b2 = $r2[100];

        $r1[68] = $b2;

        $r1 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $r2 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $b2 = $r2[101];

        $r1[69] = $b2;

        $r1 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $r2 = r0.<kellinwood.security.zipsigner.HexEncoder: byte[] decodingTable>;

        $b2 = $r2[102];

        $r1[70] = $b2;

        return;
    }
