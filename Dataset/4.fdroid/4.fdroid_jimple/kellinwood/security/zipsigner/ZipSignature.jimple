kellinwood.security.zipsigner.ZipSignature extends java.lang.Object
byte[] afterAlgorithmIdBytes
byte[] algorithmIdBytes
byte[] beforeAlgorithmIdBytes
javax.crypto.Cipher cipher
java.security.MessageDigest md
    public void <init>() throws java.io.IOException, java.security.GeneralSecurityException
    {
        kellinwood.security.zipsigner.ZipSignature r0;
        byte[] $r1;
        java.security.MessageDigest $r2;
        javax.crypto.Cipher $r3;

        r0 := @this: kellinwood.security.zipsigner.ZipSignature;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[2];

        $r1[0] = 48;

        $r1[1] = 33;

        r0.<kellinwood.security.zipsigner.ZipSignature: byte[] beforeAlgorithmIdBytes> = $r1;

        $r1 = newarray (byte)[11];

        $r1[0] = 48;

        $r1[1] = 9;

        $r1[2] = 6;

        $r1[3] = 5;

        $r1[4] = 43;

        $r1[5] = 14;

        $r1[6] = 3;

        $r1[7] = 2;

        $r1[8] = 26;

        $r1[9] = 5;

        $r1[10] = 0;

        r0.<kellinwood.security.zipsigner.ZipSignature: byte[] algorithmIdBytes> = $r1;

        $r1 = newarray (byte)[2];

        $r1[0] = 4;

        $r1[1] = 20;

        r0.<kellinwood.security.zipsigner.ZipSignature: byte[] afterAlgorithmIdBytes> = $r1;

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA1");

        r0.<kellinwood.security.zipsigner.ZipSignature: java.security.MessageDigest md> = $r2;

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("RSA/ECB/PKCS1Padding");

        r0.<kellinwood.security.zipsigner.ZipSignature: javax.crypto.Cipher cipher> = $r3;

        return;
    }
    public void initSign(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        kellinwood.security.zipsigner.ZipSignature r0;
        java.security.PrivateKey $r1;
        javax.crypto.Cipher $r2;

        r0 := @this: kellinwood.security.zipsigner.ZipSignature;

        $r1 := @parameter0: java.security.PrivateKey;

        $r2 = r0.<kellinwood.security.zipsigner.ZipSignature: javax.crypto.Cipher cipher>;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r1);

        return;
    }
    public byte[] sign() throws javax.crypto.BadPaddingException, javax.crypto.IllegalBlockSizeException
    {
        kellinwood.security.zipsigner.ZipSignature r0;
        javax.crypto.Cipher $r1;
        byte[] $r2;
        java.security.MessageDigest $r3;

        r0 := @this: kellinwood.security.zipsigner.ZipSignature;

        $r1 = r0.<kellinwood.security.zipsigner.ZipSignature: javax.crypto.Cipher cipher>;

        $r2 = r0.<kellinwood.security.zipsigner.ZipSignature: byte[] beforeAlgorithmIdBytes>;

        virtualinvoke $r1.<javax.crypto.Cipher: byte[] update(byte[])>($r2);

        $r1 = r0.<kellinwood.security.zipsigner.ZipSignature: javax.crypto.Cipher cipher>;

        $r2 = r0.<kellinwood.security.zipsigner.ZipSignature: byte[] algorithmIdBytes>;

        virtualinvoke $r1.<javax.crypto.Cipher: byte[] update(byte[])>($r2);

        $r1 = r0.<kellinwood.security.zipsigner.ZipSignature: javax.crypto.Cipher cipher>;

        $r2 = r0.<kellinwood.security.zipsigner.ZipSignature: byte[] afterAlgorithmIdBytes>;

        virtualinvoke $r1.<javax.crypto.Cipher: byte[] update(byte[])>($r2);

        $r1 = r0.<kellinwood.security.zipsigner.ZipSignature: javax.crypto.Cipher cipher>;

        $r3 = r0.<kellinwood.security.zipsigner.ZipSignature: java.security.MessageDigest md>;

        $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

        virtualinvoke $r1.<javax.crypto.Cipher: byte[] update(byte[])>($r2);

        $r1 = r0.<kellinwood.security.zipsigner.ZipSignature: javax.crypto.Cipher cipher>;

        $r2 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal()>();

        return $r2;
    }
    public void update(byte[])
    {
        kellinwood.security.zipsigner.ZipSignature r0;
        byte[] $r1;
        java.security.MessageDigest $r2;

        r0 := @this: kellinwood.security.zipsigner.ZipSignature;

        $r1 := @parameter0: byte[];

        $r2 = r0.<kellinwood.security.zipsigner.ZipSignature: java.security.MessageDigest md>;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r1);

        return;
    }
    public void update(byte[], int, int)
    {
        kellinwood.security.zipsigner.ZipSignature r0;
        byte[] $r1;
        int $i0, $i1;
        java.security.MessageDigest $r2;

        r0 := @this: kellinwood.security.zipsigner.ZipSignature;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<kellinwood.security.zipsigner.ZipSignature: java.security.MessageDigest md>;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>($r1, $i0, $i1);

        return;
    }
