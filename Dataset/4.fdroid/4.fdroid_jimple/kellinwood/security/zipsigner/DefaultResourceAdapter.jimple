kellinwood.security.zipsigner.DefaultResourceAdapter extends java.lang.Object implements kellinwood.security.zipsigner.ResourceAdapter
    public void <init>()
    {
        kellinwood.security.zipsigner.DefaultResourceAdapter r0;

        r0 := @this: kellinwood.security.zipsigner.DefaultResourceAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public transient java.lang.String getString(kellinwood.security.zipsigner.ResourceAdapter$Item, java.lang.Object[])
    {
        kellinwood.security.zipsigner.DefaultResourceAdapter r0;
        kellinwood.security.zipsigner.ResourceAdapter$Item $r1;
        java.lang.Object[] $r2, $r8;
        int[] $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.Object $r7;

        r0 := @this: kellinwood.security.zipsigner.DefaultResourceAdapter;

        $r1 := @parameter0: kellinwood.security.zipsigner.ResourceAdapter$Item;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = <kellinwood.security.zipsigner.DefaultResourceAdapter$1: int[] $SwitchMap$kellinwood$security$zipsigner$ResourceAdapter$Item>;

        $i0 = virtualinvoke $r1.<kellinwood.security.zipsigner.ResourceAdapter$Item: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label8;
            case 8: goto label9;
            default: goto label1;
        };

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown item ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        return "Input and output files are the same.  Specify a different name for the output.";

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to auto-select key for signing ");

        $r7 = $r2[0];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label4:
        return "Loading certificate and private key";

     label5:
        return "Parsing the input\'s central directory";

     label6:
        return "Generating manifest";

     label7:
        return "Generating signature file";

     label8:
        return "Generating signature block file";

     label9:
        $r8 = newarray (java.lang.Object)[2];

        $r7 = $r2[0];

        $r8[0] = $r7;

        $r7 = $r2[1];

        $r8[1] = $r7;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Copying zip entry %d of %d", $r8);

        return $r6;
    }
