io.requery.android.database.sqlite.SQLiteQuery extends io.requery.android.database.sqlite.SQLiteProgram
private static final java.lang.String TAG
private final android.support.v4.os.CancellationSignal mCancellationSignal
    void <init>(io.requery.android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.Object[], android.support.v4.os.CancellationSignal)
    {
        io.requery.android.database.sqlite.SQLiteQuery r0;
        io.requery.android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;
        android.support.v4.os.CancellationSignal $r4;

        r0 := @this: io.requery.android.database.sqlite.SQLiteQuery;

        $r1 := @parameter0: io.requery.android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object[];

        $r4 := @parameter3: android.support.v4.os.CancellationSignal;

        specialinvoke r0.<io.requery.android.database.sqlite.SQLiteProgram: void <init>(io.requery.android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[],android.support.v4.os.CancellationSignal)>($r1, $r2, $r3, $r4);

        r0.<io.requery.android.database.sqlite.SQLiteQuery: android.support.v4.os.CancellationSignal mCancellationSignal> = $r4;

        return;
    }
    int fillWindow(io.requery.android.database.CursorWindow, int, int, boolean)
    {
        io.requery.android.database.sqlite.SQLiteQuery r0;
        io.requery.android.database.CursorWindow $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        android.support.v4.os.CancellationSignal $r2;
        io.requery.android.database.sqlite.SQLiteSession $r3;
        java.lang.String $r4;
        java.lang.Object[] $r5;
        android.database.sqlite.SQLiteDatabaseCorruptException r6;
        java.lang.Throwable $r7, $r8;
        android.database.sqlite.SQLiteException r9;
        java.lang.StringBuilder $r10;

        r0 := @this: io.requery.android.database.sqlite.SQLiteQuery;

        $r1 := @parameter0: io.requery.android.database.CursorWindow;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteQuery: void acquireReference()>();

     label01:
        virtualinvoke $r1.<io.requery.android.database.CursorWindow: void acquireReference()>();

     label02:
        $r3 = virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteQuery: io.requery.android.database.sqlite.SQLiteSession getSession()>();

        $r4 = virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteQuery: java.lang.String getSql()>();

        $r5 = virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteQuery: java.lang.Object[] getBindArgs()>();

        $i2 = virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteQuery: int getConnectionFlags()>();

     label03:
        $r2 = r0.<io.requery.android.database.sqlite.SQLiteQuery: android.support.v4.os.CancellationSignal mCancellationSignal>;

     label04:
        $i0 = virtualinvoke $r3.<io.requery.android.database.sqlite.SQLiteSession: int executeForCursorWindow(java.lang.String,java.lang.Object[],io.requery.android.database.CursorWindow,int,int,boolean,int,android.support.v4.os.CancellationSignal)>($r4, $r5, $r1, $i0, $i1, $z0, $i2, $r2);

     label05:
        virtualinvoke $r1.<io.requery.android.database.CursorWindow: void releaseReference()>();

     label06:
        virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteQuery: void releaseReference()>();

        return $i0;

     label07:
        r6 := @caughtexception;

     label08:
        virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteQuery: void onCorruption()>();

        throw r6;

     label09:
        $r7 := @caughtexception;

     label10:
        virtualinvoke $r1.<io.requery.android.database.CursorWindow: void releaseReference()>();

        throw $r7;

     label11:
        $r8 := @caughtexception;

        virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteQuery: void releaseReference()>();

        throw $r8;

     label12:
        r9 := @caughtexception;

     label13:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception: ");

        $r4 = virtualinvoke r9.<android.database.sqlite.SQLiteException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; query: ");

        $r4 = virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteQuery: java.lang.String getSql()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SQLiteQuery", $r4);

        throw r9;

     label14:
        nop;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch android.database.sqlite.SQLiteDatabaseCorruptException from label02 to label03 with label07;
        catch android.database.sqlite.SQLiteDatabaseCorruptException from label04 to label05 with label07;
        catch android.database.sqlite.SQLiteException from label02 to label03 with label12;
        catch android.database.sqlite.SQLiteException from label04 to label05 with label12;
        catch java.lang.Throwable from label02 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label13 to label14 with label09;
    }
    public java.lang.String toString()
    {
        io.requery.android.database.sqlite.SQLiteQuery r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: io.requery.android.database.sqlite.SQLiteQuery;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SQLiteQuery: ");

        $r2 = virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteQuery: java.lang.String getSql()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
