io.requery.android.database.sqlite.SQLiteDebug extends java.lang.Object
public static final boolean DEBUG_LOG_SLOW_QUERIES
public static final boolean DEBUG_SQL_LOG
public static final boolean DEBUG_SQL_STATEMENTS
public static final boolean DEBUG_SQL_TIME
    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SQLiteLog", 2);

        <io.requery.android.database.sqlite.SQLiteDebug: boolean DEBUG_SQL_LOG> = $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SQLiteStatements", 2);

        <io.requery.android.database.sqlite.SQLiteDebug: boolean DEBUG_SQL_STATEMENTS> = $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SQLiteTime", 2);

        <io.requery.android.database.sqlite.SQLiteDebug: boolean DEBUG_SQL_TIME> = $z0;

        return;
    }
    private void <init>()
    {
        io.requery.android.database.sqlite.SQLiteDebug r0;

        r0 := @this: io.requery.android.database.sqlite.SQLiteDebug;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static void dump(android.util.Printer, java.lang.String[])
    {
        android.util.Printer $r0;
        java.lang.String[] $r1;
        java.lang.String r2;
        int $i0, $i1;
        boolean $z0, z1;

        $r0 := @parameter0: android.util.Printer;

        $r1 := @parameter1: java.lang.String[];

        z1 = 0;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r2 = $r1[$i1];

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("-v");

        if $z0 == 0 goto label2;

        z1 = 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        staticinvoke <io.requery.android.database.sqlite.SQLiteDatabase: void dumpAll(android.util.Printer,boolean)>($r0, z1);

        return;
    }
    public static io.requery.android.database.sqlite.SQLiteDebug$PagerStats getDatabaseInfo()
    {
        io.requery.android.database.sqlite.SQLiteDebug$PagerStats r0;
        java.util.ArrayList $r1;

        r0 = new io.requery.android.database.sqlite.SQLiteDebug$PagerStats;

        specialinvoke r0.<io.requery.android.database.sqlite.SQLiteDebug$PagerStats: void <init>()>();

        staticinvoke <io.requery.android.database.sqlite.SQLiteDebug: void nativeGetPagerStats(io.requery.android.database.sqlite.SQLiteDebug$PagerStats)>(r0);

        $r1 = staticinvoke <io.requery.android.database.sqlite.SQLiteDatabase: java.util.ArrayList getDbStats()>();

        r0.<io.requery.android.database.sqlite.SQLiteDebug$PagerStats: java.util.ArrayList dbStats> = $r1;

        return r0;
    }
private static native void nativeGetPagerStats(io.requery.android.database.sqlite.SQLiteDebug$PagerStats) { 
// no body
} 
    public static boolean shouldLogSlowQuery(long)
    {
        long $l0, $l2;
        java.lang.String $r0;
        int $i1;
        byte $b3;

        $l0 := @parameter0: long;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("db.log.slow_query_threshold", "-1");

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        if $i1 < 0 goto label1;

        $l2 = (long) $i1;

        $b3 = $l0 cmp $l2;

        if $b3 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }
