io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache extends android.support.v4.util.LruCache
final io.requery.android.database.sqlite.SQLiteConnection this$0
    public void <init>(io.requery.android.database.sqlite.SQLiteConnection, int)
    {
        io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache r0;
        io.requery.android.database.sqlite.SQLiteConnection $r1;
        int $i0;

        r0 := @this: io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache;

        $r1 := @parameter0: io.requery.android.database.sqlite.SQLiteConnection;

        $i0 := @parameter1: int;

        r0.<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache: io.requery.android.database.sqlite.SQLiteConnection this$0> = $r1;

        specialinvoke r0.<android.support.v4.util.LruCache: void <init>(int)>($i0);

        return;
    }
    public void dump(android.util.Printer)
    {
        io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache r0;
        android.util.Printer $r1;
        long $l0;
        java.util.Map $r2;
        boolean $z0;
        int i1, $i2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.util.Map$Entry r6;
        io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement r7;
        java.lang.String r8, $r10;
        java.lang.StringBuilder $r9;

        r0 := @this: io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache;

        $r1 := @parameter0: android.util.Printer;

        interfaceinvoke $r1.<android.util.Printer: void println(java.lang.String)>("  Prepared statement cache:");

        $r2 = virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache: java.util.Map snapshot()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        i1 = 0;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement) $r5;

        $z0 = r7.<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement: boolean mInCache>;

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (java.lang.String) $r5;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": statementPtr=0x");

        $l0 = r7.<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement: long mStatementPtr>;

        $r10 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", numParameters=");

        $i2 = r7.<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement: int mNumParameters>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=");

        $i2 = r7.<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement: int mType>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", readOnly=");

        $z0 = r7.<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement: boolean mReadOnly>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sql=\"");

        r8 = staticinvoke <io.requery.android.database.sqlite.SQLiteConnection: java.lang.String access$300(java.lang.String)>(r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<android.util.Printer: void println(java.lang.String)>(r8);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        interfaceinvoke $r1.<android.util.Printer: void println(java.lang.String)>("    <none>");

     label4:
        return;
    }
    protected volatile void entryRemoved(boolean, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache r0;
        boolean $z0;
        java.lang.Object $r1, $r2, $r3;
        java.lang.String $r4;
        io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement $r5, $r6;

        r0 := @this: io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: java.lang.Object;

        $r4 = (java.lang.String) $r1;

        $r5 = (io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement) $r2;

        $r6 = (io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement) $r3;

        virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache: void entryRemoved(boolean,java.lang.String,io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement,io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement)>($z0, $r4, $r5, $r6);

        return;
    }
    protected void entryRemoved(boolean, java.lang.String, io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement, io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement)
    {
        io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache r0;
        boolean $z0;
        java.lang.String $r1;
        io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement $r2, $r3;
        io.requery.android.database.sqlite.SQLiteConnection $r4;

        r0 := @this: io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement;

        $r3 := @parameter3: io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement;

        $r2.<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement: boolean mInCache> = 0;

        $z0 = $r2.<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement: boolean mInUse>;

        if $z0 != 0 goto label1;

        $r4 = r0.<io.requery.android.database.sqlite.SQLiteConnection$PreparedStatementCache: io.requery.android.database.sqlite.SQLiteConnection this$0>;

        staticinvoke <io.requery.android.database.sqlite.SQLiteConnection: void access$200(io.requery.android.database.sqlite.SQLiteConnection,io.requery.android.database.sqlite.SQLiteConnection$PreparedStatement)>($r4, $r2);

     label1:
        return;
    }
