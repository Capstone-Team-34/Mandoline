io.requery.android.database.sqlite.SQLiteConnectionPool$1 extends java.lang.Object implements android.support.v4.os.CancellationSignal$OnCancelListener
final io.requery.android.database.sqlite.SQLiteConnectionPool this$0
final int val$nonce
final io.requery.android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter val$waiter
    void <init>(io.requery.android.database.sqlite.SQLiteConnectionPool, io.requery.android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter, int)
    {
        io.requery.android.database.sqlite.SQLiteConnectionPool$1 r0;
        io.requery.android.database.sqlite.SQLiteConnectionPool $r1;
        io.requery.android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter $r2;
        int $i0;

        r0 := @this: io.requery.android.database.sqlite.SQLiteConnectionPool$1;

        $r1 := @parameter0: io.requery.android.database.sqlite.SQLiteConnectionPool;

        $r2 := @parameter1: io.requery.android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter;

        $i0 := @parameter2: int;

        r0.<io.requery.android.database.sqlite.SQLiteConnectionPool$1: io.requery.android.database.sqlite.SQLiteConnectionPool this$0> = $r1;

        r0.<io.requery.android.database.sqlite.SQLiteConnectionPool$1: io.requery.android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter val$waiter> = $r2;

        r0.<io.requery.android.database.sqlite.SQLiteConnectionPool$1: int val$nonce> = $i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void onCancel()
    {
        io.requery.android.database.sqlite.SQLiteConnectionPool$1 r0;
        java.lang.Object $r1;
        io.requery.android.database.sqlite.SQLiteConnectionPool $r2;
        io.requery.android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter $r3;
        int $i0, $i1;
        java.lang.Throwable $r4;

        r0 := @this: io.requery.android.database.sqlite.SQLiteConnectionPool$1;

        $r2 = r0.<io.requery.android.database.sqlite.SQLiteConnectionPool$1: io.requery.android.database.sqlite.SQLiteConnectionPool this$0>;

        $r1 = staticinvoke <io.requery.android.database.sqlite.SQLiteConnectionPool: java.lang.Object access$000(io.requery.android.database.sqlite.SQLiteConnectionPool)>($r2);

        entermonitor $r1;

     label1:
        $r3 = r0.<io.requery.android.database.sqlite.SQLiteConnectionPool$1: io.requery.android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter val$waiter>;

        $i0 = $r3.<io.requery.android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter: int mNonce>;

        $i1 = r0.<io.requery.android.database.sqlite.SQLiteConnectionPool$1: int val$nonce>;

        if $i0 != $i1 goto label2;

        $r2 = r0.<io.requery.android.database.sqlite.SQLiteConnectionPool$1: io.requery.android.database.sqlite.SQLiteConnectionPool this$0>;

        $r3 = r0.<io.requery.android.database.sqlite.SQLiteConnectionPool$1: io.requery.android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter val$waiter>;

        staticinvoke <io.requery.android.database.sqlite.SQLiteConnectionPool: void access$100(io.requery.android.database.sqlite.SQLiteConnectionPool,io.requery.android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter)>($r2, $r3);

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
