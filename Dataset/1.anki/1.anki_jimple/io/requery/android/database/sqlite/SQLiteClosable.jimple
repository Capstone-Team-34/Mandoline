io.requery.android.database.sqlite.SQLiteClosable extends java.lang.Object implements java.io.Closeable
private int mReferenceCount
    public void <init>()
    {
        io.requery.android.database.sqlite.SQLiteClosable r0;

        r0 := @this: io.requery.android.database.sqlite.SQLiteClosable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<io.requery.android.database.sqlite.SQLiteClosable: int mReferenceCount> = 1;

        return;
    }
    public void acquireReference()
    {
        io.requery.android.database.sqlite.SQLiteClosable r0;
        int $i0;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;

        r0 := @this: io.requery.android.database.sqlite.SQLiteClosable;

        entermonitor r0;

     label1:
        $i0 = r0.<io.requery.android.database.sqlite.SQLiteClosable: int mReferenceCount>;

        if $i0 > 0 goto label4;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attempt to re-open an already-closed object: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $r4 := @caughtexception;

        exitmonitor r0;

     label3:
        throw $r4;

     label4:
        $i0 = r0.<io.requery.android.database.sqlite.SQLiteClosable: int mReferenceCount>;

        $i0 = $i0 + 1;

        r0.<io.requery.android.database.sqlite.SQLiteClosable: int mReferenceCount> = $i0;

        exitmonitor r0;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
    }
    public void close()
    {
        io.requery.android.database.sqlite.SQLiteClosable r0;

        r0 := @this: io.requery.android.database.sqlite.SQLiteClosable;

        virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return;
    }
protected abstract void onAllReferencesReleased() { 
// no body
} 
    public void releaseReference()
    {
        io.requery.android.database.sqlite.SQLiteClosable r0;
        int $i0;
        boolean z0;
        java.lang.Throwable $r1;

        r0 := @this: io.requery.android.database.sqlite.SQLiteClosable;

        entermonitor r0;

     label1:
        $i0 = r0.<io.requery.android.database.sqlite.SQLiteClosable: int mReferenceCount>;

        $i0 = $i0 + -1;

        r0.<io.requery.android.database.sqlite.SQLiteClosable: int mReferenceCount> = $i0;

        if $i0 != 0 goto label4;

        z0 = 1;

     label2:
        exitmonitor r0;

     label3:
        if z0 == 0 goto label8;

        virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteClosable: void onAllReferencesReleased()>();

        return;

     label4:
        z0 = 0;

        goto label2;

     label5:
        $r1 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r1;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
