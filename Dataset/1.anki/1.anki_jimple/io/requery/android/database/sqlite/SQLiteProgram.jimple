io.requery.android.database.sqlite.SQLiteProgram extends io.requery.android.database.sqlite.SQLiteClosable
private static final java.lang.String[] EMPTY_STRING_ARRAY
private final java.lang.Object[] mBindArgs
private final java.lang.String[] mColumnNames
private final io.requery.android.database.sqlite.SQLiteDatabase mDatabase
private final int mNumParameters
private final boolean mReadOnly
private final java.lang.String mSql
    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[0];

        <io.requery.android.database.sqlite.SQLiteProgram: java.lang.String[] EMPTY_STRING_ARRAY> = $r0;

        return;
    }
    void <init>(io.requery.android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.Object[], android.support.v4.os.CancellationSignal)
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        io.requery.android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3, $r10;
        android.support.v4.os.CancellationSignal $r4;
        io.requery.android.database.sqlite.SQLiteStatementInfo r5;
        boolean z0;
        int $i0, $i1;
        io.requery.android.database.sqlite.SQLiteSession $r6;
        java.lang.String[] $r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        $r1 := @parameter0: io.requery.android.database.sqlite.SQLiteDatabase;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object[];

        $r4 := @parameter3: android.support.v4.os.CancellationSignal;

        z0 = 1;

        specialinvoke r0.<io.requery.android.database.sqlite.SQLiteClosable: void <init>()>();

        r0.<io.requery.android.database.sqlite.SQLiteProgram: io.requery.android.database.sqlite.SQLiteDatabase mDatabase> = $r1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.String mSql> = $r2;

        $r2 = r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.String mSql>;

        $i0 = staticinvoke <io.requery.android.database.sqlite.SQLiteStatementType: int getSqlStatementType(java.lang.String)>($r2);

        lookupswitch($i0)
        {
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label4;
            default: goto label1;
        };

     label1:
        if $i0 != 1 goto label5;

     label2:
        r5 = new io.requery.android.database.sqlite.SQLiteStatementInfo;

        specialinvoke r5.<io.requery.android.database.sqlite.SQLiteStatementInfo: void <init>()>();

        $r6 = virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: io.requery.android.database.sqlite.SQLiteSession getThreadSession()>();

        $r2 = r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.String mSql>;

        $i0 = virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)>(z0);

        virtualinvoke $r6.<io.requery.android.database.sqlite.SQLiteSession: void prepare(java.lang.String,int,android.support.v4.os.CancellationSignal,io.requery.android.database.sqlite.SQLiteStatementInfo)>($r2, $i0, $r4, r5);

        z0 = r5.<io.requery.android.database.sqlite.SQLiteStatementInfo: boolean readOnly>;

        r0.<io.requery.android.database.sqlite.SQLiteProgram: boolean mReadOnly> = z0;

        $r7 = r5.<io.requery.android.database.sqlite.SQLiteStatementInfo: java.lang.String[] columnNames>;

        r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.String[] mColumnNames> = $r7;

        $i0 = r5.<io.requery.android.database.sqlite.SQLiteStatementInfo: int numParameters>;

        r0.<io.requery.android.database.sqlite.SQLiteProgram: int mNumParameters> = $i0;

     label3:
        if $r3 == null goto label6;

        $i0 = lengthof $r3;

        $i1 = r0.<io.requery.android.database.sqlite.SQLiteProgram: int mNumParameters>;

        if $i0 <= $i1 goto label6;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many bind arguments.  ");

        $i0 = lengthof $r3;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arguments were provided but the statement needs ");

        $i0 = r0.<io.requery.android.database.sqlite.SQLiteProgram: int mNumParameters>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arguments.");

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r8;

     label4:
        r0.<io.requery.android.database.sqlite.SQLiteProgram: boolean mReadOnly> = 0;

        $r7 = <io.requery.android.database.sqlite.SQLiteProgram: java.lang.String[] EMPTY_STRING_ARRAY>;

        r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.String[] mColumnNames> = $r7;

        r0.<io.requery.android.database.sqlite.SQLiteProgram: int mNumParameters> = 0;

        goto label3;

     label5:
        z0 = 0;

        goto label2;

     label6:
        $i0 = r0.<io.requery.android.database.sqlite.SQLiteProgram: int mNumParameters>;

        if $i0 == 0 goto label7;

        $i0 = r0.<io.requery.android.database.sqlite.SQLiteProgram: int mNumParameters>;

        $r10 = newarray (java.lang.Object)[$i0];

        r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.Object[] mBindArgs> = $r10;

        if $r3 == null goto label8;

        $r10 = r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.Object[] mBindArgs>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r10, 0, $i0);

        return;

     label7:
        r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.Object[] mBindArgs> = null;

     label8:
        return;
    }
    private void bind(int, java.lang.Object)
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Object[] $r5;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        if $i0 < 1 goto label1;

        $i1 = r0.<io.requery.android.database.sqlite.SQLiteProgram: int mNumParameters>;

        if $i0 <= $i1 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot bind argument at index ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because the index is out of range.  The statement has ");

        $i0 = r0.<io.requery.android.database.sqlite.SQLiteProgram: int mNumParameters>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameters.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r5 = r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.Object[] mBindArgs>;

        $i0 = $i0 + -1;

        $r5[$i0] = $r1;

        return;
    }
    public void bindAllArgsAsStrings(java.lang.String[])
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        java.lang.String[] $r1;
        int i0, $i1;
        java.lang.String $r2;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        $r1 := @parameter0: java.lang.String[];

        if $r1 == null goto label2;

        i0 = lengthof $r1;

     label1:
        if i0 == 0 goto label2;

        $i1 = i0 + -1;

        $r2 = $r1[$i1];

        virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>(i0, $r2);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }
    public void bindBlob(int, byte[])
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        int $i0;
        byte[] $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the bind value at index ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        specialinvoke r0.<io.requery.android.database.sqlite.SQLiteProgram: void bind(int,java.lang.Object)>($i0, $r1);

        return;
    }
    public void bindDouble(int, double)
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        int $i0;
        double $d0;
        java.lang.Double $r1;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        specialinvoke r0.<io.requery.android.database.sqlite.SQLiteProgram: void bind(int,java.lang.Object)>($i0, $r1);

        return;
    }
    public void bindLong(int, long)
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        int $i0;
        long $l1;
        java.lang.Long $r1;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        specialinvoke r0.<io.requery.android.database.sqlite.SQLiteProgram: void bind(int,java.lang.Object)>($i0, $r1);

        return;
    }
    public void bindNull(int)
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        int $i0;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        $i0 := @parameter0: int;

        specialinvoke r0.<io.requery.android.database.sqlite.SQLiteProgram: void bind(int,java.lang.Object)>($i0, null);

        return;
    }
    public void bindString(int, java.lang.String)
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        int $i0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the bind value at index ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        specialinvoke r0.<io.requery.android.database.sqlite.SQLiteProgram: void bind(int,java.lang.Object)>($i0, $r1);

        return;
    }
    public void clearBindings()
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        java.lang.Object[] $r1;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        $r1 = r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.Object[] mBindArgs>;

        if $r1 == null goto label1;

        $r1 = r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.Object[] mBindArgs>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r1, null);

     label1:
        return;
    }
    final java.lang.Object[] getBindArgs()
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        java.lang.Object[] r1;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        r1 = r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.Object[] mBindArgs>;

        return r1;
    }
    final java.lang.String[] getColumnNames()
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        java.lang.String[] r1;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        r1 = r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.String[] mColumnNames>;

        return r1;
    }
    protected final int getConnectionFlags()
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        boolean $z0;
        int $i0;
        io.requery.android.database.sqlite.SQLiteDatabase $r1;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        $r1 = r0.<io.requery.android.database.sqlite.SQLiteProgram: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        $z0 = r0.<io.requery.android.database.sqlite.SQLiteProgram: boolean mReadOnly>;

        $i0 = virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)>($z0);

        return $i0;
    }
    final io.requery.android.database.sqlite.SQLiteDatabase getDatabase()
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        io.requery.android.database.sqlite.SQLiteDatabase r1;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        r1 = r0.<io.requery.android.database.sqlite.SQLiteProgram: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        return r1;
    }
    protected final io.requery.android.database.sqlite.SQLiteSession getSession()
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        io.requery.android.database.sqlite.SQLiteSession $r1;
        io.requery.android.database.sqlite.SQLiteDatabase $r2;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        $r2 = r0.<io.requery.android.database.sqlite.SQLiteProgram: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        $r1 = virtualinvoke $r2.<io.requery.android.database.sqlite.SQLiteDatabase: io.requery.android.database.sqlite.SQLiteSession getThreadSession()>();

        return $r1;
    }
    final java.lang.String getSql()
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        java.lang.String r1;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        r1 = r0.<io.requery.android.database.sqlite.SQLiteProgram: java.lang.String mSql>;

        return r1;
    }
    protected void onAllReferencesReleased()
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        virtualinvoke r0.<io.requery.android.database.sqlite.SQLiteProgram: void clearBindings()>();

        return;
    }
    protected final void onCorruption()
    {
        io.requery.android.database.sqlite.SQLiteProgram r0;
        io.requery.android.database.sqlite.SQLiteDatabase $r1;

        r0 := @this: io.requery.android.database.sqlite.SQLiteProgram;

        $r1 = r0.<io.requery.android.database.sqlite.SQLiteProgram: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: void onCorruption()>();

        return;
    }
