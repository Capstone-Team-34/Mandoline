io.requery.android.database.sqlite.SQLiteCustomFunction extends java.lang.Object
public final io.requery.android.database.sqlite.SQLiteDatabase$CustomFunction callback
public final java.lang.String name
public final int numArgs
    public void <init>(java.lang.String, int, io.requery.android.database.sqlite.SQLiteDatabase$CustomFunction)
    {
        io.requery.android.database.sqlite.SQLiteCustomFunction r0;
        java.lang.String $r1;
        int $i0;
        io.requery.android.database.sqlite.SQLiteDatabase$CustomFunction $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: io.requery.android.database.sqlite.SQLiteCustomFunction;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: io.requery.android.database.sqlite.SQLiteDatabase$CustomFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name must not be null.");

        throw $r3;

     label1:
        r0.<io.requery.android.database.sqlite.SQLiteCustomFunction: java.lang.String name> = $r1;

        r0.<io.requery.android.database.sqlite.SQLiteCustomFunction: int numArgs> = $i0;

        r0.<io.requery.android.database.sqlite.SQLiteCustomFunction: io.requery.android.database.sqlite.SQLiteDatabase$CustomFunction callback> = $r2;

        return;
    }
    private java.lang.String dispatchCallback(java.lang.String[])
    {
        io.requery.android.database.sqlite.SQLiteCustomFunction r0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        io.requery.android.database.sqlite.SQLiteDatabase$CustomFunction $r3;

        r0 := @this: io.requery.android.database.sqlite.SQLiteCustomFunction;

        $r1 := @parameter0: java.lang.String[];

        $r3 = r0.<io.requery.android.database.sqlite.SQLiteCustomFunction: io.requery.android.database.sqlite.SQLiteDatabase$CustomFunction callback>;

        $r2 = interfaceinvoke $r3.<io.requery.android.database.sqlite.SQLiteDatabase$CustomFunction: java.lang.String callback(java.lang.String[])>($r1);

        return $r2;
    }
