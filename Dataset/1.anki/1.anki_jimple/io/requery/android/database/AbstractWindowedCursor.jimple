io.requery.android.database.AbstractWindowedCursor extends io.requery.android.database.AbstractCursor
protected io.requery.android.database.CursorWindow mWindow
    public void <init>()
    {
        io.requery.android.database.AbstractWindowedCursor r0;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        specialinvoke r0.<io.requery.android.database.AbstractCursor: void <init>()>();

        return;
    }
    protected void checkPosition()
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        io.requery.android.database.CursorWindow $r1;
        android.database.StaleDataException $r2;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        specialinvoke r0.<io.requery.android.database.AbstractCursor: void checkPosition()>();

        $r1 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        if $r1 != null goto label1;

        $r2 = new android.database.StaleDataException;

        specialinvoke $r2.<android.database.StaleDataException: void <init>(java.lang.String)>("Attempting to access a closed CursorWindow.Most probable cause: cursor is deactivated prior to calling this method.");

        throw $r2;

     label1:
        return;
    }
    protected void clearOrCreateWindow(java.lang.String)
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        java.lang.String $r1;
        io.requery.android.database.CursorWindow $r2;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        if $r2 != null goto label1;

        $r2 = new io.requery.android.database.CursorWindow;

        specialinvoke $r2.<io.requery.android.database.CursorWindow: void <init>(java.lang.String)>($r1);

        r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow> = $r2;

        return;

     label1:
        $r2 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        virtualinvoke $r2.<io.requery.android.database.CursorWindow: void clear()>();

        return;
    }
    protected void closeWindow()
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        io.requery.android.database.CursorWindow $r1;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $r1 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        if $r1 == null goto label1;

        $r1 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        virtualinvoke $r1.<io.requery.android.database.CursorWindow: void close()>();

        r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow> = null;

     label1:
        return;
    }
    public void copyStringToBuffer(int, android.database.CharArrayBuffer)
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        int $i0, $i1;
        android.database.CharArrayBuffer $r1;
        io.requery.android.database.CursorWindow $r2;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.database.CharArrayBuffer;

        $r2 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        $i1 = r0.<io.requery.android.database.AbstractWindowedCursor: int mPos>;

        virtualinvoke $r2.<io.requery.android.database.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)>($i1, $i0, $r1);

        return;
    }
    public byte[] getBlob(int)
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        int $i0, $i1;
        byte[] $r1;
        io.requery.android.database.CursorWindow $r2;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<io.requery.android.database.AbstractWindowedCursor: void checkPosition()>();

        $r2 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        $i1 = r0.<io.requery.android.database.AbstractWindowedCursor: int mPos>;

        $r1 = virtualinvoke $r2.<io.requery.android.database.CursorWindow: byte[] getBlob(int,int)>($i1, $i0);

        return $r1;
    }
    public double getDouble(int)
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        int $i0, $i1;
        double $d0;
        io.requery.android.database.CursorWindow $r1;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<io.requery.android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        $i1 = r0.<io.requery.android.database.AbstractWindowedCursor: int mPos>;

        $d0 = virtualinvoke $r1.<io.requery.android.database.CursorWindow: double getDouble(int,int)>($i1, $i0);

        return $d0;
    }
    public float getFloat(int)
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        int $i0, $i1;
        float $f0;
        io.requery.android.database.CursorWindow $r1;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<io.requery.android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        $i1 = r0.<io.requery.android.database.AbstractWindowedCursor: int mPos>;

        $f0 = virtualinvoke $r1.<io.requery.android.database.CursorWindow: float getFloat(int,int)>($i1, $i0);

        return $f0;
    }
    public int getInt(int)
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        int $i0, $i1;
        io.requery.android.database.CursorWindow $r1;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<io.requery.android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        $i1 = r0.<io.requery.android.database.AbstractWindowedCursor: int mPos>;

        $i0 = virtualinvoke $r1.<io.requery.android.database.CursorWindow: int getInt(int,int)>($i1, $i0);

        return $i0;
    }
    public long getLong(int)
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        int $i0, $i1;
        long $l2;
        io.requery.android.database.CursorWindow $r1;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<io.requery.android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        $i1 = r0.<io.requery.android.database.AbstractWindowedCursor: int mPos>;

        $l2 = virtualinvoke $r1.<io.requery.android.database.CursorWindow: long getLong(int,int)>($i1, $i0);

        return $l2;
    }
    public short getShort(int)
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        int $i0, $i1;
        short $s2;
        io.requery.android.database.CursorWindow $r1;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<io.requery.android.database.AbstractWindowedCursor: void checkPosition()>();

        $r1 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        $i1 = r0.<io.requery.android.database.AbstractWindowedCursor: int mPos>;

        $s2 = virtualinvoke $r1.<io.requery.android.database.CursorWindow: short getShort(int,int)>($i1, $i0);

        return $s2;
    }
    public java.lang.String getString(int)
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        int $i0, $i1;
        java.lang.String $r1;
        io.requery.android.database.CursorWindow $r2;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        virtualinvoke r0.<io.requery.android.database.AbstractWindowedCursor: void checkPosition()>();

        $r2 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        $i1 = r0.<io.requery.android.database.AbstractWindowedCursor: int mPos>;

        $r1 = virtualinvoke $r2.<io.requery.android.database.CursorWindow: java.lang.String getString(int,int)>($i1, $i0);

        return $r1;
    }
    public int getType(int)
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        int $i0, $i1;
        io.requery.android.database.CursorWindow $r1;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        $i1 = r0.<io.requery.android.database.AbstractWindowedCursor: int mPos>;

        $i0 = virtualinvoke $r1.<io.requery.android.database.CursorWindow: int getType(int,int)>($i1, $i0);

        return $i0;
    }
    public io.requery.android.database.CursorWindow getWindow()
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        io.requery.android.database.CursorWindow r1;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        r1 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        return r1;
    }
    public boolean hasWindow()
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        io.requery.android.database.CursorWindow $r1;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $r1 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isNull(int)
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        int $i0, $i1;
        io.requery.android.database.CursorWindow $r1;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $i0 := @parameter0: int;

        $r1 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        $i1 = r0.<io.requery.android.database.AbstractWindowedCursor: int mPos>;

        $i0 = virtualinvoke $r1.<io.requery.android.database.CursorWindow: int getType(int,int)>($i1, $i0);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    protected void onDeactivateOrClose()
    {
        io.requery.android.database.AbstractWindowedCursor r0;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        specialinvoke r0.<io.requery.android.database.AbstractCursor: void onDeactivateOrClose()>();

        virtualinvoke r0.<io.requery.android.database.AbstractWindowedCursor: void closeWindow()>();

        return;
    }
    public void setWindow(io.requery.android.database.CursorWindow)
    {
        io.requery.android.database.AbstractWindowedCursor r0;
        io.requery.android.database.CursorWindow $r1, $r2;

        r0 := @this: io.requery.android.database.AbstractWindowedCursor;

        $r1 := @parameter0: io.requery.android.database.CursorWindow;

        $r2 = r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow>;

        if $r1 == $r2 goto label1;

        virtualinvoke r0.<io.requery.android.database.AbstractWindowedCursor: void closeWindow()>();

        r0.<io.requery.android.database.AbstractWindowedCursor: io.requery.android.database.CursorWindow mWindow> = $r1;

     label1:
        return;
    }
