io.requery.android.database.DefaultDatabaseErrorHandler extends java.lang.Object implements io.requery.android.database.DatabaseErrorHandler
private static final java.lang.String TAG
    public void <init>()
    {
        io.requery.android.database.DefaultDatabaseErrorHandler r0;

        r0 := @this: io.requery.android.database.DefaultDatabaseErrorHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private void deleteDatabaseFile(java.lang.String)
    {
        io.requery.android.database.DefaultDatabaseErrorHandler r0;
        java.lang.String $r1, $r3;
        java.lang.Exception r2;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r4;
        java.io.File $r5;

        r0 := @this: io.requery.android.database.DefaultDatabaseErrorHandler;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(":memory:");

        if $z0 != 0 goto label5;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleting the database file: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DefaultDatabaseError", $r3);

        $r5 = new java.io.File;

     label2:
        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r1);

        staticinvoke <io.requery.android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>($r5);

     label3:
        return;

     label4:
        r2 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete failed: ");

        $r1 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DefaultDatabaseError", $r1);

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }
    public void onCorruption(io.requery.android.database.sqlite.SQLiteDatabase)
    {
        io.requery.android.database.DefaultDatabaseErrorHandler r0;
        io.requery.android.database.sqlite.SQLiteDatabase $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        boolean $z0;
        java.util.List r4, $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        android.util.Pair r8;
        java.lang.Throwable $r9;
        android.database.sqlite.SQLiteException $r10, $r11;

        r0 := @this: io.requery.android.database.DefaultDatabaseErrorHandler;

        $r1 := @parameter0: io.requery.android.database.sqlite.SQLiteDatabase;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corruption reported by sqlite on database: ");

        $r3 = virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DefaultDatabaseError", $r3);

        $z0 = virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 != 0 goto label01;

        $r3 = virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        specialinvoke r0.<io.requery.android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r3);

        return;

     label01:
        r4 = null;

     label02:
        $r5 = virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>();

     label03:
        r4 = $r5;

     label04:
        virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: void close()>();

     label05:
        if r4 == null goto label07;

        $r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.util.Pair) $r7;

        $r7 = r8.<android.util.Pair: java.lang.Object second>;

        $r3 = (java.lang.String) $r7;

        specialinvoke r0.<io.requery.android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r3);

        goto label06;

     label07:
        $r3 = virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        specialinvoke r0.<io.requery.android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r3);

        return;

     label08:
        $r9 := @caughtexception;

        if r4 == null goto label10;

        $r6 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.util.Pair) $r7;

        $r7 = r8.<android.util.Pair: java.lang.Object second>;

        $r3 = (java.lang.String) $r7;

        specialinvoke r0.<io.requery.android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r3);

        goto label09;

     label10:
        $r3 = virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        specialinvoke r0.<io.requery.android.database.DefaultDatabaseErrorHandler: void deleteDatabaseFile(java.lang.String)>($r3);

     label11:
        throw $r9;

     label12:
        $r10 := @caughtexception;

        goto label04;

     label13:
        $r11 := @caughtexception;

        goto label05;

     label14:
        return;

        catch android.database.sqlite.SQLiteException from label02 to label03 with label12;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch android.database.sqlite.SQLiteException from label04 to label05 with label13;
        catch java.lang.Throwable from label04 to label05 with label08;
    }
