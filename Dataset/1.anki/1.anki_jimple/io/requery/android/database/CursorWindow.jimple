io.requery.android.database.CursorWindow extends io.requery.android.database.sqlite.SQLiteClosable
private static final int WINDOW_SIZE_KB
private static int sCursorWindowSize
private final java.lang.String mName
private int mStartPos
public long mWindowPtr
    static void <clinit>()
    {
        <io.requery.android.database.CursorWindow: int sCursorWindowSize> = -1;

        return;
    }
    public void <init>(java.lang.String)
    {
        io.requery.android.database.CursorWindow r0;
        java.lang.String r1;
        int $i0;
        long $l1;
        byte $b2;
        io.requery.android.database.CursorWindowAllocationException $r2;
        java.lang.StringBuilder $r3;

        r0 := @this: io.requery.android.database.CursorWindow;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<io.requery.android.database.sqlite.SQLiteClosable: void <init>()>();

        r0.<io.requery.android.database.CursorWindow: int mStartPos> = 0;

        if r1 == null goto label3;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

     label1:
        r0.<io.requery.android.database.CursorWindow: java.lang.String mName> = r1;

        $i0 = <io.requery.android.database.CursorWindow: int sCursorWindowSize>;

        if $i0 >= 0 goto label2;

        <io.requery.android.database.CursorWindow: int sCursorWindowSize> = 1048576;

     label2:
        r1 = r0.<io.requery.android.database.CursorWindow: java.lang.String mName>;

        $i0 = <io.requery.android.database.CursorWindow: int sCursorWindowSize>;

        $l1 = staticinvoke <io.requery.android.database.CursorWindow: long nativeCreate(java.lang.String,int)>(r1, $i0);

        r0.<io.requery.android.database.CursorWindow: long mWindowPtr> = $l1;

        $l1 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label4;

        $r2 = new io.requery.android.database.CursorWindowAllocationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cursor window allocation of ");

        $i0 = <io.requery.android.database.CursorWindow: int sCursorWindowSize>;

        $i0 = $i0 / 1024;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" kb failed. ");

        r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<io.requery.android.database.CursorWindowAllocationException: void <init>(java.lang.String)>(r1);

        throw $r2;

     label3:
        r1 = "<unnamed>";

        goto label1;

     label4:
        return;
    }
    private void dispose()
    {
        io.requery.android.database.CursorWindow r0;
        long $l0;
        byte $b1;

        r0 := @this: io.requery.android.database.CursorWindow;

        $l0 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l0 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        staticinvoke <io.requery.android.database.CursorWindow: void nativeDispose(long)>($l0);

        r0.<io.requery.android.database.CursorWindow: long mWindowPtr> = 0L;

     label1:
        return;
    }
private static native boolean nativeAllocRow(long) { 
// no body
} 
private static native void nativeClear(long) { 
// no body
} 
private static native long nativeCreate(java.lang.String, int) { 
// no body
} 
private static native void nativeDispose(long) { 
// no body
} 
private static native void nativeFreeLastRow(long) { 
// no body
} 
private static native byte[] nativeGetBlob(long, int, int) { 
// no body
} 
private static native double nativeGetDouble(long, int, int) { 
// no body
} 
private static native long nativeGetLong(long, int, int) { 
// no body
} 
private static native java.lang.String nativeGetName(long) { 
// no body
} 
private static native int nativeGetNumRows(long) { 
// no body
} 
private static native java.lang.String nativeGetString(long, int, int) { 
// no body
} 
private static native int nativeGetType(long, int, int) { 
// no body
} 
private static native boolean nativePutBlob(long, byte[], int, int) { 
// no body
} 
private static native boolean nativePutDouble(long, double, int, int) { 
// no body
} 
private static native boolean nativePutLong(long, long, int, int) { 
// no body
} 
private static native boolean nativePutNull(long, int, int) { 
// no body
} 
private static native boolean nativePutString(long, java.lang.String, int, int) { 
// no body
} 
private static native boolean nativeSetNumColumns(long, int) { 
// no body
} 
    public boolean allocRow()
    {
        io.requery.android.database.CursorWindow r0;
        boolean $z0;
        long $l0;

        r0 := @this: io.requery.android.database.CursorWindow;

        $l0 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $z0 = staticinvoke <io.requery.android.database.CursorWindow: boolean nativeAllocRow(long)>($l0);

        return $z0;
    }
    public void clear()
    {
        io.requery.android.database.CursorWindow r0;
        long $l0;

        r0 := @this: io.requery.android.database.CursorWindow;

        r0.<io.requery.android.database.CursorWindow: int mStartPos> = 0;

        $l0 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        staticinvoke <io.requery.android.database.CursorWindow: void nativeClear(long)>($l0);

        return;
    }
    public void copyStringToBuffer(int, int, android.database.CharArrayBuffer)
    {
        io.requery.android.database.CursorWindow r0;
        int $i0, $i1;
        android.database.CharArrayBuffer $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;
        char[] $r4;

        r0 := @this: io.requery.android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.database.CharArrayBuffer;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CharArrayBuffer should not be null");

        throw $r2;

     label1:
        $r3 = virtualinvoke r0.<io.requery.android.database.CursorWindow: java.lang.String getString(int,int)>($i0, $i1);

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        $r1.<android.database.CharArrayBuffer: char[] data> = $r4;

        $i0 = lengthof $r4;

        $r1.<android.database.CharArrayBuffer: int sizeCopied> = $i0;

        return;
    }
    protected void finalize() throws java.lang.Throwable
    {
        io.requery.android.database.CursorWindow r0;
        java.lang.Throwable $r1;

        r0 := @this: io.requery.android.database.CursorWindow;

     label1:
        specialinvoke r0.<io.requery.android.database.CursorWindow: void dispose()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r1 := @caughtexception;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public void freeLastRow()
    {
        io.requery.android.database.CursorWindow r0;
        long $l0;

        r0 := @this: io.requery.android.database.CursorWindow;

        $l0 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        staticinvoke <io.requery.android.database.CursorWindow: void nativeFreeLastRow(long)>($l0);

        return;
    }
    public byte[] getBlob(int, int)
    {
        io.requery.android.database.CursorWindow r0;
        int $i0, $i1, $i3;
        byte[] $r1;
        long $l2;

        r0 := @this: io.requery.android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<io.requery.android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i3;

        $r1 = staticinvoke <io.requery.android.database.CursorWindow: byte[] nativeGetBlob(long,int,int)>($l2, $i0, $i1);

        return $r1;
    }
    public double getDouble(int, int)
    {
        io.requery.android.database.CursorWindow r0;
        int $i0, $i1, $i3;
        double $d0;
        long $l2;

        r0 := @this: io.requery.android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<io.requery.android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i3;

        $d0 = staticinvoke <io.requery.android.database.CursorWindow: double nativeGetDouble(long,int,int)>($l2, $i0, $i1);

        return $d0;
    }
    public float getFloat(int, int)
    {
        io.requery.android.database.CursorWindow r0;
        int $i0, $i1;
        double $d0;
        float $f0;

        r0 := @this: io.requery.android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $d0 = virtualinvoke r0.<io.requery.android.database.CursorWindow: double getDouble(int,int)>($i0, $i1);

        $f0 = (float) $d0;

        return $f0;
    }
    public int getInt(int, int)
    {
        io.requery.android.database.CursorWindow r0;
        int $i0, $i1;
        long $l2;

        r0 := @this: io.requery.android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 = virtualinvoke r0.<io.requery.android.database.CursorWindow: long getLong(int,int)>($i0, $i1);

        $i0 = (int) $l2;

        return $i0;
    }
    public long getLong(int, int)
    {
        io.requery.android.database.CursorWindow r0;
        int $i0, $i1, $i3;
        long $l2;

        r0 := @this: io.requery.android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<io.requery.android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i3;

        $l2 = staticinvoke <io.requery.android.database.CursorWindow: long nativeGetLong(long,int,int)>($l2, $i0, $i1);

        return $l2;
    }
    public java.lang.String getName()
    {
        io.requery.android.database.CursorWindow r0;
        java.lang.String r1;

        r0 := @this: io.requery.android.database.CursorWindow;

        r1 = r0.<io.requery.android.database.CursorWindow: java.lang.String mName>;

        return r1;
    }
    public int getNumRows()
    {
        io.requery.android.database.CursorWindow r0;
        int $i0;
        long $l1;

        r0 := @this: io.requery.android.database.CursorWindow;

        $l1 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $i0 = staticinvoke <io.requery.android.database.CursorWindow: int nativeGetNumRows(long)>($l1);

        return $i0;
    }
    public short getShort(int, int)
    {
        io.requery.android.database.CursorWindow r0;
        int $i0, $i1;
        long $l2;
        short $s3;

        r0 := @this: io.requery.android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 = virtualinvoke r0.<io.requery.android.database.CursorWindow: long getLong(int,int)>($i0, $i1);

        $i0 = (int) $l2;

        $s3 = (short) $i0;

        return $s3;
    }
    public int getStartPosition()
    {
        io.requery.android.database.CursorWindow r0;
        int i0;

        r0 := @this: io.requery.android.database.CursorWindow;

        i0 = r0.<io.requery.android.database.CursorWindow: int mStartPos>;

        return i0;
    }
    public java.lang.String getString(int, int)
    {
        io.requery.android.database.CursorWindow r0;
        int $i0, $i1, $i3;
        long $l2;
        java.lang.String $r1;

        r0 := @this: io.requery.android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<io.requery.android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i3;

        $r1 = staticinvoke <io.requery.android.database.CursorWindow: java.lang.String nativeGetString(long,int,int)>($l2, $i0, $i1);

        if $r1 != null goto label1;

        return "";

     label1:
        return $r1;
    }
    public int getType(int, int)
    {
        io.requery.android.database.CursorWindow r0;
        int $i0, $i1, $i3;
        long $l2;

        r0 := @this: io.requery.android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<io.requery.android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i3;

        $i0 = staticinvoke <io.requery.android.database.CursorWindow: int nativeGetType(long,int,int)>($l2, $i0, $i1);

        return $i0;
    }
    protected void onAllReferencesReleased()
    {
        io.requery.android.database.CursorWindow r0;

        r0 := @this: io.requery.android.database.CursorWindow;

        specialinvoke r0.<io.requery.android.database.CursorWindow: void dispose()>();

        return;
    }
    public boolean putBlob(byte[], int, int)
    {
        io.requery.android.database.CursorWindow r0;
        byte[] $r1;
        int $i0, $i1, $i3;
        boolean $z0;
        long $l2;

        r0 := @this: io.requery.android.database.CursorWindow;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $l2 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<io.requery.android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i3;

        $z0 = staticinvoke <io.requery.android.database.CursorWindow: boolean nativePutBlob(long,byte[],int,int)>($l2, $r1, $i0, $i1);

        return $z0;
    }
    public boolean putDouble(double, int, int)
    {
        io.requery.android.database.CursorWindow r0;
        double $d0;
        int $i0, $i1, $i3;
        boolean $z0;
        long $l2;

        r0 := @this: io.requery.android.database.CursorWindow;

        $d0 := @parameter0: double;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $l2 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<io.requery.android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i3;

        $z0 = staticinvoke <io.requery.android.database.CursorWindow: boolean nativePutDouble(long,double,int,int)>($l2, $d0, $i0, $i1);

        return $z0;
    }
    public boolean putLong(long, int, int)
    {
        io.requery.android.database.CursorWindow r0;
        long $l0, $l3;
        int $i1, $i2, $i4;
        boolean $z0;

        r0 := @this: io.requery.android.database.CursorWindow;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $l3 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $i4 = r0.<io.requery.android.database.CursorWindow: int mStartPos>;

        $i1 = $i1 - $i4;

        $z0 = staticinvoke <io.requery.android.database.CursorWindow: boolean nativePutLong(long,long,int,int)>($l3, $l0, $i1, $i2);

        return $z0;
    }
    public boolean putNull(int, int)
    {
        io.requery.android.database.CursorWindow r0;
        int $i0, $i1, $i3;
        boolean $z0;
        long $l2;

        r0 := @this: io.requery.android.database.CursorWindow;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $l2 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<io.requery.android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i3;

        $z0 = staticinvoke <io.requery.android.database.CursorWindow: boolean nativePutNull(long,int,int)>($l2, $i0, $i1);

        return $z0;
    }
    public boolean putString(java.lang.String, int, int)
    {
        io.requery.android.database.CursorWindow r0;
        java.lang.String $r1;
        int $i0, $i1, $i3;
        boolean $z0;
        long $l2;

        r0 := @this: io.requery.android.database.CursorWindow;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $l2 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<io.requery.android.database.CursorWindow: int mStartPos>;

        $i0 = $i0 - $i3;

        $z0 = staticinvoke <io.requery.android.database.CursorWindow: boolean nativePutString(long,java.lang.String,int,int)>($l2, $r1, $i0, $i1);

        return $z0;
    }
    public boolean setNumColumns(int)
    {
        io.requery.android.database.CursorWindow r0;
        int $i0;
        boolean $z0;
        long $l1;

        r0 := @this: io.requery.android.database.CursorWindow;

        $i0 := @parameter0: int;

        $l1 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $z0 = staticinvoke <io.requery.android.database.CursorWindow: boolean nativeSetNumColumns(long,int)>($l1, $i0);

        return $z0;
    }
    public void setStartPosition(int)
    {
        io.requery.android.database.CursorWindow r0;
        int $i0;

        r0 := @this: io.requery.android.database.CursorWindow;

        $i0 := @parameter0: int;

        r0.<io.requery.android.database.CursorWindow: int mStartPos> = $i0;

        return;
    }
    public java.lang.String toString()
    {
        io.requery.android.database.CursorWindow r0;
        long $l0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: io.requery.android.database.CursorWindow;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<io.requery.android.database.CursorWindow: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $l0 = r0.<io.requery.android.database.CursorWindow: long mWindowPtr>;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
