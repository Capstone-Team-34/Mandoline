android.support.v7.widget.RecyclerView extends android.view.ViewGroup implements android.support.v4.view.NestedScrollingChild android.support.v4.view.ScrollingView
static final boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC
private static final boolean ALLOW_THREAD_GAP_WORK
private static final int[] CLIP_TO_PADDING_ATTR
static final boolean DEBUG
static final boolean DISPATCH_TEMP_DETACH
private static final boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION
static final boolean FORCE_INVALIDATE_DISPLAY_LIST
static final long FOREVER_NS
public static final int HORIZONTAL
private static final int INVALID_POINTER
public static final int INVALID_TYPE
private static final java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE
static final int MAX_SCROLL_DURATION
private static final int[] NESTED_SCROLLING_ATTRS
public static final long NO_ID
public static final int NO_POSITION
static final boolean POST_UPDATES_ON_ANIMATION
public static final int SCROLL_STATE_DRAGGING
public static final int SCROLL_STATE_IDLE
public static final int SCROLL_STATE_SETTLING
static final java.lang.String TAG
public static final int TOUCH_SLOP_DEFAULT
public static final int TOUCH_SLOP_PAGING
static final java.lang.String TRACE_BIND_VIEW_TAG
static final java.lang.String TRACE_CREATE_VIEW_TAG
private static final java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG
static final java.lang.String TRACE_NESTED_PREFETCH_TAG
private static final java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG
private static final java.lang.String TRACE_ON_LAYOUT_TAG
static final java.lang.String TRACE_PREFETCH_TAG
static final java.lang.String TRACE_SCROLL_TAG
public static final int VERTICAL
static final android.view.animation.Interpolator sQuinticInterpolator
android.support.v7.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate
private final android.view.accessibility.AccessibilityManager mAccessibilityManager
private android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener
android.support.v7.widget.RecyclerView$Adapter mAdapter
android.support.v7.widget.AdapterHelper mAdapterHelper
boolean mAdapterUpdateDuringMeasure
private android.support.v4.widget.EdgeEffectCompat mBottomGlow
private android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback
android.support.v7.widget.ChildHelper mChildHelper
boolean mClipToPadding
boolean mDataSetHasChangedAfterLayout
private int mDispatchScrollCounter
private int mEatRequestLayout
private int mEatenAccessibilityChangeFlags
boolean mFirstLayoutComplete
android.support.v7.widget.GapWorker mGapWorker
boolean mHasFixedSize
private boolean mIgnoreMotionEventTillDown
private int mInitialTouchX
private int mInitialTouchY
boolean mIsAttached
android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator
private android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener
private java.lang.Runnable mItemAnimatorRunner
final java.util.ArrayList mItemDecorations
boolean mItemsAddedOrRemoved
boolean mItemsChanged
private int mLastTouchX
private int mLastTouchY
android.support.v7.widget.RecyclerView$LayoutManager mLayout
boolean mLayoutFrozen
private int mLayoutOrScrollCounter
boolean mLayoutRequestEaten
private android.support.v4.widget.EdgeEffectCompat mLeftGlow
private final int mMaxFlingVelocity
private final int mMinFlingVelocity
private final int[] mMinMaxLayoutPositions
private final int[] mNestedOffsets
private final android.support.v7.widget.RecyclerView$RecyclerViewDataObserver mObserver
private java.util.List mOnChildAttachStateListeners
private android.support.v7.widget.RecyclerView$OnFlingListener mOnFlingListener
private final java.util.ArrayList mOnItemTouchListeners
final java.util.List mPendingAccessibilityImportanceChange
private android.support.v7.widget.RecyclerView$SavedState mPendingSavedState
boolean mPostedAnimatorRunner
android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry
private boolean mPreserveFocusAfterLayout
final android.support.v7.widget.RecyclerView$Recycler mRecycler
android.support.v7.widget.RecyclerView$RecyclerListener mRecyclerListener
private android.support.v4.widget.EdgeEffectCompat mRightGlow
private final int[] mScrollConsumed
private float mScrollFactor
private android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener
private java.util.List mScrollListeners
private final int[] mScrollOffset
private int mScrollPointerId
private int mScrollState
private android.support.v4.view.NestedScrollingChildHelper mScrollingChildHelper
final android.support.v7.widget.RecyclerView$State mState
final android.graphics.Rect mTempRect
private final android.graphics.Rect mTempRect2
final android.graphics.RectF mTempRectF
private android.support.v4.widget.EdgeEffectCompat mTopGlow
private int mTouchSlop
final java.lang.Runnable mUpdateChildViewsRunnable
private android.view.VelocityTracker mVelocityTracker
final android.support.v7.widget.RecyclerView$ViewFlinger mViewFlinger
private final android.support.v7.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback
final android.support.v7.widget.ViewInfoStore mViewInfoStore
    static void <clinit>()
    {
        int[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Class[] $r1;
        java.lang.Class $r2;
        android.support.v7.widget.RecyclerView$3 $r3;

        $r0 = newarray (int)[1];

        $r0[0] = 16843830;

        <android.support.v7.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS> = $r0;

        $r0 = newarray (int)[1];

        $r0[0] = 16842987;

        <android.support.v7.widget.RecyclerView: int[] CLIP_TO_PADDING_ATTR> = $r0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 == 18 goto label01;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 == 19 goto label01;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 20 goto label07;

     label01:
        $z0 = 1;

     label02:
        <android.support.v7.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST> = $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label08;

        $z0 = 1;

     label03:
        <android.support.v7.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC> = $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label09;

        $z0 = 1;

     label04:
        <android.support.v7.widget.RecyclerView: boolean POST_UPDATES_ON_ANIMATION> = $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label10;

        $z0 = 1;

     label05:
        <android.support.v7.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK> = $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 15 goto label11;

        $z0 = 1;

     label06:
        <android.support.v7.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION> = $z0;

        $r1 = newarray (java.lang.Class)[4];

        $r1[0] = class "Landroid/content/Context;";

        $r1[1] = class "Landroid/util/AttributeSet;";

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1[2] = $r2;

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1[3] = $r2;

        <android.support.v7.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE> = $r1;

        $r3 = new android.support.v7.widget.RecyclerView$3;

        specialinvoke $r3.<android.support.v7.widget.RecyclerView$3: void <init>()>();

        <android.support.v7.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator> = $r3;

        return;

     label07:
        $z0 = 0;

        goto label02;

     label08:
        $z0 = 0;

        goto label03;

     label09:
        $z0 = 0;

        goto label04;

     label10:
        $z0 = 0;

        goto label05;

     label11:
        $z0 = 0;

        goto label06;
    }
    public void <init>(android.content.Context)
    {
        android.support.v7.widget.RecyclerView r0;
        android.content.Context $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.widget.RecyclerView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v7.widget.RecyclerView r0;
        android.content.Context $r1, $r22;
        android.util.AttributeSet $r2;
        int $i0, $i1;
        android.support.v7.widget.RecyclerView$RecyclerViewDataObserver $r3;
        android.support.v7.widget.RecyclerView$Recycler $r4;
        android.support.v7.widget.ViewInfoStore $r5;
        android.support.v7.widget.RecyclerView$1 $r6;
        android.graphics.Rect $r7;
        android.graphics.RectF $r8;
        java.util.ArrayList $r9;
        android.support.v7.widget.DefaultItemAnimator $r10;
        android.support.v7.widget.RecyclerView$ViewFlinger $r11;
        boolean $z0;
        android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl $r12;
        android.support.v7.widget.RecyclerView$State $r13;
        android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener $r14;
        int[] $r15;
        android.support.v7.widget.RecyclerView$2 $r16;
        android.support.v7.widget.RecyclerView$4 $r17;
        android.content.res.TypedArray $r18;
        android.view.ViewConfiguration $r19;
        android.support.v7.widget.RecyclerView$ItemAnimator $r20;
        android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener $r21;
        java.lang.Object $r23;
        android.view.accessibility.AccessibilityManager $r24;
        android.support.v7.widget.RecyclerViewAccessibilityDelegate $r25;
        java.lang.String $r26;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.support.v7.widget.RecyclerView$RecyclerViewDataObserver;

        specialinvoke $r3.<android.support.v7.widget.RecyclerView$RecyclerViewDataObserver: void <init>(android.support.v7.widget.RecyclerView)>(r0);

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$RecyclerViewDataObserver mObserver> = $r3;

        $r4 = new android.support.v7.widget.RecyclerView$Recycler;

        specialinvoke $r4.<android.support.v7.widget.RecyclerView$Recycler: void <init>(android.support.v7.widget.RecyclerView)>(r0);

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler> = $r4;

        $r5 = new android.support.v7.widget.ViewInfoStore;

        specialinvoke $r5.<android.support.v7.widget.ViewInfoStore: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore> = $r5;

        $r6 = new android.support.v7.widget.RecyclerView$1;

        specialinvoke $r6.<android.support.v7.widget.RecyclerView$1: void <init>(android.support.v7.widget.RecyclerView)>(r0);

        r0.<android.support.v7.widget.RecyclerView: java.lang.Runnable mUpdateChildViewsRunnable> = $r6;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect> = $r7;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2> = $r7;

        $r8 = new android.graphics.RectF;

        specialinvoke $r8.<android.graphics.RectF: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView: android.graphics.RectF mTempRectF> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations> = $r9;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners> = $r9;

        r0.<android.support.v7.widget.RecyclerView: int mEatRequestLayout> = 0;

        r0.<android.support.v7.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout> = 0;

        r0.<android.support.v7.widget.RecyclerView: int mLayoutOrScrollCounter> = 0;

        r0.<android.support.v7.widget.RecyclerView: int mDispatchScrollCounter> = 0;

        $r10 = new android.support.v7.widget.DefaultItemAnimator;

        specialinvoke $r10.<android.support.v7.widget.DefaultItemAnimator: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator> = $r10;

        r0.<android.support.v7.widget.RecyclerView: int mScrollState> = 0;

        r0.<android.support.v7.widget.RecyclerView: int mScrollPointerId> = -1;

        r0.<android.support.v7.widget.RecyclerView: float mScrollFactor> = 1.4E-45F;

        r0.<android.support.v7.widget.RecyclerView: boolean mPreserveFocusAfterLayout> = 1;

        $r11 = new android.support.v7.widget.RecyclerView$ViewFlinger;

        specialinvoke $r11.<android.support.v7.widget.RecyclerView$ViewFlinger: void <init>(android.support.v7.widget.RecyclerView)>(r0);

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewFlinger mViewFlinger> = $r11;

        $z0 = <android.support.v7.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z0 == 0 goto label07;

        $r12 = new android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl;

        specialinvoke $r12.<android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl: void <init>()>();

     label01:
        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry> = $r12;

        $r13 = new android.support.v7.widget.RecyclerView$State;

        specialinvoke $r13.<android.support.v7.widget.RecyclerView$State: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState> = $r13;

        r0.<android.support.v7.widget.RecyclerView: boolean mItemsAddedOrRemoved> = 0;

        r0.<android.support.v7.widget.RecyclerView: boolean mItemsChanged> = 0;

        $r14 = new android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener;

        specialinvoke $r14.<android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener: void <init>(android.support.v7.widget.RecyclerView)>(r0);

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener> = $r14;

        r0.<android.support.v7.widget.RecyclerView: boolean mPostedAnimatorRunner> = 0;

        $r15 = newarray (int)[2];

        r0.<android.support.v7.widget.RecyclerView: int[] mMinMaxLayoutPositions> = $r15;

        $r15 = newarray (int)[2];

        r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset> = $r15;

        $r15 = newarray (int)[2];

        r0.<android.support.v7.widget.RecyclerView: int[] mScrollConsumed> = $r15;

        $r15 = newarray (int)[2];

        r0.<android.support.v7.widget.RecyclerView: int[] mNestedOffsets> = $r15;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange> = $r9;

        $r16 = new android.support.v7.widget.RecyclerView$2;

        specialinvoke $r16.<android.support.v7.widget.RecyclerView$2: void <init>(android.support.v7.widget.RecyclerView)>(r0);

        r0.<android.support.v7.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner> = $r16;

        $r17 = new android.support.v7.widget.RecyclerView$4;

        specialinvoke $r17.<android.support.v7.widget.RecyclerView$4: void <init>(android.support.v7.widget.RecyclerView)>(r0);

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback> = $r17;

        if $r2 == null goto label08;

        $r15 = <android.support.v7.widget.RecyclerView: int[] CLIP_TO_PADDING_ATTR>;

        $r18 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r15, $i0, 0);

        $z0 = virtualinvoke $r18.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        r0.<android.support.v7.widget.RecyclerView: boolean mClipToPadding> = $z0;

        virtualinvoke $r18.<android.content.res.TypedArray: void recycle()>();

     label02:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setScrollContainer(boolean)>(1);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setFocusableInTouchMode(boolean)>(1);

        $r19 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i1 = virtualinvoke $r19.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.support.v7.widget.RecyclerView: int mTouchSlop> = $i1;

        $i1 = virtualinvoke $r19.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<android.support.v7.widget.RecyclerView: int mMinFlingVelocity> = $i1;

        $i1 = virtualinvoke $r19.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<android.support.v7.widget.RecyclerView: int mMaxFlingVelocity> = $i1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getOverScrollMode()>();

        if $i1 != 2 goto label09;

        $z0 = 1;

     label03:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setWillNotDraw(boolean)>($z0);

        $r20 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r21 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener>;

        virtualinvoke $r20.<android.support.v7.widget.RecyclerView$ItemAnimator: void setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)>($r21);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void initAdapterManager()>();

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void initChildrenHelper()>();

        $i1 = staticinvoke <android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>(r0);

        if $i1 != 0 goto label04;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r0, 1);

     label04:
        $r22 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.content.Context getContext()>();

        $r23 = virtualinvoke $r22.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r24 = (android.view.accessibility.AccessibilityManager) $r23;

        r0.<android.support.v7.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager> = $r24;

        $r25 = new android.support.v7.widget.RecyclerViewAccessibilityDelegate;

        specialinvoke $r25.<android.support.v7.widget.RecyclerViewAccessibilityDelegate: void <init>(android.support.v7.widget.RecyclerView)>(r0);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate)>($r25);

        $z0 = 1;

        if $r2 == null goto label10;

        $r15 = <android.support.v7.recyclerview.R$styleable: int[] RecyclerView>;

        $r18 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r15, $i0, 0);

        $i1 = <android.support.v7.recyclerview.R$styleable: int RecyclerView_layoutManager>;

        $r26 = virtualinvoke $r18.<android.content.res.TypedArray: java.lang.String getString(int)>($i1);

        $i1 = <android.support.v7.recyclerview.R$styleable: int RecyclerView_android_descendantFocusability>;

        $i1 = virtualinvoke $r18.<android.content.res.TypedArray: int getInt(int,int)>($i1, -1);

        if $i1 != -1 goto label05;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setDescendantFocusability(int)>(262144);

     label05:
        virtualinvoke $r18.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)>($r1, $r26, $r2, $i0, 0);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label06;

        $r15 = <android.support.v7.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS>;

        $r18 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r15, $i0, 0);

        $z0 = virtualinvoke $r18.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        virtualinvoke $r18.<android.content.res.TypedArray: void recycle()>();

     label06:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setNestedScrollingEnabled(boolean)>($z0);

        return;

     label07:
        $r12 = null;

        goto label01;

     label08:
        r0.<android.support.v7.widget.RecyclerView: boolean mClipToPadding> = 1;

        goto label02;

     label09:
        $z0 = 0;

        goto label03;

     label10:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setDescendantFocusability(int)>(262144);

        goto label06;
    }
    static void access$000(android.support.v7.widget.RecyclerView, android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.RecyclerView $r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewGroup$LayoutParams $r2;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView;

        $r1 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r2 := @parameter3: android.view.ViewGroup$LayoutParams;

        virtualinvoke $r0.<android.support.v7.widget.RecyclerView: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r2);

        return;
    }
    static void access$100(android.support.v7.widget.RecyclerView, int)
    {
        android.support.v7.widget.RecyclerView $r0;
        int $i0;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<android.support.v7.widget.RecyclerView: void detachViewFromParent(int)>($i0);

        return;
    }
    static void access$1000(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.RecyclerView $r0;
        int $i0, $i1;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<android.support.v7.widget.RecyclerView: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }
    static boolean access$500(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView;

        $z0 = virtualinvoke $r0.<android.support.v7.widget.RecyclerView: boolean awakenScrollBars()>();

        return $z0;
    }
    static boolean access$600()
    {
        boolean z0;

        z0 = <android.support.v7.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        return z0;
    }
    private void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1, $r5;
        android.view.View r2;
        android.view.ViewParent $r3;
        boolean z0, $z1;
        android.support.v7.widget.RecyclerView$Recycler $r4;
        android.support.v7.widget.ChildHelper $r6;
        android.view.ViewGroup$LayoutParams $r7;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        r2 = $r1.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r3 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 != r0 goto label2;

        z0 = 1;

     label1:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r5 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>(r2);

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Recycler: void unscrapView(android.support.v7.widget.RecyclerView$ViewHolder)>($r5);

        $z1 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z1 == 0 goto label3;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r7 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        virtualinvoke $r6.<android.support.v7.widget.ChildHelper: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>(r2, -1, $r7, 1);

        return;

     label2:
        z0 = 0;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        virtualinvoke $r6.<android.support.v7.widget.ChildHelper: void addView(android.view.View,boolean)>(r2, 1);

        return;

     label4:
        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        virtualinvoke $r6.<android.support.v7.widget.ChildHelper: void hide(android.view.View)>(r2);

        return;
    }
    private void animateChange(android.support.v7.widget.RecyclerView$ViewHolder, android.support.v7.widget.RecyclerView$ViewHolder, android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo, android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo, boolean, boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1, $r2;
        android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo $r3, $r4;
        boolean $z0, $z1;
        android.support.v7.widget.RecyclerView$Recycler $r5;
        android.support.v7.widget.RecyclerView$ItemAnimator $r6;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$ViewHolder;

        $r3 := @parameter2: android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        $r4 := @parameter3: android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        $z0 := @parameter4: boolean;

        $z1 := @parameter5: boolean;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder)>($r1);

     label1:
        if $r1 == $r2 goto label3;

        if $z1 == 0 goto label2;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder)>($r2);

     label2:
        $r1.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView$ViewHolder mShadowedHolder> = $r2;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder)>($r1);

        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r5.<android.support.v7.widget.RecyclerView$Recycler: void unscrapView(android.support.v7.widget.RecyclerView$ViewHolder)>($r1);

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        $r2.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView$ViewHolder mShadowingHolder> = $r1;

     label3:
        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z0 = virtualinvoke $r6.<android.support.v7.widget.RecyclerView$ItemAnimator: boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>($r1, $r2, $r3, $r4);

        if $z0 == 0 goto label4;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void postAnimationRunner()>();

     label4:
        return;
    }
    private void cancelTouch()
    {
        android.support.v7.widget.RecyclerView r0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void resetTouch()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setScrollState(int)>(0);

        return;
    }
    static void clearNestedRecyclerViewIfNotNested(android.support.v7.widget.RecyclerView$ViewHolder)
    {
        android.support.v7.widget.RecyclerView$ViewHolder $r0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        android.view.View r3, $r4;
        android.view.ViewParent $r5;
        boolean $z0;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 = $r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView>;

        if $r1 == null goto label5;

        $r1 = $r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.view.View) $r2;

     label1:
        if r3 == null goto label4;

        $r4 = $r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        if r3 != $r4 goto label2;

        return;

     label2:
        $r5 = virtualinvoke r3.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = $r5 instanceof android.view.View;

        if $z0 == 0 goto label3;

        r3 = (android.view.View) $r5;

        goto label1;

     label3:
        r3 = null;

        goto label1;

     label4:
        $r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView> = null;

     label5:
        return;
    }
    private void createLayoutManager(android.content.Context, java.lang.String, android.util.AttributeSet, int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1, $i2;
        java.lang.Object[] r3, r8;
        java.lang.NoSuchMethodException r4, r14;
        java.lang.String $r5, $r17;
        boolean $z0;
        java.lang.Class $r6;
        java.lang.ClassLoader $r7;
        java.lang.Class[] $r9;
        java.lang.reflect.Constructor $r10;
        java.lang.Integer $r11;
        java.lang.Object $r12;
        android.support.v7.widget.RecyclerView$LayoutManager $r13;
        java.lang.IllegalStateException $r15;
        java.lang.StringBuilder $r16;
        java.lang.ClassNotFoundException r18;
        java.lang.reflect.InvocationTargetException r19;
        java.lang.InstantiationException r20;
        java.lang.IllegalAccessException r21;
        java.lang.ClassCastException r22;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.content.Context;

        $r5 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.util.AttributeSet;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        if $r5 == null goto label31;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i2 == 0 goto label31;

        $r5 = specialinvoke r0.<android.support.v7.widget.RecyclerView: java.lang.String getFullClassName(android.content.Context,java.lang.String)>($r1, $r5);

     label01:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean isInEditMode()>();

     label02:
        if $z0 == 0 goto label16;

     label03:
        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label04:
        $r6 = virtualinvoke $r7.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroid/support/v7/widget/RecyclerView$LayoutManager;");

     label05:
        r8 = null;

        $r9 = <android.support.v7.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE>;

     label06:
        $r10 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r9);

     label07:
        r3 = newarray (java.lang.Object)[4];

        r3[0] = $r1;

        r3[1] = $r2;

     label08:
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label09:
        r3[2] = $r11;

     label10:
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label11:
        r3[3] = $r11;

        r8 = r3;

     label12:
        virtualinvoke $r10.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r12 = virtualinvoke $r10.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r8);

     label13:
        $r13 = (android.support.v7.widget.RecyclerView$LayoutManager) $r12;

     label14:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager)>($r13);

     label15:
        return;

     label16:
        $r7 = virtualinvoke $r1.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

     label17:
        goto label04;

     label18:
        r14 := @caughtexception;

        $r9 = newarray (java.lang.Class)[0];

     label19:
        $r10 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r9);

     label20:
        goto label12;

     label21:
        r4 := @caughtexception;

     label22:
        virtualinvoke r4.<java.lang.NoSuchMethodException: java.lang.Throwable initCause(java.lang.Throwable)>(r14);

     label23:
        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

     label24:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke $r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error creating LayoutManager ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r17, r4);

     label25:
        throw $r15;

     label26:
        r18 := @caughtexception;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke $r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Unable to find LayoutManager ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r5, r18);

        throw $r15;

     label27:
        r19 := @caughtexception;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke $r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not instantiate the LayoutManager: ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r5, r19);

        throw $r15;

     label28:
        r20 := @caughtexception;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke $r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Could not instantiate the LayoutManager: ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r5, r20);

        throw $r15;

     label29:
        r21 := @caughtexception;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke $r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Cannot access non-public constructor ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r5, r21);

        throw $r15;

     label30:
        r22 := @caughtexception;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke $r2.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Class is not a LayoutManager ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r5, r22);

        throw $r15;

     label31:
        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label26;
        catch java.lang.ClassNotFoundException from label03 to label04 with label26;
        catch java.lang.ClassNotFoundException from label04 to label05 with label26;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label27;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label27;
        catch java.lang.reflect.InvocationTargetException from label04 to label05 with label27;
        catch java.lang.InstantiationException from label01 to label02 with label28;
        catch java.lang.InstantiationException from label03 to label04 with label28;
        catch java.lang.InstantiationException from label04 to label05 with label28;
        catch java.lang.IllegalAccessException from label01 to label02 with label29;
        catch java.lang.IllegalAccessException from label03 to label04 with label29;
        catch java.lang.IllegalAccessException from label04 to label05 with label29;
        catch java.lang.ClassCastException from label01 to label02 with label30;
        catch java.lang.ClassCastException from label03 to label04 with label30;
        catch java.lang.ClassCastException from label04 to label05 with label30;
        catch java.lang.NoSuchMethodException from label06 to label07 with label18;
        catch java.lang.NoSuchMethodException from label08 to label09 with label18;
        catch java.lang.NoSuchMethodException from label10 to label11 with label18;
        catch java.lang.ClassNotFoundException from label06 to label07 with label26;
        catch java.lang.ClassNotFoundException from label08 to label09 with label26;
        catch java.lang.ClassNotFoundException from label10 to label11 with label26;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label27;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label27;
        catch java.lang.reflect.InvocationTargetException from label10 to label11 with label27;
        catch java.lang.InstantiationException from label06 to label07 with label28;
        catch java.lang.InstantiationException from label08 to label09 with label28;
        catch java.lang.InstantiationException from label10 to label11 with label28;
        catch java.lang.IllegalAccessException from label06 to label07 with label29;
        catch java.lang.IllegalAccessException from label08 to label09 with label29;
        catch java.lang.IllegalAccessException from label10 to label11 with label29;
        catch java.lang.ClassCastException from label06 to label07 with label30;
        catch java.lang.ClassCastException from label08 to label09 with label30;
        catch java.lang.ClassCastException from label10 to label11 with label30;
        catch java.lang.ClassNotFoundException from label12 to label13 with label26;
        catch java.lang.ClassNotFoundException from label14 to label15 with label26;
        catch java.lang.ClassNotFoundException from label16 to label17 with label26;
        catch java.lang.reflect.InvocationTargetException from label12 to label13 with label27;
        catch java.lang.reflect.InvocationTargetException from label14 to label15 with label27;
        catch java.lang.reflect.InvocationTargetException from label16 to label17 with label27;
        catch java.lang.InstantiationException from label12 to label13 with label28;
        catch java.lang.InstantiationException from label14 to label15 with label28;
        catch java.lang.InstantiationException from label16 to label17 with label28;
        catch java.lang.IllegalAccessException from label12 to label13 with label29;
        catch java.lang.IllegalAccessException from label14 to label15 with label29;
        catch java.lang.IllegalAccessException from label16 to label17 with label29;
        catch java.lang.ClassCastException from label12 to label15 with label30;
        catch java.lang.ClassCastException from label16 to label17 with label30;
        catch java.lang.NoSuchMethodException from label19 to label20 with label21;
        catch java.lang.ClassNotFoundException from label19 to label20 with label26;
        catch java.lang.reflect.InvocationTargetException from label19 to label20 with label27;
        catch java.lang.InstantiationException from label19 to label20 with label28;
        catch java.lang.IllegalAccessException from label19 to label20 with label29;
        catch java.lang.ClassCastException from label19 to label20 with label30;
        catch java.lang.ClassNotFoundException from label22 to label23 with label26;
        catch java.lang.ClassNotFoundException from label24 to label25 with label26;
        catch java.lang.reflect.InvocationTargetException from label22 to label23 with label27;
        catch java.lang.reflect.InvocationTargetException from label24 to label25 with label27;
        catch java.lang.InstantiationException from label22 to label23 with label28;
        catch java.lang.InstantiationException from label24 to label25 with label28;
        catch java.lang.IllegalAccessException from label22 to label23 with label29;
        catch java.lang.IllegalAccessException from label24 to label25 with label29;
        catch java.lang.ClassCastException from label22 to label23 with label30;
        catch java.lang.ClassCastException from label24 to label25 with label30;
    }
    private boolean didChildRangeChange(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, $i2;
        int[] $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])>($r1);

        $r1 = r0.<android.support.v7.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        $i2 = $r1[0];

        if $i2 != $i0 goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        $i0 = $r1[1];

        if $i0 == $i1 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    private void dispatchContentChangedIfNecessary()
    {
        android.support.v7.widget.RecyclerView r0;
        int i0;
        boolean $z0;
        android.view.accessibility.AccessibilityEvent $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        i0 = r0.<android.support.v7.widget.RecyclerView: int mEatenAccessibilityChangeFlags>;

        r0.<android.support.v7.widget.RecyclerView: int mEatenAccessibilityChangeFlags> = 0;

        if i0 == 0 goto label1;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean isAccessibilityEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>();

        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setEventType(int)>(2048);

        staticinvoke <android.support.v4.view.accessibility.AccessibilityEventCompat: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)>($r1, i0);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>($r1);

     label1:
        return;
    }
    private void dispatchLayoutStep1()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean z0;
        android.support.v7.widget.RecyclerView$State $r1, $r3;
        android.support.v7.widget.ViewInfoStore $r2;
        android.support.v7.widget.RecyclerView$Adapter $r4;
        int $i0, i1, $i2;
        int[] $r5;
        android.support.v7.widget.ChildHelper $r6;
        android.view.View $r7;
        android.support.v7.widget.RecyclerView$ViewHolder $r8;
        android.support.v7.widget.RecyclerView$ItemAnimator $r9;
        java.util.List $r10;
        android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo $r11;
        long $l3;
        android.support.v7.widget.RecyclerView$LayoutManager $r12;
        android.support.v7.widget.RecyclerView$Recycler $r13;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$State: void assertLayoutStep(int)>(1);

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: boolean mIsMeasuring> = 0;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void eatRequestLayout()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r2.<android.support.v7.widget.ViewInfoStore: void clear()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>();

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void saveFocusInfo()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        z0 = $r3.<android.support.v7.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if z0 == 0 goto label04;

        z0 = r0.<android.support.v7.widget.RecyclerView: boolean mItemsChanged>;

        if z0 == 0 goto label04;

        z0 = 1;

     label01:
        $r1.<android.support.v7.widget.RecyclerView$State: boolean mTrackOldChangeHolders> = z0;

        r0.<android.support.v7.widget.RecyclerView: boolean mItemsChanged> = 0;

        r0.<android.support.v7.widget.RecyclerView: boolean mItemsAddedOrRemoved> = 0;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        z0 = $r3.<android.support.v7.widget.RecyclerView$State: boolean mRunPredictiveAnimations>;

        $r1.<android.support.v7.widget.RecyclerView$State: boolean mInPreLayout> = z0;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $i0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Adapter: int getItemCount()>();

        $r1.<android.support.v7.widget.RecyclerView$State: int mItemCount> = $i0;

        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])>($r5);

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        z0 = $r1.<android.support.v7.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if z0 == 0 goto label06;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r6.<android.support.v7.widget.ChildHelper: int getChildCount()>();

        i1 = 0;

     label02:
        if i1 >= $i0 goto label06;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r7 = virtualinvoke $r6.<android.support.v7.widget.ChildHelper: android.view.View getChildAt(int)>(i1);

        $r8 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r7);

        z0 = virtualinvoke $r8.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if z0 != 0 goto label03;

        z0 = virtualinvoke $r8.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if z0 == 0 goto label05;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if z0 != 0 goto label05;

     label03:
        i1 = i1 + 1;

        goto label02;

     label04:
        z0 = 0;

        goto label01;

     label05:
        $r9 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i2 = staticinvoke <android.support.v7.widget.RecyclerView$ItemAnimator: int buildAdapterChangeFlagsForAnimations(android.support.v7.widget.RecyclerView$ViewHolder)>($r8);

        $r10 = virtualinvoke $r8.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()>();

        $r11 = virtualinvoke $r9.<android.support.v7.widget.RecyclerView$ItemAnimator: android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List)>($r1, $r8, $i2, $r10);

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r2.<android.support.v7.widget.ViewInfoStore: void addToPreLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>($r8, $r11);

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        z0 = $r1.<android.support.v7.widget.RecyclerView$State: boolean mTrackOldChangeHolders>;

        if z0 == 0 goto label03;

        z0 = virtualinvoke $r8.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isUpdated()>();

        if z0 == 0 goto label03;

        z0 = virtualinvoke $r8.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if z0 != 0 goto label03;

        z0 = virtualinvoke $r8.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if z0 != 0 goto label03;

        z0 = virtualinvoke $r8.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if z0 != 0 goto label03;

        $l3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder)>($r8);

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r2.<android.support.v7.widget.ViewInfoStore: void addToOldChangeHolders(long,android.support.v7.widget.RecyclerView$ViewHolder)>($l3, $r8);

        goto label03;

     label06:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        z0 = $r1.<android.support.v7.widget.RecyclerView$State: boolean mRunPredictiveAnimations>;

        if z0 == 0 goto label14;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void saveOldPositions()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        z0 = $r1.<android.support.v7.widget.RecyclerView$State: boolean mStructureChanged>;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: boolean mStructureChanged> = 0;

        $r12 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r13 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r12.<android.support.v7.widget.RecyclerView$LayoutManager: void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r13, $r1);

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: boolean mStructureChanged> = z0;

        $i0 = 0;

     label07:
        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r6.<android.support.v7.widget.ChildHelper: int getChildCount()>();

        if $i0 >= i1 goto label12;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r7 = virtualinvoke $r6.<android.support.v7.widget.ChildHelper: android.view.View getChildAt(int)>($i0);

        $r8 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r7);

        z0 = virtualinvoke $r8.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if z0 == 0 goto label09;

     label08:
        $i0 = $i0 + 1;

        goto label07;

     label09:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        z0 = virtualinvoke $r2.<android.support.v7.widget.ViewInfoStore: boolean isInPreLayout(android.support.v7.widget.RecyclerView$ViewHolder)>($r8);

        if z0 != 0 goto label08;

        i1 = staticinvoke <android.support.v7.widget.RecyclerView$ItemAnimator: int buildAdapterChangeFlagsForAnimations(android.support.v7.widget.RecyclerView$ViewHolder)>($r8);

        $i2 = i1;

        z0 = virtualinvoke $r8.<android.support.v7.widget.RecyclerView$ViewHolder: boolean hasAnyOfTheFlags(int)>(8192);

        if z0 != 0 goto label10;

        $i2 = i1 | 4096;

     label10:
        $r9 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r10 = virtualinvoke $r8.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()>();

        $r11 = virtualinvoke $r9.<android.support.v7.widget.RecyclerView$ItemAnimator: android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List)>($r1, $r8, $i2, $r10);

        if z0 == 0 goto label11;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>($r8, $r11);

        goto label08;

     label11:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r2.<android.support.v7.widget.ViewInfoStore: void addToAppearedInPreLayoutHolders(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>($r8, $r11);

        goto label08;

     label12:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void clearOldPositions()>();

     label13:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: int mLayoutStep> = 2;

        return;

     label14:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void clearOldPositions()>();

        goto label13;
    }
    private void dispatchLayoutStep2()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$State $r1, $r6;
        int $i0;
        android.support.v7.widget.AdapterHelper $r2;
        android.support.v7.widget.RecyclerView$Adapter $r3;
        android.support.v7.widget.RecyclerView$LayoutManager $r4;
        android.support.v7.widget.RecyclerView$Recycler $r5;
        boolean $z0;
        android.support.v7.widget.RecyclerView$ItemAnimator $r7;

        r0 := @this: android.support.v7.widget.RecyclerView;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void eatRequestLayout()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$State: void assertLayoutStep(int)>(6);

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r2.<android.support.v7.widget.AdapterHelper: void consumeUpdatesInOnePass()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$Adapter: int getItemCount()>();

        $r1.<android.support.v7.widget.RecyclerView$State: int mItemCount> = $i0;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: int mDeletedInvisibleItemCountSincePreviousLayout> = 0;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: boolean mInPreLayout> = 0;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$LayoutManager: void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r5, $r1);

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: boolean mStructureChanged> = 0;

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$SavedState mPendingSavedState> = null;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z0 = $r6.<android.support.v7.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z0 == 0 goto label2;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r7 == null goto label2;

        $z0 = 1;

     label1:
        $r1.<android.support.v7.widget.RecyclerView$State: boolean mRunSimpleAnimations> = $z0;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: int mLayoutStep> = 4;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    private void dispatchLayoutStep3()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$State $r1, $r13;
        boolean $z0, $z1;
        android.support.v7.widget.ChildHelper $r2;
        int $i0, $i2;
        android.view.View $r3;
        android.support.v7.widget.RecyclerView$ViewHolder $r4, $r8;
        long $l1;
        android.support.v7.widget.RecyclerView$ItemAnimator $r5;
        android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo $r6, $r9;
        android.support.v7.widget.ViewInfoStore $r7;
        android.support.v7.widget.ViewInfoStore$ProcessCallback $r10;
        android.support.v7.widget.RecyclerView$LayoutManager $r11;
        android.support.v7.widget.RecyclerView$Recycler $r12;
        java.util.ArrayList $r14;
        int[] $r15;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$State: void assertLayoutStep(int)>(4);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void eatRequestLayout()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: int mLayoutStep> = 1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z0 = $r1.<android.support.v7.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z0 == 0 goto label08;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: int getChildCount()>();

        $i0 = $i0 + -1;

     label01:
        if $i0 < 0 goto label07;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r3 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: android.view.View getChildAt(int)>($i0);

        $r4 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r3);

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label03;

     label02:
        $i0 = $i0 + -1;

        goto label01;

     label03:
        $l1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder)>($r4);

        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r6 = virtualinvoke $r5.<android.support.v7.widget.RecyclerView$ItemAnimator: android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder)>($r1, $r4);

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        $r8 = virtualinvoke $r7.<android.support.v7.widget.ViewInfoStore: android.support.v7.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long)>($l1);

        if $r8 == null goto label06;

        $z0 = virtualinvoke $r8.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label06;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        $z0 = virtualinvoke $r7.<android.support.v7.widget.ViewInfoStore: boolean isDisappearing(android.support.v7.widget.RecyclerView$ViewHolder)>($r8);

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        $z1 = virtualinvoke $r7.<android.support.v7.widget.ViewInfoStore: boolean isDisappearing(android.support.v7.widget.RecyclerView$ViewHolder)>($r4);

        if $z0 == 0 goto label04;

        if $r8 != $r4 goto label04;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r7.<android.support.v7.widget.ViewInfoStore: void addToPostLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>($r4, $r6);

        goto label02;

     label04:
        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        $r9 = virtualinvoke $r7.<android.support.v7.widget.ViewInfoStore: android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(android.support.v7.widget.RecyclerView$ViewHolder)>($r8);

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r7.<android.support.v7.widget.ViewInfoStore: void addToPostLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>($r4, $r6);

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        $r6 = virtualinvoke $r7.<android.support.v7.widget.ViewInfoStore: android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(android.support.v7.widget.RecyclerView$ViewHolder)>($r4);

        if $r9 != null goto label05;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void handleMissingPreInfoForChangeError(long,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder)>($l1, $r4, $r8);

        goto label02;

     label05:
        specialinvoke r0.<android.support.v7.widget.RecyclerView: void animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean)>($r8, $r4, $r9, $r6, $z0, $z1);

        goto label02;

     label06:
        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r7.<android.support.v7.widget.ViewInfoStore: void addToPostLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>($r4, $r6);

        goto label02;

     label07:
        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        $r10 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback>;

        virtualinvoke $r7.<android.support.v7.widget.ViewInfoStore: void process(android.support.v7.widget.ViewInfoStore$ProcessCallback)>($r10);

     label08:
        $r11 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r12 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r11.<android.support.v7.widget.RecyclerView$LayoutManager: void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler)>($r12);

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r13 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i0 = $r13.<android.support.v7.widget.RecyclerView$State: int mItemCount>;

        $r1.<android.support.v7.widget.RecyclerView$State: int mPreviousLayoutItemCount> = $i0;

        r0.<android.support.v7.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout> = 0;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: boolean mRunSimpleAnimations> = 0;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: boolean mRunPredictiveAnimations> = 0;

        $r11 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r11.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations> = 0;

        $r12 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r14 = $r12.<android.support.v7.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        if $r14 == null goto label09;

        $r12 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r14 = $r12.<android.support.v7.widget.RecyclerView$Recycler: java.util.ArrayList mChangedScrap>;

        virtualinvoke $r14.<java.util.ArrayList: void clear()>();

     label09:
        $r11 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = $r11.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mPrefetchMaxObservedInInitialPrefetch>;

        if $z0 == 0 goto label10;

        $r11 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r11.<android.support.v7.widget.RecyclerView$LayoutManager: int mPrefetchMaxCountObserved> = 0;

        $r11 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r11.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mPrefetchMaxObservedInInitialPrefetch> = 0;

        $r12 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r12.<android.support.v7.widget.RecyclerView$Recycler: void updateViewCacheSize()>();

     label10:
        $r11 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r11.<android.support.v7.widget.RecyclerView$LayoutManager: void onLayoutCompleted(android.support.v7.widget.RecyclerView$State)>($r1);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r7.<android.support.v7.widget.ViewInfoStore: void clear()>();

        $r15 = r0.<android.support.v7.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        $i0 = $r15[0];

        $r15 = r0.<android.support.v7.widget.RecyclerView: int[] mMinMaxLayoutPositions>;

        $i2 = $r15[1];

        $z0 = specialinvoke r0.<android.support.v7.widget.RecyclerView: boolean didChildRangeChange(int,int)>($i0, $i2);

        if $z0 == 0 goto label11;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchOnScrolled(int,int)>(0, 0);

     label11:
        specialinvoke r0.<android.support.v7.widget.RecyclerView: void recoverFocusFromState()>();

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void resetFocusInfo()>();

        return;
    }
    private boolean dispatchOnItemTouch(android.view.MotionEvent)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.MotionEvent $r1;
        int $i0, i1;
        android.support.v7.widget.RecyclerView$OnItemTouchListener $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener>;

        if $r2 == null goto label1;

        if $i0 != 0 goto label3;

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener> = null;

     label1:
        if $i0 == 0 goto label6;

        $r3 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label6;

        $r3 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r2 = (android.support.v7.widget.RecyclerView$OnItemTouchListener) $r4;

        $z0 = interfaceinvoke $r2.<android.support.v7.widget.RecyclerView$OnItemTouchListener: boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)>(r0, $r1);

        if $z0 == 0 goto label5;

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener> = $r2;

        return 1;

     label3:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener>;

        interfaceinvoke $r2.<android.support.v7.widget.RecyclerView$OnItemTouchListener: void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)>(r0, $r1);

        if $i0 == 3 goto label4;

        if $i0 != 1 goto label7;

     label4:
        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener> = null;

        return 1;

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        return 0;

     label7:
        return 1;
    }
    private boolean dispatchOnItemTouchIntercept(android.view.MotionEvent)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, i2;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        android.support.v7.widget.RecyclerView$OnItemTouchListener r4;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 == 3 goto label1;

        if $i0 != 0 goto label2;

     label1:
        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener> = null;

     label2:
        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label3:
        if i2 >= $i1 goto label5;

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (android.support.v7.widget.RecyclerView$OnItemTouchListener) $r3;

        $z0 = interfaceinvoke r4.<android.support.v7.widget.RecyclerView$OnItemTouchListener: boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)>(r0, $r1);

        if $z0 == 0 goto label4;

        if $i0 == 3 goto label4;

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener> = r4;

        return 1;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return 0;
    }
    private void findMinMaxChildLayoutPositions(int[])
    {
        android.support.v7.widget.RecyclerView r0;
        int[] $r1;
        android.support.v7.widget.ChildHelper $r2;
        int $i0, i1, i2, i3, $i4;
        android.view.View $r3;
        android.support.v7.widget.RecyclerView$ViewHolder $r4;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: int[];

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: int getChildCount()>();

        if $i0 != 0 goto label1;

        $r1[0] = -1;

        $r1[1] = -1;

        return;

     label1:
        i1 = 2147483647;

        i2 = -2147483648;

        i3 = 0;

     label2:
        if i3 >= $i0 goto label6;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r3 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: android.view.View getChildAt(int)>(i3);

        $r4 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r3);

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $i4 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if $i4 >= i1 goto label5;

        i1 = $i4;

     label5:
        if $i4 <= i2 goto label3;

        i2 = $i4;

        goto label3;

     label6:
        $r1[0] = i1;

        $r1[1] = i2;

        return;
    }
    static android.support.v7.widget.RecyclerView findNestedRecyclerView(android.view.View)
    {
        android.view.View r0;
        boolean $z0;
        android.support.v7.widget.RecyclerView r1;
        android.view.ViewGroup r2;
        int $i0, i1;

        r0 := @parameter0: android.view.View;

        $z0 = r0 instanceof android.view.ViewGroup;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $z0 = r0 instanceof android.support.v7.widget.RecyclerView;

        if $z0 == 0 goto label2;

        r1 = (android.support.v7.widget.RecyclerView) r0;

        return r1;

     label2:
        r2 = (android.view.ViewGroup) r0;

        $i0 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        i1 = 0;

     label3:
        if i1 >= $i0 goto label5;

        r0 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(i1);

        r1 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView findNestedRecyclerView(android.view.View)>(r0);

        if r1 == null goto label4;

        return r1;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return null;
    }
    private android.view.View findNextViewToFocus()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$State $r1;
        int $i0, $i1, i2;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;
        android.view.View $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i0 = $r1.<android.support.v7.widget.RecyclerView$State: int mFocusedItemPosition>;

        if $i0 == -1 goto label05;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i0 = $r1.<android.support.v7.widget.RecyclerView$State: int mFocusedItemPosition>;

     label01:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i1 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        i2 = $i0;

     label02:
        if i2 >= $i1 goto label03;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)>(i2);

        if $r2 != null goto label06;

     label03:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        $i0 = $i0 + -1;

     label04:
        if $i0 < 0 goto label10;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)>($i0);

        if $r2 != null goto label08;

        return null;

     label05:
        $i0 = 0;

        goto label01;

     label06:
        $r3 = $r2.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = virtualinvoke $r3.<android.view.View: boolean hasFocusable()>();

        if $z0 == 0 goto label07;

        $r3 = $r2.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        return $r3;

     label07:
        i2 = i2 + 1;

        goto label02;

     label08:
        $r3 = $r2.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = virtualinvoke $r3.<android.view.View: boolean hasFocusable()>();

        if $z0 == 0 goto label09;

        $r3 = $r2.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        return $r3;

     label09:
        $i0 = $i0 + -1;

        goto label04;

     label10:
        return null;
    }
    static android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)
    {
        android.view.View $r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.support.v7.widget.RecyclerView$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$ViewHolder r3;

        $r0 := @parameter0: android.view.View;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r2 = (android.support.v7.widget.RecyclerView$LayoutParams) $r1;

        r3 = $r2.<android.support.v7.widget.RecyclerView$LayoutParams: android.support.v7.widget.RecyclerView$ViewHolder mViewHolder>;

        return r3;
    }
    static void getDecoratedBoundsWithMarginsInt(android.view.View, android.graphics.Rect)
    {
        android.view.View $r0;
        android.graphics.Rect $r1, r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.RecyclerView$LayoutParams r4;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.Rect;

        $r3 = virtualinvoke $r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.v7.widget.RecyclerView$LayoutParams) $r3;

        r2 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = virtualinvoke $r0.<android.view.View: int getLeft()>();

        $i1 = r2.<android.graphics.Rect: int left>;

        $i0 = $i0 - $i1;

        $i1 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int leftMargin>;

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r0.<android.view.View: int getTop()>();

        $i2 = r2.<android.graphics.Rect: int top>;

        $i1 = $i1 - $i2;

        $i2 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int topMargin>;

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke $r0.<android.view.View: int getRight()>();

        $i3 = r2.<android.graphics.Rect: int right>;

        $i2 = $i2 + $i3;

        $i3 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int rightMargin>;

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke $r0.<android.view.View: int getBottom()>();

        $i4 = r2.<android.graphics.Rect: int bottom>;

        $i3 = $i3 + $i4;

        $i4 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int bottomMargin>;

        $i3 = $i3 + $i4;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
    private int getDeepestFocusedViewWithId(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View r1, $r3;
        int $i0, $i1;
        boolean $z0;
        android.view.ViewGroup r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getId()>();

     label1:
        $z0 = virtualinvoke r1.<android.view.View: boolean isFocused()>();

        if $z0 != 0 goto label2;

        $z0 = r1 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r1.<android.view.View: boolean hasFocus()>();

        if $z0 == 0 goto label2;

        r2 = (android.view.ViewGroup) r1;

        $r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getFocusedChild()>();

        r1 = $r3;

        $i1 = virtualinvoke $r3.<android.view.View: int getId()>();

        if $i1 == -1 goto label1;

        $i0 = virtualinvoke $r3.<android.view.View: int getId()>();

        goto label1;

     label2:
        return $i0;
    }
    private java.lang.String getFullClassName(android.content.Context, java.lang.String)
    {
        android.support.v7.widget.RecyclerView r0;
        android.content.Context $r1;
        java.lang.String r2, $r4;
        char $c0;
        java.lang.StringBuilder $r3;
        boolean $z0;
        java.lang.Class $r5;
        java.lang.Package $r6;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        $c0 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        if $c0 != 46 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return r2;

     label1:
        $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z0 != 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = class "Landroid/support/v7/widget/RecyclerView;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Package getPackage()>();

        $r4 = virtualinvoke $r6.<java.lang.Package: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r2;
    }
    private float getScrollFactor()
    {
        android.support.v7.widget.RecyclerView r0;
        android.util.TypedValue r1;
        float $f0;
        byte $b0;
        android.content.Context $r2;
        android.content.res.Resources$Theme $r3;
        boolean $z0;
        android.content.res.Resources $r4;
        android.util.DisplayMetrics $r5;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $f0 = r0.<android.support.v7.widget.RecyclerView: float mScrollFactor>;

        $b0 = $f0 cmpl 1.4E-45F;

        if $b0 != 0 goto label1;

        r1 = new android.util.TypedValue;

        specialinvoke r1.<android.util.TypedValue: void <init>()>();

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r3.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842829, r1, 1);

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = virtualinvoke r1.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($r5);

        r0.<android.support.v7.widget.RecyclerView: float mScrollFactor> = $f0;

     label1:
        $f0 = r0.<android.support.v7.widget.RecyclerView: float mScrollFactor>;

        return $f0;

     label2:
        return 0.0F;
    }
    private android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.view.NestedScrollingChildHelper mScrollingChildHelper>;

        if $r1 != null goto label1;

        $r1 = new android.support.v4.view.NestedScrollingChildHelper;

        specialinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: void <init>(android.view.View)>(r0);

        r0.<android.support.v7.widget.RecyclerView: android.support.v4.view.NestedScrollingChildHelper mScrollingChildHelper> = $r1;

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.view.NestedScrollingChildHelper mScrollingChildHelper>;

        return $r1;
    }
    private void handleMissingPreInfoForChangeError(long, android.support.v7.widget.RecyclerView$ViewHolder, android.support.v7.widget.RecyclerView$ViewHolder)
    {
        android.support.v7.widget.RecyclerView r0;
        long $l0, $l3;
        android.support.v7.widget.RecyclerView$ViewHolder $r1, $r2, $r5;
        android.support.v7.widget.ChildHelper $r3;
        int $i1, i2;
        android.view.View $r4;
        byte $b4;
        android.support.v7.widget.RecyclerView$Adapter $r6;
        boolean $z0;
        java.lang.IllegalStateException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $l0 := @parameter0: long;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$ViewHolder;

        $r2 := @parameter2: android.support.v7.widget.RecyclerView$ViewHolder;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i1 = virtualinvoke $r3.<android.support.v7.widget.ChildHelper: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label5;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r4 = virtualinvoke $r3.<android.support.v7.widget.ChildHelper: android.view.View getChildAt(int)>(i2);

        $r5 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r4);

        if $r5 != $r1 goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $l3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder)>($r5);

        $b4 = $l3 cmp $l0;

        if $b4 != 0 goto label2;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r6 == null goto label4;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r6.<android.support.v7.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 == 0 goto label4;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Two different ViewHolders have the same stable ID. Stable IDs in your adapter MUST BE unique and SHOULD NOT change.\n ViewHolder 1:");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \n View Holder 2:");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label4:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Two different ViewHolders have the same change ID. This might happen due to inconsistent Adapter update events or if the LayoutManager lays out the same View multiple times.\n ViewHolder 1:");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \n View Holder 2:");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem while matching changed view holders with the newones. The pre-layout information for the change holder ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be found but it is necessary for ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", $r9);

        return;
    }
    private boolean hasUpdatedView()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.ChildHelper $r1;
        int $i0, i1;
        android.view.View $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: android.view.View getChildAt(int)>(i1);

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r2);

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isUpdated()>();

        if $z0 == 0 goto label2;

        return 1;

     label4:
        return 0;
    }
    private void initChildrenHelper()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.ChildHelper $r1;
        android.support.v7.widget.RecyclerView$5 $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = new android.support.v7.widget.ChildHelper;

        $r2 = new android.support.v7.widget.RecyclerView$5;

        specialinvoke $r2.<android.support.v7.widget.RecyclerView$5: void <init>(android.support.v7.widget.RecyclerView)>(r0);

        specialinvoke $r1.<android.support.v7.widget.ChildHelper: void <init>(android.support.v7.widget.ChildHelper$Callback)>($r2);

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper> = $r1;

        return;
    }
    private boolean isPreferredNextFocus(android.view.View, android.view.View, int)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1, $r2;
        int $i0, $i2;
        byte $b1, b3;
        android.support.v7.widget.RecyclerView$LayoutManager $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $b1 = 0;

        if $r2 == null goto label01;

        if $r2 != r0 goto label02;

     label01:
        return 0;

     label02:
        if $r1 == null goto label11;

        if $i0 == 2 goto label03;

        if $i0 != 1 goto label10;

     label03:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $i2 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$LayoutManager: int getLayoutDirection()>();

        if $i2 != 1 goto label07;

        b3 = 1;

     label04:
        if $i0 != 2 goto label05;

        $b1 = 1;

     label05:
        $i2 = $b1 ^ b3;

        if $i2 == 0 goto label08;

        $b1 = 66;

     label06:
        $z0 = specialinvoke r0.<android.support.v7.widget.RecyclerView: boolean isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)>($r1, $r2, $b1);

        if $z0 != 0 goto label11;

        if $i0 != 2 goto label09;

        $z0 = specialinvoke r0.<android.support.v7.widget.RecyclerView: boolean isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)>($r1, $r2, 130);

        return $z0;

     label07:
        b3 = 0;

        goto label04;

     label08:
        $b1 = 17;

        goto label06;

     label09:
        $z0 = specialinvoke r0.<android.support.v7.widget.RecyclerView: boolean isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)>($r1, $r2, 33);

        return $z0;

     label10:
        $z0 = specialinvoke r0.<android.support.v7.widget.RecyclerView: boolean isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)>($r1, $r2, $i0);

        return $z0;

     label11:
        return 1;
    }
    private boolean isPreferredNextFocusAbsolute(android.view.View, android.view.View, int)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1, $r2;
        int $i0, $i1, $i2;
        android.graphics.Rect $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i1 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i1, $i2);

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        $i2 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i1, $i2);

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r3);

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r2, $r3);

        lookupswitch($i0)
        {
            case 17: goto label02;
            case 33: goto label08;
            case 66: goto label05;
            case 130: goto label11;
            default: goto label01;
        };

     label01:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("direction must be absolute. received:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label02:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r3.<android.graphics.Rect: int right>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r3.<android.graphics.Rect: int right>;

        if $i0 > $i1 goto label03;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r3.<android.graphics.Rect: int left>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r3.<android.graphics.Rect: int right>;

        if $i0 < $i1 goto label04;

     label03:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r3.<android.graphics.Rect: int left>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r3.<android.graphics.Rect: int left>;

        if $i0 <= $i1 goto label04;

        return 1;

     label04:
        return 0;

     label05:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r3.<android.graphics.Rect: int left>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r3.<android.graphics.Rect: int left>;

        if $i0 < $i1 goto label06;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r3.<android.graphics.Rect: int right>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r3.<android.graphics.Rect: int left>;

        if $i0 > $i1 goto label07;

     label06:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r3.<android.graphics.Rect: int right>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r3.<android.graphics.Rect: int right>;

        if $i0 < $i1 goto label14;

     label07:
        return 0;

     label08:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r3.<android.graphics.Rect: int bottom>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r3.<android.graphics.Rect: int bottom>;

        if $i0 > $i1 goto label09;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r3.<android.graphics.Rect: int top>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r3.<android.graphics.Rect: int bottom>;

        if $i0 < $i1 goto label10;

     label09:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r3.<android.graphics.Rect: int top>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r3.<android.graphics.Rect: int top>;

        if $i0 > $i1 goto label14;

     label10:
        return 0;

     label11:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r3.<android.graphics.Rect: int top>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r3.<android.graphics.Rect: int top>;

        if $i0 < $i1 goto label12;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r3.<android.graphics.Rect: int bottom>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r3.<android.graphics.Rect: int top>;

        if $i0 > $i1 goto label13;

     label12:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r3.<android.graphics.Rect: int bottom>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect2>;

        $i1 = $r3.<android.graphics.Rect: int bottom>;

        if $i0 < $i1 goto label14;

     label13:
        return 0;

     label14:
        return 1;
    }
    private void onPointerUp(android.view.MotionEvent)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        byte b3;
        float $f0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        $i2 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i1);

        $i0 = r0.<android.support.v7.widget.RecyclerView: int mScrollPointerId>;

        if $i2 != $i0 goto label3;

        if $i1 != 0 goto label2;

        b3 = 1;

     label1:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>(b3);

        r0.<android.support.v7.widget.RecyclerView: int mScrollPointerId> = $i0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>(b3);

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchX> = $i0;

        r0.<android.support.v7.widget.RecyclerView: int mInitialTouchX> = $i0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>(b3);

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchY> = $i0;

        r0.<android.support.v7.widget.RecyclerView: int mInitialTouchY> = $i0;

        return;

     label2:
        b3 = 0;

        goto label1;

     label3:
        return;
    }
    private boolean predictiveItemAnimationsEnabled()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        android.support.v7.widget.RecyclerView$ItemAnimator $r1;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean supportsPredictiveItemAnimations()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void processAdapterUpdatesAndSetAnimationFlags()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0, $z1, $z2;
        android.support.v7.widget.AdapterHelper $r1;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        android.support.v7.widget.RecyclerView$State $r3, $r6;
        android.support.v7.widget.RecyclerView$ItemAnimator $r4;
        android.support.v7.widget.RecyclerView$Adapter $r5;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 = 1;

        $z1 = r0.<android.support.v7.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z1 == 0 goto label01;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r1.<android.support.v7.widget.AdapterHelper: void reset()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void onItemsChanged(android.support.v7.widget.RecyclerView)>(r0);

     label01:
        $z1 = specialinvoke r0.<android.support.v7.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()>();

        if $z1 == 0 goto label09;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r1.<android.support.v7.widget.AdapterHelper: void preProcess()>();

     label02:
        $z1 = r0.<android.support.v7.widget.RecyclerView: boolean mItemsAddedOrRemoved>;

        if $z1 != 0 goto label03;

        $z1 = r0.<android.support.v7.widget.RecyclerView: boolean mItemsChanged>;

        if $z1 == 0 goto label10;

     label03:
        $z1 = 1;

     label04:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z2 = r0.<android.support.v7.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z2 == 0 goto label11;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r4 == null goto label11;

        $z2 = r0.<android.support.v7.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z2 != 0 goto label05;

        if $z1 != 0 goto label05;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z2 = $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations>;

        if $z2 == 0 goto label11;

     label05:
        $z2 = r0.<android.support.v7.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z2 == 0 goto label06;

        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $z2 = virtualinvoke $r5.<android.support.v7.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z2 == 0 goto label11;

     label06:
        $z2 = 1;

     label07:
        $r3.<android.support.v7.widget.RecyclerView$State: boolean mRunSimpleAnimations> = $z2;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z2 = $r6.<android.support.v7.widget.RecyclerView$State: boolean mRunSimpleAnimations>;

        if $z2 == 0 goto label12;

        if $z1 == 0 goto label12;

        $z1 = r0.<android.support.v7.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z1 != 0 goto label12;

        $z1 = specialinvoke r0.<android.support.v7.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()>();

        if $z1 == 0 goto label12;

     label08:
        $r3.<android.support.v7.widget.RecyclerView$State: boolean mRunPredictiveAnimations> = $z0;

        return;

     label09:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r1.<android.support.v7.widget.AdapterHelper: void consumeUpdatesInOnePass()>();

        goto label02;

     label10:
        $z1 = 0;

        goto label04;

     label11:
        $z2 = 0;

        goto label07;

     label12:
        $z0 = 0;

        goto label08;
    }
    private void pullGlows(float, float, float, float)
    {
        android.support.v7.widget.RecyclerView r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        boolean z0, $z1;
        byte $b0;
        android.support.v4.widget.EdgeEffectCompat $r1;
        int $i1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        z0 = 0;

        $b0 = $f1 cmpg 0.0F;

        if $b0 >= 0 goto label4;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void ensureLeftGlow()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        $f4 = neg $f1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getWidth()>();

        $f5 = (float) $i1;

        $f4 = $f4 / $f5;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getHeight()>();

        $f5 = (float) $i1;

        $f2 = $f2 / $f5;

        $f2 = 1.0F - $f2;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float,float)>($f4, $f2);

        if $z1 == 0 goto label1;

        z0 = 1;

     label1:
        $b0 = $f3 cmpg 0.0F;

        if $b0 >= 0 goto label5;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void ensureTopGlow()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        $f2 = neg $f3;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getHeight()>();

        $f4 = (float) $i1;

        $f2 = $f2 / $f4;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getWidth()>();

        $f4 = (float) $i1;

        $f0 = $f0 / $f4;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float,float)>($f2, $f0);

        if $z1 == 0 goto label2;

        z0 = 1;

     label2:
        if z0 != 0 goto label3;

        $b0 = $f1 cmpl 0.0F;

        if $b0 != 0 goto label3;

        $b0 = $f3 cmpl 0.0F;

        if $b0 == 0 goto label6;

     label3:
        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

        return;

     label4:
        $b0 = $f1 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void ensureRightGlow()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getWidth()>();

        $f4 = (float) $i1;

        $f4 = $f1 / $f4;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getHeight()>();

        $f5 = (float) $i1;

        $f2 = $f2 / $f5;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float,float)>($f4, $f2);

        if $z1 == 0 goto label1;

        z0 = 1;

        goto label1;

     label5:
        $b0 = $f3 cmpl 0.0F;

        if $b0 <= 0 goto label2;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void ensureBottomGlow()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getHeight()>();

        $f2 = (float) $i1;

        $f2 = $f3 / $f2;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getWidth()>();

        $f4 = (float) $i1;

        $f0 = $f0 / $f4;

        $f0 = 1.0F - $f0;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float,float)>($f2, $f0);

        if $z1 == 0 goto label2;

        z0 = 1;

        goto label2;

     label6:
        return;
    }
    private void recoverFocusFromState()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        android.support.v7.widget.RecyclerView$Adapter $r1;
        int $i0;
        android.view.View $r2, $r7;
        android.support.v7.widget.ChildHelper $r3;
        android.view.ViewParent $r4;
        android.support.v7.widget.RecyclerView$ViewHolder r5;
        android.support.v7.widget.RecyclerView$State $r6;
        long $l1;
        byte $b2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mPreserveFocusAfterLayout>;

        if $z0 == 0 goto label8;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r1 == null goto label8;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean hasFocus()>();

        if $z0 == 0 goto label8;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getDescendantFocusability()>();

        if $i0 == 393216 goto label8;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getDescendantFocusability()>();

        if $i0 != 131072 goto label1;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean isFocused()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean isFocused()>();

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.view.View getFocusedChild()>();

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.ChildHelper: boolean isHidden(android.view.View)>($r2);

        if $z0 != 0 goto label2;

        $r4 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r4 != r0 goto label2;

        $z0 = virtualinvoke $r2.<android.view.View: boolean hasFocus()>();

        if $z0 != 0 goto label8;

     label2:
        r5 = null;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $l1 = $r6.<android.support.v7.widget.RecyclerView$State: long mFocusedItemId>;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label3;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 == 0 goto label3;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $l1 = $r6.<android.support.v7.widget.RecyclerView$State: long mFocusedItemId>;

        r5 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)>($l1);

     label3:
        $r2 = null;

        if r5 == null goto label4;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r7 = r5.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.ChildHelper: boolean isHidden(android.view.View)>($r7);

        if $z0 != 0 goto label4;

        $r7 = r5.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = virtualinvoke $r7.<android.view.View: boolean hasFocusable()>();

        if $z0 != 0 goto label7;

     label4:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.ChildHelper: int getChildCount()>();

        if $i0 <= 0 goto label5;

        $r2 = specialinvoke r0.<android.support.v7.widget.RecyclerView: android.view.View findNextViewToFocus()>();

     label5:
        if $r2 == null goto label8;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i0 = $r6.<android.support.v7.widget.RecyclerView$State: int mFocusedSubChildId>;

        $l1 = (long) $i0;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label6;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i0 = $r6.<android.support.v7.widget.RecyclerView$State: int mFocusedSubChildId>;

        $r7 = virtualinvoke $r2.<android.view.View: android.view.View findViewById(int)>($i0);

        if $r7 == null goto label6;

        $z0 = virtualinvoke $r7.<android.view.View: boolean isFocusable()>();

        if $z0 == 0 goto label6;

        $r2 = $r7;

     label6:
        virtualinvoke $r2.<android.view.View: boolean requestFocus()>();

        return;

     label7:
        $r2 = r5.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        goto label5;

     label8:
        return;
    }
    private void releaseGlows()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean z0, $z1;
        android.support.v4.widget.EdgeEffectCompat $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        z0 = 0;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        z0 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        if $r1 == null goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        z0 = z0 | $z1;

     label2:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        if $r1 == null goto label3;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        z0 = z0 | $z1;

     label3:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        if $r1 == null goto label4;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        z0 = z0 | $z1;

     label4:
        if z0 == 0 goto label5;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

     label5:
        return;
    }
    private void resetFocusInfo()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$State $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: long mFocusedItemId> = -1L;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: int mFocusedItemPosition> = -1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r1.<android.support.v7.widget.RecyclerView$State: int mFocusedSubChildId> = -1;

        return;
    }
    private void resetTouch()
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.VelocityTracker $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r1.<android.view.VelocityTracker: void clear()>();

     label1:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void stopNestedScroll()>();

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void releaseGlows()>();

        return;
    }
    private void saveFocusInfo()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$State $r1;
        android.view.View r2;
        boolean $z0;
        android.support.v7.widget.RecyclerView$Adapter $r3;
        android.support.v7.widget.RecyclerView$ViewHolder r4;
        long $l0;
        int $i1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        r2 = null;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mPreserveFocusAfterLayout>;

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r3 == null goto label1;

        r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.view.View getFocusedChild()>();

     label1:
        if r2 != null goto label3;

        r4 = null;

     label2:
        if r4 != null goto label4;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void resetFocusInfo()>();

        return;

     label3:
        r4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)>(r2);

        goto label2;

     label4:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 == 0 goto label7;

        $l0 = virtualinvoke r4.<android.support.v7.widget.RecyclerView$ViewHolder: long getItemId()>();

     label5:
        $r1.<android.support.v7.widget.RecyclerView$State: long mFocusedItemId> = $l0;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 == 0 goto label8;

        $i1 = -1;

     label6:
        $r1.<android.support.v7.widget.RecyclerView$State: int mFocusedItemPosition> = $i1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        r2 = r4.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i1 = specialinvoke r0.<android.support.v7.widget.RecyclerView: int getDeepestFocusedViewWithId(android.view.View)>(r2);

        $r1.<android.support.v7.widget.RecyclerView$State: int mFocusedSubChildId> = $i1;

        return;

     label7:
        $l0 = -1L;

        goto label5;

     label8:
        $z0 = virtualinvoke r4.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 == 0 goto label9;

        $i1 = r4.<android.support.v7.widget.RecyclerView$ViewHolder: int mOldPosition>;

        goto label6;

     label9:
        $i1 = virtualinvoke r4.<android.support.v7.widget.RecyclerView$ViewHolder: int getAdapterPosition()>();

        goto label6;
    }
    private void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter, boolean, boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$Adapter $r1, r2;
        boolean $z0, $z1;
        android.support.v7.widget.RecyclerView$RecyclerViewDataObserver $r3;
        android.support.v7.widget.AdapterHelper $r4;
        android.support.v7.widget.RecyclerView$LayoutManager $r5;
        android.support.v7.widget.RecyclerView$Recycler $r6;
        android.support.v7.widget.RecyclerView$State $r7;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Adapter;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if r2 == null goto label1;

        r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$RecyclerViewDataObserver mObserver>;

        virtualinvoke r2.<android.support.v7.widget.RecyclerView$Adapter: void unregisterAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver)>($r3);

        r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke r2.<android.support.v7.widget.RecyclerView$Adapter: void onDetachedFromRecyclerView(android.support.v7.widget.RecyclerView)>(r0);

     label1:
        if $z0 == 0 goto label2;

        if $z1 == 0 goto label3;

     label2:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void removeAndRecycleViews()>();

     label3:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r4.<android.support.v7.widget.AdapterHelper: void reset()>();

        r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter> = $r1;

        if $r1 == null goto label4;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$RecyclerViewDataObserver mObserver>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Adapter: void registerAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver)>($r3);

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Adapter: void onAttachedToRecyclerView(android.support.v7.widget.RecyclerView)>(r0);

     label4:
        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r5 == null goto label5;

        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r5.<android.support.v7.widget.RecyclerView$LayoutManager: void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter)>(r2, $r1);

     label5:
        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r6.<android.support.v7.widget.RecyclerView$Recycler: void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean)>(r2, $r1, $z0);

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r7.<android.support.v7.widget.RecyclerView$State: boolean mStructureChanged> = 1;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void markKnownViewsInvalid()>();

        return;
    }
    private void stopScrollersInternal()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ViewFlinger $r1;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewFlinger mViewFlinger>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ViewFlinger: void stop()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void stopSmoothScroller()>();

     label1:
        return;
    }
    void absorbGlows(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, $i2;
        android.support.v4.widget.EdgeEffectCompat $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 >= 0 goto label4;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void ensureLeftGlow()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        $i2 = neg $i0;

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)>($i2);

     label1:
        if $i1 >= 0 goto label5;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void ensureTopGlow()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        $i2 = neg $i1;

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)>($i2);

     label2:
        if $i0 != 0 goto label3;

        if $i1 == 0 goto label6;

     label3:
        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

        return;

     label4:
        if $i0 <= 0 goto label1;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void ensureRightGlow()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)>($i0);

        goto label1;

     label5:
        if $i1 <= 0 goto label2;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void ensureBottomGlow()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)>($i1);

        goto label2;

     label6:
        return;
    }
    public void addFocusables(java.util.ArrayList, int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        java.util.ArrayList r1;
        int $i0, $i1;
        boolean $z0;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        r1 := @parameter0: java.util.ArrayList;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean onAddFocusables(android.support.v7.widget.RecyclerView,java.util.ArrayList,int,int)>(r0, r1, $i0, $i1);

        if $z0 != 0 goto label2;

     label1:
        specialinvoke r0.<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int,int)>(r1, $i0, $i1);

     label2:
        return;
    }
    public void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ItemDecoration $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ItemDecoration;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration,int)>($r1, -1);

        return;
    }
    public void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration, int)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ItemDecoration $r1;
        int $i0;
        boolean $z0;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        java.util.ArrayList $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ItemDecoration;

        $i0 := @parameter1: int;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot add item decoration during a scroll  or layout");

     label1:
        $r3 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setWillNotDraw(boolean)>(0);

     label2:
        if $i0 >= 0 goto label4;

        $r3 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label3:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void requestLayout()>();

        return;

     label4:
        $r3 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        virtualinvoke $r3.<java.util.ArrayList: void add(int,java.lang.Object)>($i0, $r1);

        goto label3;
    }
    public void addOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener $r1;
        java.util.List $r2;
        java.util.ArrayList $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener;

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r2 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView: java.util.List mOnChildAttachStateListeners> = $r3;

     label1:
        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    public void addOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$OnItemTouchListener $r1;
        java.util.ArrayList $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$OnItemTouchListener;

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }
    public void addOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$OnScrollListener $r1;
        java.util.List $r2;
        java.util.ArrayList $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$OnScrollListener;

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r2 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView: java.util.List mScrollListeners> = $r3;

     label1:
        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.List mScrollListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    void animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder, android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo, android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1;
        android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo $r2, $r3;
        boolean $z0;
        android.support.v7.widget.RecyclerView$ItemAnimator $r4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        $r3 := @parameter2: android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ItemAnimator: boolean animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>($r1, $r2, $r3);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void postAnimationRunner()>();

     label1:
        return;
    }
    void animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder, android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo, android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1;
        android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo $r2, $r3;
        boolean $z0;
        android.support.v7.widget.RecyclerView$ItemAnimator $r4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        $r3 := @parameter2: android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder)>($r1);

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)>(0);

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ItemAnimator: boolean animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>($r1, $r2, $r3);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void postAnimationRunner()>();

     label1:
        return;
    }
    void assertInLayoutOrScroll(java.lang.String)
    {
        android.support.v7.widget.RecyclerView r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 != 0 goto label2;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot call this method unless RecyclerView is computing a layout or scrolling");

        throw $r2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        return;
    }
    void assertNotInLayoutOrScroll(java.lang.String)
    {
        android.support.v7.widget.RecyclerView r0;
        java.lang.String $r1;
        java.lang.IllegalStateException $r2;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label2;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot call this method while RecyclerView is computing a layout or scrolling");

        throw $r2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        $i0 = r0.<android.support.v7.widget.RecyclerView: int mDispatchScrollCounter>;

        if $i0 <= 0 goto label3;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("");

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("RecyclerView", "Cannot call this method in a scroll callback. Scroll callbacks might be run during a measure & layout pass where you cannot change the RecyclerView data. Any method call that might change the structure of the RecyclerView or the adapter contents should be postponed to the next frame.", $r2);

     label3:
        return;
    }
    boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1;
        android.support.v7.widget.RecyclerView$ItemAnimator $r2;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r3 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()>();

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ItemAnimator: boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List)>($r1, $r3);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r1;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof android.support.v7.widget.RecyclerView$LayoutParams;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r1;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams)>($r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    void clearOldPositions()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.ChildHelper $r1;
        int $i0, i1;
        android.view.View $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;
        android.support.v7.widget.RecyclerView$Recycler $r4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r2);

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: void clearOldPosition()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Recycler: void clearOldPositions()>();

        return;
    }
    public void clearOnChildAttachStateChangeListeners()
    {
        android.support.v7.widget.RecyclerView r0;
        java.util.List $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

     label1:
        return;
    }
    public void clearOnScrollListeners()
    {
        android.support.v7.widget.RecyclerView r0;
        java.util.List $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: java.util.List mScrollListeners>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

     label1:
        return;
    }
    public int computeHorizontalScrollExtent()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        boolean $z0;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State)>($r2);

        return $i0;

     label2:
        return 0;
    }
    public int computeHorizontalScrollOffset()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        boolean $z0;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State)>($r2);

        return $i0;

     label2:
        return 0;
    }
    public int computeHorizontalScrollRange()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        boolean $z0;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State)>($r2);

        return $i0;

     label2:
        return 0;
    }
    public int computeVerticalScrollExtent()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        boolean $z0;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State)>($r2);

        return $i0;

     label2:
        return 0;
    }
    public int computeVerticalScrollOffset()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        boolean $z0;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State)>($r2);

        return $i0;

     label2:
        return 0;
    }
    public int computeVerticalScrollRange()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        boolean $z0;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State)>($r2);

        return $i0;

     label2:
        return 0;
    }
    void considerReleasingGlowsOnScroll(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1;
        boolean z0, $z1;
        android.support.v4.widget.EdgeEffectCompat $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        z0 = 0;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label1;

        if $i0 <= 0 goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        z0 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        if $r1 == null goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label2;

        if $i0 >= 0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        z0 = z0 | $z1;

     label2:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        if $r1 == null goto label3;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label3;

        if $i1 <= 0 goto label3;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        z0 = z0 | $z1;

     label3:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        if $r1 == null goto label4;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label4;

        if $i1 >= 0 goto label4;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        $z1 = virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        z0 = z0 | $z1;

     label4:
        if z0 == 0 goto label5;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

     label5:
        return;
    }
    void consumePendingUpdateOperations()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        android.support.v7.widget.AdapterHelper $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z0 == 0 goto label1;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 == 0 goto label2;

     label1:
        staticinvoke <android.support.v4.os.TraceCompat: void beginSection(java.lang.String)>("RV FullInvalidate");

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchLayout()>();

        staticinvoke <android.support.v4.os.TraceCompat: void endSection()>();

        return;

     label2:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.AdapterHelper: boolean hasPendingUpdates()>();

        if $z0 == 0 goto label6;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.AdapterHelper: boolean hasAnyUpdateTypes(int)>(4);

        if $z0 == 0 goto label5;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.AdapterHelper: boolean hasAnyUpdateTypes(int)>(11);

        if $z0 != 0 goto label5;

        staticinvoke <android.support.v4.os.TraceCompat: void beginSection(java.lang.String)>("RV PartialInvalidate");

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void eatRequestLayout()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r1.<android.support.v7.widget.AdapterHelper: void preProcess()>();

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutRequestEaten>;

        if $z0 != 0 goto label3;

        $z0 = specialinvoke r0.<android.support.v7.widget.RecyclerView: boolean hasUpdatedView()>();

        if $z0 == 0 goto label4;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchLayout()>();

     label3:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void resumeRequestLayout(boolean)>(1);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onExitLayoutOrScroll()>();

        staticinvoke <android.support.v4.os.TraceCompat: void endSection()>();

        return;

     label4:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r1.<android.support.v7.widget.AdapterHelper: void consumePostponedUpdates()>();

        goto label3;

     label5:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.AdapterHelper: boolean hasPendingUpdates()>();

        if $z0 == 0 goto label6;

        staticinvoke <android.support.v4.os.TraceCompat: void beginSection(java.lang.String)>("RV FullInvalidate");

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchLayout()>();

        staticinvoke <android.support.v4.os.TraceCompat: void endSection()>();

     label6:
        return;
    }
    void defaultOnMeasure(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingRight()>();

        $i2 = $i2 + $i3;

        $i3 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumWidth(android.view.View)>(r0);

        $i0 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)>($i0, $i2, $i3);

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingTop()>();

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingBottom()>();

        $i2 = $i2 + $i3;

        $i3 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>(r0);

        $i1 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)>($i1, $i2, $i3);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }
    void dispatchChildAttached(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;
        android.support.v7.widget.RecyclerView$Adapter $r3;
        java.util.List $r4;
        int $i0;
        java.lang.Object $r5;
        android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener $r6;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onChildAttachedToWindow(android.view.View)>($r1);

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r3 == null goto label1;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$Adapter: void onViewAttachedToWindow(android.support.v7.widget.RecyclerView$ViewHolder)>($r2);

     label1:
        $r4 = r0.<android.support.v7.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r4 == null goto label3;

        $r4 = r0.<android.support.v7.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 + -1;

     label2:
        if $i0 < 0 goto label3;

        $r4 = r0.<android.support.v7.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener) $r5;

        interfaceinvoke $r6.<android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewAttachedToWindow(android.view.View)>($r1);

        $i0 = $i0 + -1;

        goto label2;

     label3:
        return;
    }
    void dispatchChildDetached(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;
        android.support.v7.widget.RecyclerView$Adapter $r3;
        java.util.List $r4;
        int $i0;
        java.lang.Object $r5;
        android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener $r6;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onChildDetachedFromWindow(android.view.View)>($r1);

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r3 == null goto label1;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$Adapter: void onViewDetachedFromWindow(android.support.v7.widget.RecyclerView$ViewHolder)>($r2);

     label1:
        $r4 = r0.<android.support.v7.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r4 == null goto label3;

        $r4 = r0.<android.support.v7.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i0 = $i0 + -1;

     label2:
        if $i0 < 0 goto label3;

        $r4 = r0.<android.support.v7.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener) $r5;

        interfaceinvoke $r6.<android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewDetachedFromWindow(android.view.View)>($r1);

        $i0 = $i0 + -1;

        goto label2;

     label3:
        return;
    }
    void dispatchLayout()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$Adapter $r1;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        android.support.v7.widget.RecyclerView$State $r3;
        int $i0, $i1;
        android.support.v7.widget.AdapterHelper $r4;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "No adapter attached; skipping layout");

        return;

     label1:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "No layout manager attached; skipping layout");

        return;

     label2:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r3.<android.support.v7.widget.RecyclerView$State: boolean mIsMeasuring> = 0;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i0 = $r3.<android.support.v7.widget.RecyclerView$State: int mLayoutStep>;

        if $i0 != 1 goto label4;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchLayoutStep1()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void setExactMeasureSpecsFrom(android.support.v7.widget.RecyclerView)>(r0);

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchLayoutStep2()>();

     label3:
        specialinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchLayoutStep3()>();

        return;

     label4:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.AdapterHelper: boolean hasUpdates()>();

        if $z0 != 0 goto label5;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getWidth()>();

        if $i0 != $i1 goto label5;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getHeight()>();

        if $i0 == $i1 goto label6;

     label5:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void setExactMeasureSpecsFrom(android.support.v7.widget.RecyclerView)>(r0);

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchLayoutStep2()>();

        goto label3;

     label6:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void setExactMeasureSpecsFrom(android.support.v7.widget.RecyclerView)>(r0);

        goto label3;
    }
    public boolean dispatchNestedFling(float, float, boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        float $f0, $f1;
        boolean $z0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $z0 := @parameter2: boolean;

        $r1 = specialinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>($f0, $f1, $z0);

        return $z0;
    }
    public boolean dispatchNestedPreFling(float, float)
    {
        android.support.v7.widget.RecyclerView r0;
        float $f0, $f1;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = specialinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)>($f0, $f1);

        return $z0;
    }
    public boolean dispatchNestedPreScroll(int, int, int[], int[])
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1;
        int[] $r1, $r2;
        android.support.v4.view.NestedScrollingChildHelper $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: int[];

        $r2 := @parameter3: int[];

        $r3 = specialinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r3.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[])>($i0, $i1, $r1, $r2);

        return $z0;
    }
    public boolean dispatchNestedScroll(int, int, int, int, int[])
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;
        android.support.v4.view.NestedScrollingChildHelper $r2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: int[];

        $r2 = specialinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r2.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])>($i0, $i1, $i2, $i3, $r1);

        return $z0;
    }
    void dispatchOnScrollStateChanged(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        android.support.v7.widget.RecyclerView$OnScrollListener $r2;
        java.util.List $r3;
        java.lang.Object $r4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void onScrollStateChanged(int)>($i0);

     label1:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onScrollStateChanged(int)>($i0);

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener>;

        if $r2 == null goto label2;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$OnScrollListener: void onScrollStateChanged(android.support.v7.widget.RecyclerView,int)>(r0, $i0);

     label2:
        $r3 = r0.<android.support.v7.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r3 == null goto label4;

        $r3 = r0.<android.support.v7.widget.RecyclerView: java.util.List mScrollListeners>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = $i1 + -1;

     label3:
        if $i1 < 0 goto label4;

        $r3 = r0.<android.support.v7.widget.RecyclerView: java.util.List mScrollListeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r2 = (android.support.v7.widget.RecyclerView$OnScrollListener) $r4;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$OnScrollListener: void onScrollStateChanged(android.support.v7.widget.RecyclerView,int)>(r0, $i0);

        $i1 = $i1 + -1;

        goto label3;

     label4:
        return;
    }
    void dispatchOnScrolled(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, $i2, $i3;
        android.support.v7.widget.RecyclerView$OnScrollListener $r1;
        java.util.List $r2;
        java.lang.Object $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mDispatchScrollCounter>;

        $i2 = $i2 + 1;

        r0.<android.support.v7.widget.RecyclerView: int mDispatchScrollCounter> = $i2;

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getScrollX()>();

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getScrollY()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onScrollChanged(int,int,int,int)>($i2, $i3, $i2, $i3);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onScrolled(int,int)>($i0, $i1);

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$OnScrollListener: void onScrolled(android.support.v7.widget.RecyclerView,int,int)>(r0, $i0, $i1);

     label1:
        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r2 == null goto label3;

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.List mScrollListeners>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i2 + -1;

     label2:
        if $i2 < 0 goto label3;

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.List mScrollListeners>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r1 = (android.support.v7.widget.RecyclerView$OnScrollListener) $r3;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$OnScrollListener: void onScrolled(android.support.v7.widget.RecyclerView,int,int)>(r0, $i0, $i1);

        $i2 = $i2 + -1;

        goto label2;

     label3:
        $i0 = r0.<android.support.v7.widget.RecyclerView: int mDispatchScrollCounter>;

        $i0 = $i0 + -1;

        r0.<android.support.v7.widget.RecyclerView: int mDispatchScrollCounter> = $i0;

        return;
    }
    void dispatchPendingImportantForAccessibilityChanges()
    {
        android.support.v7.widget.RecyclerView r0;
        int i0, i1;
        java.util.List $r1;
        java.lang.Object $r2;
        android.support.v7.widget.RecyclerView$ViewHolder r3;
        android.view.View $r4;
        android.view.ViewParent $r5;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i1 = i0 + -1;

     label1:
        if i1 < 0 goto label4;

        $r1 = r0.<android.support.v7.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.support.v7.widget.RecyclerView$ViewHolder) $r2;

        $r4 = r3.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewParent getParent()>();

        if $r5 != r0 goto label2;

        $z0 = virtualinvoke r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label3;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        i0 = r3.<android.support.v7.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState>;

        if i0 == -1 goto label2;

        $r4 = r3.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($r4, i0);

        r3.<android.support.v7.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState> = -1;

        goto label2;

     label4:
        $r1 = r0.<android.support.v7.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }
    protected void dispatchRestoreInstanceState(android.util.SparseArray)
    {
        android.support.v7.widget.RecyclerView r0;
        android.util.SparseArray r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        r1 := @parameter0: android.util.SparseArray;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchThawSelfOnly(android.util.SparseArray)>(r1);

        return;
    }
    protected void dispatchSaveInstanceState(android.util.SparseArray)
    {
        android.support.v7.widget.RecyclerView r0;
        android.util.SparseArray r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        r1 := @parameter0: android.util.SparseArray;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchFreezeSelfOnly(android.util.SparseArray)>(r1);

        return;
    }
    public void draw(android.graphics.Canvas)
    {
        android.support.v7.widget.RecyclerView r0;
        android.graphics.Canvas $r1;
        byte $b0, $b4;
        java.util.ArrayList $r2;
        int $i1, i2, $i3, $i5;
        java.lang.Object $r3;
        android.support.v7.widget.RecyclerView$ItemDecoration $r4;
        android.support.v7.widget.RecyclerView$State $r5;
        android.support.v4.widget.EdgeEffectCompat $r6;
        boolean $z0;
        float $f0, $f1;
        android.support.v7.widget.RecyclerView$ItemAnimator $r7;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.graphics.Canvas;

        $b0 = 1;

        specialinvoke r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>($r1);

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label01:
        if i2 >= $i1 goto label02;

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (android.support.v7.widget.RecyclerView$ItemDecoration) $r3;

        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)>($r1, r0, $r5);

        i2 = i2 + 1;

        goto label01;

     label02:
        $i1 = 0;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        if $r6 == null goto label05;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        $z0 = virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z0 != 0 goto label05;

        i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label16;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingBottom()>();

     label03:
        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(270.0F);

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getHeight()>();

        $i3 = neg $i3;

        $i1 = $i3 + $i1;

        $f0 = (float) $i1;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, 0.0F);

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        if $r6 == null goto label17;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        $z0 = virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);

        if $z0 == 0 goto label17;

        $i1 = 1;

     label04:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>(i2);

     label05:
        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        if $r6 == null goto label08;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        $z0 = virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z0 != 0 goto label08;

        i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label06;

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingLeft()>();

        $f0 = (float) $i3;

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingTop()>();

        $f1 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

     label06:
        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        if $r6 == null goto label18;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        $z0 = virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);

        if $z0 == 0 goto label18;

        $b4 = 1;

     label07:
        $i1 = $i1 | $b4;

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>(i2);

     label08:
        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        if $r6 == null goto label11;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        $z0 = virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z0 != 0 goto label11;

        i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getWidth()>();

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label19;

        $i5 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingTop()>();

     label09:
        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(90.0F);

        $i5 = neg $i5;

        $f0 = (float) $i5;

        $i3 = neg $i3;

        $f1 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        if $r6 == null goto label20;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        $z0 = virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);

        if $z0 == 0 goto label20;

        $b4 = 1;

     label10:
        $i1 = $i1 | $b4;

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>(i2);

     label11:
        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        if $r6 == null goto label14;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        $z0 = virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z0 != 0 goto label14;

        i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(180.0F);

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label21;

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getWidth()>();

        $i3 = neg $i3;

        $i5 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingRight()>();

        $i3 = $i3 + $i5;

        $f0 = (float) $i3;

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getHeight()>();

        $i3 = neg $i3;

        $i5 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingBottom()>();

        $i3 = $i3 + $i5;

        $f1 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

     label12:
        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        if $r6 == null goto label22;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        $z0 = virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);

        if $z0 == 0 goto label22;

     label13:
        $i1 = $i1 | $b0;

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>(i2);

     label14:
        if $i1 != 0 goto label15;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r7 == null goto label15;

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i2 <= 0 goto label15;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z0 = virtualinvoke $r7.<android.support.v7.widget.RecyclerView$ItemAnimator: boolean isRunning()>();

        if $z0 == 0 goto label15;

        $i1 = 1;

     label15:
        if $i1 == 0 goto label23;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

        return;

     label16:
        $i1 = 0;

        goto label03;

     label17:
        $i1 = 0;

        goto label04;

     label18:
        $b4 = 0;

        goto label07;

     label19:
        $i5 = 0;

        goto label09;

     label20:
        $b4 = 0;

        goto label10;

     label21:
        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getWidth()>();

        $i3 = neg $i3;

        $f0 = (float) $i3;

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getHeight()>();

        $i3 = neg $i3;

        $f1 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        goto label12;

     label22:
        $b0 = 0;

        goto label13;

     label23:
        return;
    }
    public boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        android.support.v7.widget.RecyclerView r0;
        android.graphics.Canvas $r1;
        android.view.View $r2;
        long $l0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.view.View;

        $l0 := @parameter2: long;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>($r1, $r2, $l0);

        return $z0;
    }
    void eatRequestLayout()
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 = r0.<android.support.v7.widget.RecyclerView: int mEatRequestLayout>;

        $i0 = $i0 + 1;

        r0.<android.support.v7.widget.RecyclerView: int mEatRequestLayout> = $i0;

        $i0 = r0.<android.support.v7.widget.RecyclerView: int mEatRequestLayout>;

        if $i0 != 1 goto label1;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 != 0 goto label1;

        r0.<android.support.v7.widget.RecyclerView: boolean mLayoutRequestEaten> = 0;

     label1:
        return;
    }
    void ensureBottomGlow()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v4.widget.EdgeEffectCompat $r1;
        android.content.Context $r2;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        if $r1 == null goto label1;

        return;

     label1:
        $r1 = new android.support.v4.widget.EdgeEffectCompat;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.content.Context getContext()>();

        specialinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r2);

        r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow> = $r1;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredHeight()>();

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingTop()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingBottom()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i0, $i1);

        return;

     label2:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow>;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredHeight()>();

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i0, $i1);

        return;
    }
    void ensureLeftGlow()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v4.widget.EdgeEffectCompat $r1;
        android.content.Context $r2;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        if $r1 == null goto label1;

        return;

     label1:
        $r1 = new android.support.v4.widget.EdgeEffectCompat;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.content.Context getContext()>();

        specialinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r2);

        r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow> = $r1;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredHeight()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingTop()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingBottom()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredWidth()>();

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingLeft()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingRight()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i0, $i1);

        return;

     label2:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow>;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredHeight()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredWidth()>();

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i0, $i1);

        return;
    }
    void ensureRightGlow()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v4.widget.EdgeEffectCompat $r1;
        android.content.Context $r2;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        if $r1 == null goto label1;

        return;

     label1:
        $r1 = new android.support.v4.widget.EdgeEffectCompat;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.content.Context getContext()>();

        specialinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r2);

        r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow> = $r1;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredHeight()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingTop()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingBottom()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredWidth()>();

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingLeft()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingRight()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i0, $i1);

        return;

     label2:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow>;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredHeight()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredWidth()>();

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i0, $i1);

        return;
    }
    void ensureTopGlow()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v4.widget.EdgeEffectCompat $r1;
        android.content.Context $r2;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        if $r1 == null goto label1;

        return;

     label1:
        $r1 = new android.support.v4.widget.EdgeEffectCompat;

        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.content.Context getContext()>();

        specialinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r2);

        r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow> = $r1;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingLeft()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredHeight()>();

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingTop()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getPaddingBottom()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i0, $i1);

        return;

     label2:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow>;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredHeight()>();

        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i0, $i1);

        return;
    }
    public android.view.View findChildViewUnder(float, float)
    {
        android.support.v7.widget.RecyclerView r0;
        float $f0, $f1, $f2, $f3, $f4;
        android.support.v7.widget.ChildHelper $r1;
        int $i0, $i1;
        android.view.View $r2;
        byte $b2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getChildCount()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: android.view.View getChildAt(int)>($i0);

        $f2 = staticinvoke <android.support.v4.view.ViewCompat: float getTranslationX(android.view.View)>($r2);

        $f3 = staticinvoke <android.support.v4.view.ViewCompat: float getTranslationY(android.view.View)>($r2);

        $i1 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $f4 = (float) $i1;

        $f4 = $f4 + $f2;

        $b2 = $f0 cmpl $f4;

        if $b2 < 0 goto label2;

        $i1 = virtualinvoke $r2.<android.view.View: int getRight()>();

        $f4 = (float) $i1;

        $f2 = $f4 + $f2;

        $b2 = $f0 cmpg $f2;

        if $b2 > 0 goto label2;

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $f2 = (float) $i1;

        $f2 = $f2 + $f3;

        $b2 = $f1 cmpl $f2;

        if $b2 < 0 goto label2;

        $i1 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $f2 = (float) $i1;

        $f3 = $f2 + $f3;

        $b2 = $f1 cmpg $f3;

        if $b2 > 0 goto label2;

        return $r2;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return null;
    }
    public android.view.View findContainingItemView(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        android.view.View r1;
        android.view.ViewParent $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

     label1:
        if $r2 == null goto label2;

        if $r2 == r0 goto label2;

        $z0 = $r2 instanceof android.view.View;

        if $z0 == 0 goto label2;

        r1 = (android.view.View) $r2;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        goto label1;

     label2:
        if $r2 != r0 goto label3;

        return r1;

     label3:
        return null;
    }
    public android.support.v7.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>($r1);

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>($r1);

        return $r2;
    }
    public android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, i2, $i3;
        android.view.View $r1;
        boolean $z0;
        android.support.v7.widget.ChildHelper $r2;
        android.support.v7.widget.RecyclerView$ViewHolder r3, $r4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i1 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        r3 = null;

        i2 = 0;

     label2:
        if i2 >= $i1 goto label4;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r1 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i2);

        $r4 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $r4 == null goto label3;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 != 0 goto label3;

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder)>($r4);

        if $i3 != $i0 goto label3;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r1 = $r4.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: boolean isHidden(android.view.View)>($r1);

        if $z0 == 0 goto label5;

        r3 = $r4;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return r3;

     label5:
        return $r4;
    }
    public android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
    {
        android.support.v7.widget.RecyclerView r0;
        long $l0, $l3;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$Adapter $r2;
        boolean $z0;
        android.support.v7.widget.ChildHelper $r3;
        int $i1, i2;
        android.support.v7.widget.RecyclerView$ViewHolder r4, $r5;
        byte $b4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $l0 := @parameter0: long;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i1 = virtualinvoke $r3.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        r4 = null;

        i2 = 0;

     label3:
        if i2 >= $i1 goto label5;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r1 = virtualinvoke $r3.<android.support.v7.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i2);

        $r5 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $r5 == null goto label4;

        $z0 = virtualinvoke $r5.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 != 0 goto label4;

        $l3 = virtualinvoke $r5.<android.support.v7.widget.RecyclerView$ViewHolder: long getItemId()>();

        $b4 = $l3 cmp $l0;

        if $b4 != 0 goto label4;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r1 = $r5.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.ChildHelper: boolean isHidden(android.view.View)>($r1);

        if $z0 == 0 goto label6;

        r4 = $r5;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return r4;

     label6:
        return $r5;
    }
    public android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)>($i0, 0);

        return $r1;
    }
    public android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)>($i0, 0);

        return $r1;
    }
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int, boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, i2, $i3;
        boolean $z0, $z1;
        android.view.View $r1;
        android.support.v7.widget.ChildHelper $r2;
        android.support.v7.widget.RecyclerView$ViewHolder r3, $r4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i1 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        r3 = null;

        i2 = 0;

     label1:
        if i2 >= $i1 goto label5;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r1 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i2);

        $r4 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $r4 == null goto label2;

        $z1 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z1 != 0 goto label2;

        if $z0 == 0 goto label3;

        $i3 = $r4.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i3 == $i0 goto label4;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i3 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if $i3 != $i0 goto label2;

     label4:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r1 = $r4.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z1 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: boolean isHidden(android.view.View)>($r1);

        if $z1 == 0 goto label6;

        r3 = $r4;

        goto label2;

     label5:
        return r3;

     label6:
        return $r4;
    }
    public boolean fling(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, $i2, $i3;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        boolean $z0, $z1, $z2;
        float $f0, $f1;
        android.support.v7.widget.RecyclerView$OnFlingListener $r2;
        android.support.v7.widget.RecyclerView$ViewFlinger $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot fling without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return 0;

     label01:
        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 != 0 goto label11;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z1 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label02;

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i3 = r0.<android.support.v7.widget.RecyclerView: int mMinFlingVelocity>;

        if $i2 >= $i3 goto label03;

     label02:
        $i0 = 0;

     label03:
        if $z1 == 0 goto label04;

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i3 = r0.<android.support.v7.widget.RecyclerView: int mMinFlingVelocity>;

        if $i2 >= $i3 goto label05;

     label04:
        $i1 = 0;

     label05:
        if $i0 != 0 goto label06;

        if $i1 == 0 goto label11;

     label06:
        $f0 = (float) $i0;

        $f1 = (float) $i1;

        $z2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)>($f0, $f1);

        if $z2 != 0 goto label11;

        if $z0 != 0 goto label07;

        if $z1 == 0 goto label09;

     label07:
        $z0 = 1;

     label08:
        $f0 = (float) $i0;

        $f1 = (float) $i1;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>($f0, $f1, $z0);

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnFlingListener mOnFlingListener>;

        if $r2 == null goto label10;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnFlingListener mOnFlingListener>;

        $z1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$OnFlingListener: boolean onFling(int,int)>($i0, $i1);

        if $z1 == 0 goto label10;

        return 1;

     label09:
        $z0 = 0;

        goto label08;

     label10:
        if $z0 == 0 goto label11;

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mMaxFlingVelocity>;

        $i2 = neg $i2;

        $i3 = r0.<android.support.v7.widget.RecyclerView: int mMaxFlingVelocity>;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i3);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i0);

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mMaxFlingVelocity>;

        $i2 = neg $i2;

        $i3 = r0.<android.support.v7.widget.RecyclerView: int mMaxFlingVelocity>;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i3);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i1);

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewFlinger mViewFlinger>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewFlinger: void fling(int,int)>($i0, $i1);

        return 1;

     label11:
        return 0;
    }
    public android.view.View focusSearch(android.view.View, int)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1, $r3, $r8;
        int $i0, $i2;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        android.support.v7.widget.RecyclerView$Adapter $r4;
        boolean $z0, $z1;
        android.view.FocusFinder $r5;
        short s1;
        byte b3, $b4;
        android.support.v7.widget.RecyclerView$Recycler $r6;
        android.support.v7.widget.RecyclerView$State $r7;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View onInterceptFocusSearch(android.view.View,int)>($r1, $i0);

        if $r3 == null goto label01;

        return $r3;

     label01:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r4 == null goto label12;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label12;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 != 0 goto label12;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 != 0 goto label12;

        $z0 = 1;

     label02:
        $r5 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        if $z0 == 0 goto label22;

        if $i0 == 2 goto label03;

        if $i0 != 1 goto label22;

     label03:
        $z0 = 0;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z1 == 0 goto label06;

        if $i0 != 2 goto label13;

        s1 = 130;

     label04:
        $r3 = virtualinvoke $r5.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, $r1, s1);

        if $r3 != null goto label14;

        $z0 = 1;

     label05:
        $z1 = <android.support.v7.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION>;

        if $z1 == 0 goto label06;

        $i0 = s1;

     label06:
        if $z0 != 0 goto label11;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z1 == 0 goto label11;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $i2 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getLayoutDirection()>();

        if $i2 != 1 goto label15;

        b3 = 1;

     label07:
        if $i0 != 2 goto label16;

        $b4 = 1;

     label08:
        $i2 = $b4 ^ b3;

        if $i2 == 0 goto label17;

        b3 = 66;

     label09:
        $r3 = virtualinvoke $r5.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, $r1, b3);

        if $r3 != null goto label18;

        $z0 = 1;

     label10:
        $z1 = <android.support.v7.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION>;

        if $z1 == 0 goto label11;

        $i0 = b3;

     label11:
        if $z0 == 0 goto label20;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void consumePendingUpdateOperations()>();

        $r3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>($r1);

        if $r3 != null goto label19;

        return null;

     label12:
        $z0 = 0;

        goto label02;

     label13:
        s1 = 33;

        goto label04;

     label14:
        $z0 = 0;

        goto label05;

     label15:
        b3 = 0;

        goto label07;

     label16:
        $b4 = 0;

        goto label08;

     label17:
        b3 = 17;

        goto label09;

     label18:
        $z0 = 0;

        goto label10;

     label19:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void eatRequestLayout()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $i0, $r6, $r7);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

     label20:
        $r3 = virtualinvoke $r5.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, $r1, $i0);

     label21:
        $z0 = specialinvoke r0.<android.support.v7.widget.RecyclerView: boolean isPreferredNextFocus(android.view.View,android.view.View,int)>($r1, $r3, $i0);

        if $z0 == 0 goto label24;

        return $r3;

     label22:
        $r8 = virtualinvoke $r5.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, $r1, $i0);

        $r3 = $r8;

        if $r8 != null goto label21;

        if $z0 == 0 goto label21;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void consumePendingUpdateOperations()>();

        $r3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)>($r1);

        if $r3 != null goto label23;

        return null;

     label23:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void eatRequestLayout()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r3 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $i0, $r6, $r7);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

        goto label21;

     label24:
        $r1 = specialinvoke r0.<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>($r1, $i0);

        return $r1;
    }
    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$LayoutParams $r1;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RecyclerView has no LayoutManager");

        throw $r3;

     label1:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }
    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.v7.widget.RecyclerView r0;
        android.util.AttributeSet $r1;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        java.lang.IllegalStateException $r3;
        android.content.Context $r4;
        android.support.v7.widget.RecyclerView$LayoutParams $r5;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RecyclerView has no LayoutManager");

        throw $r3;

     label1:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.content.Context getContext()>();

        $r5 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)>($r4, $r1);

        return $r5;
    }
    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.support.v7.widget.RecyclerView$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutManager $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r3 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RecyclerView has no LayoutManager");

        throw $r4;

     label1:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }
    public android.support.v7.widget.RecyclerView$Adapter getAdapter()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$Adapter r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        return r1;
    }
    int getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1;
        int $i0;
        boolean $z0;
        android.support.v7.widget.AdapterHelper $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ViewHolder: boolean hasAnyOfTheFlags(int)>(524);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isBound()>();

        if $z0 != 0 goto label2;

     label1:
        return -1;

     label2:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        $i0 = $r1.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.AdapterHelper: int applyPendingUpdatesToPosition(int)>($i0);

        return $i0;
    }
    public int getBaseline()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: int getBaseline()>();

        return $i0;

     label1:
        $i0 = specialinvoke r0.<android.view.ViewGroup: int getBaseline()>();

        return $i0;
    }
    long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1;
        android.support.v7.widget.RecyclerView$Adapter $r2;
        boolean $z0;
        long $l0;
        int $i1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 == 0 goto label1;

        $l0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ViewHolder: long getItemId()>();

        return $l0;

     label1:
        $i1 = $r1.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        $l0 = (long) $i1;

        return $l0;
    }
    public int getChildAdapterPosition(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: int getAdapterPosition()>();

        return $i0;

     label1:
        return -1;
    }
    protected int getChildDrawingOrder(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1;
        android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback>;

        if $r1 != null goto label1;

        $i0 = specialinvoke r0.<android.view.ViewGroup: int getChildDrawingOrder(int,int)>($i0, $i1);

        return $i0;

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback>;

        $i0 = interfaceinvoke $r1.<android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback: int onGetChildDrawingOrder(int,int)>($i0, $i1);

        return $i0;
    }
    public long getChildItemId(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$Adapter $r2;
        boolean $z0;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        long $l0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r2 == null goto label2;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z0 != 0 goto label1;

        return -1L;

     label1:
        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $r3 == null goto label2;

        $l0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: long getItemId()>();

        return $l0;

     label2:
        return -1L;
    }
    public int getChildLayoutPosition(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        return $i0;

     label1:
        return -1;
    }
    public int getChildPosition(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getChildAdapterPosition(android.view.View)>($r1);

        return $i0;
    }
    public android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;
        android.view.ViewParent $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.support.v7.widget.RecyclerView$ViewHolder $r6;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r2 == null goto label1;

        if $r2 == r0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a direct child of ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r6 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        return $r6;
    }
    public boolean getClipToPadding()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        z0 = r0.<android.support.v7.widget.RecyclerView: boolean mClipToPadding>;

        return z0;
    }
    public android.support.v7.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerViewAccessibilityDelegate r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate>;

        return r1;
    }
    public void getDecoratedBoundsWithMargins(android.view.View, android.graphics.Rect)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;
        android.graphics.Rect $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        staticinvoke <android.support.v7.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)>($r1, $r2);

        return;
    }
    public android.support.v7.widget.RecyclerView$ItemAnimator getItemAnimator()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ItemAnimator r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        return r1;
    }
    android.graphics.Rect getItemDecorInsetsForChild(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.RecyclerView$LayoutParams r4;
        boolean $z0;
        android.graphics.Rect r5, $r7;
        java.util.ArrayList $r6;
        int $i0, i1, $i2, $i3;
        java.lang.Object $r8;
        android.support.v7.widget.RecyclerView$ItemDecoration $r9;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.v7.widget.RecyclerView$LayoutParams) $r3;

        $z0 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: boolean mInsetsDirty>;

        if $z0 != 0 goto label1;

        r5 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        return r5;

     label1:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke r4.<android.support.v7.widget.RecyclerView$LayoutParams: boolean isItemChanged()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r4.<android.support.v7.widget.RecyclerView$LayoutParams: boolean isViewInvalid()>();

        if $z0 == 0 goto label3;

     label2:
        r5 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        return r5;

     label3:
        r5 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        virtualinvoke r5.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        $r6 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i1 = 0;

     label4:
        if i1 >= $i0 goto label5;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke $r7.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        $r6 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r8 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (android.support.v7.widget.RecyclerView$ItemDecoration) $r8;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r9.<android.support.v7.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)>($r7, $r1, r0, $r2);

        $i2 = r5.<android.graphics.Rect: int left>;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i3 = $r7.<android.graphics.Rect: int left>;

        $i2 = $i2 + $i3;

        r5.<android.graphics.Rect: int left> = $i2;

        $i2 = r5.<android.graphics.Rect: int top>;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i3 = $r7.<android.graphics.Rect: int top>;

        $i2 = $i2 + $i3;

        r5.<android.graphics.Rect: int top> = $i2;

        $i2 = r5.<android.graphics.Rect: int right>;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i3 = $r7.<android.graphics.Rect: int right>;

        $i2 = $i2 + $i3;

        r5.<android.graphics.Rect: int right> = $i2;

        $i2 = r5.<android.graphics.Rect: int bottom>;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i3 = $r7.<android.graphics.Rect: int bottom>;

        $i2 = $i2 + $i3;

        r5.<android.graphics.Rect: int bottom> = $i2;

        i1 = i1 + 1;

        goto label4;

     label5:
        r4.<android.support.v7.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 0;

        return r5;
    }
    public android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$LayoutManager r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        return r1;
    }
    public int getMaxFlingVelocity()
    {
        android.support.v7.widget.RecyclerView r0;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        i0 = r0.<android.support.v7.widget.RecyclerView: int mMaxFlingVelocity>;

        return i0;
    }
    public int getMinFlingVelocity()
    {
        android.support.v7.widget.RecyclerView r0;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        i0 = r0.<android.support.v7.widget.RecyclerView: int mMinFlingVelocity>;

        return i0;
    }
    long getNanoTime()
    {
        android.support.v7.widget.RecyclerView r0;
        long $l0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 = <android.support.v7.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z0 == 0 goto label1;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        return $l0;

     label1:
        return 0L;
    }
    public android.support.v7.widget.RecyclerView$OnFlingListener getOnFlingListener()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$OnFlingListener r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnFlingListener mOnFlingListener>;

        return r1;
    }
    public boolean getPreserveFocusAfterLayout()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        z0 = r0.<android.support.v7.widget.RecyclerView: boolean mPreserveFocusAfterLayout>;

        return z0;
    }
    public android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$RecycledViewPool $r1;
        android.support.v7.widget.RecyclerView$Recycler $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$Recycler: android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool()>();

        return $r1;
    }
    public int getScrollState()
    {
        android.support.v7.widget.RecyclerView r0;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        i0 = r0.<android.support.v7.widget.RecyclerView: int mScrollState>;

        return i0;
    }
    public boolean hasFixedSize()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        z0 = r0.<android.support.v7.widget.RecyclerView: boolean mHasFixedSize>;

        return z0;
    }
    public boolean hasNestedScrollingParent()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = specialinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent()>();

        return $z0;
    }
    public boolean hasPendingAdapterUpdates()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        android.support.v7.widget.AdapterHelper $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z0 == 0 goto label1;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 != 0 goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.AdapterHelper: boolean hasPendingUpdates()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    void initAdapterManager()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.AdapterHelper $r1;
        android.support.v7.widget.RecyclerView$6 $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = new android.support.v7.widget.AdapterHelper;

        $r2 = new android.support.v7.widget.RecyclerView$6;

        specialinvoke $r2.<android.support.v7.widget.RecyclerView$6: void <init>(android.support.v7.widget.RecyclerView)>(r0);

        specialinvoke $r1.<android.support.v7.widget.AdapterHelper: void <init>(android.support.v7.widget.AdapterHelper$Callback)>($r2);

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper> = $r1;

        return;
    }
    void invalidateGlows()
    {
        android.support.v7.widget.RecyclerView r0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mBottomGlow> = null;

        r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mTopGlow> = null;

        r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mRightGlow> = null;

        r0.<android.support.v7.widget.RecyclerView: android.support.v4.widget.EdgeEffectCompat mLeftGlow> = null;

        return;
    }
    public void invalidateItemDecorations()
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;
        java.util.ArrayList $r1;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label2;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot invalidate item decorations during a scroll or layout");

     label2:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void requestLayout()>();

        return;
    }
    boolean isAccessibilityEnabled()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        android.view.accessibility.AccessibilityManager $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isAnimating()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        android.support.v7.widget.RecyclerView$ItemAnimator $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ItemAnimator: boolean isRunning()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isAttachedToWindow()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        z0 = r0.<android.support.v7.widget.RecyclerView: boolean mIsAttached>;

        return z0;
    }
    public boolean isComputingLayout()
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 = r0.<android.support.v7.widget.RecyclerView: int mLayoutOrScrollCounter>;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isLayoutFrozen()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        return z0;
    }
    public boolean isNestedScrollingEnabled()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = specialinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();

        return $z0;
    }
    void jumpToPositionForSmoothScroller(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void scrollToPosition(int)>($i0);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean awakenScrollBars()>();

        return;
    }
    void markItemDecorInsetsDirty()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.ChildHelper $r1;
        int $i0, i1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.RecyclerView$LayoutParams $r4;
        android.support.v7.widget.RecyclerView$Recycler $r5;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.support.v7.widget.RecyclerView$LayoutParams) $r3;

        $r4.<android.support.v7.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r5.<android.support.v7.widget.RecyclerView$Recycler: void markItemDecorInsetsDirty()>();

        return;
    }
    void markKnownViewsInvalid()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.ChildHelper $r1;
        int $i0, i1;
        android.view.View $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;
        android.support.v7.widget.RecyclerView$Recycler $r4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r2);

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: void addFlags(int)>(6);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Recycler: void markKnownViewsInvalid()>();

        return;
    }
    public void offsetChildrenHorizontal(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, i2;
        android.support.v7.widget.ChildHelper $r1;
        android.view.View $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i1 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: android.view.View getChildAt(int)>(i2);

        virtualinvoke $r2.<android.view.View: void offsetLeftAndRight(int)>($i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
    public void offsetChildrenVertical(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, i2;
        android.support.v7.widget.ChildHelper $r1;
        android.view.View $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i1 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: android.view.View getChildAt(int)>(i2);

        virtualinvoke $r2.<android.view.View: void offsetTopAndBottom(int)>($i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
    void offsetPositionRecordsForInsert(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, $i2, i3, $i4;
        android.support.v7.widget.ChildHelper $r1;
        android.view.View $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;
        android.support.v7.widget.RecyclerView$State $r4;
        android.support.v7.widget.RecyclerView$Recycler $r5;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        i3 = 0;

     label1:
        if i3 >= $i2 goto label3;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i3);

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r2);

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        $i4 = $r3.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i4 < $i0 goto label2;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>($i1, 0);

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r4.<android.support.v7.widget.RecyclerView$State: boolean mStructureChanged> = 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r5.<android.support.v7.widget.RecyclerView$Recycler: void offsetPositionRecordsForInsert(int,int)>($i0, $i1);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void requestLayout()>();

        return;
    }
    void offsetPositionRecordsForMove(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, $i2, i3, i4, i6, $i7;
        android.support.v7.widget.ChildHelper $r1;
        byte b5;
        android.view.View $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        android.support.v7.widget.RecyclerView$State $r4;
        android.support.v7.widget.RecyclerView$Recycler $r5;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        if $i0 >= $i1 goto label4;

        i3 = $i0;

        i4 = $i1;

        b5 = -1;

     label1:
        i6 = 0;

     label2:
        if i6 >= $i2 goto label8;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i6);

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r2);

        if $r3 == null goto label3;

        $i7 = $r3.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i7 < i3 goto label3;

        $i7 = $r3.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i7 <= i4 goto label5;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        i3 = $i1;

        i4 = $i0;

        b5 = 1;

        goto label1;

     label5:
        $i7 = $r3.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i7 != $i0 goto label7;

        $i7 = $i1 - $i0;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>($i7, 0);

     label6:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r4.<android.support.v7.widget.RecyclerView$State: boolean mStructureChanged> = 1;

        goto label3;

     label7:
        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>(b5, 0);

        goto label6;

     label8:
        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r5.<android.support.v7.widget.RecyclerView$Recycler: void offsetPositionRecordsForMove(int,int)>($i0, $i1);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void requestLayout()>();

        return;
    }
    void offsetPositionRecordsForRemove(int, int, boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, i2, $i3, $i4, i5, $i6;
        boolean $z0, $z1;
        android.support.v7.widget.ChildHelper $r1;
        android.view.View $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        android.support.v7.widget.RecyclerView$State $r4;
        android.support.v7.widget.RecyclerView$Recycler $r5;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        i2 = $i0 + $i1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i4 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        i5 = 0;

     label1:
        if i5 >= $i4 goto label4;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i5);

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r2);

        if $r3 == null goto label2;

        $z1 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z1 != 0 goto label2;

        $i3 = $r3.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i3 < i2 goto label3;

        $i3 = neg $i1;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>($i3, $z0);

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r4.<android.support.v7.widget.RecyclerView$State: boolean mStructureChanged> = 1;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $i3 = $r3.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i3 < $i0 goto label2;

        $i6 = $i0 + -1;

        $i3 = neg $i1;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: void flagRemovedAndOffsetPosition(int,int,boolean)>($i6, $i3, $z0);

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r4.<android.support.v7.widget.RecyclerView$State: boolean mStructureChanged> = 1;

        goto label2;

     label4:
        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r5.<android.support.v7.widget.RecyclerView$Recycler: void offsetPositionRecordsForRemove(int,int,boolean)>($i0, $i1, $z0);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void requestLayout()>();

        return;
    }
    protected void onAttachedToWindow()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0, $z1;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        java.lang.ThreadLocal $r2;
        java.lang.Object $r3;
        android.support.v7.widget.GapWorker $r4;
        android.view.Display $r5;
        float f0, $f1;
        byte $b0;
        long $l1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 = 1;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        r0.<android.support.v7.widget.RecyclerView: int mLayoutOrScrollCounter> = 0;

        r0.<android.support.v7.widget.RecyclerView: boolean mIsAttached> = 1;

        $z1 = r0.<android.support.v7.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z1 == 0 goto label5;

        $z1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean isLayoutRequested()>();

        if $z1 != 0 goto label5;

     label1:
        r0.<android.support.v7.widget.RecyclerView: boolean mFirstLayoutComplete> = $z0;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 == null goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void dispatchAttachedToWindow(android.support.v7.widget.RecyclerView)>(r0);

     label2:
        r0.<android.support.v7.widget.RecyclerView: boolean mPostedAnimatorRunner> = 0;

        $z0 = <android.support.v7.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z0 == 0 goto label6;

        $r2 = <android.support.v7.widget.GapWorker: java.lang.ThreadLocal sGapWorker>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r4 = (android.support.v7.widget.GapWorker) $r3;

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker mGapWorker> = $r4;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker mGapWorker>;

        if $r4 != null goto label4;

        $r4 = new android.support.v7.widget.GapWorker;

        specialinvoke $r4.<android.support.v7.widget.GapWorker: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker mGapWorker> = $r4;

        $r5 = staticinvoke <android.support.v4.view.ViewCompat: android.view.Display getDisplay(android.view.View)>(r0);

        f0 = 60.0F;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean isInEditMode()>();

        if $z0 != 0 goto label3;

        if $r5 == null goto label3;

        $f1 = virtualinvoke $r5.<android.view.Display: float getRefreshRate()>();

        $b0 = $f1 cmpl 30.0F;

        if $b0 < 0 goto label3;

        f0 = $f1;

     label3:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker mGapWorker>;

        f0 = 1.0E9F / f0;

        $l1 = (long) f0;

        $r4.<android.support.v7.widget.GapWorker: long mFrameIntervalNs> = $l1;

        $r2 = <android.support.v7.widget.GapWorker: java.lang.ThreadLocal sGapWorker>;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker mGapWorker>;

        virtualinvoke $r2.<java.lang.ThreadLocal: void set(java.lang.Object)>($r4);

     label4:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker mGapWorker>;

        virtualinvoke $r4.<android.support.v7.widget.GapWorker: void add(android.support.v7.widget.RecyclerView)>(r0);

        return;

     label5:
        $z0 = 0;

        goto label1;

     label6:
        return;
    }
    public void onChildAttachedToWindow(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        return;
    }
    public void onChildDetachedFromWindow(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        return;
    }
    protected void onDetachedFromWindow()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$ItemAnimator $r2;
        android.support.v7.widget.RecyclerView$LayoutManager $r3;
        java.util.List $r4;
        java.lang.Runnable $r5;
        android.support.v7.widget.ViewInfoStore $r6;
        boolean $z0;
        android.support.v7.widget.GapWorker $r7;

        r0 := @this: android.support.v7.widget.RecyclerView;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ItemAnimator: void endAnimations()>();

     label1:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void stopScroll()>();

        r0.<android.support.v7.widget.RecyclerView: boolean mIsAttached> = 0;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r3 == null goto label2;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$LayoutManager: void dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler)>(r0, $r1);

     label2:
        $r4 = r0.<android.support.v7.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        $r5 = r0.<android.support.v7.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean removeCallbacks(java.lang.Runnable)>($r5);

        $r6 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r6.<android.support.v7.widget.ViewInfoStore: void onDetach()>();

        $z0 = <android.support.v7.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK>;

        if $z0 == 0 goto label3;

        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker mGapWorker>;

        virtualinvoke $r7.<android.support.v7.widget.GapWorker: void remove(android.support.v7.widget.RecyclerView)>(r0);

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker mGapWorker> = null;

     label3:
        return;
    }
    public void onDraw(android.graphics.Canvas)
    {
        android.support.v7.widget.RecyclerView r0;
        android.graphics.Canvas $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        java.util.ArrayList $r3;
        int $i0, i1;
        java.lang.Object $r4;
        android.support.v7.widget.RecyclerView$ItemDecoration $r5;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>($r1);

        $r3 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r3 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.support.v7.widget.RecyclerView$ItemDecoration) $r4;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r5.<android.support.v7.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State)>($r1, r0, $r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    void onEnterLayoutOrScroll()
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 = r0.<android.support.v7.widget.RecyclerView: int mLayoutOrScrollCounter>;

        $i0 = $i0 + 1;

        r0.<android.support.v7.widget.RecyclerView: int mLayoutOrScrollCounter> = $i0;

        return;
    }
    void onExitLayoutOrScroll()
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 = r0.<android.support.v7.widget.RecyclerView: int mLayoutOrScrollCounter>;

        $i0 = $i0 + -1;

        r0.<android.support.v7.widget.RecyclerView: int mLayoutOrScrollCounter> = $i0;

        $i0 = r0.<android.support.v7.widget.RecyclerView: int mLayoutOrScrollCounter>;

        if $i0 >= 1 goto label1;

        r0.<android.support.v7.widget.RecyclerView: int mLayoutOrScrollCounter> = 0;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchContentChangedIfNecessary()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchPendingImportantForAccessibilityChanges()>();

     label1:
        return;
    }
    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.MotionEvent $r1;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        boolean $z0;
        int $i0, $i2;
        float $f0, $f1, f2;
        byte $b1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 != 0 goto label7;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getSource()>();

        $i0 = $i0 & 2;

        if $i0 == 0 goto label7;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 8 goto label7;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label5;

        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int)>($r1, 9);

        $f0 = neg $f0;

     label2:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label6;

        f2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int)>($r1, 10);

     label3:
        $b1 = $f0 cmpl 0.0F;

        if $b1 != 0 goto label4;

        $b1 = f2 cmpl 0.0F;

        if $b1 == 0 goto label7;

     label4:
        $f1 = specialinvoke r0.<android.support.v7.widget.RecyclerView: float getScrollFactor()>();

        f2 = f2 * $f1;

        $i0 = (int) f2;

        $f0 = $f0 * $f1;

        $i2 = (int) $f0;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>($i0, $i2, $r1);

        return 0;

     label5:
        $f0 = 0.0F;

        goto label2;

     label6:
        f2 = 0.0F;

        goto label3;

     label7:
        return 0;
    }
    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.MotionEvent $r1;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        android.view.VelocityTracker $r3;
        float $f0;
        android.view.ViewParent $r4;
        int[] $r5, $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        byte $b4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 == 0 goto label01;

        return 0;

     label01:
        $z0 = specialinvoke r0.<android.support.v7.widget.RecyclerView: boolean dispatchOnItemTouchIntercept(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label02;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void cancelTouch()>();

        return 1;

     label02:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label03;

        return 0;

     label03:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        if $r3 != null goto label04;

        $r3 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.support.v7.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker> = $r3;

     label04:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);

        i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        lookupswitch(i0)
        {
            case 0: goto label06;
            case 1: goto label21;
            case 2: goto label12;
            case 3: goto label22;
            case 4: goto label05;
            case 5: goto label11;
            case 6: goto label20;
            default: goto label05;
        };

     label05:
        i1 = r0.<android.support.v7.widget.RecyclerView: int mScrollState>;

        if i1 != 1 goto label23;

        return 1;

     label06:
        $z2 = r0.<android.support.v7.widget.RecyclerView: boolean mIgnoreMotionEventTillDown>;

        if $z2 == 0 goto label07;

        r0.<android.support.v7.widget.RecyclerView: boolean mIgnoreMotionEventTillDown> = 0;

     label07:
        i1 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.support.v7.widget.RecyclerView: int mScrollPointerId> = i1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f0 = $f0 + 0.5F;

        i1 = (int) $f0;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchX> = i1;

        r0.<android.support.v7.widget.RecyclerView: int mInitialTouchX> = i1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $f0 = $f0 + 0.5F;

        i1 = (int) $f0;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchY> = i1;

        r0.<android.support.v7.widget.RecyclerView: int mInitialTouchY> = i1;

        i1 = r0.<android.support.v7.widget.RecyclerView: int mScrollState>;

        if i1 != 2 goto label08;

        $r4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.view.ViewParent getParent()>();

        interfaceinvoke $r4.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setScrollState(int)>(1);

     label08:
        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mNestedOffsets>;

        $r6 = r0.<android.support.v7.widget.RecyclerView: int[] mNestedOffsets>;

        $r6[1] = 0;

        $r5[0] = 0;

        i1 = 0;

        if $z0 == 0 goto label09;

        i1 = 1;

     label09:
        if $z1 == 0 goto label10;

        i1 = i1 | 2;

     label10:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean startNestedScroll(int)>(i1);

        goto label05;

     label11:
        i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>(i1);

        r0.<android.support.v7.widget.RecyclerView: int mScrollPointerId> = i0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>(i1);

        $f0 = $f0 + 0.5F;

        i0 = (int) $f0;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchX> = i0;

        r0.<android.support.v7.widget.RecyclerView: int mInitialTouchX> = i0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>(i1);

        $f0 = $f0 + 0.5F;

        i1 = (int) $f0;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchY> = i1;

        r0.<android.support.v7.widget.RecyclerView: int mInitialTouchY> = i1;

        goto label05;

     label12:
        i1 = r0.<android.support.v7.widget.RecyclerView: int mScrollPointerId>;

        i1 = virtualinvoke $r1.<android.view.MotionEvent: int findPointerIndex(int)>(i1);

        if i1 >= 0 goto label13;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing scroll; pointer index for id ");

        i1 = r0.<android.support.v7.widget.RecyclerView: int mScrollPointerId>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found. Did any MotionEvents get skipped?");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", $r8);

        return 0;

     label13:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>(i1);

        $f0 = $f0 + 0.5F;

        i0 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>(i1);

        $f0 = $f0 + 0.5F;

        i1 = (int) $f0;

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mScrollState>;

        if $i2 == 1 goto label05;

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mInitialTouchX>;

        i0 = i0 - $i2;

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mInitialTouchY>;

        i1 = i1 - $i2;

        $z2 = 0;

        if $z0 == 0 goto label15;

        $i2 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $i3 = r0.<android.support.v7.widget.RecyclerView: int mTouchSlop>;

        if $i2 <= $i3 goto label15;

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mInitialTouchX>;

        $i3 = r0.<android.support.v7.widget.RecyclerView: int mTouchSlop>;

        if i0 >= 0 goto label18;

        $b4 = -1;

     label14:
        i0 = $b4 * $i3;

        i0 = i0 + $i2;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchX> = i0;

        $z2 = 1;

     label15:
        if $z1 == 0 goto label17;

        i0 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mTouchSlop>;

        if i0 <= $i2 goto label17;

        i0 = r0.<android.support.v7.widget.RecyclerView: int mInitialTouchY>;

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mTouchSlop>;

        if i1 >= 0 goto label19;

        $b4 = -1;

     label16:
        i1 = $b4 * $i2;

        i1 = i1 + i0;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchY> = i1;

        $z2 = 1;

     label17:
        if $z2 == 0 goto label05;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setScrollState(int)>(1);

        goto label05;

     label18:
        $b4 = 1;

        goto label14;

     label19:
        $b4 = 1;

        goto label16;

     label20:
        specialinvoke r0.<android.support.v7.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)>($r1);

        goto label05;

     label21:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void clear()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void stopNestedScroll()>();

        goto label05;

     label22:
        specialinvoke r0.<android.support.v7.widget.RecyclerView: void cancelTouch()>();

        goto label05;

     label23:
        return 0;
    }
    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        staticinvoke <android.support.v4.os.TraceCompat: void beginSection(java.lang.String)>("RV OnLayout");

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchLayout()>();

        staticinvoke <android.support.v4.os.TraceCompat: void endSection()>();

        r0.<android.support.v7.widget.RecyclerView: boolean mFirstLayoutComplete> = 1;

        return;
    }
    protected void onMeasure(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, $i2, $i3;
        boolean z0, $z1;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        android.support.v7.widget.RecyclerView$Recycler $r2;
        android.support.v7.widget.RecyclerView$State $r3;
        android.support.v7.widget.RecyclerView$Adapter $r4;
        android.support.v7.widget.AdapterHelper $r5;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        z0 = 0;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label01;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void defaultOnMeasure(int,int)>($i0, $i1);

        return;

     label01:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z1 = $r1.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mAutoMeasure>;

        if $z1 == 0 goto label04;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        if $i2 != 1073741824 goto label02;

        if $i3 != 1073741824 goto label02;

        z0 = 1;

     label02:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int)>($r2, $r3, $i0, $i1);

        if z0 != 0 goto label11;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r4 == null goto label11;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $i2 = $r3.<android.support.v7.widget.RecyclerView$State: int mLayoutStep>;

        if $i2 != 1 goto label03;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchLayoutStep1()>();

     label03:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void setMeasureSpecs(int,int)>($i0, $i1);

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r3.<android.support.v7.widget.RecyclerView$State: boolean mIsMeasuring> = 1;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchLayoutStep2()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void setMeasuredDimensionFromChildren(int,int)>($i0, $i1);

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: boolean shouldMeasureTwice()>();

        if z0 == 0 goto label11;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredWidth()>();

        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 1073741824);

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getMeasuredHeight()>();

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 1073741824);

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void setMeasureSpecs(int,int)>($i2, $i3);

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r3.<android.support.v7.widget.RecyclerView$State: boolean mIsMeasuring> = 1;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchLayoutStep2()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void setMeasuredDimensionFromChildren(int,int)>($i0, $i1);

        return;

     label04:
        z0 = r0.<android.support.v7.widget.RecyclerView: boolean mHasFixedSize>;

        if z0 == 0 goto label05;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int)>($r2, $r3, $i0, $i1);

        return;

     label05:
        z0 = r0.<android.support.v7.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure>;

        if z0 == 0 goto label07;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void eatRequestLayout()>();

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>();

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        z0 = $r3.<android.support.v7.widget.RecyclerView$State: boolean mRunPredictiveAnimations>;

        if z0 == 0 goto label09;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r3.<android.support.v7.widget.RecyclerView$State: boolean mInPreLayout> = 1;

     label06:
        r0.<android.support.v7.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure> = 0;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

     label07:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r4 == null goto label10;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        $i2 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Adapter: int getItemCount()>();

        $r3.<android.support.v7.widget.RecyclerView$State: int mItemCount> = $i2;

     label08:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void eatRequestLayout()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int)>($r2, $r3, $i0, $i1);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r3.<android.support.v7.widget.RecyclerView$State: boolean mInPreLayout> = 0;

        return;

     label09:
        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.AdapterHelper mAdapterHelper>;

        virtualinvoke $r5.<android.support.v7.widget.AdapterHelper: void consumeUpdatesInOnePass()>();

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r3.<android.support.v7.widget.RecyclerView$State: boolean mInPreLayout> = 0;

        goto label06;

     label10:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $r3.<android.support.v7.widget.RecyclerView$State: int mItemCount> = 0;

        goto label08;

     label11:
        return;
    }
    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;
        android.graphics.Rect $r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>($i0, $r1);

        return $z0;
    }
    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.v7.widget.RecyclerView r0;
        android.os.Parcelable $r1;
        boolean $z0;
        android.support.v7.widget.RecyclerView$SavedState r2;
        android.support.v7.widget.RecyclerView$LayoutManager $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof android.support.v7.widget.RecyclerView$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        r2 = (android.support.v7.widget.RecyclerView$SavedState) $r1;

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$SavedState mPendingSavedState> = r2;

        r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$SavedState mPendingSavedState>;

        $r1 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r3 == null goto label2;

        r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$SavedState mPendingSavedState>;

        $r1 = r2.<android.support.v7.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState>;

        if $r1 == null goto label2;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$SavedState mPendingSavedState>;

        $r1 = r2.<android.support.v7.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$LayoutManager: void onRestoreInstanceState(android.os.Parcelable)>($r1);

     label2:
        return;
    }
    protected android.os.Parcelable onSaveInstanceState()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$SavedState r1, $r3;
        android.os.Parcelable $r2;
        android.support.v7.widget.RecyclerView$LayoutManager $r4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        r1 = new android.support.v7.widget.RecyclerView$SavedState;

        $r2 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke r1.<android.support.v7.widget.RecyclerView$SavedState: void <init>(android.os.Parcelable)>($r2);

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$SavedState mPendingSavedState>;

        if $r3 == null goto label1;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$SavedState mPendingSavedState>;

        virtualinvoke r1.<android.support.v7.widget.RecyclerView$SavedState: void copyFrom(android.support.v7.widget.RecyclerView$SavedState)>($r3);

        return r1;

     label1:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r4 == null goto label2;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$LayoutManager: android.os.Parcelable onSaveInstanceState()>();

        r1.<android.support.v7.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState> = $r2;

        return r1;

     label2:
        r1.<android.support.v7.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState> = null;

        return r1;
    }
    public void onScrollStateChanged(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        return;
    }
    public void onScrolled(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        return;
    }
    protected void onSizeChanged(int, int, int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        if $i0 != $i2 goto label1;

        if $i1 == $i3 goto label2;

     label1:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void invalidateGlows()>();

     label2:
        return;
    }
    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.MotionEvent $r1, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        android.view.VelocityTracker $r3;
        int[] $r5, $r6;
        float $f0, $f1;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        android.view.ViewParent $r9;
        android.support.v7.widget.GapWorker $r10;
        byte $b6;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 != 0 goto label01;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mIgnoreMotionEventTillDown>;

        if $z0 == 0 goto label02;

     label01:
        return 0;

     label02:
        $z0 = specialinvoke r0.<android.support.v7.widget.RecyclerView: boolean dispatchOnItemTouch(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label03;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void cancelTouch()>();

        return 1;

     label03:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label04;

        return 0;

     label04:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z2 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        if $r3 != null goto label05;

        $r3 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.support.v7.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker> = $r3;

     label05:
        $z0 = 0;

        $r4 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>($r1);

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);

        $i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        if $i1 != 0 goto label06;

        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mNestedOffsets>;

        $r6 = r0.<android.support.v7.widget.RecyclerView: int[] mNestedOffsets>;

        $r6[1] = 0;

        $r5[0] = 0;

     label06:
        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mNestedOffsets>;

        $i3 = $r5[0];

        $f0 = (float) $i3;

        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mNestedOffsets>;

        $i3 = $r5[1];

        $f1 = (float) $i3;

        virtualinvoke $r4.<android.view.MotionEvent: void offsetLocation(float,float)>($f0, $f1);

        lookupswitch($i1)
        {
            case 0: goto label09;
            case 1: goto label30;
            case 2: goto label13;
            case 3: goto label38;
            case 4: goto label07;
            case 5: goto label12;
            case 6: goto label29;
            default: goto label07;
        };

     label07:
        if $z0 != 0 goto label08;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r4);

     label08:
        virtualinvoke $r4.<android.view.MotionEvent: void recycle()>();

        return 1;

     label09:
        $i2 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.support.v7.widget.RecyclerView: int mScrollPointerId> = $i2;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f0 = $f0 + 0.5F;

        $i2 = (int) $f0;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchX> = $i2;

        r0.<android.support.v7.widget.RecyclerView: int mInitialTouchX> = $i2;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $f0 = $f0 + 0.5F;

        $i2 = (int) $f0;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchY> = $i2;

        r0.<android.support.v7.widget.RecyclerView: int mInitialTouchY> = $i2;

        $i2 = 0;

        if $z1 == 0 goto label10;

        $i2 = 1;

     label10:
        if $z2 == 0 goto label11;

        $i2 = $i2 | 2;

     label11:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean startNestedScroll(int)>($i2);

        goto label07;

     label12:
        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i2);

        r0.<android.support.v7.widget.RecyclerView: int mScrollPointerId> = $i1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i2);

        $f0 = $f0 + 0.5F;

        $i1 = (int) $f0;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchX> = $i1;

        r0.<android.support.v7.widget.RecyclerView: int mInitialTouchX> = $i1;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i2);

        $f0 = $f0 + 0.5F;

        $i2 = (int) $f0;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchY> = $i2;

        r0.<android.support.v7.widget.RecyclerView: int mInitialTouchY> = $i2;

        goto label07;

     label13:
        $i2 = r0.<android.support.v7.widget.RecyclerView: int mScrollPointerId>;

        $i2 = virtualinvoke $r1.<android.view.MotionEvent: int findPointerIndex(int)>($i2);

        if $i2 >= 0 goto label14;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing scroll; pointer index for id ");

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mScrollPointerId>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found. Did any MotionEvents get skipped?");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", $r8);

        return 0;

     label14:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i2);

        $f0 = $f0 + 0.5F;

        i0 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i2);

        $f0 = $f0 + 0.5F;

        $i3 = (int) $f0;

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mLastTouchX>;

        $i2 = $i2 - i0;

        $i1 = r0.<android.support.v7.widget.RecyclerView: int mLastTouchY>;

        $i1 = $i1 - $i3;

        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollConsumed>;

        $r6 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        $z3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[])>($i2, $i1, $r5, $r6);

        if $z3 == 0 goto label15;

        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollConsumed>;

        $i4 = $r5[0];

        $i2 = $i2 - $i4;

        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollConsumed>;

        $i4 = $r5[1];

        $i1 = $i1 - $i4;

        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        $i4 = $r5[0];

        $f0 = (float) $i4;

        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        $i4 = $r5[1];

        $f1 = (float) $i4;

        virtualinvoke $r4.<android.view.MotionEvent: void offsetLocation(float,float)>($f0, $f1);

        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mNestedOffsets>;

        $i4 = $r5[0];

        $r6 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        $i5 = $r6[0];

        $i4 = $i4 + $i5;

        $r5[0] = $i4;

        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mNestedOffsets>;

        $i4 = $r5[1];

        $r6 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        $i5 = $r6[1];

        $i4 = $i4 + $i5;

        $r5[1] = $i4;

     label15:
        $i4 = r0.<android.support.v7.widget.RecyclerView: int mScrollState>;

        if $i4 == 1 goto label20;

        $z3 = 0;

        if $z1 == 0 goto label17;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        $i5 = r0.<android.support.v7.widget.RecyclerView: int mTouchSlop>;

        if $i4 <= $i5 goto label17;

        if $i2 <= 0 goto label25;

        $i4 = r0.<android.support.v7.widget.RecyclerView: int mTouchSlop>;

        $i2 = $i2 - $i4;

     label16:
        $z3 = 1;

     label17:
        if $z2 == 0 goto label19;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i5 = r0.<android.support.v7.widget.RecyclerView: int mTouchSlop>;

        if $i4 <= $i5 goto label19;

        if $i1 <= 0 goto label26;

        $i4 = r0.<android.support.v7.widget.RecyclerView: int mTouchSlop>;

        $i1 = $i1 - $i4;

     label18:
        $z3 = 1;

     label19:
        if $z3 == 0 goto label20;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setScrollState(int)>(1);

     label20:
        $i4 = r0.<android.support.v7.widget.RecyclerView: int mScrollState>;

        if $i4 != 1 goto label07;

        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        $i4 = $r5[0];

        i0 = i0 - $i4;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchX> = i0;

        $r5 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        i0 = $r5[1];

        $i3 = $i3 - i0;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchY> = $i3;

        if $z1 == 0 goto label27;

        $i3 = $i2;

     label21:
        if $z2 == 0 goto label28;

        i0 = $i1;

     label22:
        $z1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>($i3, i0, $r4);

        if $z1 == 0 goto label23;

        $r9 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.view.ViewParent getParent()>();

        interfaceinvoke $r9.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label23:
        $r10 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker mGapWorker>;

        if $r10 == null goto label07;

        if $i2 != 0 goto label24;

        if $i1 == 0 goto label07;

     label24:
        $r10 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.GapWorker mGapWorker>;

        virtualinvoke $r10.<android.support.v7.widget.GapWorker: void postFromTraversal(android.support.v7.widget.RecyclerView,int,int)>(r0, $i2, $i1);

        goto label07;

     label25:
        $i4 = r0.<android.support.v7.widget.RecyclerView: int mTouchSlop>;

        $i2 = $i2 + $i4;

        goto label16;

     label26:
        $i4 = r0.<android.support.v7.widget.RecyclerView: int mTouchSlop>;

        $i1 = $i1 + $i4;

        goto label18;

     label27:
        $i3 = 0;

        goto label21;

     label28:
        i0 = 0;

        goto label22;

     label29:
        specialinvoke r0.<android.support.v7.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)>($r1);

        goto label07;

     label30:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r4);

        $z0 = 1;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mMaxFlingVelocity>;

        $f0 = (float) $i2;

        virtualinvoke $r3.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f0);

        if $z1 == 0 goto label36;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mScrollPointerId>;

        $f0 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>($r3, $i2);

        $f0 = neg $f0;

     label31:
        if $z2 == 0 goto label37;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker>;

        $i2 = r0.<android.support.v7.widget.RecyclerView: int mScrollPointerId>;

        $f1 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r3, $i2);

        $f1 = neg $f1;

     label32:
        $b6 = $f0 cmpl 0.0F;

        if $b6 != 0 goto label33;

        $b6 = $f1 cmpl 0.0F;

        if $b6 == 0 goto label34;

     label33:
        $i2 = (int) $f0;

        $i1 = (int) $f1;

        $z1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean fling(int,int)>($i2, $i1);

        if $z1 != 0 goto label35;

     label34:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setScrollState(int)>(0);

     label35:
        specialinvoke r0.<android.support.v7.widget.RecyclerView: void resetTouch()>();

        goto label07;

     label36:
        $f0 = 0.0F;

        goto label31;

     label37:
        $f1 = 0.0F;

        goto label32;

     label38:
        specialinvoke r0.<android.support.v7.widget.RecyclerView: void cancelTouch()>();

        goto label07;
    }
    void postAnimationRunner()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        java.lang.Runnable $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mPostedAnimatorRunner>;

        if $z0 != 0 goto label1;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mIsAttached>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner>;

        staticinvoke <android.support.v4.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>(r0, $r1);

        r0.<android.support.v7.widget.RecyclerView: boolean mPostedAnimatorRunner> = 1;

     label1:
        return;
    }
    void recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder, android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1;
        android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo $r2;
        android.support.v7.widget.RecyclerView$State $r3;
        boolean $z0;
        long $l0;
        android.support.v7.widget.ViewInfoStore $r4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ViewHolder: void setFlags(int,int)>(0, 8192);

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z0 = $r3.<android.support.v7.widget.RecyclerView$State: boolean mTrackOldChangeHolders>;

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isUpdated()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label1;

        $l0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder)>($r1);

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r4.<android.support.v7.widget.ViewInfoStore: void addToOldChangeHolders(long,android.support.v7.widget.RecyclerView$ViewHolder)>($l0, $r1);

     label1:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ViewInfoStore mViewInfoStore>;

        virtualinvoke $r4.<android.support.v7.widget.ViewInfoStore: void addToPreLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo)>($r1, $r2);

        return;
    }
    void removeAndRecycleViews()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ItemAnimator $r1;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        android.support.v7.widget.RecyclerView$Recycler $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ItemAnimator: void endAnimations()>();

     label1:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label2;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler)>($r3);

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler)>($r3);

     label2:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$Recycler: void clear()>();

        return;
    }
    boolean removeAnimatingView(android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;
        android.support.v7.widget.ChildHelper $r2;
        boolean $z0, $z1;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        android.support.v7.widget.RecyclerView$Recycler $r4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void eatRequestLayout()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: boolean removeViewIfHidden(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Recycler: void unscrapView(android.support.v7.widget.RecyclerView$ViewHolder)>($r3);

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Recycler: void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)>($r3);

     label1:
        if $z0 != 0 goto label3;

        $z1 = 1;

     label2:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void resumeRequestLayout(boolean)>($z1);

        return $z0;

     label3:
        $z1 = 0;

        goto label2;
    }
    protected void removeDetachedView(android.view.View, boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;
        boolean $z0, $z1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r1);

        if $r2 == null goto label1;

        $z1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z1 == 0 goto label2;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: void clearTmpDetachFlag()>();

     label1:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchChildDetached(android.view.View)>($r1);

        specialinvoke r0.<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>($r1, $z0);

        return;

     label2:
        $z1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called removeDetachedView with a view which is not flagged as tmp detached.");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }
    public void removeItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ItemDecoration $r1;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        java.util.ArrayList $r3;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ItemDecoration;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)>("Cannot remove item decoration during a scroll  or layout");

     label1:
        $r3 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r3 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getOverScrollMode()>();

        if $i0 != 2 goto label4;

        $z0 = 1;

     label2:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setWillNotDraw(boolean)>($z0);

     label3:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void markItemDecorInsetsDirty()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void requestLayout()>();

        return;

     label4:
        $z0 = 0;

        goto label2;
    }
    public void removeOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener $r1;
        java.util.List $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener;

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        if $r2 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.List mOnChildAttachStateListeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

        return;
    }
    public void removeOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$OnItemTouchListener $r1, $r3;
        java.util.ArrayList $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$OnItemTouchListener;

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener>;

        if $r3 != $r1 goto label1;

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener> = null;

     label1:
        return;
    }
    public void removeOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$OnScrollListener $r1;
        java.util.List $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$OnScrollListener;

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.List mScrollListeners>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.List mScrollListeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

     label1:
        return;
    }
    void repositionShadowingViews()
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View r1, $r3;
        android.support.v7.widget.ChildHelper $r2;
        int $i0, i1, $i2, $i3, $i4, $i5;
        android.support.v7.widget.RecyclerView$ViewHolder $r4, $r5;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r3 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: android.view.View getChildAt(int)>(i1);

        $r4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>($r3);

        if $r4 == null goto label3;

        $r5 = $r4.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView$ViewHolder mShadowingHolder>;

        if $r5 == null goto label3;

        $r4 = $r4.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView$ViewHolder mShadowingHolder>;

        r1 = $r4.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i2 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        $i3 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $i4 = virtualinvoke r1.<android.view.View: int getLeft()>();

        if $i2 != $i4 goto label2;

        $i4 = virtualinvoke r1.<android.view.View: int getTop()>();

        if $i3 == $i4 goto label3;

     label2:
        $i4 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i4 = $i4 + $i2;

        $i5 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i5 = $i5 + $i3;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i2, $i3, $i4, $i5);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }
    public void requestChildFocus(android.view.View, android.view.View)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1, $r2;
        android.graphics.Rect r3, $r8;
        boolean $z0, $z1;
        android.support.v7.widget.RecyclerView$LayoutManager $r4;
        android.support.v7.widget.RecyclerView$State $r5;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r6;
        android.support.v7.widget.RecyclerView$LayoutParams r7;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $z0 = 0;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z1 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,android.view.View,android.view.View)>(r0, $r5, $r1, $r2);

        if $z1 != 0 goto label3;

        if $r2 == null goto label3;

        r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = virtualinvoke $r2.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        virtualinvoke r3.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);

        $r6 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z1 = $r6 instanceof android.support.v7.widget.RecyclerView$LayoutParams;

        if $z1 == 0 goto label1;

        r7 = (android.support.v7.widget.RecyclerView$LayoutParams) $r6;

        $z1 = r7.<android.support.v7.widget.RecyclerView$LayoutParams: boolean mInsetsDirty>;

        if $z1 != 0 goto label1;

        r3 = r7.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $r8 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r8.<android.graphics.Rect: int left>;

        $i1 = r3.<android.graphics.Rect: int left>;

        $i0 = $i0 - $i1;

        $r8.<android.graphics.Rect: int left> = $i0;

        $r8 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r8.<android.graphics.Rect: int right>;

        $i1 = r3.<android.graphics.Rect: int right>;

        $i0 = $i0 + $i1;

        $r8.<android.graphics.Rect: int right> = $i0;

        $r8 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r8.<android.graphics.Rect: int top>;

        $i1 = r3.<android.graphics.Rect: int top>;

        $i0 = $i0 - $i1;

        $r8.<android.graphics.Rect: int top> = $i0;

        $r8 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $i0 = $r8.<android.graphics.Rect: int bottom>;

        $i1 = r3.<android.graphics.Rect: int bottom>;

        $i0 = $i0 + $i1;

        $r8.<android.graphics.Rect: int bottom> = $i0;

     label1:
        r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r2, r3);

        r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>($r1, r3);

        r3 = r0.<android.support.v7.widget.RecyclerView: android.graphics.Rect mTempRect>;

        $z1 = r0.<android.support.v7.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z1 != 0 goto label2;

        $z0 = 1;

     label2:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>($r1, r3, $z0);

     label3:
        specialinvoke r0.<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>($r1, $r2);

        return;
    }
    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean $z0;
        android.support.v7.widget.RecyclerView$LayoutManager $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $z0 := @parameter2: boolean;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)>(r0, $r1, $r2, $z0);

        return $z0;
    }
    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        java.util.ArrayList $r1;
        int $i0, i1;
        java.lang.Object $r2;
        android.support.v7.widget.RecyclerView$OnItemTouchListener r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        $r1 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.support.v7.widget.RecyclerView$OnItemTouchListener) $r2;

        interfaceinvoke r3.<android.support.v7.widget.RecyclerView$OnItemTouchListener: void onRequestDisallowInterceptTouchEvent(boolean)>($z0);

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>($z0);

        return;
    }
    public void requestLayout()
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 = r0.<android.support.v7.widget.RecyclerView: int mEatRequestLayout>;

        if $i0 != 0 goto label1;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        return;

     label1:
        r0.<android.support.v7.widget.RecyclerView: boolean mLayoutRequestEaten> = 1;

        return;
    }
    void resumeRequestLayout(boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        int $i0;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        android.support.v7.widget.RecyclerView$Adapter $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        $i0 = r0.<android.support.v7.widget.RecyclerView: int mEatRequestLayout>;

        if $i0 >= 1 goto label1;

        r0.<android.support.v7.widget.RecyclerView: int mEatRequestLayout> = 1;

     label1:
        if $z0 != 0 goto label2;

        r0.<android.support.v7.widget.RecyclerView: boolean mLayoutRequestEaten> = 0;

     label2:
        $i0 = r0.<android.support.v7.widget.RecyclerView: int mEatRequestLayout>;

        if $i0 != 1 goto label4;

        if $z0 == 0 goto label3;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutRequestEaten>;

        if $z0 == 0 goto label3;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 != 0 goto label3;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 == null goto label3;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r2 == null goto label3;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchLayout()>();

     label3:
        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 != 0 goto label4;

        r0.<android.support.v7.widget.RecyclerView: boolean mLayoutRequestEaten> = 0;

     label4:
        $i0 = r0.<android.support.v7.widget.RecyclerView: int mEatRequestLayout>;

        $i0 = $i0 + -1;

        r0.<android.support.v7.widget.RecyclerView: int mEatRequestLayout> = $i0;

        return;
    }
    void saveOldPositions()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.ChildHelper $r1;
        int $i0, i1;
        android.view.View $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r2);

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: void saveOldPosition()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }
    public void scrollBy(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int i0, i1;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label1:
        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 != 0 goto label7;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z1 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 != 0 goto label2;

        if $z1 == 0 goto label7;

     label2:
        if $z0 == 0 goto label5;

     label3:
        if $z1 == 0 goto label6;

     label4:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>(i0, i1, null);

        return;

     label5:
        i0 = 0;

        goto label3;

     label6:
        i1 = 0;

        goto label4;

     label7:
        return;
    }
    boolean scrollByInternal(int, int, android.view.MotionEvent)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, i2, i3, i4, i5, $i6;
        android.view.MotionEvent $r1;
        float $f0, $f1, $f2, $f3;
        android.support.v7.widget.RecyclerView$Adapter $r2;
        android.support.v7.widget.RecyclerView$LayoutManager $r3;
        android.support.v7.widget.RecyclerView$Recycler $r4;
        android.support.v7.widget.RecyclerView$State $r5;
        java.util.ArrayList $r6;
        boolean $z0;
        int[] $r7, $r8;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.view.MotionEvent;

        i2 = 0;

        i3 = 0;

        i4 = 0;

        i5 = 0;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void consumePendingUpdateOperations()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r2 == null goto label03;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void eatRequestLayout()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onEnterLayoutOrScroll()>();

        staticinvoke <android.support.v4.os.TraceCompat: void beginSection(java.lang.String)>("RV Scroll");

        if $i0 == 0 goto label01;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        i2 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$LayoutManager: int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($i0, $r4, $r5);

        i4 = i2;

        i2 = $i0 - i2;

     label01:
        if $i1 == 0 goto label02;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        i3 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$LayoutManager: int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($i1, $r4, $r5);

        i5 = i3;

        i3 = $i1 - i3;

     label02:
        staticinvoke <android.support.v4.os.TraceCompat: void endSection()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void repositionShadowingViews()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void onExitLayoutOrScroll()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void resumeRequestLayout(boolean)>(0);

     label03:
        $r6 = r0.<android.support.v7.widget.RecyclerView: java.util.ArrayList mItemDecorations>;

        $z0 = virtualinvoke $r6.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label04;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void invalidate()>();

     label04:
        $r7 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[])>(i4, i5, i2, i3, $r7);

        if $z0 == 0 goto label11;

        $i0 = r0.<android.support.v7.widget.RecyclerView: int mLastTouchX>;

        $r7 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        $i1 = $r7[0];

        $i0 = $i0 - $i1;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchX> = $i0;

        $i0 = r0.<android.support.v7.widget.RecyclerView: int mLastTouchY>;

        $r7 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        $i1 = $r7[1];

        $i0 = $i0 - $i1;

        r0.<android.support.v7.widget.RecyclerView: int mLastTouchY> = $i0;

        if $r1 == null goto label05;

        $r7 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        $i0 = $r7[0];

        $f0 = (float) $i0;

        $r7 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        $i0 = $r7[1];

        $f1 = (float) $i0;

        virtualinvoke $r1.<android.view.MotionEvent: void offsetLocation(float,float)>($f0, $f1);

     label05:
        $r7 = r0.<android.support.v7.widget.RecyclerView: int[] mNestedOffsets>;

        $i0 = $r7[0];

        $r8 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        $i1 = $r8[0];

        $i0 = $i0 + $i1;

        $r7[0] = $i0;

        $r7 = r0.<android.support.v7.widget.RecyclerView: int[] mNestedOffsets>;

        $i0 = $r7[1];

        $r8 = r0.<android.support.v7.widget.RecyclerView: int[] mScrollOffset>;

        $i1 = $r8[1];

        $i0 = $i0 + $i1;

        $r7[1] = $i0;

     label06:
        if i4 != 0 goto label07;

        if i5 == 0 goto label08;

     label07:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchOnScrolled(int,int)>(i4, i5);

     label08:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean awakenScrollBars()>();

        if $z0 != 0 goto label09;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void invalidate()>();

     label09:
        if i4 != 0 goto label10;

        if i5 == 0 goto label13;

     label10:
        return 1;

     label11:
        $i6 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: int getOverScrollMode()>();

        if $i6 == 2 goto label06;

        if $r1 == null goto label12;

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f2 = (float) i2;

        $f3 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $f0 = (float) i3;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void pullGlows(float,float,float,float)>($f1, $f2, $f3, $f0);

     label12:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void considerReleasingGlowsOnScroll(int,int)>($i0, $i1);

        goto label06;

     label13:
        return 0;
    }
    public void scrollTo(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerView", "RecyclerView does not support scrolling to an absolute position. Use scrollToPosition instead");

        return;
    }
    public void scrollToPosition(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;
        boolean $z0;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void stopScroll()>();

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot scroll to position a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label2:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void scrollToPosition(int)>($i0);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean awakenScrollBars()>();

        return;
    }
    public void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.accessibility.AccessibilityEvent $r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.view.ViewGroup: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>($r1);

        return;
    }
    public void setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerViewAccessibilityDelegate $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerViewAccessibilityDelegate;

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate> = $r1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>(r0, $r1);

        return;
    }
    public void setAdapter(android.support.v7.widget.RecyclerView$Adapter)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$Adapter $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Adapter;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setLayoutFrozen(boolean)>(0);

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean)>($r1, 0, 1);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void requestLayout()>();

        return;
    }
    public void setChildDrawingOrderCallback(android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback $r1, $r2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback>;

        if $r1 != $r2 goto label1;

        return;

     label1:
        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback> = $r1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback>;

        if $r1 == null goto label3;

        $z0 = 1;

     label2:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setChildrenDrawingOrderEnabled(boolean)>($z0);

        return;

     label3:
        $z0 = 0;

        goto label2;
    }
    boolean setChildImportantForAccessibilityInternal(android.support.v7.widget.RecyclerView$ViewHolder, int)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ViewHolder $r1;
        int $i0;
        boolean $z0;
        java.util.List $r2;
        android.view.View $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label1;

        $r1.<android.support.v7.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState> = $i0;

        $r2 = r0.<android.support.v7.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return 0;

     label1:
        $r3 = $r1.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($r3, $i0);

        return 1;
    }
    public void setClipToPadding(boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v7.widget.RecyclerView: boolean mClipToPadding>;

        if $z0 == $z1 goto label1;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void invalidateGlows()>();

     label1:
        r0.<android.support.v7.widget.RecyclerView: boolean mClipToPadding> = $z0;

        specialinvoke r0.<android.view.ViewGroup: void setClipToPadding(boolean)>($z0);

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mFirstLayoutComplete>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void requestLayout()>();

     label2:
        return;
    }
    void setDataSetChangedAfterLayout()
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        android.support.v7.widget.ChildHelper $r1;
        int $i0, i1;
        android.view.View $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        android.support.v7.widget.RecyclerView$Recycler $r4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.support.v7.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout> = 1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label4;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i1);

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r2);

        if $r3 == null goto label3;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label3;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: void addFlags(int)>(512);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Recycler: void setAdapterPositionsAsUnknown()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void markKnownViewsInvalid()>();

        return;
    }
    public void setHasFixedSize(boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        r0.<android.support.v7.widget.RecyclerView: boolean mHasFixedSize> = $z0;

        return;
    }
    public void setItemAnimator(android.support.v7.widget.RecyclerView$ItemAnimator)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ItemAnimator $r1, $r2;
        android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ItemAnimator;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ItemAnimator: void endAnimations()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ItemAnimator: void setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)>(null);

     label1:
        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator> = $r1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r1 == null goto label2;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$ItemAnimator: void setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)>($r3);

     label2:
        return;
    }
    public void setItemViewCacheSize(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;
        android.support.v7.widget.RecyclerView$Recycler $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Recycler: void setViewCacheSize(int)>($i0);

        return;
    }
    public void setLayoutFrozen(boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0, $z1;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        android.support.v7.widget.RecyclerView$Adapter $r2;
        long $l0;
        android.view.MotionEvent $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 == $z1 goto label3;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>("Do not setLayoutFrozen in layout or scroll");

        if $z0 != 0 goto label2;

        r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen> = 0;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutRequestEaten>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter mAdapter>;

        if $r2 == null goto label1;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void requestLayout()>();

     label1:
        r0.<android.support.v7.widget.RecyclerView: boolean mLayoutRequestEaten> = 0;

        return;

     label2:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l0, $l0, 3, 0.0F, 0.0F, 0);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>($r3);

        r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen> = 1;

        r0.<android.support.v7.widget.RecyclerView: boolean mIgnoreMotionEventTillDown> = 1;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void stopScroll()>();

     label3:
        return;
    }
    public void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager)
    {
        android.support.v7.widget.RecyclerView r0, $r6;
        android.support.v7.widget.RecyclerView$LayoutManager $r1, $r2;
        android.support.v7.widget.RecyclerView$ItemAnimator $r3;
        android.support.v7.widget.RecyclerView$Recycler $r4;
        boolean $z0;
        android.support.v7.widget.ChildHelper $r5;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$LayoutManager;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != $r2 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void stopScroll()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 == null goto label5;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r3 == null goto label2;

        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ItemAnimator: void endAnimations()>();

     label2:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler)>($r4);

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler)>($r4);

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Recycler: void clear()>();

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mIsAttached>;

        if $z0 == 0 goto label3;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler)>(r0, $r4);

     label3:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: void setRecyclerView(android.support.v7.widget.RecyclerView)>(null);

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout> = null;

     label4:
        $r5 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        virtualinvoke $r5.<android.support.v7.widget.ChildHelper: void removeAllViewsUnfiltered()>();

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout> = $r1;

        if $r1 == null goto label7;

        $r6 = $r1.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r6 == null goto label6;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LayoutManager ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already attached to a RecyclerView: ");

        r0 = $r1.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label5:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Recycler: void clear()>();

        goto label4;

     label6:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void setRecyclerView(android.support.v7.widget.RecyclerView)>(r0);

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mIsAttached>;

        if $z0 == 0 goto label7;

        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void dispatchAttachedToWindow(android.support.v7.widget.RecyclerView)>(r0);

     label7:
        $r4 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$Recycler: void updateViewCacheSize()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void requestLayout()>();

        return;
    }
    public void setNestedScrollingEnabled(boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>($z0);

        return;
    }
    public void setOnFlingListener(android.support.v7.widget.RecyclerView$OnFlingListener)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$OnFlingListener $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$OnFlingListener;

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnFlingListener mOnFlingListener> = $r1;

        return;
    }
    public void setOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$OnScrollListener $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$OnScrollListener;

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener> = $r1;

        return;
    }
    public void setPreserveFocusAfterLayout(boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $z0 := @parameter0: boolean;

        r0.<android.support.v7.widget.RecyclerView: boolean mPreserveFocusAfterLayout> = $z0;

        return;
    }
    public void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$RecycledViewPool $r1;
        android.support.v7.widget.RecyclerView$Recycler $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$RecycledViewPool;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$Recycler: void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool)>($r1);

        return;
    }
    public void setRecyclerListener(android.support.v7.widget.RecyclerView$RecyclerListener)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$RecyclerListener $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$RecyclerListener;

        r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$RecyclerListener mRecyclerListener> = $r1;

        return;
    }
    void setScrollState(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v7.widget.RecyclerView: int mScrollState>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        r0.<android.support.v7.widget.RecyclerView: int mScrollState> = $i0;

        if $i0 == 2 goto label2;

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void stopScrollersInternal()>();

     label2:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void dispatchOnScrollStateChanged(int)>($i0);

        return;
    }
    public void setScrollingTouchSlop(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;
        android.content.Context $r1;
        android.view.ViewConfiguration $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: android.content.Context getContext()>();

        $r2 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setScrollingTouchSlop(): bad argument constant ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; using default value");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecyclerView", $r4);

     label2:
        $i0 = virtualinvoke $r2.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.support.v7.widget.RecyclerView: int mTouchSlop> = $i0;

        return;

     label3:
        $i0 = virtualinvoke $r2.<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>();

        r0.<android.support.v7.widget.RecyclerView: int mTouchSlop> = $i0;

        return;
    }
    public void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$ViewCacheExtension $r1;
        android.support.v7.widget.RecyclerView$Recycler $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewCacheExtension;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$Recycler: void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension)>($r1);

        return;
    }
    boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.accessibility.AccessibilityEvent $r1;
        boolean $z0;
        int i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView: boolean isComputingLayout()>();

        if $z0 == 0 goto label3;

        i0 = 0;

        if $r1 == null goto label1;

        i0 = staticinvoke <android.support.v4.view.accessibility.AccessibilityEventCompat: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)>($r1);

     label1:
        if i0 != 0 goto label2;

        i0 = 0;

     label2:
        $i1 = r0.<android.support.v7.widget.RecyclerView: int mEatenAccessibilityChangeFlags>;

        i0 = $i1 | i0;

        r0.<android.support.v7.widget.RecyclerView: int mEatenAccessibilityChangeFlags> = i0;

        return 1;

     label3:
        return 0;
    }
    public void smoothScrollBy(int, int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>($i0, $i1, null);

        return;
    }
    public void smoothScrollBy(int, int, android.view.animation.Interpolator)
    {
        android.support.v7.widget.RecyclerView r0;
        android.view.animation.Interpolator $r1;
        int $i0, $i1;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        boolean $z0;
        android.support.v7.widget.RecyclerView$ViewFlinger $r3;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.view.animation.Interpolator;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot smooth scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label1:
        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 != 0 goto label5;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 != 0 goto label2;

        $i0 = 0;

     label2:
        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 != 0 goto label3;

        $i1 = 0;

     label3:
        if $i0 != 0 goto label4;

        if $i1 == 0 goto label5;

     label4:
        $r3 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewFlinger mViewFlinger>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewFlinger: void smoothScrollBy(int,int,android.view.animation.Interpolator)>($i0, $i1, $r1);

     label5:
        return;
    }
    public void smoothScrollToPosition(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;
        boolean $z0;
        android.support.v7.widget.RecyclerView$LayoutManager $r1;
        android.support.v7.widget.RecyclerView$State $r2;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $z0 = r0.<android.support.v7.widget.RecyclerView: boolean mLayoutFrozen>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        if $r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "Cannot smooth scroll without a LayoutManager set. Call setLayoutManager with a non-null argument.");

        return;

     label2:
        $r1 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager mLayout>;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$LayoutManager: void smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int)>(r0, $r2, $i0);

        return;
    }
    public boolean startNestedScroll(int)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>($i0);

        return $z0;
    }
    public void stopNestedScroll()
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 = specialinvoke r0.<android.support.v7.widget.RecyclerView: android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper()>();

        virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: void stopNestedScroll()>();

        return;
    }
    public void stopScroll()
    {
        android.support.v7.widget.RecyclerView r0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setScrollState(int)>(0);

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void stopScrollersInternal()>();

        return;
    }
    public void swapAdapter(android.support.v7.widget.RecyclerView$Adapter, boolean)
    {
        android.support.v7.widget.RecyclerView r0;
        android.support.v7.widget.RecyclerView$Adapter $r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Adapter;

        $z0 := @parameter1: boolean;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setLayoutFrozen(boolean)>(0);

        specialinvoke r0.<android.support.v7.widget.RecyclerView: void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean)>($r1, 1, $z0);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void setDataSetChangedAfterLayout()>();

        virtualinvoke r0.<android.support.v7.widget.RecyclerView: void requestLayout()>();

        return;
    }
    void viewRangeUpdate(int, int, java.lang.Object)
    {
        android.support.v7.widget.RecyclerView r0;
        int $i0, $i1, i2, $i3, i4, $i5;
        java.lang.Object $r1;
        android.support.v7.widget.ChildHelper $r2;
        android.view.View $r3;
        android.support.v7.widget.RecyclerView$ViewHolder $r4;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.v7.widget.RecyclerView$LayoutParams $r6;
        android.support.v7.widget.RecyclerView$Recycler $r7;

        r0 := @this: android.support.v7.widget.RecyclerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.lang.Object;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $i3 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: int getUnfilteredChildCount()>();

        i2 = $i0 + $i1;

        i4 = 0;

     label1:
        if i4 >= $i3 goto label4;

        $r2 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        $r3 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: android.view.View getUnfilteredChildAt(int)>(i4);

        $r4 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>($r3);

        if $r4 == null goto label2;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $i5 = $r4.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i5 < $i0 goto label2;

        $i5 = $r4.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        if $i5 >= i2 goto label2;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ViewHolder: void addFlags(int)>(2);

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ViewHolder: void addChangePayload(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (android.support.v7.widget.RecyclerView$LayoutParams) $r5;

        $r6.<android.support.v7.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        goto label2;

     label4:
        $r7 = r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r7.<android.support.v7.widget.RecyclerView$Recycler: void viewRangeUpdate(int,int)>($i0, $i1);

        return;
    }
