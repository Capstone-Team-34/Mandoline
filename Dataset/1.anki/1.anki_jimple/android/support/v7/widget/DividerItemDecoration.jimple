android.support.v7.widget.DividerItemDecoration extends android.support.v7.widget.RecyclerView$ItemDecoration
private static final int[] ATTRS
public static final int HORIZONTAL
public static final int VERTICAL
private final android.graphics.Rect mBounds
private android.graphics.drawable.Drawable mDivider
private int mOrientation
    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[1];

        $r0[0] = 16843284;

        <android.support.v7.widget.DividerItemDecoration: int[] ATTRS> = $r0;

        return;
    }
    public void <init>(android.content.Context, int)
    {
        android.support.v7.widget.DividerItemDecoration r0;
        android.content.Context $r1;
        int $i0;
        android.graphics.Rect $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.support.v7.widget.DividerItemDecoration;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$ItemDecoration: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.Rect mBounds> = $r2;

        $r3 = <android.support.v7.widget.DividerItemDecoration: int[] ATTRS>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r3);

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider> = $r5;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<android.support.v7.widget.DividerItemDecoration: void setOrientation(int)>($i0);

        return;
    }
    private void drawHorizontal(android.graphics.Canvas, android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.DividerItemDecoration r0;
        android.graphics.Canvas $r1;
        android.support.v7.widget.RecyclerView $r2;
        int i0, i1, $i2, i3, $i4, $i5;
        boolean $z0;
        android.view.View $r3;
        android.support.v7.widget.RecyclerView$LayoutManager $r4;
        android.graphics.Rect $r5;
        float $f0;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: android.support.v7.widget.DividerItemDecoration;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: boolean getClipToPadding()>();

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getPaddingTop()>();

        i3 = $i2;

        $i4 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getHeight()>();

        $i5 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getPaddingBottom()>();

        $i4 = $i4 - $i5;

        $i5 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getPaddingLeft()>();

        i1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getWidth()>();

        i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getPaddingRight()>();

        i1 = i1 - i0;

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>($i5, $i2, i1, $i4);

     label1:
        $i2 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getChildCount()>();

        $i5 = 0;

     label2:
        if $i5 >= $i2 goto label4;

        $r3 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: android.view.View getChildAt(int)>($i5);

        $r4 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager()>();

        $r5 = r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.Rect mBounds>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>($r3, $r5);

        $r5 = r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.Rect mBounds>;

        i1 = $r5.<android.graphics.Rect: int right>;

        $f0 = staticinvoke <android.support.v4.view.ViewCompat: float getTranslationX(android.view.View)>($r3);

        i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        i1 = i1 + i0;

        $r6 = r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        i0 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i0 = i1 - i0;

        $r6 = r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i0, i3, i1, $i4);

        $r6 = r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        $i5 = $i5 + 1;

        goto label2;

     label3:
        i3 = 0;

        $i4 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getHeight()>();

        goto label1;

     label4:
        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;
    }
    private void drawVertical(android.graphics.Canvas, android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.DividerItemDecoration r0;
        android.graphics.Canvas $r1;
        android.support.v7.widget.RecyclerView $r2;
        int i0, i1, $i2, i3, $i4, $i5;
        boolean $z0;
        android.view.View $r3;
        android.graphics.Rect $r4;
        float $f0;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.support.v7.widget.DividerItemDecoration;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: boolean getClipToPadding()>();

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getPaddingLeft()>();

        i3 = $i2;

        $i4 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getWidth()>();

        $i5 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getPaddingRight()>();

        $i4 = $i4 - $i5;

        $i5 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getPaddingTop()>();

        i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getHeight()>();

        i1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getPaddingBottom()>();

        i0 = i0 - i1;

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>($i2, $i5, $i4, i0);

     label1:
        $i2 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getChildCount()>();

        $i5 = 0;

     label2:
        if $i5 >= $i2 goto label4;

        $r3 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: android.view.View getChildAt(int)>($i5);

        $r4 = r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.Rect mBounds>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>($r3, $r4);

        $r4 = r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.Rect mBounds>;

        i0 = $r4.<android.graphics.Rect: int bottom>;

        $f0 = staticinvoke <android.support.v4.view.ViewCompat: float getTranslationY(android.view.View)>($r3);

        i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        i0 = i0 + i1;

        $r5 = r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        i1 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        i1 = i0 - i1;

        $r5 = r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i3, i1, $i4, i0);

        $r5 = r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        $i5 = $i5 + 1;

        goto label2;

     label3:
        i3 = 0;

        $i4 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getWidth()>();

        goto label1;

     label4:
        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;
    }
    public void getItemOffsets(android.graphics.Rect, android.view.View, android.support.v7.widget.RecyclerView, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.DividerItemDecoration r0;
        android.graphics.Rect $r1;
        android.view.View $r2;
        android.support.v7.widget.RecyclerView $r3;
        android.support.v7.widget.RecyclerView$State $r4;
        int $i0;
        android.graphics.drawable.Drawable $r5;

        r0 := @this: android.support.v7.widget.DividerItemDecoration;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.support.v7.widget.RecyclerView;

        $r4 := @parameter3: android.support.v7.widget.RecyclerView$State;

        $i0 = r0.<android.support.v7.widget.DividerItemDecoration: int mOrientation>;

        if $i0 != 1 goto label1;

        $r5 = r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        $i0 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, $i0);

        return;

     label1:
        $r5 = r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider>;

        $i0 = virtualinvoke $r5.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, 0);

        return;
    }
    public void onDraw(android.graphics.Canvas, android.support.v7.widget.RecyclerView, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.DividerItemDecoration r0;
        android.graphics.Canvas $r1;
        android.support.v7.widget.RecyclerView $r2;
        android.support.v7.widget.RecyclerView$State $r3;
        android.support.v7.widget.RecyclerView$LayoutManager $r4;
        int $i0;

        r0 := @this: android.support.v7.widget.DividerItemDecoration;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView;

        $r3 := @parameter2: android.support.v7.widget.RecyclerView$State;

        $r4 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager()>();

        if $r4 != null goto label1;

        return;

     label1:
        $i0 = r0.<android.support.v7.widget.DividerItemDecoration: int mOrientation>;

        if $i0 != 1 goto label2;

        specialinvoke r0.<android.support.v7.widget.DividerItemDecoration: void drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)>($r1, $r2);

        return;

     label2:
        specialinvoke r0.<android.support.v7.widget.DividerItemDecoration: void drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)>($r1, $r2);

        return;
    }
    public void setDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.widget.DividerItemDecoration r0;
        android.graphics.drawable.Drawable $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.support.v7.widget.DividerItemDecoration;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Drawable cannot be null.");

        throw $r2;

     label1:
        r0.<android.support.v7.widget.DividerItemDecoration: android.graphics.drawable.Drawable mDivider> = $r1;

        return;
    }
    public void setOrientation(int)
    {
        android.support.v7.widget.DividerItemDecoration r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.support.v7.widget.DividerItemDecoration;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid orientation. It should be either HORIZONTAL or VERTICAL");

        throw $r1;

     label1:
        r0.<android.support.v7.widget.DividerItemDecoration: int mOrientation> = $i0;

        return;
    }
