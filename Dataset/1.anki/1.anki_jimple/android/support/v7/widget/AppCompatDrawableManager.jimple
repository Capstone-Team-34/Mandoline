android.support.v7.widget.AppCompatDrawableManager extends java.lang.Object
private static final int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY
private static final int[] COLORFILTER_COLOR_CONTROL_ACTIVATED
private static final int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL
private static final android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE
private static final boolean DEBUG
private static final android.graphics.PorterDuff$Mode DEFAULT_MODE
private static android.support.v7.widget.AppCompatDrawableManager INSTANCE
private static final java.lang.String PLATFORM_VD_CLAZZ
private static final java.lang.String SKIP_DRAWABLE_TAG
private static final java.lang.String TAG
private static final int[] TINT_CHECKABLE_BUTTON_LIST
private static final int[] TINT_COLOR_CONTROL_NORMAL
private static final int[] TINT_COLOR_CONTROL_STATE_LIST
private android.support.v4.util.ArrayMap mDelegates
private final java.lang.Object mDrawableCacheLock
private final java.util.WeakHashMap mDrawableCaches
private boolean mHasCheckedVectorDrawableSetup
private android.util.SparseArray mKnownDrawableIdTags
private java.util.WeakHashMap mTintLists
private android.util.TypedValue mTypedValue
    static void <clinit>()
    {
        android.graphics.PorterDuff$Mode $r0;
        android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache $r1;
        int[] $r2;
        int $i0;

        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE> = $r0;

        $r1 = new android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache;

        specialinvoke $r1.<android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: void <init>(int)>(6);

        <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE> = $r1;

        $r2 = newarray (int)[3];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_textfield_search_default_mtrl_alpha>;

        $r2[0] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_textfield_default_mtrl_alpha>;

        $r2[1] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ab_share_pack_mtrl_alpha>;

        $r2[2] = $i0;

        <android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL> = $r2;

        $r2 = newarray (int)[7];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha>;

        $r2[0] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_seekbar_tick_mark_material>;

        $r2[1] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_share_mtrl_alpha>;

        $r2[2] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha>;

        $r2[3] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_cut_mtrl_alpha>;

        $r2[4] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha>;

        $r2[5] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha>;

        $r2[6] = $i0;

        <android.support.v7.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_NORMAL> = $r2;

        $r2 = newarray (int)[10];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_textfield_activated_mtrl_alpha>;

        $r2[0] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_textfield_search_activated_mtrl_alpha>;

        $r2[1] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha>;

        $r2[2] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_text_cursor_material>;

        $r2[3] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_dark>;

        $r2[4] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_dark>;

        $r2[5] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_dark>;

        $r2[6] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_light>;

        $r2[7] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_light>;

        $r2[8] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_light>;

        $r2[9] = $i0;

        <android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED> = $r2;

        $r2 = newarray (int)[3];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_popup_background_mtrl_mult>;

        $r2[0] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_internal_bg>;

        $r2[1] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult>;

        $r2[2] = $i0;

        <android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY> = $r2;

        $r2 = newarray (int)[2];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_tab_indicator_material>;

        $r2[0] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_textfield_search_material>;

        $r2[1] = $i0;

        <android.support.v7.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_STATE_LIST> = $r2;

        $r2 = newarray (int)[2];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_btn_check_material>;

        $r2[0] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_btn_radio_material>;

        $r2[1] = $i0;

        <android.support.v7.widget.AppCompatDrawableManager: int[] TINT_CHECKABLE_BUTTON_LIST> = $r2;

        return;
    }
    public void <init>()
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        java.lang.Object $r1;
        java.util.WeakHashMap $r2;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.support.v7.widget.AppCompatDrawableManager: java.lang.Object mDrawableCacheLock> = $r1;

        $r2 = new java.util.WeakHashMap;

        specialinvoke $r2.<java.util.WeakHashMap: void <init>(int)>(0);

        r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches> = $r2;

        return;
    }
    private void addDelegate(java.lang.String, android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        java.lang.String $r1;
        android.support.v7.widget.AppCompatDrawableManager$InflateDelegate $r2;
        android.support.v4.util.ArrayMap $r3;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.support.v7.widget.AppCompatDrawableManager$InflateDelegate;

        $r3 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        if $r3 != null goto label1;

        $r3 = new android.support.v4.util.ArrayMap;

        specialinvoke $r3.<android.support.v4.util.ArrayMap: void <init>()>();

        r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates> = $r3;

     label1:
        $r3 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        virtualinvoke $r3.<android.support.v4.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }
    private boolean addDrawableToCache(android.content.Context, long, android.graphics.drawable.Drawable)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        long $l0;
        android.graphics.drawable.Drawable $r2;
        java.lang.Object $r3, $r6;
        android.graphics.drawable.Drawable$ConstantState $r4;
        java.util.WeakHashMap $r5;
        android.support.v4.util.LongSparseArray r7;
        java.lang.ref.WeakReference $r8;
        java.lang.Throwable $r9;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        $r2 := @parameter2: android.graphics.drawable.Drawable;

        $r4 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if $r4 == null goto label6;

        $r3 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.lang.Object mDrawableCacheLock>;

        entermonitor $r3;

     label1:
        $r5 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches>;

        $r6 = virtualinvoke $r5.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r7 = (android.support.v4.util.LongSparseArray) $r6;

        if r7 != null goto label2;

        r7 = new android.support.v4.util.LongSparseArray;

        specialinvoke r7.<android.support.v4.util.LongSparseArray: void <init>()>();

        $r5 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches>;

        virtualinvoke $r5.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r7);

     label2:
        $r8 = new java.lang.ref.WeakReference;

        specialinvoke $r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r4);

        virtualinvoke r7.<android.support.v4.util.LongSparseArray: void put(long,java.lang.Object)>($l0, $r8);

        exitmonitor $r3;

     label3:
        return 1;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r9;

     label6:
        return 0;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
    private void addTintListToCache(android.content.Context, int, android.content.res.ColorStateList)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        int $i0;
        android.content.res.ColorStateList $r2;
        java.lang.Object $r3;
        java.util.WeakHashMap $r4;
        android.util.SparseArray r5;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.content.res.ColorStateList;

        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        if $r4 != null goto label1;

        $r4 = new java.util.WeakHashMap;

        specialinvoke $r4.<java.util.WeakHashMap: void <init>()>();

        r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists> = $r4;

     label1:
        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        $r3 = virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (android.util.SparseArray) $r3;

        if r5 != null goto label2;

        r5 = new android.util.SparseArray;

        specialinvoke r5.<android.util.SparseArray: void <init>()>();

        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r5);

     label2:
        virtualinvoke r5.<android.util.SparseArray: void append(int,java.lang.Object)>($i0, $r2);

        return;
    }
    private static boolean arrayContains(int[], int)
    {
        int[] $r0;
        int $i0, i1, $i2, $i3;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i2 = lengthof $r0;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        i1 = $r0[$i3];

        if i1 != $i0 goto label2;

        return 1;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return 0;
    }
    private void checkVectorDrawableSetup(android.content.Context)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        boolean $z0;
        int $i0;
        android.graphics.drawable.Drawable $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $z0 = r0.<android.support.v7.widget.AppCompatDrawableManager: boolean mHasCheckedVectorDrawableSetup>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.support.v7.widget.AppCompatDrawableManager: boolean mHasCheckedVectorDrawableSetup> = 1;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_vector_test>;

        $r2 = virtualinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

        if $r2 == null goto label2;

        $z0 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean isVectorDrawable(android.graphics.drawable.Drawable)>($r2);

        if $z0 != 0 goto label3;

     label2:
        r0.<android.support.v7.widget.AppCompatDrawableManager: boolean mHasCheckedVectorDrawableSetup> = 0;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This app has been built with an incorrect configuration. Please configure your build for VectorDrawableCompat.");

        throw $r3;

     label3:
        return;
    }
    private android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        android.content.res.ColorStateList $r2;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $r2 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($r1, 0);

        return $r2;
    }
    private android.content.res.ColorStateList createButtonColorStateList(android.content.Context, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        int $i0, $i1, $i2, $i3;
        int[] r2, $r4;
        int[][] r3;
        android.content.res.ColorStateList $r5;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        r3 = newarray (int[])[4];

        r2 = newarray (int)[4];

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlHighlight>;

        $i1 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        $i2 = <android.support.v7.appcompat.R$attr: int colorButtonNormal>;

        $i2 = staticinvoke <android.support.v7.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i2);

        $r4 = <android.support.v7.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r3[0] = $r4;

        r2[0] = $i2;

        $r4 = <android.support.v7.widget.ThemeUtils: int[] PRESSED_STATE_SET>;

        r3[1] = $r4;

        $i3 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeColors(int,int)>($i1, $i0);

        r2[1] = $i3;

        $i2 = 1 + 1;

        $r4 = <android.support.v7.widget.ThemeUtils: int[] FOCUSED_STATE_SET>;

        r3[$i2] = $r4;

        $i1 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeColors(int,int)>($i1, $i0);

        r2[$i2] = $i1;

        $i1 = $i2 + 1;

        $r4 = <android.support.v7.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r3[$i1] = $r4;

        r2[$i1] = $i0;

        $r5 = new android.content.res.ColorStateList;

        specialinvoke $r5.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r3, r2);

        return $r5;
    }
    private static long createCacheKey(android.util.TypedValue)
    {
        android.util.TypedValue $r0;
        int $i0;
        long $l1, $l2;

        $r0 := @parameter0: android.util.TypedValue;

        $i0 = $r0.<android.util.TypedValue: int assetCookie>;

        $l1 = (long) $i0;

        $l1 = $l1 << 32;

        $i0 = $r0.<android.util.TypedValue: int data>;

        $l2 = (long) $i0;

        $l1 = $l1 | $l2;

        return $l1;
    }
    private android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        int $i0;
        android.content.res.ColorStateList $r2;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 = <android.support.v7.appcompat.R$attr: int colorAccent>;

        $i0 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r2 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($r1, $i0);

        return $r2;
    }
    private android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        int $i0;
        android.content.res.ColorStateList $r2;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 = <android.support.v7.appcompat.R$attr: int colorButtonNormal>;

        $i0 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r2 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($r1, $i0);

        return $r2;
    }
    private android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        int $i0, $i2;
        android.util.TypedValue r2, $r7;
        android.content.res.Resources $r3;
        long $l1;
        android.graphics.drawable.Drawable $r4, r5;
        android.graphics.drawable.Drawable[] $r6;
        android.graphics.drawable.LayerDrawable $r8;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        r2 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue>;

        if r2 != null goto label1;

        $r7 = new android.util.TypedValue;

        specialinvoke $r7.<android.util.TypedValue: void <init>()>();

        r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue> = $r7;

     label1:
        r2 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue>;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke $r3.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, r2, 1);

        $l1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: long createCacheKey(android.util.TypedValue)>(r2);

        $r4 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>($r1, $l1);

        r5 = $r4;

        if $r4 == null goto label2;

        return $r4;

     label2:
        $i2 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_top_material>;

        if $i0 != $i2 goto label3;

        $r8 = new android.graphics.drawable.LayerDrawable;

        r5 = $r8;

        $r6 = newarray (android.graphics.drawable.Drawable)[2];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_internal_bg>;

        $r4 = virtualinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

        $r6[0] = $r4;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha>;

        $r4 = virtualinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

        $r6[1] = $r4;

        specialinvoke $r8.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r6);

     label3:
        if r5 == null goto label4;

        $i0 = r2.<android.util.TypedValue: int changingConfigurations>;

        virtualinvoke r5.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0);

        specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>($r1, $l1, r5);

     label4:
        return r5;
    }
    private static android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList, android.graphics.PorterDuff$Mode, int[])
    {
        android.content.res.ColorStateList $r0;
        android.graphics.PorterDuff$Mode $r1;
        int[] $r2;
        int $i0;
        android.graphics.PorterDuffColorFilter $r3;

        $r0 := @parameter0: android.content.res.ColorStateList;

        $r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $r2 := @parameter2: int[];

        if $r0 == null goto label1;

        if $r1 != null goto label2;

     label1:
        return null;

     label2:
        $i0 = virtualinvoke $r0.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, 0);

        $r3 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r1);

        return $r3;
    }
    public static android.support.v7.widget.AppCompatDrawableManager get()
    {
        android.support.v7.widget.AppCompatDrawableManager $r0;

        $r0 = <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager INSTANCE>;

        if $r0 != null goto label1;

        $r0 = new android.support.v7.widget.AppCompatDrawableManager;

        specialinvoke $r0.<android.support.v7.widget.AppCompatDrawableManager: void <init>()>();

        <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager INSTANCE> = $r0;

        $r0 = <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager INSTANCE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager)>($r0);

     label1:
        $r0 = <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager INSTANCE>;

        return $r0;
    }
    private android.graphics.drawable.Drawable getCachedDrawable(android.content.Context, long)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        long $l0;
        java.lang.Object $r2, $r4;
        java.util.WeakHashMap $r3;
        android.support.v4.util.LongSparseArray r5;
        java.lang.ref.WeakReference r6;
        android.graphics.drawable.Drawable$ConstantState r7;
        android.content.res.Resources $r8;
        android.graphics.drawable.Drawable $r9;
        java.lang.Throwable $r10;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        $r2 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.lang.Object mDrawableCacheLock>;

        entermonitor $r2;

     label1:
        $r3 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches>;

        $r4 = virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (android.support.v4.util.LongSparseArray) $r4;

        if r5 != null goto label3;

        exitmonitor $r2;

     label2:
        return null;

     label3:
        $r4 = virtualinvoke r5.<android.support.v4.util.LongSparseArray: java.lang.Object get(long)>($l0);

        r6 = (java.lang.ref.WeakReference) $r4;

        if r6 == null goto label8;

        $r4 = virtualinvoke r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r7 = (android.graphics.drawable.Drawable$ConstantState) $r4;

        if r7 == null goto label7;

        $r8 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke r7.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r8);

        exitmonitor $r2;

     label4:
        return $r9;

     label5:
        $r10 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r10;

     label7:
        virtualinvoke r5.<android.support.v4.util.LongSparseArray: void delete(long)>($l0);

     label8:
        exitmonitor $r2;

     label9:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.Throwable from label7 to label9 with label5;
    }
    public static android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        int $i0;
        android.graphics.PorterDuff$Mode $r0;
        android.graphics.PorterDuffColorFilter $r1;
        android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.PorterDuff$Mode;

        $r2 = <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE>;

        $r1 = virtualinvoke $r2.<android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)>($i0, $r0);

        if $r1 != null goto label1;

        $r1 = new android.graphics.PorterDuffColorFilter;

        specialinvoke $r1.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>($i0, $r0);

        $r2 = <android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE>;

        virtualinvoke $r2.<android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)>($i0, $r0, $r1);

     label1:
        return $r1;
    }
    private android.content.res.ColorStateList getTintListFromCache(android.content.Context, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        int $i0;
        java.util.WeakHashMap $r2;
        java.lang.Object $r3;
        android.util.SparseArray r4;
        android.content.res.ColorStateList $r5;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        $r3 = virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (android.util.SparseArray) $r3;

        if r4 == null goto label1;

        $r3 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r5 = (android.content.res.ColorStateList) $r3;

        return $r5;

     label1:
        return null;
    }
    static android.graphics.PorterDuff$Mode getTintMode(int)
    {
        int $i0, $i1;
        android.graphics.PorterDuff$Mode r0;

        $i0 := @parameter0: int;

        $i1 = <android.support.v7.appcompat.R$drawable: int abc_switch_thumb_material>;

        if $i0 != $i1 goto label1;

        r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        return r0;

     label1:
        return null;
    }
    private static void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager)
    {
        android.support.v7.widget.AppCompatDrawableManager $r0;
        int $i0;
        android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate $r1;
        android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate $r2;

        $r0 := @parameter0: android.support.v7.widget.AppCompatDrawableManager;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 24 goto label1;

        $r1 = new android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate;

        specialinvoke $r1.<android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate: void <init>()>();

        specialinvoke $r0.<android.support.v7.widget.AppCompatDrawableManager: void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)>("vector", $r1);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        $r2 = new android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate;

        specialinvoke $r2.<android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate: void <init>()>();

        specialinvoke $r0.<android.support.v7.widget.AppCompatDrawableManager: void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)>("animated-vector", $r2);

     label1:
        return;
    }
    private static boolean isVectorDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;
        boolean $z0;
        java.lang.String $r1, $r3;
        java.lang.Class $r2;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = $r0 instanceof android.support.graphics.drawable.VectorDrawableCompat;

        if $z0 != 0 goto label1;

        $r1 = "android.graphics.drawable.VectorDrawable";

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    private android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        int $i0, $i2;
        java.lang.Exception r2;
        android.util.TypedValue r3;
        android.support.v4.util.ArrayMap $r4;
        boolean $z0;
        android.util.SparseArray $r5;
        java.lang.Object $r6;
        java.lang.String r7, $r8;
        android.content.res.Resources $r9;
        long $l1;
        android.graphics.drawable.Drawable $r10, r11;
        java.lang.CharSequence $r12;
        android.content.res.XmlResourceParser $r13;
        android.util.AttributeSet $r14;
        org.xmlpull.v1.XmlPullParserException $r15;
        android.support.v7.widget.AppCompatDrawableManager$InflateDelegate r16;
        android.content.res.Resources$Theme $r17;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        if $r4 == null goto label19;

        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        $z0 = virtualinvoke $r4.<android.support.v4.util.ArrayMap: boolean isEmpty()>();

        if $z0 != 0 goto label19;

        $r5 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.SparseArray mKnownDrawableIdTags>;

        if $r5 == null goto label02;

        $r5 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.SparseArray mKnownDrawableIdTags>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r7 = (java.lang.String) $r6;

        $r8 = "appcompat_skip_skip";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z0 != 0 goto label01;

        if r7 == null goto label03;

        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        $r6 = virtualinvoke $r4.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        if $r6 != null goto label03;

     label01:
        return null;

     label02:
        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.SparseArray mKnownDrawableIdTags> = $r5;

     label03:
        r3 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue>;

        if r3 != null goto label04;

        r3 = new android.util.TypedValue;

        specialinvoke r3.<android.util.TypedValue: void <init>()>();

        r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue> = r3;

     label04:
        r3 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue>;

        $r9 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke $r9.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, r3, 1);

        $l1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: long createCacheKey(android.util.TypedValue)>(r3);

        $r10 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>($r1, $l1);

        r11 = $r10;

        if $r10 != null goto label20;

        $r12 = r3.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r12 == null goto label11;

        $r12 = r3.<android.util.TypedValue: java.lang.CharSequence string>;

        r7 = interfaceinvoke $r12.<java.lang.CharSequence: java.lang.String toString()>();

        $z0 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z0 == 0 goto label11;

     label05:
        $r13 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0);

        $r14 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r13);

     label06:
        $i2 = interfaceinvoke $r13.<org.xmlpull.v1.XmlPullParser: int next()>();

     label07:
        if $i2 == 2 goto label08;

        if $i2 != 1 goto label06;

     label08:
        if $i2 == 2 goto label12;

        $r15 = new org.xmlpull.v1.XmlPullParserException;

     label09:
        specialinvoke $r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r15;

     label10:
        r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AppCompatDrawableManager", "Exception while inflating drawable", r2);

     label11:
        if r11 != null goto label21;

        $r5 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.SparseArray mKnownDrawableIdTags>;

        virtualinvoke $r5.<android.util.SparseArray: void append(int,java.lang.Object)>($i0, "appcompat_skip_skip");

        return r11;

     label12:
        r7 = interfaceinvoke $r13.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.util.SparseArray mKnownDrawableIdTags>;

        virtualinvoke $r5.<android.util.SparseArray: void append(int,java.lang.Object)>($i0, r7);

        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        $r6 = virtualinvoke $r4.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r16 = (android.support.v7.widget.AppCompatDrawableManager$InflateDelegate) $r6;

     label13:
        if r16 == null goto label16;

     label14:
        $r17 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r10 = interfaceinvoke r16.<android.support.v7.widget.AppCompatDrawableManager$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r13, $r14, $r17);

     label15:
        r11 = $r10;

     label16:
        if r11 == null goto label11;

     label17:
        $i2 = r3.<android.util.TypedValue: int changingConfigurations>;

        virtualinvoke r11.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i2);

        $z0 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>($r1, $l1, r11);

     label18:
        if $z0 == 0 goto label11;

        goto label11;

     label19:
        return null;

     label20:
        return $r10;

     label21:
        return r11;

        catch java.lang.Exception from label05 to label07 with label10;
        catch java.lang.Exception from label09 to label10 with label10;
        catch java.lang.Exception from label12 to label13 with label10;
        catch java.lang.Exception from label14 to label15 with label10;
        catch java.lang.Exception from label17 to label18 with label10;
    }
    private void removeDelegate(java.lang.String, android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        java.lang.String $r1;
        android.support.v7.widget.AppCompatDrawableManager$InflateDelegate $r2;
        java.lang.Object $r3;
        android.support.v4.util.ArrayMap $r4;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.support.v7.widget.AppCompatDrawableManager$InflateDelegate;

        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        if $r4 == null goto label1;

        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        $r3 = virtualinvoke $r4.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != $r2 goto label1;

        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: android.support.v4.util.ArrayMap mDelegates>;

        virtualinvoke $r4.<android.support.v4.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r1);

     label1:
        return;
    }
    private static void setPorterDuffColorFilter(android.graphics.drawable.Drawable, int, android.graphics.PorterDuff$Mode)
    {
        int $i0;
        android.graphics.drawable.Drawable $r0;
        android.graphics.PorterDuff$Mode $r1;
        boolean $z0;
        android.graphics.PorterDuffColorFilter $r2;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.PorterDuff$Mode;

        $z0 = staticinvoke <android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r0);

        if $z0 == 0 goto label1;

        $r0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label1:
        if $r1 != null goto label2;

        $r1 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

     label2:
        $r2 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r1);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r2);

        return;
    }
    private android.graphics.drawable.Drawable tintDrawable(android.content.Context, int, boolean, android.graphics.drawable.Drawable)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        int $i0, $i1;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r2, $r6;
        android.content.res.ColorStateList $r3;
        android.graphics.PorterDuff$Mode $r4;
        android.graphics.drawable.LayerDrawable r5;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 := @parameter3: android.graphics.drawable.Drawable;

        $r3 = virtualinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)>($r1, $i0);

        if $r3 == null goto label2;

        $z0 = staticinvoke <android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r2);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label1:
        $r2 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>($r2);

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r2, $r3);

        $r4 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode getTintMode(int)>($i0);

        if $r4 == null goto label6;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r2, $r4);

        return $r2;

     label2:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_seekbar_track_material>;

        if $i0 != $i1 goto label3;

        r5 = (android.graphics.drawable.LayerDrawable) $r2;

        $r6 = virtualinvoke r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908288);

        $i0 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i0 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r6, $i0, $r4);

        $r6 = virtualinvoke r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908303);

        $i0 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i0 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r6, $i0, $r4);

        $r6 = virtualinvoke r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908301);

        $i0 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i0 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r6, $i0, $r4);

        return $r2;

     label3:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_ratingbar_material>;

        if $i0 == $i1 goto label4;

        $i1 = <android.support.v7.appcompat.R$drawable: int abc_ratingbar_indicator_material>;

        if $i0 == $i1 goto label4;

        $i1 = <android.support.v7.appcompat.R$drawable: int abc_ratingbar_small_material>;

        if $i0 != $i1 goto label5;

     label4:
        r5 = (android.graphics.drawable.LayerDrawable) $r2;

        $r6 = virtualinvoke r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908288);

        $i0 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i0 = staticinvoke <android.support.v7.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r6, $i0, $r4);

        $r6 = virtualinvoke r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908303);

        $i0 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i0 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r6, $i0, $r4);

        $r6 = virtualinvoke r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908301);

        $i0 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i0 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r6, $i0, $r4);

        return $r2;

     label5:
        $z1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)>($r1, $i0, $r2);

        if $z1 != 0 goto label6;

        if $z0 == 0 goto label6;

        return null;

     label6:
        return $r2;
    }
    static void tintDrawable(android.graphics.drawable.Drawable, android.support.v7.widget.TintInfo, int[])
    {
        android.graphics.drawable.Drawable $r0, $r3;
        android.support.v7.widget.TintInfo $r1;
        int[] $r2;
        boolean $z0;
        android.content.res.ColorStateList $r4;
        android.graphics.PorterDuff$Mode $r5;
        android.graphics.PorterDuffColorFilter $r6;
        int $i0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 := @parameter1: android.support.v7.widget.TintInfo;

        $r2 := @parameter2: int[];

        $z0 = staticinvoke <android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r0);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r3 == $r0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AppCompatDrawableManager", "Mutated drawable is not the same instance as the input.");

        return;

     label1:
        $z0 = $r1.<android.support.v7.widget.TintInfo: boolean mHasTintList>;

        if $z0 != 0 goto label2;

        $z0 = $r1.<android.support.v7.widget.TintInfo: boolean mHasTintMode>;

        if $z0 == 0 goto label8;

     label2:
        $z0 = $r1.<android.support.v7.widget.TintInfo: boolean mHasTintList>;

        if $z0 == 0 goto label6;

        $r4 = $r1.<android.support.v7.widget.TintInfo: android.content.res.ColorStateList mTintList>;

     label3:
        $z0 = $r1.<android.support.v7.widget.TintInfo: boolean mHasTintMode>;

        if $z0 == 0 goto label7;

        $r5 = $r1.<android.support.v7.widget.TintInfo: android.graphics.PorterDuff$Mode mTintMode>;

     label4:
        $r6 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])>($r4, $r5, $r2);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r6);

     label5:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 23 goto label9;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return;

     label6:
        $r4 = null;

        goto label3;

     label7:
        $r5 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        goto label4;

     label8:
        virtualinvoke $r0.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        goto label5;

     label9:
        return;
    }
    static boolean tintDrawableUsingColorFilter(android.content.Context, int, android.graphics.drawable.Drawable)
    {
        android.content.Context $r0;
        int $i0, i1, i2, $i3;
        android.graphics.drawable.Drawable $r1;
        android.graphics.PorterDuff$Mode r2;
        boolean z0, $z1;
        int[] $r3;
        android.graphics.PorterDuffColorFilter $r4;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.drawable.Drawable;

        r2 = <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        z0 = 0;

        i1 = 0;

        i2 = -1;

        $r3 = <android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL>;

        $z1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r3, $i0);

        if $z1 == 0 goto label4;

        i1 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        z0 = 1;

     label1:
        if z0 == 0 goto label8;

        z0 = staticinvoke <android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r1);

        if z0 == 0 goto label2;

        $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label2:
        $i0 = staticinvoke <android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r0, i1);

        $r4 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, r2);

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r4);

        if i2 == -1 goto label3;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>(i2);

     label3:
        return 1;

     label4:
        $r3 = <android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED>;

        $z1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r3, $i0);

        if $z1 == 0 goto label5;

        i1 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        z0 = 1;

        goto label1;

     label5:
        $r3 = <android.support.v7.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY>;

        $z1 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r3, $i0);

        if $z1 == 0 goto label6;

        i1 = 16842801;

        z0 = 1;

        r2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        goto label1;

     label6:
        $i3 = <android.support.v7.appcompat.R$drawable: int abc_list_divider_mtrl_alpha>;

        if $i0 != $i3 goto label7;

        i1 = 16842800;

        z0 = 1;

        i2 = staticinvoke <java.lang.Math: int round(float)>(40.8F);

        goto label1;

     label7:
        $i3 = <android.support.v7.appcompat.R$drawable: int abc_dialog_material_background>;

        if $i0 != $i3 goto label1;

        i1 = 16842801;

        z0 = 1;

        goto label1;

     label8:
        return 0;
    }
    public android.graphics.drawable.Drawable getDrawable(android.content.Context, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)>($r1, $i0, 0);

        return $r2;
    }
    android.graphics.drawable.Drawable getDrawable(android.content.Context, int, boolean)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        int $i0;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, r3;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: void checkVectorDrawableSetup(android.content.Context)>($r1);

        $r2 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>($r1, $i0);

        r3 = $r2;

        if $r2 != null goto label1;

        r3 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)>($r1, $i0);

     label1:
        if r3 != null goto label2;

        r3 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

     label2:
        if r3 == null goto label3;

        r3 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>($r1, $i0, $z0, r3);

     label3:
        if r3 == null goto label4;

        staticinvoke <android.support.v7.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)>(r3);

     label4:
        return r3;
    }
    android.content.res.ColorStateList getTintList(android.content.Context, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        int $i0, $i1;
        android.content.res.ColorStateList $r2, r3;
        int[] $r4;
        boolean $z0;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)>($r1, $i0);

        r3 = $r2;

        if $r2 != null goto label13;

        $i1 = <android.support.v7.appcompat.R$drawable: int abc_edit_text_material>;

        if $i0 != $i1 goto label02;

        $i1 = <android.support.v7.appcompat.R$color: int abc_tint_edittext>;

        r3 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i1);

     label01:
        if r3 == null goto label14;

        specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)>($r1, $i0, r3);

        return r3;

     label02:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_switch_track_mtrl_alpha>;

        if $i0 != $i1 goto label03;

        $i1 = <android.support.v7.appcompat.R$color: int abc_tint_switch_track>;

        r3 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i1);

        goto label01;

     label03:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_switch_thumb_material>;

        if $i0 != $i1 goto label04;

        $i1 = <android.support.v7.appcompat.R$color: int abc_tint_switch_thumb>;

        r3 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i1);

        goto label01;

     label04:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_btn_default_mtrl_shape>;

        if $i0 != $i1 goto label05;

        r3 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)>($r1);

        goto label01;

     label05:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_btn_borderless_material>;

        if $i0 != $i1 goto label06;

        r3 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)>($r1);

        goto label01;

     label06:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_btn_colored_material>;

        if $i0 != $i1 goto label07;

        r3 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)>($r1);

        goto label01;

     label07:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha>;

        if $i0 == $i1 goto label08;

        $i1 = <android.support.v7.appcompat.R$drawable: int abc_spinner_textfield_background_material>;

        if $i0 != $i1 goto label09;

     label08:
        $i1 = <android.support.v7.appcompat.R$color: int abc_tint_spinner>;

        r3 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i1);

        goto label01;

     label09:
        $r4 = <android.support.v7.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_NORMAL>;

        $z0 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r4, $i0);

        if $z0 == 0 goto label10;

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        r3 = staticinvoke <android.support.v7.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($r1, $i1);

        goto label01;

     label10:
        $r4 = <android.support.v7.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_STATE_LIST>;

        $z0 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r4, $i0);

        if $z0 == 0 goto label11;

        $i1 = <android.support.v7.appcompat.R$color: int abc_tint_default>;

        r3 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i1);

        goto label01;

     label11:
        $r4 = <android.support.v7.widget.AppCompatDrawableManager: int[] TINT_CHECKABLE_BUTTON_LIST>;

        $z0 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r4, $i0);

        if $z0 == 0 goto label12;

        $i1 = <android.support.v7.appcompat.R$color: int abc_tint_btn_checkable>;

        r3 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i1);

        goto label01;

     label12:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_seekbar_thumb_material>;

        if $i0 != $i1 goto label01;

        $i1 = <android.support.v7.appcompat.R$color: int abc_tint_seek_thumb>;

        r3 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i1);

        goto label01;

     label13:
        return $r2;

     label14:
        return r3;
    }
    public void onConfigurationChanged(android.content.Context)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        java.lang.Object $r2, $r3;
        java.util.WeakHashMap $r4;
        android.support.v4.util.LongSparseArray r5;
        java.lang.Throwable $r6;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $r2 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.lang.Object mDrawableCacheLock>;

        entermonitor $r2;

     label1:
        $r4 = r0.<android.support.v7.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches>;

        $r3 = virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r1);

        r5 = (android.support.v4.util.LongSparseArray) $r3;

        if r5 == null goto label2;

        virtualinvoke r5.<android.support.v4.util.LongSparseArray: void clear()>();

     label2:
        exitmonitor $r2;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }
    android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context, android.support.v7.widget.VectorEnabledTintResources, int)
    {
        android.support.v7.widget.AppCompatDrawableManager r0;
        android.content.Context $r1;
        android.support.v7.widget.VectorEnabledTintResources $r2;
        int $i0;
        android.graphics.drawable.Drawable $r3, r4;

        r0 := @this: android.support.v7.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.support.v7.widget.VectorEnabledTintResources;

        $i0 := @parameter2: int;

        $r3 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>($r1, $i0);

        r4 = $r3;

        if $r3 != null goto label1;

        r4 = virtualinvoke $r2.<android.support.v7.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable superGetDrawable(int)>($i0);

     label1:
        if r4 == null goto label2;

        $r3 = specialinvoke r0.<android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>($r1, $i0, 0, r4);

        return $r3;

     label2:
        return null;
    }
