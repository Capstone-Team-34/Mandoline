android.support.v7.widget.RecyclerView$ViewHolder extends java.lang.Object
static final int FLAG_ADAPTER_FULLUPDATE
static final int FLAG_ADAPTER_POSITION_UNKNOWN
static final int FLAG_APPEARED_IN_PRE_LAYOUT
static final int FLAG_BOUNCED_FROM_HIDDEN_LIST
static final int FLAG_BOUND
static final int FLAG_IGNORE
static final int FLAG_INVALID
static final int FLAG_MOVED
static final int FLAG_NOT_RECYCLABLE
static final int FLAG_REMOVED
static final int FLAG_RETURNED_FROM_SCRAP
static final int FLAG_TMP_DETACHED
static final int FLAG_UPDATE
private static final java.util.List FULLUPDATE_PAYLOADS
static final int PENDING_ACCESSIBILITY_STATE_NOT_SET
public final android.view.View itemView
private int mFlags
private boolean mInChangeScrap
private int mIsRecyclableCount
long mItemId
int mItemViewType
java.lang.ref.WeakReference mNestedRecyclerView
int mOldPosition
android.support.v7.widget.RecyclerView mOwnerRecyclerView
java.util.List mPayloads
int mPendingAccessibilityState
int mPosition
int mPreLayoutPosition
private android.support.v7.widget.RecyclerView$Recycler mScrapContainer
android.support.v7.widget.RecyclerView$ViewHolder mShadowedHolder
android.support.v7.widget.RecyclerView$ViewHolder mShadowingHolder
java.util.List mUnmodifiedPayloads
private int mWasImportantForAccessibilityBeforeHidden
    static void <clinit>()
    {
        java.util.List $r0;

        $r0 = <java.util.Collections: java.util.List EMPTY_LIST>;

        <android.support.v7.widget.RecyclerView$ViewHolder: java.util.List FULLUPDATE_PAYLOADS> = $r0;

        return;
    }
    public void <init>(android.view.View)
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        android.view.View $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition> = -1;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mOldPosition> = -1;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: long mItemId> = -1L;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mItemViewType> = -1;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = -1;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView$ViewHolder mShadowedHolder> = null;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView$ViewHolder mShadowingHolder> = null;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List mPayloads> = null;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List mUnmodifiedPayloads> = null;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mIsRecyclableCount> = 0;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView$Recycler mScrapContainer> = null;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean mInChangeScrap> = 0;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden> = 0;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState> = -1;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("itemView may not be null");

        throw $r2;

     label1:
        r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView> = $r1;

        return;
    }
    static boolean access$1300(android.support.v7.widget.RecyclerView$ViewHolder)
    {
        android.support.v7.widget.RecyclerView$ViewHolder $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $z0 = specialinvoke $r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldBeKeptAsChild()>();

        return $z0;
    }
    static int access$1400(android.support.v7.widget.RecyclerView$ViewHolder)
    {
        android.support.v7.widget.RecyclerView$ViewHolder $r0;
        int i0;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        i0 = $r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        return i0;
    }
    static void access$200(android.support.v7.widget.RecyclerView$ViewHolder, android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$ViewHolder $r0;
        android.support.v7.widget.RecyclerView $r1;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView;

        specialinvoke $r0.<android.support.v7.widget.RecyclerView$ViewHolder: void onEnteredHiddenState(android.support.v7.widget.RecyclerView)>($r1);

        return;
    }
    static void access$300(android.support.v7.widget.RecyclerView$ViewHolder, android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$ViewHolder $r0;
        android.support.v7.widget.RecyclerView $r1;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView;

        specialinvoke $r0.<android.support.v7.widget.RecyclerView$ViewHolder: void onLeftHiddenState(android.support.v7.widget.RecyclerView)>($r1);

        return;
    }
    static boolean access$700(android.support.v7.widget.RecyclerView$ViewHolder)
    {
        android.support.v7.widget.RecyclerView$ViewHolder $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $z0 = specialinvoke $r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean doesTransientStatePreventRecycling()>();

        return $z0;
    }
    static android.support.v7.widget.RecyclerView$Recycler access$802(android.support.v7.widget.RecyclerView$ViewHolder, android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$ViewHolder $r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        $r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView$Recycler mScrapContainer> = $r1;

        return $r1;
    }
    static boolean access$900(android.support.v7.widget.RecyclerView$ViewHolder)
    {
        android.support.v7.widget.RecyclerView$ViewHolder $r0;
        boolean z0;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        z0 = $r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean mInChangeScrap>;

        return z0;
    }
    static boolean access$902(android.support.v7.widget.RecyclerView$ViewHolder, boolean)
    {
        android.support.v7.widget.RecyclerView$ViewHolder $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        $z0 := @parameter1: boolean;

        $r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean mInChangeScrap> = $z0;

        return $z0;
    }
    private void createPayloadsIfNeeded()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        java.util.List $r1;
        java.util.ArrayList $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        if $r1 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List mPayloads> = $r2;

        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List mUnmodifiedPayloads> = $r1;

     label1:
        return;
    }
    private boolean doesTransientStatePreventRecycling()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        boolean $z0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 16;

        if $i0 != 0 goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean hasTransientState(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void onEnteredHiddenState(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0;
        android.view.View $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>($r2);

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden> = $i0;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView: boolean setChildImportantForAccessibilityInternal(android.support.v7.widget.RecyclerView$ViewHolder,int)>(r0, 4);

        return;
    }
    private void onLeftHiddenState(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView: boolean setChildImportantForAccessibilityInternal(android.support.v7.widget.RecyclerView$ViewHolder,int)>(r0, $i0);

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden> = 0;

        return;
    }
    private boolean shouldBeKeptAsChild()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 16;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    void addChangePayload(java.lang.Object)
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        java.lang.Object $r1;
        int $i0;
        java.util.List $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: void addFlags(int)>(1024);

        return;

     label1:
        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 1024;

        if $i0 != 0 goto label2;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: void createPayloadsIfNeeded()>();

        $r2 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label2:
        return;
    }
    void addFlags(int)
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i1 | $i0;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags> = $i0;

        return;
    }
    void clearOldPosition()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mOldPosition> = -1;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = -1;

        return;
    }
    void clearPayload()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

     label1:
        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & -1025;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags> = $i0;

        return;
    }
    void clearReturnedFromScrapFlag()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & -33;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags> = $i0;

        return;
    }
    void clearTmpDetachFlag()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & -257;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags> = $i0;

        return;
    }
    void flagRemovedAndOffsetPosition(int, int, boolean)
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: void addFlags(int)>(8);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: void offsetPosition(int,boolean)>($i1, $z0);

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition> = $i0;

        return;
    }
    public final int getAdapterPosition()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView mOwnerRecyclerView>;

        if $r1 != null goto label1;

        return -1;

     label1:
        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView mOwnerRecyclerView>;

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView: int getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder)>(r0);

        return $i0;
    }
    public final long getItemId()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        long l0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        l0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: long mItemId>;

        return l0;
    }
    public final int getItemViewType()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mItemViewType>;

        return i0;
    }
    public final int getLayoutPosition()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        if $i0 != -1 goto label1;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        return $i0;

     label1:
        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        return $i0;
    }
    public final int getOldPosition()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mOldPosition>;

        return i0;
    }
    public final int getPosition()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        if $i0 != -1 goto label1;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        return $i0;

     label1:
        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        return $i0;
    }
    java.util.List getUnmodifiedPayloads()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 1024;

        if $i0 != 0 goto label3;

        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List mPayloads>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r1 = <android.support.v7.widget.RecyclerView$ViewHolder: java.util.List FULLUPDATE_PAYLOADS>;

        return $r1;

     label2:
        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: java.util.List mUnmodifiedPayloads>;

        return $r1;

     label3:
        $r1 = <android.support.v7.widget.RecyclerView$ViewHolder: java.util.List FULLUPDATE_PAYLOADS>;

        return $r1;
    }
    boolean hasAnyOfTheFlags(int)
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i1 & $i0;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean isAdapterPositionUnknown()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 512;

        if $i0 != 0 goto label1;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    boolean isBound()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean isInvalid()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 4;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public final boolean isRecyclable()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        boolean $z0;
        int $i0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 16;

        if $i0 != 0 goto label1;

        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean hasTransientState(android.view.View)>($r1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean isRemoved()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 8;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean isScrap()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView$Recycler mScrapContainer>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean isTmpDetached()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 256;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean isUpdated()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean needsUpdate()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    void offsetPosition(int, boolean)
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1;
        boolean $z0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mOldPosition>;

        if $i1 != -1 goto label1;

        $i1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mOldPosition> = $i1;

     label1:
        $i1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        if $i1 != -1 goto label2;

        $i1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = $i1;

     label2:
        if $z0 == 0 goto label3;

        $i1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        $i1 = $i1 + $i0;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = $i1;

     label3:
        $i1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        $i0 = $i1 + $i0;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition> = $i0;

        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if $r2 == null goto label4;

        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        $r3.<android.support.v7.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

     label4:
        return;
    }
    void resetInternal()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags> = 0;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition> = -1;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mOldPosition> = -1;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: long mItemId> = -1L;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPreLayoutPosition> = -1;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mIsRecyclableCount> = 0;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView$ViewHolder mShadowedHolder> = null;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView$ViewHolder mShadowingHolder> = null;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: void clearPayload()>();

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mWasImportantForAccessibilityBeforeHidden> = 0;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState> = -1;

        staticinvoke <android.support.v7.widget.RecyclerView: void clearNestedRecyclerViewIfNotNested(android.support.v7.widget.RecyclerView$ViewHolder)>(r0);

        return;
    }
    void saveOldPosition()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mOldPosition>;

        if $i0 != -1 goto label1;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mOldPosition> = $i0;

     label1:
        return;
    }
    void setFlags(int, int)
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i3 = $i1 ^ -1;

        $i2 = $i2 & $i3;

        $i0 = $i0 & $i1;

        $i0 = $i2 | $i0;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags> = $i0;

        return;
    }
    public final void setIsRecyclable(boolean)
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label2;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        $i0 = $i0 + -1;

     label1:
        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mIsRecyclableCount> = $i0;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        if $i0 >= 0 goto label3;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mIsRecyclableCount> = 0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isRecyclable decremented below 0: unmatched pair of setIsRecyable() calls for ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("View", $r2);

        return;

     label2:
        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        if $z0 != 0 goto label4;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        if $i0 != 1 goto label4;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 | 16;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags> = $i0;

        return;

     label4:
        if $z0 == 0 goto label5;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        if $i0 != 0 goto label5;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & -17;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags> = $i0;

     label5:
        return;
    }
    void setScrapContainer(android.support.v7.widget.RecyclerView$Recycler, boolean)
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $z0 := @parameter1: boolean;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView$Recycler mScrapContainer> = $r1;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean mInChangeScrap> = $z0;

        return;
    }
    boolean shouldIgnore()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 128;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    void stopIgnoring()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & -129;

        r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags> = $i0;

        return;
    }
    public java.lang.String toString()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        java.lang.StringBuilder r1, $r2;
        int $i0;
        java.lang.String $r3;
        long $l1;
        boolean $z0;
        android.view.View $r4;
        android.view.ViewParent $r5;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        r1 = new java.lang.StringBuilder;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ViewHolder{");

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" position=");

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPosition>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        $l1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: long mItemId>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oldPos=");

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mOldPosition>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pLpos:");

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mPreLayoutPosition>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z0 == 0 goto label02;

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scrap ");

        $z0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean mInChangeScrap>;

        if $z0 == 0 goto label12;

        $r3 = "[changeScrap]";

     label01:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label02:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z0 == 0 goto label03;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" invalid");

     label03:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isBound()>();

        if $z0 != 0 goto label04;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unbound");

     label04:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean needsUpdate()>();

        if $z0 == 0 goto label05;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" update");

     label05:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 == 0 goto label06;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" removed");

     label06:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label07;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ignored");

     label07:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isTmpDetached()>();

        if $z0 == 0 goto label08;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tmpDetached");

     label08:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRecyclable()>();

        if $z0 != 0 goto label09;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not recyclable(");

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mIsRecyclableCount>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label09:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isAdapterPositionUnknown()>();

        if $z0 == 0 goto label10;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" undefined adapter position");

     label10:
        $r4 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewParent getParent()>();

        if $r5 != null goto label11;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no parent");

     label11:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label12:
        $r3 = "[attachedScrap]";

        goto label01;
    }
    void unScrap()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $r1 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: android.support.v7.widget.RecyclerView$Recycler mScrapContainer>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Recycler: void unscrapView(android.support.v7.widget.RecyclerView$ViewHolder)>(r0);

        return;
    }
    boolean wasReturnedFromScrap()
    {
        android.support.v7.widget.RecyclerView$ViewHolder r0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$ViewHolder;

        $i0 = r0.<android.support.v7.widget.RecyclerView$ViewHolder: int mFlags>;

        $i0 = $i0 & 32;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
