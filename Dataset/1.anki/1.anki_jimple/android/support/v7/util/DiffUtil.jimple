android.support.v7.util.DiffUtil extends java.lang.Object
private static final java.util.Comparator SNAKE_COMPARATOR
    static void <clinit>()
    {
        android.support.v7.util.DiffUtil$1 $r0;

        $r0 = new android.support.v7.util.DiffUtil$1;

        specialinvoke $r0.<android.support.v7.util.DiffUtil$1: void <init>()>();

        <android.support.v7.util.DiffUtil: java.util.Comparator SNAKE_COMPARATOR> = $r0;

        return;
    }
    private void <init>()
    {
        android.support.v7.util.DiffUtil r0;

        r0 := @this: android.support.v7.util.DiffUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback)
    {
        android.support.v7.util.DiffUtil$Callback $r0;
        android.support.v7.util.DiffUtil$DiffResult $r1;

        $r0 := @parameter0: android.support.v7.util.DiffUtil$Callback;

        $r1 = staticinvoke <android.support.v7.util.DiffUtil: android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback,boolean)>($r0, 1);

        return $r1;
    }
    public static android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback, boolean)
    {
        android.support.v7.util.DiffUtil$Callback $r0;
        boolean $z0, $z1;
        int $i0, $i1, i2, $i3, $i4;
        int[] r1, r2;
        android.support.v7.util.DiffUtil$DiffResult $r3;
        java.util.ArrayList r4, r5, r6;
        android.support.v7.util.DiffUtil$Range $r7, r10;
        java.lang.Object $r8;
        android.support.v7.util.DiffUtil$Snake $r9;
        java.util.Comparator $r11;

        $r0 := @parameter0: android.support.v7.util.DiffUtil$Callback;

        $z0 := @parameter1: boolean;

        $i0 = virtualinvoke $r0.<android.support.v7.util.DiffUtil$Callback: int getOldListSize()>();

        $i1 = virtualinvoke $r0.<android.support.v7.util.DiffUtil$Callback: int getNewListSize()>();

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        r6 = new java.util.ArrayList;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $r7 = new android.support.v7.util.DiffUtil$Range;

        specialinvoke $r7.<android.support.v7.util.DiffUtil$Range: void <init>(int,int,int,int)>(0, $i0, 0, $i1);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        i2 = $i0 + $i1;

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        i2 = i2 + $i0;

        $i0 = i2 * 2;

        r1 = newarray (int)[$i0];

        $i0 = i2 * 2;

        r2 = newarray (int)[$i0];

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

     label01:
        $z1 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label12;

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r8 = interfaceinvoke r6.<java.util.List: java.lang.Object remove(int)>($i0);

        $r7 = (android.support.v7.util.DiffUtil$Range) $r8;

        $i3 = $r7.<android.support.v7.util.DiffUtil$Range: int oldListStart>;

        $i4 = $r7.<android.support.v7.util.DiffUtil$Range: int oldListEnd>;

        $i0 = $r7.<android.support.v7.util.DiffUtil$Range: int newListStart>;

        $i1 = $r7.<android.support.v7.util.DiffUtil$Range: int newListEnd>;

        $r9 = staticinvoke <android.support.v7.util.DiffUtil: android.support.v7.util.DiffUtil$Snake diffPartial(android.support.v7.util.DiffUtil$Callback,int,int,int,int,int[],int[],int)>($r0, $i3, $i4, $i0, $i1, r1, r2, i2);

        if $r9 == null goto label11;

        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int size>;

        if $i0 <= 0 goto label02;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r9);

     label02:
        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i1 = $r7.<android.support.v7.util.DiffUtil$Range: int oldListStart>;

        $i0 = $i0 + $i1;

        $r9.<android.support.v7.util.DiffUtil$Snake: int x> = $i0;

        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i1 = $r7.<android.support.v7.util.DiffUtil$Range: int newListStart>;

        $i0 = $i0 + $i1;

        $r9.<android.support.v7.util.DiffUtil$Snake: int y> = $i0;

        $z1 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label06;

        r10 = new android.support.v7.util.DiffUtil$Range;

        specialinvoke r10.<android.support.v7.util.DiffUtil$Range: void <init>()>();

     label03:
        $i0 = $r7.<android.support.v7.util.DiffUtil$Range: int oldListStart>;

        r10.<android.support.v7.util.DiffUtil$Range: int oldListStart> = $i0;

        $i0 = $r7.<android.support.v7.util.DiffUtil$Range: int newListStart>;

        r10.<android.support.v7.util.DiffUtil$Range: int newListStart> = $i0;

        $z1 = $r9.<android.support.v7.util.DiffUtil$Snake: boolean reverse>;

        if $z1 == 0 goto label07;

        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int x>;

        r10.<android.support.v7.util.DiffUtil$Range: int oldListEnd> = $i0;

        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int y>;

        r10.<android.support.v7.util.DiffUtil$Range: int newListEnd> = $i0;

     label04:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r10);

        $z1 = $r9.<android.support.v7.util.DiffUtil$Snake: boolean reverse>;

        if $z1 == 0 goto label10;

        $z1 = $r9.<android.support.v7.util.DiffUtil$Snake: boolean removal>;

        if $z1 == 0 goto label09;

        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i1 = $r9.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i0 = $i0 + $i1;

        $i0 = $i0 + 1;

        $r7.<android.support.v7.util.DiffUtil$Range: int oldListStart> = $i0;

        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i1 = $r9.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i0 = $i0 + $i1;

        $r7.<android.support.v7.util.DiffUtil$Range: int newListStart> = $i0;

     label05:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label01;

     label06:
        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r8 = interfaceinvoke r5.<java.util.List: java.lang.Object remove(int)>($i0);

        r10 = (android.support.v7.util.DiffUtil$Range) $r8;

        goto label03;

     label07:
        $z1 = $r9.<android.support.v7.util.DiffUtil$Snake: boolean removal>;

        if $z1 == 0 goto label08;

        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i0 = $i0 + -1;

        r10.<android.support.v7.util.DiffUtil$Range: int oldListEnd> = $i0;

        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int y>;

        r10.<android.support.v7.util.DiffUtil$Range: int newListEnd> = $i0;

        goto label04;

     label08:
        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int x>;

        r10.<android.support.v7.util.DiffUtil$Range: int oldListEnd> = $i0;

        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i0 = $i0 + -1;

        r10.<android.support.v7.util.DiffUtil$Range: int newListEnd> = $i0;

        goto label04;

     label09:
        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i1 = $r9.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i0 = $i0 + $i1;

        $r7.<android.support.v7.util.DiffUtil$Range: int oldListStart> = $i0;

        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i1 = $r9.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i0 = $i0 + $i1;

        $i0 = $i0 + 1;

        $r7.<android.support.v7.util.DiffUtil$Range: int newListStart> = $i0;

        goto label05;

     label10:
        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i1 = $r9.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i0 = $i0 + $i1;

        $r7.<android.support.v7.util.DiffUtil$Range: int oldListStart> = $i0;

        $i0 = $r9.<android.support.v7.util.DiffUtil$Snake: int y>;

        $i1 = $r9.<android.support.v7.util.DiffUtil$Snake: int size>;

        $i0 = $i0 + $i1;

        $r7.<android.support.v7.util.DiffUtil$Range: int newListStart> = $i0;

        goto label05;

     label11:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label01;

     label12:
        $r11 = <android.support.v7.util.DiffUtil: java.util.Comparator SNAKE_COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r4, $r11);

        $r3 = new android.support.v7.util.DiffUtil$DiffResult;

        specialinvoke $r3.<android.support.v7.util.DiffUtil$DiffResult: void <init>(android.support.v7.util.DiffUtil$Callback,java.util.List,int[],int[],boolean)>($r0, r4, r1, r2, $z0);

        return $r3;
    }
    private static android.support.v7.util.DiffUtil$Snake diffPartial(android.support.v7.util.DiffUtil$Callback, int, int, int, int, int[], int[], int)
    {
        android.support.v7.util.DiffUtil$Callback $r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13;
        int[] $r1, $r2;
        boolean z0, z1, $z2;
        android.support.v7.util.DiffUtil$Snake r3;
        java.lang.IllegalStateException $r4;

        $r0 := @parameter0: android.support.v7.util.DiffUtil$Callback;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r1 := @parameter5: int[];

        $r2 := @parameter6: int[];

        $i4 := @parameter7: int;

        i7 = $i1 - $i0;

        i6 = $i3 - $i2;

        $i1 = $i1 - $i0;

        if $i1 < 1 goto label01;

        $i1 = $i3 - $i2;

        if $i1 >= 1 goto label02;

     label01:
        return null;

     label02:
        $i1 = i7 - i6;

        $i3 = i7 + i6;

        $i3 = $i3 + 1;

        $i3 = $i3 / 2;

        $i8 = $i4 - $i3;

        $i8 = $i8 + -1;

        i5 = $i4 + $i3;

        i5 = i5 + 1;

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>($r1, $i8, i5, 0);

        $i8 = $i4 - $i3;

        $i8 = $i8 + -1;

        $i8 = $i8 + $i1;

        i5 = $i4 + $i3;

        i5 = i5 + 1;

        i5 = i5 + $i1;

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>($r2, $i8, i5, i7);

        $i8 = $i1 % 2;

        if $i8 == 0 goto label09;

        z0 = 1;

     label03:
        $i8 = 0;

     label04:
        if $i8 > $i3 goto label22;

        i5 = neg $i8;

     label05:
        if i5 > $i8 goto label13;

        $i9 = neg $i8;

        if i5 == $i9 goto label06;

        if i5 == $i8 goto label10;

        $i9 = $i4 + i5;

        $i9 = $i9 + -1;

        $i9 = $r1[$i9];

        $i10 = $i4 + i5;

        $i10 = $i10 + 1;

        $i10 = $r1[$i10];

        if $i9 >= $i10 goto label10;

     label06:
        $i9 = $i4 + i5;

        $i9 = $i9 + 1;

        $i9 = $r1[$i9];

        z1 = 0;

     label07:
        $i10 = $i9 - i5;

     label08:
        if $i9 >= i7 goto label11;

        if $i10 >= i6 goto label11;

        $i11 = $i0 + $i9;

        $i12 = $i2 + $i10;

        $z2 = virtualinvoke $r0.<android.support.v7.util.DiffUtil$Callback: boolean areItemsTheSame(int,int)>($i11, $i12);

        if $z2 == 0 goto label11;

        $i9 = $i9 + 1;

        $i10 = $i10 + 1;

        goto label08;

     label09:
        z0 = 0;

        goto label03;

     label10:
        $i9 = $i4 + i5;

        $i9 = $i9 + -1;

        $i9 = $r1[$i9];

        $i9 = $i9 + 1;

        z1 = 1;

        goto label07;

     label11:
        $i10 = $i4 + i5;

        $r1[$i10] = $i9;

        if z0 == 0 goto label12;

        $i9 = $i1 - $i8;

        $i9 = $i9 + 1;

        if i5 < $i9 goto label12;

        $i9 = $i1 + $i8;

        $i9 = $i9 + -1;

        if i5 > $i9 goto label12;

        $i9 = $i4 + i5;

        $i9 = $r1[$i9];

        $i10 = $i4 + i5;

        $i10 = $r2[$i10];

        if $i9 < $i10 goto label12;

        r3 = new android.support.v7.util.DiffUtil$Snake;

        specialinvoke r3.<android.support.v7.util.DiffUtil$Snake: void <init>()>();

        $i0 = $i4 + i5;

        $i0 = $r2[$i0];

        r3.<android.support.v7.util.DiffUtil$Snake: int x> = $i0;

        $i0 = r3.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i0 = $i0 - i5;

        r3.<android.support.v7.util.DiffUtil$Snake: int y> = $i0;

        $i0 = $i4 + i5;

        $i0 = $r1[$i0];

        $i1 = $i4 + i5;

        $i1 = $r2[$i1];

        $i0 = $i0 - $i1;

        r3.<android.support.v7.util.DiffUtil$Snake: int size> = $i0;

        r3.<android.support.v7.util.DiffUtil$Snake: boolean removal> = z1;

        r3.<android.support.v7.util.DiffUtil$Snake: boolean reverse> = 0;

        return r3;

     label12:
        i5 = i5 + 2;

        goto label05;

     label13:
        $i9 = neg $i8;

     label14:
        if $i9 > $i8 goto label21;

        i5 = $i9 + $i1;

        $i10 = $i8 + $i1;

        if i5 == $i10 goto label15;

        $i10 = neg $i8;

        $i10 = $i10 + $i1;

        if i5 == $i10 goto label18;

        $i10 = $i4 + i5;

        $i10 = $i10 + -1;

        $i10 = $r2[$i10];

        $i11 = $i4 + i5;

        $i11 = $i11 + 1;

        $i11 = $r2[$i11];

        if $i10 >= $i11 goto label18;

     label15:
        $i10 = $i4 + i5;

        $i10 = $i10 + -1;

        $i10 = $r2[$i10];

        z1 = 0;

     label16:
        $i11 = $i10 - i5;

     label17:
        if $i10 <= 0 goto label19;

        if $i11 <= 0 goto label19;

        $i12 = $i0 + $i10;

        $i12 = $i12 + -1;

        $i13 = $i2 + $i11;

        $i13 = $i13 + -1;

        $z2 = virtualinvoke $r0.<android.support.v7.util.DiffUtil$Callback: boolean areItemsTheSame(int,int)>($i12, $i13);

        if $z2 == 0 goto label19;

        $i10 = $i10 + -1;

        $i11 = $i11 + -1;

        goto label17;

     label18:
        $i10 = $i4 + i5;

        $i10 = $i10 + 1;

        $i10 = $r2[$i10];

        $i10 = $i10 + -1;

        z1 = 1;

        goto label16;

     label19:
        $i11 = $i4 + i5;

        $r2[$i11] = $i10;

        if z0 != 0 goto label20;

        $i10 = $i9 + $i1;

        $i11 = neg $i8;

        if $i10 < $i11 goto label20;

        $i10 = $i9 + $i1;

        if $i10 > $i8 goto label20;

        $i10 = $i4 + i5;

        $i10 = $r1[$i10];

        $i11 = $i4 + i5;

        $i11 = $r2[$i11];

        if $i10 < $i11 goto label20;

        r3 = new android.support.v7.util.DiffUtil$Snake;

        specialinvoke r3.<android.support.v7.util.DiffUtil$Snake: void <init>()>();

        $i0 = $i4 + i5;

        $i0 = $r2[$i0];

        r3.<android.support.v7.util.DiffUtil$Snake: int x> = $i0;

        $i0 = r3.<android.support.v7.util.DiffUtil$Snake: int x>;

        $i0 = $i0 - i5;

        r3.<android.support.v7.util.DiffUtil$Snake: int y> = $i0;

        $i0 = $i4 + i5;

        $i0 = $r1[$i0];

        $i1 = $i4 + i5;

        $i1 = $r2[$i1];

        $i0 = $i0 - $i1;

        r3.<android.support.v7.util.DiffUtil$Snake: int size> = $i0;

        r3.<android.support.v7.util.DiffUtil$Snake: boolean removal> = z1;

        r3.<android.support.v7.util.DiffUtil$Snake: boolean reverse> = 1;

        return r3;

     label20:
        $i9 = $i9 + 2;

        goto label14;

     label21:
        $i8 = $i8 + 1;

        goto label04;

     label22:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("DiffUtil hit an unexpected case while trying to calculate the optimal path. Please make sure your data is not changing during the diff calculation.");

        throw $r4;
    }
