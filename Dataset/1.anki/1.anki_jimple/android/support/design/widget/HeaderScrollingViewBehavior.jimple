android.support.design.widget.HeaderScrollingViewBehavior extends android.support.design.widget.ViewOffsetBehavior
private int mOverlayTop
final android.graphics.Rect mTempRect1
final android.graphics.Rect mTempRect2
private int mVerticalLayoutGap
    public void <init>()
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.graphics.Rect $r1;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        specialinvoke r0.<android.support.design.widget.ViewOffsetBehavior: void <init>()>();

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect mTempRect1> = $r1;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect mTempRect2> = $r1;

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: int mVerticalLayoutGap> = 0;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.graphics.Rect $r3;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.design.widget.ViewOffsetBehavior: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect mTempRect1> = $r3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect mTempRect2> = $r3;

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: int mVerticalLayoutGap> = 0;

        return;
    }
    private static int resolveGravity(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        return 8388659;

     label1:
        return $i0;
    }
abstract android.view.View findFirstDependency(java.util.List) { 
// no body
} 
    final int getOverlapPixelsForOffset(android.view.View)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.view.View $r1;
        int $i0, $i1;
        float $f0, $f1;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        $r1 := @parameter0: android.view.View;

        $i0 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: int mOverlayTop>;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $f0 = virtualinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: float getOverlapRatioForOffset(android.view.View)>($r1);

        $i0 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: int mOverlayTop>;

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        $i0 = (int) $f0;

        $i1 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: int mOverlayTop>;

        $i0 = staticinvoke <android.support.design.widget.MathUtils: int constrain(int,int,int)>($i0, 0, $i1);

        return $i0;
    }
    float getOverlapRatioForOffset(android.view.View)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.view.View $r1;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        $r1 := @parameter0: android.view.View;

        return 1.0F;
    }
    public final int getOverlayTop()
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        int i0;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        i0 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: int mOverlayTop>;

        return i0;
    }
    int getScrollRange(android.view.View)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.view.View $r1;
        int $i0;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        return $i0;
    }
    final int getVerticalLayoutGap()
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        int i0;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        i0 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: int mVerticalLayoutGap>;

        return i0;
    }
    protected void layoutChild(android.support.design.widget.CoordinatorLayout, android.view.View, int)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View $r2, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.Rect r3, r4;
        java.util.List $r5;
        android.view.ViewGroup$LayoutParams $r7;
        android.support.design.widget.CoordinatorLayout$LayoutParams r8;
        android.support.v4.view.WindowInsetsCompat $r9;
        boolean $z0;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r5 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: java.util.List getDependencies(android.view.View)>($r2);

        $r6 = virtualinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.view.View findFirstDependency(java.util.List)>($r5);

        if $r6 == null goto label2;

        $r7 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r8 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r7;

        r3 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect mTempRect1>;

        $i1 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i2 = r8.<android.support.design.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        $i1 = $i1 + $i2;

        $i2 = virtualinvoke $r6.<android.view.View: int getBottom()>();

        $i3 = r8.<android.support.design.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        $i4 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        $i3 = $i3 - $i4;

        $i4 = r8.<android.support.design.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i3 = $i3 - $i4;

        $i4 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        $i5 = virtualinvoke $r6.<android.view.View: int getBottom()>();

        $i4 = $i4 + $i5;

        $i5 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i4 = $i4 - $i5;

        $i5 = r8.<android.support.design.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i4 = $i4 - $i5;

        virtualinvoke r3.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i2, $i3, $i4);

        $r9 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat getLastWindowInsets()>();

        if $r9 == null goto label1;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r1);

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r2);

        if $z0 != 0 goto label1;

        $i1 = r3.<android.graphics.Rect: int left>;

        $i2 = virtualinvoke $r9.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        $i1 = $i1 + $i2;

        r3.<android.graphics.Rect: int left> = $i1;

        $i1 = r3.<android.graphics.Rect: int right>;

        $i2 = virtualinvoke $r9.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        $i1 = $i1 - $i2;

        r3.<android.graphics.Rect: int right> = $i1;

     label1:
        r4 = r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.graphics.Rect mTempRect2>;

        $i1 = r8.<android.support.design.widget.CoordinatorLayout$LayoutParams: int gravity>;

        $i1 = staticinvoke <android.support.design.widget.HeaderScrollingViewBehavior: int resolveGravity(int)>($i1);

        $i2 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();

        $i3 = virtualinvoke $r2.<android.view.View: int getMeasuredHeight()>();

        staticinvoke <android.support.v4.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>($i1, $i2, $i3, r3, r4, $i0);

        $i1 = virtualinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: int getOverlapPixelsForOffset(android.view.View)>($r6);

        $i0 = r4.<android.graphics.Rect: int left>;

        $i2 = r4.<android.graphics.Rect: int top>;

        $i2 = $i2 - $i1;

        $i3 = r4.<android.graphics.Rect: int right>;

        $i4 = r4.<android.graphics.Rect: int bottom>;

        $i1 = $i4 - $i1;

        virtualinvoke $r2.<android.view.View: void layout(int,int,int,int)>($i0, $i2, $i3, $i1);

        $i0 = r4.<android.graphics.Rect: int top>;

        $i1 = virtualinvoke $r6.<android.view.View: int getBottom()>();

        $i0 = $i0 - $i1;

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: int mVerticalLayoutGap> = $i0;

        return;

     label2:
        specialinvoke r0.<android.support.design.widget.ViewOffsetBehavior: void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)>($r1, $r2, $i0);

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: int mVerticalLayoutGap> = 0;

        return;
    }
    public boolean onMeasureChild(android.support.design.widget.CoordinatorLayout, android.view.View, int, int, int, int)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View $r2, $r5;
        int $i0, $i1, $i2, $i3, i4, $i5;
        android.view.ViewGroup$LayoutParams $r3;
        java.util.List $r4;
        boolean $z0;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        i4 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        if i4 == -1 goto label1;

        if i4 != -2 goto label6;

     label1:
        $r4 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: java.util.List getDependencies(android.view.View)>($r2);

        $r5 = virtualinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: android.view.View findFirstDependency(java.util.List)>($r4);

        if $r5 == null goto label6;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r5);

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r2);

        if $z0 != 0 goto label2;

        staticinvoke <android.support.v4.view.ViewCompat: void setFitsSystemWindows(android.view.View,boolean)>($r2, 1);

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r2);

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<android.view.View: void requestLayout()>();

        return 1;

     label2:
        $i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i2);

        $i2 = $i5;

        if $i5 != 0 goto label3;

        $i2 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

     label3:
        $i5 = virtualinvoke $r5.<android.view.View: int getMeasuredHeight()>();

        $i2 = $i2 - $i5;

        $i5 = virtualinvoke r0.<android.support.design.widget.HeaderScrollingViewBehavior: int getScrollRange(android.view.View)>($r5);

        $i2 = $i2 + $i5;

        if i4 != -1 goto label5;

        i4 = 1073741824;

     label4:
        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, i4);

        virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: void onMeasureChild(android.view.View,int,int,int,int)>($r2, $i0, $i1, $i2, $i3);

        return 1;

     label5:
        i4 = -2147483648;

        goto label4;

     label6:
        return 0;
    }
    public final void setOverlayTop(int)
    {
        android.support.design.widget.HeaderScrollingViewBehavior r0;
        int $i0;

        r0 := @this: android.support.design.widget.HeaderScrollingViewBehavior;

        $i0 := @parameter0: int;

        r0.<android.support.design.widget.HeaderScrollingViewBehavior: int mOverlayTop> = $i0;

        return;
    }
