android.support.design.widget.TextInputLayout extends android.widget.LinearLayout
private static final int ANIMATION_DURATION
private static final int INVALID_MAX_LENGTH
private static final java.lang.String LOG_TAG
private android.support.design.widget.ValueAnimatorCompat mAnimator
final android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper
boolean mCounterEnabled
private int mCounterMaxLength
private int mCounterOverflowTextAppearance
private boolean mCounterOverflowed
private int mCounterTextAppearance
private android.widget.TextView mCounterView
private android.content.res.ColorStateList mDefaultTextColor
android.widget.EditText mEditText
private java.lang.CharSequence mError
private boolean mErrorEnabled
private boolean mErrorShown
private int mErrorTextAppearance
android.widget.TextView mErrorView
private android.content.res.ColorStateList mFocusedTextColor
private boolean mHasPasswordToggleTintList
private boolean mHasPasswordToggleTintMode
private boolean mHasReconstructedEditTextBackground
private java.lang.CharSequence mHint
private boolean mHintAnimationEnabled
private boolean mHintEnabled
private boolean mHintExpanded
private boolean mInDrawableStateChanged
private android.widget.LinearLayout mIndicatorArea
private int mIndicatorsAdded
private final android.widget.FrameLayout mInputFrame
private android.graphics.drawable.Drawable mOriginalEditTextEndDrawable
private java.lang.CharSequence mPasswordToggleContentDesc
private android.graphics.drawable.Drawable mPasswordToggleDrawable
private android.graphics.drawable.Drawable mPasswordToggleDummyDrawable
private boolean mPasswordToggleEnabled
private android.content.res.ColorStateList mPasswordToggleTintList
private android.graphics.PorterDuff$Mode mPasswordToggleTintMode
private android.support.design.widget.CheckableImageButton mPasswordToggleView
private boolean mPasswordToggledVisible
private boolean mRestoringSavedState
private android.graphics.Paint mTmpPaint
private final android.graphics.Rect mTmpRect
private android.graphics.Typeface mTypeface
    public void <init>(android.content.Context)
    {
        android.support.design.widget.TextInputLayout r0;
        android.content.Context $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.widget.TextInputLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.design.widget.TextInputLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i2;
        android.graphics.Rect $r3;
        android.support.design.widget.CollapsingTextHelper $r4;
        android.widget.FrameLayout $r5;
        android.view.animation.Interpolator $r6;
        android.view.animation.AccelerateInterpolator $r7;
        float $f0;
        byte $b1;
        boolean $z0, $z1, $z2;
        int[] $r8;
        android.support.v7.widget.TintTypedArray $r9;
        java.lang.CharSequence $r10;
        android.content.res.ColorStateList $r11;
        android.graphics.drawable.Drawable $r12;
        android.graphics.PorterDuff$Mode $r13;
        android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate $r14;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.TextInputLayout: android.graphics.Rect mTmpRect> = $r3;

        $r4 = new android.support.design.widget.CollapsingTextHelper;

        specialinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void <init>(android.view.View)>(r0);

        r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper> = $r4;

        staticinvoke <android.support.design.widget.ThemeUtils: void checkAppCompatTheme(android.content.Context)>($r1);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setOrientation(int)>(1);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setWillNotDraw(boolean)>(0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setAddStatesFromChildren(boolean)>(1);

        $r5 = new android.widget.FrameLayout;

        specialinvoke $r5.<android.widget.FrameLayout: void <init>(android.content.Context)>($r1);

        r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout mInputFrame> = $r5;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout mInputFrame>;

        virtualinvoke $r5.<android.widget.FrameLayout: void setAddStatesFromChildren(boolean)>(1);

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout mInputFrame>;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void addView(android.view.View)>($r5);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r6 = <android.support.design.widget.AnimationUtils: android.view.animation.Interpolator FAST_OUT_SLOW_IN_INTERPOLATOR>;

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void setTextSizeInterpolator(android.view.animation.Interpolator)>($r6);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r7 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r7.<android.view.animation.AccelerateInterpolator: void <init>()>();

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void setPositionInterpolator(android.view.animation.Interpolator)>($r7);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextGravity(int)>(8388659);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $f0 = virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: float getExpansionFraction()>();

        $b1 = $f0 cmpl 1.0F;

        if $b1 != 0 goto label7;

        $z0 = 1;

     label1:
        r0.<android.support.design.widget.TextInputLayout: boolean mHintExpanded> = $z0;

        $r8 = <android.support.design.R$styleable: int[] TextInputLayout>;

        $i2 = <android.support.design.R$style: int Widget_Design_TextInputLayout>;

        $r9 = staticinvoke <android.support.v7.widget.TintTypedArray: android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)>($r1, $r2, $r8, $i0, $i2);

        $i0 = <android.support.design.R$styleable: int TextInputLayout_hintEnabled>;

        $z0 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled> = $z0;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_android_hint>;

        $r10 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHint(java.lang.CharSequence)>($r10);

        $i0 = <android.support.design.R$styleable: int TextInputLayout_hintAnimationEnabled>;

        $z0 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        r0.<android.support.design.widget.TextInputLayout: boolean mHintAnimationEnabled> = $z0;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_android_textColorHint>;

        $z0 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label2;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_android_textColorHint>;

        $r11 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)>($i0);

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mFocusedTextColor> = $r11;

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor> = $r11;

     label2:
        $i0 = <android.support.design.R$styleable: int TextInputLayout_hintTextAppearance>;

        $i0 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: int getResourceId(int,int)>($i0, -1);

        if $i0 == -1 goto label3;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_hintTextAppearance>;

        $i0 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: int getResourceId(int,int)>($i0, 0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHintTextAppearance(int)>($i0);

     label3:
        $i0 = <android.support.design.R$styleable: int TextInputLayout_errorTextAppearance>;

        $i0 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: int getResourceId(int,int)>($i0, 0);

        r0.<android.support.design.widget.TextInputLayout: int mErrorTextAppearance> = $i0;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_errorEnabled>;

        $z0 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        $i0 = <android.support.design.R$styleable: int TextInputLayout_counterEnabled>;

        $z1 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        $i0 = <android.support.design.R$styleable: int TextInputLayout_counterMaxLength>;

        $i0 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: int getInt(int,int)>($i0, -1);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setCounterMaxLength(int)>($i0);

        $i0 = <android.support.design.R$styleable: int TextInputLayout_counterTextAppearance>;

        $i0 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: int getResourceId(int,int)>($i0, 0);

        r0.<android.support.design.widget.TextInputLayout: int mCounterTextAppearance> = $i0;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_counterOverflowTextAppearance>;

        $i0 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: int getResourceId(int,int)>($i0, 0);

        r0.<android.support.design.widget.TextInputLayout: int mCounterOverflowTextAppearance> = $i0;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_passwordToggleEnabled>;

        $z2 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        r0.<android.support.design.widget.TextInputLayout: boolean mPasswordToggleEnabled> = $z2;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_passwordToggleDrawable>;

        $r12 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDrawable> = $r12;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_passwordToggleContentDescription>;

        $r10 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i0);

        r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mPasswordToggleContentDesc> = $r10;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_passwordToggleTint>;

        $z2 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: boolean hasValue(int)>($i0);

        if $z2 == 0 goto label4;

        r0.<android.support.design.widget.TextInputLayout: boolean mHasPasswordToggleTintList> = 1;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_passwordToggleTint>;

        $r11 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)>($i0);

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mPasswordToggleTintList> = $r11;

     label4:
        $i0 = <android.support.design.R$styleable: int TextInputLayout_passwordToggleTintMode>;

        $z2 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: boolean hasValue(int)>($i0);

        if $z2 == 0 goto label5;

        r0.<android.support.design.widget.TextInputLayout: boolean mHasPasswordToggleTintMode> = 1;

        $i0 = <android.support.design.R$styleable: int TextInputLayout_passwordToggleTintMode>;

        $i0 = virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: int getInt(int,int)>($i0, -1);

        $r13 = staticinvoke <android.support.design.widget.ViewUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>($i0, null);

        r0.<android.support.design.widget.TextInputLayout: android.graphics.PorterDuff$Mode mPasswordToggleTintMode> = $r13;

     label5:
        virtualinvoke $r9.<android.support.v7.widget.TintTypedArray: void recycle()>();

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setErrorEnabled(boolean)>($z0);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setCounterEnabled(boolean)>($z1);

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void applyPasswordToggleTint()>();

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>(r0);

        if $i0 != 0 goto label6;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r0, 1);

     label6:
        $r14 = new android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate;

        specialinvoke $r14.<android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate: void <init>(android.support.design.widget.TextInputLayout)>(r0);

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>(r0, $r14);

        return;

     label7:
        $z0 = 0;

        goto label1;
    }
    static boolean access$000(android.support.design.widget.TextInputLayout)
    {
        android.support.design.widget.TextInputLayout $r0;
        boolean z0;

        $r0 := @parameter0: android.support.design.widget.TextInputLayout;

        z0 = $r0.<android.support.design.widget.TextInputLayout: boolean mRestoringSavedState>;

        return z0;
    }
    private void addIndicator(android.widget.TextView, int)
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.TextView $r1;
        int $i0;
        android.support.v4.widget.Space r2;
        android.widget.LinearLayout$LayoutParams r3;
        android.widget.LinearLayout $r4;
        android.content.Context $r5;
        android.widget.EditText $r6;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.widget.TextView;

        $i0 := @parameter1: int;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        if $r4 != null goto label1;

        $r4 = new android.widget.LinearLayout;

        $r5 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        specialinvoke $r4.<android.widget.LinearLayout: void <init>(android.content.Context)>($r5);

        r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea> = $r4;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke $r4.<android.widget.LinearLayout: void setOrientation(int)>(0);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void addView(android.view.View,int,int)>($r4, -1, -2);

        r2 = new android.support.v4.widget.Space;

        $r5 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        specialinvoke r2.<android.support.v4.widget.Space: void <init>(android.content.Context)>($r5);

        r3 = new android.widget.LinearLayout$LayoutParams;

        specialinvoke r3.<android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>(0, 0, 1.0F);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke $r4.<android.widget.LinearLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r2, r3);

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r6 == null goto label1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void adjustIndicatorPadding()>();

     label1:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke $r4.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke $r4.<android.widget.LinearLayout: void addView(android.view.View,int)>($r1, $i0);

        $i0 = r0.<android.support.design.widget.TextInputLayout: int mIndicatorsAdded>;

        $i0 = $i0 + 1;

        r0.<android.support.design.widget.TextInputLayout: int mIndicatorsAdded> = $i0;

        return;
    }
    private void adjustIndicatorPadding()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.LinearLayout $r1;
        android.widget.EditText $r2;
        int $i0, $i1, $i2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getPaddingStart(android.view.View)>($r2);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i1 = staticinvoke <android.support.v4.view.ViewCompat: int getPaddingEnd(android.view.View)>($r2);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i2 = virtualinvoke $r2.<android.widget.EditText: int getPaddingBottom()>();

        staticinvoke <android.support.v4.view.ViewCompat: void setPaddingRelative(android.view.View,int,int,int,int)>($r1, $i0, 0, $i1, $i2);

        return;
    }
    private void applyPasswordToggleTint()
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.drawable.Drawable $r1, $r5;
        boolean $z0;
        android.content.res.ColorStateList $r2;
        android.graphics.PorterDuff$Mode $r3;
        android.support.design.widget.CheckableImageButton $r4;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDrawable>;

        if $r1 == null goto label4;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHasPasswordToggleTintList>;

        if $z0 != 0 goto label1;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHasPasswordToggleTintMode>;

        if $z0 == 0 goto label4;

     label1:
        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDrawable>;

        $r1 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>($r1);

        $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDrawable> = $r1;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHasPasswordToggleTintList>;

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDrawable>;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mPasswordToggleTintList>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r1, $r2);

     label2:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHasPasswordToggleTintMode>;

        if $z0 == 0 goto label3;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDrawable>;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.graphics.PorterDuff$Mode mPasswordToggleTintMode>;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r1, $r3);

     label3:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        if $r4 == null goto label4;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        $r1 = virtualinvoke $r4.<android.support.design.widget.CheckableImageButton: android.graphics.drawable.Drawable getDrawable()>();

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDrawable>;

        if $r1 == $r5 goto label4;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDrawable>;

        virtualinvoke $r4.<android.support.design.widget.CheckableImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

     label4:
        return;
    }
    private static boolean arrayContains(int[], int)
    {
        int[] $r0;
        int $i0, i1, $i2, $i3;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i2 = lengthof $r0;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        i1 = $r0[$i3];

        if i1 != $i0 goto label2;

        return 1;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return 0;
    }
    private void collapseHint(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1;
        android.support.design.widget.ValueAnimatorCompat $r1;
        android.support.design.widget.CollapsingTextHelper $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        $z1 = virtualinvoke $r1.<android.support.design.widget.ValueAnimatorCompat: boolean isRunning()>();

        if $z1 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        virtualinvoke $r1.<android.support.design.widget.ValueAnimatorCompat: void cancel()>();

     label1:
        if $z0 == 0 goto label3;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintAnimationEnabled>;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void animateToExpansionFraction(float)>(1.0F);

     label2:
        r0.<android.support.design.widget.TextInputLayout: boolean mHintExpanded> = 0;

        return;

     label3:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void setExpansionFraction(float)>(1.0F);

        goto label2;
    }
    private void ensureBackgroundDrawableStateWorkaround()
    {
        android.support.design.widget.TextInputLayout r0;
        int i0;
        android.widget.EditText $r1;
        android.graphics.drawable.Drawable $r2, $r4;
        boolean $z0;
        android.graphics.drawable.Drawable$ConstantState $r3;
        android.graphics.drawable.DrawableContainer r5;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 == 21 goto label1;

        if i0 == 22 goto label1;

        return;

     label1:
        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r2 = virtualinvoke $r1.<android.widget.EditText: android.graphics.drawable.Drawable getBackground()>();

        if $r2 == null goto label3;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHasReconstructedEditTextBackground>;

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

        $z0 = $r2 instanceof android.graphics.drawable.DrawableContainer;

        if $z0 == 0 goto label2;

        r5 = (android.graphics.drawable.DrawableContainer) $r2;

        $r3 = virtualinvoke $r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        $z0 = staticinvoke <android.support.design.widget.DrawableUtils: boolean setContainerConstantState(android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable$ConstantState)>(r5, $r3);

        r0.<android.support.design.widget.TextInputLayout: boolean mHasReconstructedEditTextBackground> = $z0;

     label2:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHasReconstructedEditTextBackground>;

        if $z0 != 0 goto label3;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        staticinvoke <android.support.v4.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)>($r1, $r4);

        r0.<android.support.design.widget.TextInputLayout: boolean mHasReconstructedEditTextBackground> = 1;

     label3:
        return;
    }
    private void expandHint(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1;
        android.support.design.widget.ValueAnimatorCompat $r1;
        android.support.design.widget.CollapsingTextHelper $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        $z1 = virtualinvoke $r1.<android.support.design.widget.ValueAnimatorCompat: boolean isRunning()>();

        if $z1 == 0 goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        virtualinvoke $r1.<android.support.design.widget.ValueAnimatorCompat: void cancel()>();

     label1:
        if $z0 == 0 goto label3;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintAnimationEnabled>;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void animateToExpansionFraction(float)>(0.0F);

     label2:
        r0.<android.support.design.widget.TextInputLayout: boolean mHintExpanded> = 1;

        return;

     label3:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void setExpansionFraction(float)>(0.0F);

        goto label2;
    }
    private boolean hasPasswordTransformation()
    {
        android.support.design.widget.TextInputLayout r0;
        android.text.method.TransformationMethod $r1;
        android.widget.EditText $r2;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r1 = virtualinvoke $r2.<android.widget.EditText: android.text.method.TransformationMethod getTransformationMethod()>();

        $z0 = $r1 instanceof android.text.method.PasswordTransformationMethod;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private static void recursiveSetEnabled(android.view.ViewGroup, boolean)
    {
        android.view.ViewGroup $r0, r2;
        boolean $z0, $z1;
        int i0, $i1;
        android.view.View $r1;

        $r0 := @parameter0: android.view.ViewGroup;

        $z0 := @parameter1: boolean;

        i0 = 0;

        $i1 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

     label1:
        if i0 >= $i1 goto label3;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>(i0);

        virtualinvoke $r1.<android.view.View: void setEnabled(boolean)>($z0);

        $z1 = $r1 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label2;

        r2 = (android.view.ViewGroup) $r1;

        staticinvoke <android.support.design.widget.TextInputLayout: void recursiveSetEnabled(android.view.ViewGroup,boolean)>(r2, $z0);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }
    private void removeIndicator(android.widget.TextView)
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.TextView $r1;
        android.widget.LinearLayout $r2;
        int $i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.widget.TextView;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke $r2.<android.widget.LinearLayout: void removeView(android.view.View)>($r1);

        $i0 = r0.<android.support.design.widget.TextInputLayout: int mIndicatorsAdded>;

        $i0 = $i0 + -1;

        r0.<android.support.design.widget.TextInputLayout: int mIndicatorsAdded> = $i0;

        if $i0 != 0 goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setVisibility(int)>(8);

     label1:
        return;
    }
    private void setEditText(android.widget.EditText)
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.EditText $r1, $r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        android.support.design.widget.CollapsingTextHelper $r4;
        android.graphics.Typeface $r5;
        float $f0;
        int $i0, $i1;
        android.support.design.widget.TextInputLayout$1 $r6;
        android.content.res.ColorStateList $r7;
        java.lang.CharSequence $r8;
        android.widget.TextView $r9;
        android.text.Editable $r10;
        android.widget.LinearLayout $r11;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.widget.EditText;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("We already have an EditText, can only have one");

        throw $r3;

     label1:
        $z0 = $r1 instanceof android.support.design.widget.TextInputEditText;

        if $z0 != 0 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TextInputLayout", "EditText added is not a TextInputEditText. Please switch to using that class instead.");

     label2:
        r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText> = $r1;

        $z0 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordTransformation()>();

        if $z0 != 0 goto label3;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r5 = virtualinvoke $r1.<android.widget.EditText: android.graphics.Typeface getTypeface()>();

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>($r5);

     label3:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $f0 = virtualinvoke $r1.<android.widget.EditText: float getTextSize()>();

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void setExpandedTextSize(float)>($f0);

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i0 = virtualinvoke $r1.<android.widget.EditText: int getGravity()>();

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $i1 = $i0 & -113;

        $i1 = $i1 | 48;

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextGravity(int)>($i1);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r4.<android.support.design.widget.CollapsingTextHelper: void setExpandedTextGravity(int)>($i0);

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r6 = new android.support.design.widget.TextInputLayout$1;

        specialinvoke $r6.<android.support.design.widget.TextInputLayout$1: void <init>(android.support.design.widget.TextInputLayout)>(r0);

        virtualinvoke $r1.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>($r6);

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor>;

        if $r7 != null goto label4;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r7 = virtualinvoke $r1.<android.widget.EditText: android.content.res.ColorStateList getHintTextColors()>();

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor> = $r7;

     label4:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == 0 goto label5;

        $r8 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mHint>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r8);

        if $z0 == 0 goto label5;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r8 = virtualinvoke $r1.<android.widget.EditText: java.lang.CharSequence getHint()>();

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHint(java.lang.CharSequence)>($r8);

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        virtualinvoke $r1.<android.widget.EditText: void setHint(java.lang.CharSequence)>(null);

     label5:
        $r9 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        if $r9 == null goto label6;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r10 = virtualinvoke $r1.<android.widget.EditText: android.text.Editable getText()>();

        $i0 = interfaceinvoke $r10.<android.text.Editable: int length()>();

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateCounter(int)>($i0);

     label6:
        $r11 = r0.<android.support.design.widget.TextInputLayout: android.widget.LinearLayout mIndicatorArea>;

        if $r11 == null goto label7;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void adjustIndicatorPadding()>();

     label7:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updatePasswordToggleView()>();

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>(0);

        return;
    }
    private void setError(java.lang.CharSequence, boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence $r1;
        boolean $z0, $z1, $z2;
        android.widget.TextView $r2;
        android.support.v4.view.ViewPropertyAnimatorCompat $r3;
        float $f0;
        byte $b0;
        android.view.animation.Interpolator $r4;
        android.support.design.widget.TextInputLayout$2 $r5;
        int $i1;
        android.support.design.widget.TextInputLayout$3 $r6;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 := @parameter1: boolean;

        $z1 = 1;

        r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mError> = $r1;

        $z2 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorEnabled>;

        if $z2 != 0 goto label2;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z2 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setErrorEnabled(boolean)>(1);

     label2:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z2 != 0 goto label6;

     label3:
        r0.<android.support.design.widget.TextInputLayout: boolean mErrorShown> = $z1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r3 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r2);

        virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: void cancel()>();

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorShown>;

        if $z1 == 0 goto label8;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(0);

        if $z0 == 0 goto label7;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $f0 = staticinvoke <android.support.v4.view.ViewCompat: float getAlpha(android.view.View)>($r2);

        $b0 = $f0 cmpl 1.0F;

        if $b0 != 0 goto label4;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r2, 0.0F);

     label4:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r3 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r2);

        $r3 = virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(1.0F);

        $r3 = virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(200L);

        $r4 = <android.support.design.widget.AnimationUtils: android.view.animation.Interpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR>;

        $r3 = virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)>($r4);

        $r5 = new android.support.design.widget.TextInputLayout$2;

        specialinvoke $r5.<android.support.design.widget.TextInputLayout$2: void <init>(android.support.design.widget.TextInputLayout)>(r0);

        $r3 = virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r5);

        virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: void start()>();

     label5:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateEditTextBackground()>();

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>($z0);

        return;

     label6:
        $z1 = 0;

        goto label3;

     label7:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r2, 1.0F);

        goto label5;

     label8:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $i1 = virtualinvoke $r2.<android.widget.TextView: int getVisibility()>();

        if $i1 != 0 goto label5;

        if $z0 == 0 goto label9;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r3 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r2);

        $r3 = virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(0.0F);

        $r3 = virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(200L);

        $r4 = <android.support.design.widget.AnimationUtils: android.view.animation.Interpolator FAST_OUT_LINEAR_IN_INTERPOLATOR>;

        $r3 = virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)>($r4);

        $r6 = new android.support.design.widget.TextInputLayout$3;

        specialinvoke $r6.<android.support.design.widget.TextInputLayout$3: void <init>(android.support.design.widget.TextInputLayout,java.lang.CharSequence)>(r0, $r1);

        $r3 = virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r6);

        virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: void start()>();

        goto label5;

     label9:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(4);

        goto label5;
    }
    private void setHintInternal(java.lang.CharSequence)
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence $r1;
        android.support.design.widget.CollapsingTextHelper $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mHint> = $r1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void setText(java.lang.CharSequence)>($r1);

        return;
    }
    private boolean shouldShowPasswordIcon()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mPasswordToggleEnabled>;

        if $z0 == 0 goto label2;

        $z0 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordTransformation()>();

        if $z0 != 0 goto label1;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mPasswordToggledVisible>;

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    private void updateEditTextBackground()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.EditText $r1;
        android.graphics.drawable.Drawable $r2, r3;
        boolean $z0;
        android.widget.TextView $r4;
        int $i0;
        android.graphics.PorterDuff$Mode $r5;
        android.graphics.PorterDuffColorFilter $r6;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r2 = virtualinvoke $r1.<android.widget.EditText: android.graphics.drawable.Drawable getBackground()>();

        r3 = $r2;

        if $r2 == null goto label5;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void ensureBackgroundDrawableStateWorkaround()>();

        $z0 = staticinvoke <android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r2);

        if $z0 == 0 goto label2;

        r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label2:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorShown>;

        if $z0 == 0 goto label3;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        if $r4 == null goto label3;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $i0 = virtualinvoke $r4.<android.widget.TextView: int getCurrentTextColor()>();

        $r5 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        $r6 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r5);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r6);

        return;

     label3:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed>;

        if $z0 == 0 goto label4;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        if $r4 == null goto label4;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $i0 = virtualinvoke $r4.<android.widget.TextView: int getCurrentTextColor()>();

        $r5 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        $r6 = staticinvoke <android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r5);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r6);

        return;

     label4:
        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>(r3);

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        virtualinvoke $r1.<android.widget.EditText: void refreshDrawableState()>();

     label5:
        return;
    }
    private void updateInputLayoutMargins()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.FrameLayout $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.widget.LinearLayout$LayoutParams r3;
        boolean $z0;
        android.graphics.Paint $r4;
        android.support.design.widget.CollapsingTextHelper $r5;
        android.graphics.Typeface $r6;
        float $f0;
        int i0, $i1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout mInputFrame>;

        $r2 = virtualinvoke $r1.<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.LinearLayout$LayoutParams) $r2;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == 0 goto label3;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Paint mTmpPaint>;

        if $r4 != null goto label1;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<android.support.design.widget.TextInputLayout: android.graphics.Paint mTmpPaint> = $r4;

     label1:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Paint mTmpPaint>;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r6 = virtualinvoke $r5.<android.support.design.widget.CollapsingTextHelper: android.graphics.Typeface getCollapsedTypeface()>();

        virtualinvoke $r4.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r6);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Paint mTmpPaint>;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $f0 = virtualinvoke $r5.<android.support.design.widget.CollapsingTextHelper: float getCollapsedTextSize()>();

        virtualinvoke $r4.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Paint mTmpPaint>;

        $f0 = virtualinvoke $r4.<android.graphics.Paint: float ascent()>();

        $f0 = neg $f0;

        i0 = (int) $f0;

     label2:
        $i1 = r3.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        if i0 == $i1 goto label4;

        r3.<android.widget.LinearLayout$LayoutParams: int topMargin> = i0;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout mInputFrame>;

        virtualinvoke $r1.<android.widget.FrameLayout: void requestLayout()>();

        return;

     label3:
        i0 = 0;

        goto label2;

     label4:
        return;
    }
    private void updatePasswordToggleView()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.EditText $r1;
        boolean $z0;
        android.support.design.widget.CheckableImageButton $r2;
        android.content.Context $r3;
        android.view.LayoutInflater $r4;
        int $i0, $i1, $i2, $i3;
        android.widget.FrameLayout $r5;
        android.view.View $r6;
        android.graphics.drawable.Drawable $r7, $r12, $r13, $r14;
        java.lang.CharSequence $r8;
        android.support.design.widget.TextInputLayout$4 $r9;
        android.graphics.drawable.ColorDrawable $r10;
        android.graphics.drawable.Drawable[] $r11;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean shouldShowPasswordIcon()>();

        if $z0 == 0 goto label5;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        if $r2 != null goto label2;

        $r3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        $i0 = <android.support.design.R$layout: int design_text_input_password_icon>;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout mInputFrame>;

        $r6 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r5, 0);

        $r2 = (android.support.design.widget.CheckableImageButton) $r6;

        r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView> = $r2;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDrawable>;

        virtualinvoke $r2.<android.support.design.widget.CheckableImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r7);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        $r8 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mPasswordToggleContentDesc>;

        virtualinvoke $r2.<android.support.design.widget.CheckableImageButton: void setContentDescription(java.lang.CharSequence)>($r8);

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout mInputFrame>;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        virtualinvoke $r5.<android.widget.FrameLayout: void addView(android.view.View)>($r2);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        $r9 = new android.support.design.widget.TextInputLayout$4;

        specialinvoke $r9.<android.support.design.widget.TextInputLayout$4: void <init>(android.support.design.widget.TextInputLayout)>(r0);

        virtualinvoke $r2.<android.support.design.widget.CheckableImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r9);

     label2:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        virtualinvoke $r2.<android.support.design.widget.CheckableImageButton: void setVisibility(int)>(0);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mPasswordToggledVisible>;

        virtualinvoke $r2.<android.support.design.widget.CheckableImageButton: void setChecked(boolean)>($z0);

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDummyDrawable>;

        if $r7 != null goto label3;

        $r10 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r10.<android.graphics.drawable.ColorDrawable: void <init>()>();

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDummyDrawable> = $r10;

     label3:
        $r7 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDummyDrawable>;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        $i0 = virtualinvoke $r2.<android.support.design.widget.CheckableImageButton: int getMeasuredWidth()>();

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, 1);

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r11 = staticinvoke <android.support.v4.widget.TextViewCompat: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)>($r1);

        $r7 = $r11[2];

        $r12 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDummyDrawable>;

        if $r7 == $r12 goto label4;

        $r7 = $r11[2];

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mOriginalEditTextEndDrawable> = $r7;

     label4:
        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r7 = $r11[0];

        $r12 = $r11[1];

        $r13 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDummyDrawable>;

        $r14 = $r11[3];

        staticinvoke <android.support.v4.widget.TextViewCompat: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r1, $r7, $r12, $r13, $r14);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i0 = virtualinvoke $r1.<android.widget.EditText: int getPaddingLeft()>();

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i1 = virtualinvoke $r1.<android.widget.EditText: int getPaddingTop()>();

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i2 = virtualinvoke $r1.<android.widget.EditText: int getPaddingRight()>();

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i3 = virtualinvoke $r1.<android.widget.EditText: int getPaddingBottom()>();

        virtualinvoke $r2.<android.support.design.widget.CheckableImageButton: void setPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;

     label5:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        if $r2 == null goto label6;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        $i0 = virtualinvoke $r2.<android.support.design.widget.CheckableImageButton: int getVisibility()>();

        if $i0 != 0 goto label6;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        virtualinvoke $r2.<android.support.design.widget.CheckableImageButton: void setVisibility(int)>(8);

     label6:
        $r7 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDummyDrawable>;

        if $r7 == null goto label7;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r11 = staticinvoke <android.support.v4.widget.TextViewCompat: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)>($r1);

        $r7 = $r11[2];

        $r12 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDummyDrawable>;

        if $r7 != $r12 goto label7;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r7 = $r11[0];

        $r12 = $r11[1];

        $r13 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mOriginalEditTextEndDrawable>;

        $r14 = $r11[3];

        staticinvoke <android.support.v4.widget.TextViewCompat: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r1, $r7, $r12, $r13, $r14);

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDummyDrawable> = null;

     label7:
        return;
    }
    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;
        android.view.ViewGroup$LayoutParams $r1;
        android.widget.FrameLayout$LayoutParams r2;
        android.view.View r3;
        boolean $z0;
        android.widget.FrameLayout $r4;
        android.widget.EditText r5;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r3 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.view.ViewGroup$LayoutParams;

        $z0 = r3 instanceof android.widget.EditText;

        if $z0 == 0 goto label1;

        r2 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke r2.<android.widget.FrameLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        $i0 = r2.<android.widget.FrameLayout$LayoutParams: int gravity>;

        $i0 = $i0 & -113;

        $i0 = $i0 | 16;

        r2.<android.widget.FrameLayout$LayoutParams: int gravity> = $i0;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout mInputFrame>;

        virtualinvoke $r4.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r3, r2);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.FrameLayout mInputFrame>;

        virtualinvoke $r4.<android.widget.FrameLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateInputLayoutMargins()>();

        r5 = (android.widget.EditText) r3;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void setEditText(android.widget.EditText)>(r5);

        return;

     label1:
        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r3, $i0, $r1);

        return;
    }
    void animateToExpansionFraction(float)
    {
        android.support.design.widget.TextInputLayout r0;
        float $f0, $f1;
        android.support.design.widget.CollapsingTextHelper $r1;
        byte $b0;
        android.support.design.widget.ValueAnimatorCompat $r2;
        android.view.animation.Interpolator $r3;
        android.support.design.widget.TextInputLayout$5 $r4;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $f0 := @parameter0: float;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $f1 = virtualinvoke $r1.<android.support.design.widget.CollapsingTextHelper: float getExpansionFraction()>();

        $b0 = $f1 cmpl $f0;

        if $b0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        if $r2 != null goto label2;

        $r2 = staticinvoke <android.support.design.widget.ViewUtils: android.support.design.widget.ValueAnimatorCompat createAnimator()>();

        r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator> = $r2;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        $r3 = <android.support.design.widget.AnimationUtils: android.view.animation.Interpolator LINEAR_INTERPOLATOR>;

        virtualinvoke $r2.<android.support.design.widget.ValueAnimatorCompat: void setInterpolator(android.view.animation.Interpolator)>($r3);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        virtualinvoke $r2.<android.support.design.widget.ValueAnimatorCompat: void setDuration(long)>(200L);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        $r4 = new android.support.design.widget.TextInputLayout$5;

        specialinvoke $r4.<android.support.design.widget.TextInputLayout$5: void <init>(android.support.design.widget.TextInputLayout)>(r0);

        virtualinvoke $r2.<android.support.design.widget.ValueAnimatorCompat: void addUpdateListener(android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener)>($r4);

     label2:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $f1 = virtualinvoke $r1.<android.support.design.widget.CollapsingTextHelper: float getExpansionFraction()>();

        virtualinvoke $r2.<android.support.design.widget.ValueAnimatorCompat: void setFloatValues(float,float)>($f1, $f0);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.ValueAnimatorCompat mAnimator>;

        virtualinvoke $r2.<android.support.design.widget.ValueAnimatorCompat: void start()>();

        return;
    }
    protected void dispatchRestoreInstanceState(android.util.SparseArray)
    {
        android.support.design.widget.TextInputLayout r0;
        android.util.SparseArray r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 := @parameter0: android.util.SparseArray;

        r0.<android.support.design.widget.TextInputLayout: boolean mRestoringSavedState> = 1;

        specialinvoke r0.<android.widget.LinearLayout: void dispatchRestoreInstanceState(android.util.SparseArray)>(r1);

        r0.<android.support.design.widget.TextInputLayout: boolean mRestoringSavedState> = 0;

        return;
    }
    public void draw(android.graphics.Canvas)
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.Canvas $r1;
        boolean $z0;
        android.support.design.widget.CollapsingTextHelper $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.LinearLayout: void draw(android.graphics.Canvas)>($r1);

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void draw(android.graphics.Canvas)>($r1);

     label1:
        return;
    }
    protected void drawableStateChanged()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1, $z2;
        int[] $r1;
        android.support.design.widget.CollapsingTextHelper $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = 1;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mInDrawableStateChanged>;

        if $z1 == 0 goto label1;

        return;

     label1:
        r0.<android.support.design.widget.TextInputLayout: boolean mInDrawableStateChanged> = 1;

        specialinvoke r0.<android.widget.LinearLayout: void drawableStateChanged()>();

        $r1 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: int[] getDrawableState()>();

        $z1 = 0;

        $z2 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>(r0);

        if $z2 == 0 goto label5;

        $z2 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: boolean isEnabled()>();

        if $z2 == 0 goto label5;

     label2:
        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>($z0);

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateEditTextBackground()>();

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        if $r2 == null goto label3;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $z0 = virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: boolean setState(int[])>($r1);

        $z1 = $z0;

     label3:
        if $z1 == 0 goto label4;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void invalidate()>();

     label4:
        r0.<android.support.design.widget.TextInputLayout: boolean mInDrawableStateChanged> = 0;

        return;

     label5:
        $z0 = 0;

        goto label2;
    }
    public int getCounterMaxLength()
    {
        android.support.design.widget.TextInputLayout r0;
        int i0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        i0 = r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength>;

        return i0;
    }
    public android.widget.EditText getEditText()
    {
        android.support.design.widget.TextInputLayout r0;
        android.widget.EditText r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        return r1;
    }
    public java.lang.CharSequence getError()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;
        java.lang.CharSequence r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorEnabled>;

        if $z0 == 0 goto label1;

        r1 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mError>;

        return r1;

     label1:
        return null;
    }
    public java.lang.CharSequence getHint()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;
        java.lang.CharSequence r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == 0 goto label1;

        r1 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mHint>;

        return r1;

     label1:
        return null;
    }
    public java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mPasswordToggleContentDesc>;

        return r1;
    }
    public android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDrawable>;

        return r1;
    }
    public android.graphics.Typeface getTypeface()
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.Typeface r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Typeface mTypeface>;

        return r1;
    }
    public boolean isCounterEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterEnabled>;

        return z0;
    }
    public boolean isErrorEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorEnabled>;

        return z0;
    }
    public boolean isHintAnimationEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintAnimationEnabled>;

        return z0;
    }
    public boolean isHintEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        return z0;
    }
    final boolean isHintExpanded()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintExpanded>;

        return z0;
    }
    public boolean isPasswordVisibilityToggleEnabled()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        z0 = r0.<android.support.design.widget.TextInputLayout: boolean mPasswordToggleEnabled>;

        return z0;
    }
    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Rect r1;
        android.widget.EditText $r2;
        android.support.design.widget.CollapsingTextHelper $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r2 == null goto label1;

        r1 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Rect mTmpRect>;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        staticinvoke <android.support.design.widget.ViewGroupUtils: void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)>(r0, $r2, r1);

        $i0 = r1.<android.graphics.Rect: int left>;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i2 = virtualinvoke $r2.<android.widget.EditText: int getCompoundPaddingLeft()>();

        $i0 = $i0 + $i2;

        $i2 = r1.<android.graphics.Rect: int right>;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i4 = virtualinvoke $r2.<android.widget.EditText: int getCompoundPaddingRight()>();

        $i2 = $i2 - $i4;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $i4 = r1.<android.graphics.Rect: int top>;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i5 = virtualinvoke $r2.<android.widget.EditText: int getCompoundPaddingTop()>();

        $i4 = $i4 + $i5;

        $i5 = r1.<android.graphics.Rect: int bottom>;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i6 = virtualinvoke $r2.<android.widget.EditText: int getCompoundPaddingBottom()>();

        $i5 = $i5 - $i6;

        virtualinvoke $r3.<android.support.design.widget.CollapsingTextHelper: void setExpandedBounds(int,int,int,int)>($i0, $i4, $i2, $i5);

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $i4 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: int getPaddingTop()>();

        $i1 = $i3 - $i1;

        $i3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: int getPaddingBottom()>();

        $i1 = $i1 - $i3;

        virtualinvoke $r3.<android.support.design.widget.CollapsingTextHelper: void setCollapsedBounds(int,int,int,int)>($i0, $i4, $i2, $i1);

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r3.<android.support.design.widget.CollapsingTextHelper: void recalculate()>();

     label1:
        return;
    }
    protected void onMeasure(int, int)
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0, $i1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updatePasswordToggleView()>();

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>($i0, $i1);

        return;
    }
    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.design.widget.TextInputLayout r0;
        android.os.Parcelable $r1;
        boolean $z0;
        android.support.design.widget.TextInputLayout$SavedState r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof android.support.design.widget.TextInputLayout$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.LinearLayout: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        r2 = (android.support.design.widget.TextInputLayout$SavedState) $r1;

        $r1 = virtualinvoke r2.<android.support.design.widget.TextInputLayout$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.LinearLayout: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r3 = r2.<android.support.design.widget.TextInputLayout$SavedState: java.lang.CharSequence error>;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setError(java.lang.CharSequence)>($r3);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void requestLayout()>();

        return;
    }
    public android.os.Parcelable onSaveInstanceState()
    {
        android.support.design.widget.TextInputLayout r0;
        android.support.design.widget.TextInputLayout$SavedState r1;
        android.os.Parcelable $r2;
        boolean $z0;
        java.lang.CharSequence $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r2 = specialinvoke r0.<android.widget.LinearLayout: android.os.Parcelable onSaveInstanceState()>();

        r1 = new android.support.design.widget.TextInputLayout$SavedState;

        specialinvoke r1.<android.support.design.widget.TextInputLayout$SavedState: void <init>(android.os.Parcelable)>($r2);

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorShown>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence getError()>();

        r1.<android.support.design.widget.TextInputLayout$SavedState: java.lang.CharSequence error> = $r3;

     label1:
        return r1;
    }
    void passwordVisibilityToggleRequested()
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;
        android.widget.EditText $r1;
        int $i0;
        android.support.design.widget.CheckableImageButton $r2;
        android.text.method.PasswordTransformationMethod $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mPasswordToggleEnabled>;

        if $z0 == 0 goto label3;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $i0 = virtualinvoke $r1.<android.widget.EditText: int getSelectionEnd()>();

        $z0 = specialinvoke r0.<android.support.design.widget.TextInputLayout: boolean hasPasswordTransformation()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        virtualinvoke $r1.<android.widget.EditText: void setTransformationMethod(android.text.method.TransformationMethod)>(null);

        r0.<android.support.design.widget.TextInputLayout: boolean mPasswordToggledVisible> = 1;

     label1:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mPasswordToggledVisible>;

        virtualinvoke $r2.<android.support.design.widget.CheckableImageButton: void setChecked(boolean)>($z0);

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        virtualinvoke $r1.<android.widget.EditText: void setSelection(int)>($i0);

        return;

     label2:
        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r3 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        virtualinvoke $r1.<android.widget.EditText: void setTransformationMethod(android.text.method.TransformationMethod)>($r3);

        r0.<android.support.design.widget.TextInputLayout: boolean mPasswordToggledVisible> = 0;

        goto label1;

     label3:
        return;
    }
    public void setCounterEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1;
        java.lang.Exception r1;
        int $i0;
        android.support.v7.widget.AppCompatTextView $r2;
        android.content.Context $r3;
        android.widget.TextView $r4;
        android.graphics.Typeface $r5;
        android.widget.EditText $r6;
        android.text.Editable $r7;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterEnabled>;

        if $z1 == $z0 goto label8;

        if $z0 == 0 goto label7;

        $r2 = new android.support.v7.widget.AppCompatTextView;

        $r3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.v7.widget.AppCompatTextView: void <init>(android.content.Context)>($r3);

        r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView> = $r2;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $i0 = <android.support.design.R$id: int textinput_counter>;

        virtualinvoke $r4.<android.widget.TextView: void setId(int)>($i0);

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Typeface mTypeface>;

        if $r5 == null goto label1;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Typeface mTypeface>;

        virtualinvoke $r4.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r5);

     label1:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        virtualinvoke $r4.<android.widget.TextView: void setMaxLines(int)>(1);

     label2:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int mCounterTextAppearance>;

        staticinvoke <android.support.v4.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>($r4, $i0);

     label3:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void addIndicator(android.widget.TextView,int)>($r4, -1);

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r6 != null goto label6;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateCounter(int)>(0);

     label4:
        r0.<android.support.design.widget.TextInputLayout: boolean mCounterEnabled> = $z0;

        return;

     label5:
        r1 := @caughtexception;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $i0 = <android.support.v7.appcompat.R$style: int TextAppearance_AppCompat_Caption>;

        staticinvoke <android.support.v4.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>($r4, $i0);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $r3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $i0 = <android.support.design.R$color: int design_textinput_error_color_light>;

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r3, $i0);

        virtualinvoke $r4.<android.widget.TextView: void setTextColor(int)>($i0);

        goto label3;

     label6:
        $r6 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r7 = virtualinvoke $r6.<android.widget.EditText: android.text.Editable getText()>();

        $i0 = interfaceinvoke $r7.<android.text.Editable: int length()>();

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateCounter(int)>($i0);

        goto label4;

     label7:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void removeIndicator(android.widget.TextView)>($r4);

        r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView> = null;

        goto label4;

     label8:
        return;

        catch java.lang.Exception from label2 to label3 with label5;
    }
    public void setCounterMaxLength(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0, $i1;
        boolean $z0;
        android.widget.EditText $r1;
        android.text.Editable $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength>;

        if $i1 == $i0 goto label5;

        if $i0 <= 0 goto label3;

        r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength> = $i0;

     label1:
        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterEnabled>;

        if $z0 == 0 goto label5;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r1 != null goto label4;

        $i0 = 0;

     label2:
        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateCounter(int)>($i0);

        return;

     label3:
        r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength> = -1;

        goto label1;

     label4:
        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r2 = virtualinvoke $r1.<android.widget.EditText: android.text.Editable getText()>();

        $i0 = interfaceinvoke $r2.<android.text.Editable: int length()>();

        goto label2;

     label5:
        return;
    }
    public void setEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        staticinvoke <android.support.design.widget.TextInputLayout: void recursiveSetEnabled(android.view.ViewGroup,boolean)>(r0, $z0);

        specialinvoke r0.<android.widget.LinearLayout: void setEnabled(boolean)>($z0);

        return;
    }
    public void setError(java.lang.CharSequence)
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence $r1, $r3;
        boolean $z0;
        android.widget.TextView $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>(r0);

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: boolean isEnabled()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r3 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r3, $r1);

        if $z0 != 0 goto label3;

     label1:
        $z0 = 1;

     label2:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void setError(java.lang.CharSequence,boolean)>($r1, $z0);

        return;

     label3:
        $z0 = 0;

        goto label2;
    }
    public void setErrorEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1;
        java.lang.Exception r1;
        int $i0;
        android.widget.TextView $r2;
        android.support.v4.view.ViewPropertyAnimatorCompat $r3;
        android.support.v7.widget.AppCompatTextView $r4;
        android.content.Context $r5;
        android.graphics.Typeface $r6;
        android.content.res.ColorStateList $r7;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mErrorEnabled>;

        if $z1 == $z0 goto label12;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        if $r2 == null goto label01;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r3 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r2);

        virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: void cancel()>();

     label01:
        if $z0 == 0 goto label11;

        $r4 = new android.support.v7.widget.AppCompatTextView;

        $r5 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        specialinvoke $r4.<android.support.v7.widget.AppCompatTextView: void <init>(android.content.Context)>($r5);

        r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView> = $r4;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $i0 = <android.support.design.R$id: int textinput_error>;

        virtualinvoke $r2.<android.widget.TextView: void setId(int)>($i0);

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Typeface mTypeface>;

        if $r6 == null goto label02;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Typeface mTypeface>;

        virtualinvoke $r2.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r6);

     label02:
        $z1 = 0;

     label03:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int mErrorTextAppearance>;

        staticinvoke <android.support.v4.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>($r2, $i0);

     label04:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label07;

     label05:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r7 = virtualinvoke $r2.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        $i0 = virtualinvoke $r7.<android.content.res.ColorStateList: int getDefaultColor()>();

     label06:
        if $i0 != -65281 goto label07;

        $z1 = 1;

     label07:
        if $z1 == 0 goto label08;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $i0 = <android.support.v7.appcompat.R$style: int TextAppearance_AppCompat_Caption>;

        staticinvoke <android.support.v4.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>($r2, $i0);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        $r5 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $i0 = <android.support.design.R$color: int design_textinput_error_color_light>;

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r5, $i0);

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(int)>($i0);

     label08:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(4);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)>($r2, 1);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void addIndicator(android.widget.TextView,int)>($r2, 0);

     label09:
        r0.<android.support.design.widget.TextInputLayout: boolean mErrorEnabled> = $z0;

        return;

     label10:
        r1 := @caughtexception;

        $z1 = 1;

        goto label07;

     label11:
        r0.<android.support.design.widget.TextInputLayout: boolean mErrorShown> = 0;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateEditTextBackground()>();

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void removeIndicator(android.widget.TextView)>($r2);

        r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView> = null;

        goto label09;

     label12:
        return;

        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
    }
    public void setErrorTextAppearance(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;
        android.widget.TextView $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 := @parameter0: int;

        r0.<android.support.design.widget.TextInputLayout: int mErrorTextAppearance> = $i0;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        staticinvoke <android.support.v4.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>($r1, $i0);

     label1:
        return;
    }
    public void setHint(java.lang.CharSequence)
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence $r1;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void setHintInternal(java.lang.CharSequence)>($r1);

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void sendAccessibilityEvent(int)>(2048);

     label1:
        return;
    }
    public void setHintAnimationEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        r0.<android.support.design.widget.TextInputLayout: boolean mHintAnimationEnabled> = $z0;

        return;
    }
    public void setHintEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1;
        java.lang.CharSequence $r1, $r3;
        android.widget.EditText $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 == $z1 goto label5;

        r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled> = $z0;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r1 = virtualinvoke $r2.<android.widget.EditText: java.lang.CharSequence getHint()>();

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mHintEnabled>;

        if $z0 != 0 goto label3;

        $r3 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mHint>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r1 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mHint>;

        virtualinvoke $r2.<android.widget.EditText: void setHint(java.lang.CharSequence)>($r1);

     label1:
        specialinvoke r0.<android.support.design.widget.TextInputLayout: void setHintInternal(java.lang.CharSequence)>(null);

     label2:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r2 == null goto label5;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateInputLayoutMargins()>();

        return;

     label3:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label2;

        $r3 = r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mHint>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label4;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setHint(java.lang.CharSequence)>($r1);

     label4:
        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        virtualinvoke $r2.<android.widget.EditText: void setHint(java.lang.CharSequence)>(null);

        goto label2;

     label5:
        return;
    }
    public void setHintTextAppearance(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;
        android.content.res.ColorStateList $r1;
        android.support.design.widget.CollapsingTextHelper $r2;
        android.widget.EditText $r3;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 := @parameter0: int;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextAppearance(int)>($i0);

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r1 = virtualinvoke $r2.<android.support.design.widget.CollapsingTextHelper: android.content.res.ColorStateList getCollapsedTextColor()>();

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mFocusedTextColor> = $r1;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r3 == null goto label1;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>(0);

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateInputLayoutMargins()>();

     label1:
        return;
    }
    public void setPasswordVisibilityToggleContentDescription(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;
        android.content.res.Resources $r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label2;

        $r1 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i0);

     label1:
        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)>($r2);

        return;

     label2:
        $r2 = null;

        goto label1;
    }
    public void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
    {
        android.support.design.widget.TextInputLayout r0;
        java.lang.CharSequence $r1;
        android.support.design.widget.CheckableImageButton $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence mPasswordToggleContentDesc> = $r1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        virtualinvoke $r2.<android.support.design.widget.CheckableImageButton: void setContentDescription(java.lang.CharSequence)>($r1);

     label1:
        return;
    }
    public void setPasswordVisibilityToggleDrawable(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label2;

        $r1 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $r2 = staticinvoke <android.support.v7.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

     label1:
        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)>($r2);

        return;

     label2:
        $r2 = null;

        goto label1;
    }
    public void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.drawable.Drawable $r1;
        android.support.design.widget.CheckableImageButton $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<android.support.design.widget.TextInputLayout: android.graphics.drawable.Drawable mPasswordToggleDrawable> = $r1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CheckableImageButton mPasswordToggleView>;

        virtualinvoke $r2.<android.support.design.widget.CheckableImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

     label1:
        return;
    }
    public void setPasswordVisibilityToggleEnabled(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1;
        android.text.method.PasswordTransformationMethod $r1;
        android.widget.EditText $r2;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mPasswordToggleEnabled>;

        if $z1 == $z0 goto label2;

        r0.<android.support.design.widget.TextInputLayout: boolean mPasswordToggleEnabled> = $z0;

        if $z0 != 0 goto label1;

        $z0 = r0.<android.support.design.widget.TextInputLayout: boolean mPasswordToggledVisible>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r2 == null goto label1;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r1 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        virtualinvoke $r2.<android.widget.EditText: void setTransformationMethod(android.text.method.TransformationMethod)>($r1);

     label1:
        r0.<android.support.design.widget.TextInputLayout: boolean mPasswordToggledVisible> = 0;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updatePasswordToggleView()>();

     label2:
        return;
    }
    public void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
    {
        android.support.design.widget.TextInputLayout r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mPasswordToggleTintList> = $r1;

        r0.<android.support.design.widget.TextInputLayout: boolean mHasPasswordToggleTintList> = 1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void applyPasswordToggleTint()>();

        return;
    }
    public void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        r0.<android.support.design.widget.TextInputLayout: android.graphics.PorterDuff$Mode mPasswordToggleTintMode> = $r1;

        r0.<android.support.design.widget.TextInputLayout: boolean mHasPasswordToggleTintMode> = 1;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void applyPasswordToggleTint()>();

        return;
    }
    public void setTypeface(android.graphics.Typeface)
    {
        android.support.design.widget.TextInputLayout r0;
        android.graphics.Typeface $r1, $r2;
        android.support.design.widget.CollapsingTextHelper $r3;
        android.widget.TextView $r4;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<android.support.design.widget.TextInputLayout: android.graphics.Typeface mTypeface>;

        if $r1 == $r2 goto label2;

        r0.<android.support.design.widget.TextInputLayout: android.graphics.Typeface mTypeface> = $r1;

        $r3 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        virtualinvoke $r3.<android.support.design.widget.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>($r1);

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        if $r4 == null goto label1;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        virtualinvoke $r4.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r1);

     label1:
        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        if $r4 == null goto label2;

        $r4 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mErrorView>;

        virtualinvoke $r4.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r1);

     label2:
        return;
    }
    void updateCounter(int)
    {
        android.support.design.widget.TextInputLayout r0;
        int $i0, $i1;
        boolean z0, $z1;
        android.widget.TextView $r1;
        java.lang.String $r2;
        android.widget.EditText $r3;
        android.content.Context $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $i0 := @parameter0: int;

        z0 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed>;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength>;

        if $i1 != -1 goto label2;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed> = 0;

     label1:
        $r3 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r3 == null goto label8;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed>;

        if z0 == $z1 goto label8;

        virtualinvoke r0.<android.support.design.widget.TextInputLayout: void updateLabelState(boolean)>(0);

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void updateEditTextBackground()>();

        return;

     label2:
        $i1 = r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength>;

        if $i0 <= $i1 goto label6;

        $z1 = 1;

     label3:
        r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed> = $z1;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed>;

        if z0 == $z1 goto label5;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed>;

        if $z1 == 0 goto label7;

        $i1 = r0.<android.support.design.widget.TextInputLayout: int mCounterOverflowTextAppearance>;

     label4:
        staticinvoke <android.support.v4.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>($r1, $i1);

     label5:
        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $r4 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: android.content.Context getContext()>();

        $i1 = <android.support.design.R$string: int character_counter_pattern>;

        $r5 = newarray (java.lang.Object)[2];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $i0 = r0.<android.support.design.widget.TextInputLayout: int mCounterMaxLength>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[1] = $r6;

        $r2 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>($i1, $r5);

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        goto label1;

     label6:
        $z1 = 0;

        goto label3;

     label7:
        $i1 = r0.<android.support.design.widget.TextInputLayout: int mCounterTextAppearance>;

        goto label4;

     label8:
        return;
    }
    void updateLabelState(boolean)
    {
        android.support.design.widget.TextInputLayout r0;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        android.widget.EditText $r1;
        android.text.Editable $r2;
        int[] $r3;
        java.lang.CharSequence $r4;
        android.content.res.ColorStateList $r5;
        android.support.design.widget.CollapsingTextHelper $r6;
        android.widget.TextView $r7;

        r0 := @this: android.support.design.widget.TextInputLayout;

        $z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: boolean isEnabled()>();

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        if $r1 == null goto label06;

        $r1 = r0.<android.support.design.widget.TextInputLayout: android.widget.EditText mEditText>;

        $r2 = virtualinvoke $r1.<android.widget.EditText: android.text.Editable getText()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z2 != 0 goto label06;

        z3 = 1;

     label01:
        $r3 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: int[] getDrawableState()>();

        $z2 = staticinvoke <android.support.design.widget.TextInputLayout: boolean arrayContains(int[],int)>($r3, 16842908);

        $r4 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: java.lang.CharSequence getError()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z4 != 0 goto label07;

        $z4 = 1;

     label02:
        $r5 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor>;

        if $r5 == null goto label03;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor>;

        virtualinvoke $r6.<android.support.design.widget.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>($r5);

     label03:
        if $z1 == 0 goto label08;

        $z5 = r0.<android.support.design.widget.TextInputLayout: boolean mCounterOverflowed>;

        if $z5 == 0 goto label08;

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        if $r7 == null goto label08;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r7 = r0.<android.support.design.widget.TextInputLayout: android.widget.TextView mCounterView>;

        $r5 = virtualinvoke $r7.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();

        virtualinvoke $r6.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r5);

     label04:
        if z3 != 0 goto label05;

        $z1 = virtualinvoke r0.<android.support.design.widget.TextInputLayout: boolean isEnabled()>();

        if $z1 == 0 goto label10;

        if $z2 != 0 goto label05;

        if $z4 == 0 goto label10;

     label05:
        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mHintExpanded>;

        if $z1 == 0 goto label11;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void collapseHint(boolean)>($z0);

        return;

     label06:
        z3 = 0;

        goto label01;

     label07:
        $z4 = 0;

        goto label02;

     label08:
        if $z1 == 0 goto label09;

        if $z2 == 0 goto label09;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mFocusedTextColor>;

        if $r5 == null goto label09;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mFocusedTextColor>;

        virtualinvoke $r6.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r5);

        goto label04;

     label09:
        $r5 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor>;

        if $r5 == null goto label04;

        $r6 = r0.<android.support.design.widget.TextInputLayout: android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper>;

        $r5 = r0.<android.support.design.widget.TextInputLayout: android.content.res.ColorStateList mDefaultTextColor>;

        virtualinvoke $r6.<android.support.design.widget.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>($r5);

        goto label04;

     label10:
        $z1 = r0.<android.support.design.widget.TextInputLayout: boolean mHintExpanded>;

        if $z1 != 0 goto label11;

        specialinvoke r0.<android.support.design.widget.TextInputLayout: void expandHint(boolean)>($z0);

     label11:
        return;
    }
