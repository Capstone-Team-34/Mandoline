android.support.design.widget.FloatingActionButton extends android.support.design.widget.VisibilityAwareImageButton
private static final int AUTO_MINI_LARGEST_SCREEN_WIDTH
private static final java.lang.String LOG_TAG
public static final int SIZE_AUTO
public static final int SIZE_MINI
public static final int SIZE_NORMAL
private android.content.res.ColorStateList mBackgroundTint
private android.graphics.PorterDuff$Mode mBackgroundTintMode
private int mBorderWidth
boolean mCompatPadding
private android.support.v7.widget.AppCompatImageHelper mImageHelper
int mImagePadding
private android.support.design.widget.FloatingActionButtonImpl mImpl
private int mMaxImageSize
private int mRippleColor
final android.graphics.Rect mShadowPadding
private int mSize
private final android.graphics.Rect mTouchArea
    public void <init>(android.content.Context)
    {
        android.support.design.widget.FloatingActionButton r0;
        android.content.Context $r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.design.widget.FloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.widget.FloatingActionButton r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.design.widget.FloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.design.widget.FloatingActionButton r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1;
        android.graphics.Rect $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        android.content.res.ColorStateList $r6;
        android.graphics.PorterDuff$Mode $r7;
        float $f0, $f1, $f2;
        boolean $z0;
        android.support.v7.widget.AppCompatImageHelper $r8;
        android.content.res.Resources $r9;
        android.support.design.widget.FloatingActionButtonImpl $r10;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.support.design.widget.VisibilityAwareImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.FloatingActionButton: android.graphics.Rect mShadowPadding> = $r3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.FloatingActionButton: android.graphics.Rect mTouchArea> = $r3;

        staticinvoke <android.support.design.widget.ThemeUtils: void checkAppCompatTheme(android.content.Context)>($r1);

        $r4 = <android.support.design.R$styleable: int[] FloatingActionButton>;

        $i1 = <android.support.design.R$style: int Widget_Design_FloatingActionButton>;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r4, $i0, $i1);

        $i1 = <android.support.design.R$styleable: int FloatingActionButton_backgroundTint>;

        $r6 = virtualinvoke $r5.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>($i1);

        r0.<android.support.design.widget.FloatingActionButton: android.content.res.ColorStateList mBackgroundTint> = $r6;

        $i1 = <android.support.design.R$styleable: int FloatingActionButton_backgroundTintMode>;

        $i1 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i1, -1);

        $r7 = staticinvoke <android.support.design.widget.ViewUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)>($i1, null);

        r0.<android.support.design.widget.FloatingActionButton: android.graphics.PorterDuff$Mode mBackgroundTintMode> = $r7;

        $i1 = <android.support.design.R$styleable: int FloatingActionButton_rippleColor>;

        $i1 = virtualinvoke $r5.<android.content.res.TypedArray: int getColor(int,int)>($i1, 0);

        r0.<android.support.design.widget.FloatingActionButton: int mRippleColor> = $i1;

        $i1 = <android.support.design.R$styleable: int FloatingActionButton_fabSize>;

        $i1 = virtualinvoke $r5.<android.content.res.TypedArray: int getInt(int,int)>($i1, -1);

        r0.<android.support.design.widget.FloatingActionButton: int mSize> = $i1;

        $i1 = <android.support.design.R$styleable: int FloatingActionButton_borderWidth>;

        $i1 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, 0);

        r0.<android.support.design.widget.FloatingActionButton: int mBorderWidth> = $i1;

        $i1 = <android.support.design.R$styleable: int FloatingActionButton_elevation>;

        $f0 = virtualinvoke $r5.<android.content.res.TypedArray: float getDimension(int,float)>($i1, 0.0F);

        $i1 = <android.support.design.R$styleable: int FloatingActionButton_pressedTranslationZ>;

        $f1 = virtualinvoke $r5.<android.content.res.TypedArray: float getDimension(int,float)>($i1, 0.0F);

        $i1 = <android.support.design.R$styleable: int FloatingActionButton_useCompatPadding>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        r0.<android.support.design.widget.FloatingActionButton: boolean mCompatPadding> = $z0;

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $r8 = new android.support.v7.widget.AppCompatImageHelper;

        specialinvoke $r8.<android.support.v7.widget.AppCompatImageHelper: void <init>(android.widget.ImageView)>(r0);

        r0.<android.support.design.widget.FloatingActionButton: android.support.v7.widget.AppCompatImageHelper mImageHelper> = $r8;

        $r8 = r0.<android.support.design.widget.FloatingActionButton: android.support.v7.widget.AppCompatImageHelper mImageHelper>;

        virtualinvoke $r8.<android.support.v7.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)>($r2, $i0);

        $r9 = virtualinvoke r0.<android.support.design.widget.FloatingActionButton: android.content.res.Resources getResources()>();

        $i0 = <android.support.design.R$dimen: int design_fab_image_size>;

        $f2 = virtualinvoke $r9.<android.content.res.Resources: float getDimension(int)>($i0);

        $i0 = (int) $f2;

        r0.<android.support.design.widget.FloatingActionButton: int mMaxImageSize> = $i0;

        $r10 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        $r6 = r0.<android.support.design.widget.FloatingActionButton: android.content.res.ColorStateList mBackgroundTint>;

        $r7 = r0.<android.support.design.widget.FloatingActionButton: android.graphics.PorterDuff$Mode mBackgroundTintMode>;

        $i0 = r0.<android.support.design.widget.FloatingActionButton: int mRippleColor>;

        $i1 = r0.<android.support.design.widget.FloatingActionButton: int mBorderWidth>;

        virtualinvoke $r10.<android.support.design.widget.FloatingActionButtonImpl: void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int,int)>($r6, $r7, $i0, $i1);

        $r10 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r10.<android.support.design.widget.FloatingActionButtonImpl: void setElevation(float)>($f0);

        $r10 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r10.<android.support.design.widget.FloatingActionButtonImpl: void setPressedTranslationZ(float)>($f1);

        return;
    }
    static void access$001(android.support.design.widget.FloatingActionButton, android.graphics.drawable.Drawable)
    {
        android.support.design.widget.FloatingActionButton $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @parameter0: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter1: android.graphics.drawable.Drawable;

        specialinvoke $r0.<android.support.design.widget.VisibilityAwareImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }
    private android.support.design.widget.FloatingActionButtonImpl createImpl()
    {
        android.support.design.widget.FloatingActionButton r0;
        int i0;
        android.support.design.widget.FloatingActionButtonLollipop $r1;
        android.support.design.widget.FloatingActionButton$ShadowDelegateImpl $r2;
        android.support.design.widget.ValueAnimatorCompat$Creator $r3;
        android.support.design.widget.FloatingActionButtonIcs $r4;
        android.support.design.widget.FloatingActionButtonGingerbread $r5;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 21 goto label1;

        $r1 = new android.support.design.widget.FloatingActionButtonLollipop;

        $r2 = new android.support.design.widget.FloatingActionButton$ShadowDelegateImpl;

        specialinvoke $r2.<android.support.design.widget.FloatingActionButton$ShadowDelegateImpl: void <init>(android.support.design.widget.FloatingActionButton)>(r0);

        $r3 = <android.support.design.widget.ViewUtils: android.support.design.widget.ValueAnimatorCompat$Creator DEFAULT_ANIMATOR_CREATOR>;

        specialinvoke $r1.<android.support.design.widget.FloatingActionButtonLollipop: void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator)>(r0, $r2, $r3);

        return $r1;

     label1:
        if i0 < 14 goto label2;

        $r4 = new android.support.design.widget.FloatingActionButtonIcs;

        $r2 = new android.support.design.widget.FloatingActionButton$ShadowDelegateImpl;

        specialinvoke $r2.<android.support.design.widget.FloatingActionButton$ShadowDelegateImpl: void <init>(android.support.design.widget.FloatingActionButton)>(r0);

        $r3 = <android.support.design.widget.ViewUtils: android.support.design.widget.ValueAnimatorCompat$Creator DEFAULT_ANIMATOR_CREATOR>;

        specialinvoke $r4.<android.support.design.widget.FloatingActionButtonIcs: void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator)>(r0, $r2, $r3);

        return $r4;

     label2:
        $r5 = new android.support.design.widget.FloatingActionButtonGingerbread;

        $r2 = new android.support.design.widget.FloatingActionButton$ShadowDelegateImpl;

        specialinvoke $r2.<android.support.design.widget.FloatingActionButton$ShadowDelegateImpl: void <init>(android.support.design.widget.FloatingActionButton)>(r0);

        $r3 = <android.support.design.widget.ViewUtils: android.support.design.widget.ValueAnimatorCompat$Creator DEFAULT_ANIMATOR_CREATOR>;

        specialinvoke $r5.<android.support.design.widget.FloatingActionButtonGingerbread: void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator)>(r0, $r2, $r3);

        return $r5;
    }
    private android.support.design.widget.FloatingActionButtonImpl getImpl()
    {
        android.support.design.widget.FloatingActionButton r0;
        android.support.design.widget.FloatingActionButtonImpl $r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 = r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl mImpl>;

        if $r1 != null goto label1;

        $r1 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl createImpl()>();

        r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl mImpl> = $r1;

     label1:
        $r1 = r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl mImpl>;

        return $r1;
    }
    private int getSizeDimension(int)
    {
        android.support.design.widget.FloatingActionButton r0;
        int $i0, $i1;
        android.content.res.Resources $r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.design.widget.FloatingActionButton: android.content.res.Resources getResources()>();

        lookupswitch($i0)
        {
            case -1: goto label2;
            case 0: goto label1;
            case 1: goto label4;
            default: goto label1;
        };

     label1:
        $i0 = <android.support.design.R$dimen: int design_fab_size_normal>;

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        return $i0;

     label2:
        $i0 = staticinvoke <android.support.v4.content.res.ConfigurationHelper: int getScreenWidthDp(android.content.res.Resources)>($r1);

        $i1 = staticinvoke <android.support.v4.content.res.ConfigurationHelper: int getScreenHeightDp(android.content.res.Resources)>($r1);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        if $i0 >= 470 goto label3;

        $i0 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: int getSizeDimension(int)>(1);

        return $i0;

     label3:
        $i0 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: int getSizeDimension(int)>(0);

        return $i0;

     label4:
        $i0 = <android.support.design.R$dimen: int design_fab_size_mini>;

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        return $i0;
    }
    private static int resolveAdjustedSize(int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        lookupswitch($i2)
        {
            case -2147483648: goto label2;
            case 0: goto label1;
            case 1073741824: goto label3;
            default: goto label1;
        };

     label1:
        return $i0;

     label2:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        return $i0;

     label3:
        return $i1;
    }
    private android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener)
    {
        android.support.design.widget.FloatingActionButton r0;
        android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener $r1;
        android.support.design.widget.FloatingActionButton$1 $r2;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter0: android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new android.support.design.widget.FloatingActionButton$1;

        specialinvoke $r2.<android.support.design.widget.FloatingActionButton$1: void <init>(android.support.design.widget.FloatingActionButton,android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener)>(r0, $r1);

        return $r2;
    }
    protected void drawableStateChanged()
    {
        android.support.design.widget.FloatingActionButton r0;
        android.support.design.widget.FloatingActionButtonImpl $r1;
        int[] $r2;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        specialinvoke r0.<android.support.design.widget.VisibilityAwareImageButton: void drawableStateChanged()>();

        $r1 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        $r2 = virtualinvoke r0.<android.support.design.widget.FloatingActionButton: int[] getDrawableState()>();

        virtualinvoke $r1.<android.support.design.widget.FloatingActionButtonImpl: void onDrawableStateChanged(int[])>($r2);

        return;
    }
    public android.content.res.ColorStateList getBackgroundTintList()
    {
        android.support.design.widget.FloatingActionButton r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        r1 = r0.<android.support.design.widget.FloatingActionButton: android.content.res.ColorStateList mBackgroundTint>;

        return r1;
    }
    public android.graphics.PorterDuff$Mode getBackgroundTintMode()
    {
        android.support.design.widget.FloatingActionButton r0;
        android.graphics.PorterDuff$Mode r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        r1 = r0.<android.support.design.widget.FloatingActionButton: android.graphics.PorterDuff$Mode mBackgroundTintMode>;

        return r1;
    }
    public float getCompatElevation()
    {
        android.support.design.widget.FloatingActionButton r0;
        android.support.design.widget.FloatingActionButtonImpl $r1;
        float $f0;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        $f0 = virtualinvoke $r1.<android.support.design.widget.FloatingActionButtonImpl: float getElevation()>();

        return $f0;
    }
    public android.graphics.drawable.Drawable getContentBackground()
    {
        android.support.design.widget.FloatingActionButton r0;
        android.support.design.widget.FloatingActionButtonImpl $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        $r2 = virtualinvoke $r1.<android.support.design.widget.FloatingActionButtonImpl: android.graphics.drawable.Drawable getContentBackground()>();

        return $r2;
    }
    public boolean getContentRect(android.graphics.Rect)
    {
        android.support.design.widget.FloatingActionButton r0;
        android.graphics.Rect $r1, $r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter0: android.graphics.Rect;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>(r0);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.support.design.widget.FloatingActionButton: int getWidth()>();

        $i1 = virtualinvoke r0.<android.support.design.widget.FloatingActionButton: int getHeight()>();

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);

        $i0 = $r1.<android.graphics.Rect: int left>;

        $r2 = r0.<android.support.design.widget.FloatingActionButton: android.graphics.Rect mShadowPadding>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Rect: int left> = $i0;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $r2 = r0.<android.support.design.widget.FloatingActionButton: android.graphics.Rect mShadowPadding>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        $i0 = $i0 + $i1;

        $r1.<android.graphics.Rect: int top> = $i0;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $r2 = r0.<android.support.design.widget.FloatingActionButton: android.graphics.Rect mShadowPadding>;

        $i1 = $r2.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        $r1.<android.graphics.Rect: int right> = $i0;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $r2 = r0.<android.support.design.widget.FloatingActionButton: android.graphics.Rect mShadowPadding>;

        $i1 = $r2.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i1;

        $r1.<android.graphics.Rect: int bottom> = $i0;

        return 1;

     label1:
        return 0;
    }
    public int getRippleColor()
    {
        android.support.design.widget.FloatingActionButton r0;
        int i0;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        i0 = r0.<android.support.design.widget.FloatingActionButton: int mRippleColor>;

        return i0;
    }
    public int getSize()
    {
        android.support.design.widget.FloatingActionButton r0;
        int i0;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        i0 = r0.<android.support.design.widget.FloatingActionButton: int mSize>;

        return i0;
    }
    int getSizeDimension()
    {
        android.support.design.widget.FloatingActionButton r0;
        int $i0;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $i0 = r0.<android.support.design.widget.FloatingActionButton: int mSize>;

        $i0 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: int getSizeDimension(int)>($i0);

        return $i0;
    }
    public boolean getUseCompatPadding()
    {
        android.support.design.widget.FloatingActionButton r0;
        boolean z0;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        z0 = r0.<android.support.design.widget.FloatingActionButton: boolean mCompatPadding>;

        return z0;
    }
    public void hide()
    {
        android.support.design.widget.FloatingActionButton r0;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButton: void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener)>(null);

        return;
    }
    public void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener)
    {
        android.support.design.widget.FloatingActionButton r0;
        android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener $r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter0: android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButton: void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean)>($r1, 1);

        return;
    }
    void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener, boolean)
    {
        android.support.design.widget.FloatingActionButton r0;
        android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener $r1;
        boolean $z0;
        android.support.design.widget.FloatingActionButtonImpl $r2;
        android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener $r3;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter0: android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener;

        $z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        $r3 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener)>($r1);

        virtualinvoke $r2.<android.support.design.widget.FloatingActionButtonImpl: void hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)>($r3, $z0);

        return;
    }
    public void jumpDrawablesToCurrentState()
    {
        android.support.design.widget.FloatingActionButton r0;
        android.support.design.widget.FloatingActionButtonImpl $r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        specialinvoke r0.<android.support.design.widget.VisibilityAwareImageButton: void jumpDrawablesToCurrentState()>();

        $r1 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<android.support.design.widget.FloatingActionButtonImpl: void jumpDrawableToCurrentState()>();

        return;
    }
    protected void onAttachedToWindow()
    {
        android.support.design.widget.FloatingActionButton r0;
        android.support.design.widget.FloatingActionButtonImpl $r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        specialinvoke r0.<android.support.design.widget.VisibilityAwareImageButton: void onAttachedToWindow()>();

        $r1 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<android.support.design.widget.FloatingActionButtonImpl: void onAttachedToWindow()>();

        return;
    }
    protected void onDetachedFromWindow()
    {
        android.support.design.widget.FloatingActionButton r0;
        android.support.design.widget.FloatingActionButtonImpl $r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        specialinvoke r0.<android.support.design.widget.VisibilityAwareImageButton: void onDetachedFromWindow()>();

        $r1 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<android.support.design.widget.FloatingActionButtonImpl: void onDetachedFromWindow()>();

        return;
    }
    protected void onMeasure(int, int)
    {
        android.support.design.widget.FloatingActionButton r0;
        int $i0, $i1, $i2, $i3;
        android.support.design.widget.FloatingActionButtonImpl $r1;
        android.graphics.Rect $r2;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.support.design.widget.FloatingActionButton: int getSizeDimension()>();

        $i3 = r0.<android.support.design.widget.FloatingActionButton: int mMaxImageSize>;

        $i3 = $i2 - $i3;

        $i3 = $i3 / 2;

        r0.<android.support.design.widget.FloatingActionButton: int mImagePadding> = $i3;

        $r1 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<android.support.design.widget.FloatingActionButtonImpl: void updatePadding()>();

        $i0 = staticinvoke <android.support.design.widget.FloatingActionButton: int resolveAdjustedSize(int,int)>($i2, $i0);

        $i1 = staticinvoke <android.support.design.widget.FloatingActionButton: int resolveAdjustedSize(int,int)>($i2, $i1);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $r2 = r0.<android.support.design.widget.FloatingActionButton: android.graphics.Rect mShadowPadding>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        $i1 = $i1 + $i0;

        $r2 = r0.<android.support.design.widget.FloatingActionButton: android.graphics.Rect mShadowPadding>;

        $i2 = $r2.<android.graphics.Rect: int right>;

        $i1 = $i1 + $i2;

        $r2 = r0.<android.support.design.widget.FloatingActionButton: android.graphics.Rect mShadowPadding>;

        $i2 = $r2.<android.graphics.Rect: int top>;

        $i0 = $i2 + $i0;

        $r2 = r0.<android.support.design.widget.FloatingActionButton: android.graphics.Rect mShadowPadding>;

        $i2 = $r2.<android.graphics.Rect: int bottom>;

        $i0 = $i0 + $i2;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButton: void setMeasuredDimension(int,int)>($i1, $i0);

        return;
    }
    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.design.widget.FloatingActionButton r0;
        android.view.MotionEvent $r1;
        int $i0, $i1;
        boolean $z0;
        android.graphics.Rect $r2;
        float $f0;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke r0.<android.support.design.widget.VisibilityAwareImageButton: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;

     label2:
        $r2 = r0.<android.support.design.widget.FloatingActionButton: android.graphics.Rect mTouchArea>;

        $z0 = virtualinvoke r0.<android.support.design.widget.FloatingActionButton: boolean getContentRect(android.graphics.Rect)>($r2);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.FloatingActionButton: android.graphics.Rect mTouchArea>;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i0 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i1 = (int) $f0;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean contains(int,int)>($i0, $i1);

        if $z0 != 0 goto label1;

        return 0;
    }
    public void setBackgroundColor(int)
    {
        android.support.design.widget.FloatingActionButton r0;
        int $i0;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $i0 := @parameter0: int;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("FloatingActionButton", "Setting a custom background is not supported.");

        return;
    }
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        android.support.design.widget.FloatingActionButton r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("FloatingActionButton", "Setting a custom background is not supported.");

        return;
    }
    public void setBackgroundResource(int)
    {
        android.support.design.widget.FloatingActionButton r0;
        int $i0;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $i0 := @parameter0: int;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("FloatingActionButton", "Setting a custom background is not supported.");

        return;
    }
    public void setBackgroundTintList(android.content.res.ColorStateList)
    {
        android.support.design.widget.FloatingActionButton r0;
        android.content.res.ColorStateList $r1, $r3;
        android.support.design.widget.FloatingActionButtonImpl $r2;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r3 = r0.<android.support.design.widget.FloatingActionButton: android.content.res.ColorStateList mBackgroundTint>;

        if $r3 == $r1 goto label1;

        r0.<android.support.design.widget.FloatingActionButton: android.content.res.ColorStateList mBackgroundTint> = $r1;

        $r2 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r2.<android.support.design.widget.FloatingActionButtonImpl: void setBackgroundTintList(android.content.res.ColorStateList)>($r1);

     label1:
        return;
    }
    public void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
    {
        android.support.design.widget.FloatingActionButton r0;
        android.graphics.PorterDuff$Mode $r1, $r3;
        android.support.design.widget.FloatingActionButtonImpl $r2;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r3 = r0.<android.support.design.widget.FloatingActionButton: android.graphics.PorterDuff$Mode mBackgroundTintMode>;

        if $r3 == $r1 goto label1;

        r0.<android.support.design.widget.FloatingActionButton: android.graphics.PorterDuff$Mode mBackgroundTintMode> = $r1;

        $r2 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r2.<android.support.design.widget.FloatingActionButtonImpl: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)>($r1);

     label1:
        return;
    }
    public void setCompatElevation(float)
    {
        android.support.design.widget.FloatingActionButton r0;
        float $f0;
        android.support.design.widget.FloatingActionButtonImpl $r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $f0 := @parameter0: float;

        $r1 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<android.support.design.widget.FloatingActionButtonImpl: void setElevation(float)>($f0);

        return;
    }
    public void setImageResource(int)
    {
        android.support.design.widget.FloatingActionButton r0;
        int $i0;
        android.support.v7.widget.AppCompatImageHelper $r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.design.widget.FloatingActionButton: android.support.v7.widget.AppCompatImageHelper mImageHelper>;

        virtualinvoke $r1.<android.support.v7.widget.AppCompatImageHelper: void setImageResource(int)>($i0);

        return;
    }
    public void setRippleColor(int)
    {
        android.support.design.widget.FloatingActionButton r0;
        int $i0, $i1;
        android.support.design.widget.FloatingActionButtonImpl $r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.design.widget.FloatingActionButton: int mRippleColor>;

        if $i1 == $i0 goto label1;

        r0.<android.support.design.widget.FloatingActionButton: int mRippleColor> = $i0;

        $r1 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<android.support.design.widget.FloatingActionButtonImpl: void setRippleColor(int)>($i0);

     label1:
        return;
    }
    public void setSize(int)
    {
        android.support.design.widget.FloatingActionButton r0;
        int $i0, $i1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.design.widget.FloatingActionButton: int mSize>;

        if $i0 == $i1 goto label1;

        r0.<android.support.design.widget.FloatingActionButton: int mSize> = $i0;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButton: void requestLayout()>();

     label1:
        return;
    }
    public void setUseCompatPadding(boolean)
    {
        android.support.design.widget.FloatingActionButton r0;
        boolean $z0, $z1;
        android.support.design.widget.FloatingActionButtonImpl $r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $z0 := @parameter0: boolean;

        $z1 = r0.<android.support.design.widget.FloatingActionButton: boolean mCompatPadding>;

        if $z1 == $z0 goto label1;

        r0.<android.support.design.widget.FloatingActionButton: boolean mCompatPadding> = $z0;

        $r1 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        virtualinvoke $r1.<android.support.design.widget.FloatingActionButtonImpl: void onCompatShadowChanged()>();

     label1:
        return;
    }
    public volatile void setVisibility(int)
    {
        android.support.design.widget.FloatingActionButton r0;
        int $i0;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $i0 := @parameter0: int;

        specialinvoke r0.<android.support.design.widget.VisibilityAwareImageButton: void setVisibility(int)>($i0);

        return;
    }
    public void show()
    {
        android.support.design.widget.FloatingActionButton r0;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButton: void show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener)>(null);

        return;
    }
    public void show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener)
    {
        android.support.design.widget.FloatingActionButton r0;
        android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener $r1;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter0: android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener;

        virtualinvoke r0.<android.support.design.widget.FloatingActionButton: void show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean)>($r1, 1);

        return;
    }
    void show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener, boolean)
    {
        android.support.design.widget.FloatingActionButton r0;
        android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener $r1;
        boolean $z0;
        android.support.design.widget.FloatingActionButtonImpl $r2;
        android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener $r3;

        r0 := @this: android.support.design.widget.FloatingActionButton;

        $r1 := @parameter0: android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener;

        $z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl getImpl()>();

        $r3 = specialinvoke r0.<android.support.design.widget.FloatingActionButton: android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener)>($r1);

        virtualinvoke $r2.<android.support.design.widget.FloatingActionButtonImpl: void show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)>($r3, $z0);

        return;
    }
