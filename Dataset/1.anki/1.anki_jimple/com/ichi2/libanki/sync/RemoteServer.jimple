com.ichi2.libanki.sync.RemoteServer extends com.ichi2.libanki.sync.HttpSyncer
    public void <init>(com.ichi2.async.Connection, java.lang.String)
    {
        com.ichi2.libanki.sync.RemoteServer r0;
        com.ichi2.async.Connection $r1;
        java.lang.String $r2;

        r0 := @this: com.ichi2.libanki.sync.RemoteServer;

        $r1 := @parameter0: com.ichi2.async.Connection;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: void <init>(java.lang.String,com.ichi2.async.Connection)>($r2, $r1);

        return;
    }
    private java.lang.String _run(java.lang.String, org.json.JSONObject) throws com.ichi2.anki.exception.UnknownHttpResponseException
    {
        com.ichi2.libanki.sync.RemoteServer r0;
        java.lang.String $r1, $r3;
        org.json.JSONObject $r2;
        java.io.ByteArrayInputStream $r4;
        org.apache.http.HttpResponse $r5;
        org.apache.http.HttpEntity $r6;
        java.io.InputStream $r7;
        java.lang.Exception r8;
        java.lang.RuntimeException $r9;

        r0 := @this: com.ichi2.libanki.sync.RemoteServer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.json.JSONObject;

        $r3 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String jsonToString(org.json.JSONObject)>($r2);

        $r4 = staticinvoke <com.ichi2.libanki.sync.HttpSyncer: java.io.ByteArrayInputStream getInputStream(java.lang.String)>($r3);

        $r5 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: org.apache.http.HttpResponse req(java.lang.String,java.io.InputStream)>($r1, $r4);

     label1:
        $r6 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r7 = interfaceinvoke $r6.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r1 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: java.lang.String stream2String(java.io.InputStream)>($r7);

     label2:
        return $r1;

     label3:
        r8 := @caughtexception;

     label4:
        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r8);

        throw $r9;

     label5:
        r8 := @caughtexception;

        goto label4;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label5;
    }
    private org.json.JSONObject parseDict(java.lang.String)
    {
        com.ichi2.libanki.sync.RemoteServer r0;
        java.lang.String $r1;
        org.json.JSONException r2;
        boolean $z0;
        int $i0;
        org.json.JSONObject $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: com.ichi2.libanki.sync.RemoteServer;

        $r1 := @parameter0: java.lang.String;

     label01:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("null");

     label02:
        if $z0 != 0 goto label07;

     label03:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

     label04:
        if $i0 == 0 goto label07;

        $r3 = new org.json.JSONObject;

     label05:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

     label06:
        return $r3;

     label07:
        $r3 = new org.json.JSONObject;

     label08:
        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

     label09:
        return $r3;

     label10:
        r2 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r4;

        catch org.json.JSONException from label01 to label02 with label10;
        catch org.json.JSONException from label03 to label04 with label10;
        catch org.json.JSONException from label05 to label06 with label10;
        catch org.json.JSONException from label08 to label09 with label10;
    }
    private long parseLong(java.lang.String)
    {
        com.ichi2.libanki.sync.RemoteServer r0;
        java.lang.String $r1;
        java.lang.NumberFormatException r2;
        long $l0;

        r0 := @this: com.ichi2.libanki.sync.RemoteServer;

        $r1 := @parameter0: java.lang.String;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label2:
        return $l0;

     label3:
        r2 := @caughtexception;

        return 0L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
    public void abort() throws com.ichi2.anki.exception.UnknownHttpResponseException
    {
        com.ichi2.libanki.sync.RemoteServer r0;
        org.json.JSONObject $r1;

        r0 := @this: com.ichi2.libanki.sync.RemoteServer;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        specialinvoke r0.<com.ichi2.libanki.sync.RemoteServer: java.lang.String _run(java.lang.String,org.json.JSONObject)>("abort", $r1);

        return;
    }
    public org.json.JSONObject applyChanges(org.json.JSONObject) throws com.ichi2.anki.exception.UnknownHttpResponseException
    {
        com.ichi2.libanki.sync.RemoteServer r0;
        org.json.JSONObject $r1;
        java.lang.String $r2;

        r0 := @this: com.ichi2.libanki.sync.RemoteServer;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteServer: java.lang.String _run(java.lang.String,org.json.JSONObject)>("applyChanges", $r1);

        $r1 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteServer: org.json.JSONObject parseDict(java.lang.String)>($r2);

        return $r1;
    }
    public void applyChunk(org.json.JSONObject) throws com.ichi2.anki.exception.UnknownHttpResponseException
    {
        com.ichi2.libanki.sync.RemoteServer r0;
        org.json.JSONObject $r1;

        r0 := @this: com.ichi2.libanki.sync.RemoteServer;

        $r1 := @parameter0: org.json.JSONObject;

        specialinvoke r0.<com.ichi2.libanki.sync.RemoteServer: java.lang.String _run(java.lang.String,org.json.JSONObject)>("applyChunk", $r1);

        return;
    }
    public org.json.JSONObject chunk() throws com.ichi2.anki.exception.UnknownHttpResponseException
    {
        com.ichi2.libanki.sync.RemoteServer r0;
        org.json.JSONObject r1;
        java.lang.String $r2;

        r0 := @this: com.ichi2.libanki.sync.RemoteServer;

        r1 = new org.json.JSONObject;

        specialinvoke r1.<org.json.JSONObject: void <init>()>();

        $r2 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteServer: java.lang.String _run(java.lang.String,org.json.JSONObject)>("chunk", r1);

        r1 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteServer: org.json.JSONObject parseDict(java.lang.String)>($r2);

        return r1;
    }
    public long finish() throws com.ichi2.anki.exception.UnknownHttpResponseException
    {
        com.ichi2.libanki.sync.RemoteServer r0;
        org.json.JSONObject $r1;
        java.lang.String $r2;
        long $l0;

        r0 := @this: com.ichi2.libanki.sync.RemoteServer;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        $r2 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteServer: java.lang.String _run(java.lang.String,org.json.JSONObject)>("finish", $r1);

        $l0 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteServer: long parseLong(java.lang.String)>($r2);

        return $l0;
    }
    public org.apache.http.HttpResponse hostKey(java.lang.String, java.lang.String) throws com.ichi2.anki.exception.UnknownHttpResponseException
    {
        com.ichi2.libanki.sync.RemoteServer r0;
        java.lang.String $r1, $r2;
        org.json.JSONException r3;
        org.json.JSONObject r4;
        java.util.HashMap $r5;
        java.io.ByteArrayInputStream $r6;
        org.apache.http.HttpResponse $r7;

        r0 := @this: com.ichi2.libanki.sync.RemoteServer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r5 = new java.util.HashMap;

     label1:
        specialinvoke $r5.<java.util.HashMap: void <init>()>();

     label2:
        r0.<com.ichi2.libanki.sync.RemoteServer: java.util.Map mPostVars> = $r5;

        r4 = new org.json.JSONObject;

     label3:
        specialinvoke r4.<org.json.JSONObject: void <init>()>();

        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("u", $r1);

        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("p", $r2);

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String jsonToString(org.json.JSONObject)>(r4);

        $r6 = staticinvoke <com.ichi2.libanki.sync.HttpSyncer: java.io.ByteArrayInputStream getInputStream(java.lang.String)>($r1);

        $r7 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: org.apache.http.HttpResponse req(java.lang.String,java.io.InputStream)>("hostKey", $r6);

     label4:
        return $r7;

     label5:
        r3 := @caughtexception;

        return null;

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
    }
    public org.apache.http.HttpResponse meta() throws com.ichi2.anki.exception.UnknownHttpResponseException
    {
        com.ichi2.libanki.sync.RemoteServer r0;
        org.json.JSONException r1;
        org.json.JSONObject r2;
        java.util.HashMap $r3;
        java.util.Map $r4;
        java.lang.String $r5;
        java.util.Locale $r6;
        java.lang.Object[] $r7;
        java.io.ByteArrayInputStream $r8;
        org.apache.http.HttpResponse $r9;
        java.lang.RuntimeException $r10;

        r0 := @this: com.ichi2.libanki.sync.RemoteServer;

        $r3 = new java.util.HashMap;

     label01:
        specialinvoke $r3.<java.util.HashMap: void <init>()>();

     label02:
        r0.<com.ichi2.libanki.sync.RemoteServer: java.util.Map mPostVars> = $r3;

        $r4 = r0.<com.ichi2.libanki.sync.RemoteServer: java.util.Map mPostVars>;

        $r5 = r0.<com.ichi2.libanki.sync.RemoteServer: java.lang.String mHKey>;

     label03:
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("k", $r5);

     label04:
        $r4 = r0.<com.ichi2.libanki.sync.RemoteServer: java.util.Map mPostVars>;

        $r5 = r0.<com.ichi2.libanki.sync.RemoteServer: java.lang.String mSKey>;

     label05:
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("s", $r5);

     label06:
        r2 = new org.json.JSONObject;

     label07:
        specialinvoke r2.<org.json.JSONObject: void <init>()>();

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("v", 8);

     label08:
        $r6 = <java.util.Locale: java.util.Locale US>;

        $r7 = newarray (java.lang.Object)[2];

     label09:
        $r5 = staticinvoke <com.ichi2.utils.VersionUtils: java.lang.String getPkgVersionName()>();

     label10:
        $r7[0] = $r5;

     label11:
        $r5 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String platDesc()>();

     label12:
        $r7[1] = $r5;

     label13:
        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, "ankidroid,%s,%s", $r7);

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("cv", $r5);

        $r5 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String jsonToString(org.json.JSONObject)>(r2);

        $r8 = staticinvoke <com.ichi2.libanki.sync.HttpSyncer: java.io.ByteArrayInputStream getInputStream(java.lang.String)>($r5);

        $r9 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: org.apache.http.HttpResponse req(java.lang.String,java.io.InputStream)>("meta", $r8);

     label14:
        return $r9;

     label15:
        r1 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r10;

        catch org.json.JSONException from label01 to label02 with label15;
        catch org.json.JSONException from label03 to label04 with label15;
        catch org.json.JSONException from label05 to label06 with label15;
        catch org.json.JSONException from label07 to label08 with label15;
        catch org.json.JSONException from label09 to label10 with label15;
        catch org.json.JSONException from label11 to label12 with label15;
        catch org.json.JSONException from label13 to label14 with label15;
    }
    public org.json.JSONObject sanityCheck2(org.json.JSONObject) throws com.ichi2.anki.exception.UnknownHttpResponseException
    {
        com.ichi2.libanki.sync.RemoteServer r0;
        org.json.JSONObject $r1;
        java.lang.String $r2;

        r0 := @this: com.ichi2.libanki.sync.RemoteServer;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteServer: java.lang.String _run(java.lang.String,org.json.JSONObject)>("sanityCheck2", $r1);

        $r1 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteServer: org.json.JSONObject parseDict(java.lang.String)>($r2);

        return $r1;
    }
    public org.json.JSONObject start(org.json.JSONObject) throws com.ichi2.anki.exception.UnknownHttpResponseException
    {
        com.ichi2.libanki.sync.RemoteServer r0;
        org.json.JSONObject $r1;
        java.lang.String $r2;

        r0 := @this: com.ichi2.libanki.sync.RemoteServer;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteServer: java.lang.String _run(java.lang.String,org.json.JSONObject)>("start", $r1);

        $r1 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteServer: org.json.JSONObject parseDict(java.lang.String)>($r2);

        return $r1;
    }
