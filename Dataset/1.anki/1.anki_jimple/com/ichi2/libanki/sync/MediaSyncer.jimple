com.ichi2.libanki.sync.MediaSyncer extends java.lang.Object
private com.ichi2.libanki.Collection mCol
private com.ichi2.async.Connection mCon
private int mDownloadCount
private com.ichi2.libanki.sync.RemoteMediaServer mServer
    public void <init>(com.ichi2.libanki.Collection, com.ichi2.libanki.sync.RemoteMediaServer, com.ichi2.async.Connection)
    {
        com.ichi2.libanki.sync.MediaSyncer r0;
        com.ichi2.libanki.Collection $r1;
        com.ichi2.libanki.sync.RemoteMediaServer $r2;
        com.ichi2.async.Connection $r3;

        r0 := @this: com.ichi2.libanki.sync.MediaSyncer;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        $r2 := @parameter1: com.ichi2.libanki.sync.RemoteMediaServer;

        $r3 := @parameter2: com.ichi2.async.Connection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol> = $r1;

        r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.sync.RemoteMediaServer mServer> = $r2;

        r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.async.Connection mCon> = $r3;

        return;
    }
    private void _downloadFiles(java.util.List)
    {
        com.ichi2.libanki.sync.MediaSyncer r0;
        java.util.List r1, $r6;
        com.ichi2.libanki.Collection $r2;
        java.lang.Object[] $r3;
        java.lang.StringBuilder $r4;
        int $i0, $i1;
        java.lang.String $r5;
        com.ichi2.libanki.sync.RemoteMediaServer $r7;
        java.util.zip.ZipFile $r8;
        com.ichi2.libanki.Media $r9;
        com.ichi2.async.Connection $r10;
        android.content.res.Resources $r11;
        java.lang.Integer $r12;
        java.lang.Exception r13;
        java.lang.RuntimeException $r14;

        r0 := @this: com.ichi2.libanki.sync.MediaSyncer;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files to fetch");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3[0] = $r5;

        virtualinvoke $r2.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r3);

     label01:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label28;

     label02:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 25);

        $r6 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>(0, $i0);

     label03:
        $r2 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fetch ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r3[0] = $r5;

     label06:
        virtualinvoke $r2.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r3);

     label07:
        $r7 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.sync.RemoteMediaServer mServer>;

     label08:
        $r8 = virtualinvoke $r7.<com.ichi2.libanki.sync.RemoteMediaServer: java.util.zip.ZipFile downloadFiles(java.util.List)>($r6);

     label09:
        $r2 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label10:
        $r9 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        $i0 = virtualinvoke $r9.<com.ichi2.libanki.Media: int addFilesFromZip(java.util.zip.ZipFile)>($r8);

     label11:
        $i1 = r0.<com.ichi2.libanki.sync.MediaSyncer: int mDownloadCount>;

        $i1 = $i1 + $i0;

        r0.<com.ichi2.libanki.sync.MediaSyncer: int mDownloadCount> = $i1;

        $r2 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("received ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        $r3[0] = $r5;

     label14:
        virtualinvoke $r2.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r3);

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label15:
        if $i0 != $i1 goto label26;

     label16:
        interfaceinvoke r1.<java.util.List: void clear()>();

     label17:
        $r10 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.async.Connection mCon>;

     label18:
        $r11 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.res.Resources getAppResources()>();

        $r5 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int)>(2131231422);

     label19:
        $r3 = newarray (java.lang.Object)[1];

        $i0 = r0.<com.ichi2.libanki.sync.MediaSyncer: int mDownloadCount>;

     label20:
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label21:
        $r3[0] = $r12;

     label22:
        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r5, $r3);

        virtualinvoke $r10.<com.ichi2.async.Connection: void publishProgress(java.lang.String)>($r5);

     label23:
        goto label01;

     label24:
        r13 := @caughtexception;

     label25:
        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r13, "Error downloading media files", $r3);

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r13);

        throw $r14;

     label26:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        r1 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>($i0, $i1);

     label27:
        goto label17;

     label28:
        return;

     label29:
        r13 := @caughtexception;

        goto label25;

        catch java.io.IOException from label02 to label03 with label24;
        catch java.io.IOException from label04 to label05 with label24;
        catch java.io.IOException from label06 to label07 with label24;
        catch java.io.IOException from label08 to label09 with label24;
        catch java.io.IOException from label10 to label11 with label24;
        catch java.io.IOException from label12 to label13 with label24;
        catch java.io.IOException from label14 to label15 with label24;
        catch java.io.IOException from label16 to label17 with label24;
        catch java.io.IOException from label18 to label19 with label24;
        catch java.io.IOException from label20 to label21 with label24;
        catch java.io.IOException from label22 to label23 with label24;
        catch com.ichi2.anki.exception.UnknownHttpResponseException from label02 to label03 with label29;
        catch com.ichi2.anki.exception.UnknownHttpResponseException from label04 to label05 with label29;
        catch com.ichi2.anki.exception.UnknownHttpResponseException from label06 to label07 with label29;
        catch com.ichi2.anki.exception.UnknownHttpResponseException from label08 to label09 with label29;
        catch com.ichi2.anki.exception.UnknownHttpResponseException from label10 to label11 with label29;
        catch com.ichi2.anki.exception.UnknownHttpResponseException from label12 to label13 with label29;
        catch com.ichi2.anki.exception.UnknownHttpResponseException from label14 to label15 with label29;
        catch com.ichi2.anki.exception.UnknownHttpResponseException from label16 to label17 with label29;
        catch com.ichi2.anki.exception.UnknownHttpResponseException from label18 to label19 with label29;
        catch com.ichi2.anki.exception.UnknownHttpResponseException from label20 to label21 with label29;
        catch com.ichi2.anki.exception.UnknownHttpResponseException from label22 to label23 with label29;
        catch java.io.IOException from label26 to label27 with label24;
        catch com.ichi2.anki.exception.UnknownHttpResponseException from label26 to label27 with label29;
    }
    public java.lang.String sync() throws com.ichi2.anki.exception.UnknownHttpResponseException, com.ichi2.anki.exception.MediaSyncException
    {
        com.ichi2.libanki.sync.MediaSyncer r0;
        org.json.JSONException r1;
        java.util.ArrayList r2;
        com.ichi2.libanki.Collection $r3;
        com.ichi2.libanki.Media $r4;
        boolean $z0;
        com.ichi2.async.Connection $r5;
        java.lang.Object[] $r6, $r22;
        int $i0, i1, $i2, $i3, $i4;
        com.ichi2.libanki.sync.RemoteMediaServer $r7;
        org.json.JSONObject $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10, r19, r20, $r24;
        java.lang.RuntimeException $r11;
        org.json.JSONArray $r12, $r18;
        java.lang.Integer $r13;
        android.util.Pair $r14;
        java.lang.Object $r15;
        java.io.File r16;
        java.util.List r17;
        java.util.Locale $r21;
        java.lang.CharSequence $r23;
        android.content.res.Resources $r25;
        com.ichi2.libanki.DB $r26;
        java.lang.Throwable $r27;

        r0 := @this: com.ichi2.libanki.sync.MediaSyncer;

        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label001:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        $z0 = virtualinvoke $r4.<com.ichi2.libanki.Media: boolean needScan()>();

     label002:
        if $z0 == 0 goto label008;

        $r5 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.async.Connection mCon>;

     label003:
        virtualinvoke $r5.<com.ichi2.async.Connection: void publishProgress(int)>(2131231425);

     label004:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "findChanges";

     label005:
        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

     label006:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label007:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        virtualinvoke $r4.<com.ichi2.libanki.Media: void findChanges()>();

     label008:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label009:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        $i0 = virtualinvoke $r4.<com.ichi2.libanki.Media: int lastUsn()>();

     label010:
        i1 = $i0;

        $r7 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.sync.RemoteMediaServer mServer>;

     label011:
        $r8 = virtualinvoke $r7.<com.ichi2.libanki.sync.RemoteMediaServer: org.json.JSONObject begin()>();

        $i2 = virtualinvoke $r8.<org.json.JSONObject: int getInt(java.lang.String)>("usn");

     label012:
        if $i0 != $i2 goto label015;

        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label013:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        $z0 = virtualinvoke $r4.<com.ichi2.libanki.Media: boolean haveDirty()>();

     label014:
        if $z0 != 0 goto label015;

        return "noChanges";

     label015:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r9 = new java.lang.StringBuilder;

     label016:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("last local usn is ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label017:
        $r6[0] = $r10;

     label018:
        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

     label019:
        r0.<com.ichi2.libanki.sync.MediaSyncer: int mDownloadCount> = 0;

     label020:
        $z0 = staticinvoke <com.ichi2.async.Connection: boolean getIsCancelled()>();

     label021:
        if $z0 == 0 goto label027;

        $r6 = newarray (java.lang.Object)[0];

     label022:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Sync was cancelled", $r6);

     label023:
        $r11 = new java.lang.RuntimeException;

     label024:
        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("UserAbortedSync");

     label025:
        throw $r11;

     label026:
        r1 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r11;

     label027:
        $r7 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.sync.RemoteMediaServer mServer>;

     label028:
        $r12 = virtualinvoke $r7.<com.ichi2.libanki.sync.RemoteMediaServer: org.json.JSONArray mediaChanges(int)>(i1);

     label029:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "mediaChanges resp count: ";

     label030:
        $i0 = virtualinvoke $r12.<org.json.JSONArray: int length()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label031:
        $r6[1] = $r13;

     label032:
        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

        $i0 = virtualinvoke $r12.<org.json.JSONArray: int length()>();

     label033:
        if $i0 != 0 goto label044;

        $z0 = 0;

        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label034:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        $i0 = virtualinvoke $r4.<com.ichi2.libanki.Media: int dirtyCount()>();

     label035:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label036:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        $r14 = virtualinvoke $r4.<com.ichi2.libanki.Media: android.util.Pair mediaChangesZip()>();

     label037:
        $r15 = $r14.<android.util.Pair: java.lang.Object first>;

        r16 = (java.io.File) $r15;

     label038:
        $r15 = $r14.<android.util.Pair: java.lang.Object second>;

        r17 = (java.util.List) $r15;

        $i2 = interfaceinvoke r17.<java.util.List: int size()>();

     label039:
        if $i2 != 0 goto label119;

     label040:
        virtualinvoke r16.<java.io.File: boolean delete()>();

     label041:
        if $z0 == 0 goto label131;

        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "restart sync due to concurrent update";

     label042:
        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

        $r10 = virtualinvoke r0.<com.ichi2.libanki.sync.MediaSyncer: java.lang.String sync()>();

     label043:
        return $r10;

     label044:
        r2 = new java.util.ArrayList;

     label045:
        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        i1 = virtualinvoke $r12.<org.json.JSONArray: int length()>();

     label046:
        i1 = i1 + -1;

     label047:
        $r18 = virtualinvoke $r12.<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>(i1);

        $i0 = virtualinvoke $r18.<org.json.JSONArray: int getInt(int)>(1);

     label048:
        i1 = $i0;

        $i2 = 0;

     label049:
        $i3 = virtualinvoke $r12.<org.json.JSONArray: int length()>();

     label050:
        if $i2 >= $i3 goto label111;

     label051:
        $z0 = staticinvoke <com.ichi2.async.Connection: boolean getIsCancelled()>();

     label052:
        if $z0 == 0 goto label057;

        $r6 = newarray (java.lang.Object)[0];

     label053:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Sync was cancelled", $r6);

     label054:
        $r11 = new java.lang.RuntimeException;

     label055:
        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("UserAbortedSync");

     label056:
        throw $r11;

     label057:
        $r18 = virtualinvoke $r12.<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>($i2);

        $r10 = virtualinvoke $r18.<org.json.JSONArray: java.lang.String getString(int)>(0);

        $r18 = virtualinvoke $r12.<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>($i2);

        $i3 = virtualinvoke $r18.<org.json.JSONArray: int getInt(int)>(1);

     label058:
        r19 = null;

     label059:
        $r18 = virtualinvoke $r12.<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>($i2);

        $z0 = virtualinvoke $r18.<org.json.JSONArray: boolean isNull(int)>(2);

     label060:
        if $z0 != 0 goto label062;

     label061:
        $r18 = virtualinvoke $r12.<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>($i2);

        r19 = virtualinvoke $r18.<org.json.JSONArray: java.lang.String optString(int)>(2);

     label062:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label063:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        $r14 = virtualinvoke $r4.<com.ichi2.libanki.Media: android.util.Pair syncInfo(java.lang.String)>($r10);

     label064:
        $r15 = $r14.<android.util.Pair: java.lang.Object first>;

        r20 = (java.lang.String) $r15;

        $r15 = $r14.<android.util.Pair: java.lang.Object second>;

        $r13 = (java.lang.Integer) $r15;

     label065:
        $i4 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

     label066:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r21 = <java.util.Locale: java.util.Locale US>;

        $r22 = newarray (java.lang.Object)[5];

     label067:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r20);

     label068:
        if $z0 == 0 goto label090;

        $r23 = "";

     label069:
        $r22[0] = $r23;

     label070:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r19);

     label071:
        if $z0 == 0 goto label092;

        $r23 = "";

     label072:
        $r22[1] = $r23;

     label073:
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

     label074:
        $r22[2] = $r13;

     label075:
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

     label076:
        $r22[3] = $r13;

        $r22[4] = $r10;

     label077:
        $r24 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r21, "check: lsum=%s rsum=%s ldirty=%d rusn=%d fname=%s", $r22);

     label078:
        $r6[0] = $r24;

     label079:
        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r19);

     label080:
        if $z0 != 0 goto label097;

     label081:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r20);

     label082:
        if $z0 != 0 goto label085;

     label083:
        $z0 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>(r19);

     label084:
        if $z0 != 0 goto label094;

     label085:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "will fetch";

     label086:
        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

     label087:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label088:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        r17 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r10);

        virtualinvoke $r4.<com.ichi2.libanki.Media: void markClean(java.util.List)>(r17);

     label089:
        $i2 = $i2 + 1;

        goto label049;

     label090:
        $r23 = virtualinvoke r20.<java.lang.String: java.lang.CharSequence subSequence(int,int)>(0, 4);

     label091:
        goto label069;

     label092:
        $r23 = virtualinvoke r19.<java.lang.String: java.lang.CharSequence subSequence(int,int)>(0, 4);

     label093:
        goto label072;

     label094:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "have same already";

     label095:
        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

     label096:
        goto label087;

     label097:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r20);

     label098:
        if $z0 != 0 goto label106;

        if $i4 != 0 goto label103;

        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "delete local";

     label099:
        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

     label100:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label101:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        virtualinvoke $r4.<com.ichi2.libanki.Media: void syncDelete(java.lang.String)>($r10);

     label102:
        goto label089;

     label103:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "conflict; will send";

     label104:
        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

     label105:
        goto label089;

     label106:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "both sides deleted";

     label107:
        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

     label108:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label109:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        r17 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r10);

        virtualinvoke $r4.<com.ichi2.libanki.Media: void markClean(java.util.List)>(r17);

     label110:
        goto label089;

     label111:
        specialinvoke r0.<com.ichi2.libanki.sync.MediaSyncer: void _downloadFiles(java.util.List)>(r2);

     label112:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r9 = new java.lang.StringBuilder;

     label113:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update last usn to ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label114:
        $r6[0] = $r10;

     label115:
        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

     label116:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label117:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        virtualinvoke $r4.<com.ichi2.libanki.Media: void setLastUsn(int)>($i0);

     label118:
        goto label020;

     label119:
        $r5 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.async.Connection mCon>;

        $r25 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.res.Resources getAppResources()>();

        $r10 = virtualinvoke $r25.<android.content.res.Resources: java.lang.String getString(int)>(2131231421);

        $r6 = newarray (java.lang.Object)[1];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[0] = $r13;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r10, $r6);

        virtualinvoke $r5.<com.ichi2.async.Connection: void publishProgress(java.lang.String)>($r10);

        $r7 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.sync.RemoteMediaServer mServer>;

        $r12 = virtualinvoke $r7.<com.ichi2.libanki.sync.RemoteMediaServer: org.json.JSONArray uploadChanges(java.io.File)>(r16);

        $i2 = virtualinvoke $r12.<org.json.JSONArray: int getInt(int)>(0);

        $i3 = virtualinvoke $r12.<org.json.JSONArray: int getInt(int)>(1);

        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        r17 = interfaceinvoke r17.<java.util.List: java.util.List subList(int,int)>(0, $i2);

        virtualinvoke $r4.<com.ichi2.libanki.Media: void markClean(java.util.List)>(r17);

        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r21 = <java.util.Locale: java.util.Locale US>;

        $r22 = newarray (java.lang.Object)[3];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r22[0] = $r13;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r22[1] = $r13;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r22[2] = $r13;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r21, "processed %d, serverUsn %d, clientUsn %d", $r22);

        $r6[0] = $r10;

        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

     label120:
        $i4 = $i3 - $i2;

        if $i4 != i1 goto label127;

     label121:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "lastUsn in sync, updating local";

        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

     label122:
        i1 = $i3;

     label123:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        virtualinvoke $r4.<com.ichi2.libanki.Media: void setLastUsn(int)>($i3);

     label124:
        $i0 = $i0 - $i2;

     label125:
        virtualinvoke r16.<java.io.File: boolean delete()>();

     label126:
        goto label035;

     label127:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "concurrent update, skipping usn update";

        virtualinvoke $r3.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        $r26 = virtualinvoke $r4.<com.ichi2.libanki.Media: com.ichi2.libanki.DB getDb()>();

        virtualinvoke $r26.<com.ichi2.libanki.DB: void commit()>();

     label128:
        $z0 = 1;

        goto label124;

     label129:
        $r27 := @caughtexception;

     label130:
        virtualinvoke r16.<java.io.File: boolean delete()>();

        throw $r27;

     label131:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label132:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        i1 = virtualinvoke $r4.<com.ichi2.libanki.Media: int mediacount()>();

     label133:
        $r7 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.sync.RemoteMediaServer mServer>;

     label134:
        $r10 = virtualinvoke $r7.<com.ichi2.libanki.sync.RemoteMediaServer: java.lang.String mediaSanity(int)>(i1);

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("OK");

     label135:
        if $z0 == 0 goto label136;

        return "OK";

     label136:
        $r3 = r0.<com.ichi2.libanki.sync.MediaSyncer: com.ichi2.libanki.Collection mCol>;

     label137:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        virtualinvoke $r4.<com.ichi2.libanki.Media: void forceResync()>();

     label138:
        return $r10;

        catch org.json.JSONException from label001 to label002 with label026;
        catch org.json.JSONException from label003 to label004 with label026;
        catch org.json.JSONException from label005 to label006 with label026;
        catch org.json.JSONException from label007 to label008 with label026;
        catch org.json.JSONException from label009 to label010 with label026;
        catch org.json.JSONException from label011 to label012 with label026;
        catch org.json.JSONException from label013 to label014 with label026;
        catch org.json.JSONException from label016 to label017 with label026;
        catch org.json.JSONException from label018 to label019 with label026;
        catch org.json.JSONException from label020 to label021 with label026;
        catch org.json.JSONException from label022 to label023 with label026;
        catch org.json.JSONException from label024 to label025 with label026;
        catch org.json.JSONException from label028 to label029 with label026;
        catch org.json.JSONException from label030 to label031 with label026;
        catch org.json.JSONException from label032 to label033 with label026;
        catch org.json.JSONException from label034 to label035 with label026;
        catch org.json.JSONException from label036 to label037 with label026;
        catch java.lang.Throwable from label038 to label039 with label129;
        catch org.json.JSONException from label040 to label041 with label026;
        catch org.json.JSONException from label042 to label043 with label026;
        catch org.json.JSONException from label045 to label046 with label026;
        catch org.json.JSONException from label047 to label048 with label026;
        catch org.json.JSONException from label049 to label050 with label026;
        catch org.json.JSONException from label051 to label052 with label026;
        catch org.json.JSONException from label053 to label054 with label026;
        catch org.json.JSONException from label055 to label056 with label026;
        catch org.json.JSONException from label057 to label058 with label026;
        catch org.json.JSONException from label059 to label060 with label026;
        catch org.json.JSONException from label061 to label062 with label026;
        catch org.json.JSONException from label063 to label064 with label026;
        catch org.json.JSONException from label065 to label066 with label026;
        catch org.json.JSONException from label067 to label068 with label026;
        catch org.json.JSONException from label070 to label071 with label026;
        catch org.json.JSONException from label073 to label074 with label026;
        catch org.json.JSONException from label075 to label076 with label026;
        catch org.json.JSONException from label077 to label078 with label026;
        catch org.json.JSONException from label079 to label080 with label026;
        catch org.json.JSONException from label081 to label082 with label026;
        catch org.json.JSONException from label083 to label084 with label026;
        catch org.json.JSONException from label086 to label087 with label026;
        catch org.json.JSONException from label088 to label089 with label026;
        catch org.json.JSONException from label090 to label091 with label026;
        catch org.json.JSONException from label092 to label093 with label026;
        catch org.json.JSONException from label095 to label096 with label026;
        catch org.json.JSONException from label097 to label098 with label026;
        catch org.json.JSONException from label099 to label100 with label026;
        catch org.json.JSONException from label101 to label102 with label026;
        catch org.json.JSONException from label104 to label105 with label026;
        catch org.json.JSONException from label107 to label108 with label026;
        catch org.json.JSONException from label109 to label110 with label026;
        catch org.json.JSONException from label111 to label112 with label026;
        catch org.json.JSONException from label113 to label114 with label026;
        catch org.json.JSONException from label115 to label116 with label026;
        catch org.json.JSONException from label117 to label118 with label026;
        catch java.lang.Throwable from label119 to label120 with label129;
        catch java.lang.Throwable from label121 to label122 with label129;
        catch java.lang.Throwable from label123 to label124 with label129;
        catch org.json.JSONException from label125 to label126 with label026;
        catch java.lang.Throwable from label127 to label128 with label129;
        catch org.json.JSONException from label130 to label131 with label026;
        catch org.json.JSONException from label132 to label133 with label026;
        catch org.json.JSONException from label134 to label135 with label026;
        catch org.json.JSONException from label137 to label138 with label026;
    }
