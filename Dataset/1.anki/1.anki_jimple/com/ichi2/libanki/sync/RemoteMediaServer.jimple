com.ichi2.libanki.sync.RemoteMediaServer extends com.ichi2.libanki.sync.HttpSyncer
private com.ichi2.libanki.Collection mCol
    public void <init>(com.ichi2.libanki.Collection, java.lang.String, com.ichi2.async.Connection)
    {
        com.ichi2.libanki.sync.RemoteMediaServer r0;
        com.ichi2.libanki.Collection $r1;
        java.lang.String $r2;
        com.ichi2.async.Connection $r3;

        r0 := @this: com.ichi2.libanki.sync.RemoteMediaServer;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.ichi2.async.Connection;

        specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: void <init>(java.lang.String,com.ichi2.async.Connection)>($r2, $r3);

        r0.<com.ichi2.libanki.sync.RemoteMediaServer: com.ichi2.libanki.Collection mCol> = $r1;

        return;
    }
    private java.lang.Object _dataOnly(org.json.JSONObject, java.lang.Class) throws com.ichi2.anki.exception.MediaSyncException
    {
        com.ichi2.libanki.sync.RemoteMediaServer r0;
        org.json.JSONObject $r1;
        java.lang.Class r2;
        org.json.JSONException r3;
        java.lang.String $r4, $r8;
        boolean $z0;
        com.ichi2.libanki.Collection $r5;
        java.lang.Object[] $r6;
        java.lang.StringBuilder $r7;
        com.ichi2.anki.exception.MediaSyncException $r9;
        java.lang.RuntimeException $r10;
        org.json.JSONArray $r11;

        r0 := @this: com.ichi2.libanki.sync.RemoteMediaServer;

        $r1 := @parameter0: org.json.JSONObject;

        r2 := @parameter1: java.lang.Class;

     label01:
        $r4 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("err");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

     label02:
        if $z0 != 0 goto label12;

     label03:
        $r4 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("err");

     label04:
        $r5 = r0.<com.ichi2.libanki.sync.RemoteMediaServer: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error returned: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $r6[0] = $r8;

     label07:
        virtualinvoke $r5.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

     label08:
        $r9 = new com.ichi2.anki.exception.MediaSyncException;

        $r7 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SyncError:");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.ichi2.anki.exception.MediaSyncException: void <init>(java.lang.String)>($r4);

     label10:
        throw $r9;

     label11:
        r3 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r10;

     label12:
        if r2 != class "Ljava/lang/String;" goto label15;

     label13:
        $r4 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("data");

     label14:
        return $r4;

     label15:
        if r2 != class "Lorg/json/JSONObject;" goto label18;

     label16:
        $r1 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("data");

     label17:
        return $r1;

     label18:
        if r2 != class "Lorg/json/JSONArray;" goto label21;

     label19:
        $r11 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("data");

     label20:
        return $r11;

     label21:
        $r10 = new java.lang.RuntimeException;

     label22:
        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Did not specify a valid type for the \'data\' element in resopnse");

     label23:
        throw $r10;

        catch org.json.JSONException from label01 to label02 with label11;
        catch org.json.JSONException from label03 to label04 with label11;
        catch org.json.JSONException from label05 to label06 with label11;
        catch org.json.JSONException from label07 to label08 with label11;
        catch org.json.JSONException from label09 to label10 with label11;
        catch org.json.JSONException from label13 to label14 with label11;
        catch org.json.JSONException from label16 to label17 with label11;
        catch org.json.JSONException from label19 to label20 with label11;
        catch org.json.JSONException from label22 to label23 with label11;
    }
    public org.json.JSONObject begin() throws com.ichi2.anki.exception.UnknownHttpResponseException, com.ichi2.anki.exception.MediaSyncException
    {
        com.ichi2.libanki.sync.RemoteMediaServer r0;
        org.json.JSONObject r1;
        java.util.HashMap $r2;
        java.util.Map $r3;
        java.lang.String $r4;
        java.util.Locale $r5;
        java.lang.Object[] $r6;
        java.io.ByteArrayInputStream $r7;
        org.apache.http.HttpResponse $r8;
        org.apache.http.HttpEntity $r9;
        java.io.InputStream $r10;
        java.lang.Object $r11;
        java.lang.Exception r12;
        java.lang.RuntimeException $r13;

        r0 := @this: com.ichi2.libanki.sync.RemoteMediaServer;

        $r2 = new java.util.HashMap;

     label01:
        specialinvoke $r2.<java.util.HashMap: void <init>()>();

     label02:
        r0.<com.ichi2.libanki.sync.RemoteMediaServer: java.util.Map mPostVars> = $r2;

        $r3 = r0.<com.ichi2.libanki.sync.RemoteMediaServer: java.util.Map mPostVars>;

        $r4 = r0.<com.ichi2.libanki.sync.RemoteMediaServer: java.lang.String mHKey>;

     label03:
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("k", $r4);

     label04:
        $r3 = r0.<com.ichi2.libanki.sync.RemoteMediaServer: java.util.Map mPostVars>;

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r6 = newarray (java.lang.Object)[2];

     label05:
        $r4 = staticinvoke <com.ichi2.utils.VersionUtils: java.lang.String getPkgVersionName()>();

     label06:
        $r6[0] = $r4;

     label07:
        $r4 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String platDesc()>();

     label08:
        $r6[1] = $r4;

     label09:
        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r5, "ankidroid,%s,%s", $r6);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("v", $r4);

     label10:
        r1 = new org.json.JSONObject;

     label11:
        specialinvoke r1.<org.json.JSONObject: void <init>()>();

        $r4 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String jsonToString(org.json.JSONObject)>(r1);

        $r7 = staticinvoke <com.ichi2.libanki.sync.HttpSyncer: java.io.ByteArrayInputStream getInputStream(java.lang.String)>($r4);

        $r8 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: org.apache.http.HttpResponse req(java.lang.String,java.io.InputStream)>("begin", $r7);

     label12:
        r1 = new org.json.JSONObject;

     label13:
        $r9 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r10 = interfaceinvoke $r9.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r4 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: java.lang.String stream2String(java.io.InputStream)>($r10);

        specialinvoke r1.<org.json.JSONObject: void <init>(java.lang.String)>($r4);

        $r11 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteMediaServer: java.lang.Object _dataOnly(org.json.JSONObject,java.lang.Class)>(r1, class "Lorg/json/JSONObject;");

     label14:
        r1 = (org.json.JSONObject) $r11;

     label15:
        $r4 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("sk");

     label16:
        r0.<com.ichi2.libanki.sync.RemoteMediaServer: java.lang.String mSKey> = $r4;

        return r1;

     label17:
        r12 := @caughtexception;

     label18:
        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r12);

        throw $r13;

     label19:
        r12 := @caughtexception;

        goto label18;

        catch org.json.JSONException from label01 to label02 with label17;
        catch org.json.JSONException from label03 to label04 with label17;
        catch org.json.JSONException from label05 to label06 with label17;
        catch org.json.JSONException from label07 to label08 with label17;
        catch org.json.JSONException from label09 to label10 with label17;
        catch org.json.JSONException from label11 to label12 with label17;
        catch org.json.JSONException from label13 to label14 with label17;
        catch org.json.JSONException from label15 to label16 with label17;
        catch java.io.IOException from label01 to label02 with label19;
        catch java.io.IOException from label03 to label04 with label19;
        catch java.io.IOException from label05 to label06 with label19;
        catch java.io.IOException from label07 to label08 with label19;
        catch java.io.IOException from label09 to label10 with label19;
        catch java.io.IOException from label11 to label12 with label19;
        catch java.io.IOException from label13 to label14 with label19;
        catch java.io.IOException from label15 to label16 with label19;
    }
    public java.util.zip.ZipFile downloadFiles(java.util.List) throws com.ichi2.anki.exception.UnknownHttpResponseException
    {
        com.ichi2.libanki.sync.RemoteMediaServer r0;
        java.util.List r1;
        org.json.JSONArray $r2;
        org.json.JSONObject $r3;
        java.lang.String $r4;
        java.io.ByteArrayInputStream $r5;
        org.apache.http.HttpResponse $r6;
        com.ichi2.libanki.Collection $r7;
        org.apache.http.HttpEntity $r8;
        java.io.InputStream $r9;
        java.util.zip.ZipFile $r10;
        java.io.File $r11;
        org.json.JSONException r12;
        java.lang.RuntimeException $r13;
        java.io.IOException r14;
        java.lang.Object[] $r15;

        r0 := @this: com.ichi2.libanki.sync.RemoteMediaServer;

        r1 := @parameter0: java.util.List;

        $r3 = new org.json.JSONObject;

     label01:
        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

     label02:
        $r2 = new org.json.JSONArray;

     label03:
        specialinvoke $r2.<org.json.JSONArray: void <init>(java.util.Collection)>(r1);

        $r3 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("files", $r2);

        $r4 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String jsonToString(org.json.JSONObject)>($r3);

        $r5 = staticinvoke <com.ichi2.libanki.sync.HttpSyncer: java.io.ByteArrayInputStream getInputStream(java.lang.String)>($r4);

        $r6 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: org.apache.http.HttpResponse req(java.lang.String,java.io.InputStream)>("downloadFiles", $r5);

     label04:
        $r7 = r0.<com.ichi2.libanki.sync.RemoteMediaServer: com.ichi2.libanki.Collection mCol>;

     label05:
        $r4 = virtualinvoke $r7.<com.ichi2.libanki.Collection: java.lang.String getPath()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("collection\\.anki2$", "tmpSyncFromServer.zip");

        $r8 = interfaceinvoke $r6.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r9 = interfaceinvoke $r8.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: void writeToFile(java.io.InputStream,java.lang.String)>($r9, $r4);

     label06:
        $r10 = new java.util.zip.ZipFile;

        $r11 = new java.io.File;

     label07:
        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r4);

        specialinvoke $r10.<java.util.zip.ZipFile: void <init>(java.io.File,int)>($r11, 5);

     label08:
        return $r10;

     label09:
        r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r12);

        throw $r13;

     label10:
        r14 := @caughtexception;

        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r14, "Failed to download requested media files", $r15);

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r14);

        throw $r13;

        catch org.json.JSONException from label01 to label02 with label09;
        catch org.json.JSONException from label03 to label04 with label09;
        catch org.json.JSONException from label05 to label06 with label09;
        catch org.json.JSONException from label07 to label08 with label09;
        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label07 to label08 with label10;
    }
    public org.json.JSONArray mediaChanges(int) throws com.ichi2.anki.exception.UnknownHttpResponseException, com.ichi2.anki.exception.MediaSyncException
    {
        com.ichi2.libanki.sync.RemoteMediaServer r0;
        int $i0;
        org.json.JSONObject r1;
        java.util.HashMap $r2;
        java.util.Map $r3;
        java.lang.String $r4;
        java.io.ByteArrayInputStream $r5;
        org.apache.http.HttpResponse $r6;
        org.apache.http.HttpEntity $r7;
        java.io.InputStream $r8;
        java.lang.Object $r9;
        org.json.JSONArray $r10;
        java.lang.Exception r11;
        java.lang.RuntimeException $r12;

        r0 := @this: com.ichi2.libanki.sync.RemoteMediaServer;

        $i0 := @parameter0: int;

        $r2 = new java.util.HashMap;

     label01:
        specialinvoke $r2.<java.util.HashMap: void <init>()>();

     label02:
        r0.<com.ichi2.libanki.sync.RemoteMediaServer: java.util.Map mPostVars> = $r2;

        $r3 = r0.<com.ichi2.libanki.sync.RemoteMediaServer: java.util.Map mPostVars>;

        $r4 = r0.<com.ichi2.libanki.sync.RemoteMediaServer: java.lang.String mSKey>;

     label03:
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sk", $r4);

     label04:
        r1 = new org.json.JSONObject;

     label05:
        specialinvoke r1.<org.json.JSONObject: void <init>()>();

        r1 = virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("lastUsn", $i0);

        $r4 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String jsonToString(org.json.JSONObject)>(r1);

        $r5 = staticinvoke <com.ichi2.libanki.sync.HttpSyncer: java.io.ByteArrayInputStream getInputStream(java.lang.String)>($r4);

        $r6 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: org.apache.http.HttpResponse req(java.lang.String,java.io.InputStream)>("mediaChanges", $r5);

     label06:
        r1 = new org.json.JSONObject;

     label07:
        $r7 = interfaceinvoke $r6.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r8 = interfaceinvoke $r7.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r4 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: java.lang.String stream2String(java.io.InputStream)>($r8);

        specialinvoke r1.<org.json.JSONObject: void <init>(java.lang.String)>($r4);

        $r9 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteMediaServer: java.lang.Object _dataOnly(org.json.JSONObject,java.lang.Class)>(r1, class "Lorg/json/JSONArray;");

     label08:
        $r10 = (org.json.JSONArray) $r9;

        return $r10;

     label09:
        r11 := @caughtexception;

     label10:
        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r11);

        throw $r12;

     label11:
        r11 := @caughtexception;

        goto label10;

        catch org.json.JSONException from label01 to label02 with label09;
        catch org.json.JSONException from label03 to label04 with label09;
        catch org.json.JSONException from label05 to label06 with label09;
        catch org.json.JSONException from label07 to label08 with label09;
        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.io.IOException from label07 to label08 with label11;
    }
    public java.lang.String mediaSanity(int) throws com.ichi2.anki.exception.UnknownHttpResponseException, com.ichi2.anki.exception.MediaSyncException
    {
        com.ichi2.libanki.sync.RemoteMediaServer r0;
        int $i0;
        org.json.JSONObject r1;
        java.lang.String $r2;
        java.io.ByteArrayInputStream $r3;
        org.apache.http.HttpResponse $r4;
        org.apache.http.HttpEntity $r5;
        java.io.InputStream $r6;
        java.lang.Object $r7;
        java.lang.Exception r8;
        java.lang.RuntimeException $r9;

        r0 := @this: com.ichi2.libanki.sync.RemoteMediaServer;

        $i0 := @parameter0: int;

        r1 = new org.json.JSONObject;

     label1:
        specialinvoke r1.<org.json.JSONObject: void <init>()>();

        r1 = virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("local", $i0);

        $r2 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String jsonToString(org.json.JSONObject)>(r1);

        $r3 = staticinvoke <com.ichi2.libanki.sync.HttpSyncer: java.io.ByteArrayInputStream getInputStream(java.lang.String)>($r2);

        $r4 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: org.apache.http.HttpResponse req(java.lang.String,java.io.InputStream)>("mediaSanity", $r3);

     label2:
        r1 = new org.json.JSONObject;

     label3:
        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r6 = interfaceinvoke $r5.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r2 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: java.lang.String stream2String(java.io.InputStream)>($r6);

        specialinvoke r1.<org.json.JSONObject: void <init>(java.lang.String)>($r2);

        $r7 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteMediaServer: java.lang.Object _dataOnly(org.json.JSONObject,java.lang.Class)>(r1, class "Ljava/lang/String;");

     label4:
        $r2 = (java.lang.String) $r7;

        return $r2;

     label5:
        r8 := @caughtexception;

     label6:
        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r8);

        throw $r9;

     label7:
        r8 := @caughtexception;

        goto label6;

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
    }
    public java.lang.String syncURL()
    {
        com.ichi2.libanki.sync.RemoteMediaServer r0;
        com.ichi2.anki.AnkiDroidApp $r1;
        android.content.SharedPreferences $r2;
        boolean $z0;
        java.lang.String $r3;
        android.net.Uri $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.ichi2.libanki.sync.RemoteMediaServer;

        $r1 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

        $r2 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r1);

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("useCustomSyncServer", 0);

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("syncMediaUrl", "https://sync.ankiweb.net/msync/");

        $r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r4.<android.net.Uri: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label1:
        return "https://sync.ankiweb.net/msync/";
    }
    public org.json.JSONArray uploadChanges(java.io.File) throws com.ichi2.anki.exception.UnknownHttpResponseException, com.ichi2.anki.exception.MediaSyncException
    {
        com.ichi2.libanki.sync.RemoteMediaServer r0;
        java.io.File $r1;
        org.json.JSONObject r2;
        java.io.FileInputStream $r3;
        org.apache.http.HttpResponse $r4;
        org.apache.http.HttpEntity $r5;
        java.io.InputStream $r6;
        java.lang.String $r7;
        java.lang.Object $r8;
        org.json.JSONArray $r9;
        java.lang.Exception r10;
        java.lang.RuntimeException $r11;

        r0 := @this: com.ichi2.libanki.sync.RemoteMediaServer;

        $r1 := @parameter0: java.io.File;

        $r3 = new java.io.FileInputStream;

     label1:
        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        $r4 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: org.apache.http.HttpResponse req(java.lang.String,java.io.InputStream,int)>("uploadChanges", $r3, 0);

     label2:
        r2 = new org.json.JSONObject;

     label3:
        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r6 = interfaceinvoke $r5.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r7 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: java.lang.String stream2String(java.io.InputStream)>($r6);

        specialinvoke r2.<org.json.JSONObject: void <init>(java.lang.String)>($r7);

        $r8 = specialinvoke r0.<com.ichi2.libanki.sync.RemoteMediaServer: java.lang.Object _dataOnly(org.json.JSONObject,java.lang.Class)>(r2, class "Lorg/json/JSONArray;");

     label4:
        $r9 = (org.json.JSONArray) $r8;

        return $r9;

     label5:
        r10 := @caughtexception;

     label6:
        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r10);

        throw $r11;

     label7:
        r10 := @caughtexception;

        goto label6;

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
    }
