com.ichi2.libanki.sync.FullSyncer extends com.ichi2.libanki.sync.HttpSyncer
com.ichi2.libanki.Collection mCol
com.ichi2.async.Connection mCon
    public void <init>(com.ichi2.libanki.Collection, java.lang.String, com.ichi2.async.Connection)
    {
        com.ichi2.libanki.sync.FullSyncer r0;
        com.ichi2.libanki.Collection $r1;
        java.lang.String $r2;
        com.ichi2.async.Connection $r3;
        java.util.HashMap $r4;
        java.util.Map $r5;
        java.util.Locale $r6;
        java.lang.Object[] $r7;

        r0 := @this: com.ichi2.libanki.sync.FullSyncer;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.ichi2.async.Connection;

        specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: void <init>(java.lang.String,com.ichi2.async.Connection)>($r2, $r3);

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.ichi2.libanki.sync.FullSyncer: java.util.Map mPostVars> = $r4;

        $r5 = r0.<com.ichi2.libanki.sync.FullSyncer: java.util.Map mPostVars>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("k", $r2);

        $r5 = r0.<com.ichi2.libanki.sync.FullSyncer: java.util.Map mPostVars>;

        $r6 = <java.util.Locale: java.util.Locale US>;

        $r7 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <com.ichi2.utils.VersionUtils: java.lang.String getPkgVersionName()>();

        $r7[0] = $r2;

        $r2 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String platDesc()>();

        $r7[1] = $r2;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, "ankidroid,%s,%s", $r7);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("v", $r2);

        r0.<com.ichi2.libanki.sync.FullSyncer: com.ichi2.libanki.Collection mCol> = $r1;

        r0.<com.ichi2.libanki.sync.FullSyncer: com.ichi2.async.Connection mCon> = $r3;

        return;
    }
    public java.lang.Object[] download() throws com.ichi2.anki.exception.UnknownHttpResponseException
    {
        com.ichi2.libanki.sync.FullSyncer r0;
        java.io.FileInputStream r1;
        java.io.File r2, $r21;
        com.ichi2.libanki.DB r3, r20;
        org.apache.http.HttpResponse $r4;
        org.apache.http.HttpEntity $r5;
        java.io.InputStream $r6;
        com.ichi2.libanki.Collection $r7;
        java.lang.String $r8, $r10, $r11;
        java.lang.StringBuilder $r9;
        boolean $z0;
        java.lang.Object[] $r12;
        java.io.FileNotFoundException r13;
        java.lang.RuntimeException $r14;
        java.lang.IllegalStateException r15;
        java.io.IOException r16, r18;
        com.ichi2.anki.AnkiDroidApp $r17;
        com.ichi2.async.Connection $r19;
        android.database.sqlite.SQLiteDatabaseCorruptException r22, r24;
        java.lang.Throwable $r23;

        r0 := @this: com.ichi2.libanki.sync.FullSyncer;

     label01:
        $r4 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: org.apache.http.HttpResponse req(java.lang.String)>("download");

     label02:
        if $r4 != null goto label03;

        return null;

     label03:
        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r6 = interfaceinvoke $r5.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label04:
        $r7 = r0.<com.ichi2.libanki.sync.FullSyncer: com.ichi2.libanki.Collection mCol>;

        if $r7 == null goto label13;

        $r7 = r0.<com.ichi2.libanki.sync.FullSyncer: com.ichi2.libanki.Collection mCol>;

        $r8 = virtualinvoke $r7.<com.ichi2.libanki.Collection: java.lang.String getPath()>();

        $r7 = r0.<com.ichi2.libanki.sync.FullSyncer: com.ichi2.libanki.Collection mCol>;

        virtualinvoke $r7.<com.ichi2.libanki.Collection: void close()>();

        r0.<com.ichi2.libanki.sync.FullSyncer: com.ichi2.libanki.Collection mCol> = null;

     label05:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: void writeToFile(java.io.InputStream,java.lang.String)>($r6, $r10);

     label07:
        r1 = new java.io.FileInputStream;

     label08:
        specialinvoke r1.<java.io.FileInputStream: void <init>(java.lang.String)>($r10);

        $r11 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: java.lang.String stream2String(java.io.InputStream,int)>(r1, 15);

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("upgradeRequired");

     label09:
        if $z0 == 0 goto label15;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = "upgradeRequired";

        return $r12;

     label10:
        r13 := @caughtexception;

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r13, "Failed to create temp file when downloading collection.", $r12);

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r13);

        throw $r14;

     label11:
        r15 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r15);

        throw $r14;

     label12:
        r16 := @caughtexception;

        return null;

     label13:
        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Collection was unexpectedly null when doing full sync download", $r12);

        $r17 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

        $r8 = staticinvoke <com.ichi2.anki.CollectionHelper: java.lang.String getCollectionPath(android.content.Context)>($r17);

        goto label05;

     label14:
        r18 := @caughtexception;

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r18, "Full sync failed to download collection.", $r12);

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = "sdAccessError";

        return $r12;

     label15:
        $r19 = r0.<com.ichi2.libanki.sync.FullSyncer: com.ichi2.async.Connection mCon>;

        virtualinvoke $r19.<com.ichi2.async.Connection: void publishProgress(int)>(2131231392);

        r20 = null;

     label16:
        r3 = new com.ichi2.libanki.DB;

     label17:
        specialinvoke r3.<com.ichi2.libanki.DB: void <init>(java.lang.String)>($r10);

     label18:
        $r11 = virtualinvoke r3.<com.ichi2.libanki.DB: java.lang.String queryString(java.lang.String)>("PRAGMA integrity_check");

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ok");

     label19:
        if $z0 != 0 goto label24;

     label20:
        $r12 = newarray (java.lang.Object)[0];

     label21:
        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Full sync - downloaded file corrupt", $r12);

     label22:
        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = "remoteDbError";

     label23:
        if r3 == null goto label35;

        virtualinvoke r3.<com.ichi2.libanki.DB: void close()>();

        return $r12;

     label24:
        if r3 == null goto label25;

        virtualinvoke r3.<com.ichi2.libanki.DB: void close()>();

     label25:
        r2 = new java.io.File;

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r10);

        $r21 = new java.io.File;

        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>($r8);

        $z0 = virtualinvoke r2.<java.io.File: boolean renameTo(java.io.File)>($r21);

        if $z0 == 0 goto label32;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = "success";

        return $r12;

     label26:
        r22 := @caughtexception;

     label27:
        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Full sync - downloaded file corrupt", $r12);

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = "remoteDbError";

     label28:
        if r20 == null goto label35;

        virtualinvoke r20.<com.ichi2.libanki.DB: void close()>();

        return $r12;

     label29:
        $r23 := @caughtexception;

     label30:
        if r20 == null goto label31;

        virtualinvoke r20.<com.ichi2.libanki.DB: void close()>();

     label31:
        throw $r23;

     label32:
        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = "overwriteError";

        return $r12;

     label33:
        $r23 := @caughtexception;

        r20 = r3;

        goto label30;

     label34:
        r24 := @caughtexception;

        r20 = r3;

        goto label27;

     label35:
        return $r12;

        catch java.lang.IllegalStateException from label01 to label02 with label11;
        catch java.lang.IllegalStateException from label03 to label04 with label11;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.FileNotFoundException from label06 to label07 with label10;
        catch java.io.FileNotFoundException from label08 to label09 with label10;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.io.IOException from label08 to label09 with label14;
        catch android.database.sqlite.SQLiteDatabaseCorruptException from label17 to label18 with label26;
        catch java.lang.Throwable from label16 to label18 with label29;
        catch android.database.sqlite.SQLiteDatabaseCorruptException from label18 to label19 with label34;
        catch android.database.sqlite.SQLiteDatabaseCorruptException from label21 to label22 with label34;
        catch java.lang.Throwable from label18 to label19 with label33;
        catch java.lang.Throwable from label20 to label23 with label33;
        catch java.lang.Throwable from label27 to label28 with label29;
    }
    public java.lang.String syncURL()
    {
        com.ichi2.libanki.sync.FullSyncer r0;
        com.ichi2.anki.AnkiDroidApp $r1;
        android.content.SharedPreferences $r2;
        boolean $z0;
        java.lang.String $r3;
        android.net.Uri $r4;
        java.lang.StringBuilder $r5;
        android.net.Uri$Builder $r6;

        r0 := @this: com.ichi2.libanki.sync.FullSyncer;

        $r1 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

        $r2 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r1);

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("useCustomSyncServer", 0);

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("syncBaseUrl", "https://sync.ankiweb.net/");

        $r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r6 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("sync");

        $r3 = virtualinvoke $r6.<android.net.Uri$Builder: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label1:
        return "https://sync.ankiweb.net/sync/";
    }
    public java.lang.Object[] upload() throws com.ichi2.anki.exception.UnknownHttpResponseException
    {
        com.ichi2.libanki.sync.FullSyncer r0;
        com.ichi2.async.Connection $r1;
        com.ichi2.libanki.Collection $r2;
        com.ichi2.libanki.DB $r3;
        java.lang.String $r4;
        boolean $z0;
        java.lang.Object[] $r5;
        java.io.FileInputStream $r6;
        org.apache.http.HttpResponse $r7;
        org.apache.http.StatusLine $r8;
        int $i0;
        java.lang.Integer $r9;
        java.lang.Exception r10;
        java.lang.RuntimeException $r11;
        org.apache.http.HttpEntity $r12;
        java.io.InputStream $r13;

        r0 := @this: com.ichi2.libanki.sync.FullSyncer;

        $r1 = r0.<com.ichi2.libanki.sync.FullSyncer: com.ichi2.async.Connection mCon>;

        virtualinvoke $r1.<com.ichi2.async.Connection: void publishProgress(int)>(2131231393);

        $r2 = r0.<com.ichi2.libanki.sync.FullSyncer: com.ichi2.libanki.Collection mCol>;

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.DB: java.lang.String queryString(java.lang.String)>("PRAGMA integrity_check");

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ok");

        if $z0 != 0 goto label01;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "dbError";

        return $r5;

     label01:
        $r2 = r0.<com.ichi2.libanki.sync.FullSyncer: com.ichi2.libanki.Collection mCol>;

        $z0 = virtualinvoke $r2.<com.ichi2.libanki.Collection: boolean basicCheck()>();

        if $z0 != 0 goto label02;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "dbError";

        return $r5;

     label02:
        $r2 = r0.<com.ichi2.libanki.sync.FullSyncer: com.ichi2.libanki.Collection mCol>;

        virtualinvoke $r2.<com.ichi2.libanki.Collection: void beforeUpload()>();

        $r2 = r0.<com.ichi2.libanki.sync.FullSyncer: com.ichi2.libanki.Collection mCol>;

        $r4 = virtualinvoke $r2.<com.ichi2.libanki.Collection: java.lang.String getPath()>();

        $r1 = r0.<com.ichi2.libanki.sync.FullSyncer: com.ichi2.async.Connection mCon>;

        virtualinvoke $r1.<com.ichi2.async.Connection: void publishProgress(int)>(2131231442);

        $r6 = new java.io.FileInputStream;

     label03:
        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.lang.String)>($r4);

        $r7 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: org.apache.http.HttpResponse req(java.lang.String,java.io.InputStream)>("upload", $r6);

     label04:
        if $r7 != null goto label05;

        return null;

     label05:
        $r8 = interfaceinvoke $r7.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r8.<org.apache.http.StatusLine: int getStatusCode()>();

     label06:
        if $i0 == 200 goto label13;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = "error";

     label07:
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label08:
        $r5[1] = $r9;

     label09:
        $r8 = interfaceinvoke $r7.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r4 = interfaceinvoke $r8.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

     label10:
        $r5[2] = $r4;

        return $r5;

     label11:
        r10 := @caughtexception;

     label12:
        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r10);

        throw $r11;

     label13:
        $r5 = newarray (java.lang.Object)[1];

     label14:
        $r12 = interfaceinvoke $r7.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r13 = interfaceinvoke $r12.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r4 = specialinvoke r0.<com.ichi2.libanki.sync.HttpSyncer: java.lang.String stream2String(java.io.InputStream)>($r13);

     label15:
        $r5[0] = $r4;

        return $r5;

     label16:
        r10 := @caughtexception;

        goto label12;

        catch java.lang.IllegalStateException from label03 to label04 with label11;
        catch java.lang.IllegalStateException from label05 to label06 with label11;
        catch java.lang.IllegalStateException from label07 to label08 with label11;
        catch java.lang.IllegalStateException from label09 to label10 with label11;
        catch java.io.IOException from label03 to label04 with label16;
        catch java.io.IOException from label05 to label06 with label16;
        catch java.io.IOException from label07 to label08 with label16;
        catch java.io.IOException from label09 to label10 with label16;
        catch java.lang.IllegalStateException from label14 to label15 with label11;
        catch java.io.IOException from label14 to label15 with label16;
    }
