com.ichi2.libanki.AnkiPackageExporter extends com.ichi2.libanki.AnkiExporter
    public void <init>(com.ichi2.libanki.Collection)
    {
        com.ichi2.libanki.AnkiPackageExporter r0;
        com.ichi2.libanki.Collection $r1;

        r0 := @this: com.ichi2.libanki.AnkiPackageExporter;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        specialinvoke r0.<com.ichi2.libanki.AnkiExporter: void <init>(com.ichi2.libanki.Collection)>($r1);

        return;
    }
    private org.json.JSONObject exportFiltered(com.ichi2.libanki.ZipFile, java.lang.String, android.content.Context) throws java.io.IOException, org.json.JSONException
    {
        com.ichi2.libanki.AnkiPackageExporter r0;
        com.ichi2.libanki.ZipFile $r1;
        java.lang.String $r2, $r8, $r11, $r15, $r16;
        android.content.Context $r3;
        org.json.JSONException r4;
        java.io.File r5, r7;
        org.json.JSONObject r6;
        com.ichi2.libanki.Collection $r9;
        com.ichi2.libanki.Media $r10;
        boolean $z0;
        int i0;
        java.util.ArrayList $r12;
        java.util.Iterator $r13;
        java.lang.Object $r14;
        com.ichi2.compat.Compat $r17;
        java.lang.StringBuilder $r18;
        java.lang.Runtime $r19;
        java.io.IOException $r20;

        r0 := @this: com.ichi2.libanki.AnkiPackageExporter;

        $r1 := @parameter0: com.ichi2.libanki.ZipFile;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.Context;

        $r8 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".apkg", ".anki2");

        specialinvoke r0.<com.ichi2.libanki.AnkiExporter: void exportInto(java.lang.String,android.content.Context)>($r8, $r3);

        virtualinvoke $r1.<com.ichi2.libanki.ZipFile: void write(java.lang.String,java.lang.String)>($r8, "collection.anki2");

        virtualinvoke r0.<com.ichi2.libanki.AnkiPackageExporter: void prepareMedia()>();

        r6 = new org.json.JSONObject;

        specialinvoke r6.<org.json.JSONObject: void <init>()>();

        r5 = new java.io.File;

        $r9 = r0.<com.ichi2.libanki.AnkiPackageExporter: com.ichi2.libanki.Collection mCol>;

        $r10 = virtualinvoke $r9.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        $r11 = virtualinvoke $r10.<com.ichi2.libanki.Media: java.lang.String dir()>();

        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>($r11);

        $z0 = virtualinvoke r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label5;

        $z0 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label5;

        i0 = 0;

        $r12 = r0.<com.ichi2.libanki.AnkiPackageExporter: java.util.ArrayList mMediaFiles>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.String) $r14;

        r7 = new java.io.File;

        specialinvoke r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r5, $r11);

        $z0 = virtualinvoke r7.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        $r15 = virtualinvoke r7.<java.io.File: java.lang.String getPath()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r1.<com.ichi2.libanki.ZipFile: void write(java.lang.String,java.lang.String)>($r15, $r16);

     label2:
        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r15, $r11);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        r4 := @caughtexception;

        virtualinvoke r4.<org.json.JSONException: void printStackTrace()>();

        goto label1;

     label5:
        $r17 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        r5 = new java.io.File;

        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>($r8);

        interfaceinvoke $r17.<com.ichi2.compat.Compat: boolean deleteDatabase(java.io.File)>(r5);

        $r17 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        r5 = new java.io.File;

        $r8 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".apkg", ".media.ad.db2");

        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>($r8);

        interfaceinvoke $r17.<com.ichi2.compat.Compat: boolean deleteDatabase(java.io.File)>(r5);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".apkg", ".media");

        r5 = new java.io.File;

        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label9;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rm -r ");

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

     label6:
        virtualinvoke $r19.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r2);

     label7:
        return r6;

     label8:
        $r20 := @caughtexception;

     label9:
        return r6;

        catch org.json.JSONException from label2 to label3 with label4;
        catch java.io.IOException from label6 to label7 with label8;
    }
    private org.json.JSONObject exportVerbatim(com.ichi2.libanki.ZipFile) throws java.io.IOException
    {
        com.ichi2.libanki.AnkiPackageExporter r0;
        com.ichi2.libanki.ZipFile $r1;
        org.json.JSONException r2;
        java.io.File r3;
        org.json.JSONObject r4;
        com.ichi2.libanki.Collection $r5;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r9;
        boolean $z0;
        com.ichi2.libanki.Media $r7;
        java.io.File[] $r8;

        r0 := @this: com.ichi2.libanki.AnkiPackageExporter;

        $r1 := @parameter0: com.ichi2.libanki.ZipFile;

        $r5 = r0.<com.ichi2.libanki.AnkiPackageExporter: com.ichi2.libanki.Collection mCol>;

        $i0 = virtualinvoke $r5.<com.ichi2.libanki.Collection: int cardCount()>();

        r0.<com.ichi2.libanki.AnkiPackageExporter: int mCount> = $i0;

        $r5 = r0.<com.ichi2.libanki.AnkiPackageExporter: com.ichi2.libanki.Collection mCol>;

        virtualinvoke $r5.<com.ichi2.libanki.Collection: void close()>();

        $r5 = r0.<com.ichi2.libanki.AnkiPackageExporter: com.ichi2.libanki.Collection mCol>;

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Collection: java.lang.String getPath()>();

        virtualinvoke $r1.<com.ichi2.libanki.ZipFile: void write(java.lang.String,java.lang.String)>($r6, "collection.anki2");

        $r5 = r0.<com.ichi2.libanki.AnkiPackageExporter: com.ichi2.libanki.Collection mCol>;

        virtualinvoke $r5.<com.ichi2.libanki.Collection: void reopen()>();

        r4 = new org.json.JSONObject;

        specialinvoke r4.<org.json.JSONObject: void <init>()>();

        $z0 = r0.<com.ichi2.libanki.AnkiPackageExporter: boolean mIncludeMedia>;

        if $z0 != 0 goto label1;

        return r4;

     label1:
        r3 = new java.io.File;

        $r5 = r0.<com.ichi2.libanki.AnkiPackageExporter: com.ichi2.libanki.Collection mCol>;

        $r7 = virtualinvoke $r5.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        $r6 = virtualinvoke $r7.<com.ichi2.libanki.Media: java.lang.String dir()>();

        specialinvoke r3.<java.io.File: void <init>(java.lang.String)>($r6);

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label7;

        $z0 = virtualinvoke r3.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label7;

        $r8 = virtualinvoke r3.<java.io.File: java.io.File[] listFiles()>();

        $i0 = 0;

        $i1 = lengthof $r8;

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label7;

        r3 = $r8[$i2];

        $r6 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r1.<com.ichi2.libanki.ZipFile: void write(java.lang.String,java.lang.String)>($r6, $r9);

     label3:
        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r9 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r6, $r9);

     label4:
        $i0 = $i0 + 1;

     label5:
        $i2 = $i2 + 1;

        goto label2;

     label6:
        r2 := @caughtexception;

        virtualinvoke r2.<org.json.JSONException: void printStackTrace()>();

        goto label5;

     label7:
        return r4;

        catch org.json.JSONException from label3 to label4 with label6;
    }
    public void exportInto(java.lang.String, android.content.Context) throws java.io.IOException, org.json.JSONException
    {
        com.ichi2.libanki.AnkiPackageExporter r0;
        java.lang.String $r1;
        android.content.Context $r2;
        com.ichi2.libanki.ZipFile r3;
        boolean $z0;
        java.lang.Long $r4;
        org.json.JSONObject $r5;

        r0 := @this: com.ichi2.libanki.AnkiPackageExporter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.Context;

        r3 = new com.ichi2.libanki.ZipFile;

        specialinvoke r3.<com.ichi2.libanki.ZipFile: void <init>(java.lang.String)>($r1);

        $z0 = r0.<com.ichi2.libanki.AnkiPackageExporter: boolean mIncludeSched>;

        if $z0 == 0 goto label2;

        $r4 = r0.<com.ichi2.libanki.AnkiPackageExporter: java.lang.Long mDid>;

        if $r4 != null goto label2;

        $r5 = specialinvoke r0.<com.ichi2.libanki.AnkiPackageExporter: org.json.JSONObject exportVerbatim(com.ichi2.libanki.ZipFile)>(r3);

     label1:
        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String jsonToString(org.json.JSONObject)>($r5);

        virtualinvoke r3.<com.ichi2.libanki.ZipFile: void writeStr(java.lang.String,java.lang.String)>("media", $r1);

        virtualinvoke r3.<com.ichi2.libanki.ZipFile: void close()>();

        return;

     label2:
        $r5 = specialinvoke r0.<com.ichi2.libanki.AnkiPackageExporter: org.json.JSONObject exportFiltered(com.ichi2.libanki.ZipFile,java.lang.String,android.content.Context)>(r3, $r1, $r2);

        goto label1;
    }
    protected void prepareMedia()
    {
        com.ichi2.libanki.AnkiPackageExporter r0;

        r0 := @this: com.ichi2.libanki.AnkiPackageExporter;

        return;
    }
    public volatile void setDid(java.lang.Long)
    {
        com.ichi2.libanki.AnkiPackageExporter r0;
        java.lang.Long $r1;

        r0 := @this: com.ichi2.libanki.AnkiPackageExporter;

        $r1 := @parameter0: java.lang.Long;

        specialinvoke r0.<com.ichi2.libanki.AnkiExporter: void setDid(java.lang.Long)>($r1);

        return;
    }
    public volatile void setIncludeMedia(boolean)
    {
        com.ichi2.libanki.AnkiPackageExporter r0;
        boolean $z0;

        r0 := @this: com.ichi2.libanki.AnkiPackageExporter;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<com.ichi2.libanki.AnkiExporter: void setIncludeMedia(boolean)>($z0);

        return;
    }
    public volatile void setIncludeSched(boolean)
    {
        com.ichi2.libanki.AnkiPackageExporter r0;
        boolean $z0;

        r0 := @this: com.ichi2.libanki.AnkiPackageExporter;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<com.ichi2.libanki.AnkiExporter: void setIncludeSched(boolean)>($z0);

        return;
    }
