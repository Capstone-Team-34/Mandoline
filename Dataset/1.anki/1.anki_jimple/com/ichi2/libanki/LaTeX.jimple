com.ichi2.libanki.LaTeX extends java.lang.Object
public static java.util.regex.Pattern sExpressionPattern
public static java.util.regex.Pattern sMathPattern
public static java.util.regex.Pattern sStandardPattern
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("\\[latex\\](.+?)\\[/latex\\]", 34);

        <com.ichi2.libanki.LaTeX: java.util.regex.Pattern sStandardPattern> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("\\[\\$\\](.+?)\\[/\\$\\]", 34);

        <com.ichi2.libanki.LaTeX: java.util.regex.Pattern sExpressionPattern> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("\\[\\$\\$\\](.+?)\\[/\\$\\$\\]", 34);

        <com.ichi2.libanki.LaTeX: java.util.regex.Pattern sMathPattern> = $r0;

        return;
    }
    public void <init>()
    {
        com.ichi2.libanki.LaTeX r0;

        r0 := @this: com.ichi2.libanki.LaTeX;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static java.lang.String _imgLink(com.ichi2.libanki.Collection, java.lang.String)
    {
        com.ichi2.libanki.Collection $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: com.ichi2.libanki.Collection;

        $r1 := @parameter1: java.lang.String;

        $r1 = staticinvoke <com.ichi2.libanki.LaTeX: java.lang.String _latexFromHtml(com.ichi2.libanki.Collection,java.lang.String)>($r0, $r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("latex-");

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String checksum(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<img class=latex src=\"");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    private static java.lang.String _latexFromHtml(com.ichi2.libanki.Collection, java.lang.String)
    {
        com.ichi2.libanki.Collection $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.ichi2.libanki.Collection;

        $r1 := @parameter1: java.lang.String;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<br( /)?>|<div>", "\n");

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTML(java.lang.String)>($r1);

        return $r1;
    }
    public static java.lang.String mungeQA(java.lang.String, com.ichi2.libanki.Collection)
    {
        java.lang.String $r0;
        com.ichi2.libanki.Collection $r1;
        java.lang.StringBuffer r2;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: com.ichi2.libanki.Collection;

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = <com.ichi2.libanki.LaTeX: java.util.regex.Pattern sStandardPattern>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

     label1:
        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        $r0 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r0 = staticinvoke <com.ichi2.libanki.LaTeX: java.lang.String _imgLink(com.ichi2.libanki.Collection,java.lang.String)>($r1, $r0);

        virtualinvoke $r4.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r2, $r0);

        goto label1;

     label2:
        virtualinvoke $r4.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r2);

        $r3 = <com.ichi2.libanki.LaTeX: java.util.regex.Pattern sExpressionPattern>;

        $r0 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

     label3:
        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        $r0 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = staticinvoke <com.ichi2.libanki.LaTeX: java.lang.String _imgLink(com.ichi2.libanki.Collection,java.lang.String)>($r1, $r0);

        virtualinvoke $r4.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r2, $r0);

        goto label3;

     label4:
        virtualinvoke $r4.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r2);

        $r3 = <com.ichi2.libanki.LaTeX: java.util.regex.Pattern sMathPattern>;

        $r0 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

     label5:
        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\begin{displaymath}");

        $r0 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\end{displaymath}");

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = staticinvoke <com.ichi2.libanki.LaTeX: java.lang.String _imgLink(com.ichi2.libanki.Collection,java.lang.String)>($r1, $r0);

        virtualinvoke $r4.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r2, $r0);

        goto label5;

     label6:
        virtualinvoke $r4.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r2);

        $r0 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }
    public void installHook(com.ichi2.libanki.hooks.Hooks)
    {
        com.ichi2.libanki.LaTeX r0;
        com.ichi2.libanki.hooks.Hooks $r1;
        com.ichi2.libanki.LaTeX$LaTeXFilter $r2;

        r0 := @this: com.ichi2.libanki.LaTeX;

        $r1 := @parameter0: com.ichi2.libanki.hooks.Hooks;

        $r2 = new com.ichi2.libanki.LaTeX$LaTeXFilter;

        specialinvoke $r2.<com.ichi2.libanki.LaTeX$LaTeXFilter: void <init>(com.ichi2.libanki.LaTeX)>(r0);

        virtualinvoke $r1.<com.ichi2.libanki.hooks.Hooks: void addHook(java.lang.String,com.ichi2.libanki.hooks.Hook)>("mungeQA", $r2);

        return;
    }
