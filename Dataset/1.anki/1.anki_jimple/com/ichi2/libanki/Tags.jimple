com.ichi2.libanki.Tags extends java.lang.Object
private static final java.util.regex.Pattern sCanonify
private boolean mChanged
private com.ichi2.libanki.Collection mCol
private java.util.TreeMap mTags
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\"\']");

        <com.ichi2.libanki.Tags: java.util.regex.Pattern sCanonify> = $r0;

        return;
    }
    public void <init>(com.ichi2.libanki.Collection)
    {
        com.ichi2.libanki.Tags r0;
        com.ichi2.libanki.Collection $r1;
        java.util.TreeMap $r2;

        r0 := @this: com.ichi2.libanki.Tags;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>()>();

        r0.<com.ichi2.libanki.Tags: java.util.TreeMap mTags> = $r2;

        r0.<com.ichi2.libanki.Tags: com.ichi2.libanki.Collection mCol> = $r1;

        return;
    }
    public void add(java.lang.String, java.lang.Integer)
    {
        com.ichi2.libanki.Tags r0;
        java.lang.String $r1;
        java.lang.Integer $r2;
        java.util.TreeMap $r3;

        r0 := @this: com.ichi2.libanki.Tags;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Integer;

        $r3 = r0.<com.ichi2.libanki.Tags: java.util.TreeMap mTags>;

        virtualinvoke $r3.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }
    public java.lang.String addToStr(java.lang.String, java.lang.String)
    {
        com.ichi2.libanki.Tags r0;
        java.lang.String $r1, $r2;
        java.util.List $r3, $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.util.TreeSet $r7;

        r0 := @this: com.ichi2.libanki.Tags;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.ichi2.libanki.Tags: java.util.List split(java.lang.String)>($r2);

        $r4 = virtualinvoke r0.<com.ichi2.libanki.Tags: java.util.List split(java.lang.String)>($r1);

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.String) $r6;

        $z0 = virtualinvoke r0.<com.ichi2.libanki.Tags: boolean inList(java.lang.String,java.lang.Iterable)>($r1, $r3);

        if $z0 != 0 goto label1;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        goto label1;

     label2:
        $r7 = virtualinvoke r0.<com.ichi2.libanki.Tags: java.util.TreeSet canonify(java.util.List)>($r3);

        $r1 = virtualinvoke r0.<com.ichi2.libanki.Tags: java.lang.String join(java.util.Collection)>($r7);

        return $r1;
    }
    public java.util.List all()
    {
        com.ichi2.libanki.Tags r0;
        java.util.ArrayList r1;
        java.util.Set $r2;
        java.util.TreeMap $r3;

        r0 := @this: com.ichi2.libanki.Tags;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<com.ichi2.libanki.Tags: java.util.TreeMap mTags>;

        $r2 = virtualinvoke $r3.<java.util.TreeMap: java.util.Set keySet()>();

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        return r1;
    }
    public java.util.Set allItems()
    {
        com.ichi2.libanki.Tags r0;
        java.util.Set $r1;
        java.util.TreeMap $r2;

        r0 := @this: com.ichi2.libanki.Tags;

        $r2 = r0.<com.ichi2.libanki.Tags: java.util.TreeMap mTags>;

        $r1 = virtualinvoke $r2.<java.util.TreeMap: java.util.Set entrySet()>();

        return $r1;
    }
    public void beforeUpload()
    {
        com.ichi2.libanki.Tags r0;
        java.util.TreeMap $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String r5;
        java.lang.Integer $r6;

        r0 := @this: com.ichi2.libanki.Tags;

        $r1 = r0.<com.ichi2.libanki.Tags: java.util.TreeMap mTags>;

        $r2 = virtualinvoke $r1.<java.util.TreeMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r1 = r0.<com.ichi2.libanki.Tags: java.util.TreeMap mTags>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r6);

        goto label1;

     label2:
        virtualinvoke r0.<com.ichi2.libanki.Tags: void save()>();

        return;
    }
    public void bulkAdd(java.util.List, java.lang.String)
    {
        com.ichi2.libanki.Tags r0;
        java.util.List r1;
        java.lang.String $r2;

        r0 := @this: com.ichi2.libanki.Tags;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ichi2.libanki.Tags: void bulkAdd(java.util.List,java.lang.String,boolean)>(r1, $r2, 1);

        return;
    }
    public void bulkAdd(java.util.List, java.lang.String, boolean)
    {
        com.ichi2.libanki.Tags r0;
        java.util.List r1, $r6;
        java.lang.String $r2, r7, r10;
        boolean $z0, $z1;
        java.lang.StringBuilder r3, $r11;
        java.util.ArrayList r4, r5;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        int $i0;
        android.database.Cursor r12, $r16;
        com.ichi2.libanki.Collection $r13;
        com.ichi2.libanki.DB $r14;
        io.requery.android.database.sqlite.SQLiteDatabase $r15;
        long $l1;
        java.lang.Long $r17;
        java.lang.Object[] $r18;
        java.lang.Integer $r19;
        java.lang.Throwable $r20;

        r0 := @this: com.ichi2.libanki.Tags;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r6 = virtualinvoke r0.<com.ichi2.libanki.Tags: java.util.List split(java.lang.String)>($r2);

        if $r6 == null goto label21;

        $z1 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label01;

        return;

     label01:
        virtualinvoke r0.<com.ichi2.libanki.Tags: void register(java.lang.Iterable)>($r6);

        if $z0 == 0 goto label05;

        r7 = "tags not ";

     label02:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r8 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        $i0 = virtualinvoke r3.<java.lang.StringBuilder: int length()>();

        if $i0 == 0 goto label04;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

     label04:
        $r11 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("like \'% ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" %\'");

        goto label03;

     label05:
        r7 = "tags ";

        goto label02;

     label06:
        r12 = null;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

     label07:
        $r13 = r0.<com.ichi2.libanki.Tags: com.ichi2.libanki.Collection mCol>;

        $r14 = virtualinvoke $r13.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r15 = virtualinvoke $r14.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select id, tags from notes where id in ");

        r7 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String ids2str(java.util.List)>(r1);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and (");

        r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke $r15.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>(r7, null);

     label08:
        r12 = $r16;

        if $z0 == 0 goto label15;

     label09:
        $z0 = interfaceinvoke $r16.<android.database.Cursor: boolean moveToNext()>();

     label10:
        if $z0 == 0 goto label19;

     label11:
        $l1 = interfaceinvoke $r16.<android.database.Cursor: long getLong(int)>(0);

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = newarray (java.lang.Object)[4];

        r7 = interfaceinvoke $r16.<android.database.Cursor: java.lang.String getString(int)>(1);

        r7 = virtualinvoke r0.<com.ichi2.libanki.Tags: java.lang.String addToStr(java.lang.String,java.lang.String)>($r2, r7);

        $r18[0] = r7;

        $l1 = staticinvoke <com.ichi2.libanki.Utils: long intNow()>();

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r18[1] = $r17;

        $r13 = r0.<com.ichi2.libanki.Tags: com.ichi2.libanki.Collection mCol>;

        $i0 = virtualinvoke $r13.<com.ichi2.libanki.Collection: int usn()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r18[2] = $r19;

        $l1 = interfaceinvoke $r16.<android.database.Cursor: long getLong(int)>(0);

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r18[3] = $r17;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label12:
        goto label09;

     label13:
        $r20 := @caughtexception;

        if r12 == null goto label14;

        interfaceinvoke r12.<android.database.Cursor: void close()>();

     label14:
        throw $r20;

     label15:
        $z0 = interfaceinvoke $r16.<android.database.Cursor: boolean moveToNext()>();

     label16:
        if $z0 == 0 goto label19;

     label17:
        $l1 = interfaceinvoke $r16.<android.database.Cursor: long getLong(int)>(0);

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = newarray (java.lang.Object)[4];

        r7 = interfaceinvoke $r16.<android.database.Cursor: java.lang.String getString(int)>(1);

        r7 = virtualinvoke r0.<com.ichi2.libanki.Tags: java.lang.String remFromStr(java.lang.String,java.lang.String)>($r2, r7);

        $r18[0] = r7;

        $l1 = staticinvoke <com.ichi2.libanki.Utils: long intNow()>();

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r18[1] = $r17;

        $r13 = r0.<com.ichi2.libanki.Tags: com.ichi2.libanki.Collection mCol>;

        $i0 = virtualinvoke $r13.<com.ichi2.libanki.Collection: int usn()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r18[2] = $r19;

        $l1 = interfaceinvoke $r16.<android.database.Cursor: long getLong(int)>(0);

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r18[3] = $r17;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label18:
        goto label15;

     label19:
        if $r16 == null goto label20;

        interfaceinvoke $r16.<android.database.Cursor: void close()>();

     label20:
        $r13 = r0.<com.ichi2.libanki.Tags: com.ichi2.libanki.Collection mCol>;

        $r14 = virtualinvoke $r13.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        virtualinvoke $r14.<com.ichi2.libanki.DB: void executeMany(java.lang.String,java.util.List)>("update notes set tags=:t,mod=:n,usn=:u where id = :id", r5);

     label21:
        return;

        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label15 to label16 with label13;
        catch java.lang.Throwable from label17 to label18 with label13;
    }
    public void bulkRem(java.util.List, java.lang.String)
    {
        com.ichi2.libanki.Tags r0;
        java.util.List r1;
        java.lang.String $r2;

        r0 := @this: com.ichi2.libanki.Tags;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ichi2.libanki.Tags: void bulkAdd(java.util.List,java.lang.String,boolean)>(r1, $r2, 0);

        return;
    }
    public java.util.ArrayList byDeck(long, boolean)
    {
        com.ichi2.libanki.Tags r0;
        long $l0;
        boolean $z0;
        java.util.ArrayList r1, $r13;
        java.lang.Long $r2;
        com.ichi2.libanki.Collection $r3;
        com.ichi2.libanki.Decks $r4;
        java.util.TreeMap $r5;
        java.util.Collection $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        java.lang.StringBuilder $r9;
        long[] $r10;
        java.lang.String $r11;
        com.ichi2.libanki.DB $r12;
        java.util.HashSet $r14;
        java.util.List $r15;

        r0 := @this: com.ichi2.libanki.Tags;

        $l0 := @parameter0: long;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label4;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r3 = r0.<com.ichi2.libanki.Tags: com.ichi2.libanki.Collection mCol>;

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r5 = virtualinvoke $r4.<com.ichi2.libanki.Decks: java.util.TreeMap children(long)>($l0);

        $r6 = virtualinvoke $r5.<java.util.TreeMap: java.util.Collection values()>();

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.Long) $r8;

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        goto label1;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT DISTINCT n.tags FROM cards c, notes n WHERE c.nid = n.id AND c.did IN ");

        $r10 = staticinvoke <com.ichi2.libanki.Utils: long[] arrayList2array(java.util.List)>(r1);

        $r11 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String ids2str(long[])>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r3 = r0.<com.ichi2.libanki.Tags: com.ichi2.libanki.Collection mCol>;

        $r12 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        r1 = virtualinvoke $r12.<com.ichi2.libanki.DB: java.util.ArrayList queryColumn(java.lang.Class,java.lang.String,int)>(class "Ljava/lang/String;", $r11, 0);

        $r13 = new java.util.ArrayList;

        $r14 = new java.util.HashSet;

        $r11 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(" ", r1);

        $r15 = virtualinvoke r0.<com.ichi2.libanki.Tags: java.util.List split(java.lang.String)>($r11);

        specialinvoke $r14.<java.util.HashSet: void <init>(java.util.Collection)>($r15);

        specialinvoke $r13.<java.util.ArrayList: void <init>(java.util.Collection)>($r14);

        return $r13;

     label4:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT DISTINCT n.tags FROM cards c, notes n WHERE c.nid = n.id AND c.did = ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;
    }
    public java.util.TreeSet canonify(java.util.List)
    {
        com.ichi2.libanki.Tags r0;
        java.util.List r1;
        java.util.TreeSet r2;
        java.util.Comparator $r3;
        java.util.Iterator $r4, $r11;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String r6, r12;
        java.util.regex.Pattern $r7;
        java.util.regex.Matcher $r8;
        java.util.TreeMap $r9;
        java.util.Set $r10;

        r0 := @this: com.ichi2.libanki.Tags;

        r1 := @parameter0: java.util.List;

        r2 = new java.util.TreeSet;

        $r3 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke r2.<java.util.TreeSet: void <init>(java.util.Comparator)>($r3);

        $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = <com.ichi2.libanki.Tags: java.util.regex.Pattern sCanonify>;

        $r8 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r6);

        r6 = virtualinvoke $r8.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r9 = r0.<com.ichi2.libanki.Tags: java.util.TreeMap mTags>;

        $r10 = virtualinvoke $r9.<java.util.TreeMap: java.util.Set keySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.String) $r5;

        $z0 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r12);

        if $z0 == 0 goto label2;

        r6 = r12;

        goto label2;

     label3:
        virtualinvoke r2.<java.util.TreeSet: boolean add(java.lang.Object)>(r6);

        goto label1;

     label4:
        return r2;
    }
    public void flush()
    {
        com.ichi2.libanki.Tags r0;
        org.json.JSONException r1;
        org.json.JSONObject r2;
        android.content.ContentValues r3;
        boolean $z0;
        java.util.TreeMap $r4;
        java.util.Set $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        java.util.Map$Entry r8;
        java.lang.String $r9;
        java.lang.RuntimeException $r10;
        com.ichi2.libanki.Collection $r11;
        com.ichi2.libanki.DB $r12;

        r0 := @this: com.ichi2.libanki.Tags;

        $z0 = r0.<com.ichi2.libanki.Tags: boolean mChanged>;

        if $z0 == 0 goto label8;

        r2 = new org.json.JSONObject;

        specialinvoke r2.<org.json.JSONObject: void <init>()>();

        $r4 = r0.<com.ichi2.libanki.Tags: java.util.TreeMap mTags>;

        $r5 = virtualinvoke $r4.<java.util.TreeMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

     label2:
        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

     label3:
        $r9 = (java.lang.String) $r7;

     label4:
        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r9, $r7);

     label5:
        goto label1;

     label6:
        r1 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r10;

     label7:
        r3 = new android.content.ContentValues;

        specialinvoke r3.<android.content.ContentValues: void <init>()>();

        $r9 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String jsonToString(org.json.JSONObject)>(r2);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("tags", $r9);

        $r11 = r0.<com.ichi2.libanki.Tags: com.ichi2.libanki.Collection mCol>;

        $r12 = virtualinvoke $r11.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        virtualinvoke $r12.<com.ichi2.libanki.DB: int update(java.lang.String,android.content.ContentValues)>("col", r3);

        r0.<com.ichi2.libanki.Tags: boolean mChanged> = 0;

     label8:
        return;

        catch org.json.JSONException from label2 to label3 with label6;
        catch org.json.JSONException from label4 to label5 with label6;
    }
    public boolean inList(java.lang.String, java.lang.Iterable)
    {
        com.ichi2.libanki.Tags r0;
        java.lang.String $r1, r5;
        java.lang.Iterable r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.ichi2.libanki.Tags;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Iterable;

        $r3 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    public java.lang.String join(java.util.Collection)
    {
        com.ichi2.libanki.Tags r0;
        java.util.Collection r1;
        int $i0;
        java.lang.String $r2;
        java.util.Locale $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.ichi2.libanki.Tags;

        r1 := @parameter0: java.util.Collection;

        if r1 == null goto label1;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return "";

     label2:
        $r2 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(" ", r1);

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r2;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, " %s ", $r4);

        return $r2;
    }
    public void load(java.lang.String)
    {
        com.ichi2.libanki.Tags r0;
        java.lang.String $r1;
        org.json.JSONException r2;
        org.json.JSONObject r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.util.TreeMap $r6;
        int $i0;
        java.lang.Integer $r7;
        java.lang.RuntimeException $r8;

        r0 := @this: com.ichi2.libanki.Tags;

        $r1 := @parameter0: java.lang.String;

        r3 = new org.json.JSONObject;

     label1:
        specialinvoke r3.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke r3.<org.json.JSONObject: java.util.Iterator keys()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 == 0 goto label9;

     label4:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

     label5:
        $r1 = (java.lang.String) $r5;

        $r6 = r0.<com.ichi2.libanki.Tags: java.util.TreeMap mTags>;

     label6:
        $i0 = virtualinvoke r3.<org.json.JSONObject: int getInt(java.lang.String)>($r1);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r6.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

     label7:
        goto label2;

     label8:
        r2 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r8;

     label9:
        r0.<com.ichi2.libanki.Tags: boolean mChanged> = 0;

        return;

        catch org.json.JSONException from label1 to label3 with label8;
        catch org.json.JSONException from label4 to label5 with label8;
        catch org.json.JSONException from label6 to label7 with label8;
    }
    public void register(java.lang.Iterable)
    {
        com.ichi2.libanki.Tags r0;
        java.lang.Iterable r1;

        r0 := @this: com.ichi2.libanki.Tags;

        r1 := @parameter0: java.lang.Iterable;

        virtualinvoke r0.<com.ichi2.libanki.Tags: void register(java.lang.Iterable,java.lang.Integer)>(r1, null);

        return;
    }
    public void register(java.lang.Iterable, java.lang.Integer)
    {
        com.ichi2.libanki.Tags r0;
        java.lang.Iterable r1;
        java.lang.Integer $r2, $r8;
        java.util.TreeMap $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String r6;
        com.ichi2.libanki.Collection $r7;
        int $i0;

        r0 := @this: com.ichi2.libanki.Tags;

        r1 := @parameter0: java.lang.Iterable;

        $r2 := @parameter1: java.lang.Integer;

        $r4 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r3 = r0.<com.ichi2.libanki.Tags: java.util.TreeMap mTags>;

        $z0 = virtualinvoke $r3.<java.util.TreeMap: boolean containsKey(java.lang.Object)>(r6);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.ichi2.libanki.Tags: java.util.TreeMap mTags>;

        if $r2 != null goto label3;

        $r7 = r0.<com.ichi2.libanki.Tags: com.ichi2.libanki.Collection mCol>;

        $i0 = virtualinvoke $r7.<com.ichi2.libanki.Collection: int usn()>();

     label2:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r3.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r8);

        r0.<com.ichi2.libanki.Tags: boolean mChanged> = 1;

        goto label1;

     label3:
        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        goto label2;

     label4:
        return;
    }
    public void registerNotes()
    {
        com.ichi2.libanki.Tags r0;

        r0 := @this: com.ichi2.libanki.Tags;

        virtualinvoke r0.<com.ichi2.libanki.Tags: void registerNotes(long[])>(null);

        return;
    }
    public void registerNotes(long[])
    {
        com.ichi2.libanki.Tags r0;
        long[] $r1;
        java.util.HashSet r2;
        java.util.ArrayList r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.database.Cursor r6, $r10;
        com.ichi2.libanki.Collection $r7;
        com.ichi2.libanki.DB $r8;
        io.requery.android.database.sqlite.SQLiteDatabase $r9;
        boolean $z0;
        java.lang.Throwable $r11;
        java.util.TreeMap $r12;
        java.util.List $r13;
        java.util.Iterator $r14;
        java.lang.Object $r15;

        r0 := @this: com.ichi2.libanki.Tags;

        $r1 := @parameter0: long[];

        if $r1 == null goto label10;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE id IN ");

        $r5 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String ids2str(long[])>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r6 = null;

     label02:
        $r7 = r0.<com.ichi2.libanki.Tags: com.ichi2.libanki.Collection mCol>;

        $r8 = virtualinvoke $r7.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r9 = virtualinvoke $r8.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT DISTINCT tags FROM notes");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r9.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r5, null);

     label03:
        r6 = $r10;

     label04:
        $z0 = interfaceinvoke $r10.<android.database.Cursor: boolean moveToNext()>();

     label05:
        if $z0 == 0 goto label11;

     label06:
        $r5 = interfaceinvoke $r10.<android.database.Cursor: java.lang.String getString(int)>(0);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label07:
        goto label04;

     label08:
        $r11 := @caughtexception;

        if r6 == null goto label09;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label09:
        throw $r11;

     label10:
        $r5 = "";

        $r12 = r0.<com.ichi2.libanki.Tags: java.util.TreeMap mTags>;

        virtualinvoke $r12.<java.util.TreeMap: void clear()>();

        r0.<com.ichi2.libanki.Tags: boolean mChanged> = 1;

        goto label01;

     label11:
        if $r10 == null goto label12;

        interfaceinvoke $r10.<android.database.Cursor: void close()>();

     label12:
        r2 = new java.util.HashSet;

        specialinvoke r2.<java.util.HashSet: void <init>()>();

        $r5 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(" ", r3);

        $r13 = virtualinvoke r0.<com.ichi2.libanki.Tags: java.util.List split(java.lang.String)>($r5);

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r15;

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        goto label13;

     label14:
        virtualinvoke r0.<com.ichi2.libanki.Tags: void register(java.lang.Iterable)>(r2);

        return;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
    }
    public java.lang.String remFromStr(java.lang.String, java.lang.String)
    {
        com.ichi2.libanki.Tags r0;
        java.lang.String $r1, $r2;
        java.util.ArrayList r3;
        java.util.List $r4, $r5;
        java.util.Iterator $r6, $r8;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: com.ichi2.libanki.Tags;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = virtualinvoke r0.<com.ichi2.libanki.Tags: java.util.List split(java.lang.String)>($r2);

        $r5 = virtualinvoke r0.<com.ichi2.libanki.Tags: java.util.List split(java.lang.String)>($r1);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.String) $r7;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r8 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.String) $r7;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label2;

     label3:
        $r8 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r7 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.String) $r7;

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>($r1);

        goto label4;

     label5:
        $r1 = virtualinvoke r0.<com.ichi2.libanki.Tags: java.lang.String join(java.util.Collection)>($r4);

        return $r1;
    }
    public void save()
    {
        com.ichi2.libanki.Tags r0;

        r0 := @this: com.ichi2.libanki.Tags;

        r0.<com.ichi2.libanki.Tags: boolean mChanged> = 1;

        return;
    }
    public java.util.List split(java.lang.String)
    {
        com.ichi2.libanki.Tags r0;
        java.lang.String $r1;
        java.util.ArrayList r2;
        int $i0, $i1, $i2;
        java.lang.String[] $r3;

        r0 := @this: com.ichi2.libanki.Tags;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(12288, 32);

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s");

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r3[$i1];

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label2;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return r2;
    }
