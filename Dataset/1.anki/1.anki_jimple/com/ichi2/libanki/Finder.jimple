com.ichi2.libanki.Finder extends java.lang.Object
private static final java.util.regex.Pattern fMidPattern
private static final java.util.regex.Pattern fNidsPattern
private static final java.util.regex.Pattern fPropPattern
private com.ichi2.libanki.Collection mCol
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(^.+?)(<=|>=|!=|=|<|>)(.+?$)");

        <com.ichi2.libanki.Finder: java.util.regex.Pattern fPropPattern> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[^0-9,]");

        <com.ichi2.libanki.Finder: java.util.regex.Pattern fNidsPattern> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[^0-9]");

        <com.ichi2.libanki.Finder: java.util.regex.Pattern fMidPattern> = $r0;

        return;
    }
    public void <init>(com.ichi2.libanki.Collection)
    {
        com.ichi2.libanki.Finder r0;
        com.ichi2.libanki.Collection $r1;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol> = $r1;

        return;
    }
    private java.lang.String _findAdded(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1;
        long l0, $l2;
        java.lang.NumberFormatException r2;
        int $i1;
        com.ichi2.libanki.Collection $r3;
        com.ichi2.libanki.Sched $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        $r3 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        l0 = virtualinvoke $r4.<com.ichi2.libanki.Sched: long getDayCutoff()>();

        $i1 = 86400 * $i1;

        $l2 = (long) $i1;

        l0 = l0 - $l2;

        l0 = l0 * 1000L;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.id > ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label3:
        r2 := @caughtexception;

        return null;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
    private java.lang.String _findCardState(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1;
        boolean $z0;
        byte b0;
        java.lang.StringBuilder $r2;
        com.ichi2.libanki.Collection $r3;
        com.ichi2.libanki.Sched $r4;
        int $i1;
        long $l2;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("review");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("new");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("learn");

        if $z0 == 0 goto label5;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("review");

        if $z0 == 0 goto label3;

        b0 = 2;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("new");

        if $z0 == 0 goto label4;

        b0 = 0;

        goto label2;

     label4:
        return "queue IN (1, 3)";

     label5:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("suspended");

        if $z0 == 0 goto label6;

        return "c.queue = -1";

     label6:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("buried");

        if $z0 == 0 goto label7;

        return "c.queue = -2";

     label7:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("due");

        if $z0 == 0 goto label8;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(c.queue in (2,3) and c.due <= ");

        $r3 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        $i1 = virtualinvoke $r4.<com.ichi2.libanki.Sched: int getToday()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") or (c.queue = 1 and c.due <= ");

        $r3 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        $l2 = virtualinvoke $r4.<com.ichi2.libanki.Sched: long getDayCutoff()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label8:
        return null;
    }
    private java.util.List _findCards(java.lang.String, java.lang.Object)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1, r9;
        android.database.SQLException r2;
        java.lang.Object r3, r6;
        java.lang.String[] $r4;
        android.util.Pair $r5;
        java.util.ArrayList r7;
        boolean $z0, $z1;
        java.lang.Boolean r8;
        android.database.Cursor r10, $r14;
        com.ichi2.libanki.Collection $r11;
        com.ichi2.libanki.DB $r12;
        io.requery.android.database.sqlite.SQLiteDatabase $r13;
        long $l0;
        java.lang.Long $r15;
        java.lang.Throwable $r16;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r4 = virtualinvoke r0.<com.ichi2.libanki.Finder: java.lang.String[] _tokenize(java.lang.String)>($r1);

        $r5 = virtualinvoke r0.<com.ichi2.libanki.Finder: android.util.Pair _where(java.lang.String[])>($r4);

        r6 = $r5.<android.util.Pair: java.lang.Object first>;

        $r1 = (java.lang.String) r6;

        r6 = $r5.<android.util.Pair: java.lang.Object second>;

        $r4 = (java.lang.String[]) r6;

        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        if $r1 != null goto label01;

        return r7;

     label01:
        $z0 = r3 instanceof java.lang.Boolean;

        if $z0 == 0 goto label13;

        r8 = (java.lang.Boolean) r3;

        $r5 = specialinvoke r0.<com.ichi2.libanki.Finder: android.util.Pair _order(java.lang.Boolean)>(r8);

     label02:
        r3 = $r5.<android.util.Pair: java.lang.Object first>;

        r9 = (java.lang.String) r3;

        r3 = $r5.<android.util.Pair: java.lang.Object second>;

        r8 = (java.lang.Boolean) r3;

        $z0 = virtualinvoke r8.<java.lang.Boolean: boolean booleanValue()>();

        $r1 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _query(java.lang.String,java.lang.String)>($r1, r9);

        r10 = null;

     label03:
        $r11 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

     label04:
        $r12 = virtualinvoke $r11.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r13 = virtualinvoke $r12.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r14 = virtualinvoke $r13.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r1, $r4);

     label05:
        r10 = $r14;

     label06:
        $z1 = interfaceinvoke $r14.<android.database.Cursor: boolean moveToNext()>();

     label07:
        if $z1 == 0 goto label14;

     label08:
        $l0 = interfaceinvoke $r14.<android.database.Cursor: long getLong(int)>(0);

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r15);

     label09:
        goto label06;

     label10:
        r2 := @caughtexception;

     label11:
        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

     label12:
        if r10 == null goto label18;

        interfaceinvoke r10.<android.database.Cursor: void close()>();

        return r7;

     label13:
        r9 = (java.lang.String) r3;

        $r5 = specialinvoke r0.<com.ichi2.libanki.Finder: android.util.Pair _order(java.lang.String)>(r9);

        goto label02;

     label14:
        if $r14 == null goto label15;

        interfaceinvoke $r14.<android.database.Cursor: void close()>();

     label15:
        if $z0 == 0 goto label18;

        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r7);

        return r7;

     label16:
        $r16 := @caughtexception;

        if r10 == null goto label17;

        interfaceinvoke r10.<android.database.Cursor: void close()>();

     label17:
        throw $r16;

     label18:
        return r7;

        catch android.database.SQLException from label04 to label05 with label10;
        catch android.database.SQLException from label06 to label07 with label10;
        catch android.database.SQLException from label08 to label09 with label10;
        catch java.lang.Throwable from label03 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
    }
    private java.util.List _findCardsForCardBrowser(java.lang.String, java.lang.Object, java.util.Map)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1, r11, $r19;
        java.util.Map r2;
        android.database.SQLException r3;
        java.util.HashMap r4;
        java.lang.Object r5, r8;
        java.lang.String[] $r6;
        android.util.Pair $r7;
        java.util.ArrayList r9;
        boolean $z0, $z1;
        java.lang.Boolean r10;
        android.database.Cursor r12, $r16;
        com.ichi2.libanki.Collection $r13;
        com.ichi2.libanki.DB $r14;
        io.requery.android.database.sqlite.SQLiteDatabase $r15;
        com.ichi2.async.DeckTask $r17;
        java.lang.Object[] $r18;
        int $i0;
        byte $b1, $b2;
        java.lang.StringBuilder $r20;
        java.lang.Throwable $r21;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.util.Map;

        $r6 = virtualinvoke r0.<com.ichi2.libanki.Finder: java.lang.String[] _tokenize(java.lang.String)>($r1);

        $r7 = virtualinvoke r0.<com.ichi2.libanki.Finder: android.util.Pair _where(java.lang.String[])>($r6);

        r8 = $r7.<android.util.Pair: java.lang.Object first>;

        $r1 = (java.lang.String) r8;

        r8 = $r7.<android.util.Pair: java.lang.Object second>;

        $r6 = (java.lang.String[]) r8;

        r9 = new java.util.ArrayList;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        if $r1 != null goto label01;

        return r9;

     label01:
        $z0 = r5 instanceof java.lang.Boolean;

        if $z0 == 0 goto label14;

        r10 = (java.lang.Boolean) r5;

        $r7 = specialinvoke r0.<com.ichi2.libanki.Finder: android.util.Pair _order(java.lang.Boolean)>(r10);

     label02:
        r5 = $r7.<android.util.Pair: java.lang.Object first>;

        r11 = (java.lang.String) r5;

        r5 = $r7.<android.util.Pair: java.lang.Object second>;

        r10 = (java.lang.Boolean) r5;

        $z0 = virtualinvoke r10.<java.lang.Boolean: boolean booleanValue()>();

        $r1 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _queryForCardBrowser(java.lang.String,java.lang.String)>($r1, r11);

        r12 = null;

     label03:
        $r13 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

     label04:
        $r14 = virtualinvoke $r13.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r15 = virtualinvoke $r14.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r16 = virtualinvoke $r15.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r1, $r6);

     label05:
        r12 = $r16;

     label06:
        $r17 = staticinvoke <com.ichi2.async.DeckTask: com.ichi2.async.DeckTask getInstance()>();

     label07:
        $z1 = interfaceinvoke $r16.<android.database.Cursor: boolean moveToNext()>();

     label08:
        if $z1 == 0 goto label28;

     label09:
        $z1 = virtualinvoke $r17.<com.ichi2.async.DeckTask: boolean isCancelled()>();

     label10:
        if $z1 == 0 goto label15;

     label11:
        $r18 = newarray (java.lang.Object)[0];

     label12:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("_findCardsForCardBrowser() cancelled...", $r18);

     label13:
        if $r16 == null goto label32;

        interfaceinvoke $r16.<android.database.Cursor: void close()>();

        return null;

     label14:
        r11 = (java.lang.String) r5;

        $r7 = specialinvoke r0.<com.ichi2.libanki.Finder: android.util.Pair _order(java.lang.String)>(r11);

        goto label02;

     label15:
        r4 = new java.util.HashMap;

     label16:
        specialinvoke r4.<java.util.HashMap: void <init>()>();

        r11 = interfaceinvoke $r16.<android.database.Cursor: java.lang.String getString(int)>(0);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("id", r11);

        r11 = interfaceinvoke $r16.<android.database.Cursor: java.lang.String getString(int)>(1);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sfld", r11);

        r11 = interfaceinvoke $r16.<android.database.Cursor: java.lang.String getString(int)>(2);

        r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deck", r5);

        $i0 = interfaceinvoke $r16.<android.database.Cursor: int getInt(int)>(3);

        r11 = interfaceinvoke $r16.<android.database.Cursor: java.lang.String getString(int)>(4);

     label17:
        if $i0 != -1 goto label26;

        $b1 = 1;

     label18:
        $z1 = virtualinvoke r11.<java.lang.String: boolean matches(java.lang.String)>(".*[Mm]arked.*");

     label19:
        if $z1 == 0 goto label27;

        $b2 = 2;

     label20:
        $i0 = $b2 + $b1;

     label21:
        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("flags", $r19);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tags", r11);

        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r4);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("question", "");

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("answer", "");

     label22:
        goto label07;

     label23:
        r3 := @caughtexception;

     label24:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid grouping, sql: ");

        $r20 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>($r1, $r18);

        r9 = new java.util.ArrayList;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

     label25:
        if r12 == null goto label33;

        interfaceinvoke r12.<android.database.Cursor: void close()>();

        return r9;

     label26:
        $b1 = 0;

        goto label18;

     label27:
        $b2 = 0;

        goto label20;

     label28:
        if $r16 == null goto label29;

        interfaceinvoke $r16.<android.database.Cursor: void close()>();

     label29:
        if $z0 == 0 goto label33;

        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r9);

        return r9;

     label30:
        $r21 := @caughtexception;

        if r12 == null goto label31;

        interfaceinvoke r12.<android.database.Cursor: void close()>();

     label31:
        throw $r21;

     label32:
        return null;

     label33:
        return r9;

        catch android.database.SQLException from label04 to label05 with label23;
        catch android.database.SQLException from label06 to label08 with label23;
        catch android.database.SQLException from label09 to label10 with label23;
        catch android.database.SQLException from label12 to label13 with label23;
        catch java.lang.Throwable from label03 to label05 with label30;
        catch java.lang.Throwable from label06 to label08 with label30;
        catch java.lang.Throwable from label09 to label10 with label30;
        catch java.lang.Throwable from label11 to label13 with label30;
        catch android.database.SQLException from label16 to label17 with label23;
        catch android.database.SQLException from label18 to label19 with label23;
        catch android.database.SQLException from label21 to label22 with label23;
        catch java.lang.Throwable from label15 to label17 with label30;
        catch java.lang.Throwable from label18 to label19 with label30;
        catch java.lang.Throwable from label21 to label22 with label30;
        catch java.lang.Throwable from label24 to label25 with label30;
    }
    private java.lang.String _findCids(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.ichi2.libanki.Finder: java.util.regex.Pattern fNidsPattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.id in (");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    private java.lang.String _findDupes(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String r1, $r3, $r5;
        java.util.ArrayList r2;
        java.lang.String[] $r4;
        int $i0;
        long $l1;
        android.database.Cursor r6, $r10;
        com.ichi2.libanki.Collection $r7;
        com.ichi2.libanki.DB $r8;
        io.requery.android.database.sqlite.SQLiteDatabase $r9;
        boolean $z0;
        java.lang.Long $r11;
        java.lang.StringBuilder $r12;
        java.lang.Throwable $r13;

        r0 := @this: com.ichi2.libanki.Finder;

        $r3 := @parameter0: java.lang.String;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", 1);

        $i0 = lengthof $r4;

        if $i0 == 2 goto label01;

        return null;

     label01:
        r1 = $r4[0];

        $r3 = $r4[1];

        $l1 = staticinvoke <com.ichi2.libanki.Utils: long fieldChecksum(java.lang.String)>($r3);

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r6 = null;

     label02:
        $r7 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

        $r8 = virtualinvoke $r7.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r9 = virtualinvoke $r8.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = r1;

        $r4[1] = $r5;

        $r10 = virtualinvoke $r9.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>("select id, flds from notes where mid=? and csum=?", $r4);

     label03:
        r6 = $r10;

     label04:
        $l1 = interfaceinvoke $r10.<android.database.Cursor: long getLong(int)>(0);

        r1 = interfaceinvoke $r10.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r4 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String[] splitFields(java.lang.String)>(r1);

        r1 = $r4[0];

        r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTMLMedia(java.lang.String)>(r1);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label05:
        if $z0 == 0 goto label07;

     label06:
        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11);

     label07:
        if $r10 == null goto label08;

        interfaceinvoke $r10.<android.database.Cursor: void close()>();

     label08:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n.id in ");

        $r3 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String ids2str(java.util.List)>(r2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label09:
        $r13 := @caughtexception;

        if r6 == null goto label10;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label10:
        throw $r13;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
    }
    private java.lang.String _findField(java.lang.String, java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1, $r2, $r6;
        org.json.JSONException r3;
        java.util.HashMap r4;
        java.util.LinkedList r5, $r24;
        java.lang.StringBuilder $r7;
        java.util.regex.Pattern $r8;
        com.ichi2.libanki.Collection $r9;
        com.ichi2.libanki.Models $r10;
        java.util.ArrayList $r11;
        java.util.Iterator $r12;
        boolean $z0;
        java.lang.Object $r13;
        org.json.JSONObject r14, $r16;
        org.json.JSONArray $r15;
        int i0, $i1;
        long $l2;
        java.lang.Long $r17;
        java.lang.Object[] $r18;
        java.lang.Integer $r19;
        java.lang.RuntimeException $r20;
        android.database.Cursor r21, $r27;
        com.ichi2.libanki.DB $r22;
        io.requery.android.database.sqlite.SQLiteDatabase $r23;
        java.util.Set $r25;
        java.lang.String[] $r26;
        java.util.regex.Matcher $r28;
        java.lang.Throwable $r29;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r6 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%", "\\%");

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("*", "%");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("_", "\\E.\\Q");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("*", "\\E.*\\Q");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\Q");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\E");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r2, 34);

        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

        $r9 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

     label01:
        $r10 = virtualinvoke $r9.<com.ichi2.libanki.Collection: com.ichi2.libanki.Models getModels()>();

        $r11 = virtualinvoke $r10.<com.ichi2.libanki.Models: java.util.ArrayList all()>();

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 == 0 goto label19;

     label04:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

     label05:
        r14 = (org.json.JSONObject) $r13;

     label06:
        $r15 = virtualinvoke r14.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("flds");

     label07:
        i0 = 0;

     label08:
        $i1 = virtualinvoke $r15.<org.json.JSONArray: int length()>();

     label09:
        if i0 >= $i1 goto label02;

     label10:
        $r16 = virtualinvoke $r15.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r2 = virtualinvoke $r16.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

     label11:
        if $z0 == 0 goto label17;

     label12:
        $l2 = virtualinvoke r14.<org.json.JSONObject: long getLong(java.lang.String)>("id");

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

     label13:
        $r18 = newarray (java.lang.Object)[2];

        $r18[0] = r14;

     label14:
        $i1 = virtualinvoke $r16.<org.json.JSONObject: int getInt(java.lang.String)>("ord");

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label15:
        $r18[1] = $r19;

     label16:
        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r18);

     label17:
        i0 = i0 + 1;

        goto label08;

     label18:
        r3 := @caughtexception;

        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r20;

     label19:
        $z0 = interfaceinvoke r4.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label20;

        return null;

     label20:
        r5 = new java.util.LinkedList;

        specialinvoke r5.<java.util.LinkedList: void <init>()>();

        r21 = null;

     label21:
        $r9 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

        $r22 = virtualinvoke $r9.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r23 = virtualinvoke $r22.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select id, mid, flds from notes where mid in ");

        $r24 = new java.util.LinkedList;

        $r25 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r24.<java.util.LinkedList: void <init>(java.util.Collection)>($r25);

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String ids2str(java.util.List)>($r24);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and flds like ? escape \'\\\'");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = newarray (java.lang.String)[1];

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26[0] = $r2;

        $r27 = virtualinvoke $r23.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r1, $r26);

     label22:
        r21 = $r27;

     label23:
        $z0 = interfaceinvoke $r27.<android.database.Cursor: boolean moveToNext()>();

     label24:
        if $z0 == 0 goto label31;

     label25:
        $r1 = interfaceinvoke $r27.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r26 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String[] splitFields(java.lang.String)>($r1);

        $l2 = interfaceinvoke $r27.<android.database.Cursor: long getLong(int)>(1);

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r13 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        $r18 = (java.lang.Object[]) $r13;

        $r13 = $r18[1];

        $r19 = (java.lang.Integer) $r13;

        i0 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        $r1 = $r26[i0];

        $r28 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r28.<java.util.regex.Matcher: boolean matches()>();

     label26:
        if $z0 == 0 goto label23;

     label27:
        $l2 = interfaceinvoke $r27.<android.database.Cursor: long getLong(int)>(0);

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke r5.<java.util.LinkedList: boolean add(java.lang.Object)>($r17);

     label28:
        goto label23;

     label29:
        $r29 := @caughtexception;

        if r21 == null goto label30;

        interfaceinvoke r21.<android.database.Cursor: void close()>();

     label30:
        throw $r29;

     label31:
        if $r27 == null goto label32;

        interfaceinvoke $r27.<android.database.Cursor: void close()>();

     label32:
        $z0 = virtualinvoke r5.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label33;

        return "0";

     label33:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n.id in ");

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String ids2str(java.util.List)>(r5);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

        catch org.json.JSONException from label01 to label03 with label18;
        catch org.json.JSONException from label04 to label05 with label18;
        catch org.json.JSONException from label06 to label07 with label18;
        catch org.json.JSONException from label08 to label09 with label18;
        catch org.json.JSONException from label10 to label11 with label18;
        catch org.json.JSONException from label12 to label13 with label18;
        catch org.json.JSONException from label14 to label15 with label18;
        catch org.json.JSONException from label16 to label17 with label18;
        catch java.lang.Throwable from label21 to label22 with label29;
        catch java.lang.Throwable from label23 to label24 with label29;
        catch java.lang.Throwable from label25 to label26 with label29;
        catch java.lang.Throwable from label27 to label28 with label29;
    }
    private java.lang.String _findMid(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.ichi2.libanki.Finder: java.util.regex.Pattern fMidPattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n.mid = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    private java.lang.String _findModel(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1, $r10;
        org.json.JSONException r2;
        java.util.LinkedList r3;
        com.ichi2.libanki.Collection $r4;
        com.ichi2.libanki.Models $r5;
        java.util.ArrayList $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        org.json.JSONObject r9;
        long $l0;
        java.lang.Long $r11;
        java.lang.RuntimeException $r12;
        java.lang.StringBuilder $r13;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        r3 = new java.util.LinkedList;

        specialinvoke r3.<java.util.LinkedList: void <init>()>();

        $r4 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

     label01:
        $r5 = virtualinvoke $r4.<com.ichi2.libanki.Collection: com.ichi2.libanki.Models getModels()>();

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Models: java.util.ArrayList all()>();

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 == 0 goto label11;

     label04:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

     label05:
        r9 = (org.json.JSONObject) $r8;

     label06:
        $r10 = virtualinvoke r9.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

     label07:
        if $z0 == 0 goto label02;

     label08:
        $l0 = virtualinvoke r9.<org.json.JSONObject: long getLong(java.lang.String)>("id");

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

     label09:
        goto label02;

     label10:
        r2 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r12;

     label11:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n.mid in ");

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String ids2str(java.util.List)>(r3);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

        catch org.json.JSONException from label01 to label03 with label10;
        catch org.json.JSONException from label04 to label05 with label10;
        catch org.json.JSONException from label06 to label07 with label10;
        catch org.json.JSONException from label08 to label09 with label10;
    }
    private java.lang.String _findNids(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.ichi2.libanki.Finder: java.util.regex.Pattern fNidsPattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n.id in (");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    private java.lang.String _findProp(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1, r6, $r7, $r8;
        java.lang.NumberFormatException r2;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;
        boolean $z0;
        java.util.Locale $r5;
        double $d0;
        int i0, $i1;
        java.lang.String[] $r9;
        java.util.List $r10;
        com.ichi2.libanki.Collection $r11;
        com.ichi2.libanki.Sched $r12;
        java.lang.StringBuilder $r13;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $r3 = <com.ichi2.libanki.Finder: java.util.regex.Pattern fPropPattern>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r1 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        r6 = $r1;

        $r7 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r8 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(3);

     label02:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ease");

     label03:
        if $z0 == 0 goto label07;

     label04:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r8);

     label05:
        $d0 = $d0 * 1000.0;

        i0 = (int) $d0;

     label06:
        $r9 = newarray (java.lang.String)[5];

        $r9[0] = "due";

        $r9[1] = "ivl";

        $r9[2] = "reps";

        $r9[3] = "lapses";

        $r9[4] = "ease";

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        $z0 = interfaceinvoke $r10.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label10;

        return null;

     label07:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

     label08:
        goto label06;

     label09:
        r2 := @caughtexception;

        return null;

     label10:
        $r8 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("due");

        if $z0 == 0 goto label12;

        $r11 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

        $r12 = virtualinvoke $r11.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        $i1 = virtualinvoke $r12.<com.ichi2.libanki.Sched: int getToday()>();

        i0 = i0 + $i1;

        $r8 = "(c.queue in (2,3)) and ";

     label11:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label12:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ease");

        if $z0 == 0 goto label11;

        r6 = "factor";

        goto label11;

        catch java.lang.NumberFormatException from label02 to label03 with label09;
        catch java.lang.NumberFormatException from label04 to label05 with label09;
        catch java.lang.NumberFormatException from label07 to label08 with label09;
    }
    private java.lang.String _findRated(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1;
        long l0, $l3;
        java.lang.NumberFormatException r2;
        java.lang.String[] $r3, $r4;
        int $i1, $i2;
        java.util.List $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        com.ichi2.libanki.Collection $r7;
        com.ichi2.libanki.Sched $r8;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r1 = $r3[0];

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 31);

        $r1 = "";

        $i2 = lengthof $r3;

        if $i2 <= 1 goto label5;

        $r4 = newarray (java.lang.String)[4];

        $r4[0] = "1";

        $r4[1] = "2";

        $r4[2] = "3";

        $r4[3] = "4";

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r1 = $r3[1];

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label4;

        return null;

     label3:
        r2 := @caughtexception;

        return null;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("and ease=");

        $r1 = $r3[1];

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $r7 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

        $r8 = virtualinvoke $r7.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        l0 = virtualinvoke $r8.<com.ichi2.libanki.Sched: long getDayCutoff()>();

        $i1 = 86400 * $i1;

        $l3 = (long) $i1;

        l0 = l0 - $l3;

        l0 = l0 * 1000L;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.id in (select cid from revlog where id>");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
    private java.lang.String _findTag(java.lang.String, java.util.List)
    {
        com.ichi2.libanki.Finder r0;
        java.util.List r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;

        r0 := @this: com.ichi2.libanki.Finder;

        $r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("none");

        if $z0 == 0 goto label1;

        return "n.tags = \"\"";

     label1:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("*", "%");

        $r3 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("%");

        if $z0 != 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("% ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>("%");

        if $z0 != 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" %");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        return "n.tags like ?";
    }
    private java.lang.String _findTemplate(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1, $r14;
        java.util.ArrayList r2, $r8;
        int $i0, $i1;
        java.lang.Integer $r3;
        java.lang.StringBuilder $r4;
        java.lang.NumberFormatException r5;
        com.ichi2.libanki.Collection $r6;
        com.ichi2.libanki.Models $r7;
        java.util.Iterator $r9;
        boolean $z0;
        java.lang.Object $r10;
        org.json.JSONObject r11, $r13;
        org.json.JSONArray $r12;
        long $l2;
        org.json.JSONException r15;
        java.lang.RuntimeException $r16;
        java.lang.String[] $r17;
        java.lang.Object[] $r18;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

     label01:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label02:
        $i0 = $i0 + -1;

     label03:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label04:
        if $r3 == null goto label06;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.ord = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label05:
        r5 := @caughtexception;

        $r3 = null;

        goto label04;

     label06:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r6 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

     label07:
        $r7 = virtualinvoke $r6.<com.ichi2.libanki.Collection: com.ichi2.libanki.Models getModels()>();

        $r8 = virtualinvoke $r7.<com.ichi2.libanki.Models: java.util.ArrayList all()>();

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label09:
        if $z0 == 0 goto label26;

     label10:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label11:
        r11 = (org.json.JSONObject) $r10;

     label12:
        $r12 = virtualinvoke r11.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("tmpls");

     label13:
        $i0 = 0;

     label14:
        $i1 = virtualinvoke $r12.<org.json.JSONArray: int length()>();

     label15:
        if $i0 >= $i1 goto label08;

     label16:
        $r13 = virtualinvoke $r12.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

        $r14 = virtualinvoke $r13.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

     label17:
        if $z0 == 0 goto label21;

     label18:
        $i1 = virtualinvoke r11.<org.json.JSONObject: int getInt(java.lang.String)>("type");

     label19:
        if $i1 != 1 goto label22;

        $r4 = new java.lang.StringBuilder;

     label20:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(n.mid = ");

        $l2 = virtualinvoke r11.<org.json.JSONObject: long getLong(java.lang.String)>("id");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14);

     label21:
        $i0 = $i0 + 1;

        goto label14;

     label22:
        $r4 = new java.lang.StringBuilder;

     label23:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(n.mid = ");

        $l2 = virtualinvoke r11.<org.json.JSONObject: long getLong(java.lang.String)>("id");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and c.ord = ");

        $i1 = virtualinvoke $r13.<org.json.JSONObject: int getInt(java.lang.String)>("ord");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14);

     label24:
        goto label21;

     label25:
        r15 := @caughtexception;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r15);

        throw $r16;

     label26:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r17 = newarray (java.lang.String)[$i0];

        $r18 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r17);

        $r1 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>(" or ", $r18);

        return $r1;

        catch java.lang.NumberFormatException from label01 to label02 with label05;
        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch org.json.JSONException from label07 to label09 with label25;
        catch org.json.JSONException from label10 to label11 with label25;
        catch org.json.JSONException from label12 to label13 with label25;
        catch org.json.JSONException from label14 to label15 with label25;
        catch org.json.JSONException from label16 to label17 with label25;
        catch org.json.JSONException from label18 to label19 with label25;
        catch org.json.JSONException from label20 to label21 with label25;
        catch org.json.JSONException from label23 to label24 with label25;
    }
    private java.lang.String _findText(java.lang.String, java.util.List)
    {
        com.ichi2.libanki.Finder r0;
        java.util.List r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;

        r0 := @this: com.ichi2.libanki.Finder;

        $r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("*", "%");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        return "(n.sfld like ? escape \'\\\' or n.flds like ? escape \'\\\')";
    }
    private android.util.Pair _order(java.lang.Boolean)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.Boolean $r1;
        org.json.JSONException r2;
        boolean $z0;
        android.util.Pair $r3;
        com.ichi2.libanki.Collection $r4;
        org.json.JSONObject $r5;
        java.lang.String $r6, r7;
        java.lang.StringBuilder $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.Boolean;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label01;

        $r3 = new android.util.Pair;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        specialinvoke $r3.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>("", $r1);

        return $r3;

     label01:
        $r4 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

     label02:
        $r5 = virtualinvoke $r4.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

        $r6 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("sortType");

     label03:
        r7 = null;

     label04:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("note");

     label05:
        if $z0 == 0 goto label19;

     label06:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("noteCrt");

     label07:
        if $z0 == 0 goto label15;

        r7 = "n.id, c.ord";

     label08:
        if r7 != null goto label09;

        r7 = "n.id, c.ord";

     label09:
        $r4 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

     label10:
        $r5 = virtualinvoke $r4.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

        $z0 = virtualinvoke $r5.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("sortBackwards");

     label11:
        $r3 = new android.util.Pair;

        $r8 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        specialinvoke $r3.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r6, $r1);

     label13:
        return $r3;

     label14:
        r2 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r9;

     label15:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("noteMod");

     label16:
        if $z0 == 0 goto label17;

        r7 = "n.mod, c.ord";

        goto label08;

     label17:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("noteFld");

     label18:
        if $z0 == 0 goto label08;

        r7 = "n.sfld COLLATE NOCASE, c.ord";

        goto label08;

     label19:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("card");

     label20:
        if $z0 == 0 goto label08;

     label21:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("cardMod");

     label22:
        if $z0 == 0 goto label23;

        r7 = "c.mod";

        goto label08;

     label23:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("cardReps");

     label24:
        if $z0 == 0 goto label25;

        r7 = "c.reps";

        goto label08;

     label25:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("cardDue");

     label26:
        if $z0 == 0 goto label27;

        r7 = "c.type, c.due";

        goto label08;

     label27:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("cardEase");

     label28:
        if $z0 == 0 goto label29;

        r7 = "c.factor";

        goto label08;

     label29:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("cardLapses");

     label30:
        if $z0 == 0 goto label31;

        r7 = "c.lapses";

        goto label08;

     label31:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("cardIvl");

     label32:
        if $z0 == 0 goto label08;

        r7 = "c.ivl";

        goto label08;

        catch org.json.JSONException from label02 to label03 with label14;
        catch org.json.JSONException from label04 to label05 with label14;
        catch org.json.JSONException from label06 to label07 with label14;
        catch org.json.JSONException from label10 to label11 with label14;
        catch org.json.JSONException from label12 to label13 with label14;
        catch org.json.JSONException from label15 to label16 with label14;
        catch org.json.JSONException from label17 to label18 with label14;
        catch org.json.JSONException from label19 to label20 with label14;
        catch org.json.JSONException from label21 to label22 with label14;
        catch org.json.JSONException from label23 to label24 with label14;
        catch org.json.JSONException from label25 to label26 with label14;
        catch org.json.JSONException from label27 to label28 with label14;
        catch org.json.JSONException from label29 to label30 with label14;
        catch org.json.JSONException from label31 to label32 with label14;
    }
    private android.util.Pair _order(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.Boolean $r2;
        android.util.Pair $r3;
        java.lang.StringBuilder $r4;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r3 = specialinvoke r0.<com.ichi2.libanki.Finder: android.util.Pair _order(java.lang.Boolean)>($r2);

        return $r3;

     label1:
        $r3 = new android.util.Pair;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" order by ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        specialinvoke $r3.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        return $r3;
    }
    private java.lang.String _query(java.lang.String, java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1, $r2, r3;
        boolean $z0;
        java.lang.StringBuilder $r4;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("n.");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("n.");

        if $z0 != 0 goto label3;

        r3 = "select c.id from cards c where ";

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label5;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label3:
        r3 = "select c.id from cards c, notes n where c.nid=n.id and ";

        goto label1;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label5:
        return $r1;
    }
    private java.lang.String _queryForCardBrowser(java.lang.String, java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select c.id, n.sfld, c.did, c.queue, n.tags from cards c, notes n where c.nid=n.id and ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select c.id, n.sfld, c.did, c.queue, n.tags from cards c, notes n where c.nid=n.id and ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label3:
        return $r1;
    }
    private java.util.List dids(java.lang.Long)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.Long $r1;
        com.ichi2.libanki.Collection $r2;
        com.ichi2.libanki.Decks $r3;
        long $l0;
        java.util.TreeMap $r4;
        java.util.ArrayList r5;
        java.util.Collection $r6;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.Long;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Decks: java.util.TreeMap children(long)>($l0);

        r5 = new java.util.ArrayList;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r4.<java.util.TreeMap: java.util.Collection values()>();

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        return r5;
    }
    public static java.util.List findDupes(com.ichi2.libanki.Collection, java.lang.String)
    {
        com.ichi2.libanki.Collection $r0;
        java.lang.String $r1;
        java.util.List $r2;

        $r0 := @parameter0: com.ichi2.libanki.Collection;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.ichi2.libanki.Finder: java.util.List findDupes(com.ichi2.libanki.Collection,java.lang.String,java.lang.String)>($r0, $r1, "");

        return $r2;
    }
    public static java.util.List findDupes(com.ichi2.libanki.Collection, java.lang.String, java.lang.String)
    {
        com.ichi2.libanki.Collection $r0;
        java.lang.String $r1, $r5;
        java.util.ArrayList r2, $r16;
        java.util.HashMap r3, r4;
        boolean $z0;
        java.lang.StringBuilder $r6;
        android.database.Cursor r7, $r11;
        com.ichi2.libanki.DB $r8;
        io.requery.android.database.sqlite.SQLiteDatabase $r9;
        java.util.List $r10;
        long $l0, $l1;
        java.lang.String[] $r12;
        java.lang.Integer $r13;
        java.lang.Long $r14;
        java.lang.Object $r15;
        int $i2;
        android.util.Pair $r17;
        java.lang.Throwable $r18;

        $r0 := @parameter0: com.ichi2.libanki.Collection;

        $r1 := @parameter1: java.lang.String;

        $r5 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z0 != 0 goto label01;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":*\'");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        r7 = null;

     label02:
        $r8 = virtualinvoke $r0.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r9 = virtualinvoke $r8.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select id, mid, flds from notes where id in ");

        $r10 = virtualinvoke $r0.<com.ichi2.libanki.Collection: java.util.List findNotes(java.lang.String)>($r5);

        $r5 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String ids2str(java.util.List)>($r10);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r5, null);

     label03:
        r7 = $r11;

     label04:
        $z0 = interfaceinvoke $r11.<android.database.Cursor: boolean moveToNext()>();

     label05:
        if $z0 == 0 goto label19;

     label06:
        $l0 = interfaceinvoke $r11.<android.database.Cursor: long getLong(int)>(0);

        $l1 = interfaceinvoke $r11.<android.database.Cursor: long getLong(int)>(1);

        $r5 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r12 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String[] splitFields(java.lang.String)>($r5);

        $r13 = staticinvoke <com.ichi2.libanki.Finder: java.lang.Integer ordForMid(com.ichi2.libanki.Collection,java.util.Map,long,java.lang.String)>($r0, r3, $l1, $r1);

     label07:
        if $r13 == null goto label04;

     label08:
        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r15 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);

        $r13 = (java.lang.Integer) $r15;

        $i2 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r5 = $r12[$i2];

        $r5 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTMLMedia(java.lang.String)>($r5);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

     label09:
        if $z0 != 0 goto label04;

     label10:
        $z0 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

     label11:
        if $z0 != 0 goto label13;

     label12:
        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r16);

     label13:
        $r15 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r10 = (java.util.List) $r15;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r10 = (java.util.List) $r15;

        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

     label14:
        if $i2 != 2 goto label04;

     label15:
        $r17 = new android.util.Pair;

        $r15 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        specialinvoke $r17.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r5, $r15);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r17);

     label16:
        goto label04;

     label17:
        $r18 := @caughtexception;

        if r7 == null goto label18;

        interfaceinvoke r7.<android.database.Cursor: void close()>();

     label18:
        throw $r18;

     label19:
        if $r11 == null goto label20;

        interfaceinvoke $r11.<android.database.Cursor: void close()>();

     label20:
        return r2;

        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }
    public static int findReplace(com.ichi2.libanki.Collection, java.util.List, java.lang.String, java.lang.String)
    {
        com.ichi2.libanki.Collection $r0;
        java.util.List r1;
        java.lang.String $r2, $r3;
        int $i0;

        $r0 := @parameter0: com.ichi2.libanki.Collection;

        r1 := @parameter1: java.util.List;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $i0 = staticinvoke <com.ichi2.libanki.Finder: int findReplace(com.ichi2.libanki.Collection,java.util.List,java.lang.String,java.lang.String,boolean,java.lang.String,boolean)>($r0, r1, $r2, $r3, 0, null, 1);

        return $i0;
    }
    public static int findReplace(com.ichi2.libanki.Collection, java.util.List, java.lang.String, java.lang.String, java.lang.String)
    {
        com.ichi2.libanki.Collection $r0;
        java.util.List r1;
        java.lang.String $r2, $r3, $r4;
        int $i0;

        $r0 := @parameter0: com.ichi2.libanki.Collection;

        r1 := @parameter1: java.util.List;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $i0 = staticinvoke <com.ichi2.libanki.Finder: int findReplace(com.ichi2.libanki.Collection,java.util.List,java.lang.String,java.lang.String,boolean,java.lang.String,boolean)>($r0, r1, $r2, $r3, 0, $r4, 1);

        return $i0;
    }
    public static int findReplace(com.ichi2.libanki.Collection, java.util.List, java.lang.String, java.lang.String, boolean)
    {
        com.ichi2.libanki.Collection $r0;
        java.util.List r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        int $i0;

        $r0 := @parameter0: com.ichi2.libanki.Collection;

        r1 := @parameter1: java.util.List;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $z0 := @parameter4: boolean;

        $i0 = staticinvoke <com.ichi2.libanki.Finder: int findReplace(com.ichi2.libanki.Collection,java.util.List,java.lang.String,java.lang.String,boolean,java.lang.String,boolean)>($r0, r1, $r2, $r3, $z0, null, 1);

        return $i0;
    }
    public static int findReplace(com.ichi2.libanki.Collection, java.util.List, java.lang.String, java.lang.String, boolean, java.lang.String, boolean)
    {
        com.ichi2.libanki.Collection $r0;
        java.lang.String $r1, $r2, $r7, $r14;
        boolean $z0, $z1, $z2;
        java.util.ArrayList r3, r20;
        org.json.JSONException r4;
        java.util.HashMap r5;
        java.util.List r6;
        com.ichi2.libanki.Models $r8;
        java.util.Iterator $r9;
        java.lang.Object $r10;
        org.json.JSONObject r11, $r13;
        org.json.JSONArray $r12;
        int i0, $i1;
        long $l2, $l3;
        java.lang.Long $r15;
        java.lang.Integer $r16;
        java.lang.RuntimeException $r17;
        java.lang.StringBuilder $r18;
        java.util.regex.Pattern $r19;
        android.database.Cursor r21, $r24;
        com.ichi2.libanki.DB $r22;
        io.requery.android.database.sqlite.SQLiteDatabase $r23;
        java.lang.String[] $r25;
        java.util.regex.Matcher $r26;
        java.lang.Object[] $r27;
        java.lang.Throwable $r28;
        long[] $r29;

        $r0 := @parameter0: com.ichi2.libanki.Collection;

        r6 := @parameter1: java.util.List;

        $r7 := @parameter2: java.lang.String;

        $r1 := @parameter3: java.lang.String;

        $z0 := @parameter4: boolean;

        $r2 := @parameter5: java.lang.String;

        $z1 := @parameter6: boolean;

        r5 = new java.util.HashMap;

        specialinvoke r5.<java.util.HashMap: void <init>()>();

        if $r2 == null goto label16;

     label01:
        $r8 = virtualinvoke $r0.<com.ichi2.libanki.Collection: com.ichi2.libanki.Models getModels()>();

        r3 = virtualinvoke $r8.<com.ichi2.libanki.Models: java.util.ArrayList all()>();

        $r9 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z2 == 0 goto label15;

     label04:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label05:
        r11 = (org.json.JSONObject) $r10;

     label06:
        $r12 = virtualinvoke r11.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("flds");

     label07:
        i0 = 0;

     label08:
        $i1 = virtualinvoke $r12.<org.json.JSONArray: int length()>();

     label09:
        if i0 >= $i1 goto label02;

     label10:
        $r13 = virtualinvoke $r12.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r14 = virtualinvoke $r13.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label11:
        if $z2 == 0 goto label13;

     label12:
        $l2 = virtualinvoke r11.<org.json.JSONObject: long getLong(java.lang.String)>("id");

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $i1 = virtualinvoke $r13.<org.json.JSONObject: int getInt(java.lang.String)>("ord");

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16);

     label13:
        i0 = i0 + 1;

        goto label08;

     label14:
        r4 := @caughtexception;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);

        throw $r17;

     label15:
        $z2 = interfaceinvoke r5.<java.util.Map: boolean isEmpty()>();

        if $z2 == 0 goto label16;

        return 0;

     label16:
        if $z0 != 0 goto label17;

        $r7 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>($r7);

     label17:
        if $z1 == 0 goto label18;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?i)");

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        $r19 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r7);

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r7 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String ids2str(java.util.List)>(r6);

        r20 = new java.util.ArrayList;

        specialinvoke r20.<java.util.ArrayList: void <init>()>();

        r21 = null;

     label19:
        $r22 = virtualinvoke $r0.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r23 = virtualinvoke $r22.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select id, mid, flds from notes where id in ");

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = virtualinvoke $r23.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r7, null);

     label20:
        r21 = $r24;

     label21:
        $z0 = interfaceinvoke $r24.<android.database.Cursor: boolean moveToNext()>();

     label22:
        if $z0 == 0 goto label39;

     label23:
        $r7 = interfaceinvoke $r24.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r25 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String[] splitFields(java.lang.String)>($r7);

     label24:
        if $r2 == null goto label34;

     label25:
        $l2 = interfaceinvoke $r24.<android.database.Cursor: long getLong(int)>(1);

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $z0 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r15);

     label26:
        if $z0 == 0 goto label21;

     label27:
        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r10 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);

        $r16 = (java.lang.Integer) $r10;

        i0 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r14 = $r25[i0];

        $r26 = virtualinvoke $r19.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r14);

        $r14 = virtualinvoke $r26.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($r1);

        $r25[i0] = $r14;

     label28:
        $r14 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String joinFields(java.lang.String[])>($r25);

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label29:
        if $z0 != 0 goto label21;

     label30:
        $l2 = interfaceinvoke $r24.<android.database.Cursor: long getLong(int)>(0);

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke r20.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r27 = newarray (java.lang.Object)[4];

        $r27[0] = $r14;

        $l3 = staticinvoke <com.ichi2.libanki.Utils: long intNow()>();

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r27[1] = $r15;

        i0 = virtualinvoke $r0.<com.ichi2.libanki.Collection: int usn()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r27[2] = $r16;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r27[3] = $r15;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

     label31:
        goto label21;

     label32:
        $r28 := @caughtexception;

        if r21 == null goto label33;

        interfaceinvoke r21.<android.database.Cursor: void close()>();

     label33:
        throw $r28;

     label34:
        i0 = 0;

     label35:
        $i1 = lengthof $r25;

     label36:
        if i0 >= $i1 goto label28;

     label37:
        $r14 = $r25[i0];

        $r26 = virtualinvoke $r19.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r14);

        $r14 = virtualinvoke $r26.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($r1);

        $r25[i0] = $r14;

     label38:
        i0 = i0 + 1;

        goto label35;

     label39:
        if $r24 == null goto label40;

        interfaceinvoke $r24.<android.database.Cursor: void close()>();

     label40:
        $z0 = virtualinvoke r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label41;

        return 0;

     label41:
        $r22 = virtualinvoke $r0.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        virtualinvoke $r22.<com.ichi2.libanki.DB: void executeMany(java.lang.String,java.util.List)>("update notes set flds=?,mod=?,usn=? where id=?", r3);

        $r29 = staticinvoke <com.ichi2.libanki.Utils: long[] toPrimitive(java.util.Collection)>(r20);

        virtualinvoke $r0.<com.ichi2.libanki.Collection: void updateFieldCache(long[])>($r29);

        virtualinvoke $r0.<com.ichi2.libanki.Collection: java.util.ArrayList genCards(long[])>($r29);

        i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        return i0;

        catch org.json.JSONException from label01 to label03 with label14;
        catch org.json.JSONException from label04 to label05 with label14;
        catch org.json.JSONException from label06 to label07 with label14;
        catch org.json.JSONException from label08 to label09 with label14;
        catch org.json.JSONException from label10 to label11 with label14;
        catch org.json.JSONException from label12 to label13 with label14;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch java.lang.Throwable from label21 to label22 with label32;
        catch java.lang.Throwable from label23 to label24 with label32;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch java.lang.Throwable from label27 to label29 with label32;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label35 to label36 with label32;
        catch java.lang.Throwable from label37 to label38 with label32;
    }
    public static java.lang.Integer ordForMid(com.ichi2.libanki.Collection, java.util.Map, long, java.lang.String)
    {
        com.ichi2.libanki.Collection $r0;
        java.util.Map r1;
        long $l0;
        java.lang.String $r2, $r8;
        org.json.JSONException r3;
        java.lang.Long $r4;
        boolean $z0;
        com.ichi2.libanki.Models $r5;
        org.json.JSONObject $r6;
        org.json.JSONArray $r7;
        int i1, $i2;
        java.lang.Integer $r9;
        java.lang.Object $r10;
        java.lang.RuntimeException $r11;

        $r0 := @parameter0: com.ichi2.libanki.Collection;

        r1 := @parameter1: java.util.Map;

        $l0 := @parameter2: long;

        $r2 := @parameter3: java.lang.String;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z0 != 0 goto label08;

        $r5 = virtualinvoke $r0.<com.ichi2.libanki.Collection: com.ichi2.libanki.Models getModels()>();

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Models: org.json.JSONObject get(long)>($l0);

     label01:
        $r7 = virtualinvoke $r6.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("flds");

     label02:
        i1 = 0;

     label03:
        $i2 = virtualinvoke $r7.<org.json.JSONArray: int length()>();

     label04:
        if i1 >= $i2 goto label08;

     label05:
        $r6 = virtualinvoke $r7.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i1);

        $r8 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

     label06:
        if $z0 == 0 goto label09;

     label07:
        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r9);

     label08:
        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r9 = (java.lang.Integer) $r10;

        return $r9;

     label09:
        i1 = i1 + 1;

        goto label03;

     label10:
        r3 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r11;

        catch org.json.JSONException from label01 to label02 with label10;
        catch org.json.JSONException from label03 to label04 with label10;
        catch org.json.JSONException from label05 to label06 with label10;
        catch org.json.JSONException from label07 to label08 with label10;
    }
    public java.lang.String _findDeck(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.util.ArrayList r1, $r8;
        java.lang.String $r2, $r11, $r13;
        boolean $z0;
        com.ichi2.libanki.Collection $r3;
        com.ichi2.libanki.Decks $r4;
        org.json.JSONObject $r5;
        long $l0;
        java.lang.Long $r6;
        java.util.List $r7;
        int $i1;
        java.util.Iterator $r9, $r14;
        java.lang.Object $r10;
        java.lang.StringBuilder $r12;
        org.json.JSONException r15;
        java.lang.RuntimeException $r16;

        r0 := @this: com.ichi2.libanki.Finder;

        $r2 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 == 0 goto label01;

        return "skip";

     label01:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("filtered");

        if $z0 == 0 goto label02;

        return "c.odid";

     label02:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("current");

     label03:
        if $z0 == 0 goto label07;

        $r3 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

     label04:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r5 = virtualinvoke $r4.<com.ichi2.libanki.Decks: org.json.JSONObject current()>();

        $l0 = virtualinvoke $r5.<org.json.JSONObject: long getLong(java.lang.String)>("id");

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7 = specialinvoke r0.<com.ichi2.libanki.Finder: java.util.List dids(java.lang.Long)>($r6);

     label05:
        if $r7 == null goto label06;

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i1 != 0 goto label35;

     label06:
        return null;

     label07:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");

     label08:
        if $z0 != 0 goto label11;

        $r3 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

     label09:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r6 = virtualinvoke $r4.<com.ichi2.libanki.Decks: java.lang.Long id(java.lang.String,boolean)>($r2, 0);

        $r7 = specialinvoke r0.<com.ichi2.libanki.Finder: java.util.List dids(java.lang.Long)>($r6);

     label10:
        goto label05;

     label11:
        r1 = new java.util.ArrayList;

     label12:
        specialinvoke r1.<java.util.ArrayList: void <init>()>();

     label13:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("*", ".*");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("+", "\\+");

     label14:
        $r3 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

     label15:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r8 = virtualinvoke $r4.<com.ichi2.libanki.Decks: java.util.ArrayList all()>();

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label17:
        if $z0 == 0 goto label37;

     label18:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label19:
        $r5 = (org.json.JSONObject) $r10;

     label20:
        $r11 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

     label21:
        $r12 = new java.lang.StringBuilder;

     label22:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?i)");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean matches(java.lang.String)>($r13);

     label23:
        if $z0 == 0 goto label16;

     label24:
        $l0 = virtualinvoke $r5.<org.json.JSONObject: long getLong(java.lang.String)>("id");

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7 = specialinvoke r0.<com.ichi2.libanki.Finder: java.util.List dids(java.lang.Long)>($r6);

        $r14 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label25:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

     label26:
        if $z0 == 0 goto label16;

     label27:
        $r10 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

     label28:
        $r6 = (java.lang.Long) $r10;

     label29:
        $l0 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r6);

     label30:
        if $z0 != 0 goto label25;

     label31:
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6);

     label32:
        goto label25;

     label33:
        r15 := @caughtexception;

     label34:
        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r15);

        throw $r16;

     label35:
        $r2 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String ids2str(java.util.List)>($r7);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.did in ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or c.odid in ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label36:
        r15 := @caughtexception;

        goto label34;

     label37:
        $r7 = r1;

        goto label05;

        catch org.json.JSONException from label02 to label03 with label36;
        catch org.json.JSONException from label04 to label05 with label36;
        catch org.json.JSONException from label07 to label08 with label36;
        catch org.json.JSONException from label09 to label10 with label36;
        catch org.json.JSONException from label12 to label13 with label36;
        catch org.json.JSONException from label13 to label14 with label33;
        catch org.json.JSONException from label15 to label17 with label33;
        catch org.json.JSONException from label18 to label19 with label33;
        catch org.json.JSONException from label20 to label21 with label33;
        catch org.json.JSONException from label22 to label23 with label33;
        catch org.json.JSONException from label24 to label26 with label33;
        catch org.json.JSONException from label27 to label28 with label33;
        catch org.json.JSONException from label29 to label30 with label33;
        catch org.json.JSONException from label31 to label32 with label33;
    }
    public java.lang.String[] _tokenize(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1, r3, $r5;
        java.util.ArrayList r2;
        char c0, $c3;
        int i1, $i2;
        java.lang.StringBuilder $r4;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.String[] $r7;
        java.lang.Object[] $r8;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        c0 = 0;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = "";

        i1 = 0;

     label01:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i1 >= $i2 goto label18;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        if $c3 == 39 goto label02;

        if $c3 != 34 goto label08;

     label02:
        if c0 == 0 goto label05;

        if $c3 != c0 goto label04;

        c0 = 0;

     label03:
        i1 = i1 + 1;

        goto label01;

     label04:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label05:
        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i2 == 0 goto label07;

        $z0 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>(":");

        if $z0 == 0 goto label06;

        c0 = $c3;

        goto label03;

     label06:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label07:
        c0 = $c3;

        goto label03;

     label08:
        if $c3 != 32 goto label10;

        if c0 == 0 goto label09;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label09:
        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i2 == 0 goto label03;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

        r3 = "";

        goto label03;

     label10:
        if $c3 == 40 goto label11;

        if $c3 != 41 goto label14;

     label11:
        if c0 == 0 goto label12;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label12:
        if $c3 != 41 goto label13;

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i2 == 0 goto label13;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

        r3 = "";

     label13:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c3);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label03;

     label14:
        if $c3 != 45 goto label17;

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i2 == 0 goto label15;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label15:
        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i2 == 0 goto label16;

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        $i2 = $i2 + -1;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r5 = (java.lang.String) $r6;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z0 != 0 goto label03;

     label16:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("-");

        goto label03;

     label17:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label18:
        i1 = virtualinvoke r3.<java.lang.String: int length()>();

        if i1 == 0 goto label19;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

     label19:
        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $r7 = newarray (java.lang.String)[i1];

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r7 = (java.lang.String[]) $r8;

        return $r7;
    }
    public android.util.Pair _where(java.lang.String[])
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String[] $r1, $r7;
        java.util.ArrayList r2;
        com.ichi2.libanki.Finder$SearchState r3;
        java.lang.String r4, $r9;
        int $i0, $i1;
        boolean $z0;
        android.util.Pair $r5;
        java.lang.StringBuilder $r6;
        java.util.Locale $r8;
        java.lang.Object[] $r10;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String[];

        r3 = new com.ichi2.libanki.Finder$SearchState;

        specialinvoke r3.<com.ichi2.libanki.Finder$SearchState: void <init>(com.ichi2.libanki.Finder)>(r0);

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r1;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label21;

        r4 = $r1[$i1];

        $z0 = r3.<com.ichi2.libanki.Finder$SearchState: boolean bad>;

        if $z0 == 0 goto label02;

        $r5 = new android.util.Pair;

        specialinvoke $r5.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(null, null);

        return $r5;

     label02:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z0 == 0 goto label04;

        r3.<com.ichi2.libanki.Finder$SearchState: boolean isnot> = 1;

     label03:
        $i1 = $i1 + 1;

        goto label01;

     label04:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("or");

        if $z0 == 0 goto label05;

        r3.<com.ichi2.libanki.Finder$SearchState: boolean isor> = 1;

        goto label03;

     label05:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("(");

        if $z0 == 0 goto label06;

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String,boolean)>(r4, 0);

        r3.<com.ichi2.libanki.Finder$SearchState: boolean join> = 0;

        goto label03;

     label06:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(")");

        if $z0 == 0 goto label07;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r4 = r3.<com.ichi2.libanki.Finder$SearchState: java.lang.String q>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r3.<com.ichi2.libanki.Finder$SearchState: java.lang.String q> = r4;

        goto label03;

     label07:
        $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>(":");

        if $z0 == 0 goto label20;

        $r7 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", 2);

        r4 = $r7[0];

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r9 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8);

        r4 = $r7[1];

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("added");

        if $z0 == 0 goto label08;

        r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findAdded(java.lang.String)>(r4);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label08:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("card");

        if $z0 == 0 goto label09;

        r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findTemplate(java.lang.String)>(r4);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label09:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("deck");

        if $z0 == 0 goto label10;

        r4 = virtualinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findDeck(java.lang.String)>(r4);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label10:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("mid");

        if $z0 == 0 goto label11;

        r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findMid(java.lang.String)>(r4);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label11:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("nid");

        if $z0 == 0 goto label12;

        r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findNids(java.lang.String)>(r4);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label12:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("cid");

        if $z0 == 0 goto label13;

        r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findCids(java.lang.String)>(r4);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label13:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("note");

        if $z0 == 0 goto label14;

        r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findModel(java.lang.String)>(r4);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label14:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("prop");

        if $z0 == 0 goto label15;

        r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findProp(java.lang.String)>(r4);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label15:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("rated");

        if $z0 == 0 goto label16;

        r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findRated(java.lang.String)>(r4);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label16:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("tag");

        if $z0 == 0 goto label17;

        r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findTag(java.lang.String,java.util.List)>(r4, r2);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label17:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("dupe");

        if $z0 == 0 goto label18;

        r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findDupes(java.lang.String)>(r4);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label18:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("is");

        if $z0 == 0 goto label19;

        r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findCardState(java.lang.String)>(r4);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label19:
        r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findField(java.lang.String,java.lang.String)>($r9, r4);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label20:
        r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.lang.String _findText(java.lang.String,java.util.List)>(r4, r2);

        virtualinvoke r3.<com.ichi2.libanki.Finder$SearchState: void add(java.lang.String)>(r4);

        goto label03;

     label21:
        $z0 = r3.<com.ichi2.libanki.Finder$SearchState: boolean bad>;

        if $z0 == 0 goto label22;

        $r5 = new android.util.Pair;

        specialinvoke $r5.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(null, null);

        return $r5;

     label22:
        $r5 = new android.util.Pair;

        r4 = r3.<com.ichi2.libanki.Finder$SearchState: java.lang.String q>;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r1 = newarray (java.lang.String)[$i0];

        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        specialinvoke $r5.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r4, $r10);

        return $r5;
    }
    public java.util.List fieldNames(com.ichi2.libanki.Collection)
    {
        com.ichi2.libanki.Finder r0;
        com.ichi2.libanki.Collection $r1;
        java.util.List $r2;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        $r2 = virtualinvoke r0.<com.ichi2.libanki.Finder: java.util.List fieldNames(com.ichi2.libanki.Collection,boolean)>($r1, 1);

        return $r2;
    }
    public java.util.List fieldNames(com.ichi2.libanki.Collection, boolean)
    {
        com.ichi2.libanki.Finder r0;
        com.ichi2.libanki.Collection $r1;
        boolean $z0, $z1;
        org.json.JSONException r2;
        java.util.HashSet r3;
        java.util.ArrayList r4, $r6;
        com.ichi2.libanki.Models $r5;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        org.json.JSONObject r9;
        org.json.JSONArray $r10;
        int i0, $i1;
        java.lang.String $r11;
        java.util.Locale $r12;
        java.lang.RuntimeException $r13;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        $z0 := @parameter1: boolean;

        r3 = new java.util.HashSet;

        specialinvoke r3.<java.util.HashSet: void <init>()>();

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

     label01:
        $r5 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Models getModels()>();

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Models: java.util.ArrayList all()>();

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z1 == 0 goto label19;

     label04:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

     label05:
        r9 = (org.json.JSONObject) $r8;

     label06:
        $r10 = virtualinvoke r9.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("flds");

     label07:
        i0 = 0;

     label08:
        $i1 = virtualinvoke $r10.<org.json.JSONArray: int length()>();

     label09:
        if i0 >= $i1 goto label02;

     label10:
        r9 = virtualinvoke $r10.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i0);

        $r11 = virtualinvoke r9.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

     label11:
        $r12 = <java.util.Locale: java.util.Locale US>;

     label12:
        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r12);

        $z1 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r11);

     label13:
        if $z1 != 0 goto label17;

     label14:
        $r11 = virtualinvoke r9.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r11 = virtualinvoke r9.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

     label15:
        $r12 = <java.util.Locale: java.util.Locale US>;

     label16:
        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r12);

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r11);

     label17:
        i0 = i0 + 1;

        goto label08;

     label18:
        r2 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r13;

     label19:
        if $z0 == 0 goto label20;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>(java.util.Collection)>(r3);

     label20:
        return r4;

        catch org.json.JSONException from label01 to label03 with label18;
        catch org.json.JSONException from label04 to label05 with label18;
        catch org.json.JSONException from label06 to label07 with label18;
        catch org.json.JSONException from label08 to label09 with label18;
        catch org.json.JSONException from label10 to label11 with label18;
        catch org.json.JSONException from label12 to label13 with label18;
        catch org.json.JSONException from label14 to label15 with label18;
        catch org.json.JSONException from label16 to label17 with label18;
    }
    public java.util.List findCards(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1;
        java.util.List $r2;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.ichi2.libanki.Finder: java.util.List findCards(java.lang.String,boolean)>($r1, 0);

        return $r2;
    }
    public java.util.List findCards(java.lang.String, java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1, $r2;
        java.util.List $r3;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<com.ichi2.libanki.Finder: java.util.List _findCards(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r3;
    }
    public java.util.List findCards(java.lang.String, boolean)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.Boolean $r2;
        java.util.List $r3;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = specialinvoke r0.<com.ichi2.libanki.Finder: java.util.List _findCards(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r3;
    }
    public java.util.List findCardsForCardBrowser(java.lang.String, java.lang.String, java.util.Map)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1, $r2;
        java.util.Map r3;
        java.util.List $r4;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Map;

        $r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.util.List _findCardsForCardBrowser(java.lang.String,java.lang.Object,java.util.Map)>($r1, $r2, r3);

        return $r4;
    }
    public java.util.List findCardsForCardBrowser(java.lang.String, boolean, java.util.Map)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.Map r2;
        java.lang.Boolean $r3;
        java.util.List $r4;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        r2 := @parameter2: java.util.Map;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = specialinvoke r0.<com.ichi2.libanki.Finder: java.util.List _findCardsForCardBrowser(java.lang.String,java.lang.Object,java.util.Map)>($r1, $r3, r2);

        return $r4;
    }
    public java.util.List findNotes(java.lang.String)
    {
        com.ichi2.libanki.Finder r0;
        java.lang.String $r1;
        android.database.SQLException r2;
        java.lang.String[] $r3;
        android.util.Pair $r4;
        java.lang.Object r5;
        java.util.ArrayList r6;
        boolean $z0;
        java.lang.StringBuilder $r7;
        android.database.Cursor r8, $r12;
        com.ichi2.libanki.Collection $r9;
        com.ichi2.libanki.DB $r10;
        io.requery.android.database.sqlite.SQLiteDatabase $r11;
        long $l0;
        java.lang.Long $r13;
        java.lang.Throwable $r14;

        r0 := @this: com.ichi2.libanki.Finder;

        $r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<com.ichi2.libanki.Finder: java.lang.String[] _tokenize(java.lang.String)>($r1);

        $r4 = virtualinvoke r0.<com.ichi2.libanki.Finder: android.util.Pair _where(java.lang.String[])>($r3);

        r5 = $r4.<android.util.Pair: java.lang.Object first>;

        $r1 = (java.lang.String) r5;

        r5 = $r4.<android.util.Pair: java.lang.Object second>;

        $r3 = (java.lang.String[]) r5;

        r6 = new java.util.ArrayList;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        if $r1 != null goto label01;

        return r6;

     label01:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label13;

        $r1 = "1";

     label02:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select distinct(n.id) from cards c, notes n where c.nid=n.id and ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = null;

     label03:
        $r9 = r0.<com.ichi2.libanki.Finder: com.ichi2.libanki.Collection mCol>;

     label04:
        $r10 = virtualinvoke $r9.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r11 = virtualinvoke $r10.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r12 = virtualinvoke $r11.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r1, $r3);

     label05:
        r8 = $r12;

     label06:
        $z0 = interfaceinvoke $r12.<android.database.Cursor: boolean moveToNext()>();

     label07:
        if $z0 == 0 goto label14;

     label08:
        $l0 = interfaceinvoke $r12.<android.database.Cursor: long getLong(int)>(0);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r13);

     label09:
        goto label06;

     label10:
        r2 := @caughtexception;

     label11:
        r6 = new java.util.ArrayList;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

     label12:
        if r8 == null goto label17;

        interfaceinvoke r8.<android.database.Cursor: void close()>();

        return r6;

     label13:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label14:
        if $r12 == null goto label17;

        interfaceinvoke $r12.<android.database.Cursor: void close()>();

        return r6;

     label15:
        $r14 := @caughtexception;

        if r8 == null goto label16;

        interfaceinvoke r8.<android.database.Cursor: void close()>();

     label16:
        throw $r14;

     label17:
        return r6;

        catch android.database.SQLException from label04 to label05 with label10;
        catch android.database.SQLException from label06 to label07 with label10;
        catch android.database.SQLException from label08 to label09 with label10;
        catch java.lang.Throwable from label03 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
    }
