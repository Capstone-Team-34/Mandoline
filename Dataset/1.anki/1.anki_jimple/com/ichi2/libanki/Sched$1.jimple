com.ichi2.libanki.Sched$1 extends java.lang.Object implements java.util.Comparator
final com.ichi2.libanki.Sched this$0
    void <init>(com.ichi2.libanki.Sched)
    {
        com.ichi2.libanki.Sched$1 r0;
        com.ichi2.libanki.Sched $r1;

        r0 := @this: com.ichi2.libanki.Sched$1;

        $r1 := @parameter0: com.ichi2.libanki.Sched;

        r0.<com.ichi2.libanki.Sched$1: com.ichi2.libanki.Sched this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.ichi2.libanki.Sched$1 r0;
        int $i0;
        java.lang.Object $r1, $r2;
        long[] $r3, $r4;

        r0 := @this: com.ichi2.libanki.Sched$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (long[]) $r1;

        $r4 = (long[]) $r2;

        $i0 = virtualinvoke r0.<com.ichi2.libanki.Sched$1: int compare(long[],long[])>($r3, $r4);

        return $i0;
    }
    public int compare(long[], long[])
    {
        com.ichi2.libanki.Sched$1 r0;
        long[] $r1, $r2;
        long $l0;
        java.lang.Long $r3, $r4;
        int $i1;

        r0 := @this: com.ichi2.libanki.Sched$1;

        $r1 := @parameter0: long[];

        $r2 := @parameter1: long[];

        $l0 = $r1[0];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $l0 = $r2[0];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $i1 = virtualinvoke $r3.<java.lang.Long: int compareTo(java.lang.Long)>($r4);

        return $i1;
    }
