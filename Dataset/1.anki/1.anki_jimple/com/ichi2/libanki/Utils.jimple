com.ichi2.libanki.Utils extends java.lang.Object
private static final java.lang.String ALL_CHARACTERS
private static final java.lang.String BASE91_EXTRA_CHARS
public static final int CHUNK_SIZE
public static final java.util.Locale ENGLISH_LOCALE
public static final int FILE_COPY_BUFFER_SIZE
private static final java.lang.String[] FONT_FILE_EXTENSIONS
private static final double TIME_DAY
private static final double TIME_HOUR
private static final double TIME_MINUTE
private static final double TIME_MONTH
private static final double TIME_YEAR
private static final java.util.regex.Pattern htmlEntitiesPattern
private static final java.util.regex.Pattern imgPattern
private static java.text.NumberFormat mCurrentPercentageFormat
private static final java.util.regex.Pattern scriptPattern
private static final java.util.regex.Pattern stylePattern
private static final java.util.regex.Pattern tagPattern
    static void <clinit>()
    {
        java.util.Locale $r0;
        java.lang.String[] $r1;
        java.util.regex.Pattern $r2;

        $r0 = new java.util.Locale;

        specialinvoke $r0.<java.util.Locale: void <init>(java.lang.String)>("en_US");

        <com.ichi2.libanki.Utils: java.util.Locale ENGLISH_LOCALE> = $r0;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = ".ttf";

        $r1[1] = ".ttc";

        $r1[2] = ".otf";

        <com.ichi2.libanki.Utils: java.lang.String[] FONT_FILE_EXTENSIONS> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?s)<style.*?>.*?</style>");

        <com.ichi2.libanki.Utils: java.util.regex.Pattern stylePattern> = $r2;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?s)<script.*?>.*?</script>");

        <com.ichi2.libanki.Utils: java.util.regex.Pattern scriptPattern> = $r2;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("<.*?>");

        <com.ichi2.libanki.Utils: java.util.regex.Pattern tagPattern> = $r2;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("<img src=[\\\"\']?([^\\\"\'>]+)[\\\"\']? ?/?>");

        <com.ichi2.libanki.Utils: java.util.regex.Pattern imgPattern> = $r2;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("&#?\\w+;");

        <com.ichi2.libanki.Utils: java.util.regex.Pattern htmlEntitiesPattern> = $r2;

        return;
    }
    private void <init>()
    {
        com.ichi2.libanki.Utils r0;

        r0 := @this: com.ichi2.libanki.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static java.lang.String _incGuid(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r3;

        $r1 := @parameter0: java.lang.String;

        r0 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%&()*+,-./:;<=>?@[]^_`{|}~";

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>($r2);

        $i1 = $i0 + 1;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != $i2 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String _incGuid(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = $i0 + 1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    public static long[] arrayList2array(java.util.List)
    {
        java.util.List r0;
        long[] r1;
        int i0, i1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Long $r4;
        long $l2;

        r0 := @parameter0: java.util.List;

        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        r1 = newarray (long)[i0];

        i1 = 0;

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Long) $r3;

        $l2 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        r1[i1] = $l2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }
    public static java.lang.String base62(int, java.lang.String)
    {
        java.lang.String $r0, r2;
        int $i0, $i1, i2, $i3;
        java.lang.StringBuilder $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        r2 = "";

     label1:
        if $i0 == 0 goto label2;

        i2 = $i0 % $i1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $i3 = i2 + 1;

        r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i2, $i3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = $i0 / $i1;

        goto label1;

     label2:
        return r2;
    }
    public static java.lang.String base91(int)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String base62(int,java.lang.String)>($i0, "!#$%&()*+,-./:;<=>?@[]^_`{|}~");

        return $r0;
    }
    public static java.lang.String checksum(java.lang.String)
    {
        java.lang.String $r0, r2;
        java.math.BigInteger r1;
        byte[] r3, $r5;
        java.security.MessageDigest $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r6;
        java.security.NoSuchAlgorithmException r7;
        java.lang.Object[] $r8;
        java.lang.RuntimeException $r9;
        java.io.UnsupportedEncodingException r10;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label6;

        r3 = null;

     label1:
        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA1");

        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5);

     label2:
        r3 = $r5;

     label3:
        r1 = new java.math.BigInteger;

        specialinvoke r1.<java.math.BigInteger: void <init>(int,byte[])>(1, r3);

        $r0 = virtualinvoke r1.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= 40 goto label7;

        r2 = "0000000000000000000000000000000000000000";

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 - $i1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label4:
        r7 := @caughtexception;

        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r7, "Utils.checksum: No such algorithm.", $r8);

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r7);

        throw $r9;

     label5:
        r10 := @caughtexception;

        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r10, "Utils.checksum :: UnsupportedEncodingException", $r8);

        virtualinvoke r10.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label3;

     label6:
        return "";

     label7:
        return $r0;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
    }
    public static byte[] compress(byte[], int) throws java.io.IOException
    {
        byte[] $r0;
        int $i0;
        java.io.ByteArrayOutputStream r1;
        java.util.zip.Deflater r2;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        r2 = new java.util.zip.Deflater;

        specialinvoke r2.<java.util.zip.Deflater: void <init>(int,boolean)>($i0, 1);

        virtualinvoke r2.<java.util.zip.Deflater: void setInput(byte[])>($r0);

        virtualinvoke r2.<java.util.zip.Deflater: void finish()>();

        r1 = new java.io.ByteArrayOutputStream;

        $i0 = lengthof $r0;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        $r0 = newarray (byte)[65536];

     label1:
        $z0 = virtualinvoke r2.<java.util.zip.Deflater: boolean finished()>();

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke r2.<java.util.zip.Deflater: int deflate(byte[])>($r0);

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r0, 0, $i0);

        goto label1;

     label2:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void close()>();

        $r0 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;
    }
    public static java.lang.String convertStreamToString(java.io.InputStream)
    {
        java.io.InputStream $r0;
        java.lang.Exception r1;
        java.io.BufferedReader r2;
        java.lang.StringBuilder r3;
        java.io.InputStreamReader $r4;
        java.lang.String $r5;

        $r0 := @parameter0: java.io.InputStream;

        r2 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

     label01:
        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        specialinvoke r2.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r4, 4096);

     label02:
        r3 = new java.lang.StringBuilder;

     label03:
        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

     label04:
        $r5 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        if $r5 == null goto label09;

     label06:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label07:
        goto label04;

     label08:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        return "";

     label09:
        virtualinvoke r2.<java.io.BufferedReader: void close()>();

        $r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        return $r5;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Exception from label03 to label05 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Exception from label09 to label10 with label08;
    }
    public static void copyFile(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.File $r0, $r1;
        boolean $z0;
        java.nio.channels.FileChannel r2, r3, $r5, $r7;
        java.io.FileInputStream $r4;
        java.io.FileOutputStream $r6;
        long $l0;
        java.lang.Throwable $r8;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        virtualinvoke $r1.<java.io.File: boolean createNewFile()>();

     label01:
        r2 = null;

        r3 = null;

     label02:
        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        $r5 = virtualinvoke $r4.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

     label03:
        r2 = $r5;

     label04:
        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        $r7 = virtualinvoke $r6.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>();

     label05:
        r3 = $r7;

     label06:
        $l0 = virtualinvoke $r5.<java.nio.channels.FileChannel: long size()>();

        virtualinvoke $r7.<java.nio.channels.FileChannel: long transferFrom(java.nio.channels.ReadableByteChannel,long,long)>($r5, 0L, $l0);

     label07:
        if $r5 == null goto label08;

        virtualinvoke $r5.<java.nio.channels.FileChannel: void close()>();

     label08:
        if $r7 == null goto label12;

        virtualinvoke $r7.<java.nio.channels.FileChannel: void close()>();

        return;

     label09:
        $r8 := @caughtexception;

        if r2 == null goto label10;

        virtualinvoke r2.<java.nio.channels.FileChannel: void close()>();

     label10:
        if r3 == null goto label11;

        virtualinvoke r3.<java.nio.channels.FileChannel: void close()>();

     label11:
        throw $r8;

     label12:
        return;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
    }
    private static java.lang.String entsToTxt(java.lang.String)
    {
        java.lang.StringBuffer r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;
        android.text.Spanned $r4;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&nbsp;", " ");

        $r2 = <com.ichi2.libanki.Utils: java.util.regex.Pattern htmlEntitiesPattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        r0 = new java.lang.StringBuffer;

        specialinvoke r0.<java.lang.StringBuffer: void <init>()>();

     label1:
        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group()>();

        $r4 = staticinvoke <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r0, $r1);

        goto label1;

     label2:
        virtualinvoke $r3.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r0);

        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }
    public static long fieldChecksum(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Long $r1;
        long $l0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTMLMedia(java.lang.String)>($r0);

        $r0 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String checksum(java.lang.String)>($r0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 8);

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String,int)>($r0, 16);

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        return $l0;
    }
    public static java.lang.String fileChecksum(java.io.File)
    {
        java.io.File $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String fileChecksum(java.lang.String)>($r1);

        return $r1;
    }
    public static java.lang.String fileChecksum(java.lang.String)
    {
        java.lang.String $r0, $r7;
        java.math.BigInteger r1;
        byte[] r2, r4;
        java.io.FileInputStream r3;
        java.security.MessageDigest $r5;
        int $i0;
        java.lang.StringBuilder $r6;
        java.io.FileNotFoundException r8;
        java.lang.Object[] $r9;
        java.security.NoSuchAlgorithmException r10;
        java.io.IOException r11;

        $r0 := @parameter0: java.lang.String;

        r2 = newarray (byte)[1024];

        r4 = null;

        r3 = new java.io.FileInputStream;

     label01:
        specialinvoke r3.<java.io.FileInputStream: void <init>(java.lang.String)>($r0);

        $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA1");

     label02:
        $i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r2);

     label03:
        if $i0 <= 0 goto label05;

     label04:
        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[],int,int)>(r2, 0, $i0);

     label05:
        if $i0 != -1 goto label02;

     label06:
        virtualinvoke r3.<java.io.InputStream: void close()>();

        r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>();

     label07:
        r4 = r2;

     label08:
        r1 = new java.math.BigInteger;

        specialinvoke r1.<java.math.BigInteger: void <init>(int,byte[])>(1, r4);

        $r0 = virtualinvoke r1.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= 40 goto label12;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = "0000000000000000000000000000000000000000";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = 40 - $i0;

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label09:
        r8 := @caughtexception;

        $r9 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r8, "Utils.fileChecksum: File not found.", $r9);

        goto label08;

     label10:
        r10 := @caughtexception;

        $r9 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r10, "Utils.fileChecksum: No such algorithm.", $r9);

        goto label08;

     label11:
        r11 := @caughtexception;

        $r9 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r11, "Utils.fileChecksum: IO exception.", $r9);

        goto label08;

     label12:
        return $r0;

        catch java.io.FileNotFoundException from label01 to label03 with label09;
        catch java.io.FileNotFoundException from label04 to label05 with label09;
        catch java.io.FileNotFoundException from label06 to label07 with label09;
        catch java.security.NoSuchAlgorithmException from label01 to label03 with label10;
        catch java.security.NoSuchAlgorithmException from label04 to label05 with label10;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label10;
        catch java.io.IOException from label01 to label03 with label11;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label11;
    }
    public static java.lang.String fmtPercentage(java.lang.Double)
    {
        java.lang.Double $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Double;

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String fmtPercentage(java.lang.Double,int)>($r0, 0);

        return $r1;
    }
    public static java.lang.String fmtPercentage(java.lang.Double, int)
    {
        java.lang.Double $r0;
        int $i0;
        java.text.NumberFormat $r1;
        java.util.Locale $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.lang.Double;

        $i0 := @parameter1: int;

        $r1 = <com.ichi2.libanki.Utils: java.text.NumberFormat mCurrentPercentageFormat>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <com.ichi2.utils.LanguageUtil: java.util.Locale getLocale()>();

        $r1 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getPercentInstance(java.util.Locale)>($r2);

        <com.ichi2.libanki.Utils: java.text.NumberFormat mCurrentPercentageFormat> = $r1;

     label1:
        $r1 = <com.ichi2.libanki.Utils: java.text.NumberFormat mCurrentPercentageFormat>;

        $r3 = virtualinvoke $r1.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>($r0);

        return $r3;
    }
    public static java.sql.Date genToday(double)
    {
        double $d0;
        java.util.GregorianCalendar r0;
        java.text.SimpleDateFormat r1;
        java.util.TimeZone $r2;
        long $l0, $l1;
        java.util.Date $r3;
        java.lang.String $r4;
        java.sql.Date $r5;

        $d0 := @parameter0: double;

        r1 = new java.text.SimpleDateFormat;

        specialinvoke r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke r1.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        r0 = new java.util.GregorianCalendar;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        specialinvoke r0.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r2);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = (long) $d0;

        $l1 = $l1 * 1000L;

        $l0 = $l0 - $l1;

        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        $r3 = virtualinvoke r0.<java.util.Calendar: java.util.Date getTime()>();

        $r4 = virtualinvoke r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r3);

        $r5 = staticinvoke <java.sql.Date: java.sql.Date valueOf(java.lang.String)>($r4);

        return $r5;
    }
    public static java.lang.String getBaseUrl(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;
        boolean $z0;
        java.io.File $r1;
        android.net.Uri $r2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("null");

        if $z0 != 0 goto label1;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $r2 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r2.<android.net.Uri: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label1:
        return "";
    }
    public static java.util.List getCustomFonts(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String r1, r3, $r11;
        java.io.IOException r2;
        java.util.ArrayList r4;
        java.io.File r5;
        java.lang.StringBuilder $r6;
        int i0, i1, $i2, $i3;
        java.io.File[] r7;
        boolean $z0;
        java.lang.String[] r8, $r10;
        android.content.res.AssetManager $r9;
        com.ichi2.anki.AnkiFont $r12;
        java.lang.Object[] $r13;

        $r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <com.ichi2.anki.CollectionHelper: java.lang.String getCurrentAnkiDroidDirectory(android.content.Context)>($r0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/fonts/");

        r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = new java.io.File;

        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>(r1);

        i0 = 0;

        r7 = null;

        $z0 = virtualinvoke r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label01;

        r7 = virtualinvoke r5.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof r7;

        r7 = virtualinvoke r5.<java.io.File: java.io.File[] listFiles()>();

     label01:
        r8 = null;

     label02:
        $r9 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r10 = virtualinvoke $r9.<android.content.res.AssetManager: java.lang.String[] list(java.lang.String)>("fonts");

     label03:
        r8 = $r10;

     label04:
        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label05:
        if i1 >= i0 goto label10;

        r5 = r7[i1];

        $r11 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r10 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String[] splitFilename(java.lang.String)>($r11);

        r1 = $r10[1];

        $r10 = <com.ichi2.libanki.Utils: java.lang.String[] FONT_FILE_EXTENSIONS>;

        $i2 = lengthof $r10;

        $i3 = 0;

     label06:
        if $i3 >= $i2 goto label07;

        r3 = $r10[$i3];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z0 == 0 goto label09;

        $r12 = staticinvoke <com.ichi2.anki.AnkiFont: com.ichi2.anki.AnkiFont createAnkiFont(android.content.Context,java.lang.String,boolean)>($r0, $r11, 0);

        if $r12 == null goto label07;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r12);

     label07:
        i1 = i1 + 1;

        goto label05;

     label08:
        r2 := @caughtexception;

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Error on retrieving ankidroid fonts", $r13);

        goto label04;

     label09:
        $i3 = $i3 + 1;

        goto label06;

     label10:
        if r8 == null goto label13;

        i0 = lengthof r8;

        i1 = 0;

     label11:
        if i1 >= i0 goto label13;

        r1 = r8[i1];

        $r12 = staticinvoke <com.ichi2.anki.AnkiFont: com.ichi2.anki.AnkiFont createAnkiFont(android.content.Context,java.lang.String,boolean)>($r0, r1, 1);

        if $r12 == null goto label12;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r12);

     label12:
        i1 = i1 + 1;

        goto label11;

     label13:
        return r4;

        catch java.io.IOException from label02 to label03 with label08;
    }
    public static java.util.List getImportableDecks(android.content.Context)
    {
        android.content.Context $r0;
        java.util.ArrayList r1;
        java.io.File r2;
        java.lang.String $r3;
        int i0;
        java.io.File[] r4, $r6;
        boolean $z0;
        com.ichi2.libanki.Utils$1 $r5;
        java.util.List $r7;

        $r0 := @parameter0: android.content.Context;

        $r3 = staticinvoke <com.ichi2.anki.CollectionHelper: java.lang.String getCurrentAnkiDroidDirectory(android.content.Context)>($r0);

        r2 = new java.io.File;

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r3);

        i0 = 0;

        r4 = null;

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        $r5 = new com.ichi2.libanki.Utils$1;

        specialinvoke $r5.<com.ichi2.libanki.Utils$1: void <init>()>();

        $r6 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r5);

        r4 = $r6;

        i0 = lengthof $r6;

     label1:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4);

        $r7 = interfaceinvoke $r7.<java.util.List: java.util.List subList(int,int)>(0, i0);

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        return r1;
    }
    public static java.lang.String guid64()
    {
        int $i0;
        java.util.Random $r0;
        double $d0;
        java.lang.String $r1;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, 61.0);

        $d0 = $d0 - 1.0;

        $i0 = (int) $d0;

        $i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>($i0);

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String base91(int)>($i0);

        return $r1;
    }
    public static java.lang.String ids2str(java.util.List)
    {
        java.util.List r0;
        java.lang.StringBuilder r1;
        boolean z0, $z1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @parameter0: java.util.List;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(int)>(512);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        z0 = 0;

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        if z0 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        goto label1;

     label3:
        z0 = 1;

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
    public static java.lang.String ids2str(org.json.JSONArray)
    {
        org.json.JSONArray $r0;
        org.json.JSONException r1;
        java.lang.StringBuilder r2, $r4;
        int $i0, i1, $i2;
        java.lang.Object $r3;
        java.lang.Object[] $r5;
        java.lang.String $r6;

        $r0 := @parameter0: org.json.JSONArray;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>(512);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        if $r0 == null goto label7;

        $i0 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label7;

        $i2 = $i0 + -1;

        if i1 != $i2 goto label4;

     label2:
        $r3 = virtualinvoke $r0.<org.json.JSONArray: java.lang.Object get(int)>(i1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r3 = virtualinvoke $r0.<org.json.JSONArray: java.lang.Object get(int)>(i1);

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label5:
        goto label3;

     label6:
        r1 := @caughtexception;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "ids2str :: JSONException", $r5);

        goto label3;

     label7:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

        catch org.json.JSONException from label2 to label3 with label6;
        catch org.json.JSONException from label4 to label5 with label6;
    }
    public static java.lang.String ids2str(int[])
    {
        int[] $r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @parameter0: int[];

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        if $r0 == null goto label1;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r0);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public static java.lang.String ids2str(long[])
    {
        long[] $r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @parameter0: long[];

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        if $r0 == null goto label1;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(long[])>($r0);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public static java.lang.String ids2str(java.lang.Long[])
    {
        java.lang.Long[] $r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @parameter0: java.lang.Long[];

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        if $r0 == null goto label1;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r0);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public static java.lang.String incGuid(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuffer $r1, $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer reverse()>();

        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r0 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String _incGuid(java.lang.String)>($r0);

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer reverse()>();

        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }
    public static long intNow()
    {
        long $l0;

        $l0 = staticinvoke <com.ichi2.libanki.Utils: long intNow(int)>(1);

        return $l0;
    }
    public static long intNow(int)
    {
        int $i0;
        double $d0, $d1;
        long $l1;

        $i0 := @parameter0: int;

        $d1 = staticinvoke <com.ichi2.libanki.Utils: double now()>();

        $d0 = (double) $i0;

        $d0 = $d1 * $d0;

        $l1 = (long) $d0;

        return $l1;
    }
    public static boolean isIntentAvailable(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.ichi2.libanki.Utils: boolean isIntentAvailable(android.content.Context,java.lang.String,android.content.ComponentName)>($r0, $r1, null);

        return $z0;
    }
    public static boolean isIntentAvailable(android.content.Context, java.lang.String, android.content.ComponentName)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        android.content.ComponentName $r2;
        android.content.Intent r3;
        android.content.pm.PackageManager $r4;
        java.util.List $r5;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.content.ComponentName;

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r3 = new android.content.Intent;

        specialinvoke r3.<android.content.Intent: void <init>(java.lang.String)>($r1);

        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r2);

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>(r3, 65536);

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static java.lang.String joinFields(java.lang.String[])
    {
        java.lang.String[] $r0;
        java.lang.StringBuilder r1, $r3;
        int i0, $i1;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.String[];

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(int)>(128);

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        $i1 = $i1 + -1;

        if i0 >= $i1 goto label2;

        $r2 = $r0[i0];

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u001f");

        i0 = i0 + 1;

        goto label1;

     label2:
        i0 = lengthof $r0;

        if i0 <= 0 goto label3;

        i0 = lengthof $r0;

        i0 = i0 + -1;

        $r2 = $r0[i0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label3:
        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public static java.lang.Object[] jsonArray2Objects(org.json.JSONArray)
    {
        org.json.JSONArray $r0;
        org.json.JSONException r1;
        java.lang.Object[] r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.RuntimeException $r4;

        $r0 := @parameter0: org.json.JSONArray;

        $i0 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        r2 = newarray (java.lang.Object)[$i0];

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label5;

     label2:
        $r3 = virtualinvoke $r0.<org.json.JSONArray: java.lang.Object get(int)>($i0);

     label3:
        r2[$i0] = $r3;

        $i0 = $i0 + 1;

        goto label1;

     label4:
        r1 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r4;

     label5:
        return r2;

        catch org.json.JSONException from label2 to label3 with label4;
    }
    public static long[] jsonArrayToLongArray(org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONArray $r0;
        long[] r1;
        int $i0, $i1;
        long $l2;

        $r0 := @parameter0: org.json.JSONArray;

        $i0 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        r1 = newarray (long)[$i0];

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label2;

        $l2 = virtualinvoke $r0.<org.json.JSONArray: long getLong(int)>($i0);

        r1[$i0] = $l2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    public static java.lang.String jsonToString(org.json.JSONArray)
    {
        org.json.JSONArray $r0;
        java.lang.String $r1;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 = virtualinvoke $r0.<org.json.JSONArray: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\/", "/");

        return $r1;
    }
    public static java.lang.String jsonToString(org.json.JSONObject)
    {
        org.json.JSONObject $r0;
        java.lang.String $r1;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\/", "/");

        return $r1;
    }
    public static java.lang.Long[] list2ObjectArray(java.util.List)
    {
        java.util.List r0;
        int $i0;
        java.lang.Long[] $r1;
        java.lang.Object[] $r2;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $r1 = newarray (java.lang.Long)[$i0];

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r1 = (java.lang.Long[]) $r2;

        return $r1;
    }
    public static long maxID(com.ichi2.libanki.DB)
    {
        com.ichi2.libanki.DB $r0;
        long $l0, $l1;

        $r0 := @parameter0: com.ichi2.libanki.DB;

        $l0 = staticinvoke <com.ichi2.libanki.Utils: long intNow(int)>(1000);

        $l1 = virtualinvoke $r0.<com.ichi2.libanki.DB: long queryLongScalar(java.lang.String)>("SELECT MAX(id) FROM cards");

        $l0 = staticinvoke <java.lang.Math: long max(long,long)>($l0, $l1);

        $l1 = virtualinvoke $r0.<com.ichi2.libanki.DB: long queryLongScalar(java.lang.String)>("SELECT MAX(id) FROM notes");

        $l0 = staticinvoke <java.lang.Math: long max(long,long)>($l0, $l1);

        $l0 = 1L + $l0;

        return $l0;
    }
    public static java.lang.String nfcNormalized(java.lang.String)
    {
        java.lang.String $r0;
        java.text.Normalizer$Form $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = <java.text.Normalizer$Form: java.text.Normalizer$Form NFC>;

        $z0 = staticinvoke <java.text.Normalizer: boolean isNormalized(java.lang.CharSequence,java.text.Normalizer$Form)>($r0, $r1);

        if $z0 != 0 goto label1;

        $r1 = <java.text.Normalizer$Form: java.text.Normalizer$Form NFC>;

        $r0 = staticinvoke <java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)>($r0, $r1);

     label1:
        return $r0;
    }
    public static double now()
    {
        long $l0;
        double $d0;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $d0 = (double) $l0;

        $d0 = $d0 / 1000.0;

        return $d0;
    }
    public static java.lang.String platDesc()
    {
        java.lang.String $r0, $r1;
        java.util.Locale $r2;
        java.lang.Object[] $r3;

        $r0 = <android.os.Build: java.lang.String MODEL>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(44, 32);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(58, 32);

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[2];

        $r0 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r3[0] = $r0;

        $r3[1] = $r1;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "android:%s:%s", $r3);

        return $r0;
    }
    public static void printDate(java.lang.String, double)
    {
        java.lang.String $r0;
        double $d0;
        java.util.GregorianCalendar r1;
        java.text.SimpleDateFormat r2;
        java.util.TimeZone $r3;
        long $l0;
        java.lang.Object[] $r4;
        java.util.Date $r5;

        $r0 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        r2 = new java.text.SimpleDateFormat;

        specialinvoke r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH-mm-ss");

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke r2.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r3);

        r1 = new java.util.GregorianCalendar;

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        specialinvoke r1.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r3);

        $l0 = (long) $d0;

        $l0 = $l0 * 1000L;

        virtualinvoke r1.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r0;

        $r5 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>();

        $r0 = virtualinvoke $r5.<java.util.Date: java.lang.String toGMTString()>();

        $r4[1] = $r0;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Value of %s: %s", $r4);

        return;
    }
    public static float randomFloatInRange(float, float)
    {
        float $f0, $f1, $f2;
        java.util.Random r0;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        r0 = new java.util.Random;

        specialinvoke r0.<java.util.Random: void <init>()>();

        $f2 = virtualinvoke r0.<java.util.Random: float nextFloat()>();

        $f1 = $f1 - $f0;

        $f1 = $f2 * $f1;

        $f0 = $f1 + $f0;

        return $f0;
    }
    public static java.lang.String replaceLineBreak(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<br(\\s*\\/*)>", "\n");

        return $r0;
    }
    public static java.lang.String roundedTimeSpan(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0, $i1;
        double $d0;
        byte $b2;
        android.content.res.Resources $r1;
        java.lang.Object[] $r2;
        java.lang.Double $r3;
        java.lang.String $r4;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $d0 = (double) $i1;

        $b2 = $d0 cmpg 86400.0;

        if $b2 >= 0 goto label1;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = newarray (java.lang.Object)[1];

        $d0 = (double) $i0;

        $d0 = $d0 / 3600.0;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231336, $r2);

        return $r4;

     label1:
        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $d0 = (double) $i1;

        $b2 = $d0 cmpg 2629744.1666666665;

        if $b2 >= 0 goto label2;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = newarray (java.lang.Object)[1];

        $d0 = (double) $i0;

        $d0 = $d0 / 86400.0;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231331, $r2);

        return $r4;

     label2:
        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $d0 = (double) $i1;

        $b2 = $d0 cmpg 3.155693E7;

        if $b2 >= 0 goto label3;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = newarray (java.lang.Object)[1];

        $d0 = (double) $i0;

        $d0 = $d0 / 2629744.1666666665;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231338, $r2);

        return $r4;

     label3:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = newarray (java.lang.Object)[1];

        $d0 = (double) $i0;

        $d0 = $d0 / 3.155693E7;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231346, $r2);

        return $r4;
    }
    public static java.lang.String[] splitFields(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.String[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\x1f", -1);

        return $r1;
    }
    public static java.lang.String[] splitFilename(java.lang.String)
    {
        java.lang.String $r0, r1, r2;
        int $i0;
        java.lang.String[] $r3;

        $r0 := @parameter0: java.lang.String;

        r1 = $r0;

        r2 = "";

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(46);

        if $i0 == -1 goto label1;

        r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

     label1:
        $r3 = newarray (java.lang.String)[2];

        $r3[0] = r1;

        $r3[1] = r2;

        return $r3;
    }
    public static java.lang.String stripHTML(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.ichi2.libanki.Utils: java.util.regex.Pattern stylePattern>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r1 = <com.ichi2.libanki.Utils: java.util.regex.Pattern scriptPattern>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r1 = <com.ichi2.libanki.Utils: java.util.regex.Pattern tagPattern>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r0 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String entsToTxt(java.lang.String)>($r0);

        return $r0;
    }
    public static java.lang.String stripHTMLMedia(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.ichi2.libanki.Utils: java.util.regex.Pattern imgPattern>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(" $1 ");

        $r0 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTML(java.lang.String)>($r0);

        return $r0;
    }
    public static java.lang.String timeQuantity(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0, $i1;
        android.content.res.Resources $r1;
        double $d0;
        byte $b2;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        java.lang.String $r4;
        long $l3;
        java.lang.Double $r5;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $d0 = (double) $i1;

        $b2 = $d0 cmpg 60.0;

        if $b2 >= 0 goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231460, $r2);

        return $r4;

     label1:
        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $d0 = (double) $i1;

        $b2 = $d0 cmpg 3600.0;

        if $b2 >= 0 goto label2;

        $r2 = newarray (java.lang.Object)[1];

        $d0 = (double) $i0;

        $d0 = $d0 / 60.0;

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $i0 = (int) $l3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231458, $r2);

        return $r4;

     label2:
        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $d0 = (double) $i1;

        $b2 = $d0 cmpg 86400.0;

        if $b2 >= 0 goto label3;

        $r2 = newarray (java.lang.Object)[1];

        $d0 = (double) $i0;

        $d0 = $d0 / 3600.0;

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $i0 = (int) $l3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231457, $r2);

        return $r4;

     label3:
        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $d0 = (double) $i1;

        $b2 = $d0 cmpg 2629744.1666666665;

        if $b2 >= 0 goto label4;

        $r2 = newarray (java.lang.Object)[1];

        $d0 = (double) $i0;

        $d0 = $d0 / 86400.0;

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $i0 = (int) $l3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231456, $r2);

        return $r4;

     label4:
        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $d0 = (double) $i1;

        $b2 = $d0 cmpg 3.155693E7;

        if $b2 >= 0 goto label5;

        $r2 = newarray (java.lang.Object)[1];

        $d0 = (double) $i0;

        $d0 = $d0 / 2629744.1666666665;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2[0] = $r5;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231459, $r2);

        return $r4;

     label5:
        $r2 = newarray (java.lang.Object)[1];

        $d0 = (double) $i0;

        $d0 = $d0 / 3.155693E7;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2[0] = $r5;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231461, $r2);

        return $r4;
    }
    public static java.lang.String timeSpan(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0, $i1;
        android.content.res.Resources $r1;
        double $d0;
        byte $b2;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        java.lang.String $r4;
        long $l3;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $d0 = (double) $i1;

        $b2 = $d0 cmpg 60.0;

        if $b2 >= 0 goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131361809, $i0, $r2);

        return $r4;

     label1:
        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $d0 = (double) $i1;

        $b2 = $d0 cmpg 3600.0;

        if $b2 >= 0 goto label2;

        $d0 = (double) $i0;

        $d0 = $d0 / 60.0;

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $i0 = (int) $l3;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131361807, $i0, $r2);

        return $r4;

     label2:
        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $d0 = (double) $i1;

        $b2 = $d0 cmpg 86400.0;

        if $b2 >= 0 goto label3;

        $d0 = (double) $i0;

        $d0 = $d0 / 3600.0;

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $i0 = (int) $l3;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131361806, $i0, $r2);

        return $r4;

     label3:
        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $d0 = (double) $i1;

        $b2 = $d0 cmpg 2629744.1666666665;

        if $b2 >= 0 goto label4;

        $d0 = (double) $i0;

        $d0 = $d0 / 86400.0;

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $i0 = (int) $l3;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131361805, $i0, $r2);

        return $r4;

     label4:
        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $d0 = (double) $i1;

        $b2 = $d0 cmpg 3.155693E7;

        if $b2 >= 0 goto label5;

        $d0 = (double) $i0;

        $d0 = $d0 / 2629744.1666666665;

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $i0 = (int) $l3;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131361808, $i0, $r2);

        return $r4;

     label5:
        $d0 = (double) $i0;

        $d0 = $d0 / 3.155693E7;

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $i0 = (int) $l3;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131361810, $i0, $r2);

        return $r4;
    }
    public static long timestampID(com.ichi2.libanki.DB, java.lang.String)
    {
        com.ichi2.libanki.DB $r0;
        java.lang.String $r1, $r3;
        long $l0;
        java.lang.StringBuilder $r2;
        int $i1;

        $r0 := @parameter0: com.ichi2.libanki.DB;

        $r1 := @parameter1: java.lang.String;

        $l0 = staticinvoke <com.ichi2.libanki.Utils: long intNow(int)>(1000);

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT id FROM ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE id = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r0.<com.ichi2.libanki.DB: int queryScalar(java.lang.String)>($r3);

        if $i1 == 0 goto label2;

        $l0 = $l0 + 1L;

        goto label1;

     label2:
        return $l0;
    }
    public static long[] toPrimitive(java.util.Collection)
    {
        java.util.Collection r0;
        int i0, i1;
        long[] r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Long r4;
        long $l2;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        r1 = newarray (long)[i0];

        i1 = 0;

        $r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Long) $r3;

        $l2 = virtualinvoke r4.<java.lang.Long: long longValue()>();

        r1[i1] = $l2;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r1;
    }
    public static long[] toPrimitive(java.lang.Long[])
    {
        java.lang.Long[] $r0;
        long $l0;
        int $i1, $i2;
        long[] r1;
        java.lang.Long $r2;

        $r0 := @parameter0: java.lang.Long[];

        if $r0 != null goto label1;

        return null;

     label1:
        $i1 = lengthof $r0;

        r1 = newarray (long)[$i1];

        $i1 = 0;

     label2:
        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label3;

        $r2 = $r0[$i1];

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        r1[$i1] = $l0;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return r1;
    }
    public static java.lang.String unescape(java.lang.String)
    {
        java.lang.String $r0;
        android.text.Spanned $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r0;
    }
    public static void unzipFiles(java.util.zip.ZipFile, java.lang.String, java.lang.String[], java.util.Map) throws java.io.IOException
    {
        java.util.zip.ZipFile $r0;
        java.lang.String $r1, r13;
        java.lang.String[] $r2;
        byte[] r3;
        java.io.File r4, r5, $r22;
        java.util.Map r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r19;
        java.io.BufferedInputStream r8, r11, $r23;
        java.io.BufferedOutputStream r9, r10, $r25;
        int $i0, $i1, $i2;
        java.util.zip.ZipEntry $r12;
        java.lang.Object $r14;
        java.lang.Object[] $r15;
        java.io.InputStream $r16;
        java.lang.Throwable $r18;
        java.io.IOException $r20;
        java.util.HashMap $r21;
        java.io.FileOutputStream $r24;

        $r0 := @parameter0: java.util.zip.ZipFile;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

        r6 := @parameter3: java.util.Map;

        r3 = newarray (byte)[2048];

        r4 = new java.io.File;

        r5 = r4;

        specialinvoke r4.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke r4.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        $z0 = virtualinvoke r4.<java.io.File: boolean mkdirs()>();

        if $z0 != 0 goto label01;

        $r20 = new java.io.IOException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create target directory: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>($r1);

        throw $r20;

     label01:
        if r6 != null goto label02;

        $r21 = new java.util.HashMap;

        r6 = $r21;

        specialinvoke $r21.<java.util.HashMap: void <init>()>();

     label02:
        r8 = null;

        r9 = null;

     label03:
        $i0 = lengthof $r2;

     label04:
        $i1 = 0;

        r10 = null;

        r11 = null;

     label05:
        if $i1 >= $i0 goto label33;

     label06:
        $r1 = $r2[$i1];

        $r12 = virtualinvoke $r0.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>($r1);

     label07:
        if $r12 == null goto label37;

     label08:
        $r1 = virtualinvoke $r12.<java.util.zip.ZipEntry: java.lang.String getName()>();

     label09:
        r13 = $r1;

     label10:
        $z0 = interfaceinvoke r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

     label11:
        if $z0 == 0 goto label13;

     label12:
        $r14 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r13 = (java.lang.String) $r14;

     label13:
        $r22 = new java.io.File;

     label14:
        specialinvoke $r22.<java.io.File: void <init>(java.io.File,java.lang.String)>(r5, r13);

        $z0 = virtualinvoke $r12.<java.util.zip.ZipEntry: boolean isDirectory()>();

     label15:
        if $z0 != 0 goto label37;

     label16:
        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = r13;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("uncompress %s", $r15);

        $r23 = new java.io.BufferedInputStream;

     label17:
        r8 = $r23;

     label18:
        $r16 = virtualinvoke $r0.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>($r12);

        specialinvoke $r23.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r16);

     label19:
        $r25 = new java.io.BufferedOutputStream;

     label20:
        r9 = $r25;

     label21:
        $r24 = new java.io.FileOutputStream;

     label22:
        specialinvoke $r24.<java.io.FileOutputStream: void <init>(java.io.File)>($r22);

        specialinvoke $r25.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r24, 2048);

     label23:
        $i2 = virtualinvoke $r23.<java.io.BufferedInputStream: int read(byte[],int,int)>(r3, 0, 2048);

     label24:
        if $i2 == -1 goto label31;

     label25:
        virtualinvoke $r25.<java.io.BufferedOutputStream: void write(byte[],int,int)>(r3, 0, $i2);

     label26:
        goto label23;

     label27:
        $r18 := @caughtexception;

     label28:
        if r9 == null goto label29;

        virtualinvoke r9.<java.io.BufferedOutputStream: void close()>();

     label29:
        if r8 == null goto label30;

        virtualinvoke r8.<java.io.BufferedInputStream: void close()>();

     label30:
        throw $r18;

     label31:
        virtualinvoke $r25.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke $r25.<java.io.BufferedOutputStream: void close()>();

        virtualinvoke $r23.<java.io.BufferedInputStream: void close()>();

     label32:
        $i1 = $i1 + 1;

        r10 = r9;

        r11 = r8;

        goto label05;

     label33:
        if r10 == null goto label34;

        virtualinvoke r10.<java.io.BufferedOutputStream: void close()>();

     label34:
        if r11 == null goto label38;

        virtualinvoke r11.<java.io.BufferedInputStream: void close()>();

        return;

     label35:
        $r18 := @caughtexception;

        r9 = r10;

        r8 = r11;

        goto label28;

     label36:
        $r18 := @caughtexception;

        r9 = r10;

        goto label28;

     label37:
        r9 = r10;

        r8 = r11;

        goto label32;

     label38:
        return;

        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label06 to label07 with label35;
        catch java.lang.Throwable from label08 to label09 with label35;
        catch java.lang.Throwable from label10 to label11 with label35;
        catch java.lang.Throwable from label12 to label14 with label35;
        catch java.lang.Throwable from label14 to label15 with label35;
        catch java.lang.Throwable from label16 to label17 with label35;
        catch java.lang.Throwable from label18 to label19 with label35;
        catch java.lang.Throwable from label19 to label20 with label36;
        catch java.lang.Throwable from label21 to label22 with label36;
        catch java.lang.Throwable from label22 to label23 with label36;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label31 to label32 with label27;
    }
    public static double utcOffset()
    {
        java.util.Calendar $r0;
        int $i0, $i1;
        double $d0;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(15);

        $i1 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(16);

        $i0 = $i0 + $i1;

        $i0 = $i0 / 1000;

        $i0 = 14400 - $i0;

        $d0 = (double) $i0;

        return $d0;
    }
    public static void writeToFile(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.lang.String $r1;
        byte[] r2;
        long l0, l1, $l2, $l4, l5;
        java.io.BufferedOutputStream r3;
        java.lang.Object[] $r4;
        java.io.File $r5;
        java.io.FileOutputStream $r6;
        int $i3;
        byte $b6;
        java.lang.Long $r7;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Creating new file... = %s", $r4);

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke $r5.<java.io.File: boolean createNewFile()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r3 = new java.io.BufferedOutputStream;

        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.lang.String)>($r1);

        specialinvoke r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r6);

        r2 = newarray (byte)[32768];

        l1 = 0L;

        if $r0 != null goto label1;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("writeToFile :: source is null!", $r4);

     label1:
        $i3 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r2);

        if $i3 < 0 goto label2;

        virtualinvoke r3.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i3);

        l0 = (long) $i3;

        l1 = l1 + l0;

        goto label1;

     label2:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Finished writeToFile!", $r4);

        l0 = $l4 - $l2;

        l0 = l0 / 1000L;

        l1 = l1 / 1024L;

        l5 = 0L;

        $b6 = $l4 cmp $l2;

        if $b6 == 0 goto label3;

        l5 = 1000L * l1;

        $l2 = $l4 - $l2;

        l5 = l5 / $l2;

     label3:
        $r4 = newarray (java.lang.Object)[3];

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r4[0] = $r7;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r4[1] = $r7;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        $r4[2] = $r7;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Utils.writeToFile: Size: %d Kb, Duration: %d s, Speed: %d Kb/s", $r4);

        virtualinvoke r3.<java.io.OutputStream: void close()>();

        return;
    }
