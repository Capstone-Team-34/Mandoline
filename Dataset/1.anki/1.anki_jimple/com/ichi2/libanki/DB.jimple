com.ichi2.libanki.DB extends java.lang.Object
private static final java.lang.String[] MOD_SQLS
private io.requery.android.database.sqlite.SQLiteDatabase mDatabase
private boolean mMod
    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "insert";

        $r0[1] = "update";

        $r0[2] = "delete";

        <com.ichi2.libanki.DB: java.lang.String[] MOD_SQLS> = $r0;

        return;
    }
    public void <init>(java.lang.String)
    {
        com.ichi2.libanki.DB r0;
        java.lang.String $r1;
        boolean $z0;
        com.ichi2.libanki.DB$MyDbErrorHandler $r2;
        io.requery.android.database.sqlite.SQLiteDatabase $r3;
        com.ichi2.compat.Compat $r4;

        r0 := @this: com.ichi2.libanki.DB;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ichi2.libanki.DB: boolean mMod> = 0;

        $z0 = staticinvoke <com.ichi2.compat.CompatHelper: boolean isHoneycomb()>();

        if $z0 == 0 goto label3;

        $r2 = new com.ichi2.libanki.DB$MyDbErrorHandler;

        specialinvoke $r2.<com.ichi2.libanki.DB$MyDbErrorHandler: void <init>(com.ichi2.libanki.DB)>(r0);

        $r3 = staticinvoke <io.requery.android.database.sqlite.SQLiteDatabase: io.requery.android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,io.requery.android.database.sqlite.SQLiteDatabase$CursorFactory,int,io.requery.android.database.DatabaseErrorHandler)>($r1, null, 268435472, $r2);

        r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase> = $r3;

     label1:
        $r3 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r3 == null goto label2;

        $r4 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        $r3 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        interfaceinvoke $r4.<com.ichi2.compat.Compat: void disableDatabaseWriteAheadLogging(io.requery.android.database.sqlite.SQLiteDatabase)>($r3);

        $r3 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r3.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>("PRAGMA synchronous = 2", null);

     label2:
        r0.<com.ichi2.libanki.DB: boolean mMod> = 0;

        return;

     label3:
        $r3 = staticinvoke <io.requery.android.database.sqlite.SQLiteDatabase: io.requery.android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,io.requery.android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, null, 268435472);

        r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase> = $r3;

        goto label1;
    }
    private static java.lang.String getCursorMethodName(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("String");

        if $z0 == 0 goto label1;

        return "getString";

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Long");

        if $z0 == 0 goto label2;

        return "getLong";

     label2:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Integer");

        if $z0 == 0 goto label3;

        return "getInt";

     label3:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Float");

        if $z0 == 0 goto label4;

        return "getFloat";

     label4:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Double");

        if $z0 == 0 goto label5;

        return "getDouble";

     label5:
        return null;
    }
    public void close()
    {
        com.ichi2.libanki.DB r0;
        boolean $z0, $z1;
        io.requery.android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Object[] $r2;
        java.lang.String $r3;
        java.lang.Boolean $r4;

        r0 := @this: com.ichi2.libanki.DB;

        $z0 = 0;

        $r1 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: void close()>();

        $r2 = newarray (java.lang.Object)[2];

        $r1 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        $r3 = virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        $r2[0] = $r3;

        $r1 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        $z1 = virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z1 != 0 goto label1;

        $z0 = 1;

     label1:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2[1] = $r4;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Database %s closed = %s", $r2);

        return;
    }
    public void commit()
    {
        com.ichi2.libanki.DB r0;

        r0 := @this: com.ichi2.libanki.DB;

        return;
    }
    public void execute(java.lang.String)
    {
        com.ichi2.libanki.DB r0;
        java.lang.String $r1;

        r0 := @this: com.ichi2.libanki.DB;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ichi2.libanki.DB: void execute(java.lang.String,java.lang.Object[])>($r1, null);

        return;
    }
    public void execute(java.lang.String, java.lang.Object[])
    {
        com.ichi2.libanki.DB r0;
        java.lang.String $r1, r3, $r5;
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.util.Locale $r4;
        java.lang.String[] $r6;
        boolean $z0;
        io.requery.android.database.sqlite.SQLiteDatabase $r7;

        r0 := @this: com.ichi2.libanki.DB;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        r3 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $r6 = <com.ichi2.libanki.DB: java.lang.String[] MOD_SQLS>;

        $i0 = lengthof $r6;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r3 = $r6[$i1];

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>(r3);

        if $z0 == 0 goto label3;

        r0.<com.ichi2.libanki.DB: boolean mMod> = 1;

     label2:
        if $r2 != null goto label4;

        $r7 = virtualinvoke r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        virtualinvoke $r7.<io.requery.android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r1);

        return;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r7 = virtualinvoke r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        virtualinvoke $r7.<io.requery.android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>($r1, $r2);

        return;
    }
    public void executeMany(java.lang.String, java.util.List)
    {
        com.ichi2.libanki.DB r0;
        java.lang.String $r1;
        java.util.List r2;
        io.requery.android.database.sqlite.SQLiteDatabase $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Object[] r6;
        java.lang.Throwable $r7;

        r0 := @this: com.ichi2.libanki.DB;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r0.<com.ichi2.libanki.DB: boolean mMod> = 1;

        $r3 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r3.<io.requery.android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label1:
        $r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 == 0 goto label7;

     label4:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.Object[]) $r5;

        $r3 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r3.<io.requery.android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>($r1, r6);

     label5:
        goto label2;

     label6:
        $r7 := @caughtexception;

        $r3 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r3.<io.requery.android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r7;

     label7:
        $r3 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r3.<io.requery.android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label8:
        $r3 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r3.<io.requery.android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
    public void executeScript(java.lang.String)
    {
        com.ichi2.libanki.DB r0;
        java.lang.String $r1;
        int $i0, $i1;
        io.requery.android.database.sqlite.SQLiteDatabase $r2;
        java.lang.String[] $r3;

        r0 := @this: com.ichi2.libanki.DB;

        $r1 := @parameter0: java.lang.String;

        r0.<com.ichi2.libanki.DB: boolean mMod> = 1;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = $r3[$i1];

        $r2 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r2.<io.requery.android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    public io.requery.android.database.sqlite.SQLiteDatabase getDatabase()
    {
        com.ichi2.libanki.DB r0;
        io.requery.android.database.sqlite.SQLiteDatabase r1;

        r0 := @this: com.ichi2.libanki.DB;

        r1 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        return r1;
    }
    public boolean getMod()
    {
        com.ichi2.libanki.DB r0;
        boolean z0;

        r0 := @this: com.ichi2.libanki.DB;

        z0 = r0.<com.ichi2.libanki.DB: boolean mMod>;

        return z0;
    }
    public java.lang.String getPath()
    {
        com.ichi2.libanki.DB r0;
        java.lang.String $r1;
        io.requery.android.database.sqlite.SQLiteDatabase $r2;

        r0 := @this: com.ichi2.libanki.DB;

        $r2 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        $r1 = virtualinvoke $r2.<io.requery.android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        return $r1;
    }
    public long insert(java.lang.String, java.lang.String, android.content.ContentValues)
    {
        com.ichi2.libanki.DB r0;
        java.lang.String $r1, $r2;
        android.content.ContentValues $r3;
        io.requery.android.database.sqlite.SQLiteDatabase $r4;
        long $l0;

        r0 := @this: com.ichi2.libanki.DB;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.ContentValues;

        r0.<com.ichi2.libanki.DB: boolean mMod> = 1;

        $r4 = virtualinvoke r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $l0 = virtualinvoke $r4.<io.requery.android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>($r1, $r2, $r3);

        return $l0;
    }
    public java.util.ArrayList queryColumn(java.lang.Class, java.lang.String, int)
    {
        com.ichi2.libanki.DB r0;
        java.lang.Class r1, $r9, $r11;
        java.lang.String $r2, $r8;
        int $i0, i1;
        java.util.ArrayList r3;
        java.lang.reflect.InvocationTargetException r4, r16;
        android.database.Cursor r5, $r7;
        io.requery.android.database.sqlite.SQLiteDatabase $r6;
        boolean $z0;
        java.lang.Class[] $r10;
        java.lang.reflect.Method $r12;
        java.lang.Object[] $r13;
        java.lang.Integer $r14;
        java.lang.Object $r15;
        com.ichi2.anki.AnkiDroidApp $r17;
        android.content.Context $r18;
        android.widget.Toast $r19;
        java.lang.NoSuchMethodException $r20;
        java.lang.Exception r21;
        java.lang.RuntimeException $r22;
        java.lang.Throwable $r23;
        java.lang.StringBuilder r24, $r25;
        java.lang.IllegalAccessException $r26;
        java.lang.IllegalArgumentException $r27;

        r0 := @this: com.ichi2.libanki.DB;

        r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        i1 = 0;

        r4 = null;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r5 = null;

     label01:
        $r6 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

     label02:
        $r7 = virtualinvoke $r6.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r2, null);

     label03:
        r5 = $r7;

     label04:
        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = staticinvoke <com.ichi2.libanki.DB: java.lang.String getCursorMethodName(java.lang.String)>($r8);

     label05:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToNext()>();

     label06:
        if $z0 == 0 goto label28;

        $r9 = class "Landroid/database/Cursor;";

     label07:
        $r10 = newarray (java.lang.Class)[1];

        $r11 = <java.lang.Integer: java.lang.Class TYPE>;

        $r10[0] = $r11;

     label08:
        $r12 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r8, $r10);

     label09:
        $r13 = newarray (java.lang.Object)[1];

     label10:
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label11:
        $r13[0] = $r14;

     label12:
        $r15 = virtualinvoke $r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, $r13);

        $r15 = virtualinvoke r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r15);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label13:
        goto label05;

     label14:
        r16 := @caughtexception;

     label15:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean isNull(int)>($i0);

     label16:
        if $z0 == 0 goto label24;

        i1 = i1 + 1;

        if i1 != 1 goto label05;

        r4 = r16;

     label17:
        $r17 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

        $r18 = virtualinvoke $r17.<com.ichi2.anki.AnkiDroidApp: android.content.Context getBaseContext()>();

        $r19 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r18, "Error report pending: unexpected null in database.", 1);

        virtualinvoke $r19.<android.widget.Toast: void show()>();

     label18:
        goto label05;

     label19:
        $r20 := @caughtexception;

        r21 = $r20;

     label20:
        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r21);

        throw $r22;

     label21:
        $r23 := @caughtexception;

        if r5 == null goto label22;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

     label22:
        if i1 <= 0 goto label23;

        if r4 == null goto label31;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DB.queryColumn (column ");

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r8 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception due to null. Query: ");

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Null occurrences during this query: ");

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r2 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.ichi2.anki.AnkiDroidApp: void sendExceptionReport(java.lang.Throwable,java.lang.String,java.lang.String)>(r4, "queryColumn_encounteredNull", $r2);

        $r2 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>($r2, $r13);

     label23:
        throw $r23;

     label24:
        $r22 = new java.lang.RuntimeException;

     label25:
        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r16);

     label26:
        throw $r22;

     label27:
        $r26 := @caughtexception;

        r21 = $r26;

        goto label20;

     label28:
        if $r7 == null goto label29;

        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label29:
        if i1 <= 0 goto label33;

        if r4 == null goto label30;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DB.queryColumn (column ");

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r8 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception due to null. Query: ");

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Null occurrences during this query: ");

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r2 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.ichi2.anki.AnkiDroidApp: void sendExceptionReport(java.lang.Throwable,java.lang.String,java.lang.String)>(r4, "queryColumn_encounteredNull", $r2);

        $r2 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>($r2, $r13);

        return r3;

     label30:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DB.queryColumn(): Critical error -- ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to pass in the actual exception to error reporting.");

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>("queryColumn null");

        $r2 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.ichi2.anki.AnkiDroidApp: void sendExceptionReport(java.lang.Throwable,java.lang.String,java.lang.String)>($r22, "queryColumn_encounteredNull", $r2);

        $r2 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>($r2, $r13);

        return r3;

     label31:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DB.queryColumn(): Critical error -- ");

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to pass in the actual exception to error reporting.");

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>("queryColumn null");

        $r2 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.ichi2.anki.AnkiDroidApp: void sendExceptionReport(java.lang.Throwable,java.lang.String,java.lang.String)>($r22, "queryColumn_encounteredNull", $r2);

        $r2 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>($r2, $r13);

        goto label23;

     label32:
        $r27 := @caughtexception;

        r21 = $r27;

        goto label20;

     label33:
        return r3;

        catch java.lang.NoSuchMethodException from label02 to label03 with label19;
        catch java.lang.NoSuchMethodException from label04 to label06 with label19;
        catch java.lang.IllegalAccessException from label02 to label03 with label27;
        catch java.lang.IllegalAccessException from label04 to label06 with label27;
        catch java.lang.IllegalArgumentException from label02 to label03 with label32;
        catch java.lang.IllegalArgumentException from label04 to label06 with label32;
        catch java.lang.Throwable from label01 to label03 with label21;
        catch java.lang.Throwable from label04 to label06 with label21;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label14;
        catch java.lang.reflect.InvocationTargetException from label10 to label11 with label14;
        catch java.lang.reflect.InvocationTargetException from label12 to label13 with label14;
        catch java.lang.NoSuchMethodException from label08 to label09 with label19;
        catch java.lang.NoSuchMethodException from label10 to label11 with label19;
        catch java.lang.NoSuchMethodException from label12 to label13 with label19;
        catch java.lang.IllegalAccessException from label08 to label09 with label27;
        catch java.lang.IllegalAccessException from label10 to label11 with label27;
        catch java.lang.IllegalAccessException from label12 to label13 with label27;
        catch java.lang.IllegalArgumentException from label08 to label09 with label32;
        catch java.lang.IllegalArgumentException from label10 to label11 with label32;
        catch java.lang.IllegalArgumentException from label12 to label13 with label32;
        catch java.lang.Throwable from label07 to label13 with label21;
        catch java.lang.NoSuchMethodException from label15 to label16 with label19;
        catch java.lang.NoSuchMethodException from label17 to label18 with label19;
        catch java.lang.IllegalAccessException from label15 to label16 with label27;
        catch java.lang.IllegalAccessException from label17 to label18 with label27;
        catch java.lang.IllegalArgumentException from label15 to label16 with label32;
        catch java.lang.IllegalArgumentException from label17 to label18 with label32;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label20 to label21 with label21;
        catch java.lang.NoSuchMethodException from label25 to label26 with label19;
        catch java.lang.IllegalAccessException from label25 to label26 with label27;
        catch java.lang.IllegalArgumentException from label25 to label27 with label32;
        catch java.lang.Throwable from label24 to label27 with label21;
    }
    public long queryLongScalar(java.lang.String)
    {
        com.ichi2.libanki.DB r0;
        java.lang.String $r1;
        android.database.Cursor r2, $r4;
        io.requery.android.database.sqlite.SQLiteDatabase $r3;
        boolean $z0;
        long $l0;
        java.lang.Throwable $r5;

        r0 := @this: com.ichi2.libanki.DB;

        $r1 := @parameter0: java.lang.String;

        r2 = null;

     label01:
        $r3 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        $r4 = virtualinvoke $r3.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r1, null);

     label02:
        r2 = $r4;

     label03:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

     label04:
        if $z0 != 0 goto label05;

        if $r4 == null goto label09;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return 0L;

     label05:
        $l0 = interfaceinvoke $r4.<android.database.Cursor: long getLong(int)>(0);

     label06:
        if $r4 == null goto label10;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return $l0;

     label07:
        $r5 := @caughtexception;

        if r2 == null goto label08;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label08:
        throw $r5;

     label09:
        return 0L;

     label10:
        return $l0;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
    }
    public int queryScalar(java.lang.String)
    {
        com.ichi2.libanki.DB r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.ichi2.libanki.DB;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<com.ichi2.libanki.DB: int queryScalar(java.lang.String,java.lang.String[])>($r1, null);

        return $i0;
    }
    public int queryScalar(java.lang.String, java.lang.String[])
    {
        com.ichi2.libanki.DB r0;
        java.lang.String $r1;
        java.lang.String[] $r2;
        android.database.Cursor r3, $r5;
        io.requery.android.database.sqlite.SQLiteDatabase $r4;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r6;

        r0 := @this: com.ichi2.libanki.DB;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        r3 = null;

     label01:
        $r4 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        $r5 = virtualinvoke $r4.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r1, $r2);

     label02:
        r3 = $r5;

     label03:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

     label04:
        if $z0 != 0 goto label05;

        if $r5 == null goto label09;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return 0;

     label05:
        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getInt(int)>(0);

     label06:
        if $r5 == null goto label10;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return $i0;

     label07:
        $r6 := @caughtexception;

        if r3 == null goto label08;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label08:
        throw $r6;

     label09:
        return 0;

     label10:
        return $i0;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
    }
    public java.lang.String queryString(java.lang.String) throws android.database.SQLException
    {
        com.ichi2.libanki.DB r0;
        java.lang.String $r1;
        android.database.Cursor r2, $r4;
        io.requery.android.database.sqlite.SQLiteDatabase $r3;
        boolean $z0;
        android.database.SQLException $r5;
        java.lang.StringBuilder $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.ichi2.libanki.DB;

        $r1 := @parameter0: java.lang.String;

        r2 = null;

     label01:
        $r3 = r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase mDatabase>;

        $r4 = virtualinvoke $r3.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r1, null);

     label02:
        r2 = $r4;

     label03:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

     label04:
        if $z0 != 0 goto label08;

     label05:
        $r5 = new android.database.SQLException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No result for query: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.database.SQLException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label06:
        $r7 := @caughtexception;

        if r2 == null goto label07;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label07:
        throw $r7;

     label08:
        $r1 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>(0);

     label09:
        if $r4 == null goto label10;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label10:
        return $r1;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
    }
    public void setMod(boolean)
    {
        com.ichi2.libanki.DB r0;
        boolean $z0;

        r0 := @this: com.ichi2.libanki.DB;

        $z0 := @parameter0: boolean;

        r0.<com.ichi2.libanki.DB: boolean mMod> = $z0;

        return;
    }
    public int update(java.lang.String, android.content.ContentValues)
    {
        com.ichi2.libanki.DB r0;
        java.lang.String $r1;
        android.content.ContentValues $r2;
        int $i0;

        r0 := @this: com.ichi2.libanki.DB;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.ContentValues;

        $i0 = virtualinvoke r0.<com.ichi2.libanki.DB: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r1, $r2, null, null);

        return $i0;
    }
    public int update(java.lang.String, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        com.ichi2.libanki.DB r0;
        java.lang.String $r1, $r3;
        android.content.ContentValues $r2;
        java.lang.String[] $r4;
        io.requery.android.database.sqlite.SQLiteDatabase $r5;
        int $i0;

        r0 := @this: com.ichi2.libanki.DB;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.ContentValues;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        r0.<com.ichi2.libanki.DB: boolean mMod> = 1;

        $r5 = virtualinvoke r0.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $i0 = virtualinvoke $r5.<io.requery.android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r1, $r2, $r3, $r4);

        return $i0;
    }
