com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory extends java.lang.Object
final com.ichi2.libanki.hooks.AdvancedStatistics this$0
    private void <init>(com.ichi2.libanki.hooks.AdvancedStatistics)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory r0;
        com.ichi2.libanki.hooks.AdvancedStatistics $r1;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory;

        $r1 := @parameter0: com.ichi2.libanki.hooks.AdvancedStatistics;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory: com.ichi2.libanki.hooks.AdvancedStatistics this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(com.ichi2.libanki.hooks.AdvancedStatistics, com.ichi2.libanki.hooks.AdvancedStatistics$1)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory r0;
        com.ichi2.libanki.hooks.AdvancedStatistics $r1;
        com.ichi2.libanki.hooks.AdvancedStatistics$1 $r2;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory;

        $r1 := @parameter0: com.ichi2.libanki.hooks.AdvancedStatistics;

        $r2 := @parameter1: com.ichi2.libanki.hooks.AdvancedStatistics$1;

        specialinvoke r0.<com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics)>($r1);

        return;
    }
    public com.ichi2.libanki.hooks.AdvancedStatistics$Deck createDeck(long, com.ichi2.libanki.Decks)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory r0;
        long $l0;
        com.ichi2.libanki.Decks $r1;
        org.json.JSONException r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Object[] $r5;
        org.json.JSONObject $r6, $r9;
        com.ichi2.libanki.hooks.AdvancedStatistics $r7;
        com.ichi2.libanki.hooks.AdvancedStatistics$Settings $r8;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        com.ichi2.libanki.hooks.AdvancedStatistics$Deck $r10;
        java.lang.RuntimeException $r11;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory;

        $l0 := @parameter0: long;

        $r1 := @parameter1: com.ichi2.libanki.Decks;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to get deck settings for deck with id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

        $r6 = virtualinvoke $r1.<com.ichi2.libanki.Decks: org.json.JSONObject confForDid(long)>($l0);

        $r7 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory: com.ichi2.libanki.hooks.AdvancedStatistics this$0>;

        $r8 = staticinvoke <com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$Settings access$200(com.ichi2.libanki.hooks.AdvancedStatistics)>($r7);

        $i1 = virtualinvoke $r8.<com.ichi2.libanki.hooks.AdvancedStatistics$Settings: int getMaxNewPerDay()>();

        $r7 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory: com.ichi2.libanki.hooks.AdvancedStatistics this$0>;

        $r8 = staticinvoke <com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$Settings access$200(com.ichi2.libanki.hooks.AdvancedStatistics)>($r7);

        $i2 = virtualinvoke $r8.<com.ichi2.libanki.hooks.AdvancedStatistics$Settings: int getMaxReviewsPerDay()>();

        $r7 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory: com.ichi2.libanki.hooks.AdvancedStatistics this$0>;

        $r8 = staticinvoke <com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$Settings access$200(com.ichi2.libanki.hooks.AdvancedStatistics)>($r7);

        $i3 = virtualinvoke $r8.<com.ichi2.libanki.hooks.AdvancedStatistics$Settings: int getInitialFactor()>();

     label01:
        $i4 = virtualinvoke $r6.<org.json.JSONObject: int getInt(java.lang.String)>("dyn");

     label02:
        if $i4 != 0 goto label21;

     label03:
        $r9 = virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("rev");

        $i4 = virtualinvoke $r9.<org.json.JSONObject: int getInt(java.lang.String)>("perDay");

     label04:
        $i2 = $i4;

     label05:
        $r9 = virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("new");

        $i5 = virtualinvoke $r9.<org.json.JSONObject: int getInt(java.lang.String)>("perDay");

     label06:
        $i1 = $i5;

     label07:
        $r6 = virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("new");

        $i6 = virtualinvoke $r6.<org.json.JSONObject: int getInt(java.lang.String)>("initialFactor");

     label08:
        $i3 = $i6;

        $r3 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rev.perDay=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r5 = newarray (java.lang.Object)[0];

     label11:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

     label12:
        $r3 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new.perDay=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        $r5 = newarray (java.lang.Object)[0];

     label15:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

     label16:
        $r3 = new java.lang.StringBuilder;

     label17:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new.initialFactor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        $r5 = newarray (java.lang.Object)[0];

     label19:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

     label20:
        $r10 = new com.ichi2.libanki.hooks.AdvancedStatistics$Deck;

        $r7 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory: com.ichi2.libanki.hooks.AdvancedStatistics this$0>;

        specialinvoke $r10.<com.ichi2.libanki.hooks.AdvancedStatistics$Deck: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,long,int,int,int)>($r7, $l0, $i1, $i2, $i3);

        return $r10;

     label21:
        $r3 = new java.lang.StringBuilder;

     label22:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dyn=");

        $i4 = virtualinvoke $r6.<org.json.JSONObject: int getInt(java.lang.String)>("dyn");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label23:
        $r5 = newarray (java.lang.Object)[0];

     label24:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

     label25:
        goto label20;

     label26:
        r2 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r11;

        catch org.json.JSONException from label01 to label02 with label26;
        catch org.json.JSONException from label03 to label04 with label26;
        catch org.json.JSONException from label05 to label06 with label26;
        catch org.json.JSONException from label07 to label08 with label26;
        catch org.json.JSONException from label09 to label10 with label26;
        catch org.json.JSONException from label11 to label12 with label26;
        catch org.json.JSONException from label13 to label14 with label26;
        catch org.json.JSONException from label15 to label16 with label26;
        catch org.json.JSONException from label17 to label18 with label26;
        catch org.json.JSONException from label19 to label20 with label26;
        catch org.json.JSONException from label22 to label23 with label26;
        catch org.json.JSONException from label24 to label25 with label26;
    }
