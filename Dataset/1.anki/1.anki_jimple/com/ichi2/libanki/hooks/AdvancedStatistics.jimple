com.ichi2.libanki.hooks.AdvancedStatistics extends com.ichi2.libanki.hooks.Hook
private static final int CARD_TYPE_COUNT
private static final int CARD_TYPE_MATURE
private static final int CARD_TYPE_MATURE_PLUS_1
private static final int CARD_TYPE_NEW
private static final int CARD_TYPE_NEW_PLUS_1
private static final int CARD_TYPE_YOUNG
private static final int CARD_TYPE_YOUNG_PLUS_1
private static final int REVIEW_OUTCOME_EASY
private static final int REVIEW_OUTCOME_EASY_PLUS_1
private static final int REVIEW_OUTCOME_GOOD
private static final int REVIEW_OUTCOME_GOOD_PLUS_1
private static final int REVIEW_OUTCOME_HARD
private static final int REVIEW_OUTCOME_HARD_PLUS_1
private static final int REVIEW_OUTCOME_REPEAT
private static final int REVIEW_OUTCOME_REPEAT_PLUS_1
private static final int REVIEW_TYPE_COUNT
private static final int REVIEW_TYPE_COUNT_PLUS_1
private static final int REVIEW_TYPE_LEARN
private static final int REVIEW_TYPE_LEARN_PLUS_1
private static final int REVIEW_TYPE_MATURE
private static final int REVIEW_TYPE_MATURE_PLUS_1
private static final int REVIEW_TYPE_RELEARN
private static final int REVIEW_TYPE_RELEARN_PLUS_1
private static final int REVIEW_TYPE_YOUNG
private static final int REVIEW_TYPE_YOUNG_PLUS_1
private static final int TIME
private final com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils ArrayUtils
private final com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory Decks
private com.ichi2.libanki.hooks.AdvancedStatistics$Settings Settings
    public void <init>()
    {
        com.ichi2.libanki.hooks.AdvancedStatistics r0;
        com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils $r1;
        com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory $r2;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics;

        specialinvoke r0.<com.ichi2.libanki.hooks.Hook: void <init>()>();

        $r1 = new com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils;

        specialinvoke $r1.<com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,com.ichi2.libanki.hooks.AdvancedStatistics$1)>(r0, null);

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils ArrayUtils> = $r1;

        $r2 = new com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory;

        specialinvoke $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,com.ichi2.libanki.hooks.AdvancedStatistics$1)>(r0, null);

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory Decks> = $r2;

        return;
    }
    static com.ichi2.libanki.hooks.AdvancedStatistics$Settings access$200(com.ichi2.libanki.hooks.AdvancedStatistics)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics $r0;
        com.ichi2.libanki.hooks.AdvancedStatistics$Settings r1;

        $r0 := @parameter0: com.ichi2.libanki.hooks.AdvancedStatistics;

        r1 = $r0.<com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$Settings Settings>;

        return r1;
    }
    static com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils access$300(com.ichi2.libanki.hooks.AdvancedStatistics)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics $r0;
        com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils r1;

        $r0 := @parameter0: com.ichi2.libanki.hooks.AdvancedStatistics;

        r1 = $r0.<com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils ArrayUtils>;

        return r1;
    }
    static com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory access$400(com.ichi2.libanki.hooks.AdvancedStatistics)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics $r0;
        com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory r1;

        $r0 := @parameter0: com.ichi2.libanki.hooks.AdvancedStatistics;

        r1 = $r0.<com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$DeckFactory Decks>;

        return r1;
    }
    private com.ichi2.anki.stats.StatsMetaInfo calculateDueAsMetaInfo(com.ichi2.anki.stats.StatsMetaInfo, com.ichi2.libanki.Stats$AxisType, android.content.Context, java.lang.String)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics r0;
        com.ichi2.anki.stats.StatsMetaInfo $r1;
        com.ichi2.libanki.Stats$AxisType $r2;
        android.content.Context $r3;
        java.lang.String $r4;
        int[] r5, r6, $r9, $r12;
        int i0, i1, i2, $i3, $i4;
        com.ichi2.anki.CollectionHelper $r7;
        com.ichi2.libanki.Collection $r8;
        double d0, $d1, $d2;
        com.ichi2.libanki.hooks.AdvancedStatistics$PlottableSimulationResult $r10;
        java.util.ArrayList $r11;
        java.lang.Class $r13;
        java.lang.Object $r14;
        double[][] r15, $r17;
        double[] $r16, $r18;
        byte $b5;
        boolean $z0;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics;

        $r1 := @parameter0: com.ichi2.anki.stats.StatsMetaInfo;

        $r2 := @parameter1: com.ichi2.libanki.Stats$AxisType;

        $r3 := @parameter2: android.content.Context;

        $r4 := @parameter3: java.lang.String;

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setStatsCalculated(boolean)>(1);

        $r7 = staticinvoke <com.ichi2.anki.CollectionHelper: com.ichi2.anki.CollectionHelper getInstance()>();

        $r8 = virtualinvoke $r7.<com.ichi2.anki.CollectionHelper: com.ichi2.libanki.Collection getCol(android.content.Context)>($r3);

        i1 = 0;

        d0 = 0.0;

        i2 = 0;

        $r9 = newarray (int)[4];

        $r9[0] = 2131231304;

        $r9[1] = 2131231303;

        $r9[2] = 2131231307;

        $r9[3] = 2131231302;

        r6 = newarray (int)[4];

        r6[0] = 2130772047;

        r6[1] = 2130772046;

        r6[2] = 2130772050;

        r6[3] = 2130772045;

        r5 = newarray (int)[3];

        $i3 = virtualinvoke $r2.<com.ichi2.libanki.Stats$AxisType: int ordinal()>();

        r5[0] = $i3;

        r5[1] = 2131231314;

        r5[2] = 2131231319;

        $r10 = specialinvoke r0.<com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$PlottableSimulationResult calculateDueAsPlottableSimulationResult(com.ichi2.libanki.Stats$AxisType,com.ichi2.libanki.Collection,java.lang.String)>($r2, $r8, $r4);

        $r11 = virtualinvoke $r10.<com.ichi2.libanki.hooks.AdvancedStatistics$PlottableSimulationResult: java.util.ArrayList getNReviews()>();

        $i3 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $r12 = newarray (int)[2];

        $r12[0] = 5;

        $r12[1] = $i3;

        $r13 = <java.lang.Double: java.lang.Class TYPE>;

        $r14 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r13, $r12);

        r15 = (double[][]) $r14;

        $i3 = 0;

     label01:
        i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i3 >= i0 goto label05;

        $r14 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r12 = (int[]) $r14;

        i0 = $r12[1];

        $i4 = $r12[2];

        i0 = i0 + $i4;

        $i4 = $r12[3];

        i0 = i0 + $i4;

        $i4 = $r12[4];

        i0 = i0 + $i4;

        if i0 <= i1 goto label02;

        i1 = i0;

     label02:
        $r16 = r15[0];

        i0 = $r12[0];

        $d1 = (double) i0;

        $r16[$i3] = $d1;

        $r16 = r15[1];

        i0 = $r12[1];

        $i4 = $r12[2];

        i0 = i0 + $i4;

        $i4 = $r12[3];

        i0 = i0 + $i4;

        $i4 = $r12[4];

        i0 = i0 + $i4;

        $d1 = (double) i0;

        $r16[$i3] = $d1;

        $r16 = r15[2];

        i0 = $r12[1];

        $i4 = $r12[2];

        i0 = i0 + $i4;

        $i4 = $r12[3];

        i0 = i0 + $i4;

        $d1 = (double) i0;

        $r16[$i3] = $d1;

        $r16 = r15[3];

        i0 = $r12[1];

        $i4 = $r12[2];

        i0 = i0 + $i4;

        $d1 = (double) i0;

        $r16[$i3] = $d1;

        $r16 = r15[4];

        i0 = $r12[1];

        $d1 = (double) i0;

        $r16[$i3] = $d1;

        i0 = $r12[0];

        $d1 = (double) i0;

        $b5 = $d1 cmpl d0;

        if $b5 <= 0 goto label03;

        i0 = $r12[0];

        d0 = (double) i0;

     label03:
        i0 = $r12[0];

        if i0 != 0 goto label04;

        i2 = $i3;

     label04:
        $i3 = $i3 + 1;

        goto label01;

     label05:
        $i3 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i3 = $i3 + -1;

        $r12 = <com.ichi2.libanki.hooks.AdvancedStatistics$1: int[] $SwitchMap$com$ichi2$libanki$Stats$AxisType>;

        i0 = virtualinvoke $r2.<com.ichi2.libanki.Stats$AxisType: int ordinal()>();

        i0 = $r12[i0];

        lookupswitch(i0)
        {
            case 1: goto label12;
            case 2: goto label13;
            default: goto label06;
        };

     label06:
        $r17 = virtualinvoke $r10.<com.ichi2.libanki.hooks.AdvancedStatistics$PlottableSimulationResult: double[][] getNInState()>();

        $r16 = $r17[1];

        $r18 = $r17[1];

        i0 = lengthof $r18;

        i0 = i0 + -1;

        $d1 = $r16[i0];

        $r16 = $r17[2];

        $r18 = $r17[2];

        i0 = lengthof $r18;

        i0 = i0 + -1;

        $d2 = $r16[i0];

        $d1 = $d1 + $d2;

        $r16 = $r17[3];

        $r18 = $r17[3];

        i0 = lengthof $r18;

        i0 = i0 + -1;

        $d2 = $r16[i0];

        $d1 = $d1 + $d2;

        if $i3 != 0 goto label07;

        $i3 = 10;

     label07:
        $b5 = $d1 cmpl 0.0;

        if $b5 != 0 goto label08;

        $d1 = 10.0;

     label08:
        $b5 = 0.0 cmpl d0;

        if $b5 != 0 goto label09;

        d0 = 6.0;

     label09:
        if i1 != 0 goto label10;

        i1 = 10;

     label10:
        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmDynamicAxis(boolean)>(1);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmHasColoredCumulative(boolean)>(1);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmType(com.ichi2.libanki.Stats$AxisType)>($r2);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmTitle(int)>(2131231326);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmBackwards(boolean)>(1);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmValueLabels(int[])>($r9);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmColors(int[])>(r6);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmAxisTitles(int[])>(r5);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmMaxCards(int)>(i1);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmMaxElements(int)>($i3);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmFirstElement(double)>(0.0);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmLastElement(double)>(d0);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmZeroIndex(int)>(i2);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmCumulative(double[][])>($r17);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmMcount(double)>($d1);

        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setmSeriesList(double[][])>(r15);

        i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if i1 <= 0 goto label14;

        $z0 = 1;

     label11:
        virtualinvoke $r1.<com.ichi2.anki.stats.StatsMetaInfo: void setDataAvailable(boolean)>($z0);

        return $r1;

     label12:
        d0 = 31.0;

        goto label06;

     label13:
        d0 = 52.0;

        goto label06;

     label14:
        $z0 = 0;

        goto label11;
    }
    private com.ichi2.libanki.hooks.AdvancedStatistics$PlottableSimulationResult calculateDueAsPlottableSimulationResult(com.ichi2.libanki.Stats$AxisType, com.ichi2.libanki.Collection, java.lang.String)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics r0;
        com.ichi2.libanki.Stats$AxisType $r1, $r19;
        com.ichi2.libanki.Collection $r2;
        java.lang.String $r3;
        double[][] r5;
        byte b0, b1;
        int[] $r6, $r17;
        int $i2, $i5;
        com.ichi2.libanki.DB $r7;
        io.requery.android.database.sqlite.SQLiteDatabase $r8;
        com.ichi2.libanki.hooks.AdvancedStatistics$Settings $r9;
        long $l3, $l4;
        com.ichi2.libanki.Decks $r10;
        com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult $r11;
        java.lang.StringBuilder $r12, $r25;
        java.lang.Object[] $r13;
        com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils $r14;
        int[][] $r15, $r16;
        java.lang.Object $r18;
        double[] $r20;
        double $d0;
        java.util.ArrayList $r21;
        com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier $r22;
        com.ichi2.libanki.hooks.AdvancedStatistics$ReviewSimulator $r23;
        com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats $r24;
        com.ichi2.libanki.hooks.AdvancedStatistics$PlottableSimulationResult $r26;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics;

        $r1 := @parameter0: com.ichi2.libanki.Stats$AxisType;

        $r2 := @parameter1: com.ichi2.libanki.Collection;

        $r3 := @parameter2: java.lang.String;

        b0 = 0;

        b1 = 0;

        $r6 = <com.ichi2.libanki.hooks.AdvancedStatistics$1: int[] $SwitchMap$com$ichi2$libanki$Stats$AxisType>;

        $i2 = virtualinvoke $r1.<com.ichi2.libanki.Stats$AxisType: int ordinal()>();

        $i2 = $r6[$i2];

        lookupswitch($i2)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            default: goto label01;
        };

     label01:
        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        $r22 = new com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier;

        $r7 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r8 = virtualinvoke $r7.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        specialinvoke $r22.<com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,io.requery.android.database.sqlite.SQLiteDatabase)>(r0, $r8);

        $r23 = new com.ichi2.libanki.hooks.AdvancedStatistics$ReviewSimulator;

        $r7 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r8 = virtualinvoke $r7.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        specialinvoke $r23.<com.ichi2.libanki.hooks.AdvancedStatistics$ReviewSimulator: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,io.requery.android.database.sqlite.SQLiteDatabase,com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier,int,int)>(r0, $r8, $r22, b0, b1);

        $r24 = new com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats;

        $r7 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r8 = virtualinvoke $r7.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r9 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$Settings Settings>;

        $l3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: long getCrt()>();

        $i2 = (int) $l3;

        $l3 = virtualinvoke $r9.<com.ichi2.libanki.hooks.AdvancedStatistics$Settings: long getDayStartCutoff(int)>($i2);

        specialinvoke $r24.<com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,io.requery.android.database.sqlite.SQLiteDatabase,long)>(r0, $r8, $l3);

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r9 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$Settings Settings>;

        $l4 = virtualinvoke $r2.<com.ichi2.libanki.Collection: long getCrt()>();

        $i2 = (int) $l4;

        $i2 = virtualinvoke $r9.<com.ichi2.libanki.hooks.AdvancedStatistics$Settings: int getToday(int)>($i2);

        $r10 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r11 = virtualinvoke $r23.<com.ichi2.libanki.hooks.AdvancedStatistics$ReviewSimulator: com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult simNreviews(int,com.ichi2.libanki.Decks,java.lang.String,com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats)>($i2, $r10, $r3, $r24);

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Simulation of all decks took: ");

        $l3 = $l4 - $l3;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>($r3, $r13);

        $r14 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils ArrayUtils>;

        $r15 = virtualinvoke $r11.<com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult: int[][] getNReviews()>();

        $r15 = virtualinvoke $r14.<com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils: int[][] transposeMatrix(int[][])>($r15);

        $r14 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils ArrayUtils>;

        $r16 = virtualinvoke $r11.<com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult: int[][] getNInState()>();

        $r16 = virtualinvoke $r14.<com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils: int[][] transposeMatrix(int[][])>($r16);

        $i2 = 0;

     label02:
        $i5 = lengthof $r15;

        if $i2 >= $i5 goto label06;

        $r6 = newarray (int)[5];

        $r6[0] = $i2;

        $r17 = $r15[$i2];

        $i5 = $r17[0];

        $r6[1] = $i5;

        $r17 = $r15[$i2];

        $i5 = $r17[1];

        $r6[2] = $i5;

        $r17 = $r15[$i2];

        $i5 = $r17[2];

        $r6[3] = $i5;

        $r17 = $r15[$i2];

        $i5 = $r17[3];

        $r6[4] = $i5;

        virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i2 = $i2 + 1;

        goto label02;

     label03:
        b0 = 31;

        b1 = 1;

        goto label01;

     label04:
        b0 = 52;

        b1 = 7;

        goto label01;

     label05:
        b0 = 24;

        b1 = 30;

        goto label01;

     label06:
        $i2 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        if $i2 == 0 goto label07;

        $r18 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r6 = (int[]) $r18;

        $i2 = $r6[0];

        if $i2 <= 0 goto label08;

     label07:
        $r6 = newarray (int)[5];

        $r6[0] = 0;

        $r6[1] = 0;

        $r6[2] = 0;

        $r6[3] = 0;

        $r6[4] = 0;

        virtualinvoke $r21.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r6);

     label08:
        $r19 = <com.ichi2.libanki.Stats$AxisType: com.ichi2.libanki.Stats$AxisType TYPE_LIFE>;

        if $r1 != $r19 goto label09;

        $i2 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        if $i2 >= 2 goto label09;

        b0 = 31;

     label09:
        $r19 = <com.ichi2.libanki.Stats$AxisType: com.ichi2.libanki.Stats$AxisType TYPE_LIFE>;

        if $r1 == $r19 goto label13;

        $i2 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        $i2 = $i2 + -1;

        $r18 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r6 = (int[]) $r18;

        $i2 = $r6[0];

        if $i2 >= b0 goto label13;

        $r6 = newarray (int)[5];

        $r6[0] = b0;

        $r6[1] = 0;

        $r6[2] = 0;

        $r6[3] = 0;

        $r6[4] = 0;

        virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label10:
        $i2 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        r5 = newarray (double[])[$i2];

        $i2 = 0;

     label11:
        $i5 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        if $i2 >= $i5 goto label16;

        $i5 = lengthof $r16;

        if $i2 >= $i5 goto label14;

        $r20 = newarray (double)[5];

        $d0 = (double) $i2;

        $r20[0] = $d0;

        $d0 = (double) 0L;

        $r20[1] = $d0;

        $r6 = $r16[$i2];

        $i5 = $r6[2];

        $d0 = (double) $i5;

        $r20[2] = $d0;

        $r6 = $r16[$i2];

        $i5 = $r6[1];

        $d0 = (double) $i5;

        $r20[3] = $d0;

        $r6 = $r16[$i2];

        $i5 = $r6[0];

        $d0 = (double) $i5;

        $r20[4] = $d0;

        r5[$i2] = $r20;

     label12:
        $i2 = $i2 + 1;

        goto label11;

     label13:
        $r19 = <com.ichi2.libanki.Stats$AxisType: com.ichi2.libanki.Stats$AxisType TYPE_LIFE>;

        if $r1 != $r19 goto label10;

        $i2 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        if $i2 >= 2 goto label10;

        $r6 = newarray (int)[5];

        $i2 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        $i2 = $i2 + -1;

        $r18 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r17 = (int[]) $r18;

        $i2 = $r17[0];

        $i2 = $i2 + 1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(12, $i2);

        $r6[0] = $i2;

        $r6[1] = 0;

        $r6[2] = 0;

        $r6[3] = 0;

        $r6[4] = 0;

        virtualinvoke $r21.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label10;

     label14:
        if $i2 != 0 goto label15;

        $r20 = newarray (double)[5];

        $d0 = (double) $i2;

        $r20[0] = $d0;

        $d0 = (double) 0L;

        $r20[1] = $d0;

        $d0 = (double) 0L;

        $r20[2] = $d0;

        $d0 = (double) 0L;

        $r20[3] = $d0;

        $d0 = (double) 0L;

        $r20[4] = $d0;

        r5[$i2] = $r20;

        goto label12;

     label15:
        $i5 = $i2 + -1;

        $r20 = r5[$i5];

        r5[$i2] = $r20;

        goto label12;

     label16:
        $r26 = new com.ichi2.libanki.hooks.AdvancedStatistics$PlottableSimulationResult;

        $r14 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils ArrayUtils>;

        r5 = virtualinvoke $r14.<com.ichi2.libanki.hooks.AdvancedStatistics$ArrayUtils: double[][] transposeMatrix(double[][])>(r5);

        specialinvoke $r26.<com.ichi2.libanki.hooks.AdvancedStatistics$PlottableSimulationResult: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,java.util.ArrayList,double[][])>(r0, $r21, r5);

        return $r26;
    }
    public static void install(com.ichi2.libanki.hooks.Hooks)
    {
        com.ichi2.libanki.hooks.Hooks $r0;
        com.ichi2.libanki.hooks.AdvancedStatistics $r1;

        $r0 := @parameter0: com.ichi2.libanki.hooks.Hooks;

        $r1 = new com.ichi2.libanki.hooks.AdvancedStatistics;

        specialinvoke $r1.<com.ichi2.libanki.hooks.AdvancedStatistics: void <init>()>();

        virtualinvoke $r0.<com.ichi2.libanki.hooks.Hooks: void addHook(java.lang.String,com.ichi2.libanki.hooks.Hook)>("advancedStatistics", $r1);

        return;
    }
    public static void uninstall(com.ichi2.libanki.hooks.Hooks)
    {
        com.ichi2.libanki.hooks.Hooks $r0;
        com.ichi2.libanki.hooks.AdvancedStatistics $r1;

        $r0 := @parameter0: com.ichi2.libanki.hooks.Hooks;

        $r1 = new com.ichi2.libanki.hooks.AdvancedStatistics;

        specialinvoke $r1.<com.ichi2.libanki.hooks.AdvancedStatistics: void <init>()>();

        virtualinvoke $r0.<com.ichi2.libanki.hooks.Hooks: void remHook(java.lang.String,com.ichi2.libanki.hooks.Hook)>("advancedStatistics", $r1);

        return;
    }
    public transient java.lang.Object runFilter(java.lang.Object, java.lang.Object[])
    {
        com.ichi2.libanki.hooks.AdvancedStatistics r0;
        java.lang.Object[] $r1;
        com.ichi2.anki.stats.StatsMetaInfo $r2;
        java.lang.Object $r3, r4;
        android.content.Context r5;
        com.ichi2.libanki.hooks.AdvancedStatistics$Settings $r6;
        com.ichi2.libanki.Stats$AxisType $r7;
        java.lang.String $r8;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object[];

        r4 = $r1[1];

        r5 = (android.content.Context) r4;

        $r6 = new com.ichi2.libanki.hooks.AdvancedStatistics$Settings;

        specialinvoke $r6.<com.ichi2.libanki.hooks.AdvancedStatistics$Settings: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,android.content.Context)>(r0, r5);

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$Settings Settings> = $r6;

        $r2 = (com.ichi2.anki.stats.StatsMetaInfo) $r3;

        $r3 = $r1[0];

        $r7 = (com.ichi2.libanki.Stats$AxisType) $r3;

        $r3 = $r1[2];

        $r8 = (java.lang.String) $r3;

        $r2 = specialinvoke r0.<com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.anki.stats.StatsMetaInfo calculateDueAsMetaInfo(com.ichi2.anki.stats.StatsMetaInfo,com.ichi2.libanki.Stats$AxisType,android.content.Context,java.lang.String)>($r2, $r7, r5, $r8);

        return $r2;
    }
