com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats extends java.lang.Object
private java.util.Map nLearnedPerDeckId
final com.ichi2.libanki.hooks.AdvancedStatistics this$0
    public void <init>(com.ichi2.libanki.hooks.AdvancedStatistics, io.requery.android.database.sqlite.SQLiteDatabase, long)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats r0;
        com.ichi2.libanki.hooks.AdvancedStatistics $r1;
        io.requery.android.database.sqlite.SQLiteDatabase $r2;
        long $l0;
        java.util.HashMap $r3;
        android.database.Cursor r4, $r8;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.Object[] $r7;
        boolean $z0;
        java.util.Map $r9;
        java.lang.Long $r10;
        int $i1;
        java.lang.Integer $r11;
        java.lang.Throwable $r12;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats;

        $r1 := @parameter0: com.ichi2.libanki.hooks.AdvancedStatistics;

        $r2 := @parameter1: io.requery.android.database.sqlite.SQLiteDatabase;

        $l0 := @parameter2: long;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats: com.ichi2.libanki.hooks.AdvancedStatistics this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats: java.util.Map nLearnedPerDeckId> = $r3;

        r4 = null;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select cards.did, sum(case when revlog.type = 0 then 1 else 0 end) from revlog, cards where revlog.cid = cards.id and revlog.id > ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" group by cards.did");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r6;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("AdvancedStatistics.TodayStats query: %s", $r7);

     label01:
        $r8 = virtualinvoke $r2.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r6, null);

     label02:
        r4 = $r8;

     label03:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToNext()>();

     label04:
        if $z0 == 0 goto label09;

     label05:
        $r9 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats: java.util.Map nLearnedPerDeckId>;

        $l0 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>(0);

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $i1 = interfaceinvoke $r8.<android.database.Cursor: int getInt(int)>(1);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

     label06:
        goto label03;

     label07:
        $r12 := @caughtexception;

        if r4 == null goto label08;

        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label08;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label08:
        throw $r12;

     label09:
        if $r8 == null goto label10;

        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label10;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
    }
    public int getNLearned(long)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats r0;
        long $l0;
        java.util.Map $r1;
        java.lang.Long $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        int $i1;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats;

        $l0 := @parameter0: long;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats: java.util.Map nLearnedPerDeckId>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$TodayStats: java.util.Map nLearnedPerDeckId>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i1;

     label1:
        return 0;
    }
