com.ichi2.libanki.hooks.HebrewFixFilter extends com.ichi2.libanki.hooks.Hook
private static final java.util.regex.Pattern sHebrewPattern
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([\\u0591-\\u05F4\\uFB1D-\\uFB4F][\\u0591-\\u05F4\\uFB1D-\\uFB4F,.?!;:\"\'\\s]*[\\u0591-\\u05F4\\uFB1D-\\uFB4F,.?!;:]|[\\u0591-\\u05F4\\uFB1D-\\uFB4F])");

        <com.ichi2.libanki.hooks.HebrewFixFilter: java.util.regex.Pattern sHebrewPattern> = $r0;

        return;
    }
    public void <init>()
    {
        com.ichi2.libanki.hooks.HebrewFixFilter r0;

        r0 := @this: com.ichi2.libanki.hooks.HebrewFixFilter;

        specialinvoke r0.<com.ichi2.libanki.hooks.Hook: void <init>()>();

        return;
    }
    private java.lang.String applyFixForHebrew(java.lang.String)
    {
        com.ichi2.libanki.hooks.HebrewFixFilter r0;
        java.lang.String $r1;
        java.util.ArrayList r2;
        java.lang.StringBuffer r3, $r12;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.util.regex.Pattern r7;
        java.util.regex.Matcher $r8;
        android.util.Pair $r9;
        int $i0, $i1;
        java.lang.Integer $r10, $r11;
        java.lang.StringBuilder $r13;

        r0 := @this: com.ichi2.libanki.hooks.HebrewFixFilter;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r4 = <com.ichi2.libanki.Media: java.util.List mRegexps>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.regex.Pattern) $r6;

        $r8 = virtualinvoke r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

     label2:
        $z0 = virtualinvoke $r8.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r9 = new android.util.Pair;

        $i0 = virtualinvoke $r8.<java.util.regex.Matcher: int start()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = virtualinvoke $r8.<java.util.regex.Matcher: int end()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke $r9.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r10, $r11);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label2;

     label3:
        r7 = <com.ichi2.libanki.hooks.HebrewFixFilter: java.util.regex.Pattern sHebrewPattern>;

        $r8 = virtualinvoke r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        r3 = new java.lang.StringBuffer;

        specialinvoke r3.<java.lang.StringBuffer: void <init>()>();

     label4:
        $z0 = virtualinvoke $r8.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label5;

        $r1 = virtualinvoke $r8.<java.util.regex.Matcher: java.lang.String group()>();

        $i0 = virtualinvoke $r8.<java.util.regex.Matcher: int start()>();

        $i1 = virtualinvoke $r8.<java.util.regex.Matcher: int end()>();

        $z0 = specialinvoke r0.<com.ichi2.libanki.hooks.HebrewFixFilter: boolean regionOverlapsMedia(java.util.List,int,int)>(r2, $i0, $i1);

        if $z0 != 0 goto label4;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer reverse()>();

        $r1 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $r1 = virtualinvoke r0.<com.ichi2.libanki.hooks.HebrewFixFilter: java.lang.String translate(java.lang.String)>($r1);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<span style=\"font-family:Tohu;\">");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</span>");

        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r3, $r1);

        goto label4;

     label5:
        virtualinvoke $r8.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r3);

        $r1 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }
    public static void install(com.ichi2.libanki.hooks.Hooks)
    {
        com.ichi2.libanki.hooks.Hooks $r0;
        com.ichi2.libanki.hooks.HebrewFixFilter $r1;

        $r0 := @parameter0: com.ichi2.libanki.hooks.Hooks;

        $r1 = new com.ichi2.libanki.hooks.HebrewFixFilter;

        specialinvoke $r1.<com.ichi2.libanki.hooks.HebrewFixFilter: void <init>()>();

        virtualinvoke $r0.<com.ichi2.libanki.hooks.Hooks: void addHook(java.lang.String,com.ichi2.libanki.hooks.Hook)>("mungeQA", $r1);

        return;
    }
    private boolean regionOverlapsMedia(java.util.List, int, int)
    {
        com.ichi2.libanki.hooks.HebrewFixFilter r0;
        java.util.List r1;
        int $i0, $i1, $i2;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.util.Pair r4;
        java.lang.Integer $r5;

        r0 := @this: com.ichi2.libanki.hooks.HebrewFixFilter;

        r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.util.Pair) $r3;

        $r3 = r4.<android.util.Pair: java.lang.Object first>;

        $r5 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if $i0 <= $i2 goto label2;

        $r3 = r4.<android.util.Pair: java.lang.Object second>;

        $r5 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if $i0 < $i2 goto label3;

     label2:
        $r3 = r4.<android.util.Pair: java.lang.Object first>;

        $r5 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if $i1 <= $i2 goto label1;

        $r3 = r4.<android.util.Pair: java.lang.Object second>;

        $r5 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if $i1 >= $i2 goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }
    public static void uninstall(com.ichi2.libanki.hooks.Hooks)
    {
        com.ichi2.libanki.hooks.Hooks $r0;
        com.ichi2.libanki.hooks.HebrewFixFilter $r1;

        $r0 := @parameter0: com.ichi2.libanki.hooks.Hooks;

        $r1 = new com.ichi2.libanki.hooks.HebrewFixFilter;

        specialinvoke $r1.<com.ichi2.libanki.hooks.HebrewFixFilter: void <init>()>();

        virtualinvoke $r0.<com.ichi2.libanki.hooks.Hooks: void remHook(java.lang.String,com.ichi2.libanki.hooks.Hook)>("mungeQA", $r1);

        return;
    }
    public transient java.lang.Object runFilter(java.lang.Object, java.lang.Object[])
    {
        com.ichi2.libanki.hooks.HebrewFixFilter r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        java.lang.Object $r3;

        r0 := @this: com.ichi2.libanki.hooks.HebrewFixFilter;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object[];

        $r2 = (java.lang.String) $r3;

        $r2 = specialinvoke r0.<com.ichi2.libanki.hooks.HebrewFixFilter: java.lang.String applyFixForHebrew(java.lang.String)>($r2);

        return $r2;
    }
    java.lang.String translate(java.lang.String)
    {
        com.ichi2.libanki.hooks.HebrewFixFilter r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder r2;
        int $i0, $i1;
        char $c2;

        r0 := @this: com.ichi2.libanki.hooks.HebrewFixFilter;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.lang.StringBuilder;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label8;

        $i1 = virtualinvoke $r1.<java.lang.String: int codePointAt(int)>($i0);

        if $i1 < 1424 goto label3;

        if $i1 >= 1536 goto label3;

        $i1 = $i1 + -400;

        $c2 = (char) $i1;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        if $i1 < 64281 goto label4;

        if $i1 >= 64336 goto label4;

        $i1 = $i1 - 63138;

        $c2 = (char) $i1;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label2;

     label4:
        if $i1 < 59393 goto label5;

        if $i1 >= 59398 goto label5;

        $i1 = $i1 - 58257;

        $c2 = (char) $i1;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label2;

     label5:
        if $i1 < 59408 goto label6;

        if $i1 >= 59410 goto label6;

        $i1 = $i1 - 58267;

        $c2 = (char) $i1;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label2;

     label6:
        if $i1 < 1114131 goto label7;

        if $i1 >= 1114132 goto label7;

        $i1 = $i1 - 1112933;

        $c2 = (char) $i1;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label2;

     label7:
        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label2;

     label8:
        $r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
