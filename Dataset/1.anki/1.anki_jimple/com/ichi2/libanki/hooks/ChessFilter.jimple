com.ichi2.libanki.hooks.ChessFilter extends com.ichi2.libanki.hooks.Hook
private static final java.util.regex.Pattern fFenOrientationPattern
private static final java.util.regex.Pattern fFenPattern
private static final java.lang.String fRenderFen
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\[fen ?([^\\]]*)\\]([^\\[]+)\\[/fen\\]");

        <com.ichi2.libanki.hooks.ChessFilter: java.util.regex.Pattern fFenPattern> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("orientation *= *\"?(black|white)\"?");

        <com.ichi2.libanki.hooks.ChessFilter: java.util.regex.Pattern fFenOrientationPattern> = $r0;

        return;
    }
    public void <init>()
    {
        com.ichi2.libanki.hooks.ChessFilter r0;

        r0 := @this: com.ichi2.libanki.hooks.ChessFilter;

        specialinvoke r0.<com.ichi2.libanki.hooks.Hook: void <init>()>();

        return;
    }
    private java.lang.String fenToChessboard(java.lang.String)
    {
        com.ichi2.libanki.hooks.ChessFilter r0;
        java.lang.String $r1;
        java.lang.Exception r2;
        java.lang.StringBuffer r3;
        java.lang.Boolean $r4;
        java.util.regex.Pattern $r5;
        java.util.regex.Matcher $r6, $r7;
        boolean $z0;
        java.lang.StringBuilder $r8;
        java.util.Locale $r9;
        java.lang.Object[] $r10;

        r0 := @this: com.ichi2.libanki.hooks.ChessFilter;

        $r1 := @parameter0: java.lang.String;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r5 = <com.ichi2.libanki.hooks.ChessFilter: java.util.regex.Pattern fFenPattern>;

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        r3 = new java.lang.StringBuffer;

        specialinvoke r3.<java.lang.StringBuffer: void <init>()>();

     label1:
        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label8;

        $r1 = virtualinvoke $r6.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        if $r1 == null goto label2;

        $r5 = <com.ichi2.libanki.hooks.ChessFilter: java.util.regex.Pattern fFenOrientationPattern>;

        $r1 = virtualinvoke $r6.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r7 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r7.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke $r7.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        if $r1 == null goto label2;

        $r1 = virtualinvoke $r7.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("black");

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

     label2:
        $r8 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<script type=\"text/javascript\">document.write(");

     label4:
        $r9 = <java.util.Locale: java.util.Locale US>;

     label5:
        $r10 = newarray (java.lang.Object)[2];

        $r1 = virtualinvoke $r6.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r10[0] = $r1;

        $r10[1] = $r4;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r9, "(function (fentxt, showBlack) {    fentxt=fentxt.replace(/ .*/g,\'\');    if (showBlack) {        fentxt = fentxt.split(\"\").reverse().join(\"\");    }    fentxt=fentxt.replace(/r/g,\'x\');    fentxt=fentxt.replace(/\\\\//g,\'</tr><tr>\');    fentxt=fentxt.replace(/1/g,\'<td></td>\');    fentxt=fentxt.replace(/2/g,\'<td></td><td></td>\');    fentxt=fentxt.replace(/3/g,\'<td></td><td></td><td></td>\');    fentxt=fentxt.replace(/4/g,\'<td></td><td></td><td></td><td></td>\');    fentxt=fentxt.replace(/5/g,\'<td></td><td></td><td></td><td></td><td></td>\');    fentxt=fentxt.replace(/6/g,\'<td></td><td></td><td></td><td></td><td></td><td></td>\');    fentxt=fentxt.replace(/7/g,\'<td></td><td></td><td></td><td></td><td></td><td></td><td></td>\');    fentxt=fentxt.replace(/8/g,\'<td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>\');    fentxt=fentxt.replace(/K/g,\'<td>&#9812;</td>\');    fentxt=fentxt.replace(/Q/g,\'<td>&#9813;</td>\');    fentxt=fentxt.replace(/R/g,\'<td>&#9814;</td>\');    fentxt=fentxt.replace(/B/g,\'<td>&#9815;</td>\');    fentxt=fentxt.replace(/N/g,\'<td>&#9816;</td>\');    fentxt=fentxt.replace(/P/g,\'<td>&#9817;</td>\');    fentxt=fentxt.replace(/k/g,\'<td>&#9818;</td>\');    fentxt=fentxt.replace(/q/g,\'<td>&#9819;</td>\');    fentxt=fentxt.replace(/x/g,\'<td>&#9820;</td>\');    fentxt=fentxt.replace(/b/g,\'<td>&#9821;</td>\');    fentxt=fentxt.replace(/n/g,\'<td>&#9822;</td>\');    fentxt=fentxt.replace(/p/g,\'<td>&#9823;</td>\');    return \'<div align=\"center\" width=\"100%%\"><table class=\"chess_board\" cellspacing=\"0\" cellpadding=\"0\"><tr>\'+fentxt+\'</tr></table></div>\';})(\'%s\', %b)", $r10);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");</script>");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r3, $r1);

     label6:
        goto label1;

     label7:
        r2 := @caughtexception;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r2;

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("ChessFilter exception: ", $r10);

        goto label1;

     label8:
        virtualinvoke $r6.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r3);

        $r1 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;

        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
    public static void install(com.ichi2.libanki.hooks.Hooks)
    {
        com.ichi2.libanki.hooks.Hooks $r0;
        com.ichi2.libanki.hooks.ChessFilter $r1;

        $r0 := @parameter0: com.ichi2.libanki.hooks.Hooks;

        $r1 = new com.ichi2.libanki.hooks.ChessFilter;

        specialinvoke $r1.<com.ichi2.libanki.hooks.ChessFilter: void <init>()>();

        virtualinvoke $r0.<com.ichi2.libanki.hooks.Hooks: void addHook(java.lang.String,com.ichi2.libanki.hooks.Hook)>("mungeQA", $r1);

        return;
    }
    public static void uninstall(com.ichi2.libanki.hooks.Hooks)
    {
        com.ichi2.libanki.hooks.Hooks $r0;
        com.ichi2.libanki.hooks.ChessFilter $r1;

        $r0 := @parameter0: com.ichi2.libanki.hooks.Hooks;

        $r1 = new com.ichi2.libanki.hooks.ChessFilter;

        specialinvoke $r1.<com.ichi2.libanki.hooks.ChessFilter: void <init>()>();

        virtualinvoke $r0.<com.ichi2.libanki.hooks.Hooks: void remHook(java.lang.String,com.ichi2.libanki.hooks.Hook)>("mungeQA", $r1);

        return;
    }
    public transient java.lang.Object runFilter(java.lang.Object, java.lang.Object[])
    {
        com.ichi2.libanki.hooks.ChessFilter r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        java.lang.Object $r3;

        r0 := @this: com.ichi2.libanki.hooks.ChessFilter;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object[];

        $r2 = (java.lang.String) $r3;

        $r2 = specialinvoke r0.<com.ichi2.libanki.hooks.ChessFilter: java.lang.String fenToChessboard(java.lang.String)>($r2);

        return $r2;
    }
