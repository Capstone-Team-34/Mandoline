com.ichi2.libanki.hooks.AdvancedStatistics$Review extends java.lang.Object
private com.ichi2.libanki.hooks.AdvancedStatistics$Card card
private final com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier classifier
private com.ichi2.libanki.hooks.AdvancedStatistics$Deck deck
private final int maxReviewsPerDay
private int nPrevRevs
private com.ichi2.libanki.hooks.AdvancedStatistics$Card newCard
private int outcome
private com.ichi2.libanki.hooks.AdvancedStatistics$Card prevCard
private double prob
private final java.util.List reviewList
private final java.util.Stack reviews
private final com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult simulationResult
private int tElapsed
final com.ichi2.libanki.hooks.AdvancedStatistics this$0
    public void <init>(com.ichi2.libanki.hooks.AdvancedStatistics, com.ichi2.libanki.hooks.AdvancedStatistics$Deck, com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult, com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier, java.util.Stack, java.util.List)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$Review r0;
        com.ichi2.libanki.hooks.AdvancedStatistics $r1;
        com.ichi2.libanki.hooks.AdvancedStatistics$Deck $r2;
        com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult $r3;
        com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier $r4;
        java.util.Stack r5;
        java.util.List r6;
        int $i0;
        com.ichi2.libanki.hooks.AdvancedStatistics$Card $r7;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$Review;

        $r1 := @parameter0: com.ichi2.libanki.hooks.AdvancedStatistics;

        $r2 := @parameter1: com.ichi2.libanki.hooks.AdvancedStatistics$Deck;

        $r3 := @parameter2: com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult;

        $r4 := @parameter3: com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier;

        r5 := @parameter4: java.util.Stack;

        r6 := @parameter5: java.util.List;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new com.ichi2.libanki.hooks.AdvancedStatistics$Card;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics this$0>;

        specialinvoke $r7.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,long,int,int,int,int,int)>($r1, 0L, 0, 0, 0, 0, 0);

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card card> = $r7;

        $r7 = new com.ichi2.libanki.hooks.AdvancedStatistics$Card;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics this$0>;

        specialinvoke $r7.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,long,int,int,int,int,int)>($r1, 0L, 0, 0, 0, 0, 0);

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card prevCard> = $r7;

        $r7 = new com.ichi2.libanki.hooks.AdvancedStatistics$Card;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics this$0>;

        specialinvoke $r7.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,long,int,int,int,int,int)>($r1, 0L, 0, 0, 0, 0, 0);

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card newCard> = $r7;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Deck deck> = $r2;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult simulationResult> = $r3;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier classifier> = $r4;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: java.util.Stack reviews> = r5;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: java.util.List reviewList> = r6;

        $i0 = virtualinvoke $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$Deck: int getRevPerDay()>();

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int maxReviewsPerDay> = $i0;

        return;
    }
    private void <init>(com.ichi2.libanki.hooks.AdvancedStatistics, com.ichi2.libanki.hooks.AdvancedStatistics$Review, com.ichi2.libanki.hooks.AdvancedStatistics$Card, int, int, double)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$Review r0, $r2;
        com.ichi2.libanki.hooks.AdvancedStatistics $r1;
        com.ichi2.libanki.hooks.AdvancedStatistics$Card $r3, $r4;
        int $i0, $i1;
        double $d0;
        com.ichi2.libanki.hooks.AdvancedStatistics$Deck $r5;
        com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult $r6;
        com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier $r7;
        java.util.Stack $r8;
        java.util.List $r9;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$Review;

        $r1 := @parameter0: com.ichi2.libanki.hooks.AdvancedStatistics;

        $r2 := @parameter1: com.ichi2.libanki.hooks.AdvancedStatistics$Review;

        $r3 := @parameter2: com.ichi2.libanki.hooks.AdvancedStatistics$Card;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $d0 := @parameter5: double;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new com.ichi2.libanki.hooks.AdvancedStatistics$Card;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics this$0>;

        specialinvoke $r4.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,long,int,int,int,int,int)>($r1, 0L, 0, 0, 0, 0, 0);

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card card> = $r4;

        $r4 = new com.ichi2.libanki.hooks.AdvancedStatistics$Card;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics this$0>;

        specialinvoke $r4.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,long,int,int,int,int,int)>($r1, 0L, 0, 0, 0, 0, 0);

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card prevCard> = $r4;

        $r4 = new com.ichi2.libanki.hooks.AdvancedStatistics$Card;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics this$0>;

        specialinvoke $r4.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,long,int,int,int,int,int)>($r1, 0L, 0, 0, 0, 0, 0);

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card newCard> = $r4;

        $r5 = $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Deck deck>;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Deck deck> = $r5;

        $r4 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card card>;

        virtualinvoke $r4.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: void setAll(com.ichi2.libanki.hooks.AdvancedStatistics$Card)>($r3);

        $r6 = $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult simulationResult>;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult simulationResult> = $r6;

        $r7 = $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier classifier>;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier classifier> = $r7;

        $r8 = $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: java.util.Stack reviews>;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: java.util.Stack reviews> = $r8;

        $r9 = $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: java.util.List reviewList>;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: java.util.List reviewList> = $r9;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int nPrevRevs> = $i0;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed> = $i1;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: double prob> = $d0;

        $r5 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Deck deck>;

        $i0 = virtualinvoke $r5.<com.ichi2.libanki.hooks.AdvancedStatistics$Deck: int getRevPerDay()>();

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int maxReviewsPerDay> = $i0;

        return;
    }
    private void existingCard(com.ichi2.libanki.hooks.AdvancedStatistics$Card, int, int, double)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$Review r0;
        com.ichi2.libanki.hooks.AdvancedStatistics$Card $r1, $r2;
        int $i0, $i1;
        double $d0;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$Review;

        $r1 := @parameter0: com.ichi2.libanki.hooks.AdvancedStatistics$Card;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $d0 := @parameter3: double;

        $r2 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card card>;

        virtualinvoke $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: void setAll(com.ichi2.libanki.hooks.AdvancedStatistics$Card)>($r1);

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int nPrevRevs> = $i0;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed> = $i1;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: double prob> = $d0;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int outcome> = 0;

        return;
    }
    private void rescheduleCurrentReview(int)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$Review r0;
        int $i0, $i1;
        com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult $r1;
        java.util.Stack $r2;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$Review;

        $i0 := @parameter0: int;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult simulationResult>;

        $i1 = virtualinvoke $r1.<com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult: int getnDays()>();

        if $i0 >= $i1 goto label1;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed> = $i0;

        $r2 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: java.util.Stack reviews>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r0);

     label1:
        return;
    }
    private void scheduleCurrentReview(com.ichi2.libanki.hooks.AdvancedStatistics$Card)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$Review r0;
        com.ichi2.libanki.hooks.AdvancedStatistics$Card $r1, $r2;
        int $i0;
        java.util.Stack $r3;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$Review;

        $r1 := @parameter0: com.ichi2.libanki.hooks.AdvancedStatistics$Card;

        $r2 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card card>;

        virtualinvoke $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: void setAll(com.ichi2.libanki.hooks.AdvancedStatistics$Card)>($r1);

        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int outcome>;

        $i0 = $i0 + 1;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int outcome> = $i0;

        $r3 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: java.util.Stack reviews>;

        virtualinvoke $r3.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r0);

        return;
    }
    private void scheduleNextReview(com.ichi2.libanki.hooks.AdvancedStatistics$Card, int, double)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$Review r0, r5;
        com.ichi2.libanki.hooks.AdvancedStatistics$Card $r1;
        int $i0, $i1, $i2;
        double $d0;
        com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult $r2;
        java.util.List $r3;
        java.lang.Object $r4;
        java.util.Stack $r6;
        com.ichi2.libanki.hooks.AdvancedStatistics $r7;
        java.lang.IllegalStateException $r8;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$Review;

        $r1 := @parameter0: com.ichi2.libanki.hooks.AdvancedStatistics$Card;

        $i0 := @parameter1: int;

        $d0 := @parameter2: double;

        $r2 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult simulationResult>;

        $i1 = virtualinvoke $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult: int getnDays()>();

        if $i0 >= $i1 goto label4;

        $r3 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: java.util.List reviewList>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int nPrevRevs>;

        if $i1 <= $i2 goto label2;

        $r3 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: java.util.List reviewList>;

        $i1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int nPrevRevs>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        r5 = (com.ichi2.libanki.hooks.AdvancedStatistics$Review) $r4;

        $i1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int nPrevRevs>;

        $i1 = $i1 + 1;

        specialinvoke r5.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: void existingCard(com.ichi2.libanki.hooks.AdvancedStatistics$Card,int,int,double)>($r1, $i1, $i0, $d0);

     label1:
        $r6 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: java.util.Stack reviews>;

        virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r5);

        return;

     label2:
        $r3 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: java.util.List reviewList>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int nPrevRevs>;

        if $i1 != $i2 goto label3;

        r5 = new com.ichi2.libanki.hooks.AdvancedStatistics$Review;

        $r7 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics this$0>;

        $i1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int nPrevRevs>;

        $i1 = $i1 + 1;

        specialinvoke r5.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: void <init>(com.ichi2.libanki.hooks.AdvancedStatistics,com.ichi2.libanki.hooks.AdvancedStatistics$Review,com.ichi2.libanki.hooks.AdvancedStatistics$Card,int,int,double)>($r7, r0, $r1, $i1, $i0, $d0);

        $r3 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: java.util.List reviewList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label1;

     label3:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("State of previous reviews of this card should have been saved for determining possible future reviews other than the current one.");

        throw $r8;

     label4:
        return;
    }
    private void writeLog(com.ichi2.libanki.hooks.AdvancedStatistics$Card, double)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$Review r0;
        com.ichi2.libanki.hooks.AdvancedStatistics$Card $r1, $r6;
        double $d0, $d1;
        java.lang.String r2, $r4;
        int i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.Object[] $r5;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$Review;

        $r1 := @parameter0: com.ichi2.libanki.hooks.AdvancedStatistics$Card;

        $d0 := @parameter1: double;

        r2 = "";

        i0 = 0;

     label1:
        $i1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int nPrevRevs>;

        if i0 >= $i1 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("t=");

        i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" p=");

        $d1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: double prob>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card prevCard>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>($r4, $r5);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>(r2, $r5);

        return;
    }
    public int getT()
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$Review r0;
        int i0;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$Review;

        i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        return i0;
    }
    public void newCard(com.ichi2.libanki.hooks.AdvancedStatistics$Card, com.ichi2.libanki.hooks.AdvancedStatistics$NewCardSimulator)
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$Review r0;
        com.ichi2.libanki.hooks.AdvancedStatistics$Card $r1;
        com.ichi2.libanki.hooks.AdvancedStatistics$NewCardSimulator $r2;
        int $i0;
        com.ichi2.libanki.hooks.AdvancedStatistics$Deck $r3;
        com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult $r4;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$Review;

        $r1 := @parameter0: com.ichi2.libanki.hooks.AdvancedStatistics$Card;

        $r2 := @parameter1: com.ichi2.libanki.hooks.AdvancedStatistics$NewCardSimulator;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card card> = $r1;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int nPrevRevs> = 0;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: double prob> = 1.0;

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int outcome> = 0;

        $i0 = virtualinvoke $r1.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: int getType()>();

        if $i0 != 0 goto label2;

        $r3 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Deck deck>;

        $i0 = virtualinvoke $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$NewCardSimulator: int simulateNewCard(com.ichi2.libanki.hooks.AdvancedStatistics$Deck)>($r3);

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed> = $i0;

     label1:
        $r4 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult simulationResult>;

        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        virtualinvoke $r4.<com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult: void updateNInState(com.ichi2.libanki.hooks.AdvancedStatistics$Card,int,int,double)>($r1, 0, $i0, 1.0);

        return;

     label2:
        $i0 = virtualinvoke $r1.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: int getDue()>();

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed> = $i0;

        goto label1;
    }
    public void simulateReview()
    {
        com.ichi2.libanki.hooks.AdvancedStatistics$Review r0;
        com.ichi2.libanki.hooks.AdvancedStatistics$Card $r1, $r3, $r8;
        int $i0, $i1, $i3;
        com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult $r2;
        double $d0, $d1;
        com.ichi2.libanki.hooks.AdvancedStatistics $r4;
        com.ichi2.libanki.hooks.AdvancedStatistics$Settings $r5;
        byte $b2;
        com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier $r6;
        com.ichi2.libanki.hooks.AdvancedStatistics$ReviewOutcome $r7;

        r0 := @this: com.ichi2.libanki.hooks.AdvancedStatistics$Review;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card card>;

        $i0 = virtualinvoke $r1.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: int getType()>();

        if $i0 == 0 goto label1;

        $r2 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult simulationResult>;

        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        $i0 = virtualinvoke $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult: int nReviewsDoneToday(int)>($i0);

        $i1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int maxReviewsPerDay>;

        if $i0 < $i1 goto label1;

        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int outcome>;

        if $i0 <= 0 goto label8;

     label1:
        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int outcome>;

        if $i0 != 0 goto label2;

        $r2 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult simulationResult>;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card card>;

        $i0 = virtualinvoke $r1.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: int getType()>();

        $i1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        $d0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: double prob>;

        virtualinvoke $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult: void incrementNReviews(int,int,double)>($i0, $i1, $d0);

     label2:
        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card prevCard>;

        $r3 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card card>;

        virtualinvoke $r1.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: void setAll(com.ichi2.libanki.hooks.AdvancedStatistics$Card)>($r3);

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card newCard>;

        $r3 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card card>;

        virtualinvoke $r1.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: void setAll(com.ichi2.libanki.hooks.AdvancedStatistics$Card)>($r3);

        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        $r4 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics this$0>;

        $r5 = staticinvoke <com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$Settings access$200(com.ichi2.libanki.hooks.AdvancedStatistics)>($r4);

        $i1 = virtualinvoke $r5.<com.ichi2.libanki.hooks.AdvancedStatistics$Settings: int getComputeNDays()>();

        if $i0 >= $i1 goto label3;

        $d0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: double prob>;

        $r4 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics this$0>;

        $r5 = staticinvoke <com.ichi2.libanki.hooks.AdvancedStatistics: com.ichi2.libanki.hooks.AdvancedStatistics$Settings access$200(com.ichi2.libanki.hooks.AdvancedStatistics)>($r4);

        $d1 = virtualinvoke $r5.<com.ichi2.libanki.hooks.AdvancedStatistics$Settings: double getComputeMaxError()>();

        $b2 = $d0 cmpg $d1;

        if $b2 >= 0 goto label7;

     label3:
        $r6 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier classifier>;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card newCard>;

        $r7 = virtualinvoke $r6.<com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier: com.ichi2.libanki.hooks.AdvancedStatistics$ReviewOutcome simSingleReview(com.ichi2.libanki.hooks.AdvancedStatistics$Card)>($r1);

     label4:
        $r1 = virtualinvoke $r7.<com.ichi2.libanki.hooks.AdvancedStatistics$ReviewOutcome: com.ichi2.libanki.hooks.AdvancedStatistics$Card getCard()>();

        r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card newCard> = $r1;

        $d0 = virtualinvoke $r7.<com.ichi2.libanki.hooks.AdvancedStatistics$ReviewOutcome: double getProb()>();

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card newCard>;

        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        virtualinvoke $r1.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: void setLastReview(int)>($i0);

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card newCard>;

        $i0 = virtualinvoke $r1.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: int getCorrect()>();

        if $i0 != 0 goto label5;

        $r2 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult simulationResult>;

        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        $d1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: double prob>;

        $d1 = $d1 * $d0;

        virtualinvoke $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult: void incrementNReviews(int,int,double)>(3, $i0, $d1);

     label5:
        $r2 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult simulationResult>;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card prevCard>;

        $r3 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card newCard>;

        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        $i1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        $r8 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card newCard>;

        $i3 = virtualinvoke $r8.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: int getIvl()>();

        $i1 = $i1 + $i3;

        $d1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: double prob>;

        $d1 = $d1 * $d0;

        virtualinvoke $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult: void updateNInState(com.ichi2.libanki.hooks.AdvancedStatistics$Card,com.ichi2.libanki.hooks.AdvancedStatistics$Card,int,int,double)>($r1, $r3, $i0, $i1, $d1);

        $b2 = $d0 cmpg 1.0;

        if $b2 >= 0 goto label6;

        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int outcome>;

        if $i0 >= 3 goto label6;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card prevCard>;

        specialinvoke r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: void scheduleCurrentReview(com.ichi2.libanki.hooks.AdvancedStatistics$Card)>($r1);

     label6:
        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card newCard>;

        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        $r3 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card newCard>;

        $i1 = virtualinvoke $r3.<com.ichi2.libanki.hooks.AdvancedStatistics$Card: int getIvl()>();

        $i0 = $i0 + $i1;

        $d1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: double prob>;

        $d0 = $d1 * $d0;

        specialinvoke r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: void scheduleNextReview(com.ichi2.libanki.hooks.AdvancedStatistics$Card,int,double)>($r1, $i0, $d0);

        return;

     label7:
        $r6 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier classifier>;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card newCard>;

        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int outcome>;

        $r7 = virtualinvoke $r6.<com.ichi2.libanki.hooks.AdvancedStatistics$EaseClassifier: com.ichi2.libanki.hooks.AdvancedStatistics$ReviewOutcome simSingleReview(com.ichi2.libanki.hooks.AdvancedStatistics$Card,int)>($r1, $i0);

        goto label4;

     label8:
        $r2 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult simulationResult>;

        $r1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card card>;

        $r3 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: com.ichi2.libanki.hooks.AdvancedStatistics$Card card>;

        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        $i1 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        $i1 = $i1 + 1;

        $d0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: double prob>;

        virtualinvoke $r2.<com.ichi2.libanki.hooks.AdvancedStatistics$SimulationResult: void updateNInState(com.ichi2.libanki.hooks.AdvancedStatistics$Card,com.ichi2.libanki.hooks.AdvancedStatistics$Card,int,int,double)>($r1, $r3, $i0, $i1, $d0);

        $i0 = r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: int tElapsed>;

        $i0 = $i0 + 1;

        specialinvoke r0.<com.ichi2.libanki.hooks.AdvancedStatistics$Review: void rescheduleCurrentReview(int)>($i0);

        return;
    }
