com.ichi2.libanki.hooks.Hooks extends java.lang.Object
private static java.util.Map hooks
public static com.ichi2.libanki.hooks.Hooks sInstance
    private void <init>(android.content.Context)
    {
        com.ichi2.libanki.hooks.Hooks r0;
        android.content.Context $r1;
        android.content.SharedPreferences $r2;
        java.util.HashMap $r3;
        com.ichi2.libanki.hooks.FuriganaFilters $r4;
        com.ichi2.libanki.hooks.HintFilter $r5;
        com.ichi2.libanki.LaTeX $r6;
        com.ichi2.libanki.hooks.Leech $r7;
        boolean $z0;

        r0 := @this: com.ichi2.libanki.hooks.Hooks;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r1);

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <com.ichi2.libanki.hooks.Hooks: java.util.Map hooks> = $r3;

        $r4 = new com.ichi2.libanki.hooks.FuriganaFilters;

        specialinvoke $r4.<com.ichi2.libanki.hooks.FuriganaFilters: void <init>()>();

        virtualinvoke $r4.<com.ichi2.libanki.hooks.FuriganaFilters: void install(com.ichi2.libanki.hooks.Hooks)>(r0);

        $r5 = new com.ichi2.libanki.hooks.HintFilter;

        specialinvoke $r5.<com.ichi2.libanki.hooks.HintFilter: void <init>()>();

        virtualinvoke $r5.<com.ichi2.libanki.hooks.HintFilter: void install(com.ichi2.libanki.hooks.Hooks)>(r0);

        $r6 = new com.ichi2.libanki.LaTeX;

        specialinvoke $r6.<com.ichi2.libanki.LaTeX: void <init>()>();

        virtualinvoke $r6.<com.ichi2.libanki.LaTeX: void installHook(com.ichi2.libanki.hooks.Hooks)>(r0);

        $r7 = new com.ichi2.libanki.hooks.Leech;

        specialinvoke $r7.<com.ichi2.libanki.hooks.Leech: void <init>()>();

        virtualinvoke $r7.<com.ichi2.libanki.hooks.Leech: void installHook(com.ichi2.libanki.hooks.Hooks)>(r0);

        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("fixHebrewText", 0);

        if $z0 == 0 goto label1;

        staticinvoke <com.ichi2.libanki.hooks.HebrewFixFilter: void install(com.ichi2.libanki.hooks.Hooks)>(r0);

     label1:
        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("convertFenText", 0);

        if $z0 == 0 goto label2;

        staticinvoke <com.ichi2.libanki.hooks.ChessFilter: void install(com.ichi2.libanki.hooks.Hooks)>(r0);

     label2:
        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("advanced_statistics_enabled", 0);

        if $z0 == 0 goto label3;

        staticinvoke <com.ichi2.libanki.hooks.AdvancedStatistics: void install(com.ichi2.libanki.hooks.Hooks)>(r0);

     label3:
        return;
    }
    public static com.ichi2.libanki.hooks.Hooks getInstance(android.content.Context)
    {
        android.content.Context $r0;
        com.ichi2.libanki.hooks.Hooks $r1;
        java.lang.Throwable $r2;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/ichi2/libanki/hooks/Hooks;";

     label1:
        $r1 = <com.ichi2.libanki.hooks.Hooks: com.ichi2.libanki.hooks.Hooks sInstance>;

        if $r1 != null goto label2;

        $r1 = new com.ichi2.libanki.hooks.Hooks;

        specialinvoke $r1.<com.ichi2.libanki.hooks.Hooks: void <init>(android.content.Context)>($r0);

        <com.ichi2.libanki.hooks.Hooks: com.ichi2.libanki.hooks.Hooks sInstance> = $r1;

     label2:
        $r1 = <com.ichi2.libanki.hooks.Hooks: com.ichi2.libanki.hooks.Hooks sInstance>;

     label3:
        exitmonitor class "Lcom/ichi2/libanki/hooks/Hooks;";

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/ichi2/libanki/hooks/Hooks;";

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
    public static transient java.lang.Object runFilter(java.lang.String, java.lang.Object, java.lang.Object[])
    {
        java.lang.String $r0, r8, $r12;
        java.lang.Object[] $r1;
        java.lang.Exception r2;
        java.lang.Object $r3, $r6;
        java.util.Map $r4;
        java.lang.IllegalStateException $r5;
        java.util.List r7;
        java.util.Iterator $r9;
        boolean $z0;
        com.ichi2.libanki.hooks.Hook r10;
        java.lang.Class $r11;
        java.lang.StringBuilder $r13;

        $r0 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.Object;

        $r1 := @parameter2: java.lang.Object[];

        $r4 = <com.ichi2.libanki.hooks.Hooks: java.util.Map hooks>;

        if $r4 != null goto label01;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Hooks object has not been initialized", $r1);

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Hooks object uninitialized");

        staticinvoke <com.ichi2.anki.AnkiDroidApp: void sendExceptionReport(java.lang.Throwable,java.lang.String)>($r5, "Hooks.runFilter");

        return $r3;

     label01:
        $r4 = <com.ichi2.libanki.hooks.Hooks: java.util.Map hooks>;

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        r7 = (java.util.List) $r6;

        r8 = "";

        if r7 == null goto label10;

     label02:
        $r9 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label04:
        if $z0 == 0 goto label10;

     label05:
        $r6 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.ichi2.libanki.hooks.Hook) $r6;

        $r11 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getCanonicalName()>();

     label06:
        r8 = $r12;

     label07:
        $r3 = virtualinvoke r10.<com.ichi2.libanki.hooks.Hook: java.lang.Object runFilter(java.lang.Object,java.lang.Object[])>($r3, $r1);

     label08:
        goto label03;

     label09:
        r2 := @caughtexception;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = $r0;

        $r1[1] = r8;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Exception while running hook %s : %s", $r1);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in filter ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r0 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label10:
        return $r3;

        catch java.lang.Exception from label02 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }
    public void addHook(java.lang.String, com.ichi2.libanki.hooks.Hook)
    {
        com.ichi2.libanki.hooks.Hooks r0;
        java.lang.String $r1;
        com.ichi2.libanki.hooks.Hook $r2, r8;
        java.util.Map $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.util.ArrayList $r5;
        java.util.List $r6;
        java.util.Iterator $r7;

        r0 := @this: com.ichi2.libanki.hooks.Hooks;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.ichi2.libanki.hooks.Hook;

        $r3 = <com.ichi2.libanki.hooks.Hooks: java.util.Map hooks>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = <com.ichi2.libanki.hooks.Hooks: java.util.Map hooks>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r4 != null goto label2;

     label1:
        $r3 = <com.ichi2.libanki.hooks.Hooks: java.util.Map hooks>;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

     label2:
        $z0 = 0;

        $r3 = <com.ichi2.libanki.hooks.Hooks: java.util.Map hooks>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (java.util.List) $r4;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.ichi2.libanki.hooks.Hook) $r4;

        $z1 = virtualinvoke $r2.<com.ichi2.libanki.hooks.Hook: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label3;

        $z0 = 1;

     label4:
        if $z0 != 0 goto label5;

        $r3 = <com.ichi2.libanki.hooks.Hooks: java.util.Map hooks>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (java.util.List) $r4;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r2);

     label5:
        return;
    }
    public void remHook(java.lang.String, com.ichi2.libanki.hooks.Hook)
    {
        com.ichi2.libanki.hooks.Hooks r0;
        java.lang.String $r1;
        com.ichi2.libanki.hooks.Hook $r2, r7;
        java.util.Map $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.List $r5;
        java.util.Iterator $r6;

        r0 := @this: com.ichi2.libanki.hooks.Hooks;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.ichi2.libanki.hooks.Hook;

        $r3 = <com.ichi2.libanki.hooks.Hooks: java.util.Map hooks>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r3 = <com.ichi2.libanki.hooks.Hooks: java.util.Map hooks>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r4 == null goto label2;

        $r3 = <com.ichi2.libanki.hooks.Hooks: java.util.Map hooks>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.util.List) $r4;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.ichi2.libanki.hooks.Hook) $r4;

        $z0 = virtualinvoke $r2.<com.ichi2.libanki.hooks.Hook: boolean equals(java.lang.Object)>(r7);

        if $z0 == 0 goto label1;

        $r3 = <com.ichi2.libanki.hooks.Hooks: java.util.Map hooks>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.util.List) $r4;

        interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r7);

     label2:
        return;
    }
    public transient void runHook(java.lang.String, java.lang.Object[])
    {
        com.ichi2.libanki.hooks.Hooks r0;
        java.lang.String $r1, r7, $r11;
        java.lang.Object[] $r2;
        java.lang.Exception r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.util.List r6;
        java.util.Iterator $r8;
        boolean $z0;
        com.ichi2.libanki.hooks.Hook r9;
        java.lang.Class $r10;

        r0 := @this: com.ichi2.libanki.hooks.Hooks;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        $r4 = <com.ichi2.libanki.hooks.Hooks: java.util.Map hooks>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (java.util.List) $r5;

        r7 = "";

        if r6 == null goto label9;

     label1:
        $r8 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 == 0 goto label9;

     label4:
        $r5 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.ichi2.libanki.hooks.Hook) $r5;

        $r10 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getCanonicalName()>();

     label5:
        r7 = $r11;

     label6:
        virtualinvoke r9.<com.ichi2.libanki.hooks.Hook: void runHook(java.lang.Object[])>($r2);

     label7:
        goto label2;

     label8:
        r3 := @caughtexception;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = $r1;

        $r2[1] = r7;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r3, "Exception while running hook %s : %s", $r2);

     label9:
        return;

        catch java.lang.Exception from label1 to label3 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }
