com.ichi2.libanki.Note extends java.lang.Object implements java.lang.Cloneable
static final boolean $assertionsDisabled
private com.ichi2.libanki.Collection mCol
private java.lang.String mData
private java.util.Map mFMap
private java.lang.String[] mFields
private int mFlags
private java.lang.String mGuId
private long mId
private long mMid
private long mMod
private org.json.JSONObject mModel
private boolean mNewlyAdded
private long mScm
private java.util.List mTags
private int mUsn
    static void <clinit>()
    {
        boolean $z0;
        java.lang.Class $r0;

        $r0 = class "Lcom/ichi2/libanki/Note;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.ichi2.libanki.Note: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    public void <init>(com.ichi2.libanki.Collection, java.lang.Long)
    {
        com.ichi2.libanki.Note r0;
        com.ichi2.libanki.Collection $r1;
        java.lang.Long $r2;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        $r2 := @parameter1: java.lang.Long;

        specialinvoke r0.<com.ichi2.libanki.Note: void <init>(com.ichi2.libanki.Collection,org.json.JSONObject,java.lang.Long)>($r1, null, $r2);

        return;
    }
    public void <init>(com.ichi2.libanki.Collection, org.json.JSONObject)
    {
        com.ichi2.libanki.Note r0;
        com.ichi2.libanki.Collection $r1;
        org.json.JSONObject $r2;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        $r2 := @parameter1: org.json.JSONObject;

        specialinvoke r0.<com.ichi2.libanki.Note: void <init>(com.ichi2.libanki.Collection,org.json.JSONObject,java.lang.Long)>($r1, $r2, null);

        return;
    }
    public void <init>(com.ichi2.libanki.Collection, org.json.JSONObject, java.lang.Long)
    {
        com.ichi2.libanki.Note r0;
        com.ichi2.libanki.Collection $r1;
        org.json.JSONObject $r2;
        java.lang.Long $r3;
        org.json.JSONException r4;
        boolean $z0;
        java.lang.AssertionError $r5;
        long $l0;
        com.ichi2.libanki.DB $r6;
        java.lang.String $r7;
        java.util.ArrayList $r8;
        org.json.JSONArray $r9;
        int $i1;
        java.lang.String[] $r10;
        com.ichi2.libanki.Models $r11;
        java.util.Map $r12;
        java.lang.RuntimeException $r13;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        $r2 := @parameter1: org.json.JSONObject;

        $r3 := @parameter2: java.lang.Long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <com.ichi2.libanki.Note: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if $r2 == null goto label01;

        if $r3 == null goto label01;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label01:
        r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol> = $r1;

        if $r3 == null goto label02;

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        r0.<com.ichi2.libanki.Note: long mId> = $l0;

        virtualinvoke r0.<com.ichi2.libanki.Note: void load()>();

        return;

     label02:
        $r1 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r6 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $l0 = staticinvoke <com.ichi2.libanki.Utils: long timestampID(com.ichi2.libanki.DB,java.lang.String)>($r6, "notes");

        r0.<com.ichi2.libanki.Note: long mId> = $l0;

        $r7 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String guid64()>();

        r0.<com.ichi2.libanki.Note: java.lang.String mGuId> = $r7;

        r0.<com.ichi2.libanki.Note: org.json.JSONObject mModel> = $r2;

     label03:
        $l0 = virtualinvoke $r2.<org.json.JSONObject: long getLong(java.lang.String)>("id");

     label04:
        r0.<com.ichi2.libanki.Note: long mMid> = $l0;

        $r8 = new java.util.ArrayList;

     label05:
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

     label06:
        r0.<com.ichi2.libanki.Note: java.util.List mTags> = $r8;

     label07:
        $r9 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("flds");

        $i1 = virtualinvoke $r9.<org.json.JSONArray: int length()>();

     label08:
        $r10 = newarray (java.lang.String)[$i1];

        r0.<com.ichi2.libanki.Note: java.lang.String[] mFields> = $r10;

        $r10 = r0.<com.ichi2.libanki.Note: java.lang.String[] mFields>;

     label09:
        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r10, "");

     label10:
        r0.<com.ichi2.libanki.Note: int mFlags> = 0;

        r0.<com.ichi2.libanki.Note: java.lang.String mData> = "";

        $r1 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r11 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Models getModels()>();

        $r2 = r0.<com.ichi2.libanki.Note: org.json.JSONObject mModel>;

        $r12 = virtualinvoke $r11.<com.ichi2.libanki.Models: java.util.Map fieldMap(org.json.JSONObject)>($r2);

        r0.<com.ichi2.libanki.Note: java.util.Map mFMap> = $r12;

        $r1 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $l0 = virtualinvoke $r1.<com.ichi2.libanki.Collection: long getScm()>();

        r0.<com.ichi2.libanki.Note: long mScm> = $l0;

        return;

     label11:
        r4 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);

        throw $r13;

        catch org.json.JSONException from label03 to label04 with label11;
        catch org.json.JSONException from label05 to label06 with label11;
        catch org.json.JSONException from label07 to label08 with label11;
        catch org.json.JSONException from label09 to label10 with label11;
    }
    private int _fieldOrd(java.lang.String)
    {
        com.ichi2.libanki.Note r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        android.util.Pair $r4;
        java.lang.Integer $r5;
        int $i0;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ichi2.libanki.Note: java.util.Map mFMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (android.util.Pair) $r3;

        $r3 = $r4.<android.util.Pair: java.lang.Object first>;

        $r5 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i0;
    }
    private void _postFlush()
    {
        com.ichi2.libanki.Note r0;
        long $l0;
        boolean $z0;
        com.ichi2.libanki.Collection $r1;
        long[] $r2;

        r0 := @this: com.ichi2.libanki.Note;

        $z0 = r0.<com.ichi2.libanki.Note: boolean mNewlyAdded>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r2 = newarray (long)[1];

        $l0 = r0.<com.ichi2.libanki.Note: long mId>;

        $r2[0] = $l0;

        virtualinvoke $r1.<com.ichi2.libanki.Collection: java.util.ArrayList genCards(long[])>($r2);

     label1:
        return;
    }
    private void _preFlush()
    {
        com.ichi2.libanki.Note r0;
        com.ichi2.libanki.Collection $r1;
        com.ichi2.libanki.DB $r2;
        java.lang.StringBuilder $r3;
        long $l0;
        java.lang.String $r4;
        int $i1;
        boolean $z0;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT 1 FROM cards WHERE nid = ");

        $l0 = r0.<com.ichi2.libanki.Note: long mId>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r2.<com.ichi2.libanki.DB: int queryScalar(java.lang.String)>($r4);

        if $i1 != 0 goto label2;

        $z0 = 1;

     label1:
        r0.<com.ichi2.libanki.Note: boolean mNewlyAdded> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    public void addTag(java.lang.String)
    {
        com.ichi2.libanki.Note r0;
        java.lang.String $r1;
        java.util.List $r2;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ichi2.libanki.Note: java.util.List mTags>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }
    public java.util.ArrayList cards()
    {
        com.ichi2.libanki.Note r0;
        java.util.ArrayList r1;
        android.database.Cursor r2, $r8;
        com.ichi2.libanki.Collection $r3;
        com.ichi2.libanki.DB $r4;
        io.requery.android.database.sqlite.SQLiteDatabase $r5;
        java.lang.StringBuilder $r6;
        long $l0;
        java.lang.String $r7;
        boolean $z0;
        com.ichi2.libanki.Card $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.ichi2.libanki.Note;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        r2 = null;

     label01:
        $r3 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r5 = virtualinvoke $r4.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT id FROM cards WHERE nid = ");

        $l0 = r0.<com.ichi2.libanki.Note: long mId>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY ord");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r7, null);

     label02:
        r2 = $r8;

     label03:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToNext()>();

     label04:
        if $z0 == 0 goto label09;

     label05:
        $r3 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $l0 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>(0);

        $r9 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Card getCard(long)>($l0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label06:
        goto label03;

     label07:
        $r10 := @caughtexception;

        if r2 == null goto label08;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label08:
        throw $r10;

     label09:
        if $r8 == null goto label10;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label10:
        return r1;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
    }
    public com.ichi2.libanki.Note clone()
    {
        com.ichi2.libanki.Note r0;
        java.lang.CloneNotSupportedException r1;
        java.lang.Object $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: com.ichi2.libanki.Note;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        r0 = (com.ichi2.libanki.Note) $r2;

        return r0;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r3;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.ichi2.libanki.Note r0;

        r0 := @this: com.ichi2.libanki.Note;

        r0 = virtualinvoke r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Note clone()>();

        return r0;
    }
    public boolean contains(java.lang.String)
    {
        com.ichi2.libanki.Note r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.Map $r2;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ichi2.libanki.Note: java.util.Map mFMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }
    public void delTag(java.lang.String)
    {
        com.ichi2.libanki.Note r0;
        java.lang.String $r1, r6;
        java.util.LinkedList r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.util.LinkedList;

        specialinvoke r2.<java.util.LinkedList: void <init>()>();

        $r3 = r0.<com.ichi2.libanki.Note: java.util.List mTags>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $z0 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        $r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.lang.String) $r5;

        $r3 = r0.<com.ichi2.libanki.Note: java.util.List mTags>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>($r1);

        goto label3;

     label4:
        return;
    }
    public java.lang.Integer dupeOrEmpty()
    {
        com.ichi2.libanki.Note r0;
        java.lang.String r1, $r3;
        long $l0, $l1;
        java.lang.String[] $r2;
        int $i2;
        java.lang.Integer $r4;
        com.ichi2.libanki.Collection $r5;
        com.ichi2.libanki.DB $r6;
        java.lang.StringBuilder $r7;
        byte $b3;
        java.util.ArrayList $r8;
        java.util.Iterator $r9;
        boolean $z0;
        java.lang.Object $r10;

        r0 := @this: com.ichi2.libanki.Note;

        $l1 = 0L;

        $r2 = r0.<com.ichi2.libanki.Note: java.lang.String[] mFields>;

        r1 = $r2[0];

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i2 != 0 goto label1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        return $r4;

     label1:
        $l0 = staticinvoke <com.ichi2.libanki.Utils: long fieldChecksum(java.lang.String)>(r1);

        $r5 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT flds FROM notes WHERE csum = ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND id != ");

        $l0 = r0.<com.ichi2.libanki.Note: long mId>;

        $b3 = $l0 cmp 0L;

        if $b3 == 0 goto label2;

        $l1 = r0.<com.ichi2.libanki.Note: long mId>;

     label2:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND mid = ");

        $l1 = r0.<com.ichi2.libanki.Note: long mMid>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<com.ichi2.libanki.DB: java.util.ArrayList queryColumn(java.lang.Class,java.lang.String,int)>(class "Ljava/lang/String;", r1, 0);

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.lang.String) $r10;

        $r2 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String[] splitFields(java.lang.String)>(r1);

        r1 = $r2[0];

        r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTMLMedia(java.lang.String)>(r1);

        $r2 = r0.<com.ichi2.libanki.Note: java.lang.String[] mFields>;

        $r3 = $r2[0];

        $r3 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTMLMedia(java.lang.String)>($r3);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        return $r4;

     label4:
        return null;
    }
    public void flush()
    {
        com.ichi2.libanki.Note r0;

        r0 := @this: com.ichi2.libanki.Note;

        virtualinvoke r0.<com.ichi2.libanki.Note: void flush(java.lang.Long)>(null);

        return;
    }
    public void flush(java.lang.Long)
    {
        com.ichi2.libanki.Note r0;
        java.lang.Long $r1;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 := @parameter0: java.lang.Long;

        virtualinvoke r0.<com.ichi2.libanki.Note: void flush(java.lang.Long,boolean)>($r1, 1);

        return;
    }
    public void flush(java.lang.Long, boolean)
    {
        com.ichi2.libanki.Note r0;
        java.lang.Long $r1;
        boolean $z0, $z1;
        long $l0, $l1;
        com.ichi2.libanki.Collection $r2;
        byte $b2;
        java.lang.AssertionError $r3;
        int $i3;
        java.lang.String[] $r4;
        com.ichi2.libanki.Models $r5;
        org.json.JSONObject $r6;
        java.lang.String $r7, $r8, $r9, $r11;
        com.ichi2.libanki.DB $r10;
        java.lang.Object[] $r12;
        java.lang.Integer $r13;
        com.ichi2.libanki.Tags $r14;
        java.util.List $r15;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 := @parameter0: java.lang.Long;

        $z0 := @parameter1: boolean;

        $z1 = <com.ichi2.libanki.Note: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $l0 = r0.<com.ichi2.libanki.Note: long mScm>;

        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $l1 = virtualinvoke $r2.<com.ichi2.libanki.Collection: long getScm()>();

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        specialinvoke r0.<com.ichi2.libanki.Note: void _preFlush()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $i3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: int usn()>();

        r0.<com.ichi2.libanki.Note: int mUsn> = $i3;

     label2:
        $r4 = r0.<com.ichi2.libanki.Note: java.lang.String[] mFields>;

        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r5 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Models getModels()>();

        $r6 = r0.<com.ichi2.libanki.Note: org.json.JSONObject mModel>;

        $i3 = virtualinvoke $r5.<com.ichi2.libanki.Models: int sortIdx(org.json.JSONObject)>($r6);

        $r7 = $r4[$i3];

        $r7 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTMLMedia(java.lang.String)>($r7);

        $r8 = virtualinvoke r0.<com.ichi2.libanki.Note: java.lang.String stringTags()>();

        $r9 = virtualinvoke r0.<com.ichi2.libanki.Note: java.lang.String joinedFields()>();

        if $r1 != null goto label3;

        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r10 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r4 = newarray (java.lang.String)[3];

        $l0 = r0.<com.ichi2.libanki.Note: long mId>;

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r4[0] = $r11;

        $r4[1] = $r8;

        $r4[2] = $r9;

        $i3 = virtualinvoke $r10.<com.ichi2.libanki.DB: int queryScalar(java.lang.String,java.lang.String[])>("select 1 from notes where id = ? and tags = ? and flds = ?", $r4);

        if $i3 <= 0 goto label3;

        return;

     label3:
        $r4 = r0.<com.ichi2.libanki.Note: java.lang.String[] mFields>;

        $r11 = $r4[0];

        $l0 = staticinvoke <com.ichi2.libanki.Utils: long fieldChecksum(java.lang.String)>($r11);

        if $r1 == null goto label5;

        $l1 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

     label4:
        r0.<com.ichi2.libanki.Note: long mMod> = $l1;

        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r10 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r12 = newarray (java.lang.Object)[11];

        $l1 = r0.<com.ichi2.libanki.Note: long mId>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r12[0] = $r1;

        $r11 = r0.<com.ichi2.libanki.Note: java.lang.String mGuId>;

        $r12[1] = $r11;

        $l1 = r0.<com.ichi2.libanki.Note: long mMid>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r12[2] = $r1;

        $l1 = r0.<com.ichi2.libanki.Note: long mMod>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r12[3] = $r1;

        $i3 = r0.<com.ichi2.libanki.Note: int mUsn>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r12[4] = $r13;

        $r12[5] = $r8;

        $r12[6] = $r9;

        $r12[7] = $r7;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r12[8] = $r1;

        $i3 = r0.<com.ichi2.libanki.Note: int mFlags>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r12[9] = $r13;

        $r7 = r0.<com.ichi2.libanki.Note: java.lang.String mData>;

        $r12[10] = $r7;

        virtualinvoke $r10.<com.ichi2.libanki.DB: void execute(java.lang.String,java.lang.Object[])>("insert or replace into notes values (?,?,?,?,?,?,?,?,?,?,?)", $r12);

        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r14 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Tags getTags()>();

        $r15 = r0.<com.ichi2.libanki.Note: java.util.List mTags>;

        virtualinvoke $r14.<com.ichi2.libanki.Tags: void register(java.lang.Iterable)>($r15);

        specialinvoke r0.<com.ichi2.libanki.Note: void _postFlush()>();

        return;

     label5:
        $l1 = staticinvoke <com.ichi2.libanki.Utils: long intNow()>();

        goto label4;
    }
    public com.ichi2.libanki.Collection getCol()
    {
        com.ichi2.libanki.Note r0;
        com.ichi2.libanki.Collection r1;

        r0 := @this: com.ichi2.libanki.Note;

        r1 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        return r1;
    }
    public java.lang.String[] getFields()
    {
        com.ichi2.libanki.Note r0;
        java.lang.String[] r1;

        r0 := @this: com.ichi2.libanki.Note;

        r1 = r0.<com.ichi2.libanki.Note: java.lang.String[] mFields>;

        return r1;
    }
    public long getId()
    {
        com.ichi2.libanki.Note r0;
        long l0;

        r0 := @this: com.ichi2.libanki.Note;

        l0 = r0.<com.ichi2.libanki.Note: long mId>;

        return l0;
    }
    public java.lang.String getItem(java.lang.String)
    {
        com.ichi2.libanki.Note r0;
        java.lang.String $r1;
        int $i0;
        java.lang.String[] $r2;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ichi2.libanki.Note: java.lang.String[] mFields>;

        $i0 = specialinvoke r0.<com.ichi2.libanki.Note: int _fieldOrd(java.lang.String)>($r1);

        $r1 = $r2[$i0];

        return $r1;
    }
    public long getMid()
    {
        com.ichi2.libanki.Note r0;
        long l0;

        r0 := @this: com.ichi2.libanki.Note;

        l0 = r0.<com.ichi2.libanki.Note: long mMid>;

        return l0;
    }
    public long getMod()
    {
        com.ichi2.libanki.Note r0;
        long l0;

        r0 := @this: com.ichi2.libanki.Note;

        l0 = r0.<com.ichi2.libanki.Note: long mMod>;

        return l0;
    }
    public java.lang.String getSFld()
    {
        com.ichi2.libanki.Note r0;
        com.ichi2.libanki.Collection $r1;
        com.ichi2.libanki.DB $r2;
        java.lang.StringBuilder $r3;
        long $l0;
        java.lang.String $r4;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT sfld FROM notes WHERE id = ");

        $l0 = r0.<com.ichi2.libanki.Note: long mId>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<com.ichi2.libanki.DB: java.lang.String queryString(java.lang.String)>($r4);

        return $r4;
    }
    public java.util.List getTags()
    {
        com.ichi2.libanki.Note r0;
        java.util.List r1;

        r0 := @this: com.ichi2.libanki.Note;

        r1 = r0.<com.ichi2.libanki.Note: java.util.List mTags>;

        return r1;
    }
    public boolean hasTag(java.lang.String)
    {
        com.ichi2.libanki.Note r0;
        java.lang.String $r1;
        java.util.List $r2;
        com.ichi2.libanki.Collection $r3;
        com.ichi2.libanki.Tags $r4;
        boolean $z0;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Tags getTags()>();

        $r2 = r0.<com.ichi2.libanki.Note: java.util.List mTags>;

        $z0 = virtualinvoke $r4.<com.ichi2.libanki.Tags: boolean inList(java.lang.String,java.lang.Iterable)>($r1, $r2);

        return $z0;
    }
    public java.lang.String[][] items()
    {
        com.ichi2.libanki.Note r0;
        java.util.Map $r1;
        int $i0;
        int[] $r2;
        java.lang.Object $r3;
        java.lang.String[][] r4;
        java.util.Set $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.String r7;
        android.util.Pair $r8;
        java.lang.Integer $r9;
        java.lang.String[] $r10, $r11;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 = r0.<com.ichi2.libanki.Note: java.util.Map mFMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        $r2 = newarray (int)[2];

        $r2[0] = $i0;

        $r2[1] = 2;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(class "Ljava/lang/String;", $r2);

        r4 = (java.lang.String[][]) $r3;

        $r1 = r0.<com.ichi2.libanki.Note: java.util.Map mFMap>;

        $r5 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r3;

        $r1 = r0.<com.ichi2.libanki.Note: java.util.Map mFMap>;

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        $r8 = (android.util.Pair) $r3;

        $r3 = $r8.<android.util.Pair: java.lang.Object first>;

        $r9 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $r10 = r4[$i0];

        $r10[0] = r7;

        $r10 = r4[$i0];

        $r11 = r0.<com.ichi2.libanki.Note: java.lang.String[] mFields>;

        r7 = $r11[$i0];

        $r10[1] = r7;

        goto label1;

     label2:
        return r4;
    }
    public java.lang.String joinedFields()
    {
        com.ichi2.libanki.Note r0;
        java.lang.String $r1;
        java.lang.String[] $r2;

        r0 := @this: com.ichi2.libanki.Note;

        $r2 = r0.<com.ichi2.libanki.Note: java.lang.String[] mFields>;

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String joinFields(java.lang.String[])>($r2);

        return $r1;
    }
    public java.lang.String[] keys()
    {
        com.ichi2.libanki.Note r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.lang.Object[] $r3;
        java.lang.String[] $r4;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 = r0.<com.ichi2.libanki.Note: java.util.Map mFMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray()>();

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }
    public void load()
    {
        com.ichi2.libanki.Note r0;
        android.database.Cursor r1, $r7;
        com.ichi2.libanki.Collection $r2;
        com.ichi2.libanki.DB $r3;
        io.requery.android.database.sqlite.SQLiteDatabase $r4;
        java.lang.StringBuilder $r5;
        long $l0;
        java.lang.String $r6;
        boolean $z0;
        java.lang.RuntimeException $r8;
        java.lang.Throwable $r9;
        int $i1;
        com.ichi2.libanki.Tags $r10;
        java.util.List $r11;
        java.lang.String[] $r12;
        com.ichi2.libanki.Models $r13;
        org.json.JSONObject $r14;
        java.util.Map $r15;

        r0 := @this: com.ichi2.libanki.Note;

        r1 = null;

     label01:
        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT guid, mid, mod, usn, tags, flds, flags, data FROM notes WHERE id = ");

        $l0 = r0.<com.ichi2.libanki.Note: long mId>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r6, null);

     label02:
        r1 = $r7;

     label03:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label08;

     label05:
        $r8 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notes.load(): No result from query for note ");

        $l0 = r0.<com.ichi2.libanki.Note: long mId>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r8;

     label06:
        $r9 := @caughtexception;

        if r1 == null goto label07;

        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label07:
        throw $r9;

     label08:
        $r6 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>(0);

        r0.<com.ichi2.libanki.Note: java.lang.String mGuId> = $r6;

        $l0 = interfaceinvoke $r7.<android.database.Cursor: long getLong(int)>(1);

        r0.<com.ichi2.libanki.Note: long mMid> = $l0;

        $l0 = interfaceinvoke $r7.<android.database.Cursor: long getLong(int)>(2);

        r0.<com.ichi2.libanki.Note: long mMod> = $l0;

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(3);

        r0.<com.ichi2.libanki.Note: int mUsn> = $i1;

        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r10 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Tags getTags()>();

        $r6 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>(4);

        $r11 = virtualinvoke $r10.<com.ichi2.libanki.Tags: java.util.List split(java.lang.String)>($r6);

        r0.<com.ichi2.libanki.Note: java.util.List mTags> = $r11;

        $r6 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>(5);

        $r12 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String[] splitFields(java.lang.String)>($r6);

        r0.<com.ichi2.libanki.Note: java.lang.String[] mFields> = $r12;

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(6);

        r0.<com.ichi2.libanki.Note: int mFlags> = $i1;

        $r6 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>(7);

        r0.<com.ichi2.libanki.Note: java.lang.String mData> = $r6;

        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r13 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Models getModels()>();

        $l0 = r0.<com.ichi2.libanki.Note: long mMid>;

        $r14 = virtualinvoke $r13.<com.ichi2.libanki.Models: org.json.JSONObject get(long)>($l0);

        r0.<com.ichi2.libanki.Note: org.json.JSONObject mModel> = $r14;

        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r13 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Models getModels()>();

        $r14 = r0.<com.ichi2.libanki.Note: org.json.JSONObject mModel>;

        $r15 = virtualinvoke $r13.<com.ichi2.libanki.Models: java.util.Map fieldMap(org.json.JSONObject)>($r14);

        r0.<com.ichi2.libanki.Note: java.util.Map mFMap> = $r15;

        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $l0 = virtualinvoke $r2.<com.ichi2.libanki.Collection: long getScm()>();

        r0.<com.ichi2.libanki.Note: long mScm> = $l0;

     label09:
        if $r7 == null goto label10;

        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
    }
    public org.json.JSONObject model()
    {
        com.ichi2.libanki.Note r0;
        org.json.JSONObject r1;

        r0 := @this: com.ichi2.libanki.Note;

        r1 = r0.<com.ichi2.libanki.Note: org.json.JSONObject mModel>;

        return r1;
    }
    public void setField(int, java.lang.String)
    {
        com.ichi2.libanki.Note r0;
        int $i0;
        java.lang.String $r1;
        java.lang.String[] $r2;

        r0 := @this: com.ichi2.libanki.Note;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.ichi2.libanki.Note: java.lang.String[] mFields>;

        $r2[$i0] = $r1;

        return;
    }
    public void setItem(java.lang.String, java.lang.String)
    {
        com.ichi2.libanki.Note r0;
        java.lang.String $r1, $r2;
        java.lang.String[] $r3;
        int $i0;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.ichi2.libanki.Note: java.lang.String[] mFields>;

        $i0 = specialinvoke r0.<com.ichi2.libanki.Note: int _fieldOrd(java.lang.String)>($r1);

        $r3[$i0] = $r2;

        return;
    }
    public void setTagsFromStr(java.lang.String)
    {
        com.ichi2.libanki.Note r0;
        java.lang.String $r1;
        com.ichi2.libanki.Collection $r2;
        com.ichi2.libanki.Tags $r3;
        java.util.List $r4;

        r0 := @this: com.ichi2.libanki.Note;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Tags getTags()>();

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Tags: java.util.List split(java.lang.String)>($r1);

        r0.<com.ichi2.libanki.Note: java.util.List mTags> = $r4;

        return;
    }
    public java.lang.String stringTags()
    {
        com.ichi2.libanki.Note r0;
        java.util.List $r1;
        com.ichi2.libanki.Collection $r2;
        com.ichi2.libanki.Tags $r3, $r4;
        java.util.TreeSet $r5;
        java.lang.String $r6;

        r0 := @this: com.ichi2.libanki.Note;

        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Tags getTags()>();

        $r2 = r0.<com.ichi2.libanki.Note: com.ichi2.libanki.Collection mCol>;

        $r4 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Tags getTags()>();

        $r1 = r0.<com.ichi2.libanki.Note: java.util.List mTags>;

        $r5 = virtualinvoke $r4.<com.ichi2.libanki.Tags: java.util.TreeSet canonify(java.util.List)>($r1);

        $r6 = virtualinvoke $r3.<com.ichi2.libanki.Tags: java.lang.String join(java.util.Collection)>($r5);

        return $r6;
    }
    public java.lang.String[] values()
    {
        com.ichi2.libanki.Note r0;
        java.lang.String[] r1;

        r0 := @this: com.ichi2.libanki.Note;

        r1 = r0.<com.ichi2.libanki.Note: java.lang.String[] mFields>;

        return r1;
    }
