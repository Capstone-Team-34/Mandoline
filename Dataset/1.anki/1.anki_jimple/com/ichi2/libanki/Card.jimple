com.ichi2.libanki.Card extends java.lang.Object implements java.lang.Cloneable
static final boolean $assertionsDisabled
public static final int QUEUE_SCHED_BRD
public static final int QUEUE_SUSP
public static final int QUEUE_USER_BRD
public static final java.util.Set SKIP_PRINT
public static final int TYPE_LRN
public static final int TYPE_NEW
public static final int TYPE_REV
private com.ichi2.libanki.Collection mCol
private java.lang.String mData
private long mDid
private long mDue
private double mElapsedTime
private int mFactor
private int mFlags
private long mId
private int mIvl
private int mLapses
private int mLastIvl
private int mLeft
private long mMod
private long mNid
private com.ichi2.libanki.Note mNote
private long mODid
private long mODue
private int mOrd
private java.util.HashMap mQA
private int mQueue
private int mReps
private double mTimerStarted
private int mType
private int mUsn
private boolean mWasNew
    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;
        java.util.HashSet $r1;
        java.lang.String[] $r2;
        java.util.List $r3;

        $r0 = class "Lcom/ichi2/libanki/Card;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.ichi2.libanki.Card: boolean $assertionsDisabled> = $z0;

        $r1 = new java.util.HashSet;

        $r2 = newarray (java.lang.String)[10];

        $r2[0] = "SKIP_PRINT";

        $r2[1] = "$assertionsDisabled";

        $r2[2] = "TYPE_LRN";

        $r2[3] = "TYPE_NEW";

        $r2[4] = "TYPE_REV";

        $r2[5] = "mNote";

        $r2[6] = "mQA";

        $r2[7] = "mCol";

        $r2[8] = "mTimerStarted";

        $r2[9] = "mTimerStopped";

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        <com.ichi2.libanki.Card: java.util.Set SKIP_PRINT> = $r1;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    public void <init>(com.ichi2.libanki.Collection)
    {
        com.ichi2.libanki.Card r0;
        com.ichi2.libanki.Collection $r1;

        r0 := @this: com.ichi2.libanki.Card;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        specialinvoke r0.<com.ichi2.libanki.Card: void <init>(com.ichi2.libanki.Collection,java.lang.Long)>($r1, null);

        return;
    }
    public void <init>(com.ichi2.libanki.Collection, java.lang.Long)
    {
        com.ichi2.libanki.Card r0;
        com.ichi2.libanki.Collection $r1;
        java.lang.Long $r2;
        long $l0;
        com.ichi2.libanki.DB $r3;

        r0 := @this: com.ichi2.libanki.Card;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        $r2 := @parameter1: java.lang.Long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol> = $r1;

        r0.<com.ichi2.libanki.Card: double mTimerStarted> = #NaN;

        r0.<com.ichi2.libanki.Card: java.util.HashMap mQA> = null;

        r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Note mNote> = null;

        if $r2 == null goto label1;

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        r0.<com.ichi2.libanki.Card: long mId> = $l0;

        virtualinvoke r0.<com.ichi2.libanki.Card: void load()>();

        return;

     label1:
        $r1 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $r3 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $l0 = staticinvoke <com.ichi2.libanki.Utils: long timestampID(com.ichi2.libanki.DB,java.lang.String)>($r3, "cards");

        r0.<com.ichi2.libanki.Card: long mId> = $l0;

        r0.<com.ichi2.libanki.Card: long mDid> = 1L;

        r0.<com.ichi2.libanki.Card: int mType> = 0;

        r0.<com.ichi2.libanki.Card: int mQueue> = 0;

        r0.<com.ichi2.libanki.Card: int mIvl> = 0;

        r0.<com.ichi2.libanki.Card: int mFactor> = 0;

        r0.<com.ichi2.libanki.Card: int mReps> = 0;

        r0.<com.ichi2.libanki.Card: int mLapses> = 0;

        r0.<com.ichi2.libanki.Card: int mLeft> = 0;

        r0.<com.ichi2.libanki.Card: long mODue> = 0L;

        r0.<com.ichi2.libanki.Card: long mODid> = 0L;

        r0.<com.ichi2.libanki.Card: int mFlags> = 0;

        r0.<com.ichi2.libanki.Card: java.lang.String mData> = "";

        return;
    }
    public java.util.HashMap _getQA()
    {
        com.ichi2.libanki.Card r0;
        java.util.HashMap $r1;

        r0 := @this: com.ichi2.libanki.Card;

        $r1 = virtualinvoke r0.<com.ichi2.libanki.Card: java.util.HashMap _getQA(boolean)>(0);

        return $r1;
    }
    public java.util.HashMap _getQA(boolean)
    {
        com.ichi2.libanki.Card r0;
        boolean $z0;
        java.util.HashMap $r1;

        r0 := @this: com.ichi2.libanki.Card;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.ichi2.libanki.Card: java.util.HashMap _getQA(boolean,boolean)>($z0, 0);

        return $r1;
    }
    public java.util.HashMap _getQA(boolean, boolean)
    {
        com.ichi2.libanki.Card r0;
        boolean $z0, $z1;
        java.lang.Object[] r1;
        java.util.HashMap $r2;
        com.ichi2.libanki.Note $r3;
        org.json.JSONObject $r4, $r5;
        long $l0;
        java.lang.Long $r6;
        byte $b1;
        int $i2;
        java.lang.Integer $r7;
        java.lang.String $r8, $r9;
        com.ichi2.libanki.Collection $r10;
        org.json.JSONException r11, r13;
        java.lang.RuntimeException $r12;

        r0 := @this: com.ichi2.libanki.Card;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r2 = r0.<com.ichi2.libanki.Card: java.util.HashMap mQA>;

        if $r2 == null goto label01;

        if $z0 == 0 goto label20;

     label01:
        $r3 = virtualinvoke r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Note note(boolean)>($z0);

        $r4 = virtualinvoke r0.<com.ichi2.libanki.Card: org.json.JSONObject model()>();

        $r5 = virtualinvoke r0.<com.ichi2.libanki.Card: org.json.JSONObject template()>();

        r1 = newarray (java.lang.Object)[7];

        $l0 = r0.<com.ichi2.libanki.Card: long mId>;

     label02:
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label03:
        r1[0] = $r6;

     label04:
        $l0 = virtualinvoke $r3.<com.ichi2.libanki.Note: long getId()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label05:
        r1[1] = $r6;

     label06:
        $l0 = virtualinvoke $r4.<org.json.JSONObject: long getLong(java.lang.String)>("id");

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label07:
        r1[2] = $r6;

        $l0 = r0.<com.ichi2.libanki.Card: long mODid>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label21;

        $l0 = r0.<com.ichi2.libanki.Card: long mODid>;

     label08:
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label09:
        r1[3] = $r6;

        $i2 = r0.<com.ichi2.libanki.Card: int mOrd>;

     label10:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label11:
        r1[4] = $r7;

     label12:
        $r8 = virtualinvoke $r3.<com.ichi2.libanki.Note: java.lang.String stringTags()>();

     label13:
        r1[5] = $r8;

     label14:
        $r8 = virtualinvoke $r3.<com.ichi2.libanki.Note: java.lang.String joinedFields()>();

     label15:
        r1[6] = $r8;

        if $z1 == 0 goto label24;

     label16:
        $r8 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("bqfmt");

        $r9 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("bafmt");

     label17:
        $r10 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

     label18:
        $r2 = virtualinvoke $r10.<com.ichi2.libanki.Collection: java.util.HashMap _renderQA(java.lang.Object[],java.lang.String,java.lang.String)>(r1, $r8, $r9);

     label19:
        r0.<com.ichi2.libanki.Card: java.util.HashMap mQA> = $r2;

     label20:
        $r2 = r0.<com.ichi2.libanki.Card: java.util.HashMap mQA>;

        return $r2;

     label21:
        $l0 = r0.<com.ichi2.libanki.Card: long mDid>;

        goto label08;

     label22:
        r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r11);

        throw $r12;

     label23:
        r13 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r13);

        throw $r12;

     label24:
        $r10 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $r2 = virtualinvoke $r10.<com.ichi2.libanki.Collection: java.util.HashMap _renderQA(java.lang.Object[])>(r1);

        r0.<com.ichi2.libanki.Card: java.util.HashMap mQA> = $r2;

        goto label20;

        catch org.json.JSONException from label02 to label03 with label22;
        catch org.json.JSONException from label04 to label05 with label22;
        catch org.json.JSONException from label06 to label07 with label22;
        catch org.json.JSONException from label08 to label09 with label22;
        catch org.json.JSONException from label10 to label11 with label22;
        catch org.json.JSONException from label12 to label13 with label22;
        catch org.json.JSONException from label14 to label15 with label22;
        catch org.json.JSONException from label16 to label17 with label23;
        catch org.json.JSONException from label18 to label19 with label23;
    }
    public java.lang.String a()
    {
        com.ichi2.libanki.Card r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;

        r0 := @this: com.ichi2.libanki.Card;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<com.ichi2.libanki.Card: java.lang.String css()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke r0.<com.ichi2.libanki.Card: java.util.HashMap _getQA()>();

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("a");

        $r2 = (java.lang.String) $r4;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public com.ichi2.libanki.Card clone()
    {
        com.ichi2.libanki.Card r0;
        java.lang.CloneNotSupportedException r1;
        java.lang.Object $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: com.ichi2.libanki.Card;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        r0 = (com.ichi2.libanki.Card) $r2;

        return r0;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r3;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }
    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.ichi2.libanki.Card r0;

        r0 := @this: com.ichi2.libanki.Card;

        r0 = virtualinvoke r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Card clone()>();

        return r0;
    }
    public java.lang.String css()
    {
        com.ichi2.libanki.Card r0;
        org.json.JSONException r1;
        java.util.Locale $r2;
        java.lang.Object[] $r3;
        org.json.JSONObject $r4;
        java.lang.Object $r5;
        java.lang.String $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: com.ichi2.libanki.Card;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[1];

     label1:
        $r4 = virtualinvoke r0.<com.ichi2.libanki.Card: org.json.JSONObject model()>();

        $r5 = virtualinvoke $r4.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("css");

     label2:
        $r3[0] = $r5;

     label3:
        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "<style>%s</style>", $r3);

     label4:
        return $r6;

     label5:
        r1 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r7;

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
    }
    public void flush()
    {
        com.ichi2.libanki.Card r0;

        r0 := @this: com.ichi2.libanki.Card;

        virtualinvoke r0.<com.ichi2.libanki.Card: void flush(boolean)>(1);

        return;
    }
    public void flush(boolean)
    {
        com.ichi2.libanki.Card r0;
        boolean $z0;
        long $l0, $l3;
        com.ichi2.libanki.Collection $r1;
        int $i1;
        byte $b2;
        com.ichi2.libanki.Decks $r2;
        java.lang.Long $r3;
        java.lang.AssertionError $r4;
        com.ichi2.libanki.DB $r5;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;
        java.lang.String $r8;

        r0 := @this: com.ichi2.libanki.Card;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $l0 = staticinvoke <com.ichi2.libanki.Utils: long intNow()>();

        r0.<com.ichi2.libanki.Card: long mMod> = $l0;

        $r1 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $i1 = virtualinvoke $r1.<com.ichi2.libanki.Collection: int usn()>();

        r0.<com.ichi2.libanki.Card: int mUsn> = $i1;

     label1:
        $i1 = r0.<com.ichi2.libanki.Card: int mQueue>;

        if $i1 != 2 goto label2;

        $l0 = r0.<com.ichi2.libanki.Card: long mODue>;

        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label2;

        $r1 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l0 = r0.<com.ichi2.libanki.Card: long mDid>;

        $z0 = virtualinvoke $r2.<com.ichi2.libanki.Decks: boolean isDyn(long)>($l0);

        if $z0 != 0 goto label2;

     label2:
        $z0 = <com.ichi2.libanki.Card: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $l0 = r0.<com.ichi2.libanki.Card: long mDue>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>("4294967296");

        $l3 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        $b2 = $l0 cmp $l3;

        if $b2 < 0 goto label3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label3:
        $r1 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $r5 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r6 = newarray (java.lang.Object)[18];

        $l0 = r0.<com.ichi2.libanki.Card: long mId>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[0] = $r3;

        $l0 = r0.<com.ichi2.libanki.Card: long mNid>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[1] = $r3;

        $l0 = r0.<com.ichi2.libanki.Card: long mDid>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[2] = $r3;

        $i1 = r0.<com.ichi2.libanki.Card: int mOrd>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[3] = $r7;

        $l0 = r0.<com.ichi2.libanki.Card: long mMod>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[4] = $r3;

        $i1 = r0.<com.ichi2.libanki.Card: int mUsn>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[5] = $r7;

        $i1 = r0.<com.ichi2.libanki.Card: int mType>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[6] = $r7;

        $i1 = r0.<com.ichi2.libanki.Card: int mQueue>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[7] = $r7;

        $l0 = r0.<com.ichi2.libanki.Card: long mDue>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[8] = $r3;

        $i1 = r0.<com.ichi2.libanki.Card: int mIvl>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[9] = $r7;

        $i1 = r0.<com.ichi2.libanki.Card: int mFactor>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[10] = $r7;

        $i1 = r0.<com.ichi2.libanki.Card: int mReps>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[11] = $r7;

        $i1 = r0.<com.ichi2.libanki.Card: int mLapses>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[12] = $r7;

        $i1 = r0.<com.ichi2.libanki.Card: int mLeft>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[13] = $r7;

        $l0 = r0.<com.ichi2.libanki.Card: long mODue>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[14] = $r3;

        $l0 = r0.<com.ichi2.libanki.Card: long mODid>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[15] = $r3;

        $i1 = r0.<com.ichi2.libanki.Card: int mFlags>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[16] = $r7;

        $r8 = r0.<com.ichi2.libanki.Card: java.lang.String mData>;

        $r6[17] = $r8;

        virtualinvoke $r5.<com.ichi2.libanki.DB: void execute(java.lang.String,java.lang.Object[])>("insert or replace into cards values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", $r6);

        $r1 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r0;

        virtualinvoke $r1.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r6);

        return;
    }
    public void flushSched()
    {
        com.ichi2.libanki.Card r0;
        android.content.ContentValues r1;
        long $l0, $l3;
        com.ichi2.libanki.Collection $r2;
        int $i1;
        byte $b2;
        com.ichi2.libanki.Decks $r3;
        boolean $z0;
        java.lang.Long $r4;
        java.lang.AssertionError $r5;
        java.lang.Integer $r6;
        com.ichi2.libanki.DB $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        java.lang.Object[] $r10;

        r0 := @this: com.ichi2.libanki.Card;

        $l0 = staticinvoke <com.ichi2.libanki.Utils: long intNow()>();

        r0.<com.ichi2.libanki.Card: long mMod> = $l0;

        $r2 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $i1 = virtualinvoke $r2.<com.ichi2.libanki.Collection: int usn()>();

        r0.<com.ichi2.libanki.Card: int mUsn> = $i1;

        $i1 = r0.<com.ichi2.libanki.Card: int mQueue>;

        if $i1 != 2 goto label1;

        $l0 = r0.<com.ichi2.libanki.Card: long mODue>;

        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label1;

        $r2 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l0 = r0.<com.ichi2.libanki.Card: long mDid>;

        $z0 = virtualinvoke $r3.<com.ichi2.libanki.Decks: boolean isDyn(long)>($l0);

        if $z0 != 0 goto label1;

     label1:
        $z0 = <com.ichi2.libanki.Card: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $l0 = r0.<com.ichi2.libanki.Card: long mDue>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>("4294967296");

        $l3 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $b2 = $l0 cmp $l3;

        if $b2 < 0 goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        r1 = new android.content.ContentValues;

        specialinvoke r1.<android.content.ContentValues: void <init>()>();

        $l0 = r0.<com.ichi2.libanki.Card: long mMod>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("mod", $r4);

        $i1 = r0.<com.ichi2.libanki.Card: int mUsn>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("usn", $r6);

        $i1 = r0.<com.ichi2.libanki.Card: int mType>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("type", $r6);

        $i1 = r0.<com.ichi2.libanki.Card: int mQueue>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("queue", $r6);

        $l0 = r0.<com.ichi2.libanki.Card: long mDue>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("due", $r4);

        $i1 = r0.<com.ichi2.libanki.Card: int mIvl>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("ivl", $r6);

        $i1 = r0.<com.ichi2.libanki.Card: int mFactor>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("factor", $r6);

        $i1 = r0.<com.ichi2.libanki.Card: int mReps>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("reps", $r6);

        $i1 = r0.<com.ichi2.libanki.Card: int mLapses>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("lapses", $r6);

        $i1 = r0.<com.ichi2.libanki.Card: int mLeft>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("left", $r6);

        $l0 = r0.<com.ichi2.libanki.Card: long mODue>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("odue", $r4);

        $l0 = r0.<com.ichi2.libanki.Card: long mODid>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("odid", $r4);

        $l0 = r0.<com.ichi2.libanki.Card: long mDid>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("did", $r4);

        $r2 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $r7 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id = ");

        $l0 = r0.<com.ichi2.libanki.Card: long mId>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.ichi2.libanki.DB: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("cards", r1, $r9, null);

        $r2 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r0;

        virtualinvoke $r2.<com.ichi2.libanki.Collection: void log(java.lang.Object[])>($r10);

        return;
    }
    public com.ichi2.libanki.Collection getCol()
    {
        com.ichi2.libanki.Card r0;
        com.ichi2.libanki.Collection r1;

        r0 := @this: com.ichi2.libanki.Card;

        r1 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        return r1;
    }
    public long getDid()
    {
        com.ichi2.libanki.Card r0;
        long l0;

        r0 := @this: com.ichi2.libanki.Card;

        l0 = r0.<com.ichi2.libanki.Card: long mDid>;

        return l0;
    }
    public long getDue()
    {
        com.ichi2.libanki.Card r0;
        long l0;

        r0 := @this: com.ichi2.libanki.Card;

        l0 = r0.<com.ichi2.libanki.Card: long mDue>;

        return l0;
    }
    public int getFactor()
    {
        com.ichi2.libanki.Card r0;
        int i0;

        r0 := @this: com.ichi2.libanki.Card;

        i0 = r0.<com.ichi2.libanki.Card: int mFactor>;

        return i0;
    }
    public long getId()
    {
        com.ichi2.libanki.Card r0;
        long l0;

        r0 := @this: com.ichi2.libanki.Card;

        l0 = r0.<com.ichi2.libanki.Card: long mId>;

        return l0;
    }
    public int getIvl()
    {
        com.ichi2.libanki.Card r0;
        int i0;

        r0 := @this: com.ichi2.libanki.Card;

        i0 = r0.<com.ichi2.libanki.Card: int mIvl>;

        return i0;
    }
    public int getLapses()
    {
        com.ichi2.libanki.Card r0;
        int i0;

        r0 := @this: com.ichi2.libanki.Card;

        i0 = r0.<com.ichi2.libanki.Card: int mLapses>;

        return i0;
    }
    public int getLastIvl()
    {
        com.ichi2.libanki.Card r0;
        int i0;

        r0 := @this: com.ichi2.libanki.Card;

        i0 = r0.<com.ichi2.libanki.Card: int mLastIvl>;

        return i0;
    }
    public int getLeft()
    {
        com.ichi2.libanki.Card r0;
        int i0;

        r0 := @this: com.ichi2.libanki.Card;

        i0 = r0.<com.ichi2.libanki.Card: int mLeft>;

        return i0;
    }
    public long getNid()
    {
        com.ichi2.libanki.Card r0;
        long l0;

        r0 := @this: com.ichi2.libanki.Card;

        l0 = r0.<com.ichi2.libanki.Card: long mNid>;

        return l0;
    }
    public long getODid()
    {
        com.ichi2.libanki.Card r0;
        long l0;

        r0 := @this: com.ichi2.libanki.Card;

        l0 = r0.<com.ichi2.libanki.Card: long mODid>;

        return l0;
    }
    public long getODue()
    {
        com.ichi2.libanki.Card r0;
        long l0;

        r0 := @this: com.ichi2.libanki.Card;

        l0 = r0.<com.ichi2.libanki.Card: long mODue>;

        return l0;
    }
    public int getOrd()
    {
        com.ichi2.libanki.Card r0;
        int i0;

        r0 := @this: com.ichi2.libanki.Card;

        i0 = r0.<com.ichi2.libanki.Card: int mOrd>;

        return i0;
    }
    public java.lang.String getPureAnswer()
    {
        com.ichi2.libanki.Card r0;
        java.lang.String r1, r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        int $i0, $i1;

        r0 := @this: com.ichi2.libanki.Card;

        $r2 = virtualinvoke r0.<com.ichi2.libanki.Card: java.util.HashMap _getQA(boolean)>(0);

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("a");

        r4 = (java.lang.String) $r3;

        r1 = "<hr id=answer>";

        $i0 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>("<hr id=answer>");

        if $i0 != -1 goto label1;

        return r4;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i0 = $i1 + $i0;

        r1 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i0);

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        return r1;
    }
    public int getQueue()
    {
        com.ichi2.libanki.Card r0;
        int i0;

        r0 := @this: com.ichi2.libanki.Card;

        i0 = r0.<com.ichi2.libanki.Card: int mQueue>;

        return i0;
    }
    public int getReps()
    {
        com.ichi2.libanki.Card r0;
        int i0;

        r0 := @this: com.ichi2.libanki.Card;

        i0 = r0.<com.ichi2.libanki.Card: int mReps>;

        return i0;
    }
    public int getType()
    {
        com.ichi2.libanki.Card r0;
        int i0;

        r0 := @this: com.ichi2.libanki.Card;

        i0 = r0.<com.ichi2.libanki.Card: int mType>;

        return i0;
    }
    public boolean getWasNew()
    {
        com.ichi2.libanki.Card r0;
        boolean z0;

        r0 := @this: com.ichi2.libanki.Card;

        z0 = r0.<com.ichi2.libanki.Card: boolean mWasNew>;

        return z0;
    }
    public boolean isEmpty()
    {
        com.ichi2.libanki.Card r0;
        com.ichi2.libanki.Collection $r1;
        com.ichi2.libanki.Models $r2;
        org.json.JSONObject $r3;
        com.ichi2.libanki.Note $r4;
        java.lang.String[] $r5;
        java.lang.String $r6;
        java.util.ArrayList $r7;
        int $i0;
        java.lang.Integer $r8;
        boolean $z0;

        r0 := @this: com.ichi2.libanki.Card;

        $r1 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Models getModels()>();

        $r3 = virtualinvoke r0.<com.ichi2.libanki.Card: org.json.JSONObject model()>();

        $r4 = virtualinvoke r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Note note()>();

        $r5 = virtualinvoke $r4.<com.ichi2.libanki.Note: java.lang.String[] getFields()>();

        $r6 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String joinFields(java.lang.String[])>($r5);

        $r7 = virtualinvoke $r2.<com.ichi2.libanki.Models: java.util.ArrayList availOrds(org.json.JSONObject,java.lang.String)>($r3, $r6);

        $i0 = r0.<com.ichi2.libanki.Card: int mOrd>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = virtualinvoke $r7.<java.util.ArrayList: boolean contains(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void load()
    {
        com.ichi2.libanki.Card r0;
        android.database.Cursor r1, $r7;
        com.ichi2.libanki.Collection $r2;
        com.ichi2.libanki.DB $r3;
        io.requery.android.database.sqlite.SQLiteDatabase $r4;
        java.lang.StringBuilder $r5;
        long $l0;
        java.lang.String $r6;
        boolean $z0;
        java.lang.RuntimeException $r8;
        java.lang.Throwable $r9;
        int $i1;

        r0 := @this: com.ichi2.libanki.Card;

        r1 = null;

     label01:
        $r2 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM cards WHERE id = ");

        $l0 = r0.<com.ichi2.libanki.Card: long mId>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r6, null);

     label02:
        r1 = $r7;

     label03:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label08;

     label05:
        $r8 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" No card with id ");

        $l0 = r0.<com.ichi2.libanki.Card: long mId>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r8;

     label06:
        $r9 := @caughtexception;

        if r1 == null goto label07;

        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label07:
        throw $r9;

     label08:
        $l0 = interfaceinvoke $r7.<android.database.Cursor: long getLong(int)>(0);

        r0.<com.ichi2.libanki.Card: long mId> = $l0;

        $l0 = interfaceinvoke $r7.<android.database.Cursor: long getLong(int)>(1);

        r0.<com.ichi2.libanki.Card: long mNid> = $l0;

        $l0 = interfaceinvoke $r7.<android.database.Cursor: long getLong(int)>(2);

        r0.<com.ichi2.libanki.Card: long mDid> = $l0;

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(3);

        r0.<com.ichi2.libanki.Card: int mOrd> = $i1;

        $l0 = interfaceinvoke $r7.<android.database.Cursor: long getLong(int)>(4);

        r0.<com.ichi2.libanki.Card: long mMod> = $l0;

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(5);

        r0.<com.ichi2.libanki.Card: int mUsn> = $i1;

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(6);

        r0.<com.ichi2.libanki.Card: int mType> = $i1;

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(7);

        r0.<com.ichi2.libanki.Card: int mQueue> = $i1;

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(8);

     label09:
        $l0 = (long) $i1;

     label10:
        r0.<com.ichi2.libanki.Card: long mDue> = $l0;

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(9);

        r0.<com.ichi2.libanki.Card: int mIvl> = $i1;

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(10);

        r0.<com.ichi2.libanki.Card: int mFactor> = $i1;

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(11);

        r0.<com.ichi2.libanki.Card: int mReps> = $i1;

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(12);

        r0.<com.ichi2.libanki.Card: int mLapses> = $i1;

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(13);

        r0.<com.ichi2.libanki.Card: int mLeft> = $i1;

        $l0 = interfaceinvoke $r7.<android.database.Cursor: long getLong(int)>(14);

        r0.<com.ichi2.libanki.Card: long mODue> = $l0;

        $l0 = interfaceinvoke $r7.<android.database.Cursor: long getLong(int)>(15);

        r0.<com.ichi2.libanki.Card: long mODid> = $l0;

        $i1 = interfaceinvoke $r7.<android.database.Cursor: int getInt(int)>(16);

        r0.<com.ichi2.libanki.Card: int mFlags> = $i1;

        $r6 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>(17);

        r0.<com.ichi2.libanki.Card: java.lang.String mData> = $r6;

     label11:
        if $r7 == null goto label12;

        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label12:
        r0.<com.ichi2.libanki.Card: java.util.HashMap mQA> = null;

        r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Note mNote> = null;

        return;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
    }
    public org.json.JSONObject model()
    {
        com.ichi2.libanki.Card r0;
        com.ichi2.libanki.Collection $r1;
        com.ichi2.libanki.Models $r2;
        com.ichi2.libanki.Note $r3;
        long $l0;
        org.json.JSONObject $r4;

        r0 := @this: com.ichi2.libanki.Card;

        $r1 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Models getModels()>();

        $r3 = virtualinvoke r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Note note()>();

        $l0 = virtualinvoke $r3.<com.ichi2.libanki.Note: long getMid()>();

        $r4 = virtualinvoke $r2.<com.ichi2.libanki.Models: org.json.JSONObject get(long)>($l0);

        return $r4;
    }
    public com.ichi2.libanki.Note note()
    {
        com.ichi2.libanki.Card r0;
        com.ichi2.libanki.Note $r1;

        r0 := @this: com.ichi2.libanki.Card;

        $r1 = virtualinvoke r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Note note(boolean)>(0);

        return $r1;
    }
    public com.ichi2.libanki.Note note(boolean)
    {
        com.ichi2.libanki.Card r0;
        boolean $z0;
        long $l0;
        com.ichi2.libanki.Note $r1;
        com.ichi2.libanki.Collection $r2;

        r0 := @this: com.ichi2.libanki.Card;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Note mNote>;

        if $r1 == null goto label1;

        if $z0 == 0 goto label2;

     label1:
        $r2 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $l0 = r0.<com.ichi2.libanki.Card: long mNid>;

        $r1 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Note getNote(long)>($l0);

        r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Note mNote> = $r1;

     label2:
        $r1 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Note mNote>;

        return $r1;
    }
    public java.lang.String q()
    {
        com.ichi2.libanki.Card r0;
        java.lang.String $r1;

        r0 := @this: com.ichi2.libanki.Card;

        $r1 = virtualinvoke r0.<com.ichi2.libanki.Card: java.lang.String q(boolean)>(0);

        return $r1;
    }
    public java.lang.String q(boolean)
    {
        com.ichi2.libanki.Card r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: com.ichi2.libanki.Card;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.ichi2.libanki.Card: java.lang.String q(boolean,boolean)>($z0, 0);

        return $r1;
    }
    public java.lang.String q(boolean, boolean)
    {
        com.ichi2.libanki.Card r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;

        r0 := @this: com.ichi2.libanki.Card;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<com.ichi2.libanki.Card: java.lang.String css()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke r0.<com.ichi2.libanki.Card: java.util.HashMap _getQA(boolean,boolean)>($z0, $z1);

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("q");

        $r2 = (java.lang.String) $r4;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
    public java.lang.String qSimple()
    {
        com.ichi2.libanki.Card r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: com.ichi2.libanki.Card;

        $r1 = virtualinvoke r0.<com.ichi2.libanki.Card: java.util.HashMap _getQA(boolean)>(0);

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("q");

        $r3 = (java.lang.String) $r2;

        return $r3;
    }
    public void resumeTimer()
    {
        com.ichi2.libanki.Card r0;
        double $d0, $d1;

        r0 := @this: com.ichi2.libanki.Card;

        $d1 = staticinvoke <com.ichi2.libanki.Utils: double now()>();

        $d0 = r0.<com.ichi2.libanki.Card: double mElapsedTime>;

        $d0 = $d1 - $d0;

        r0.<com.ichi2.libanki.Card: double mTimerStarted> = $d0;

        return;
    }
    public void setCol(com.ichi2.libanki.Collection)
    {
        com.ichi2.libanki.Card r0;
        com.ichi2.libanki.Collection $r1;

        r0 := @this: com.ichi2.libanki.Card;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol> = $r1;

        return;
    }
    public void setDid(long)
    {
        com.ichi2.libanki.Card r0;
        long $l0;

        r0 := @this: com.ichi2.libanki.Card;

        $l0 := @parameter0: long;

        r0.<com.ichi2.libanki.Card: long mDid> = $l0;

        return;
    }
    public void setDue(long)
    {
        com.ichi2.libanki.Card r0;
        long $l0;

        r0 := @this: com.ichi2.libanki.Card;

        $l0 := @parameter0: long;

        r0.<com.ichi2.libanki.Card: long mDue> = $l0;

        return;
    }
    public void setFactor(int)
    {
        com.ichi2.libanki.Card r0;
        int $i0;

        r0 := @this: com.ichi2.libanki.Card;

        $i0 := @parameter0: int;

        r0.<com.ichi2.libanki.Card: int mFactor> = $i0;

        return;
    }
    public void setIvl(int)
    {
        com.ichi2.libanki.Card r0;
        int $i0;

        r0 := @this: com.ichi2.libanki.Card;

        $i0 := @parameter0: int;

        r0.<com.ichi2.libanki.Card: int mIvl> = $i0;

        return;
    }
    public void setLapses(int)
    {
        com.ichi2.libanki.Card r0;
        int $i0;

        r0 := @this: com.ichi2.libanki.Card;

        $i0 := @parameter0: int;

        r0.<com.ichi2.libanki.Card: int mLapses> = $i0;

        return;
    }
    public void setLastIvl(int)
    {
        com.ichi2.libanki.Card r0;
        int $i0;

        r0 := @this: com.ichi2.libanki.Card;

        $i0 := @parameter0: int;

        r0.<com.ichi2.libanki.Card: int mLastIvl> = $i0;

        return;
    }
    public void setLeft(int)
    {
        com.ichi2.libanki.Card r0;
        int $i0;

        r0 := @this: com.ichi2.libanki.Card;

        $i0 := @parameter0: int;

        r0.<com.ichi2.libanki.Card: int mLeft> = $i0;

        return;
    }
    public void setMod(long)
    {
        com.ichi2.libanki.Card r0;
        long $l0;

        r0 := @this: com.ichi2.libanki.Card;

        $l0 := @parameter0: long;

        r0.<com.ichi2.libanki.Card: long mMod> = $l0;

        return;
    }
    public void setNid(long)
    {
        com.ichi2.libanki.Card r0;
        long $l0;

        r0 := @this: com.ichi2.libanki.Card;

        $l0 := @parameter0: long;

        r0.<com.ichi2.libanki.Card: long mNid> = $l0;

        return;
    }
    public void setODid(long)
    {
        com.ichi2.libanki.Card r0;
        long $l0;

        r0 := @this: com.ichi2.libanki.Card;

        $l0 := @parameter0: long;

        r0.<com.ichi2.libanki.Card: long mODid> = $l0;

        return;
    }
    public void setODue(long)
    {
        com.ichi2.libanki.Card r0;
        long $l0;

        r0 := @this: com.ichi2.libanki.Card;

        $l0 := @parameter0: long;

        r0.<com.ichi2.libanki.Card: long mODue> = $l0;

        return;
    }
    public void setOrd(int)
    {
        com.ichi2.libanki.Card r0;
        int $i0;

        r0 := @this: com.ichi2.libanki.Card;

        $i0 := @parameter0: int;

        r0.<com.ichi2.libanki.Card: int mOrd> = $i0;

        return;
    }
    public void setQueue(int)
    {
        com.ichi2.libanki.Card r0;
        int $i0;

        r0 := @this: com.ichi2.libanki.Card;

        $i0 := @parameter0: int;

        r0.<com.ichi2.libanki.Card: int mQueue> = $i0;

        return;
    }
    public int setReps(int)
    {
        com.ichi2.libanki.Card r0;
        int $i0;

        r0 := @this: com.ichi2.libanki.Card;

        $i0 := @parameter0: int;

        r0.<com.ichi2.libanki.Card: int mReps> = $i0;

        return $i0;
    }
    public void setTimerStarted(double)
    {
        com.ichi2.libanki.Card r0;
        double $d0;

        r0 := @this: com.ichi2.libanki.Card;

        $d0 := @parameter0: double;

        r0.<com.ichi2.libanki.Card: double mTimerStarted> = $d0;

        return;
    }
    public void setType(int)
    {
        com.ichi2.libanki.Card r0;
        int $i0;

        r0 := @this: com.ichi2.libanki.Card;

        $i0 := @parameter0: int;

        r0.<com.ichi2.libanki.Card: int mType> = $i0;

        return;
    }
    public void setUsn(int)
    {
        com.ichi2.libanki.Card r0;
        int $i0;

        r0 := @this: com.ichi2.libanki.Card;

        $i0 := @parameter0: int;

        r0.<com.ichi2.libanki.Card: int mUsn> = $i0;

        return;
    }
    public void setWasNew(boolean)
    {
        com.ichi2.libanki.Card r0;
        boolean $z0;

        r0 := @this: com.ichi2.libanki.Card;

        $z0 := @parameter0: boolean;

        r0.<com.ichi2.libanki.Card: boolean mWasNew> = $z0;

        return;
    }
    public boolean shouldShowTimer()
    {
        com.ichi2.libanki.Card r0;
        org.json.JSONException r1;
        com.ichi2.libanki.Collection $r2;
        com.ichi2.libanki.Decks $r3;
        long $l0;
        byte $b1;
        org.json.JSONObject $r4;
        int $i2;
        java.lang.RuntimeException $r5;

        r0 := @this: com.ichi2.libanki.Card;

        $r2 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

     label1:
        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

     label2:
        $l0 = r0.<com.ichi2.libanki.Card: long mODid>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label5;

        $l0 = r0.<com.ichi2.libanki.Card: long mDid>;

     label3:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Decks: org.json.JSONObject confForDid(long)>($l0);

        $i2 = virtualinvoke $r4.<org.json.JSONObject: int getInt(java.lang.String)>("timer");

     label4:
        if $i2 == 0 goto label6;

        return 1;

     label5:
        $l0 = r0.<com.ichi2.libanki.Card: long mODid>;

        goto label3;

     label6:
        return 0;

     label7:
        r1 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch org.json.JSONException from label1 to label2 with label7;
        catch org.json.JSONException from label3 to label4 with label7;
    }
    public boolean showTimer()
    {
        com.ichi2.libanki.Card r0;
        com.ichi2.libanki.Collection $r1;
        com.ichi2.libanki.Decks $r2;
        long $l0;
        byte $b1;
        org.json.JSONObject $r3;
        int $i2;

        r0 := @this: com.ichi2.libanki.Card;

        $r1 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l0 = r0.<com.ichi2.libanki.Card: long mODid>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $l0 = r0.<com.ichi2.libanki.Card: long mDid>;

     label1:
        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Decks: org.json.JSONObject confForDid(long)>($l0);

        $i2 = virtualinvoke $r3.<org.json.JSONObject: int optInt(java.lang.String,int)>("timer", 1);

        if $i2 == 0 goto label3;

        return 1;

     label2:
        $l0 = r0.<com.ichi2.libanki.Card: long mODid>;

        goto label1;

     label3:
        return 0;
    }
    public void startTimer()
    {
        com.ichi2.libanki.Card r0;
        double $d0;

        r0 := @this: com.ichi2.libanki.Card;

        $d0 = staticinvoke <com.ichi2.libanki.Utils: double now()>();

        r0.<com.ichi2.libanki.Card: double mTimerStarted> = $d0;

        return;
    }
    public void stopTimer()
    {
        com.ichi2.libanki.Card r0;
        double $d0, $d1;

        r0 := @this: com.ichi2.libanki.Card;

        $d1 = staticinvoke <com.ichi2.libanki.Utils: double now()>();

        $d0 = r0.<com.ichi2.libanki.Card: double mTimerStarted>;

        $d0 = $d1 - $d0;

        r0.<com.ichi2.libanki.Card: double mElapsedTime> = $d0;

        return;
    }
    public org.json.JSONObject template()
    {
        com.ichi2.libanki.Card r0;
        org.json.JSONException r1;
        org.json.JSONObject $r2;
        int $i0;
        org.json.JSONArray $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: com.ichi2.libanki.Card;

        $r2 = virtualinvoke r0.<com.ichi2.libanki.Card: org.json.JSONObject model()>();

     label1:
        $i0 = virtualinvoke $r2.<org.json.JSONObject: int getInt(java.lang.String)>("type");

     label2:
        if $i0 != 0 goto label7;

     label3:
        $r3 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("tmpls");

     label4:
        $i0 = r0.<com.ichi2.libanki.Card: int mOrd>;

     label5:
        $r2 = virtualinvoke $r3.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

     label6:
        return $r2;

     label7:
        $r2 = virtualinvoke r0.<com.ichi2.libanki.Card: org.json.JSONObject model()>();

        $r3 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("tmpls");

        $r2 = virtualinvoke $r3.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(0);

     label8:
        return $r2;

     label9:
        r1 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r4;

        catch org.json.JSONException from label1 to label2 with label9;
        catch org.json.JSONException from label3 to label4 with label9;
        catch org.json.JSONException from label5 to label6 with label9;
        catch org.json.JSONException from label7 to label8 with label9;
    }
    public int timeLimit()
    {
        com.ichi2.libanki.Card r0;
        org.json.JSONException r1;
        com.ichi2.libanki.Collection $r2;
        com.ichi2.libanki.Decks $r3;
        long $l0;
        byte $b1;
        org.json.JSONObject $r4;
        int $i2;
        java.lang.RuntimeException $r5;

        r0 := @this: com.ichi2.libanki.Card;

        $r2 = r0.<com.ichi2.libanki.Card: com.ichi2.libanki.Collection mCol>;

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l0 = r0.<com.ichi2.libanki.Card: long mODid>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label4;

        $l0 = r0.<com.ichi2.libanki.Card: long mDid>;

     label1:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Decks: org.json.JSONObject confForDid(long)>($l0);

     label2:
        $i2 = virtualinvoke $r4.<org.json.JSONObject: int getInt(java.lang.String)>("maxTaken");

     label3:
        $i2 = $i2 * 1000;

        return $i2;

     label4:
        $l0 = r0.<com.ichi2.libanki.Card: long mODid>;

        goto label1;

     label5:
        r1 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch org.json.JSONException from label2 to label3 with label5;
    }
    public int timeTaken()
    {
        com.ichi2.libanki.Card r0;
        int i0, $i1;
        double $d0, $d1;

        r0 := @this: com.ichi2.libanki.Card;

        $d0 = staticinvoke <com.ichi2.libanki.Utils: double now()>();

        $d1 = r0.<com.ichi2.libanki.Card: double mTimerStarted>;

        $d0 = $d0 - $d1;

        $d0 = $d0 * 1000.0;

        i0 = (int) $d0;

        $i1 = virtualinvoke r0.<com.ichi2.libanki.Card: int timeLimit()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i1);

        return i0;
    }
    public java.lang.String toString()
    {
        com.ichi2.libanki.Card r0;
        java.lang.reflect.Field r1;
        java.util.ArrayList r2;
        int $i0, $i1;
        java.lang.Class $r3;
        java.lang.reflect.Field[] $r4;
        java.util.Set $r5;
        java.lang.String $r6;
        boolean $z0;
        java.lang.Object[] $r7;
        java.lang.Object $r8;
        java.lang.IllegalAccessException r9;
        java.lang.IllegalArgumentException r10;

        r0 := @this: com.ichi2.libanki.Card;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $i0 = lengthof $r4;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label14;

        r1 = $r4[$i1];

        $r5 = <com.ichi2.libanki.Card: java.util.Set SKIP_PRINT>;

     label02:
        $r6 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r6);

     label03:
        if $z0 == 0 goto label05;

     label04:
        $i1 = $i1 + 1;

        goto label01;

     label05:
        $r7 = newarray (java.lang.Object)[2];

     label06:
        $r6 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

     label07:
        $r7[0] = $r6;

     label08:
        $r8 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

     label09:
        $r7[1] = $r8;

     label10:
        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\'%s\': %s", $r7);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

     label11:
        goto label04;

     label12:
        r9 := @caughtexception;

     label13:
        $r7 = newarray (java.lang.Object)[2];

        $r6 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $r7[0] = $r6;

        $r7[1] = "N/A";

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\'%s\': %s", $r7);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label04;

     label14:
        $r6 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",  ", r2);

        return $r6;

     label15:
        r10 := @caughtexception;

        goto label13;

        catch java.lang.IllegalAccessException from label02 to label03 with label12;
        catch java.lang.IllegalAccessException from label06 to label07 with label12;
        catch java.lang.IllegalAccessException from label08 to label09 with label12;
        catch java.lang.IllegalAccessException from label10 to label11 with label12;
        catch java.lang.IllegalArgumentException from label02 to label03 with label15;
        catch java.lang.IllegalArgumentException from label06 to label07 with label15;
        catch java.lang.IllegalArgumentException from label08 to label09 with label15;
        catch java.lang.IllegalArgumentException from label10 to label11 with label15;
    }
