com.ichi2.compat.CompatV16 extends com.ichi2.compat.CompatV15 implements com.ichi2.compat.Compat
    public void <init>()
    {
        com.ichi2.compat.CompatV16 r0;

        r0 := @this: com.ichi2.compat.CompatV16;

        specialinvoke r0.<com.ichi2.compat.CompatV15: void <init>()>();

        return;
    }
    public boolean deleteDatabase(java.io.File)
    {
        com.ichi2.compat.CompatV16 r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: com.ichi2.compat.CompatV16;

        $r1 := @parameter0: java.io.File;

        $z0 = staticinvoke <io.requery.android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>($r1);

        return $z0;
    }
    public java.lang.String detagged(java.lang.String)
    {
        com.ichi2.compat.CompatV16 r0;
        java.lang.String $r1;

        r0 := @this: com.ichi2.compat.CompatV16;

        $r1 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.text.Html: java.lang.String escapeHtml(java.lang.CharSequence)>($r1);

        return $r1;
    }
    public void disableDatabaseWriteAheadLogging(io.requery.android.database.sqlite.SQLiteDatabase)
    {
        com.ichi2.compat.CompatV16 r0;
        io.requery.android.database.sqlite.SQLiteDatabase $r1;

        r0 := @this: com.ichi2.compat.CompatV16;

        $r1 := @parameter0: io.requery.android.database.sqlite.SQLiteDatabase;

        virtualinvoke $r1.<io.requery.android.database.sqlite.SQLiteDatabase: void disableWriteAheadLogging()>();

        return;
    }
    public android.net.Uri getExportUri(android.content.Context, java.io.File)
    {
        com.ichi2.compat.CompatV16 r0;
        android.content.Context $r1;
        java.io.File $r2;
        android.net.Uri $r3;

        r0 := @this: com.ichi2.compat.CompatV16;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.io.File;

        $r3 = staticinvoke <android.support.v4.content.FileProvider: android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File)>($r1, "com.ichi2.anki.apkgfileprovider", $r2);

        return $r3;
    }
    public void openUrl(com.ichi2.anki.AnkiActivity, android.net.Uri)
    {
        com.ichi2.compat.CompatV16 r0;
        com.ichi2.anki.AnkiActivity $r1;
        android.net.Uri $r2;
        android.support.customtabs.CustomTabsIntent$Builder r3, $r6;
        com.ichi2.compat.customtabs.CustomTabActivityHelper $r4;
        android.support.customtabs.CustomTabsSession $r5;
        int $i0;
        android.content.res.Resources $r7;
        android.graphics.Bitmap $r8;
        android.support.customtabs.CustomTabsIntent $r9;
        android.content.Intent $r10;
        com.ichi2.compat.customtabs.CustomTabsFallback $r11;

        r0 := @this: com.ichi2.compat.CompatV16;

        $r1 := @parameter0: com.ichi2.anki.AnkiActivity;

        $r2 := @parameter1: android.net.Uri;

        $r4 = virtualinvoke $r1.<com.ichi2.anki.AnkiActivity: com.ichi2.compat.customtabs.CustomTabActivityHelper getCustomTabActivityHelper()>();

        r3 = new android.support.customtabs.CustomTabsIntent$Builder;

        $r5 = virtualinvoke $r4.<com.ichi2.compat.customtabs.CustomTabActivityHelper: android.support.customtabs.CustomTabsSession getSession()>();

        specialinvoke r3.<android.support.customtabs.CustomTabsIntent$Builder: void <init>(android.support.customtabs.CustomTabsSession)>($r5);

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r1, 2131689553);

        $r6 = virtualinvoke r3.<android.support.customtabs.CustomTabsIntent$Builder: android.support.customtabs.CustomTabsIntent$Builder setToolbarColor(int)>($i0);

        virtualinvoke $r6.<android.support.customtabs.CustomTabsIntent$Builder: android.support.customtabs.CustomTabsIntent$Builder setShowTitle(boolean)>(1);

        virtualinvoke r3.<android.support.customtabs.CustomTabsIntent$Builder: android.support.customtabs.CustomTabsIntent$Builder setStartAnimations(android.content.Context,int,int)>($r1, 2130968603, 2130968602);

        virtualinvoke r3.<android.support.customtabs.CustomTabsIntent$Builder: android.support.customtabs.CustomTabsIntent$Builder setExitAnimations(android.content.Context,int,int)>($r1, 2130968601, 2130968604);

        $r7 = virtualinvoke $r1.<com.ichi2.anki.AnkiActivity: android.content.res.Resources getResources()>();

        $r8 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r7, 2130837629);

        virtualinvoke r3.<android.support.customtabs.CustomTabsIntent$Builder: android.support.customtabs.CustomTabsIntent$Builder setCloseButtonIcon(android.graphics.Bitmap)>($r8);

        $r9 = virtualinvoke r3.<android.support.customtabs.CustomTabsIntent$Builder: android.support.customtabs.CustomTabsIntent build()>();

        $r10 = $r9.<android.support.customtabs.CustomTabsIntent: android.content.Intent intent>;

        staticinvoke <com.ichi2.compat.customtabs.CustomTabsHelper: void addKeepAliveExtra(android.content.Context,android.content.Intent)>($r1, $r10);

        $r11 = new com.ichi2.compat.customtabs.CustomTabsFallback;

        specialinvoke $r11.<com.ichi2.compat.customtabs.CustomTabsFallback: void <init>()>();

        staticinvoke <com.ichi2.compat.customtabs.CustomTabActivityHelper: void openCustomTab(android.app.Activity,android.support.customtabs.CustomTabsIntent,android.net.Uri,com.ichi2.compat.customtabs.CustomTabActivityHelper$CustomTabFallback)>($r1, $r9, $r2, $r11);

        return;
    }
    public void updateWidgetDimensions(android.content.Context, android.widget.RemoteViews, java.lang.Class)
    {
        com.ichi2.compat.CompatV16 r0;
        android.content.Context $r1;
        android.widget.RemoteViews $r2;
        java.lang.Class r3;
        int i0, $i1, $i2, i4;
        float f0, f1, f2, $f3;
        android.appwidget.AppWidgetManager $r4;
        android.content.ComponentName $r5;
        int[] $r6;
        android.content.res.Resources $r7;
        android.util.DisplayMetrics $r8;
        android.os.Bundle $r9;
        android.content.res.Configuration $r10;
        double $d0, $d1;
        byte $b3;

        r0 := @this: com.ichi2.compat.CompatV16;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.widget.RemoteViews;

        r3 := @parameter2: java.lang.Class;

        $r4 = staticinvoke <android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>($r1);

        $r5 = new android.content.ComponentName;

        specialinvoke $r5.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>($r1, r3);

        $r6 = virtualinvoke $r4.<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>($r5);

        $i1 = lengthof $r6;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label6;

        i0 = $r6[$i2];

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r8.<android.util.DisplayMetrics: float density>;

        $r9 = virtualinvoke $r4.<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)>(i0);

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i0 = $r10.<android.content.res.Configuration: int orientation>;

        if i0 != 1 goto label4;

        i0 = virtualinvoke $r9.<android.os.Bundle: int getInt(java.lang.String)>("appWidgetMinWidth");

        f1 = (float) i0;

        i0 = virtualinvoke $r9.<android.os.Bundle: int getInt(java.lang.String)>("appWidgetMaxHeight");

        f2 = (float) i0;

     label2:
        $f3 = f1 / f2;

        $d0 = (double) $f3;

        $b3 = $d0 cmpl 0.8;

        if $b3 <= 0 goto label5;

        $d0 = (double) f1;

        $d1 = (double) f2;

        $d1 = $d1 * 0.8;

        $d0 = $d0 - $d1;

        $d0 = $d0 / 2.0;

        $d0 = $d0 + 4.0;

        $d1 = (double) f0;

        $d0 = $d0 * $d1;

        $d0 = $d0 + 0.5;

        i0 = (int) $d0;

        f0 = 4.0F * f0;

        f0 = f0 + 0.5F;

        i4 = (int) f0;

        $d0 = (double) f2;

        $d0 = $d0 * 0.8;

        $d1 = (double) f1;

        $d0 = $d0 / $d1;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $d0 = $d0 * 18.0;

        f1 = (float) $d0;

     label3:
        virtualinvoke $r2.<android.widget.RemoteViews: void setTextViewTextSize(int,int,float)>(2131755330, 2, f1);

        virtualinvoke $r2.<android.widget.RemoteViews: void setTextViewTextSize(int,int,float)>(2131755331, 2, f1);

        virtualinvoke $r2.<android.widget.RemoteViews: void setViewPadding(int,int,int,int,int)>(2131755329, i0, i4, i0, i4);

        $i2 = $i2 + 1;

        goto label1;

     label4:
        i0 = virtualinvoke $r9.<android.os.Bundle: int getInt(java.lang.String)>("appWidgetMaxWidth");

        f1 = (float) i0;

        i0 = virtualinvoke $r9.<android.os.Bundle: int getInt(java.lang.String)>("appWidgetMinHeight");

        f2 = (float) i0;

        goto label2;

     label5:
        $d0 = (double) f2;

        $d1 = (double) f1;

        $d1 = $d1 * 1.25;

        $d0 = $d0 - $d1;

        $d0 = $d0 / 2.0;

        $d0 = $d0 + 4.0;

        $d1 = (double) f0;

        $d0 = $d0 * $d1;

        $d0 = $d0 + 0.5;

        i4 = (int) $d0;

        f0 = 4.0F * f0;

        f0 = f0 + 0.5F;

        i0 = (int) f0;

        $d0 = (double) f1;

        $d0 = $d0 * 1.25;

        $d1 = (double) f2;

        $d0 = $d0 / $d1;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $d0 = $d0 * 18.0;

        f1 = (float) $d0;

        goto label3;

     label6:
        return;
    }
