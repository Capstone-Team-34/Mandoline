com.ichi2.anki.DeckPicker$28 extends java.lang.Object implements com.ichi2.async.DeckTask$Listener
final com.ichi2.anki.DeckPicker this$0
    void <init>(com.ichi2.anki.DeckPicker)
    {
        com.ichi2.anki.DeckPicker$28 r0;
        com.ichi2.anki.DeckPicker $r1;

        r0 := @this: com.ichi2.anki.DeckPicker$28;

        $r1 := @parameter0: com.ichi2.anki.DeckPicker;

        r0.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void onCancelled()
    {
        com.ichi2.anki.DeckPicker$28 r0;

        r0 := @this: com.ichi2.anki.DeckPicker$28;

        return;
    }
    public void onPostExecute(com.ichi2.async.DeckTask, com.ichi2.async.DeckTask$TaskData)
    {
        com.ichi2.anki.DeckPicker$28 r0;
        com.ichi2.async.DeckTask $r1;
        com.ichi2.async.DeckTask$TaskData $r2;
        com.ichi2.anki.DeckPicker$28$1 r3;
        com.ichi2.anki.dialogs.ConfirmationDialog r4;
        java.lang.Object[] $r5;
        java.lang.Object r6;
        java.util.List r7;
        int $i0;
        com.ichi2.anki.DeckPicker $r8, $r9;
        android.content.res.Resources $r10;
        java.lang.String $r11;
        com.afollestad.materialdialogs.MaterialDialog $r12;
        boolean $z0;
        java.lang.Integer $r13;

        r0 := @this: com.ichi2.anki.DeckPicker$28;

        $r1 := @parameter0: com.ichi2.async.DeckTask;

        $r2 := @parameter1: com.ichi2.async.DeckTask$TaskData;

        $r5 = virtualinvoke $r2.<com.ichi2.async.DeckTask$TaskData: java.lang.Object[] getObjArray()>();

        r6 = $r5[0];

        r7 = (java.util.List) r6;

        $i0 = interfaceinvoke r7.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

        $r8 = r0.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0>;

        $r9 = r0.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0>;

        $r10 = virtualinvoke $r9.<com.ichi2.anki.DeckPicker: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r10.<android.content.res.Resources: java.lang.String getString(int)>(2131230999);

        virtualinvoke $r8.<com.ichi2.anki.DeckPicker: void showSimpleMessageDialog(java.lang.String)>($r11);

     label1:
        $r8 = r0.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0>;

        $r12 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r8);

        if $r12 == null goto label3;

        $r8 = r0.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0>;

        $r12 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r8);

        $z0 = virtualinvoke $r12.<com.afollestad.materialdialogs.MaterialDialog: boolean isShowing()>();

        if $z0 == 0 goto label3;

        $r8 = r0.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0>;

        $r12 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r8);

        virtualinvoke $r12.<com.afollestad.materialdialogs.MaterialDialog: void dismiss()>();

        return;

     label2:
        $r8 = r0.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0>;

        $r10 = virtualinvoke $r8.<com.ichi2.anki.DeckPicker: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r10.<android.content.res.Resources: java.lang.String getString(int)>(2131230997);

        $r5 = newarray (java.lang.Object)[1];

        $i0 = interfaceinvoke r7.<java.util.List: int size()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r13;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r11, $r5);

        r4 = new com.ichi2.anki.dialogs.ConfirmationDialog;

        specialinvoke r4.<com.ichi2.anki.dialogs.ConfirmationDialog: void <init>()>();

        virtualinvoke r4.<com.ichi2.anki.dialogs.ConfirmationDialog: void setArgs(java.lang.String)>($r11);

        r3 = new com.ichi2.anki.DeckPicker$28$1;

        specialinvoke r3.<com.ichi2.anki.DeckPicker$28$1: void <init>(com.ichi2.anki.DeckPicker$28,java.util.List)>(r0, r7);

        virtualinvoke r4.<com.ichi2.anki.dialogs.ConfirmationDialog: void setConfirm(java.lang.Runnable)>(r3);

        $r8 = r0.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0>;

        virtualinvoke $r8.<com.ichi2.anki.DeckPicker: void showDialogFragment(android.support.v4.app.DialogFragment)>(r4);

        goto label1;

     label3:
        return;
    }
    public void onPreExecute(com.ichi2.async.DeckTask)
    {
        com.ichi2.anki.DeckPicker$28 r0;
        com.ichi2.async.DeckTask $r1;
        com.ichi2.anki.DeckPicker $r2, $r3, $r4;
        android.content.res.Resources $r5;
        java.lang.String $r6;
        com.afollestad.materialdialogs.MaterialDialog $r7;

        r0 := @this: com.ichi2.anki.DeckPicker$28;

        $r1 := @parameter0: com.ichi2.async.DeckTask;

        $r2 = r0.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0>;

        $r3 = r0.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0>;

        $r4 = r0.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0>;

        $r5 = virtualinvoke $r4.<com.ichi2.anki.DeckPicker: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231004);

        $r7 = staticinvoke <com.ichi2.themes.StyledProgressDialog: com.afollestad.materialdialogs.MaterialDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r3, "", $r6, 0);

        staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$502(com.ichi2.anki.DeckPicker,com.afollestad.materialdialogs.MaterialDialog)>($r2, $r7);

        return;
    }
    public transient void onProgressUpdate(com.ichi2.async.DeckTask, com.ichi2.async.DeckTask$TaskData[])
    {
        com.ichi2.anki.DeckPicker$28 r0;
        com.ichi2.async.DeckTask $r1;
        com.ichi2.async.DeckTask$TaskData[] $r2;

        r0 := @this: com.ichi2.anki.DeckPicker$28;

        $r1 := @parameter0: com.ichi2.async.DeckTask;

        $r2 := @parameter1: com.ichi2.async.DeckTask$TaskData[];

        return;
    }
