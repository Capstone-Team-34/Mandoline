com.ichi2.anki.api.AddContentApi$CompatV2 extends com.ichi2.anki.api.AddContentApi$CompatV1
final com.ichi2.anki.api.AddContentApi this$0
    private void <init>(com.ichi2.anki.api.AddContentApi)
    {
        com.ichi2.anki.api.AddContentApi$CompatV2 r0;
        com.ichi2.anki.api.AddContentApi $r1;

        r0 := @this: com.ichi2.anki.api.AddContentApi$CompatV2;

        $r1 := @parameter0: com.ichi2.anki.api.AddContentApi;

        r0.<com.ichi2.anki.api.AddContentApi$CompatV2: com.ichi2.anki.api.AddContentApi this$0> = $r1;

        specialinvoke r0.<com.ichi2.anki.api.AddContentApi$CompatV1: void <init>(com.ichi2.anki.api.AddContentApi,com.ichi2.anki.api.AddContentApi$1)>($r1, null);

        return;
    }
    void <init>(com.ichi2.anki.api.AddContentApi, com.ichi2.anki.api.AddContentApi$1)
    {
        com.ichi2.anki.api.AddContentApi$CompatV2 r0;
        com.ichi2.anki.api.AddContentApi $r1;
        com.ichi2.anki.api.AddContentApi$1 $r2;

        r0 := @this: com.ichi2.anki.api.AddContentApi$CompatV2;

        $r1 := @parameter0: com.ichi2.anki.api.AddContentApi;

        $r2 := @parameter1: com.ichi2.anki.api.AddContentApi$1;

        specialinvoke r0.<com.ichi2.anki.api.AddContentApi$CompatV2: void <init>(com.ichi2.anki.api.AddContentApi)>($r1);

        return;
    }
    public android.util.SparseArray findDuplicateNotes(long, java.util.List)
    {
        com.ichi2.anki.api.AddContentApi$CompatV2 r0;
        long $l0;
        java.util.List r1, $r8;
        java.util.HashSet r2;
        java.util.HashMap r3;
        int $i1, $i2;
        java.lang.Object $r4;
        java.lang.String r5;
        java.lang.Long $r6;
        boolean $z0;
        java.util.ArrayList $r7;
        java.lang.Integer $r9;
        java.util.Locale $r10;
        java.lang.Object[] $r11;
        com.ichi2.anki.api.AddContentApi $r12;
        android.content.ContentResolver $r13;
        android.net.Uri $r14;
        java.lang.String[] $r15;
        android.database.Cursor $r16;
        android.util.SparseArray r17;
        com.ichi2.anki.api.NoteInfo $r18, $r19;
        java.lang.Throwable $r20;

        r0 := @this: com.ichi2.anki.api.AddContentApi$CompatV2;

        $l0 := @parameter0: long;

        r1 := @parameter1: java.util.List;

        r2 = new java.util.HashSet;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke r2.<java.util.HashSet: void <init>(int)>($i1);

        r3 = new java.util.HashMap;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke r3.<java.util.HashMap: void <init>(int)>($i1);

        $i1 = 0;

     label01:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label03;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        r5 = (java.lang.String) $r4;

        $r6 = staticinvoke <com.ichi2.anki.api.Utils: java.lang.Long fieldChecksum(java.lang.String)>(r5);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r6);

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);

        if $z0 != 0 goto label02;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r7);

     label02:
        $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r8 = (java.util.List) $r4;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        $i1 = $i1 + 1;

        goto label01;

     label03:
        $r10 = <java.util.Locale: java.util.Locale US>;

        $r11 = newarray (java.lang.Object)[4];

        $r11[0] = "mid";

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r11[1] = $r6;

        $r11[2] = "csum";

        r5 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", r2);

        $r11[3] = r5;

        r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r10, "%s=%d and %s in (%s)", $r11);

        $r12 = r0.<com.ichi2.anki.api.AddContentApi$CompatV2: com.ichi2.anki.api.AddContentApi this$0>;

        $r13 = staticinvoke <com.ichi2.anki.api.AddContentApi: android.content.ContentResolver access$300(com.ichi2.anki.api.AddContentApi)>($r12);

        $r14 = <com.ichi2.anki.FlashCardsContract$Note: android.net.Uri CONTENT_URI_V2>;

        $r15 = staticinvoke <com.ichi2.anki.api.AddContentApi: java.lang.String[] access$200()>();

        $r16 = virtualinvoke $r13.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r14, $r15, r5, null, null);

        if $r16 != null goto label04;

        return null;

     label04:
        r17 = new android.util.SparseArray;

        specialinvoke r17.<android.util.SparseArray: void <init>()>();

     label05:
        $z0 = interfaceinvoke $r16.<android.database.Cursor: boolean moveToNext()>();

     label06:
        if $z0 == 0 goto label19;

     label07:
        $r18 = staticinvoke <com.ichi2.anki.api.NoteInfo: com.ichi2.anki.api.NoteInfo buildFromCursor(android.database.Cursor)>($r16);

     label08:
        if $r18 == null goto label05;

     label09:
        r5 = virtualinvoke $r18.<com.ichi2.anki.api.NoteInfo: java.lang.String getKey()>();

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);

     label10:
        if $z0 == 0 goto label05;

     label11:
        r5 = virtualinvoke $r18.<com.ichi2.anki.api.NoteInfo: java.lang.String getKey()>();

        $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r1 = (java.util.List) $r4;

     label12:
        $i1 = 0;

     label13:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

     label14:
        if $i1 >= $i2 goto label05;

        if $i1 <= 0 goto label18;

     label15:
        $r19 = new com.ichi2.anki.api.NoteInfo;

        specialinvoke $r19.<com.ichi2.anki.api.NoteInfo: void <init>(com.ichi2.anki.api.NoteInfo)>($r18);

     label16:
        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r9 = (java.lang.Integer) $r4;

        $i2 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.ichi2.anki.api.AddContentApi$CompatV2: void addNoteToDuplicatesArray(com.ichi2.anki.api.NoteInfo,android.util.SparseArray,int)>($r19, r17, $i2);

     label17:
        $i1 = $i1 + 1;

        goto label13;

     label18:
        $r19 = $r18;

        goto label16;

     label19:
        interfaceinvoke $r16.<android.database.Cursor: void close()>();

        return r17;

     label20:
        $r20 := @caughtexception;

        interfaceinvoke $r16.<android.database.Cursor: void close()>();

        throw $r20;

        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
    }
    public int insertNotes(long, android.content.ContentValues[])
    {
        com.ichi2.anki.api.AddContentApi$CompatV2 r0;
        long $l0;
        android.content.ContentValues[] $r1;
        android.net.Uri $r2;
        android.net.Uri$Builder $r3;
        java.lang.String $r4;
        com.ichi2.anki.api.AddContentApi $r5;
        android.content.ContentResolver $r6;
        int $i1;

        r0 := @this: com.ichi2.anki.api.AddContentApi$CompatV2;

        $l0 := @parameter0: long;

        $r1 := @parameter1: android.content.ContentValues[];

        $r2 = <com.ichi2.anki.FlashCardsContract$Note: android.net.Uri CONTENT_URI>;

        $r3 = virtualinvoke $r2.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("deckId", $r4);

        $r5 = r0.<com.ichi2.anki.api.AddContentApi$CompatV2: com.ichi2.anki.api.AddContentApi this$0>;

        $r6 = staticinvoke <com.ichi2.anki.api.AddContentApi: android.content.ContentResolver access$300(com.ichi2.anki.api.AddContentApi)>($r5);

        $r2 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri build()>();

        $i1 = virtualinvoke $r6.<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])>($r2, $r1);

        return $i1;
    }
    public android.database.Cursor queryNotes(long)
    {
        com.ichi2.anki.api.AddContentApi$CompatV2 r0;
        long $l0;
        android.net.Uri $r1;
        com.ichi2.anki.api.AddContentApi $r2;
        android.content.ContentResolver $r3;
        java.lang.String[] $r4;
        java.util.Locale $r5;
        java.lang.Object[] $r6;
        java.lang.Long $r7;
        java.lang.String $r8;
        android.database.Cursor $r9;

        r0 := @this: com.ichi2.anki.api.AddContentApi$CompatV2;

        $l0 := @parameter0: long;

        $r2 = r0.<com.ichi2.anki.api.AddContentApi$CompatV2: com.ichi2.anki.api.AddContentApi this$0>;

        $r3 = staticinvoke <com.ichi2.anki.api.AddContentApi: android.content.ContentResolver access$300(com.ichi2.anki.api.AddContentApi)>($r2);

        $r1 = <com.ichi2.anki.FlashCardsContract$Note: android.net.Uri CONTENT_URI_V2>;

        $r4 = staticinvoke <com.ichi2.anki.api.AddContentApi: java.lang.String[] access$200()>();

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "mid";

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[1] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r5, "%s=%d", $r6);

        $r9 = virtualinvoke $r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r4, $r8, null, null);

        return $r9;
    }
