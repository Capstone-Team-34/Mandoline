com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor$1 extends com.afollestad.materialdialogs.MaterialDialog$ButtonCallback
final com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor this$2
    void <init>(com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor)
    {
        com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor$1 r0;
        com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor $r1;

        r0 := @this: com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor$1;

        $r1 := @parameter0: com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor;

        r0.<com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor$1: com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor this$2> = $r1;

        specialinvoke r0.<com.afollestad.materialdialogs.MaterialDialog$ButtonCallback: void <init>()>();

        return;
    }
    public void onPositive(com.afollestad.materialdialogs.MaterialDialog)
    {
        com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor$1 r0;
        com.afollestad.materialdialogs.MaterialDialog $r1;
        com.ichi2.anki.exception.ConfirmModSchemaException r2;
        com.ichi2.libanki.Collection $r3;
        com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor $r4;
        com.ichi2.anki.DeckOptions$DeckPreferenceHack $r5;
        com.ichi2.anki.DeckOptions $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor$1;

        $r1 := @parameter0: com.afollestad.materialdialogs.MaterialDialog;

        $r4 = r0.<com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor$1: com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor this$2>;

        $r5 = $r4.<com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor: com.ichi2.anki.DeckOptions$DeckPreferenceHack this$1>;

        $r6 = $r5.<com.ichi2.anki.DeckOptions$DeckPreferenceHack: com.ichi2.anki.DeckOptions this$0>;

        $r3 = staticinvoke <com.ichi2.anki.DeckOptions: com.ichi2.libanki.Collection access$200(com.ichi2.anki.DeckOptions)>($r6);

        virtualinvoke $r3.<com.ichi2.libanki.Collection: void modSchemaNoCheck()>();

        $r4 = r0.<com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor$1: com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor this$2>;

     label1:
        staticinvoke <com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor: void access$300(com.ichi2.anki.DeckOptions$DeckPreferenceHack$Editor)>($r4);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r7;

        catch com.ichi2.anki.exception.ConfirmModSchemaException from label1 to label2 with label3;
    }
