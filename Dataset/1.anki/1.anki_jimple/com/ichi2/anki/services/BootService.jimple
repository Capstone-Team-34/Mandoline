com.ichi2.anki.services.BootService extends android.app.IntentService
    public void <init>()
    {
        com.ichi2.anki.services.BootService r0;

        r0 := @this: com.ichi2.anki.services.BootService;

        specialinvoke r0.<android.app.IntentService: void <init>(java.lang.String)>("BootService");

        return;
    }
    protected void onHandleIntent(android.content.Intent)
    {
        com.ichi2.anki.services.BootService r0;
        android.content.Intent $r1;
        org.json.JSONException r2;
        java.lang.Object $r3;
        android.app.AlarmManager r4;
        com.ichi2.anki.CollectionHelper $r5;
        com.ichi2.libanki.Collection $r6;
        com.ichi2.libanki.Decks $r7;
        java.util.ArrayList $r8;
        java.util.Iterator $r9;
        boolean $z0;
        org.json.JSONObject r10, $r11;
        long $l0;
        int $i1;
        android.app.PendingIntent $r12;
        java.util.Calendar $r13;
        org.json.JSONArray $r14;
        java.lang.RuntimeException $r15;

        r0 := @this: com.ichi2.anki.services.BootService;

        $r1 := @parameter0: android.content.Intent;

        $r3 = virtualinvoke r0.<com.ichi2.anki.services.BootService: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r4 = (android.app.AlarmManager) $r3;

     label01:
        $r5 = staticinvoke <com.ichi2.anki.CollectionHelper: com.ichi2.anki.CollectionHelper getInstance()>();

        $r6 = virtualinvoke $r5.<com.ichi2.anki.CollectionHelper: com.ichi2.libanki.Collection getCol(android.content.Context)>(r0);

        $r7 = virtualinvoke $r6.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r8 = virtualinvoke $r7.<com.ichi2.libanki.Decks: java.util.ArrayList all()>();

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 == 0 goto label17;

     label04:
        $r3 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label05:
        r10 = (org.json.JSONObject) $r3;

     label06:
        $r5 = staticinvoke <com.ichi2.anki.CollectionHelper: com.ichi2.anki.CollectionHelper getInstance()>();

        $r6 = virtualinvoke $r5.<com.ichi2.anki.CollectionHelper: com.ichi2.libanki.Collection getCol(android.content.Context)>(r0);

        $r7 = virtualinvoke $r6.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l0 = virtualinvoke r10.<org.json.JSONObject: long getLong(java.lang.String)>("id");

        $z0 = virtualinvoke $r7.<com.ichi2.libanki.Decks: boolean isDyn(long)>($l0);

     label07:
        if $z0 != 0 goto label02;

     label08:
        $l0 = virtualinvoke r10.<org.json.JSONObject: long getLong(java.lang.String)>("conf");

        $r7 = virtualinvoke $r6.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r11 = virtualinvoke $r7.<com.ichi2.libanki.Decks: org.json.JSONObject getConf(long)>($l0);

        $z0 = virtualinvoke $r11.<org.json.JSONObject: boolean has(java.lang.String)>("reminder");

     label09:
        if $z0 == 0 goto label02;

     label10:
        $r11 = virtualinvoke $r11.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("reminder");

        $z0 = virtualinvoke $r11.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("enabled");

     label11:
        if $z0 == 0 goto label02;

     label12:
        $l0 = virtualinvoke r10.<org.json.JSONObject: long getLong(java.lang.String)>("id");

     label13:
        $i1 = (int) $l0;

        $r1 = new android.content.Intent;

     label14:
        specialinvoke $r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/ichi2/anki/receiver/ReminderReceiver;");

        $l0 = virtualinvoke r10.<org.json.JSONObject: long getLong(java.lang.String)>("id");

        $r1 = virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("EXTRA_DECK_ID", $l0);

        $r12 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r0, $i1, $r1, 0);

        $r13 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r14 = virtualinvoke $r11.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("time");

        $i1 = virtualinvoke $r14.<org.json.JSONArray: int getInt(int)>(0);

        virtualinvoke $r13.<java.util.Calendar: void set(int,int)>(11, $i1);

        $r14 = virtualinvoke $r11.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("time");

        $i1 = virtualinvoke $r14.<org.json.JSONArray: int getInt(int)>(1);

        virtualinvoke $r13.<java.util.Calendar: void set(int,int)>(12, $i1);

        virtualinvoke $r13.<java.util.Calendar: void set(int,int)>(13, 0);

        $l0 = virtualinvoke $r13.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke r4.<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>(0, $l0, 86400000L, $r12);

     label15:
        goto label02;

     label16:
        r2 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r15;

     label17:
        return;

        catch org.json.JSONException from label01 to label03 with label16;
        catch org.json.JSONException from label04 to label05 with label16;
        catch org.json.JSONException from label06 to label07 with label16;
        catch org.json.JSONException from label08 to label09 with label16;
        catch org.json.JSONException from label10 to label11 with label16;
        catch org.json.JSONException from label12 to label13 with label16;
        catch org.json.JSONException from label14 to label15 with label16;
    }
