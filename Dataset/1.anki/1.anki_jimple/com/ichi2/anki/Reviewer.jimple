com.ichi2.anki.Reviewer extends com.ichi2.anki.AbstractFlashcardViewer
private static final int ADD_NOTE
private boolean mBlackWhiteboard
private boolean mHasDrawerSwipeConflicts
private java.lang.Long mLastSelectedBrowserDid
private boolean mPrefFullscreenReview
private boolean mShowWhiteboard
    public void <init>()
    {
        com.ichi2.anki.Reviewer r0;

        r0 := @this: com.ichi2.anki.Reviewer;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void <init>()>();

        r0.<com.ichi2.anki.Reviewer: boolean mHasDrawerSwipeConflicts> = 0;

        r0.<com.ichi2.anki.Reviewer: boolean mShowWhiteboard> = 1;

        r0.<com.ichi2.anki.Reviewer: boolean mBlackWhiteboard> = 1;

        r0.<com.ichi2.anki.Reviewer: boolean mPrefFullscreenReview> = 0;

        r0.<com.ichi2.anki.Reviewer: java.lang.Long mLastSelectedBrowserDid> = null;

        return;
    }
    static boolean access$000(com.ichi2.anki.Reviewer)
    {
        com.ichi2.anki.Reviewer $r0;
        boolean z0;

        $r0 := @parameter0: com.ichi2.anki.Reviewer;

        z0 = $r0.<com.ichi2.anki.Reviewer: boolean mShowWhiteboard>;

        return z0;
    }
    static boolean access$100(com.ichi2.anki.Reviewer)
    {
        com.ichi2.anki.Reviewer $r0;
        boolean z0;

        $r0 := @parameter0: com.ichi2.anki.Reviewer;

        z0 = $r0.<com.ichi2.anki.Reviewer: boolean mPrefFullscreenReview>;

        return z0;
    }
    static boolean access$200(com.ichi2.anki.Reviewer, com.ichi2.libanki.Collection$DismissType)
    {
        com.ichi2.anki.Reviewer $r0;
        com.ichi2.libanki.Collection$DismissType $r1;
        boolean $z0;

        $r0 := @parameter0: com.ichi2.anki.Reviewer;

        $r1 := @parameter1: com.ichi2.libanki.Collection$DismissType;

        $z0 = specialinvoke $r0.<com.ichi2.anki.Reviewer: boolean dismissNoteAvailable(com.ichi2.libanki.Collection$DismissType)>($r1);

        return $z0;
    }
    private void addNote()
    {
        com.ichi2.anki.Reviewer r0;
        android.content.Intent r1;
        int $i0;

        r0 := @this: com.ichi2.anki.Reviewer;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/ichi2/anki/NoteEditor;");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("CALLER", 11);

        $i0 = <com.ichi2.anim.ActivityTransitionAnimation: int LEFT>;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void startActivityForResultWithAnimation(android.content.Intent,int,int)>(r1, 12, $i0);

        return;
    }
    private void createWhiteboard()
    {
        com.ichi2.anki.Reviewer r0;
        android.widget.FrameLayout$LayoutParams r1;
        boolean $z0, $z1;
        android.view.View $r2;
        com.ichi2.anki.Whiteboard $r3;
        android.widget.FrameLayout r4;
        com.ichi2.anki.Reviewer$1 $r5;

        r0 := @this: com.ichi2.anki.Reviewer;

        $r3 = new com.ichi2.anki.Whiteboard;

        $z1 = r0.<com.ichi2.anki.Reviewer: boolean mNightMode>;

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mBlackWhiteboard>;

        specialinvoke $r3.<com.ichi2.anki.Whiteboard: void <init>(com.ichi2.anki.AnkiActivity,boolean,boolean)>(r0, $z1, $z0);

        r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard> = $r3;

        r1 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke r1.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        $r3 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        virtualinvoke $r3.<com.ichi2.anki.Whiteboard: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        $r2 = virtualinvoke r0.<com.ichi2.anki.Reviewer: android.view.View findViewById(int)>(2131755286);

        r4 = (android.widget.FrameLayout) $r2;

        $r3 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        virtualinvoke r4.<android.widget.FrameLayout: void addView(android.view.View)>($r3);

        $r3 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        $r5 = new com.ichi2.anki.Reviewer$1;

        specialinvoke $r5.<com.ichi2.anki.Reviewer$1: void <init>(com.ichi2.anki.Reviewer)>(r0);

        virtualinvoke $r3.<com.ichi2.anki.Whiteboard: void setOnTouchListener(android.view.View$OnTouchListener)>($r5);

        $r3 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        virtualinvoke $r3.<com.ichi2.anki.Whiteboard: void setEnabled(boolean)>(1);

        return;
    }
    private void disableDrawerSwipeOnConflicts()
    {
        com.ichi2.anki.Reviewer r0;
        android.content.Context $r1;
        android.content.SharedPreferences $r2;
        boolean $z0;
        java.lang.String $r3;
        int $i0, $i1, $i2;

        r0 := @this: com.ichi2.anki.Reviewer;

        $r1 = virtualinvoke r0.<com.ichi2.anki.Reviewer: android.content.Context getBaseContext()>();

        $r2 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r1);

        $z0 = staticinvoke <com.ichi2.anki.AnkiDroidApp: boolean initiateGestures(android.content.SharedPreferences)>($r2);

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gestureSwipeUp", "9");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gestureSwipeDown", "0");

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gestureSwipeRight", "17");

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        if $i0 != 0 goto label1;

        if $i1 != 0 goto label1;

        if $i2 == 0 goto label2;

     label1:
        r0.<com.ichi2.anki.Reviewer: boolean mHasDrawerSwipeConflicts> = 1;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void disableDrawerSwipe()>();

     label2:
        return;
    }
    private boolean dismissNoteAvailable(com.ichi2.libanki.Collection$DismissType)
    {
        com.ichi2.anki.Reviewer r0;
        com.ichi2.libanki.Collection$DismissType $r1, $r8;
        com.ichi2.libanki.Card $r2, $r7;
        com.ichi2.libanki.Note $r3;
        java.util.ArrayList $r4;
        int $i0;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        long $l1, $l2;
        byte $b3;

        r0 := @this: com.ichi2.anki.Reviewer;

        $r1 := @parameter0: com.ichi2.libanki.Collection$DismissType;

        $r2 = r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Card mCurrentCard>;

        if $r2 == null goto label1;

        $r2 = r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Card mCurrentCard>;

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Card: com.ichi2.libanki.Note note()>();

        if $r3 == null goto label1;

        $r2 = r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Card mCurrentCard>;

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Card: com.ichi2.libanki.Note note()>();

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Note: java.util.ArrayList cards()>();

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 >= 2 goto label2;

     label1:
        return 0;

     label2:
        $r2 = r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Card mCurrentCard>;

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Card: com.ichi2.libanki.Note note()>();

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Note: java.util.ArrayList cards()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (com.ichi2.libanki.Card) $r6;

        $l1 = virtualinvoke $r2.<com.ichi2.libanki.Card: long getId()>();

        $r7 = r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Card mCurrentCard>;

        $l2 = virtualinvoke $r7.<com.ichi2.libanki.Card: long getId()>();

        $b3 = $l1 cmp $l2;

        if $b3 == 0 goto label3;

        $i0 = virtualinvoke $r2.<com.ichi2.libanki.Card: int getQueue()>();

        $r8 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType SUSPEND_NOTE>;

        if $r1 != $r8 goto label4;

        if $i0 != -1 goto label6;

     label4:
        $r8 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType BURY_NOTE>;

        if $r1 != $r8 goto label3;

        if $i0 == -1 goto label3;

        if $i0 == -2 goto label3;

        if $i0 == -3 goto label3;

        return 1;

     label5:
        return 0;

     label6:
        return 1;
    }
    private void selectDeckFromExtra()
    {
        com.ichi2.anki.Reviewer r0;
        android.content.Intent $r1;
        android.os.Bundle $r2;
        long $l0, $l2;
        byte $b1;
        java.lang.Object[] $r3;
        java.lang.Long $r4;
        com.ichi2.libanki.Collection $r5;
        com.ichi2.libanki.Decks $r6;
        com.ichi2.libanki.Sched $r7;

        r0 := @this: com.ichi2.anki.Reviewer;

        $r1 = virtualinvoke r0.<com.ichi2.anki.Reviewer: android.content.Intent getIntent()>();

        $r2 = virtualinvoke $r1.<android.content.Intent: android.os.Bundle getExtras()>();

        $l0 = virtualinvoke $r2.<android.os.Bundle: long getLong(java.lang.String,long)>("deckId", -9223372036854775808L);

        $b1 = $l0 cmp -9223372036854775808L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3[0] = $r4;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("selectDeckFromExtra() with deckId = %d", $r3);

        $r5 = virtualinvoke r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Collection getCol()>();

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l2 = virtualinvoke $r6.<com.ichi2.libanki.Decks: long selected()>();

        $b1 = $l2 cmp $l0;

        if $b1 == 0 goto label2;

        $r5 = virtualinvoke r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Collection getCol()>();

        virtualinvoke $r5.<com.ichi2.libanki.Collection: void clearUndo()>();

     label2:
        $r5 = virtualinvoke r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Collection getCol()>();

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        virtualinvoke $r6.<com.ichi2.libanki.Decks: void select(long)>($l0);

        $r5 = virtualinvoke r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Collection getCol()>();

        $r7 = virtualinvoke $r5.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        virtualinvoke $r7.<com.ichi2.libanki.Sched: void reset()>();

        return;
    }
    private void setCustomButtons(android.view.Menu)
    {
        com.ichi2.anki.Reviewer r0;
        android.view.Menu $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        int $i0, $i1;
        android.view.MenuItem $r7;

        r0 := @this: com.ichi2.anki.Reviewer;

        $r1 := @parameter0: android.view.Menu;

        $r2 = r0.<com.ichi2.anki.Reviewer: java.util.Map mCustomButtons>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $r2 = r0.<com.ichi2.anki.Reviewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r6 = (java.lang.Integer) $r5;

        $i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if $i1 == 3 goto label2;

        $r7 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>($i0);

        $r2 = r0.<com.ichi2.anki.Reviewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r6 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        staticinvoke <android.support.v4.view.MenuItemCompat: void setShowAsAction(android.view.MenuItem,int)>($r7, $i0);

        goto label1;

     label2:
        $r7 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>($i0);

        interfaceinvoke $r7.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(0);

        goto label1;

     label3:
        return;
    }
    private void setWhiteboardEnabledState(boolean)
    {
        com.ichi2.anki.Reviewer r0;
        boolean $z0;
        long $l0;
        com.ichi2.anki.Whiteboard $r1;

        r0 := @this: com.ichi2.anki.Reviewer;

        $z0 := @parameter0: boolean;

        r0.<com.ichi2.anki.Reviewer: boolean mPrefWhiteboard> = $z0;

        $l0 = virtualinvoke r0.<com.ichi2.anki.Reviewer: long getParentDid()>();

        staticinvoke <com.ichi2.anki.MetaDB: void storeWhiteboardState(android.content.Context,long,boolean)>(r0, $l0, $z0);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.ichi2.anki.Reviewer: void createWhiteboard()>();

     label1:
        return;
    }
    private void setWhiteboardVisibility(boolean)
    {
        com.ichi2.anki.Reviewer r0;
        boolean $z0;
        com.ichi2.anki.Whiteboard $r1;

        r0 := @this: com.ichi2.anki.Reviewer;

        $z0 := @parameter0: boolean;

        r0.<com.ichi2.anki.Reviewer: boolean mShowWhiteboard> = $z0;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        virtualinvoke $r1.<com.ichi2.anki.Whiteboard: void setVisibility(int)>(0);

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void disableDrawerSwipe()>();

        return;

     label1:
        $r1 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        virtualinvoke $r1.<com.ichi2.anki.Whiteboard: void setVisibility(int)>(8);

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mHasDrawerSwipeConflicts>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void enableDrawerSwipe()>();

     label2:
        return;
    }
    public void displayCardQuestion()
    {
        com.ichi2.anki.Reviewer r0;

        r0 := @this: com.ichi2.anki.Reviewer;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void initTimer()>();

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void displayCardQuestion()>();

        return;
    }
    public void fillFlashcard()
    {
        com.ichi2.anki.Reviewer r0;
        boolean $z0;
        com.ichi2.anki.Whiteboard $r1;

        r0 := @this: com.ichi2.anki.Reviewer;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void fillFlashcard()>();

        $z0 = <com.ichi2.anki.Reviewer: boolean sDisplayAnswer>;

        if $z0 != 0 goto label1;

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mShowWhiteboard>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        if $r1 == null goto label1;

        $r1 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        virtualinvoke $r1.<com.ichi2.anki.Whiteboard: void clear()>();

     label1:
        return;
    }
    protected int getContentViewAttr(int)
    {
        com.ichi2.anki.Reviewer r0;
        int $i0, $i1;

        r0 := @this: com.ichi2.anki.Reviewer;

        $i1 := @parameter0: int;

        $i0 = staticinvoke <com.ichi2.compat.CompatHelper: int getSdkVersion()>();

        if $i0 >= 19 goto label1;

        $i1 = 0;

     label1:
        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            default: goto label2;
        };

     label2:
        return 2130903144;

     label3:
        return 2130903149;

     label4:
        return 2130903150;
    }
    protected void initControls()
    {
        com.ichi2.anki.Reviewer r0;
        boolean $z0;

        r0 := @this: com.ichi2.anki.Reviewer;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void initControls()>();

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mPrefWhiteboard>;

        if $z0 == 0 goto label1;

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mShowWhiteboard>;

        specialinvoke r0.<com.ichi2.anki.Reviewer: void setWhiteboardVisibility(boolean)>($z0);

     label1:
        return;
    }
    protected void onActivityResult(int, int, android.content.Intent)
    {
        com.ichi2.anki.Reviewer r0;
        int $i0, $i1;
        android.content.Intent $r1;
        boolean $z0;
        java.lang.Long $r2;
        com.ichi2.libanki.Collection $r3;
        com.ichi2.libanki.Decks $r4;
        long $l2;

        r0 := @this: com.ichi2.anki.Reviewer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.content.Intent;

        if $i0 == 102 goto label1;

        if $i0 != 101 goto label3;

     label1:
        if $r1 == null goto label4;

        $z0 = virtualinvoke $r1.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("allDecksSelected", 0);

        if $z0 == 0 goto label4;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L);

        r0.<com.ichi2.anki.Reviewer: java.lang.Long mLastSelectedBrowserDid> = $r2;

     label2:
        if $r1 == null goto label3;

        $z0 = virtualinvoke $r1.<android.content.Intent: boolean hasExtra(java.lang.String)>("originalDeck");

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Collection getCol()>();

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l2 = virtualinvoke $r1.<android.content.Intent: long getLongExtra(java.lang.String,long)>("originalDeck", 0L);

        virtualinvoke $r4.<com.ichi2.libanki.Decks: void select(long)>($l2);

     label3:
        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void onActivityResult(int,int,android.content.Intent)>($i0, $i1, $r1);

        return;

     label4:
        $r3 = virtualinvoke r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Collection getCol()>();

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l2 = virtualinvoke $r4.<com.ichi2.libanki.Decks: long selected()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        r0.<com.ichi2.anki.Reviewer: java.lang.Long mLastSelectedBrowserDid> = $r2;

        goto label2;
    }
    protected void onCollectionLoaded(com.ichi2.libanki.Collection)
    {
        com.ichi2.anki.Reviewer r0;
        com.ichi2.libanki.Collection $r1;
        com.ichi2.async.DeckTask$TaskData $r2;
        long $l0;
        boolean $z0;
        com.ichi2.libanki.Sched $r3;
        com.ichi2.async.DeckTask$TaskListener $r4;
        com.ichi2.async.DeckTask$TaskData[] $r5;
        java.lang.ref.WeakReference $r6;
        com.ichi2.compat.Compat $r7;

        r0 := @this: com.ichi2.anki.Reviewer;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void onCollectionLoaded(com.ichi2.libanki.Collection)>($r1);

        $l0 = virtualinvoke r0.<com.ichi2.anki.Reviewer: long getParentDid()>();

        $z0 = staticinvoke <com.ichi2.anki.MetaDB: boolean getWhiteboardState(android.content.Context,long)>(r0, $l0);

        r0.<com.ichi2.anki.Reviewer: boolean mPrefWhiteboard> = $z0;

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mPrefWhiteboard>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.ichi2.anki.Reviewer: void setWhiteboardEnabledState(boolean)>(1);

        specialinvoke r0.<com.ichi2.anki.Reviewer: void setWhiteboardVisibility(boolean)>(1);

     label1:
        $r3 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        virtualinvoke $r3.<com.ichi2.libanki.Sched: void reset()>();

        $r4 = r0.<com.ichi2.anki.Reviewer: com.ichi2.async.DeckTask$TaskListener mAnswerCardHandler>;

        $r5 = newarray (com.ichi2.async.DeckTask$TaskData)[1];

        $r2 = new com.ichi2.async.DeckTask$TaskData;

        specialinvoke $r2.<com.ichi2.async.DeckTask$TaskData: void <init>(com.ichi2.libanki.Card,int)>(null, 0);

        $r5[0] = $r2;

        staticinvoke <com.ichi2.async.DeckTask: com.ichi2.async.DeckTask launchDeckTask(int,com.ichi2.async.DeckTask$Listener,com.ichi2.async.DeckTask$TaskData[])>(3, $r4, $r5);

        specialinvoke r0.<com.ichi2.anki.Reviewer: void disableDrawerSwipeOnConflicts()>();

        $r3 = r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Sched mSched>;

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        virtualinvoke $r3.<com.ichi2.libanki.Sched: void setContext(java.lang.ref.WeakReference)>($r6);

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mPrefFullscreenReview>;

        if $z0 == 0 goto label2;

        $r7 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        interfaceinvoke $r7.<com.ichi2.compat.Compat: void setFullScreen(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

     label2:
        return;
    }
    protected void onCreate(android.os.Bundle)
    {
        com.ichi2.anki.Reviewer r0;
        android.os.Bundle $r1;
        java.lang.Object[] $r2;
        java.lang.String $r3, $r5;
        android.content.Intent $r4;
        boolean $z0;

        r0 := @this: com.ichi2.anki.Reviewer;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("onCreate()", $r2);

        $r3 = "android.intent.action.VIEW";

        $r4 = virtualinvoke r0.<com.ichi2.anki.Reviewer: android.content.Intent getIntent()>();

        $r5 = virtualinvoke $r4.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke r0.<com.ichi2.anki.Reviewer: android.content.Intent getIntent()>();

        $r3 = virtualinvoke $r4.<android.content.Intent: java.lang.String getAction()>();

        $r2[0] = $r3;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("onCreate() :: received Intent with action = %s", $r2);

        specialinvoke r0.<com.ichi2.anki.Reviewer: void selectDeckFromExtra()>();

     label1:
        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void onCreate(android.os.Bundle)>($r1);

        return;
    }
    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        com.ichi2.anki.Reviewer r0;
        android.view.Menu $r1;
        android.view.MenuInflater $r2;
        android.content.res.Resources $r3;
        com.ichi2.libanki.Card $r4;
        com.ichi2.libanki.Note $r5;
        boolean $z0;
        android.view.MenuItem $r6;
        com.ichi2.anki.Whiteboard $r7;
        int $i0;
        android.graphics.drawable.Drawable $r8;
        java.util.Map $r9;
        java.lang.Integer $r10;
        java.lang.Object $r11;
        java.lang.String $r12;
        com.ichi2.libanki.Collection $r13;
        com.ichi2.libanki.Decks $r14;
        long $l1;
        com.ichi2.anki.Reviewer$SuspendProvider $r15;
        com.ichi2.anki.Reviewer$BuryProvider $r16;
        com.ichi2.libanki.Collection$DismissType $r17;

        r0 := @this: com.ichi2.anki.Reviewer;

        $r1 := @parameter0: android.view.Menu;

        $r2 = virtualinvoke r0.<com.ichi2.anki.Reviewer: android.view.MenuInflater getMenuInflater()>();

        virtualinvoke $r2.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(2131820557, $r1);

        $r3 = virtualinvoke r0.<com.ichi2.anki.Reviewer: android.content.res.Resources getResources()>();

        specialinvoke r0.<com.ichi2.anki.Reviewer: void setCustomButtons(android.view.Menu)>($r1);

        $r4 = r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Card mCurrentCard>;

        if $r4 == null goto label14;

        $r4 = r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Card mCurrentCard>;

        $r5 = virtualinvoke $r4.<com.ichi2.libanki.Card: com.ichi2.libanki.Note note()>();

        $z0 = virtualinvoke $r5.<com.ichi2.libanki.Note: boolean hasTag(java.lang.String)>("marked");

        if $z0 == 0 goto label14;

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755391);

        $r6 = interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setTitle(int)>(2131231124);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837681);

     label01:
        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mShowWhiteboard>;

        if $z0 == 0 goto label15;

        $r7 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        if $r7 == null goto label15;

        $r7 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        $i0 = virtualinvoke $r7.<com.ichi2.anki.Whiteboard: int undoSize()>();

        if $i0 <= 0 goto label15;

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755360);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837642);

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755360);

        $r6 = interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(1);

        $r8 = interfaceinvoke $r6.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setAlpha(int)>(255);

     label02:
        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mPrefWhiteboard>;

        if $z0 == 0 goto label19;

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755398);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setTitle(int)>(2131230982);

        $r9 = r0.<com.ichi2.anki.Reviewer: java.util.Map mCustomButtons>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755390);

        $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r10 = (java.lang.Integer) $r11;

        $i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        if $i0 == 3 goto label03;

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755390);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(1);

     label03:
        $r9 = r0.<com.ichi2.anki.Reviewer: java.util.Map mCustomButtons>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755389);

        $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r10 = (java.lang.Integer) $r11;

        $i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        if $i0 == 3 goto label04;

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755389);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(1);

     label04:
        $r8 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>(r0, 2130837651);

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mShowWhiteboard>;

        if $z0 == 0 goto label18;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setAlpha(int)>(255);

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755390);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>($r8);

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755390);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setTitle(int)>(2131231067);

     label05:
        $z0 = staticinvoke <com.ichi2.compat.CompatHelper: boolean isHoneycomb()>();

        if $z0 != 0 goto label09;

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mDisableClipboard>;

        if $z0 != 0 goto label09;

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755397);

        $r6 = interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(1);

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mPrefWhiteboard>;

        if $z0 == 0 goto label06;

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mShowWhiteboard>;

        if $z0 != 0 goto label20;

     label06:
        $z0 = 1;

     label07:
        $r6 = interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>($z0);

        $z0 = virtualinvoke r0.<com.ichi2.anki.Reviewer: boolean clipboardHasText()>();

        if $z0 == 0 goto label21;

        $r12 = staticinvoke <com.ichi2.anki.Lookup: java.lang.String getSearchStringTitle()>();

     label08:
        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)>($r12);

     label09:
        $r13 = virtualinvoke r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Collection getCol()>();

        $r14 = virtualinvoke $r13.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l1 = virtualinvoke r0.<com.ichi2.anki.Reviewer: long getParentDid()>();

        $z0 = virtualinvoke $r14.<com.ichi2.libanki.Decks: boolean isDyn(long)>($l1);

        if $z0 == 0 goto label10;

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755399);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(0);

     label10:
        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mSpeakText>;

        if $z0 == 0 goto label11;

        $r9 = r0.<com.ichi2.anki.Reviewer: java.util.Map mCustomButtons>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755400);

        $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r10 = (java.lang.Integer) $r11;

        $i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        if $i0 == 3 goto label11;

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755400);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(1);

     label11:
        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755396);

        $r15 = new com.ichi2.anki.Reviewer$SuspendProvider;

        specialinvoke $r15.<com.ichi2.anki.Reviewer$SuspendProvider: void <init>(com.ichi2.anki.Reviewer,android.content.Context)>(r0, r0);

        staticinvoke <android.support.v4.view.MenuItemCompat: android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider)>($r6, $r15);

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755395);

        $r16 = new com.ichi2.anki.Reviewer$BuryProvider;

        specialinvoke $r16.<com.ichi2.anki.Reviewer$BuryProvider: void <init>(com.ichi2.anki.Reviewer,android.content.Context)>(r0, r0);

        staticinvoke <android.support.v4.view.MenuItemCompat: android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider)>($r6, $r16);

        $r17 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType SUSPEND_NOTE>;

        $z0 = specialinvoke r0.<com.ichi2.anki.Reviewer: boolean dismissNoteAvailable(com.ichi2.libanki.Collection$DismissType)>($r17);

        if $z0 == 0 goto label22;

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755396);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837659);

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755396);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setTitle(int)>(2131231121);

     label12:
        $r17 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType BURY_NOTE>;

        $z0 = specialinvoke r0.<com.ichi2.anki.Reviewer: boolean dismissNoteAvailable(com.ichi2.libanki.Collection$DismissType)>($r17);

        if $z0 == 0 goto label23;

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755395);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837648);

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755395);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setTitle(int)>(2131231110);

     label13:
        $z0 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean onCreateOptionsMenu(android.view.Menu)>($r1);

        return $z0;

     label14:
        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755391);

        $r6 = interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setTitle(int)>(2131231117);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837680);

        goto label01;

     label15:
        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mShowWhiteboard>;

        if $z0 == 0 goto label16;

        $r7 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        if $r7 == null goto label16;

        $r7 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        $z0 = virtualinvoke $r7.<com.ichi2.anki.Whiteboard: boolean isUndoModeActive()>();

        if $z0 == 0 goto label16;

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755360);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837642);

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755360);

        $r6 = interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(0);

        $r8 = interfaceinvoke $r6.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setAlpha(int)>(76);

        goto label02;

     label16:
        $z0 = virtualinvoke r0.<com.ichi2.anki.Reviewer: boolean colIsOpen()>();

        if $z0 == 0 goto label17;

        $r13 = virtualinvoke r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Collection getCol()>();

        $z0 = virtualinvoke $r13.<com.ichi2.libanki.Collection: boolean undoAvailable()>();

        if $z0 == 0 goto label17;

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755360);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837686);

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755360);

        $r6 = interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(1);

        $r8 = interfaceinvoke $r6.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setAlpha(int)>(255);

        goto label02;

     label17:
        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755360);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837686);

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755360);

        $r6 = interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(0);

        $r8 = interfaceinvoke $r6.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setAlpha(int)>(76);

        goto label02;

     label18:
        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setAlpha(int)>(77);

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755390);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>($r8);

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755390);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setTitle(int)>(2131231296);

        goto label05;

     label19:
        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755398);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setTitle(int)>(2131231009);

        goto label05;

     label20:
        $z0 = 0;

        goto label07;

     label21:
        $r12 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(2131231120);

        goto label08;

     label22:
        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755396);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837658);

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755396);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setTitle(int)>(2131231122);

        goto label12;

     label23:
        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755395);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setIcon(int)>(2130837647);

        $r6 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755395);

        interfaceinvoke $r6.<android.view.MenuItem: android.view.MenuItem setTitle(int)>(2131231111);

        goto label13;
    }
    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        com.ichi2.anki.Reviewer r0;
        int $i0, $i2;
        android.view.KeyEvent $r1;
        char c1;
        android.widget.EditText $r2;
        boolean $z0;
        com.ichi2.libanki.Card $r3;
        com.ichi2.libanki.Collection$DismissType $r4;

        r0 := @this: com.ichi2.anki.Reviewer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $i2 = virtualinvoke $r1.<android.view.KeyEvent: int getUnicodeChar()>();

        c1 = (char) $i2;

        $r2 = r0.<com.ichi2.anki.Reviewer: android.widget.EditText mAnswerField>;

        if $r2 == null goto label15;

        $r2 = r0.<com.ichi2.anki.Reviewer: android.widget.EditText mAnswerField>;

        $z0 = virtualinvoke $r2.<android.widget.EditText: boolean isFocused()>();

        if $z0 != 0 goto label15;

        $z0 = <com.ichi2.anki.Reviewer: boolean sDisplayAnswer>;

        if $z0 == 0 goto label06;

        if c1 != 49 goto label01;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void answerCard(int)>(1);

        return 1;

     label01:
        if c1 != 50 goto label02;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void answerCard(int)>(2);

        return 1;

     label02:
        if c1 != 51 goto label03;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void answerCard(int)>(3);

        return 1;

     label03:
        if c1 != 52 goto label04;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void answerCard(int)>(4);

        return 1;

     label04:
        if $i0 == 62 goto label05;

        if $i0 == 66 goto label05;

        if $i0 != 160 goto label06;

     label05:
        $i0 = virtualinvoke r0.<com.ichi2.anki.Reviewer: int getDefaultEase()>();

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void answerCard(int)>($i0);

        return 1;

     label06:
        if c1 != 101 goto label07;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: boolean editCard()>();

        return 1;

     label07:
        if c1 != 42 goto label08;

        $r3 = r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Card mCurrentCard>;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void onMark(com.ichi2.libanki.Card)>($r3);

        return 1;

     label08:
        if c1 != 45 goto label09;

        $r4 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType BURY_CARD>;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void dismiss(com.ichi2.libanki.Collection$DismissType)>($r4);

        return 1;

     label09:
        if c1 != 61 goto label10;

        $r4 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType BURY_NOTE>;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void dismiss(com.ichi2.libanki.Collection$DismissType)>($r4);

        return 1;

     label10:
        if c1 != 64 goto label11;

        $r4 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType SUSPEND_CARD>;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void dismiss(com.ichi2.libanki.Collection$DismissType)>($r4);

        return 1;

     label11:
        if c1 != 33 goto label12;

        $r4 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType SUSPEND_NOTE>;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void dismiss(com.ichi2.libanki.Collection$DismissType)>($r4);

        return 1;

     label12:
        if c1 == 114 goto label13;

        if $i0 != 135 goto label14;

     label13:
        virtualinvoke r0.<com.ichi2.anki.Reviewer: void playSounds(boolean)>(1);

        return 1;

     label14:
        if c1 != 122 goto label15;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void undo()>();

        return 1;

     label15:
        $z0 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;
    }
    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        com.ichi2.anki.Reviewer r0;
        android.view.MenuItem $r1;
        android.content.Intent r2;
        boolean $z0, $z1;
        android.support.v7.app.ActionBarDrawerToggle $r3;
        int $i0;
        java.lang.Object[] $r4;
        com.ichi2.anki.Whiteboard $r5;
        com.ichi2.libanki.Card $r6;
        android.support.v4.view.ActionProvider $r7;
        com.ichi2.libanki.Collection$DismissType $r8;
        java.lang.Boolean $r9;

        r0 := @this: com.ichi2.anki.Reviewer;

        $r1 := @parameter0: android.view.MenuItem;

        $z0 = 0;

        $r3 = virtualinvoke r0.<com.ichi2.anki.Reviewer: android.support.v7.app.ActionBarDrawerToggle getDrawerToggle()>();

        $z1 = virtualinvoke $r3.<android.support.v7.app.ActionBarDrawerToggle: boolean onOptionsItemSelected(android.view.MenuItem)>($r1);

        if $z1 == 0 goto label01;

        return 1;

     label01:
        $i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 16908332: goto label03;
            case 2131755358: goto label11;
            case 2131755360: goto label04;
            case 2131755389: goto label12;
            case 2131755390: goto label13;
            case 2131755391: goto label06;
            case 2131755392: goto label08;
            case 2131755393: goto label23;
            case 2131755394: goto label07;
            case 2131755395: goto label09;
            case 2131755396: goto label10;
            case 2131755397: goto label20;
            case 2131755398: goto label17;
            case 2131755399: goto label21;
            case 2131755400: goto label22;
            default: goto label02;
        };

     label02:
        $z0 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean onOptionsItemSelected(android.view.MenuItem)>($r1);

        return $z0;

     label03:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Home button pressed", $r4);

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void closeReviewer(int,boolean)>(-1, 1);

        return 1;

     label04:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Undo button pressed", $r4);

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mShowWhiteboard>;

        if $z0 == 0 goto label05;

        $r5 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        if $r5 == null goto label05;

        $r5 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        $i0 = virtualinvoke $r5.<com.ichi2.anki.Whiteboard: int undoSize()>();

        if $i0 <= 0 goto label05;

        $r5 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        virtualinvoke $r5.<com.ichi2.anki.Whiteboard: void undo()>();

        return 1;

     label05:
        virtualinvoke r0.<com.ichi2.anki.Reviewer: void undo()>();

        return 1;

     label06:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Mark button pressed", $r4);

        $r6 = r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Card mCurrentCard>;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void onMark(com.ichi2.libanki.Card)>($r6);

        return 1;

     label07:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Replay audio button pressed (from menu)", $r4);

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void playSounds(boolean)>(1);

        return 1;

     label08:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Edit note button pressed", $r4);

        $z0 = virtualinvoke r0.<com.ichi2.anki.Reviewer: boolean editCard()>();

        return $z0;

     label09:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Bury button pressed", $r4);

        $r7 = staticinvoke <android.support.v4.view.MenuItemCompat: android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem)>($r1);

        $z0 = virtualinvoke $r7.<android.support.v4.view.ActionProvider: boolean hasSubMenu()>();

        if $z0 != 0 goto label24;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Bury card due to no submenu", $r4);

        $r8 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType BURY_CARD>;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void dismiss(com.ichi2.libanki.Collection$DismissType)>($r8);

        return 1;

     label10:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Suspend button pressed", $r4);

        $r7 = staticinvoke <android.support.v4.view.MenuItemCompat: android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem)>($r1);

        $z0 = virtualinvoke $r7.<android.support.v4.view.ActionProvider: boolean hasSubMenu()>();

        if $z0 != 0 goto label24;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Suspend card due to no submenu", $r4);

        $r8 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType SUSPEND_CARD>;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void dismiss(com.ichi2.libanki.Collection$DismissType)>($r8);

        return 1;

     label11:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Delete note button pressed", $r4);

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void showDeleteNoteDialog()>();

        return 1;

     label12:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Clear whiteboard button pressed", $r4);

        $r5 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        if $r5 == null goto label24;

        $r5 = r0.<com.ichi2.anki.Reviewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        virtualinvoke $r5.<com.ichi2.anki.Whiteboard: void clear()>();

        return 1;

     label13:
        $r4 = newarray (java.lang.Object)[1];

        $z1 = r0.<com.ichi2.anki.Reviewer: boolean mShowWhiteboard>;

        if $z1 != 0 goto label16;

        $z1 = 1;

     label14:
        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r4[0] = $r9;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Whiteboard visibility set to %b", $r4);

        $z1 = r0.<com.ichi2.anki.Reviewer: boolean mShowWhiteboard>;

        if $z1 != 0 goto label15;

        $z0 = 1;

     label15:
        specialinvoke r0.<com.ichi2.anki.Reviewer: void setWhiteboardVisibility(boolean)>($z0);

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void refreshActionBar()>();

        return 1;

     label16:
        $z1 = 0;

        goto label14;

     label17:
        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mPrefWhiteboard>;

        if $z0 != 0 goto label19;

        $z0 = 1;

     label18:
        r0.<com.ichi2.anki.Reviewer: boolean mPrefWhiteboard> = $z0;

        $r4 = newarray (java.lang.Object)[1];

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mPrefWhiteboard>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4[0] = $r9;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Whiteboard enabled state set to %b", $r4);

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mPrefWhiteboard>;

        specialinvoke r0.<com.ichi2.anki.Reviewer: void setWhiteboardEnabledState(boolean)>($z0);

        $z0 = r0.<com.ichi2.anki.Reviewer: boolean mPrefWhiteboard>;

        specialinvoke r0.<com.ichi2.anki.Reviewer: void setWhiteboardVisibility(boolean)>($z0);

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void refreshActionBar()>();

        return 1;

     label19:
        $z0 = 0;

        goto label18;

     label20:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Search dictionary button pressed", $r4);

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void lookUpOrSelectText()>();

        return 1;

     label21:
        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/ichi2/anki/DeckOptions;");

        $i0 = <com.ichi2.anim.ActivityTransitionAnimation: int FADE>;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void startActivityForResultWithAnimation(android.content.Intent,int,int)>(r2, 1, $i0);

        return 1;

     label22:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Select TTS button pressed", $r4);

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void showSelectTtsDialogue()>();

        return 1;

     label23:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Reviewer:: Add note button pressed", $r4);

        specialinvoke r0.<com.ichi2.anki.Reviewer: void addNote()>();

     label24:
        return 1;
    }
    protected void onStop()
    {
        com.ichi2.anki.Reviewer r0;
        boolean $z0;
        com.ichi2.libanki.Sched $r1;

        r0 := @this: com.ichi2.anki.Reviewer;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void onStop()>();

        $z0 = virtualinvoke r0.<com.ichi2.anki.Reviewer: boolean isFinishing()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r0.<com.ichi2.anki.Reviewer: boolean colIsOpen()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Sched mSched>;

        if $r1 == null goto label1;

        staticinvoke <com.ichi2.widget.WidgetStatus: void update(android.content.Context)>(r0);

     label1:
        staticinvoke <com.ichi2.anki.UIUtils: void saveCollectionInBackground(android.content.Context)>(r0);

        return;
    }
    public void onWindowFocusChanged(boolean)
    {
        com.ichi2.anki.Reviewer r0;
        boolean $z0;
        android.os.Handler $r1;

        r0 := @this: com.ichi2.anki.Reviewer;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void onWindowFocusChanged(boolean)>($z0);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void delayedHide(int)>(200);

        return;

     label1:
        $r1 = r0.<com.ichi2.anki.Reviewer: android.os.Handler mFullScreenHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(0);

        return;
    }
    protected void openCardBrowser()
    {
        com.ichi2.anki.Reviewer r0;
        android.content.Intent r1;
        com.ichi2.libanki.Collection $r2;
        com.ichi2.libanki.Decks $r3;
        long $l0;
        java.lang.Long $r4;
        com.ichi2.libanki.Card $r5;
        int $i1;

        r0 := @this: com.ichi2.anki.Reviewer;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/ichi2/anki/CardBrowser;");

        $r2 = virtualinvoke r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Collection getCol()>();

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l0 = virtualinvoke $r3.<com.ichi2.libanki.Decks: long selected()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("selectedDeck", $l0);

        $r4 = r0.<com.ichi2.anki.Reviewer: java.lang.Long mLastSelectedBrowserDid>;

        if $r4 == null goto label2;

        $r4 = r0.<com.ichi2.anki.Reviewer: java.lang.Long mLastSelectedBrowserDid>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("defaultDeckId", $r4);

     label1:
        $r5 = r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Card mCurrentCard>;

        $l0 = virtualinvoke $r5.<com.ichi2.libanki.Card: long getId()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("currentCard", $l0);

        $i1 = <com.ichi2.anim.ActivityTransitionAnimation: int LEFT>;

        virtualinvoke r0.<com.ichi2.anki.Reviewer: void startActivityForResultWithAnimation(android.content.Intent,int,int)>(r1, 101, $i1);

        return;

     label2:
        $r2 = virtualinvoke r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Collection getCol()>();

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l0 = virtualinvoke $r3.<com.ichi2.libanki.Decks: long selected()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("defaultDeckId", $l0);

        goto label1;
    }
    protected android.content.SharedPreferences restorePreferences()
    {
        com.ichi2.anki.Reviewer r0;
        boolean $z0, $z1;
        android.content.Context $r1;
        android.content.SharedPreferences $r2;
        java.lang.String $r3;
        int $i0;

        r0 := @this: com.ichi2.anki.Reviewer;

        $z0 = 1;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.SharedPreferences restorePreferences()>();

        $r1 = virtualinvoke r0.<com.ichi2.anki.Reviewer: android.content.Context getBaseContext()>();

        $r2 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r1);

        $z1 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("blackWhiteboard", 1);

        r0.<com.ichi2.anki.Reviewer: boolean mBlackWhiteboard> = $z1;

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("fullscreenMode", "0");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        if $i0 <= 0 goto label2;

     label1:
        r0.<com.ichi2.anki.Reviewer: boolean mPrefFullscreenReview> = $z0;

        return $r2;

     label2:
        $z0 = 0;

        goto label1;
    }
    protected void setTitle()
    {
        com.ichi2.anki.Reviewer r0;
        org.json.JSONException r1;
        java.lang.String[] r2;
        boolean $z0;
        com.ichi2.libanki.Collection $r3;
        com.ichi2.libanki.Decks $r4;
        org.json.JSONObject $r5;
        java.lang.String $r6;
        android.support.v7.app.ActionBar $r7;
        int $i0;
        java.lang.Object[] $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: com.ichi2.anki.Reviewer;

        r2 = newarray (java.lang.String)[1];

        r2[0] = "";

     label01:
        $z0 = virtualinvoke r0.<com.ichi2.anki.Reviewer: boolean colIsOpen()>();

     label02:
        if $z0 == 0 goto label10;

     label03:
        $r3 = virtualinvoke r0.<com.ichi2.anki.Reviewer: com.ichi2.libanki.Collection getCol()>();

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r5 = virtualinvoke $r4.<com.ichi2.libanki.Decks: org.json.JSONObject current()>();

        $r6 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        r2 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("::");

     label04:
        $r7 = virtualinvoke r0.<com.ichi2.anki.Reviewer: android.support.v7.app.ActionBar getSupportActionBar()>();

     label05:
        $i0 = lengthof r2;

        $i0 = $i0 + -1;

        $r6 = r2[$i0];

     label06:
        virtualinvoke $r7.<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>($r6);

     label07:
        $i0 = lengthof r2;

        $i0 = $i0 + -1;

        $r6 = r2[$i0];

     label08:
        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void setTitle(java.lang.CharSequence)>($r6);

     label09:
        $r7 = virtualinvoke r0.<com.ichi2.anki.Reviewer: android.support.v7.app.ActionBar getSupportActionBar()>();

        virtualinvoke $r7.<android.support.v7.app.ActionBar: void setSubtitle(java.lang.CharSequence)>("");

        return;

     label10:
        $r8 = newarray (java.lang.Object)[0];

     label11:
        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Could not set title in reviewer because collection closed", $r8);

     label12:
        goto label04;

     label13:
        r1 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r9;

        catch org.json.JSONException from label01 to label02 with label13;
        catch org.json.JSONException from label03 to label04 with label13;
        catch org.json.JSONException from label04 to label05 with label13;
        catch org.json.JSONException from label06 to label07 with label13;
        catch org.json.JSONException from label08 to label09 with label13;
        catch org.json.JSONException from label11 to label12 with label13;
    }
