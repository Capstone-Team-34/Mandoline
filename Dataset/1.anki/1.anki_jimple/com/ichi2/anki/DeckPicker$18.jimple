com.ichi2.anki.DeckPicker$18 extends java.lang.Object implements com.ichi2.async.Connection$CancellableTaskListener
long countDown
long countUp
java.lang.String currentMessage
final com.ichi2.anki.DeckPicker this$0
    void <init>(com.ichi2.anki.DeckPicker)
    {
        com.ichi2.anki.DeckPicker$18 r0;
        com.ichi2.anki.DeckPicker $r1;

        r0 := @this: com.ichi2.anki.DeckPicker$18;

        $r1 := @parameter0: com.ichi2.anki.DeckPicker;

        r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void onCancelled()
    {
        com.ichi2.anki.DeckPicker$18 r0;
        com.afollestad.materialdialogs.MaterialDialog $r1;
        com.ichi2.anki.DeckPicker $r2;

        r0 := @this: com.ichi2.anki.DeckPicker$18;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r1 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r2);

        virtualinvoke $r1.<com.afollestad.materialdialogs.MaterialDialog: void dismiss()>();

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1000(com.ichi2.anki.DeckPicker,int,java.lang.String)>($r2, 2131231391, "");

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: void access$000(com.ichi2.anki.DeckPicker)>($r2);

        return;
    }
    public void onDisconnected()
    {
        com.ichi2.anki.DeckPicker$18 r0;
        com.ichi2.anki.DeckPicker $r1;

        r0 := @this: com.ichi2.anki.DeckPicker$18;

        $r1 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1000(com.ichi2.anki.DeckPicker,int,java.lang.String)>($r1, 2131231513, "");

        return;
    }
    public void onPostExecute(com.ichi2.async.Connection$Payload)
    {
        com.ichi2.anki.DeckPicker$18 r0;
        com.ichi2.async.Connection$Payload $r1;
        com.ichi2.anki.DeckPicker $r2, $r15;
        android.support.v4.widget.SwipeRefreshLayout $r3;
        java.lang.Object[] $r4, $r18;
        android.content.res.Resources $r5;
        com.afollestad.materialdialogs.MaterialDialog $r6;
        boolean $z0;
        java.lang.String r7, r9;
        java.lang.Object $r8;
        android.content.Context $r10;
        android.content.SharedPreferences $r11;
        android.content.SharedPreferences$Editor $r12;
        java.lang.IllegalArgumentException r13;
        java.lang.Long $r14;
        long $l0;
        byte $b1;
        double $d0;
        com.ichi2.libanki.Collection $r16;
        int $i2;
        java.lang.Integer $r17;
        java.lang.StringBuilder $r19;
        java.lang.Boolean $r20;
        java.lang.IllegalStateException r21;

        r0 := @this: com.ichi2.anki.DeckPicker$18;

        $r1 := @parameter0: com.ichi2.async.Connection$Payload;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r3 = staticinvoke <com.ichi2.anki.DeckPicker: android.support.v4.widget.SwipeRefreshLayout access$600(com.ichi2.anki.DeckPicker)>($r2);

        virtualinvoke $r3.<android.support.v4.widget.SwipeRefreshLayout: void setRefreshing(boolean)>(0);

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Sync Listener onPostExecute()", $r4);

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r5 = virtualinvoke $r2.<com.ichi2.anki.DeckPicker: android.content.res.Resources getResources()>();

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

     label01:
        $r6 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r2);

     label02:
        if $r6 == null goto label06;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

     label03:
        $r6 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r2);

        $z0 = virtualinvoke $r6.<com.afollestad.materialdialogs.MaterialDialog: boolean isShowing()>();

     label04:
        if $z0 == 0 goto label06;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

     label05:
        $r6 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r2);

        virtualinvoke $r6.<com.afollestad.materialdialogs.MaterialDialog: void dismiss()>();

     label06:
        r7 = $r1.<com.ichi2.async.Connection$Payload: java.lang.String message>;

        $z0 = $r1.<com.ichi2.async.Connection$Payload: boolean success>;

        if $z0 != 0 goto label36;

        $r8 = $r1.<com.ichi2.async.Connection$Payload: java.lang.Object result>;

        $r4 = (java.lang.Object[]) $r8;

        $r8 = $r4[0];

        $z0 = $r8 instanceof java.lang.String;

        if $z0 == 0 goto label45;

        $r8 = $r4[0];

        r9 = (java.lang.String) $r8;

        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("badAuth");

        if $z0 == 0 goto label08;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r10 = virtualinvoke $r2.<com.ichi2.anki.DeckPicker: android.content.Context getBaseContext()>();

        $r11 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r10);

        $r12 = interfaceinvoke $r11.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r12.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("username", "");

        interfaceinvoke $r12.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("hkey", "");

        interfaceinvoke $r12.<android.content.SharedPreferences$Editor: boolean commit()>();

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        virtualinvoke $r2.<com.ichi2.anki.DeckPicker: void showSyncErrorDialog(int)>(0);

        return;

     label07:
        r13 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r13, "Could not dismiss mProgressDialog. The Activity must have been destroyed while the AsyncTask was running", $r4);

        staticinvoke <com.ichi2.anki.AnkiDroidApp: void sendExceptionReport(java.lang.Throwable,java.lang.String,java.lang.String)>(r13, "DeckPicker.onPostExecute", "Could not dismiss mProgressDialog");

        goto label06;

     label08:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("noChanges");

        if $z0 == 0 goto label09;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1000(com.ichi2.anki.DeckPicker,int,java.lang.String)>($r2, 2131231429, "");

        return;

     label09:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("clockOff");

        if $z0 == 0 goto label13;

        $r8 = $r4[1];

        $r14 = (java.lang.Long) $r8;

        $l0 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 86100L;

        if $b1 < 0 goto label11;

        $r4 = newarray (java.lang.Object)[2];

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4[0] = $r14;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231415);

        $r4[1] = r9;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231414, $r4);

     label10:
        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r15 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        r7 = staticinvoke <com.ichi2.anki.DeckPicker: java.lang.String access$1100(com.ichi2.anki.DeckPicker,java.lang.String,java.lang.String)>($r15, r9, r7);

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1200(com.ichi2.anki.DeckPicker,java.lang.String)>($r2, r7);

        return;

     label11:
        $d0 = (double) $l0;

        $d0 = $d0 % 3600.0;

        $d0 = $d0 - 1800.0;

        $d0 = staticinvoke <java.lang.Math: double abs(double)>($d0);

        $b1 = $d0 cmpl 1500.0;

        if $b1 < 0 goto label12;

        $r4 = newarray (java.lang.Object)[2];

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4[0] = $r14;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231416);

        $r4[1] = r9;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231414, $r4);

        goto label10;

     label12:
        $r4 = newarray (java.lang.Object)[2];

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4[0] = $r14;

        $r4[1] = "";

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231414, $r4);

        goto label10;

     label13:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("fullSync");

        if $z0 == 0 goto label15;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r16 = virtualinvoke $r2.<com.ichi2.anki.DeckPicker: com.ichi2.libanki.Collection getCol()>();

        $z0 = virtualinvoke $r16.<com.ichi2.libanki.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label14;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        virtualinvoke $r2.<com.ichi2.anki.DeckPicker: void sync(java.lang.String)>("download");

        return;

     label14:
        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        virtualinvoke $r2.<com.ichi2.anki.DeckPicker: void showSyncErrorDialog(int)>(2);

        return;

     label15:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("dbError");

        if $z0 != 0 goto label16;

        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("basicCheckFailed");

        if $z0 == 0 goto label17;

     label16:
        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231557);

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r9;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231401, $r4);

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r15 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        r7 = staticinvoke <com.ichi2.anki.DeckPicker: java.lang.String access$1100(com.ichi2.anki.DeckPicker,java.lang.String,java.lang.String)>($r15, r9, r7);

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1200(com.ichi2.anki.DeckPicker,java.lang.String)>($r2, r7);

        return;

     label17:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("overwriteError");

        if $z0 == 0 goto label18;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231430);

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r15 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        r7 = staticinvoke <com.ichi2.anki.DeckPicker: java.lang.String access$1100(com.ichi2.anki.DeckPicker,java.lang.String,java.lang.String)>($r15, r9, r7);

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1200(com.ichi2.anki.DeckPicker,java.lang.String)>($r2, r7);

        return;

     label18:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("remoteDbError");

        if $z0 == 0 goto label19;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231433);

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r15 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        r7 = staticinvoke <com.ichi2.anki.DeckPicker: java.lang.String access$1100(com.ichi2.anki.DeckPicker,java.lang.String,java.lang.String)>($r15, r9, r7);

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1200(com.ichi2.anki.DeckPicker,java.lang.String)>($r2, r7);

        return;

     label19:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("sdAccessError");

        if $z0 == 0 goto label20;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231443);

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r15 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        r7 = staticinvoke <com.ichi2.anki.DeckPicker: java.lang.String access$1100(com.ichi2.anki.DeckPicker,java.lang.String,java.lang.String)>($r15, r9, r7);

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1200(com.ichi2.anki.DeckPicker,java.lang.String)>($r2, r7);

        return;

     label20:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("finishError");

        if $z0 == 0 goto label21;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231419);

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r15 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        r7 = staticinvoke <com.ichi2.anki.DeckPicker: java.lang.String access$1100(com.ichi2.anki.DeckPicker,java.lang.String,java.lang.String)>($r15, r9, r7);

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1200(com.ichi2.anki.DeckPicker,java.lang.String)>($r2, r7);

        return;

     label21:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("connectionError");

        if $z0 == 0 goto label22;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231400);

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r15 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        r7 = staticinvoke <com.ichi2.anki.DeckPicker: java.lang.String access$1100(com.ichi2.anki.DeckPicker,java.lang.String,java.lang.String)>($r15, r9, r7);

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1200(com.ichi2.anki.DeckPicker,java.lang.String)>($r2, r7);

        return;

     label22:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("IOException");

        if $z0 == 0 goto label23;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        virtualinvoke $r2.<com.ichi2.anki.DeckPicker: void handleDbError()>();

        return;

     label23:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("genericError");

        if $z0 == 0 goto label24;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231413);

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r15 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        r7 = staticinvoke <com.ichi2.anki.DeckPicker: java.lang.String access$1100(com.ichi2.anki.DeckPicker,java.lang.String,java.lang.String)>($r15, r9, r7);

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1200(com.ichi2.anki.DeckPicker,java.lang.String)>($r2, r7);

        return;

     label24:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("OutOfMemoryError");

        if $z0 == 0 goto label25;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231013);

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r15 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        r7 = staticinvoke <com.ichi2.anki.DeckPicker: java.lang.String access$1100(com.ichi2.anki.DeckPicker,java.lang.String,java.lang.String)>($r15, r9, r7);

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1200(com.ichi2.anki.DeckPicker,java.lang.String)>($r2, r7);

        return;

     label25:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("sanityCheckError");

        if $z0 == 0 goto label26;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231434);

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r15 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        r7 = staticinvoke <com.ichi2.anki.DeckPicker: java.lang.String access$1100(com.ichi2.anki.DeckPicker,java.lang.String,java.lang.String)>($r15, r9, r7);

        virtualinvoke $r2.<com.ichi2.anki.DeckPicker: void showSyncErrorDialog(int,java.lang.String)>(6, r7);

        return;

     label26:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("serverAbort");

        if $z0 == 0 goto label27;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r15 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        r7 = staticinvoke <com.ichi2.anki.DeckPicker: java.lang.String access$1100(com.ichi2.anki.DeckPicker,java.lang.String,java.lang.String)>($r15, "", r7);

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1200(com.ichi2.anki.DeckPicker,java.lang.String)>($r2, r7);

        return;

     label27:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("mediaSyncServerError");

        if $z0 == 0 goto label28;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231424);

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r15 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        r7 = staticinvoke <com.ichi2.anki.DeckPicker: java.lang.String access$1100(com.ichi2.anki.DeckPicker,java.lang.String,java.lang.String)>($r15, r9, r7);

        virtualinvoke $r2.<com.ichi2.anki.DeckPicker: void showSyncErrorDialog(int,java.lang.String)>(9, r7);

        return;

     label28:
        $i2 = lengthof $r4;

        if $i2 <= 1 goto label34;

        $r8 = $r4[1];

        $z0 = $r8 instanceof java.lang.Integer;

        if $z0 == 0 goto label34;

        $r8 = $r4[1];

        $r17 = (java.lang.Integer) $r8;

        $i2 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        lookupswitch($i2)
        {
            case 409: goto label33;
            case 501: goto label31;
            case 503: goto label32;
            default: goto label29;
        };

     label29:
        $r18 = newarray (java.lang.Object)[2];

        r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r18[0] = r9;

        $r8 = $r4[2];

        $r18[1] = $r8;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231418, $r18);

     label30:
        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r15 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        r7 = staticinvoke <com.ichi2.anki.DeckPicker: java.lang.String access$1100(com.ichi2.anki.DeckPicker,java.lang.String,java.lang.String)>($r15, r9, r7);

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1200(com.ichi2.anki.DeckPicker,java.lang.String)>($r2, r7);

        return;

     label31:
        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231409);

        goto label30;

     label32:
        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231439);

        goto label30;

     label33:
        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231408);

        goto label30;

     label34:
        $r8 = $r4[0];

        $z0 = $r8 instanceof java.lang.String;

        if $z0 == 0 goto label35;

        $r18 = newarray (java.lang.Object)[2];

        r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(-1);

        $r18[0] = r9;

        $r8 = $r4[0];

        $r18[1] = $r8;

        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231418, $r18);

        goto label30;

     label35:
        r9 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231413);

        goto label30;

     label36:
        $r4 = $r1.<com.ichi2.async.Connection$Payload: java.lang.Object[] data>;

        $r8 = $r4[2];

        if $r8 == null goto label41;

        $r4 = $r1.<com.ichi2.async.Connection$Payload: java.lang.Object[] data>;

        $r8 = $r4[2];

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label41;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        r7 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131231402);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        $r4 = $r1.<com.ichi2.async.Connection$Payload: java.lang.Object[] data>;

        $r8 = $r4[2];

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        r7 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        virtualinvoke $r2.<com.ichi2.anki.DeckPicker: void showSimpleMessageDialog(java.lang.String)>(r7);

     label37:
        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: void access$000(com.ichi2.anki.DeckPicker)>($r2);

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.widget.WidgetStatus: void update(android.content.Context)>($r2);

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r20 = $r2.<com.ichi2.anki.DeckPicker: java.lang.Boolean mFragmented>;

        $z0 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label45;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

     label38:
        staticinvoke <com.ichi2.anki.DeckPicker: void access$1300(com.ichi2.anki.DeckPicker,boolean)>($r2, 0);

     label39:
        return;

     label40:
        r21 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r21, "Failed to load StudyOptionsFragment after sync.", $r4);

        return;

     label41:
        $r4 = $r1.<com.ichi2.async.Connection$Payload: java.lang.Object[] data>;

        $i2 = lengthof $r4;

        if $i2 <= 0 goto label44;

        $r4 = $r1.<com.ichi2.async.Connection$Payload: java.lang.Object[] data>;

        $r8 = $r4[0];

        $z0 = $r8 instanceof java.lang.String;

        if $z0 == 0 goto label44;

        $r4 = $r1.<com.ichi2.async.Connection$Payload: java.lang.Object[] data>;

        $r8 = $r4[0];

        r9 = (java.lang.String) $r8;

        $i2 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i2 <= 0 goto label44;

        $r4 = $r1.<com.ichi2.async.Connection$Payload: java.lang.Object[] data>;

        $r8 = $r4[0];

        r9 = (java.lang.String) $r8;

        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("upload");

        if $z0 == 0 goto label42;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1000(com.ichi2.anki.DeckPicker,int,java.lang.String)>($r2, 2131231420, r7);

        goto label37;

     label42:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("download");

        if $z0 == 0 goto label43;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1000(com.ichi2.anki.DeckPicker,int,java.lang.String)>($r2, 2131231417, r7);

        goto label37;

     label43:
        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1000(com.ichi2.anki.DeckPicker,int,java.lang.String)>($r2, 2131231402, r7);

        goto label37;

     label44:
        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1000(com.ichi2.anki.DeckPicker,int,java.lang.String)>($r2, 2131231402, r7);

        goto label37;

     label45:
        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label07;
        catch java.lang.IllegalArgumentException from label03 to label04 with label07;
        catch java.lang.IllegalArgumentException from label05 to label06 with label07;
        catch java.lang.IllegalStateException from label38 to label39 with label40;
    }
    public void onPreExecute()
    {
        com.ichi2.anki.DeckPicker$18 r0;
        long $l0, $l1;
        com.ichi2.anki.DeckPicker $r1, $r6, $r7;
        android.content.Context $r2;
        android.content.SharedPreferences $r3;
        android.content.SharedPreferences$Editor $r4;
        com.afollestad.materialdialogs.MaterialDialog $r5;
        boolean $z0;
        android.content.res.Resources $r8;
        java.lang.String $r9, $r11;
        java.lang.StringBuilder $r10;
        java.lang.Object[] $r12;
        java.lang.Long $r13;
        com.ichi2.anki.DeckPicker$18$1 $r14;

        r0 := @this: com.ichi2.anki.DeckPicker$18;

        r0.<com.ichi2.anki.DeckPicker$18: long countUp> = 0L;

        r0.<com.ichi2.anki.DeckPicker$18: long countDown> = 0L;

        $r1 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r2 = virtualinvoke $r1.<com.ichi2.anki.DeckPicker: android.content.Context getBaseContext()>();

        $r3 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r2);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("lastSyncTime", $l1);

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: void apply()>();

        $r1 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r5 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r1);

        if $r5 == null goto label1;

        $r1 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r5 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r1);

        $z0 = virtualinvoke $r5.<com.afollestad.materialdialogs.MaterialDialog: boolean isShowing()>();

        if $z0 != 0 goto label2;

     label1:
        $r1 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r6 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r7 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r8 = virtualinvoke $r7.<com.ichi2.anki.DeckPicker: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(2131231438);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r8 = virtualinvoke $r7.<com.ichi2.anki.DeckPicker: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int)>(2131231438);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r7 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r8 = virtualinvoke $r7.<com.ichi2.anki.DeckPicker: android.content.res.Resources getResources()>();

        $r12 = newarray (java.lang.Object)[2];

        $l0 = r0.<com.ichi2.anki.DeckPicker$18: long countUp>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r12[0] = $r13;

        $l0 = r0.<com.ichi2.anki.DeckPicker$18: long countDown>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r12[1] = $r13;

        $r11 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231440, $r12);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <com.ichi2.themes.StyledProgressDialog: com.afollestad.materialdialogs.MaterialDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r6, $r9, $r11, 0);

        staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$502(com.ichi2.anki.DeckPicker,com.afollestad.materialdialogs.MaterialDialog)>($r1, $r5);

        $r1 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r5 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r1);

        $r14 = new com.ichi2.anki.DeckPicker$18$1;

        specialinvoke $r14.<com.ichi2.anki.DeckPicker$18$1: void <init>(com.ichi2.anki.DeckPicker$18,long)>(r0, $l1);

        virtualinvoke $r5.<com.afollestad.materialdialogs.MaterialDialog: void setOnKeyListener(android.content.DialogInterface$OnKeyListener)>($r14);

     label2:
        return;
    }
    public transient void onProgressUpdate(java.lang.Object[])
    {
        com.ichi2.anki.DeckPicker$18 r0;
        java.lang.Object[] $r1, $r6;
        com.ichi2.anki.DeckPicker $r2;
        android.content.res.Resources $r3;
        java.lang.Object $r4;
        boolean $z0;
        java.lang.Integer $r5;
        int $i0, $i1;
        java.lang.String $r7;
        com.afollestad.materialdialogs.MaterialDialog $r8;
        java.lang.StringBuilder $r9;
        long $l2;
        java.lang.Long $r10;

        r0 := @this: com.ichi2.anki.DeckPicker$18;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r3 = virtualinvoke $r2.<com.ichi2.anki.DeckPicker: android.content.res.Resources getResources()>();

        $r4 = $r1[0];

        $z0 = $r4 instanceof java.lang.Boolean;

        if $z0 == 0 goto label2;

        $r4 = $r1[1];

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $r4 = $r1[2];

        $r5 = (java.lang.Integer) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $r4 = $r1[3];

        $r1[0] = $r4;

        $r6 = newarray (java.lang.Object)[2];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[0] = $r5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[1] = $r5;

        $r7 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231405, $r6);

        $r1[1] = $r7;

     label1:
        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r8 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r2);

        if $r8 == null goto label5;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r8 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r2);

        $z0 = virtualinvoke $r8.<com.afollestad.materialdialogs.MaterialDialog: boolean isShowing()>();

        if $z0 == 0 goto label5;

        $r2 = r0.<com.ichi2.anki.DeckPicker$18: com.ichi2.anki.DeckPicker this$0>;

        $r8 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r2);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<com.ichi2.anki.DeckPicker$18: java.lang.String currentMessage>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r1 = newarray (java.lang.Object)[2];

        $l2 = r0.<com.ichi2.anki.DeckPicker$18: long countUp>;

        $l2 = $l2 / 1024L;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r1[0] = $r10;

        $l2 = r0.<com.ichi2.anki.DeckPicker$18: long countDown>;

        $l2 = $l2 / 1024L;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r1[1] = $r10;

        $r7 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231440, $r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<com.afollestad.materialdialogs.MaterialDialog: void setContent(java.lang.CharSequence)>($r7);

        return;

     label2:
        $r4 = $r1[0];

        $z0 = $r4 instanceof java.lang.Integer;

        if $z0 == 0 goto label4;

        $r4 = $r1[0];

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if $i0 == 0 goto label3;

        $r7 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        r0.<com.ichi2.anki.DeckPicker$18: java.lang.String currentMessage> = $r7;

     label3:
        $i0 = lengthof $r1;

        if $i0 < 3 goto label1;

        $r4 = $r1[1];

        $r10 = (java.lang.Long) $r4;

        $l2 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        r0.<com.ichi2.anki.DeckPicker$18: long countUp> = $l2;

        $r4 = $r1[2];

        $r10 = (java.lang.Long) $r4;

        $l2 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        r0.<com.ichi2.anki.DeckPicker$18: long countDown> = $l2;

        goto label1;

     label4:
        $r4 = $r1[0];

        $z0 = $r4 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r4 = $r1[0];

        $r7 = (java.lang.String) $r4;

        r0.<com.ichi2.anki.DeckPicker$18: java.lang.String currentMessage> = $r7;

        $i0 = lengthof $r1;

        if $i0 < 3 goto label1;

        $r4 = $r1[1];

        $r10 = (java.lang.Long) $r4;

        $l2 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        r0.<com.ichi2.anki.DeckPicker$18: long countUp> = $l2;

        $r4 = $r1[2];

        $r10 = (java.lang.Long) $r4;

        $l2 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        r0.<com.ichi2.anki.DeckPicker$18: long countDown> = $l2;

        goto label1;

     label5:
        return;
    }
