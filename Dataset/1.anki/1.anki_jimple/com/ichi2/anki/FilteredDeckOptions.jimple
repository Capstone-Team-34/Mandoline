com.ichi2.anki.FilteredDeckOptions extends com.ichi2.ui.AppCompatPreferenceActivity implements android.content.SharedPreferences$OnSharedPreferenceChangeListener
private java.lang.String[] dynExamples
private boolean mAllowCommit
private com.ichi2.libanki.Collection mCol
private org.json.JSONObject mDeck
private com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack mPref
private boolean mPrefChanged
private android.content.BroadcastReceiver mUnmountReceiver
    public void <init>()
    {
        com.ichi2.anki.FilteredDeckOptions r0;
        java.lang.String[] $r1;

        r0 := @this: com.ichi2.anki.FilteredDeckOptions;

        specialinvoke r0.<com.ichi2.ui.AppCompatPreferenceActivity: void <init>()>();

        r0.<com.ichi2.anki.FilteredDeckOptions: boolean mAllowCommit> = 1;

        r0.<com.ichi2.anki.FilteredDeckOptions: boolean mPrefChanged> = 0;

        r0.<com.ichi2.anki.FilteredDeckOptions: android.content.BroadcastReceiver mUnmountReceiver> = null;

        $r1 = newarray (java.lang.String)[8];

        $r1[0] = null;

        $r1[1] = "{\'search\'=\"is:new\", \'resched\'=False, \'steps\'=\"1\", \'order\'=5}";

        $r1[2] = "{\'search\'=\"added:1\", \'resched\'=False, \'steps\'=\"1\", \'order\'=5}";

        $r1[3] = "{\'search\'=\"rated:1:1\", \'order\'=4}";

        $r1[4] = "{\'search\'=\"prop:due<=2\", \'order\'=6}";

        $r1[5] = "{\'search\'=\"is:due tag:TAG\", \'order\'=6}";

        $r1[6] = "{\'search\'=\"is:due\", \'order\'=3}";

        $r1[7] = "{\'search\'=\"\", \'steps\'=\"1 10 20\", \'order\'=0}";

        r0.<com.ichi2.anki.FilteredDeckOptions: java.lang.String[] dynExamples> = $r1;

        return;
    }
    static org.json.JSONObject access$000(com.ichi2.anki.FilteredDeckOptions)
    {
        com.ichi2.anki.FilteredDeckOptions $r0;
        org.json.JSONObject r1;

        $r0 := @parameter0: com.ichi2.anki.FilteredDeckOptions;

        r1 = $r0.<com.ichi2.anki.FilteredDeckOptions: org.json.JSONObject mDeck>;

        return r1;
    }
    static java.lang.String[] access$200(com.ichi2.anki.FilteredDeckOptions)
    {
        com.ichi2.anki.FilteredDeckOptions $r0;
        java.lang.String[] r1;

        $r0 := @parameter0: com.ichi2.anki.FilteredDeckOptions;

        r1 = $r0.<com.ichi2.anki.FilteredDeckOptions: java.lang.String[] dynExamples>;

        return r1;
    }
    static com.ichi2.libanki.Collection access$300(com.ichi2.anki.FilteredDeckOptions)
    {
        com.ichi2.anki.FilteredDeckOptions $r0;
        com.ichi2.libanki.Collection r1;

        $r0 := @parameter0: com.ichi2.anki.FilteredDeckOptions;

        r1 = $r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.libanki.Collection mCol>;

        return r1;
    }
    static boolean access$400(com.ichi2.anki.FilteredDeckOptions)
    {
        com.ichi2.anki.FilteredDeckOptions $r0;
        boolean z0;

        $r0 := @parameter0: com.ichi2.anki.FilteredDeckOptions;

        z0 = $r0.<com.ichi2.anki.FilteredDeckOptions: boolean mAllowCommit>;

        return z0;
    }
    private void closeDeckOptions()
    {
        com.ichi2.anki.FilteredDeckOptions r0;
        boolean $z0;
        com.ichi2.libanki.Collection $r1;
        com.ichi2.libanki.Sched $r2;
        com.ichi2.libanki.Decks $r3;
        long $l0;
        int $i1;

        r0 := @this: com.ichi2.anki.FilteredDeckOptions;

        $z0 = r0.<com.ichi2.anki.FilteredDeckOptions: boolean mPrefChanged>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.libanki.Collection mCol>;

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        $r1 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.libanki.Collection mCol>;

        $r3 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l0 = virtualinvoke $r3.<com.ichi2.libanki.Decks: long selected()>();

        virtualinvoke $r2.<com.ichi2.libanki.Sched: java.util.List rebuildDyn(long)>($l0);

     label1:
        virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: void finish()>();

        $i1 = <com.ichi2.anim.ActivityTransitionAnimation: int FADE>;

        staticinvoke <com.ichi2.anim.ActivityTransitionAnimation: void slide(android.app.Activity,int)>(r0, $i1);

        return;
    }
    private void registerExternalStorageListener()
    {
        com.ichi2.anki.FilteredDeckOptions r0;
        android.content.IntentFilter r1;
        android.content.BroadcastReceiver $r2;
        com.ichi2.anki.FilteredDeckOptions$1 $r3;

        r0 := @this: com.ichi2.anki.FilteredDeckOptions;

        $r2 = r0.<com.ichi2.anki.FilteredDeckOptions: android.content.BroadcastReceiver mUnmountReceiver>;

        if $r2 != null goto label1;

        $r3 = new com.ichi2.anki.FilteredDeckOptions$1;

        specialinvoke $r3.<com.ichi2.anki.FilteredDeckOptions$1: void <init>(com.ichi2.anki.FilteredDeckOptions)>(r0);

        r0.<com.ichi2.anki.FilteredDeckOptions: android.content.BroadcastReceiver mUnmountReceiver> = $r3;

        r1 = new android.content.IntentFilter;

        specialinvoke r1.<android.content.IntentFilter: void <init>()>();

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("com.ichi2.anki.action.MEDIA_EJECT");

        $r2 = r0.<com.ichi2.anki.FilteredDeckOptions: android.content.BroadcastReceiver mUnmountReceiver>;

        virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r2, r1);

     label1:
        return;
    }
    protected void buildLists()
    {
        com.ichi2.anki.FilteredDeckOptions r0;
        android.preference.Preference $r1;
        android.preference.ListPreference r2;
        com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack $r3;
        java.lang.String $r4;

        r0 := @this: com.ichi2.anki.FilteredDeckOptions;

        $r1 = virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: android.preference.Preference findPreference(java.lang.CharSequence)>("order");

        r2 = (android.preference.ListPreference) $r1;

        virtualinvoke r2.<android.preference.ListPreference: void setEntries(int)>(2131296262);

        virtualinvoke r2.<android.preference.ListPreference: void setEntryValues(int)>(2131296277);

        $r3 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack mPref>;

        $r4 = virtualinvoke $r3.<com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack: java.lang.String getString(java.lang.String,java.lang.String)>("order", "0");

        virtualinvoke r2.<android.preference.ListPreference: void setValue(java.lang.String)>($r4);

        return;
    }
    public android.content.SharedPreferences getSharedPreferences(java.lang.String, int)
    {
        com.ichi2.anki.FilteredDeckOptions r0;
        java.lang.String $r1;
        int $i0;
        java.lang.Object[] $r2;
        com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack r3;

        r0 := @this: com.ichi2.anki.FilteredDeckOptions;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = $r1;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("getSharedPreferences(name=%s)", $r2);

        r3 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack mPref>;

        return r3;
    }
    protected void onCreate(android.os.Bundle)
    {
        com.ichi2.anki.FilteredDeckOptions r0;
        android.os.Bundle $r1;
        com.ichi2.anki.CollectionHelper $r2;
        com.ichi2.libanki.Collection $r3;
        android.content.Intent $r4;
        boolean $z0;
        com.ichi2.libanki.Decks $r5;
        long $l0;
        org.json.JSONObject $r6;
        int $i1;
        java.lang.Object[] $r7;
        org.json.JSONException r8, r15;
        java.lang.RuntimeException $r9;
        com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack $r10;
        android.content.res.Resources $r11;
        java.lang.String $r12, r13;
        android.support.v7.app.ActionBar $r14;

        r0 := @this: com.ichi2.anki.FilteredDeckOptions;

        $r1 := @parameter0: android.os.Bundle;

        staticinvoke <com.ichi2.themes.Themes: void setThemeLegacy(android.content.Context)>(r0);

        specialinvoke r0.<com.ichi2.ui.AppCompatPreferenceActivity: void onCreate(android.os.Bundle)>($r1);

        $r2 = staticinvoke <com.ichi2.anki.CollectionHelper: com.ichi2.anki.CollectionHelper getInstance()>();

        $r3 = virtualinvoke $r2.<com.ichi2.anki.CollectionHelper: com.ichi2.libanki.Collection getCol(android.content.Context)>(r0);

        r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.libanki.Collection mCol> = $r3;

        $r3 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.libanki.Collection mCol>;

        if $r3 != null goto label01;

        virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: void finish()>();

        return;

     label01:
        $r4 = virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: android.content.Intent getIntent()>();

        $r1 = virtualinvoke $r4.<android.content.Intent: android.os.Bundle getExtras()>();

        if $r1 == null goto label09;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("did");

        if $z0 == 0 goto label09;

        $r3 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.libanki.Collection mCol>;

        $r5 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("did");

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Decks: org.json.JSONObject get(long)>($l0);

        r0.<com.ichi2.anki.FilteredDeckOptions: org.json.JSONObject mDeck> = $r6;

     label02:
        specialinvoke r0.<com.ichi2.anki.FilteredDeckOptions: void registerExternalStorageListener()>();

        $r3 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.libanki.Collection mCol>;

        if $r3 == null goto label05;

        $r6 = r0.<com.ichi2.anki.FilteredDeckOptions: org.json.JSONObject mDeck>;

     label03:
        $i1 = virtualinvoke $r6.<org.json.JSONObject: int getInt(java.lang.String)>("dyn");

     label04:
        if $i1 == 1 goto label10;

     label05:
        $r7 = newarray (java.lang.Object)[0];

     label06:
        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("No Collection loaded or deck is not a dyn deck", $r7);

        virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: void finish()>();

     label07:
        return;

     label08:
        r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r8);

        throw $r9;

     label09:
        $r3 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.libanki.Collection mCol>;

        $r5 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Decks: org.json.JSONObject current()>();

        r0.<com.ichi2.anki.FilteredDeckOptions: org.json.JSONObject mDeck> = $r6;

        goto label02;

     label10:
        $r10 = new com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack;

     label11:
        specialinvoke $r10.<com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack: void <init>(com.ichi2.anki.FilteredDeckOptions)>(r0);

     label12:
        r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack mPref> = $r10;

        $r10 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack mPref>;

     label13:
        virtualinvoke $r10.<com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0);

        virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: void addPreferencesFromResource(int)>(2131165184);

        virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: void buildLists()>();

        virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: void updateSummaries()>();

     label14:
        $r11 = virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int)>(2131230954);

        r13 = $r12;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean contains(java.lang.CharSequence)>("XXX");

        if $z0 == 0 goto label16;

        $r6 = r0.<com.ichi2.anki.FilteredDeckOptions: org.json.JSONObject mDeck>;

     label15:
        r13 = virtualinvoke $r6.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        r13 = virtualinvoke $r12.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("XXX", r13);

     label16:
        virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: void setTitle(java.lang.CharSequence)>(r13);

        $r14 = virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: android.support.v7.app.ActionBar getSupportActionBar()>();

        virtualinvoke $r14.<android.support.v7.app.ActionBar: void setHomeButtonEnabled(boolean)>(1);

        $r14 = virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: android.support.v7.app.ActionBar getSupportActionBar()>();

        virtualinvoke $r14.<android.support.v7.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)>(1);

        return;

     label17:
        r15 := @caughtexception;

        r13 = virtualinvoke $r12.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("XXX", "???");

        goto label16;

        catch org.json.JSONException from label03 to label04 with label08;
        catch org.json.JSONException from label06 to label07 with label08;
        catch org.json.JSONException from label11 to label12 with label08;
        catch org.json.JSONException from label13 to label14 with label08;
        catch org.json.JSONException from label15 to label16 with label17;
    }
    protected void onDestroy()
    {
        com.ichi2.anki.FilteredDeckOptions r0;
        android.content.BroadcastReceiver $r1;

        r0 := @this: com.ichi2.anki.FilteredDeckOptions;

        specialinvoke r0.<com.ichi2.ui.AppCompatPreferenceActivity: void onDestroy()>();

        $r1 = r0.<com.ichi2.anki.FilteredDeckOptions: android.content.BroadcastReceiver mUnmountReceiver>;

        if $r1 == null goto label1;

        $r1 = r0.<com.ichi2.anki.FilteredDeckOptions: android.content.BroadcastReceiver mUnmountReceiver>;

        virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

     label1:
        return;
    }
    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.ichi2.anki.FilteredDeckOptions r0;
        int $i0, $i1;
        android.view.KeyEvent $r1;
        java.lang.Object[] $r2;
        boolean $z0;

        r0 := @this: com.ichi2.anki.FilteredDeckOptions;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        if $i0 != 4 goto label1;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i1 != 0 goto label1;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("DeckOptions - onBackPressed()", $r2);

        specialinvoke r0.<com.ichi2.anki.FilteredDeckOptions: void closeDeckOptions()>();

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.ichi2.ui.AppCompatPreferenceActivity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;
    }
    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        com.ichi2.anki.FilteredDeckOptions r0;
        android.view.MenuItem $r1;
        int $i0;

        r0 := @this: com.ichi2.anki.FilteredDeckOptions;

        $r1 := @parameter0: android.view.MenuItem;

        $i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 16908332: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        specialinvoke r0.<com.ichi2.anki.FilteredDeckOptions: void closeDeckOptions()>();

        return 1;
    }
    public void onSharedPreferenceChanged(android.content.SharedPreferences, java.lang.String)
    {
        com.ichi2.anki.FilteredDeckOptions r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2;

        r0 := @this: com.ichi2.anki.FilteredDeckOptions;

        $r1 := @parameter0: android.content.SharedPreferences;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: void updateSummaries()>();

        r0.<com.ichi2.anki.FilteredDeckOptions: boolean mPrefChanged> = 1;

        return;
    }
    protected void updateSummaries()
    {
        com.ichi2.anki.FilteredDeckOptions r0;
        com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String r6, $r10, $r12;
        android.preference.Preference $r7;
        android.preference.ListPreference r8;
        java.lang.CharSequence $r9;
        android.preference.EditTextPreference $r11;

        r0 := @this: com.ichi2.anki.FilteredDeckOptions;

        r0.<com.ichi2.anki.FilteredDeckOptions: boolean mAllowCommit> = 0;

        $r1 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack mPref>;

        $r2 = staticinvoke <com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack: java.util.Map access$100(com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke r0.<com.ichi2.anki.FilteredDeckOptions: android.preference.Preference findPreference(java.lang.CharSequence)>(r6);

        if $r7 == null goto label01;

        $z0 = $r7 instanceof android.preference.CheckBoxPreference;

        if $z0 != 0 goto label01;

        $z0 = $r7 instanceof android.preference.ListPreference;

        if $z0 == 0 goto label07;

        r8 = (android.preference.ListPreference) $r7;

        $r9 = virtualinvoke r8.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        if $r9 == null goto label06;

        $r10 = interfaceinvoke $r9.<java.lang.CharSequence: java.lang.String toString()>();

     label02:
        $z0 = $r7 instanceof android.preference.EditTextPreference;

        if $z0 == 0 goto label03;

        $r11 = (android.preference.EditTextPreference) $r7;

        virtualinvoke $r11.<android.preference.EditTextPreference: void setText(java.lang.String)>($r10);

     label03:
        $r1 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack mPref>;

        $r2 = staticinvoke <com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack: java.util.Map access$500(com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r6);

        if $z0 != 0 goto label05;

        $r9 = virtualinvoke $r7.<android.preference.Preference: java.lang.CharSequence getSummary()>();

        $r1 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack mPref>;

        $r2 = staticinvoke <com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack: java.util.Map access$500(com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack)>($r1);

        if $r9 == null goto label08;

        $r9 = virtualinvoke $r7.<android.preference.Preference: java.lang.CharSequence getSummary()>();

        $r12 = interfaceinvoke $r9.<java.lang.CharSequence: java.lang.String toString()>();

     label04:
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r12);

     label05:
        $r1 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack mPref>;

        $r2 = staticinvoke <com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack: java.util.Map access$500(com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack)>($r1);

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r6 = (java.lang.String) $r5;

        if r6 == null goto label09;

        $z0 = virtualinvoke r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("XXX");

        if $z0 == 0 goto label09;

        r6 = virtualinvoke r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("XXX", $r10);

        virtualinvoke $r7.<android.preference.Preference: void setSummary(java.lang.CharSequence)>(r6);

        goto label01;

     label06:
        $r10 = "";

        goto label02;

     label07:
        $r1 = r0.<com.ichi2.anki.FilteredDeckOptions: com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack mPref>;

        $r10 = virtualinvoke $r1.<com.ichi2.anki.FilteredDeckOptions$DeckPreferenceHack: java.lang.String getString(java.lang.String,java.lang.String)>(r6, "");

        goto label02;

     label08:
        $r12 = null;

        goto label04;

     label09:
        virtualinvoke $r7.<android.preference.Preference: void setSummary(java.lang.CharSequence)>($r10);

        goto label01;

     label10:
        r0.<com.ichi2.anki.FilteredDeckOptions: boolean mAllowCommit> = 1;

        return;
    }
