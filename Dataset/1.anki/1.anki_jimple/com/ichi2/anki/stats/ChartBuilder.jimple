com.ichi2.anki.stats.ChartBuilder extends java.lang.Object
private static final float BAR_OPACITY
private static final double STARTING_BAR_THICKNESS
private static final double Y_AXIS_STRETCH_FACTOR
private int[] mAxisTitles
private boolean mBackwards
private final com.ichi2.libanki.Stats$ChartType mChartType
private com.ichi2.anki.stats.ChartView mChartView
private com.ichi2.libanki.Collection mCollectionData
private int[] mColors
private double[][] mCumulative
private boolean mDynamicAxis
private double mFirstElement
private boolean mHasColoredCumulative
private boolean mIsWholeCollection
private double mLastElement
int mMaxCards
private double mMcount
private double[][] mSeriesList
private int[] mValueLabels
    public void <init>(com.ichi2.anki.stats.ChartView, com.ichi2.libanki.Collection, boolean, com.ichi2.libanki.Stats$ChartType)
    {
        com.ichi2.anki.stats.ChartBuilder r0;
        com.ichi2.anki.stats.ChartView $r1;
        com.ichi2.libanki.Collection $r2;
        boolean $z0;
        com.ichi2.libanki.Stats$ChartType $r3;

        r0 := @this: com.ichi2.anki.stats.ChartBuilder;

        $r1 := @parameter0: com.ichi2.anki.stats.ChartView;

        $r2 := @parameter1: com.ichi2.libanki.Collection;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: com.ichi2.libanki.Stats$ChartType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ichi2.anki.stats.ChartBuilder: boolean mIsWholeCollection> = 0;

        r0.<com.ichi2.anki.stats.ChartBuilder: int mMaxCards> = 0;

        r0.<com.ichi2.anki.stats.ChartBuilder: double mLastElement> = 0.0;

        r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mCumulative> = null;

        r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView> = $r1;

        r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.libanki.Collection mCollectionData> = $r2;

        r0.<com.ichi2.anki.stats.ChartBuilder: boolean mIsWholeCollection> = $z0;

        r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.libanki.Stats$ChartType mChartType> = $r3;

        return;
    }
    private void calcStats(com.ichi2.libanki.Stats$AxisType)
    {
        com.ichi2.anki.stats.ChartBuilder r0;
        com.ichi2.libanki.Stats$AxisType $r1;
        com.ichi2.libanki.Stats r2;
        com.ichi2.libanki.Collection $r3;
        boolean $z0;
        int[] $r4;
        com.ichi2.libanki.Stats$ChartType $r5;
        int $i0;
        double[][] $r6;
        java.lang.Object[] $r7;
        java.lang.Object $r8;
        java.lang.Boolean $r9;
        java.lang.Integer $r10;
        java.lang.Double $r11;
        double $d0;
        com.ichi2.anki.stats.ChartView $r12;
        android.content.Context $r13;

        r0 := @this: com.ichi2.anki.stats.ChartBuilder;

        $r1 := @parameter0: com.ichi2.libanki.Stats$AxisType;

        r2 = new com.ichi2.libanki.Stats;

        $r3 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.libanki.Collection mCollectionData>;

        $z0 = r0.<com.ichi2.anki.stats.ChartBuilder: boolean mIsWholeCollection>;

        specialinvoke r2.<com.ichi2.libanki.Stats: void <init>(com.ichi2.libanki.Collection,boolean)>($r3, $z0);

        $r4 = <com.ichi2.anki.stats.ChartBuilder$1: int[] $SwitchMap$com$ichi2$libanki$Stats$ChartType>;

        $r5 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.libanki.Stats$ChartType mChartType>;

        $i0 = virtualinvoke $r5.<com.ichi2.libanki.Stats$ChartType: int ordinal()>();

        $i0 = $r4[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label8;
            case 8: goto label9;
            default: goto label1;
        };

     label1:
        $r6 = virtualinvoke r2.<com.ichi2.libanki.Stats: double[][] getCumulative()>();

        r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mCumulative> = $r6;

        $r6 = virtualinvoke r2.<com.ichi2.libanki.Stats: double[][] getSeriesList()>();

        r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mSeriesList> = $r6;

        $r7 = virtualinvoke r2.<com.ichi2.libanki.Stats: java.lang.Object[] getMetaInfo()>();

        $r8 = $r7[2];

        $r9 = (java.lang.Boolean) $r8;

        $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.ichi2.anki.stats.ChartBuilder: boolean mBackwards> = $z0;

        $r8 = $r7[3];

        $r4 = (int[]) $r8;

        r0.<com.ichi2.anki.stats.ChartBuilder: int[] mValueLabels> = $r4;

        $r8 = $r7[4];

        $r4 = (int[]) $r8;

        r0.<com.ichi2.anki.stats.ChartBuilder: int[] mColors> = $r4;

        $r8 = $r7[5];

        $r4 = (int[]) $r8;

        r0.<com.ichi2.anki.stats.ChartBuilder: int[] mAxisTitles> = $r4;

        $r8 = $r7[7];

        $r10 = (java.lang.Integer) $r8;

        $i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        r0.<com.ichi2.anki.stats.ChartBuilder: int mMaxCards> = $i0;

        $r8 = $r7[10];

        $r11 = (java.lang.Double) $r8;

        $d0 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        r0.<com.ichi2.anki.stats.ChartBuilder: double mLastElement> = $d0;

        $r8 = $r7[9];

        $r11 = (java.lang.Double) $r8;

        $d0 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        r0.<com.ichi2.anki.stats.ChartBuilder: double mFirstElement> = $d0;

        $r8 = $r7[19];

        $r9 = (java.lang.Boolean) $r8;

        $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.ichi2.anki.stats.ChartBuilder: boolean mHasColoredCumulative> = $z0;

        $r8 = $r7[18];

        $r11 = (java.lang.Double) $r8;

        $d0 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        r0.<com.ichi2.anki.stats.ChartBuilder: double mMcount> = $d0;

        $r8 = $r7[20];

        $r9 = (java.lang.Boolean) $r8;

        $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.ichi2.anki.stats.ChartBuilder: boolean mDynamicAxis> = $z0;

        return;

     label2:
        $r12 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r13 = virtualinvoke $r12.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        virtualinvoke r2.<com.ichi2.libanki.Stats: boolean calculateDue(android.content.Context,com.ichi2.libanki.Stats$AxisType)>($r13, $r1);

        goto label1;

     label3:
        virtualinvoke r2.<com.ichi2.libanki.Stats: boolean calculateReviewCount(com.ichi2.libanki.Stats$AxisType)>($r1);

        goto label1;

     label4:
        virtualinvoke r2.<com.ichi2.libanki.Stats: boolean calculateReviewTime(com.ichi2.libanki.Stats$AxisType)>($r1);

        goto label1;

     label5:
        $r12 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r13 = virtualinvoke $r12.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        virtualinvoke r2.<com.ichi2.libanki.Stats: boolean calculateIntervals(android.content.Context,com.ichi2.libanki.Stats$AxisType)>($r13, $r1);

        goto label1;

     label6:
        virtualinvoke r2.<com.ichi2.libanki.Stats: boolean calculateBreakdown(com.ichi2.libanki.Stats$AxisType)>($r1);

        goto label1;

     label7:
        virtualinvoke r2.<com.ichi2.libanki.Stats: boolean calculateWeeklyBreakdown(com.ichi2.libanki.Stats$AxisType)>($r1);

        goto label1;

     label8:
        virtualinvoke r2.<com.ichi2.libanki.Stats: boolean calculateAnswerButtons(com.ichi2.libanki.Stats$AxisType)>($r1);

        goto label1;

     label9:
        virtualinvoke r2.<com.ichi2.libanki.Stats: boolean calculateCardTypes(com.ichi2.libanki.Stats$AxisType)>($r1);

        goto label1;
    }
    private com.wildplot.android.rendering.PlotSheet createPieChart(com.wildplot.android.rendering.PlotSheet)
    {
        com.ichi2.anki.stats.ChartBuilder r0;
        com.wildplot.android.rendering.PlotSheet $r1;
        com.wildplot.android.rendering.graphics.wrapper.ColorWrap[] r2;
        com.wildplot.android.rendering.LegendDrawable r3, r4, r5;
        com.wildplot.android.rendering.PieChart r6;
        com.wildplot.android.rendering.graphics.wrapper.ColorWrap $r7;
        com.ichi2.anki.stats.ChartView $r8;
        android.content.Context $r9;
        int[] $r10;
        int $i0;
        double[][] $r11;
        double[] $r12;
        java.lang.StringBuilder $r13;
        android.content.res.Resources $r14;
        java.lang.String $r15;
        double $d0;

        r0 := @this: com.ichi2.anki.stats.ChartBuilder;

        $r1 := @parameter0: com.wildplot.android.rendering.PlotSheet;

        r2 = newarray (com.wildplot.android.rendering.graphics.wrapper.ColorWrap)[4];

        $r7 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r9 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mColors>;

        $i0 = $r10[0];

        $i0 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r9, $i0);

        specialinvoke $r7.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int)>($i0);

        r2[0] = $r7;

        $r7 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r9 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mColors>;

        $i0 = $r10[1];

        $i0 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r9, $i0);

        specialinvoke $r7.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int)>($i0);

        r2[1] = $r7;

        $r7 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r9 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mColors>;

        $i0 = $r10[2];

        $i0 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r9, $i0);

        specialinvoke $r7.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int)>($i0);

        r2[2] = $r7;

        $r7 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r9 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mColors>;

        $i0 = $r10[3];

        $i0 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r9, $i0);

        specialinvoke $r7.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int)>($i0);

        r2[3] = $r7;

        r6 = new com.wildplot.android.rendering.PieChart;

        $r11 = r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mSeriesList>;

        $r12 = $r11[0];

        specialinvoke r6.<com.wildplot.android.rendering.PieChart: void <init>(com.wildplot.android.rendering.PlotSheet,double[],com.wildplot.android.rendering.graphics.wrapper.ColorWrap[])>($r1, $r12, r2);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r14 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.res.Resources getResources()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mValueLabels>;

        $i0 = $r10[0];

        $r15 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mSeriesList>;

        $r12 = $r11[0];

        $d0 = $r12[0];

        $i0 = (int) $d0;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<com.wildplot.android.rendering.PieChart: void setName(java.lang.String)>($r15);

        r3 = new com.wildplot.android.rendering.LegendDrawable;

        specialinvoke r3.<com.wildplot.android.rendering.LegendDrawable: void <init>()>();

        r4 = new com.wildplot.android.rendering.LegendDrawable;

        specialinvoke r4.<com.wildplot.android.rendering.LegendDrawable: void <init>()>();

        r5 = new com.wildplot.android.rendering.LegendDrawable;

        specialinvoke r5.<com.wildplot.android.rendering.LegendDrawable: void <init>()>();

        $r7 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r9 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mColors>;

        $i0 = $r10[1];

        $i0 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r9, $i0);

        specialinvoke $r7.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int)>($i0);

        virtualinvoke r3.<com.wildplot.android.rendering.LegendDrawable: void setColor(com.wildplot.android.rendering.graphics.wrapper.ColorWrap)>($r7);

        $r7 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r9 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mColors>;

        $i0 = $r10[2];

        $i0 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r9, $i0);

        specialinvoke $r7.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int)>($i0);

        virtualinvoke r4.<com.wildplot.android.rendering.LegendDrawable: void setColor(com.wildplot.android.rendering.graphics.wrapper.ColorWrap)>($r7);

        $r7 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r9 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mColors>;

        $i0 = $r10[3];

        $i0 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r9, $i0);

        specialinvoke $r7.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int)>($i0);

        virtualinvoke r5.<com.wildplot.android.rendering.LegendDrawable: void setColor(com.wildplot.android.rendering.graphics.wrapper.ColorWrap)>($r7);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r14 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.res.Resources getResources()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mValueLabels>;

        $i0 = $r10[1];

        $r15 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mSeriesList>;

        $r12 = $r11[0];

        $d0 = $r12[1];

        $i0 = (int) $d0;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<com.wildplot.android.rendering.LegendDrawable: void setName(java.lang.String)>($r15);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r14 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.res.Resources getResources()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mValueLabels>;

        $i0 = $r10[2];

        $r15 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mSeriesList>;

        $r12 = $r11[0];

        $d0 = $r12[2];

        $i0 = (int) $d0;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.wildplot.android.rendering.LegendDrawable: void setName(java.lang.String)>($r15);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r14 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.res.Resources getResources()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mValueLabels>;

        $i0 = $r10[3];

        $r15 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mSeriesList>;

        $r12 = $r11[0];

        $d0 = $r12[3];

        $i0 = (int) $d0;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<com.wildplot.android.rendering.LegendDrawable: void setName(java.lang.String)>($r15);

        virtualinvoke $r1.<com.wildplot.android.rendering.PlotSheet: void unsetBorder()>();

        virtualinvoke $r1.<com.wildplot.android.rendering.PlotSheet: void addDrawable(com.wildplot.android.rendering.interfaces.Drawable)>(r6);

        virtualinvoke $r1.<com.wildplot.android.rendering.PlotSheet: void addDrawable(com.wildplot.android.rendering.interfaces.Drawable)>(r3);

        virtualinvoke $r1.<com.wildplot.android.rendering.PlotSheet: void addDrawable(com.wildplot.android.rendering.interfaces.Drawable)>(r4);

        virtualinvoke $r1.<com.wildplot.android.rendering.PlotSheet: void addDrawable(com.wildplot.android.rendering.interfaces.Drawable)>(r5);

        return $r1;
    }
    private void setupBarGraphs(com.wildplot.android.rendering.PlotSheet, com.wildplot.android.rendering.PlotSheet)
    {
        com.ichi2.anki.stats.ChartBuilder r0;
        com.wildplot.android.rendering.PlotSheet $r1, $r2, r9;
        com.wildplot.android.rendering.BarGraph r3;
        double[][] r4, $r7;
        int i0, i1, $i2;
        com.ichi2.libanki.Stats$ChartType $r5, $r6;
        double[] $r8;
        double d0;
        int[] $r10;
        com.wildplot.android.rendering.graphics.wrapper.ColorWrap r11;
        com.ichi2.anki.stats.ChartView $r12;
        android.content.Context $r13;
        android.content.res.Resources $r14;
        java.lang.String $r15;

        r0 := @this: com.ichi2.anki.stats.ChartBuilder;

        $r1 := @parameter0: com.wildplot.android.rendering.PlotSheet;

        $r2 := @parameter1: com.wildplot.android.rendering.PlotSheet;

        r4 = r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mSeriesList>;

        i0 = lengthof r4;

        $r5 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.libanki.Stats$ChartType mChartType>;

        $r6 = <com.ichi2.libanki.Stats$ChartType: com.ichi2.libanki.Stats$ChartType HOURLY_BREAKDOWN>;

        if $r5 == $r6 goto label01;

        $r5 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.libanki.Stats$ChartType mChartType>;

        $r6 = <com.ichi2.libanki.Stats$ChartType: com.ichi2.libanki.Stats$ChartType WEEKLY_BREAKDOWN>;

        if $r5 != $r6 goto label02;

     label01:
        i0 = i0 + -1;

     label02:
        i1 = 1;

     label03:
        if i1 >= i0 goto label10;

        r4 = newarray (double[])[2];

        $r7 = r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mSeriesList>;

        $r8 = $r7[0];

        r4[0] = $r8;

        $r7 = r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mSeriesList>;

        $r8 = $r7[i1];

        r4[1] = $r8;

        r9 = $r1;

        d0 = 0.6;

        $r5 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.libanki.Stats$ChartType mChartType>;

        $r6 = <com.ichi2.libanki.Stats$ChartType: com.ichi2.libanki.Stats$ChartType HOURLY_BREAKDOWN>;

        if $r5 == $r6 goto label04;

        $r5 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.libanki.Stats$ChartType mChartType>;

        $r6 = <com.ichi2.libanki.Stats$ChartType: com.ichi2.libanki.Stats$ChartType WEEKLY_BREAKDOWN>;

        if $r5 != $r6 goto label05;

     label04:
        d0 = 0.8;

        if i1 != 2 goto label05;

        r9 = $r2;

        d0 = 0.2;

     label05:
        $r10 = <com.ichi2.anki.stats.ChartBuilder$1: int[] $SwitchMap$com$ichi2$libanki$Stats$ChartType>;

        $r5 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.libanki.Stats$ChartType mChartType>;

        $i2 = virtualinvoke $r5.<com.ichi2.libanki.Stats$ChartType: int ordinal()>();

        $i2 = $r10[$i2];

        lookupswitch($i2)
        {
            case 1: goto label09;
            case 2: goto label09;
            case 3: goto label09;
            case 4: goto label08;
            case 5: goto label08;
            case 6: goto label08;
            case 7: goto label08;
            default: goto label06;
        };

     label06:
        r11 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        $r12 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r13 = virtualinvoke $r12.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mColors>;

        $i2 = i1 + -1;

        $i2 = $r10[$i2];

        $i2 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r13, $i2);

        specialinvoke r11.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int)>($i2);

     label07:
        r3 = new com.wildplot.android.rendering.BarGraph;

        specialinvoke r3.<com.wildplot.android.rendering.BarGraph: void <init>(com.wildplot.android.rendering.PlotSheet,double,double[][],com.wildplot.android.rendering.graphics.wrapper.ColorWrap)>(r9, d0, r4, r11);

        virtualinvoke r3.<com.wildplot.android.rendering.BarGraph: void setFilling(boolean)>(1);

        $r12 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r14 = virtualinvoke $r12.<com.ichi2.anki.stats.ChartView: android.content.res.Resources getResources()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mValueLabels>;

        $i2 = i1 + -1;

        $i2 = $r10[$i2];

        $r15 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>($i2);

        virtualinvoke r3.<com.wildplot.android.rendering.BarGraph: void setName(java.lang.String)>($r15);

        virtualinvoke r3.<com.wildplot.android.rendering.BarGraph: void setFillColor(com.wildplot.android.rendering.graphics.wrapper.ColorWrap)>(r11);

        virtualinvoke $r1.<com.wildplot.android.rendering.PlotSheet: void addDrawable(com.wildplot.android.rendering.interfaces.Drawable)>(r3);

        i1 = i1 + 1;

        goto label03;

     label08:
        r11 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        $r12 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r13 = virtualinvoke $r12.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mColors>;

        $i2 = i1 + -1;

        $i2 = $r10[$i2];

        $i2 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r13, $i2);

        specialinvoke r11.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int,float)>($i2, 0.7F);

        goto label07;

     label09:
        if i1 != 1 goto label06;

        r11 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        $r12 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r13 = virtualinvoke $r12.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $r10 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mColors>;

        $i2 = i1 + -1;

        $i2 = $r10[$i2];

        $i2 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r13, $i2);

        specialinvoke r11.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int,float)>($i2, 0.7F);

        goto label07;

     label10:
        return;
    }
    private void setupCumulative(com.wildplot.android.rendering.PlotSheet, com.wildplot.android.rendering.PlotSheet)
    {
        com.ichi2.anki.stats.ChartBuilder r0;
        com.wildplot.android.rendering.PlotSheet $r1, $r2;
        double[][] r3, $r5;
        com.wildplot.android.rendering.Lines r4;
        int $i0, i1;
        double[] $r6;
        com.wildplot.android.rendering.graphics.wrapper.ColorWrap r7;
        com.ichi2.anki.stats.ChartView $r8;
        android.content.Context $r9;
        android.content.res.Resources $r10;
        java.lang.String $r11;
        boolean $z0;
        int[] $r12;
        com.ichi2.libanki.Stats$ChartType $r13, $r14;

        r0 := @this: com.ichi2.anki.stats.ChartBuilder;

        $r1 := @parameter0: com.wildplot.android.rendering.PlotSheet;

        $r2 := @parameter1: com.wildplot.android.rendering.PlotSheet;

        r3 = r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mCumulative>;

        if r3 != null goto label1;

        return;

     label1:
        i1 = 1;

     label2:
        r3 = r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mCumulative>;

        $i0 = lengthof r3;

        if i1 >= $i0 goto label6;

        r3 = newarray (double[])[2];

        $r5 = r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mCumulative>;

        $r6 = $r5[0];

        r3[0] = $r6;

        $r5 = r0.<com.ichi2.anki.stats.ChartBuilder: double[][] mCumulative>;

        $r6 = $r5[i1];

        r3[1] = $r6;

        r7 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r9 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $i0 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r9, 2130772042);

        specialinvoke r7.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int)>($i0);

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r10 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r10.<android.content.res.Resources: java.lang.String getString(int)>(2131231317);

        $z0 = r0.<com.ichi2.anki.stats.ChartBuilder: boolean mHasColoredCumulative>;

        if $z0 == 0 goto label5;

        r7 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r9 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $r12 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mColors>;

        $i0 = i1 + -1;

        $i0 = $r12[$i0];

        $i0 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r9, $i0);

        specialinvoke r7.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int)>($i0);

     label3:
        r4 = new com.wildplot.android.rendering.Lines;

        specialinvoke r4.<com.wildplot.android.rendering.Lines: void <init>(com.wildplot.android.rendering.PlotSheet,double[][],com.wildplot.android.rendering.graphics.wrapper.ColorWrap)>($r2, r3, r7);

        virtualinvoke r4.<com.wildplot.android.rendering.Lines: void setSize(float)>(3.0F);

        r7 = <com.wildplot.android.rendering.graphics.wrapper.ColorWrap: com.wildplot.android.rendering.graphics.wrapper.ColorWrap BLACK>;

        virtualinvoke r4.<com.wildplot.android.rendering.Lines: void setShadow(float,float,float,com.wildplot.android.rendering.graphics.wrapper.ColorWrap)>(5.0F, 2.0F, 2.0F, r7);

        $z0 = r0.<com.ichi2.anki.stats.ChartBuilder: boolean mHasColoredCumulative>;

        if $z0 != 0 goto label4;

        virtualinvoke r4.<com.wildplot.android.rendering.Lines: void setName(java.lang.String)>($r11);

     label4:
        virtualinvoke $r1.<com.wildplot.android.rendering.PlotSheet: void addDrawable(com.wildplot.android.rendering.interfaces.Drawable)>(r4);

        i1 = i1 + 1;

        goto label2;

     label5:
        $r13 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.libanki.Stats$ChartType mChartType>;

        $r14 = <com.ichi2.libanki.Stats$ChartType: com.ichi2.libanki.Stats$ChartType INTERVALS>;

        if $r13 != $r14 goto label3;

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r10 = virtualinvoke $r8.<com.ichi2.anki.stats.ChartView: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r10.<android.content.res.Resources: java.lang.String getString(int)>(2131231321);

        goto label3;

     label6:
        return;
    }
    private void setupGrid(com.wildplot.android.rendering.PlotSheet, double, double)
    {
        com.ichi2.anki.stats.ChartBuilder r0;
        com.wildplot.android.rendering.PlotSheet $r1;
        double $d0, $d1;
        com.wildplot.android.rendering.XGrid r2;
        com.wildplot.android.rendering.graphics.wrapper.ColorWrap r3;
        int $i0, $i1, $i2;
        com.wildplot.android.rendering.YGrid r4;
        int[] $r5;
        com.ichi2.libanki.Stats$ChartType $r6;
        double[] r7;

        r0 := @this: com.ichi2.anki.stats.ChartBuilder;

        $r1 := @parameter0: com.wildplot.android.rendering.PlotSheet;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        r3 = <com.wildplot.android.rendering.graphics.wrapper.ColorWrap: com.wildplot.android.rendering.graphics.wrapper.ColorWrap LIGHT_GRAY>;

        $i0 = virtualinvoke r3.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: int getRed()>();

        r3 = <com.wildplot.android.rendering.graphics.wrapper.ColorWrap: com.wildplot.android.rendering.graphics.wrapper.ColorWrap LIGHT_GRAY>;

        $i1 = virtualinvoke r3.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: int getGreen()>();

        r3 = <com.wildplot.android.rendering.graphics.wrapper.ColorWrap: com.wildplot.android.rendering.graphics.wrapper.ColorWrap LIGHT_GRAY>;

        $i2 = virtualinvoke r3.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: int getBlue()>();

        r3 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        specialinvoke r3.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int,int,int,int)>($i0, $i1, $i2, 222);

        r2 = new com.wildplot.android.rendering.XGrid;

        specialinvoke r2.<com.wildplot.android.rendering.XGrid: void <init>(com.wildplot.android.rendering.PlotSheet,double,double)>($r1, 0.0, $d0);

        r4 = new com.wildplot.android.rendering.YGrid;

        specialinvoke r4.<com.wildplot.android.rendering.YGrid: void <init>(com.wildplot.android.rendering.PlotSheet,double,double)>($r1, 0.0, $d1);

        $r5 = <com.ichi2.anki.stats.ChartBuilder$1: int[] $SwitchMap$com$ichi2$libanki$Stats$ChartType>;

        $r6 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.libanki.Stats$ChartType mChartType>;

        $i0 = virtualinvoke $r6.<com.ichi2.libanki.Stats$ChartType: int ordinal()>();

        $i0 = $r5[$i0];

        lookupswitch($i0)
        {
            case 5: goto label3;
            case 6: goto label4;
            case 7: goto label2;
            default: goto label1;
        };

     label1:
        virtualinvoke r2.<com.wildplot.android.rendering.XGrid: void setColor(com.wildplot.android.rendering.graphics.wrapper.ColorWrap)>(r3);

        virtualinvoke r4.<com.wildplot.android.rendering.YGrid: void setColor(com.wildplot.android.rendering.graphics.wrapper.ColorWrap)>(r3);

        virtualinvoke $r1.<com.wildplot.android.rendering.PlotSheet: void addDrawable(com.wildplot.android.rendering.interfaces.Drawable)>(r2);

        virtualinvoke $r1.<com.wildplot.android.rendering.PlotSheet: void addDrawable(com.wildplot.android.rendering.interfaces.Drawable)>(r4);

        return;

     label2:
        r7 = newarray (double)[11];

        r7[0] = 1.0;

        r7[1] = 2.0;

        r7[2] = 3.0;

        r7[3] = 6.0;

        r7[4] = 7.0;

        r7[5] = 8.0;

        r7[6] = 9.0;

        r7[7] = 11.0;

        r7[8] = 12.0;

        r7[9] = 13.0;

        r7[10] = 14.0;

        virtualinvoke r4.<com.wildplot.android.rendering.YGrid: void setExplicitTicks(double[])>(r7);

        goto label1;

     label3:
        r7 = newarray (double)[5];

        r7[0] = 0.0;

        r7[1] = 6.0;

        r7[2] = 12.0;

        r7[3] = 18.0;

        r7[4] = 23.0;

        virtualinvoke r4.<com.wildplot.android.rendering.YGrid: void setExplicitTicks(double[])>(r7);

        goto label1;

     label4:
        r7 = newarray (double)[7];

        r7[0] = 0.0;

        r7[1] = 1.0;

        r7[2] = 2.0;

        r7[3] = 3.0;

        r7[4] = 4.0;

        r7[5] = 5.0;

        r7[6] = 6.0;

        virtualinvoke r4.<com.wildplot.android.rendering.YGrid: void setExplicitTicks(double[])>(r7);

        goto label1;
    }
    private void setupXaxis(com.wildplot.android.rendering.PlotSheet, double, boolean)
    {
        com.ichi2.anki.stats.ChartBuilder r0;
        com.wildplot.android.rendering.PlotSheet $r1;
        double $d0, $d1;
        boolean $z0;
        com.wildplot.android.rendering.XAxis r2;
        com.ichi2.anki.stats.ChartView $r3;
        android.content.res.Resources $r4;
        java.lang.String[] $r5;
        int[] $r6;
        int $i0;
        java.lang.String $r7;
        com.ichi2.libanki.Stats$ChartType $r8;
        double[] r9;

        r0 := @this: com.ichi2.anki.stats.ChartBuilder;

        $r1 := @parameter0: com.wildplot.android.rendering.PlotSheet;

        $d0 := @parameter1: double;

        $z0 := @parameter2: boolean;

        r2 = new com.wildplot.android.rendering.XAxis;

        $d1 = $d0 / 2.0;

        specialinvoke r2.<com.wildplot.android.rendering.XAxis: void <init>(com.wildplot.android.rendering.PlotSheet,double,double,double)>($r1, 0.0, $d0, $d1);

        virtualinvoke r2.<com.wildplot.android.rendering.XAxis: void setOnFrame()>();

        if $z0 == 0 goto label1;

        $z0 = r0.<com.ichi2.anki.stats.ChartBuilder: boolean mDynamicAxis>;

        if $z0 == 0 goto label3;

        $r3 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r4 = virtualinvoke $r3.<com.ichi2.anki.stats.ChartView: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131296264);

        $r6 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mAxisTitles>;

        $i0 = $r6[0];

        $r7 = $r5[$i0];

        virtualinvoke r2.<com.wildplot.android.rendering.XAxis: void setName(java.lang.String)>($r7);

     label1:
        $r6 = <com.ichi2.anki.stats.ChartBuilder$1: int[] $SwitchMap$com$ichi2$libanki$Stats$ChartType>;

        $r8 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.libanki.Stats$ChartType mChartType>;

        $i0 = virtualinvoke $r8.<com.ichi2.libanki.Stats$ChartType: int ordinal()>();

        $i0 = $r6[$i0];

        lookupswitch($i0)
        {
            case 5: goto label5;
            case 6: goto label6;
            case 7: goto label4;
            default: goto label2;
        };

     label2:
        virtualinvoke r2.<com.wildplot.android.rendering.XAxis: void setIntegerNumbering(boolean)>(1);

        virtualinvoke $r1.<com.wildplot.android.rendering.PlotSheet: void addDrawable(com.wildplot.android.rendering.interfaces.Drawable)>(r2);

        return;

     label3:
        $r3 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r4 = virtualinvoke $r3.<com.ichi2.anki.stats.ChartView: android.content.res.Resources getResources()>();

        $r6 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mAxisTitles>;

        $i0 = $r6[0];

        $r7 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        virtualinvoke r2.<com.wildplot.android.rendering.XAxis: void setName(java.lang.String)>($r7);

        goto label1;

     label4:
        r9 = newarray (double)[11];

        r9[0] = 1.0;

        r9[1] = 2.0;

        r9[2] = 3.0;

        r9[3] = 6.0;

        r9[4] = 7.0;

        r9[5] = 8.0;

        r9[6] = 9.0;

        r9[7] = 11.0;

        r9[8] = 12.0;

        r9[9] = 13.0;

        r9[10] = 14.0;

        $r3 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r4 = virtualinvoke $r3.<com.ichi2.anki.stats.ChartView: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131296273);

        virtualinvoke r2.<com.wildplot.android.rendering.XAxis: void setExplicitTicks(double[],java.lang.String[])>(r9, $r5);

        goto label2;

     label5:
        r9 = newarray (double)[5];

        r9[0] = 0.0;

        r9[1] = 6.0;

        r9[2] = 12.0;

        r9[3] = 18.0;

        r9[4] = 23.0;

        $r3 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r4 = virtualinvoke $r3.<com.ichi2.anki.stats.ChartView: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131296272);

        virtualinvoke r2.<com.wildplot.android.rendering.XAxis: void setExplicitTicks(double[],java.lang.String[])>(r9, $r5);

        goto label2;

     label6:
        r9 = newarray (double)[7];

        r9[0] = 0.0;

        r9[1] = 1.0;

        r9[2] = 2.0;

        r9[3] = 3.0;

        r9[4] = 4.0;

        r9[5] = 5.0;

        r9[6] = 6.0;

        $r3 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r4 = virtualinvoke $r3.<com.ichi2.anki.stats.ChartView: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131296274);

        virtualinvoke r2.<com.wildplot.android.rendering.XAxis: void setExplicitTicks(double[],java.lang.String[])>(r9, $r5);

        goto label2;
    }
    private void setupYaxis(com.wildplot.android.rendering.PlotSheet, com.wildplot.android.rendering.PlotSheet, double, int, boolean, boolean)
    {
        com.ichi2.anki.stats.ChartBuilder r0;
        com.wildplot.android.rendering.PlotSheet $r1, $r2;
        double $d0, $d1;
        int $i0;
        boolean $z0, $z1;
        com.wildplot.android.rendering.YAxis r3;
        com.ichi2.anki.stats.ChartView $r4;
        android.content.res.Resources $r5;
        java.lang.String $r6;

        r0 := @this: com.ichi2.anki.stats.ChartBuilder;

        $r1 := @parameter0: com.wildplot.android.rendering.PlotSheet;

        $r2 := @parameter1: com.wildplot.android.rendering.PlotSheet;

        $d0 := @parameter2: double;

        $i0 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $z1 := @parameter5: boolean;

        if $z0 == 0 goto label4;

        if $r2 == null goto label4;

        r3 = new com.wildplot.android.rendering.YAxis;

        $d1 = $d0 / 2.0;

        specialinvoke r3.<com.wildplot.android.rendering.YAxis: void <init>(com.wildplot.android.rendering.PlotSheet,double,double,double)>($r2, 0.0, $d0, $d1);

     label1:
        virtualinvoke r3.<com.wildplot.android.rendering.YAxis: void setIntegerNumbering(boolean)>(1);

        if $z1 == 0 goto label2;

        $r4 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r5 = virtualinvoke $r4.<com.ichi2.anki.stats.ChartView: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        virtualinvoke r3.<com.wildplot.android.rendering.YAxis: void setName(java.lang.String)>($r6);

     label2:
        if $z0 == 0 goto label5;

        virtualinvoke r3.<com.wildplot.android.rendering.YAxis: void setOnRightSideFrame()>();

     label3:
        virtualinvoke r3.<com.wildplot.android.rendering.YAxis: void setHasNumbersRotated()>();

        virtualinvoke $r1.<com.wildplot.android.rendering.PlotSheet: void addDrawable(com.wildplot.android.rendering.interfaces.Drawable)>(r3);

        return;

     label4:
        r3 = new com.wildplot.android.rendering.YAxis;

        $d1 = $d0 / 2.0;

        specialinvoke r3.<com.wildplot.android.rendering.YAxis: void <init>(com.wildplot.android.rendering.PlotSheet,double,double,double)>($r1, 0.0, $d0, $d1);

        goto label1;

     label5:
        virtualinvoke r3.<com.wildplot.android.rendering.YAxis: void setOnFrame()>();

        goto label3;
    }
    public com.wildplot.android.rendering.PlotSheet renderChart(com.ichi2.libanki.Stats$AxisType)
    {
        com.ichi2.anki.stats.ChartBuilder r0;
        com.ichi2.libanki.Stats$AxisType $r1;
        com.wildplot.android.rendering.PlotSheet r2, r10;
        double $d0, $d1, $d2;
        android.graphics.Paint r3;
        com.wildplot.android.rendering.graphics.wrapper.RectangleWrap r4;
        float f0, $f1, $f2, $f3, $f4;
        android.graphics.Paint$Style $r5;
        com.ichi2.anki.stats.ChartView $r6;
        int $i0, $i1, $i2;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        com.ichi2.anki.stats.AnkiStatsTaskHandler $r9;
        android.content.Context $r11;
        com.wildplot.android.rendering.graphics.wrapper.ColorWrap $r12;
        boolean $z0;
        com.ichi2.libanki.Stats$ChartType $r13, $r14;
        int[] $r15;

        r0 := @this: com.ichi2.anki.stats.ChartBuilder;

        $r1 := @parameter0: com.ichi2.libanki.Stats$AxisType;

        specialinvoke r0.<com.ichi2.anki.stats.ChartBuilder: void calcStats(com.ichi2.libanki.Stats$AxisType)>($r1);

        r3 = new android.graphics.Paint;

        specialinvoke r3.<android.graphics.Paint: void <init>(int)>(65);

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        $r6 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $i0 = virtualinvoke $r6.<com.ichi2.anki.stats.ChartView: int getMeasuredHeight()>();

        $r6 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $i1 = virtualinvoke $r6.<com.ichi2.anki.stats.ChartView: int getMeasuredWidth()>();

        $r7 = newarray (java.lang.Object)[3];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7[0] = $r8;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7[1] = $r8;

        $r6 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $i2 = virtualinvoke $r6.<com.ichi2.anki.stats.ChartView: int getWidth()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r7[2] = $r8;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("height: %d, width: %d, %d", $r7);

        if $i0 <= 0 goto label1;

        if $i1 > 0 goto label2;

     label1:
        return null;

     label2:
        r4 = new com.wildplot.android.rendering.graphics.wrapper.RectangleWrap;

        specialinvoke r4.<com.wildplot.android.rendering.graphics.wrapper.RectangleWrap: void <init>(int,int)>($i1, $i0);

        $r9 = staticinvoke <com.ichi2.anki.stats.AnkiStatsTaskHandler: com.ichi2.anki.stats.AnkiStatsTaskHandler getInstance()>();

        f0 = virtualinvoke $r9.<com.ichi2.anki.stats.AnkiStatsTaskHandler: float getmStandardTextSize()>();

        f0 = f0 * 0.85F;

        virtualinvoke r3.<android.graphics.Paint: void setTextSize(float)>(f0);

        $f1 = virtualinvoke r3.<android.graphics.Paint: float getTextSize()>();

        $f2 = virtualinvoke r3.<android.graphics.Paint: float measureText(java.lang.String)>("100000");

        $f2 = $f2 * 2.6F;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $f1 = 4.0F * $f1;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f1);

        r10 = new com.wildplot.android.rendering.PlotSheet;

        $d0 = r0.<com.ichi2.anki.stats.ChartBuilder: double mFirstElement>;

        $d0 = $d0 - 0.5;

        $d1 = r0.<com.ichi2.anki.stats.ChartBuilder: double mLastElement>;

        $d1 = $d1 + 0.5;

        $i2 = r0.<com.ichi2.anki.stats.ChartBuilder: int mMaxCards>;

        $d2 = (double) $i2;

        $d2 = $d2 * 1.05;

        specialinvoke r10.<com.wildplot.android.rendering.PlotSheet: void <init>(double,double,double,double)>($d0, $d1, 0.0, $d2);

        $f1 = (float) $i1;

        $f1 = $f1 * 0.66F;

        $f2 = (float) $i1;

        $f2 = $f2 * 0.66F;

        $f3 = (float) $i1;

        $f4 = (float) $i1;

        $f4 = $f4 * 0.9F;

        virtualinvoke r10.<com.wildplot.android.rendering.PlotSheet: void setFrameThickness(float,float,float,float)>($f1, $f2, $f3, $f4);

        virtualinvoke r10.<com.wildplot.android.rendering.PlotSheet: void setFontSize(float)>(f0);

        $r6 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r11 = virtualinvoke $r6.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $i2 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r11, 16842801);

        $r12 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        specialinvoke $r12.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int)>($i2);

        virtualinvoke r10.<com.wildplot.android.rendering.PlotSheet: void setBackgroundColor(com.wildplot.android.rendering.graphics.wrapper.ColorWrap)>($r12);

        $r6 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.anki.stats.ChartView mChartView>;

        $r11 = virtualinvoke $r6.<com.ichi2.anki.stats.ChartView: android.content.Context getContext()>();

        $i2 = staticinvoke <com.ichi2.themes.Themes: int getColorFromAttr(android.content.Context,int)>($r11, 16842904);

        $r12 = new com.wildplot.android.rendering.graphics.wrapper.ColorWrap;

        specialinvoke $r12.<com.wildplot.android.rendering.graphics.wrapper.ColorWrap: void <init>(int)>($i2);

        virtualinvoke r10.<com.wildplot.android.rendering.PlotSheet: void setTextColor(com.wildplot.android.rendering.graphics.wrapper.ColorWrap)>($r12);

        $z0 = r0.<com.ichi2.anki.stats.ChartBuilder: boolean mBackwards>;

        virtualinvoke r10.<com.wildplot.android.rendering.PlotSheet: void setIsBackwards(boolean)>($z0);

        $r13 = r0.<com.ichi2.anki.stats.ChartBuilder: com.ichi2.libanki.Stats$ChartType mChartType>;

        $r14 = <com.ichi2.libanki.Stats$ChartType: com.ichi2.libanki.Stats$ChartType CARDS_TYPES>;

        if $r13 != $r14 goto label3;

        r2 = specialinvoke r0.<com.ichi2.anki.stats.ChartBuilder: com.wildplot.android.rendering.PlotSheet createPieChart(com.wildplot.android.rendering.PlotSheet)>(r10);

        return r2;

     label3:
        r2 = new com.wildplot.android.rendering.PlotSheet;

        $d0 = r0.<com.ichi2.anki.stats.ChartBuilder: double mFirstElement>;

        $d0 = $d0 - 0.5;

        $d1 = r0.<com.ichi2.anki.stats.ChartBuilder: double mLastElement>;

        $d1 = $d1 + 0.5;

        $d2 = r0.<com.ichi2.anki.stats.ChartBuilder: double mMcount>;

        $d2 = $d2 * 1.05;

        specialinvoke r2.<com.wildplot.android.rendering.PlotSheet: void <init>(double,double,double,double)>($d0, $d1, 0.0, $d2);

        f0 = (float) $i1;

        f0 = f0 * 0.66F;

        $f1 = (float) $i1;

        $f1 = $f1 * 0.66F;

        $f2 = (float) $i1;

        $f3 = (float) $i1;

        $f3 = $f3 * 0.9F;

        virtualinvoke r2.<com.wildplot.android.rendering.PlotSheet: void setFrameThickness(float,float,float,float)>(f0, $f1, $f2, $f3);

        specialinvoke r0.<com.ichi2.anki.stats.ChartBuilder: void setupCumulative(com.wildplot.android.rendering.PlotSheet,com.wildplot.android.rendering.PlotSheet)>(r10, r2);

        specialinvoke r0.<com.ichi2.anki.stats.ChartBuilder: void setupBarGraphs(com.wildplot.android.rendering.PlotSheet,com.wildplot.android.rendering.PlotSheet)>(r10, r2);

        $d0 = r0.<com.ichi2.anki.stats.ChartBuilder: double mFirstElement>;

        $d1 = r0.<com.ichi2.anki.stats.ChartBuilder: double mLastElement>;

        $d0 = virtualinvoke r0.<com.ichi2.anki.stats.ChartBuilder: double ticksCalcX(int,com.wildplot.android.rendering.graphics.wrapper.RectangleWrap,double,double)>($i0, r4, $d0, $d1);

        specialinvoke r0.<com.ichi2.anki.stats.ChartBuilder: void setupXaxis(com.wildplot.android.rendering.PlotSheet,double,boolean)>(r10, $d0, 1);

        $i1 = r0.<com.ichi2.anki.stats.ChartBuilder: int mMaxCards>;

        $d1 = (double) $i1;

        $d1 = $d1 * 1.05;

        $d1 = virtualinvoke r0.<com.ichi2.anki.stats.ChartBuilder: double ticksCalcY(int,com.wildplot.android.rendering.graphics.wrapper.RectangleWrap,double,double)>($i0, r4, 0.0, $d1);

        $r15 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mAxisTitles>;

        $i1 = $r15[1];

        specialinvoke r0.<com.ichi2.anki.stats.ChartBuilder: void setupYaxis(com.wildplot.android.rendering.PlotSheet,com.wildplot.android.rendering.PlotSheet,double,int,boolean,boolean)>(r10, r2, $d1, $i1, 0, 1);

        $r15 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mAxisTitles>;

        $i1 = lengthof $r15;

        if $i1 != 3 goto label4;

        $d2 = r0.<com.ichi2.anki.stats.ChartBuilder: double mMcount>;

        $d2 = $d2 * 1.05;

        $d2 = virtualinvoke r0.<com.ichi2.anki.stats.ChartBuilder: double ticsCalc(int,com.wildplot.android.rendering.graphics.wrapper.RectangleWrap,double)>($i0, r4, $d2);

        $r15 = r0.<com.ichi2.anki.stats.ChartBuilder: int[] mAxisTitles>;

        $i0 = $r15[2];

        specialinvoke r0.<com.ichi2.anki.stats.ChartBuilder: void setupYaxis(com.wildplot.android.rendering.PlotSheet,com.wildplot.android.rendering.PlotSheet,double,int,boolean,boolean)>(r10, r2, $d2, $i0, 1, 1);

     label4:
        $d1 = $d1 * 0.5;

        $d0 = $d0 * 0.5;

        specialinvoke r0.<com.ichi2.anki.stats.ChartBuilder: void setupGrid(com.wildplot.android.rendering.PlotSheet,double,double)>(r10, $d1, $d0);

        return r10;
    }
    public double ticksCalcX(int, com.wildplot.android.rendering.graphics.wrapper.RectangleWrap, double, double)
    {
        com.ichi2.anki.stats.ChartBuilder r0;
        int $i0, $i1;
        com.wildplot.android.rendering.graphics.wrapper.RectangleWrap $r1;
        double $d0, $d1, $d2, $d3;
        byte $b2;

        r0 := @this: com.ichi2.anki.stats.ChartBuilder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.wildplot.android.rendering.graphics.wrapper.RectangleWrap;

        $d0 := @parameter2: double;

        $d1 := @parameter3: double;

        $d0 = $d1 - $d0;

        $i1 = $r1.<com.wildplot.android.rendering.graphics.wrapper.RectangleWrap: int width>;

        $i0 = $i1 / $i0;

        $d1 = (double) $i0;

        $d1 = $d0 / $d1;

        $d1 = staticinvoke <java.lang.Math: double log10(double)>($d1);

        $i1 = (int) $d1;

        $d1 = (double) $i1;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d1);

     label1:
        $d2 = $d0 / $d1;

        $d2 = 2.0 * $d2;

        $d3 = (double) $i0;

        $b2 = $d2 cmpg $d3;

        if $b2 > 0 goto label2;

        $d1 = $d1 / 2.0;

        goto label1;

     label2:
        $d2 = $d0 / $d1;

        $d2 = $d2 / 2.0;

        $d3 = (double) $i0;

        $b2 = $d2 cmpl $d3;

        if $b2 < 0 goto label3;

        $d1 = $d1 * 2.0;

        goto label2;

     label3:
        return $d1;
    }
    public double ticksCalcY(int, com.wildplot.android.rendering.graphics.wrapper.RectangleWrap, double, double)
    {
        com.ichi2.anki.stats.ChartBuilder r0;
        int $i0;
        com.wildplot.android.rendering.graphics.wrapper.RectangleWrap $r1;
        double $d0, $d1, $d2;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        java.lang.Double $r4;

        r0 := @this: com.ichi2.anki.stats.ChartBuilder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.wildplot.android.rendering.graphics.wrapper.RectangleWrap;

        $d0 := @parameter2: double;

        $d1 := @parameter3: double;

        $d2 = $d1 - $d0;

        $d2 = virtualinvoke r0.<com.ichi2.anki.stats.ChartBuilder: double ticsCalc(int,com.wildplot.android.rendering.graphics.wrapper.RectangleWrap,double)>($i0, $r1, $d2);

        $r2 = newarray (java.lang.Object)[5];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r2[1] = $r4;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2[2] = $r4;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r2[3] = $r4;

        $i0 = $r1.<com.wildplot.android.rendering.graphics.wrapper.RectangleWrap: int height>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[4] = $r3;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("ChartBuilder ticksCalcY: pixelDistance: %d, ticks: %,.2f, start: %,.2f, end: %,.2f, height: %d", $r2);

        return $d2;
    }
    public double ticsCalc(int, com.wildplot.android.rendering.graphics.wrapper.RectangleWrap, double)
    {
        com.ichi2.anki.stats.ChartBuilder r0;
        int $i0, $i1;
        com.wildplot.android.rendering.graphics.wrapper.RectangleWrap $r1;
        double $d0, d1, $d2, $d3;
        byte $b2;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;
        java.lang.Double $r4;

        r0 := @this: com.ichi2.anki.stats.ChartBuilder;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.wildplot.android.rendering.graphics.wrapper.RectangleWrap;

        $d0 := @parameter2: double;

        $i1 = $r1.<com.wildplot.android.rendering.graphics.wrapper.RectangleWrap: int height>;

        $i1 = $i1 / $i0;

        d1 = (double) $i1;

        d1 = $d0 / d1;

        $d2 = staticinvoke <java.lang.Math: double log(double)>(d1);

        $d3 = staticinvoke <java.lang.Math: double log(double)>(10.0);

        $d2 = $d2 / $d3;

        $d2 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d2);

        d1 = d1 / $d2;

        $b2 = d1 cmpg 1.5;

        if $b2 >= 0 goto label2;

        $d3 = 1.0;

     label1:
        d1 = $d3 * $d2;

        $r2 = newarray (java.lang.Object)[4];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r2[1] = $r4;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2[2] = $r4;

        $i0 = $r1.<com.wildplot.android.rendering.graphics.wrapper.RectangleWrap: int height>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[3] = $r3;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("ChartBuilder ticksCalc : pixelDistance: %d, ticks: %,.2f, deltaRange: %,.2f, height: %d", $r2);

        return d1;

     label2:
        $b2 = d1 cmpg 3.0;

        if $b2 >= 0 goto label3;

        $d3 = 2.0;

        $b2 = d1 cmpl 2.25;

        if $b2 <= 0 goto label1;

        $d3 = 2.5;

        goto label1;

     label3:
        $b2 = d1 cmpg 7.5;

        if $b2 >= 0 goto label4;

        $d3 = 5.0;

        goto label1;

     label4:
        $d3 = 10.0;

        goto label1;
    }
