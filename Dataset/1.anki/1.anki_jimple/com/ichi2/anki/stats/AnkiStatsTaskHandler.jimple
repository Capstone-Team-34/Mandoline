com.ichi2.anki.stats.AnkiStatsTaskHandler extends java.lang.Object
private static com.ichi2.anki.stats.AnkiStatsTaskHandler sInstance
private static java.util.concurrent.locks.Lock sLock
private com.ichi2.libanki.Collection mCollectionData
private boolean mIsWholeCollection
private float mStandardTextSize
private com.ichi2.libanki.Stats$AxisType mStatType
    static void <clinit>()
    {
        java.util.concurrent.locks.ReentrantLock $r0;

        $r0 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        <com.ichi2.anki.stats.AnkiStatsTaskHandler: java.util.concurrent.locks.Lock sLock> = $r0;

        return;
    }
    public void <init>(com.ichi2.libanki.Collection)
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler r0;
        com.ichi2.libanki.Collection $r1;
        com.ichi2.libanki.Stats$AxisType $r2;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler: float mStandardTextSize> = 10.0F;

        $r2 = <com.ichi2.libanki.Stats$AxisType: com.ichi2.libanki.Stats$AxisType TYPE_MONTH>;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler: com.ichi2.libanki.Stats$AxisType mStatType> = $r2;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler: boolean mIsWholeCollection> = 0;

        <com.ichi2.anki.stats.AnkiStatsTaskHandler: com.ichi2.anki.stats.AnkiStatsTaskHandler sInstance> = r0;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler: com.ichi2.libanki.Collection mCollectionData> = $r1;

        return;
    }
    static java.util.concurrent.locks.Lock access$000()
    {
        java.util.concurrent.locks.Lock r0;

        r0 = <com.ichi2.anki.stats.AnkiStatsTaskHandler: java.util.concurrent.locks.Lock sLock>;

        return r0;
    }
    static com.ichi2.libanki.Collection access$100(com.ichi2.anki.stats.AnkiStatsTaskHandler)
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler $r0;
        com.ichi2.libanki.Collection r1;

        $r0 := @parameter0: com.ichi2.anki.stats.AnkiStatsTaskHandler;

        r1 = $r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler: com.ichi2.libanki.Collection mCollectionData>;

        return r1;
    }
    static boolean access$200(com.ichi2.anki.stats.AnkiStatsTaskHandler)
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler $r0;
        boolean z0;

        $r0 := @parameter0: com.ichi2.anki.stats.AnkiStatsTaskHandler;

        z0 = $r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler: boolean mIsWholeCollection>;

        return z0;
    }
    static com.ichi2.libanki.Stats$AxisType access$300(com.ichi2.anki.stats.AnkiStatsTaskHandler)
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler $r0;
        com.ichi2.libanki.Stats$AxisType r1;

        $r0 := @parameter0: com.ichi2.anki.stats.AnkiStatsTaskHandler;

        r1 = $r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler: com.ichi2.libanki.Stats$AxisType mStatType>;

        return r1;
    }
    public static com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics createReviewSummaryStatistics(com.ichi2.libanki.Collection, android.widget.TextView)
    {
        com.ichi2.libanki.Collection $r0;
        android.widget.TextView $r1;
        com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics r2;
        java.lang.Object[] $r3;

        $r0 := @parameter0: com.ichi2.libanki.Collection;

        $r1 := @parameter1: android.widget.TextView;

        r2 = new com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics;

        specialinvoke r2.<com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics: void <init>()>();

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = $r0;

        $r3[1] = $r1;

        virtualinvoke r2.<com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics: android.os.AsyncTask execute(java.lang.Object[])>($r3);

        return r2;
    }
    public static com.ichi2.anki.stats.AnkiStatsTaskHandler getInstance()
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler r0;

        r0 = <com.ichi2.anki.stats.AnkiStatsTaskHandler: com.ichi2.anki.stats.AnkiStatsTaskHandler sInstance>;

        return r0;
    }
    public transient com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask createChart(com.ichi2.libanki.Stats$ChartType, android.view.View[])
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler r0;
        com.ichi2.libanki.Stats$ChartType $r1;
        android.view.View[] $r2;
        com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask r3;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler;

        $r1 := @parameter0: com.ichi2.libanki.Stats$ChartType;

        $r2 := @parameter1: android.view.View[];

        r3 = new com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask;

        specialinvoke r3.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: void <init>(com.ichi2.anki.stats.AnkiStatsTaskHandler,com.ichi2.libanki.Stats$ChartType)>(r0, $r1);

        virtualinvoke r3.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: android.os.AsyncTask execute(java.lang.Object[])>($r2);

        return r3;
    }
    public transient com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateStatisticsOverview createStatisticsOverview(android.view.View[])
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler r0;
        android.view.View[] $r1;
        com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateStatisticsOverview r2;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler;

        $r1 := @parameter0: android.view.View[];

        r2 = new com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateStatisticsOverview;

        specialinvoke r2.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateStatisticsOverview: void <init>(com.ichi2.anki.stats.AnkiStatsTaskHandler)>(r0);

        virtualinvoke r2.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateStatisticsOverview: android.os.AsyncTask execute(java.lang.Object[])>($r1);

        return r2;
    }
    public com.ichi2.libanki.Stats$AxisType getStatType()
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler r0;
        com.ichi2.libanki.Stats$AxisType r1;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler;

        r1 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler: com.ichi2.libanki.Stats$AxisType mStatType>;

        return r1;
    }
    public float getmStandardTextSize()
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler r0;
        float f0;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler;

        f0 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler: float mStandardTextSize>;

        return f0;
    }
    public void setIsWholeCollection(boolean)
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler r0;
        boolean $z0;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler;

        $z0 := @parameter0: boolean;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler: boolean mIsWholeCollection> = $z0;

        return;
    }
    public void setStatType(com.ichi2.libanki.Stats$AxisType)
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler r0;
        com.ichi2.libanki.Stats$AxisType $r1;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler;

        $r1 := @parameter0: com.ichi2.libanki.Stats$AxisType;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler: com.ichi2.libanki.Stats$AxisType mStatType> = $r1;

        return;
    }
    public void setmStandardTextSize(float)
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler r0;
        float $f0;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler;

        $f0 := @parameter0: float;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler: float mStandardTextSize> = $f0;

        return;
    }
