com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics extends android.os.AsyncTask
private boolean mIsRunning
private android.widget.TextView mTextView
    public void <init>()
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics r0;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics: boolean mIsRunning> = 0;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics: boolean mIsRunning> = 1;

        return;
    }
    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = virtualinvoke r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics: java.lang.String doInBackground(java.lang.Object[])>($r1);

        return $r2;
    }
    protected transient java.lang.String doInBackground(java.lang.Object[])
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics r0;
        java.lang.Object[] $r1, $r6;
        int i0, $i2;
        java.util.concurrent.locks.Lock $r2;
        java.lang.Object r3;
        com.ichi2.libanki.Collection r4;
        boolean $z0;
        com.ichi2.libanki.DB $r5;
        android.widget.TextView $r7;
        android.database.Cursor r8, $r14;
        java.lang.StringBuilder $r9;
        com.ichi2.libanki.Sched $r10;
        long $l1;
        java.lang.String $r11, $r12;
        io.requery.android.database.sqlite.SQLiteDatabase $r13;
        double $d0;
        android.content.Context $r15;
        android.content.res.Resources $r16;
        java.lang.Integer $r17;
        java.lang.Throwable $r18, $r19;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = staticinvoke <com.ichi2.anki.stats.AnkiStatsTaskHandler: java.util.concurrent.locks.Lock access$000()>();

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        r3 = $r1[0];

        r4 = (com.ichi2.libanki.Collection) r3;

        $z0 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics: boolean mIsRunning>;

     label02:
        if $z0 == 0 goto label05;

        if r4 == null goto label05;

     label03:
        $r5 = virtualinvoke r4.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

     label04:
        if $r5 != null goto label07;

     label05:
        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Quitting DeckPreviewStatistics before execution", $r1);

     label06:
        $r2 = staticinvoke <com.ichi2.anki.stats.AnkiStatsTaskHandler: java.util.concurrent.locks.Lock access$000()>();

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return null;

     label07:
        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Starting DeckPreviewStatistics", $r6);

        r3 = $r1[1];

        $r7 = (android.widget.TextView) r3;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics: android.widget.TextView mTextView> = $r7;

     label08:
        r8 = null;

     label09:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select count(), sum(time)/1000 from revlog where id > ");

        $r10 = virtualinvoke r4.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        $l1 = virtualinvoke $r10.<com.ichi2.libanki.Sched: long getDayCutoff()>();

     label10:
        $l1 = $l1 - 86400L;

        $l1 = $l1 * 1000L;

     label11:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DeckPreviewStatistics query: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>($r12, $r1);

     label12:
        $r5 = virtualinvoke r4.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        $r13 = virtualinvoke $r5.<com.ichi2.libanki.DB: io.requery.android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r14 = virtualinvoke $r13.<io.requery.android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.Object[])>($r11, null);

     label13:
        r8 = $r14;

     label14:
        interfaceinvoke $r14.<android.database.Cursor: boolean moveToFirst()>();

        $i2 = interfaceinvoke $r14.<android.database.Cursor: int getInt(int)>(0);

        i0 = interfaceinvoke $r14.<android.database.Cursor: int getInt(int)>(1);

     label15:
        $d0 = (double) i0;

        $d0 = $d0 / 60.0;

     label16:
        $l1 = staticinvoke <java.lang.Math: long round(double)>($d0);

     label17:
        i0 = (int) $l1;

        if $r14 == null goto label21;

     label18:
        $z0 = interfaceinvoke $r14.<android.database.Cursor: boolean isClosed()>();

     label19:
        if $z0 != 0 goto label21;

     label20:
        interfaceinvoke $r14.<android.database.Cursor: void close()>();

     label21:
        $r15 = virtualinvoke r4.<com.ichi2.libanki.Collection: android.content.Context getContext()>();

        $r16 = virtualinvoke $r15.<android.content.Context: android.content.res.Resources getResources()>();

        $r1 = newarray (java.lang.Object)[1];

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r17;

        $r11 = virtualinvoke $r16.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131361807, i0, $r1);

        $r1 = newarray (java.lang.Object)[2];

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[0] = $r17;

        $r1[1] = $r11;

        $r11 = virtualinvoke $r16.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131361804, $i2, $r1);

     label22:
        $r2 = staticinvoke <com.ichi2.anki.stats.AnkiStatsTaskHandler: java.util.concurrent.locks.Lock access$000()>();

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return $r11;

     label23:
        $r18 := @caughtexception;

        if r8 == null goto label27;

     label24:
        $z0 = interfaceinvoke r8.<android.database.Cursor: boolean isClosed()>();

     label25:
        if $z0 != 0 goto label27;

     label26:
        interfaceinvoke r8.<android.database.Cursor: void close()>();

     label27:
        throw $r18;

     label28:
        $r19 := @caughtexception;

        $r2 = staticinvoke <com.ichi2.anki.stats.AnkiStatsTaskHandler: java.util.concurrent.locks.Lock access$000()>();

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r19;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch java.lang.Throwable from label11 to label12 with label28;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch java.lang.Throwable from label20 to label22 with label28;
        catch java.lang.Throwable from label24 to label25 with label28;
        catch java.lang.Throwable from label26 to label28 with label28;
    }
    protected void onCancelled()
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics r0;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics: boolean mIsRunning> = 0;

        return;
    }
    protected volatile void onPostExecute(java.lang.Object)
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) $r1;

        virtualinvoke r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics: void onPostExecute(java.lang.String)>($r2);

        return;
    }
    protected void onPostExecute(java.lang.String)
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics r0;
        java.lang.String $r1;
        boolean $z0;
        android.widget.TextView $r2;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $z0 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics: boolean mIsRunning>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics: android.widget.TextView mTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

        $r2 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics: android.widget.TextView mTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(0);

        $r2 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics: android.widget.TextView mTextView>;

        virtualinvoke $r2.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }
