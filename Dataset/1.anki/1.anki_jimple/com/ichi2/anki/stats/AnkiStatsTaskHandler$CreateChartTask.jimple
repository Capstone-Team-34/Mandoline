com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask extends android.os.AsyncTask
private com.ichi2.libanki.Stats$ChartType mChartType
private com.ichi2.anki.stats.ChartView mImageView
private boolean mIsRunning
private android.widget.ProgressBar mProgressBar
final com.ichi2.anki.stats.AnkiStatsTaskHandler this$0
    public void <init>(com.ichi2.anki.stats.AnkiStatsTaskHandler, com.ichi2.libanki.Stats$ChartType)
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask r0;
        com.ichi2.anki.stats.AnkiStatsTaskHandler $r1;
        com.ichi2.libanki.Stats$ChartType $r2;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask;

        $r1 := @parameter0: com.ichi2.anki.stats.AnkiStatsTaskHandler;

        $r2 := @parameter1: com.ichi2.libanki.Stats$ChartType;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.ichi2.anki.stats.AnkiStatsTaskHandler this$0> = $r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: boolean mIsRunning> = 0;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: boolean mIsRunning> = 1;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.ichi2.libanki.Stats$ChartType mChartType> = $r2;

        return;
    }
    protected transient com.wildplot.android.rendering.PlotSheet doInBackground(android.view.View[])
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask r0;
        android.view.View[] $r1;
        com.ichi2.anki.stats.ChartBuilder r2;
        java.util.concurrent.locks.Lock $r3;
        boolean $z0;
        java.lang.Object[] $r4;
        com.ichi2.libanki.Stats$ChartType $r5;
        java.lang.String $r6;
        android.view.View $r7;
        com.ichi2.anki.stats.ChartView $r8;
        android.widget.ProgressBar $r9;
        com.ichi2.anki.stats.AnkiStatsTaskHandler $r10;
        com.ichi2.libanki.Collection $r11;
        com.ichi2.libanki.Stats$AxisType $r12;
        com.wildplot.android.rendering.PlotSheet $r13;
        java.lang.Throwable $r14;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask;

        $r1 := @parameter0: android.view.View[];

        $r3 = staticinvoke <com.ichi2.anki.stats.AnkiStatsTaskHandler: java.util.concurrent.locks.Lock access$000()>();

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $z0 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: boolean mIsRunning>;

     label2:
        if $z0 != 0 goto label5;

     label3:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.ichi2.libanki.Stats$ChartType mChartType>;

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Stats$ChartType: java.lang.String name()>();

        $r4[0] = $r6;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Quitting CreateChartTask (%s) before execution", $r4);

     label4:
        $r3 = staticinvoke <com.ichi2.anki.stats.AnkiStatsTaskHandler: java.util.concurrent.locks.Lock access$000()>();

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        return null;

     label5:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.ichi2.libanki.Stats$ChartType mChartType>;

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Stats$ChartType: java.lang.String name()>();

        $r4[0] = $r6;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Starting CreateChartTask, type: %s", $r4);

        $r7 = $r1[0];

        $r8 = (com.ichi2.anki.stats.ChartView) $r7;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.ichi2.anki.stats.ChartView mImageView> = $r8;

        $r7 = $r1[1];

        $r9 = (android.widget.ProgressBar) $r7;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: android.widget.ProgressBar mProgressBar> = $r9;

        r2 = new com.ichi2.anki.stats.ChartBuilder;

        $r8 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.ichi2.anki.stats.ChartView mImageView>;

        $r10 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.ichi2.anki.stats.AnkiStatsTaskHandler this$0>;

        $r11 = staticinvoke <com.ichi2.anki.stats.AnkiStatsTaskHandler: com.ichi2.libanki.Collection access$100(com.ichi2.anki.stats.AnkiStatsTaskHandler)>($r10);

        $r10 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.ichi2.anki.stats.AnkiStatsTaskHandler this$0>;

        $z0 = staticinvoke <com.ichi2.anki.stats.AnkiStatsTaskHandler: boolean access$200(com.ichi2.anki.stats.AnkiStatsTaskHandler)>($r10);

        $r5 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.ichi2.libanki.Stats$ChartType mChartType>;

        specialinvoke r2.<com.ichi2.anki.stats.ChartBuilder: void <init>(com.ichi2.anki.stats.ChartView,com.ichi2.libanki.Collection,boolean,com.ichi2.libanki.Stats$ChartType)>($r8, $r11, $z0, $r5);

        $r10 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.ichi2.anki.stats.AnkiStatsTaskHandler this$0>;

        $r12 = staticinvoke <com.ichi2.anki.stats.AnkiStatsTaskHandler: com.ichi2.libanki.Stats$AxisType access$300(com.ichi2.anki.stats.AnkiStatsTaskHandler)>($r10);

        $r13 = virtualinvoke r2.<com.ichi2.anki.stats.ChartBuilder: com.wildplot.android.rendering.PlotSheet renderChart(com.ichi2.libanki.Stats$AxisType)>($r12);

     label6:
        $r3 = staticinvoke <com.ichi2.anki.stats.AnkiStatsTaskHandler: java.util.concurrent.locks.Lock access$000()>();

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        return $r13;

     label7:
        $r14 := @caughtexception;

        $r3 = staticinvoke <com.ichi2.anki.stats.AnkiStatsTaskHandler: java.util.concurrent.locks.Lock access$000()>();

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r14;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask r0;
        com.wildplot.android.rendering.PlotSheet $r1;
        java.lang.Object[] $r2;
        android.view.View[] $r3;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (android.view.View[]) $r2;

        $r1 = virtualinvoke r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.wildplot.android.rendering.PlotSheet doInBackground(android.view.View[])>($r3);

        return $r1;
    }
    protected void onCancelled()
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask r0;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask;

        r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: boolean mIsRunning> = 0;

        return;
    }
    protected void onPostExecute(com.wildplot.android.rendering.PlotSheet)
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask r0;
        com.wildplot.android.rendering.PlotSheet $r1;
        boolean $z0;
        com.ichi2.anki.stats.ChartView $r2;
        android.widget.ProgressBar $r3;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask;

        $r1 := @parameter0: com.wildplot.android.rendering.PlotSheet;

        if $r1 == null goto label1;

        $z0 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: boolean mIsRunning>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.ichi2.anki.stats.ChartView mImageView>;

        virtualinvoke $r2.<com.ichi2.anki.stats.ChartView: void setData(com.wildplot.android.rendering.PlotSheet)>($r1);

        $r3 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: android.widget.ProgressBar mProgressBar>;

        virtualinvoke $r3.<android.widget.ProgressBar: void setVisibility(int)>(8);

        $r2 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.ichi2.anki.stats.ChartView mImageView>;

        virtualinvoke $r2.<com.ichi2.anki.stats.ChartView: void setVisibility(int)>(0);

        $r2 = r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: com.ichi2.anki.stats.ChartView mImageView>;

        virtualinvoke $r2.<com.ichi2.anki.stats.ChartView: void invalidate()>();

     label1:
        return;
    }
    protected volatile void onPostExecute(java.lang.Object)
    {
        com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask r0;
        java.lang.Object $r1;
        com.wildplot.android.rendering.PlotSheet $r2;

        r0 := @this: com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (com.wildplot.android.rendering.PlotSheet) $r1;

        virtualinvoke r0.<com.ichi2.anki.stats.AnkiStatsTaskHandler$CreateChartTask: void onPostExecute(com.wildplot.android.rendering.PlotSheet)>($r2);

        return;
    }
