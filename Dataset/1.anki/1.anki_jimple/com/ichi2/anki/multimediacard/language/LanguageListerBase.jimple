com.ichi2.anki.multimediacard.language.LanguageListerBase extends java.lang.Object
protected java.util.HashMap mLanguageMap
    public void <init>()
    {
        com.ichi2.anki.multimediacard.language.LanguageListerBase r0;
        java.util.HashMap $r1;

        r0 := @this: com.ichi2.anki.multimediacard.language.LanguageListerBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.ichi2.anki.multimediacard.language.LanguageListerBase: java.util.HashMap mLanguageMap> = $r1;

        return;
    }
    protected void addLanguage(java.lang.String, java.lang.String)
    {
        com.ichi2.anki.multimediacard.language.LanguageListerBase r0;
        java.lang.String $r1, $r2;
        java.util.HashMap $r3;

        r0 := @this: com.ichi2.anki.multimediacard.language.LanguageListerBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.ichi2.anki.multimediacard.language.LanguageListerBase: java.util.HashMap mLanguageMap>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }
    public java.lang.String getCodeFor(java.lang.String)
    {
        com.ichi2.anki.multimediacard.language.LanguageListerBase r0;
        java.lang.String $r1;
        java.util.HashMap $r2;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @this: com.ichi2.anki.multimediacard.language.LanguageListerBase;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ichi2.anki.multimediacard.language.LanguageListerBase: java.util.HashMap mLanguageMap>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.ichi2.anki.multimediacard.language.LanguageListerBase: java.util.HashMap mLanguageMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        return $r1;

     label1:
        return null;
    }
    public java.util.ArrayList getLanguages()
    {
        com.ichi2.anki.multimediacard.language.LanguageListerBase r0;
        java.util.ArrayList r1;
        java.util.Set $r2;
        java.util.HashMap $r3;
        com.ichi2.anki.multimediacard.language.LanguageListerBase$1 $r4;

        r0 := @this: com.ichi2.anki.multimediacard.language.LanguageListerBase;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<com.ichi2.anki.multimediacard.language.LanguageListerBase: java.util.HashMap mLanguageMap>;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.util.Set keySet()>();

        virtualinvoke r1.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r2);

        $r4 = new com.ichi2.anki.multimediacard.language.LanguageListerBase$1;

        specialinvoke $r4.<com.ichi2.anki.multimediacard.language.LanguageListerBase$1: void <init>(com.ichi2.anki.multimediacard.language.LanguageListerBase)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r4);

        return r1;
    }
