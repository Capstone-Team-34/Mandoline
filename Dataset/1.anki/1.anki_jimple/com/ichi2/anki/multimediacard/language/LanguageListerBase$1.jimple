com.ichi2.anki.multimediacard.language.LanguageListerBase$1 extends java.lang.Object implements java.util.Comparator
final com.ichi2.anki.multimediacard.language.LanguageListerBase this$0
    void <init>(com.ichi2.anki.multimediacard.language.LanguageListerBase)
    {
        com.ichi2.anki.multimediacard.language.LanguageListerBase$1 r0;
        com.ichi2.anki.multimediacard.language.LanguageListerBase $r1;

        r0 := @this: com.ichi2.anki.multimediacard.language.LanguageListerBase$1;

        $r1 := @parameter0: com.ichi2.anki.multimediacard.language.LanguageListerBase;

        r0.<com.ichi2.anki.multimediacard.language.LanguageListerBase$1: com.ichi2.anki.multimediacard.language.LanguageListerBase this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.ichi2.anki.multimediacard.language.LanguageListerBase$1 r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.ichi2.anki.multimediacard.language.LanguageListerBase$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) $r1;

        $r4 = (java.lang.String) $r2;

        $i0 = virtualinvoke r0.<com.ichi2.anki.multimediacard.language.LanguageListerBase$1: int compare(java.lang.String,java.lang.String)>($r3, $r4);

        return $i0;
    }
    public int compare(java.lang.String, java.lang.String)
    {
        com.ichi2.anki.multimediacard.language.LanguageListerBase$1 r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: com.ichi2.anki.multimediacard.language.LanguageListerBase$1;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r2);

        return $i0;
    }
