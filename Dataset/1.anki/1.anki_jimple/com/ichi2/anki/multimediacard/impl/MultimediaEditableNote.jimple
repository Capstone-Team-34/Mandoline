com.ichi2.anki.multimediacard.impl.MultimediaEditableNote extends java.lang.Object implements com.ichi2.anki.multimediacard.IMultimediaEditableNote
private static final long serialVersionUID
java.util.ArrayList mFields
boolean mIsModified
private long mModelId
    public void <init>()
    {
        com.ichi2.anki.multimediacard.impl.MultimediaEditableNote r0;

        r0 := @this: com.ichi2.anki.multimediacard.impl.MultimediaEditableNote;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: boolean mIsModified> = 0;

        return;
    }
    private java.util.ArrayList getFieldsPrivate()
    {
        com.ichi2.anki.multimediacard.impl.MultimediaEditableNote r0;
        java.util.ArrayList $r1;

        r0 := @this: com.ichi2.anki.multimediacard.impl.MultimediaEditableNote;

        $r1 = r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList mFields>;

        if $r1 != null goto label1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList mFields> = $r1;

     label1:
        $r1 = r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList mFields>;

        return $r1;
    }
    public void circularSwap()
    {
        com.ichi2.anki.multimediacard.impl.MultimediaEditableNote r0;
        java.util.ArrayList r1, $r2, $r3;
        int $i0;
        java.lang.Object $r4;

        r0 := @this: com.ichi2.anki.multimediacard.impl.MultimediaEditableNote;

        r1 = r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList mFields>;

        if r1 != null goto label1;

        return;

     label1:
        r1 = r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList mFields>;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 <= 1 goto label2;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList mFields>;

        $r3 = r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList mFields>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r2 = r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList mFields>;

        virtualinvoke r1.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r2);

        $r2 = r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList mFields>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList mFields> = r1;

     label2:
        return;
    }
    public com.ichi2.anki.multimediacard.fields.IField getField(int)
    {
        com.ichi2.anki.multimediacard.impl.MultimediaEditableNote r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        com.ichi2.anki.multimediacard.fields.IField $r3;

        r0 := @this: com.ichi2.anki.multimediacard.impl.MultimediaEditableNote;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: int getNumberOfFields()>();

        if $i0 >= $i1 goto label1;

        $r1 = specialinvoke r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList getFieldsPrivate()>();

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (com.ichi2.anki.multimediacard.fields.IField) $r2;

        return $r3;

     label1:
        return null;
    }
    public long getModelId()
    {
        com.ichi2.anki.multimediacard.impl.MultimediaEditableNote r0;
        long l0;

        r0 := @this: com.ichi2.anki.multimediacard.impl.MultimediaEditableNote;

        l0 = r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: long mModelId>;

        return l0;
    }
    public int getNumberOfFields()
    {
        com.ichi2.anki.multimediacard.impl.MultimediaEditableNote r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: com.ichi2.anki.multimediacard.impl.MultimediaEditableNote;

        $r1 = specialinvoke r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList getFieldsPrivate()>();

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }
    public boolean isModified()
    {
        com.ichi2.anki.multimediacard.impl.MultimediaEditableNote r0;
        boolean z0;

        r0 := @this: com.ichi2.anki.multimediacard.impl.MultimediaEditableNote;

        z0 = r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: boolean mIsModified>;

        return z0;
    }
    public boolean setField(int, com.ichi2.anki.multimediacard.fields.IField)
    {
        com.ichi2.anki.multimediacard.impl.MultimediaEditableNote r0;
        int $i0, $i1;
        com.ichi2.anki.multimediacard.fields.IField $r1, $r2;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this: com.ichi2.anki.multimediacard.impl.MultimediaEditableNote;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.ichi2.anki.multimediacard.fields.IField;

        if $i0 < 0 goto label3;

        $i1 = virtualinvoke r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: int getNumberOfFields()>();

        if $i0 >= $i1 goto label3;

        $r2 = virtualinvoke r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: com.ichi2.anki.multimediacard.fields.IField getField(int)>($i0);

        if $r2 != $r1 goto label2;

        $z0 = interfaceinvoke $r1.<com.ichi2.anki.multimediacard.fields.IField: boolean isModified()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: void setThisModified()>();

     label1:
        $r3 = specialinvoke r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList getFieldsPrivate()>();

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i0, $r1);

        return 1;

     label2:
        virtualinvoke r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: void setThisModified()>();

        goto label1;

     label3:
        return 0;
    }
    public void setModelId(long)
    {
        com.ichi2.anki.multimediacard.impl.MultimediaEditableNote r0;
        long $l0;

        r0 := @this: com.ichi2.anki.multimediacard.impl.MultimediaEditableNote;

        $l0 := @parameter0: long;

        r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: long mModelId> = $l0;

        return;
    }
    public void setNumFields(int)
    {
        com.ichi2.anki.multimediacard.impl.MultimediaEditableNote r0;
        int $i0, i1;
        java.util.ArrayList $r1;

        r0 := @this: com.ichi2.anki.multimediacard.impl.MultimediaEditableNote;

        $i0 := @parameter0: int;

        $r1 = specialinvoke r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList getFieldsPrivate()>();

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r1 = specialinvoke r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: java.util.ArrayList getFieldsPrivate()>();

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    void setThisModified()
    {
        com.ichi2.anki.multimediacard.impl.MultimediaEditableNote r0;

        r0 := @this: com.ichi2.anki.multimediacard.impl.MultimediaEditableNote;

        r0.<com.ichi2.anki.multimediacard.impl.MultimediaEditableNote: boolean mIsModified> = 1;

        return;
    }
