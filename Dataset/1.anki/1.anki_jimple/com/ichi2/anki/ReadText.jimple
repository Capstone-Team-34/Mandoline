com.ichi2.anki.ReadText extends java.lang.Object
public static final java.lang.String NO_TTS
private static java.util.ArrayList availableTtsLocales
private static long mDid
private static int mOrd
private static int mQuestionAnswer
private static java.lang.ref.WeakReference mReviewer
private static java.lang.String mTextToSpeak
private static android.speech.tts.TextToSpeech mTts
public static java.util.HashMap mTtsParams
public static java.util.ArrayList sTextQueue
    static void <clinit>()
    {
        java.util.ArrayList $r0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <com.ichi2.anki.ReadText: java.util.ArrayList availableTtsLocales> = $r0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <com.ichi2.anki.ReadText: java.util.ArrayList sTextQueue> = $r0;

        return;
    }
    public void <init>()
    {
        com.ichi2.anki.ReadText r0;

        r0 := @this: com.ichi2.anki.ReadText;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static java.lang.String access$000()
    {
        java.lang.String r0;

        r0 = <com.ichi2.anki.ReadText: java.lang.String mTextToSpeak>;

        return r0;
    }
    static long access$100()
    {
        long l0;

        l0 = <com.ichi2.anki.ReadText: long mDid>;

        return l0;
    }
    static int access$200()
    {
        int i0;

        i0 = <com.ichi2.anki.ReadText: int mOrd>;

        return i0;
    }
    static int access$300()
    {
        int i0;

        i0 = <com.ichi2.anki.ReadText: int mQuestionAnswer>;

        return i0;
    }
    static java.lang.ref.WeakReference access$400()
    {
        java.lang.ref.WeakReference r0;

        r0 = <com.ichi2.anki.ReadText: java.lang.ref.WeakReference mReviewer>;

        return r0;
    }
    static java.util.ArrayList access$500()
    {
        java.util.ArrayList r0;

        r0 = <com.ichi2.anki.ReadText: java.util.ArrayList availableTtsLocales>;

        return r0;
    }
    static android.speech.tts.TextToSpeech access$600()
    {
        android.speech.tts.TextToSpeech r0;

        r0 = <com.ichi2.anki.ReadText: android.speech.tts.TextToSpeech mTts>;

        return r0;
    }
    public static void buildAvailableLanguages()
    {
        java.lang.IllegalArgumentException r0;
        java.util.Locale r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2;
        java.util.Locale[] $r3;
        android.speech.tts.TextToSpeech $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6;
        java.lang.Integer $r7;
        java.lang.StringBuilder $r8;

        $r2 = <com.ichi2.anki.ReadText: java.util.ArrayList availableTtsLocales>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        $r3 = staticinvoke <java.util.Locale: java.util.Locale[] getAvailableLocales()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label14;

        r1 = $r3[$i1];

        $r4 = <com.ichi2.anki.ReadText: android.speech.tts.TextToSpeech mTts>;

     label02:
        $i2 = virtualinvoke $r4.<android.speech.tts.TextToSpeech: int isLanguageAvailable(java.util.Locale)>(r1);

     label03:
        if $i2 < 1 goto label06;

        $r2 = <com.ichi2.anki.ReadText: java.util.ArrayList availableTtsLocales>;

     label04:
        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label05:
        $i1 = $i1 + 1;

        goto label01;

     label06:
        $r5 = newarray (java.lang.Object)[2];

     label07:
        $r6 = virtualinvoke r1.<java.util.Locale: java.lang.String getDisplayName()>();

     label08:
        $r5[0] = $r6;

     label09:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label10:
        $r5[1] = $r7;

     label11:
        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("ReadText.buildAvailableLanguages() :: %s  not available (error code %d)", $r5);

     label12:
        goto label05;

     label13:
        r0 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error checking if language ");

        $r6 = virtualinvoke r1.<java.util.Locale: java.lang.String getDisplayName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" available");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>($r6, $r5);

        goto label05;

     label14:
        return;

        catch java.lang.IllegalArgumentException from label02 to label03 with label13;
        catch java.lang.IllegalArgumentException from label04 to label05 with label13;
        catch java.lang.IllegalArgumentException from label07 to label08 with label13;
        catch java.lang.IllegalArgumentException from label09 to label10 with label13;
        catch java.lang.IllegalArgumentException from label11 to label12 with label13;
    }
    public static java.lang.String getLanguage(long, int, int)
    {
        long $l0;
        int $i1, $i2;
        java.lang.ref.WeakReference $r0;
        java.lang.Object $r1;
        android.content.Context $r2;
        java.lang.String $r3;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r0 = <com.ichi2.anki.ReadText: java.lang.ref.WeakReference mReviewer>;

        $r1 = virtualinvoke $r0.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r2 = (android.content.Context) $r1;

        $r3 = staticinvoke <com.ichi2.anki.MetaDB: java.lang.String getLanguage(android.content.Context,long,int,int)>($r2, $l0, $i1, $i2);

        return $r3;
    }
    public static void initializeTts(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.ref.WeakReference $r1;
        android.speech.tts.TextToSpeech $r2;
        com.ichi2.anki.ReadText$3 $r3;
        java.util.HashMap $r4;
        java.lang.String $r5;
        android.widget.Toast $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 = new java.lang.ref.WeakReference;

        specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r0);

        <com.ichi2.anki.ReadText: java.lang.ref.WeakReference mReviewer> = $r1;

        $r2 = new android.speech.tts.TextToSpeech;

        $r3 = new com.ichi2.anki.ReadText$3;

        specialinvoke $r3.<com.ichi2.anki.ReadText$3: void <init>()>();

        specialinvoke $r2.<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener)>($r0, $r3);

        <com.ichi2.anki.ReadText: android.speech.tts.TextToSpeech mTts> = $r2;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        <com.ichi2.anki.ReadText: java.util.HashMap mTtsParams> = $r4;

        $r4 = <com.ichi2.anki.ReadText: java.util.HashMap mTtsParams>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("utteranceId", "stringId");

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>(2131231086);

        $r6 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, $r5, 1);

        virtualinvoke $r6.<android.widget.Toast: void show()>();

        return;
    }
    public static void releaseTts()
    {
        android.speech.tts.TextToSpeech $r0;

        $r0 = <com.ichi2.anki.ReadText: android.speech.tts.TextToSpeech mTts>;

        if $r0 == null goto label1;

        $r0 = <com.ichi2.anki.ReadText: android.speech.tts.TextToSpeech mTts>;

        virtualinvoke $r0.<android.speech.tts.TextToSpeech: int stop()>();

        $r0 = <com.ichi2.anki.ReadText: android.speech.tts.TextToSpeech mTts>;

        virtualinvoke $r0.<android.speech.tts.TextToSpeech: void shutdown()>();

     label1:
        return;
    }
    public static void selectTts(java.lang.String, long, int, int)
    {
        java.lang.String $r0;
        long $l0;
        int $i1, $i2;
        com.afollestad.materialdialogs.MaterialDialog$Builder r1, $r11;
        java.util.ArrayList r2, r3, $r13;
        android.os.Handler r4;
        java.lang.String[] r5;
        java.lang.ref.WeakReference $r6;
        java.lang.Object $r7;
        android.content.Context $r8;
        android.content.res.Resources $r9;
        boolean $z0;
        java.lang.Object[] $r10;
        com.ichi2.anki.ReadText$2 $r12;
        java.util.Locale $r14;
        com.ichi2.anki.ReadText$1 $r15;

        $r0 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        <com.ichi2.anki.ReadText: java.lang.String mTextToSpeak> = $r0;

        <com.ichi2.anki.ReadText: int mQuestionAnswer> = $i2;

        <com.ichi2.anki.ReadText: long mDid> = $l0;

        <com.ichi2.anki.ReadText: int mOrd> = $i1;

        $r6 = <com.ichi2.anki.ReadText: java.lang.ref.WeakReference mReviewer>;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r8 = (android.content.Context) $r7;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = new com.afollestad.materialdialogs.MaterialDialog$Builder;

        $r6 = <com.ichi2.anki.ReadText: java.lang.ref.WeakReference mReviewer>;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r8 = (android.content.Context) $r7;

        specialinvoke r1.<com.afollestad.materialdialogs.MaterialDialog$Builder: void <init>(android.content.Context)>($r8);

        r2 = <com.ichi2.anki.ReadText: java.util.ArrayList availableTtsLocales>;

        $z0 = virtualinvoke r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.ichi2.anki.ReadText: void buildAvailableLanguages()>();

     label1:
        r2 = <com.ichi2.anki.ReadText: java.util.ArrayList availableTtsLocales>;

        $i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label3;

        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("ReadText.textToSpeech() no TTS languages available", $r10);

        $r0 = virtualinvoke $r9.<android.content.res.Resources: java.lang.String getString(int)>(2131231201);

        $r11 = virtualinvoke r1.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder content(java.lang.CharSequence)>($r0);

        $r11 = virtualinvoke $r11.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder iconAttr(int)>(2130771980);

        $r0 = virtualinvoke $r9.<android.content.res.Resources: java.lang.String getString(int)>(2131230970);

        virtualinvoke $r11.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveText(java.lang.CharSequence)>($r0);

     label2:
        r4 = new android.os.Handler;

        specialinvoke r4.<android.os.Handler: void <init>()>();

        $r12 = new com.ichi2.anki.ReadText$2;

        specialinvoke $r12.<com.ichi2.anki.ReadText$2: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>(r1);

        virtualinvoke r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r12, 500L);

        return;

     label3:
        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r0 = virtualinvoke $r9.<android.content.res.Resources: java.lang.String getString(int)>(2131231478);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("0");

        $i1 = 0;

     label4:
        $r13 = <com.ichi2.anki.ReadText: java.util.ArrayList availableTtsLocales>;

        $i2 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label5;

        $r13 = <com.ichi2.anki.ReadText: java.util.ArrayList availableTtsLocales>;

        $r7 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r14 = (java.util.Locale) $r7;

        $r0 = virtualinvoke $r14.<java.util.Locale: java.lang.String getDisplayName()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        $r13 = <com.ichi2.anki.ReadText: java.util.ArrayList availableTtsLocales>;

        $r7 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r14 = (java.util.Locale) $r7;

        $r0 = virtualinvoke $r14.<java.util.Locale: java.lang.String getISO3Language()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        r5 = newarray (java.lang.String)[$i1];

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        $r0 = virtualinvoke $r9.<android.content.res.Resources: java.lang.String getString(int)>(2131231284);

        $r11 = virtualinvoke r1.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder title(java.lang.CharSequence)>($r0);

        $r11 = virtualinvoke $r11.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder items(java.lang.CharSequence[])>(r5);

        $r15 = new com.ichi2.anki.ReadText$1;

        specialinvoke $r15.<com.ichi2.anki.ReadText$1: void <init>(java.util.ArrayList)>(r2);

        virtualinvoke $r11.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder itemsCallback(com.afollestad.materialdialogs.MaterialDialog$ListCallback)>($r15);

        goto label2;
    }
    public static void speak(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        android.speech.tts.TextToSpeech $r2;
        java.util.Locale $r3;
        int $i0;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        android.content.Context $r6, $r8;
        java.lang.StringBuilder $r7;
        android.widget.Toast $r9;
        java.lang.Object[] $r10;
        boolean $z0;
        java.util.HashMap $r11;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = <com.ichi2.anki.ReadText: android.speech.tts.TextToSpeech mTts>;

        $r3 = new java.util.Locale;

        specialinvoke $r3.<java.util.Locale: void <init>(java.lang.String)>($r1);

        $i0 = virtualinvoke $r2.<android.speech.tts.TextToSpeech: int setLanguage(java.util.Locale)>($r3);

        if $i0 == -1 goto label1;

        if $i0 != -2 goto label2;

     label1:
        $r4 = <com.ichi2.anki.ReadText: java.lang.ref.WeakReference mReviewer>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (android.content.Context) $r5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = <com.ichi2.anki.ReadText: java.lang.ref.WeakReference mReviewer>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r8 = (android.content.Context) $r5;

        $r0 = virtualinvoke $r8.<android.content.Context: java.lang.String getString(int)>(2131231201);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r6, $r0, 1);

        virtualinvoke $r9.<android.widget.Toast: void show()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading locale ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>($r0, $r10);

        return;

     label2:
        $r2 = <com.ichi2.anki.ReadText: android.speech.tts.TextToSpeech mTts>;

        $z0 = virtualinvoke $r2.<android.speech.tts.TextToSpeech: boolean isSpeaking()>();

        if $z0 == 0 goto label3;

        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("tts engine appears to be busy... clearing queue", $r10);

        staticinvoke <com.ichi2.anki.ReadText: void stopTts()>();

     label3:
        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = $r0;

        $r10[1] = $r1;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("tts text \'%s\' to be played for locale (%s)", $r10);

        $r2 = <com.ichi2.anki.ReadText: android.speech.tts.TextToSpeech mTts>;

        $r0 = <com.ichi2.anki.ReadText: java.lang.String mTextToSpeak>;

        $r11 = <com.ichi2.anki.ReadText: java.util.HashMap mTtsParams>;

        virtualinvoke $r2.<android.speech.tts.TextToSpeech: int speak(java.lang.String,int,java.util.HashMap)>($r0, 0, $r11);

        return;
    }
    public static void stopTts()
    {
        android.speech.tts.TextToSpeech $r0;
        java.util.ArrayList $r1;

        $r0 = <com.ichi2.anki.ReadText: android.speech.tts.TextToSpeech mTts>;

        if $r0 == null goto label2;

        $r1 = <com.ichi2.anki.ReadText: java.util.ArrayList sTextQueue>;

        if $r1 == null goto label1;

        $r1 = <com.ichi2.anki.ReadText: java.util.ArrayList sTextQueue>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

     label1:
        $r0 = <com.ichi2.anki.ReadText: android.speech.tts.TextToSpeech mTts>;

        virtualinvoke $r0.<android.speech.tts.TextToSpeech: int stop()>();

     label2:
        return;
    }
    public static void textToSpeech(java.lang.String, long, int, int)
    {
        java.lang.String $r0, $r5;
        long $l0;
        int $i1, $i2;
        java.lang.Object[] $r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.util.Locale $r4;

        $r0 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        <com.ichi2.anki.ReadText: java.lang.String mTextToSpeak> = $r0;

        <com.ichi2.anki.ReadText: int mQuestionAnswer> = $i2;

        <com.ichi2.anki.ReadText: long mDid> = $l0;

        <com.ichi2.anki.ReadText: int mOrd> = $i1;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r0;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("ReadText.textToSpeech() method started for string \'%s\'", $r1);

        $l0 = <com.ichi2.anki.ReadText: long mDid>;

        $i2 = <com.ichi2.anki.ReadText: int mOrd>;

        $i1 = <com.ichi2.anki.ReadText: int mQuestionAnswer>;

        $r0 = staticinvoke <com.ichi2.anki.ReadText: java.lang.String getLanguage(long,int,int)>($l0, $i2, $i1);

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r0;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("ReadText.textToSpeech() method found language choice \'%s\'", $r1);

        $r2 = <com.ichi2.anki.ReadText: java.util.ArrayList availableTtsLocales>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.ichi2.anki.ReadText: void buildAvailableLanguages()>();

     label1:
        $i1 = 0;

     label2:
        $r2 = <com.ichi2.anki.ReadText: java.util.ArrayList availableTtsLocales>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label5;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z0 == 0 goto label3;

        return;

     label3:
        $r2 = <com.ichi2.anki.ReadText: java.util.ArrayList availableTtsLocales>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (java.util.Locale) $r3;

        $r5 = virtualinvoke $r4.<java.util.Locale: java.lang.String getISO3Language()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

        $r5 = <com.ichi2.anki.ReadText: java.lang.String mTextToSpeak>;

        staticinvoke <com.ichi2.anki.ReadText: void speak(java.lang.String,java.lang.String)>($r5, $r0);

        return;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        $r0 = <com.ichi2.anki.ReadText: java.lang.String mTextToSpeak>;

        $l0 = <com.ichi2.anki.ReadText: long mDid>;

        $i1 = <com.ichi2.anki.ReadText: int mOrd>;

        $i2 = <com.ichi2.anki.ReadText: int mQuestionAnswer>;

        staticinvoke <com.ichi2.anki.ReadText: void selectTts(java.lang.String,long,int,int)>($r0, $l0, $i1, $i2);

        return;
    }
