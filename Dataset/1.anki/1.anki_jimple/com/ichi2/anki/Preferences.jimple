com.ichi2.anki.Preferences extends com.ichi2.ui.AppCompatPreferenceActivity implements android.content.SharedPreferences$OnSharedPreferenceChangeListener com.ichi2.anki.PreferenceContext
private static final int DIALOG_HEBREW_FONT
public static final java.lang.String LANGUAGE
private static final java.lang.String[] sCollectionPreferences
private final java.util.HashMap mOriginalSumarries
    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[7];

        $r0[0] = "showEstimates";

        $r0[1] = "showProgress";

        $r0[2] = "learnCutoff";

        $r0[3] = "timeLimit";

        $r0[4] = "useCurrent";

        $r0[5] = "newSpread";

        $r0[6] = "dayOffset";

        <com.ichi2.anki.Preferences: java.lang.String[] sCollectionPreferences> = $r0;

        return;
    }
    public void <init>()
    {
        com.ichi2.anki.Preferences r0;
        java.util.HashMap $r1;

        r0 := @this: com.ichi2.anki.Preferences;

        specialinvoke r0.<com.ichi2.ui.AppCompatPreferenceActivity: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.ichi2.anki.Preferences: java.util.HashMap mOriginalSumarries> = $r1;

        return;
    }
    static com.ichi2.libanki.Collection access$000(com.ichi2.anki.Preferences)
    {
        com.ichi2.anki.Preferences $r0;
        com.ichi2.libanki.Collection $r1;

        $r0 := @parameter0: com.ichi2.anki.Preferences;

        $r1 = specialinvoke $r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        return $r1;
    }
    static void access$100(com.ichi2.anki.Preferences, java.lang.String, com.ichi2.anki.PreferenceContext)
    {
        com.ichi2.anki.Preferences $r0;
        java.lang.String $r1;
        com.ichi2.anki.PreferenceContext $r2;

        $r0 := @parameter0: com.ichi2.anki.Preferences;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: com.ichi2.anki.PreferenceContext;

        specialinvoke $r0.<com.ichi2.anki.Preferences: void initSubscreen(java.lang.String,com.ichi2.anki.PreferenceContext)>($r1, $r2);

        return;
    }
    static void access$200(com.ichi2.anki.Preferences, android.preference.PreferenceScreen)
    {
        com.ichi2.anki.Preferences $r0;
        android.preference.PreferenceScreen $r1;

        $r0 := @parameter0: com.ichi2.anki.Preferences;

        $r1 := @parameter1: android.preference.PreferenceScreen;

        specialinvoke $r0.<com.ichi2.anki.Preferences: void initAllPreferences(android.preference.PreferenceScreen)>($r1);

        return;
    }
    static void access$300(com.ichi2.anki.Preferences, android.content.SharedPreferences, java.lang.String, com.ichi2.anki.PreferenceContext)
    {
        com.ichi2.anki.Preferences $r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2;
        com.ichi2.anki.PreferenceContext $r3;

        $r0 := @parameter0: com.ichi2.anki.Preferences;

        $r1 := @parameter1: android.content.SharedPreferences;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: com.ichi2.anki.PreferenceContext;

        specialinvoke $r0.<com.ichi2.anki.Preferences: void updatePreference(android.content.SharedPreferences,java.lang.String,com.ichi2.anki.PreferenceContext)>($r1, $r2, $r3);

        return;
    }
    private void closePreferences()
    {
        com.ichi2.anki.Preferences r0;
        int $i0;
        com.ichi2.libanki.Collection $r1;
        com.ichi2.libanki.DB $r2;

        r0 := @this: com.ichi2.anki.Preferences;

        virtualinvoke r0.<com.ichi2.anki.Preferences: void finish()>();

        $i0 = <com.ichi2.anim.ActivityTransitionAnimation: int FADE>;

        staticinvoke <com.ichi2.anim.ActivityTransitionAnimation: void slide(android.app.Activity,int)>(r0, $i0);

        $r1 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        if $r1 == null goto label1;

        $r1 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.DB getDb()>();

        if $r2 == null goto label1;

        $r1 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        virtualinvoke $r1.<com.ichi2.libanki.Collection: void save()>();

     label1:
        return;
    }
    private com.ichi2.libanki.Collection getCol()
    {
        com.ichi2.anki.Preferences r0;
        com.ichi2.anki.CollectionHelper $r1;
        com.ichi2.libanki.Collection $r2;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 = staticinvoke <com.ichi2.anki.CollectionHelper: com.ichi2.anki.CollectionHelper getInstance()>();

        $r2 = virtualinvoke $r1.<com.ichi2.anki.CollectionHelper: com.ichi2.libanki.Collection getCol(android.content.Context)>(r0);

        return $r2;
    }
    private java.lang.String[] getCustomFonts(java.lang.String)
    {
        com.ichi2.anki.Preferences r0;
        java.lang.String $r1;
        java.lang.String[] $r2;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.ichi2.anki.Preferences: java.lang.String[] getCustomFonts(java.lang.String,boolean)>($r1, 0);

        return $r2;
    }
    private java.lang.String[] getCustomFonts(java.lang.String, boolean)
    {
        com.ichi2.anki.Preferences r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.String[] r2;
        java.util.List $r3;
        int $i0, $i1, $i2;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        java.lang.Object $r6;
        com.ichi2.anki.AnkiFont $r7;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r3 = staticinvoke <com.ichi2.libanki.Utils: java.util.List getCustomFonts(android.content.Context)>(r0);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[0] = $r5;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("There are %d custom fonts", $r4);

        $i1 = $i0 + 1;

        r2 = newarray (java.lang.String)[$i1];

        r2[0] = $r1;

        if $z0 == 0 goto label2;

        $i1 = 1;

     label1:
        $i2 = $i0 + 1;

        if $i1 >= $i2 goto label4;

        $i2 = $i1 + -1;

        $r6 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i2);

        $r7 = (com.ichi2.anki.AnkiFont) $r6;

        $r1 = virtualinvoke $r7.<com.ichi2.anki.AnkiFont: java.lang.String getPath()>();

        r2[$i1] = $r1;

        $r4 = newarray (java.lang.Object)[1];

        $r1 = r2[$i1];

        $r4[0] = $r1;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Adding custom font: %s", $r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $i1 = 1;

     label3:
        $i2 = $i0 + 1;

        if $i1 >= $i2 goto label4;

        $i2 = $i1 + -1;

        $r6 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i2);

        $r7 = (com.ichi2.anki.AnkiFont) $r6;

        $r1 = virtualinvoke $r7.<com.ichi2.anki.AnkiFont: java.lang.String getName()>();

        r2[$i1] = $r1;

        $r4 = newarray (java.lang.Object)[1];

        $r1 = r2[$i1];

        $r4[0] = $r1;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Adding custom font: %s", $r4);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return r2;
    }
    private void initAllPreferences(android.preference.PreferenceScreen)
    {
        com.ichi2.anki.Preferences r0;
        android.preference.PreferenceScreen $r1;
        int i0, $i1, $i2, $i3;
        android.preference.Preference $r2;
        boolean $z0;
        android.preference.PreferenceGroup r3, r4;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: android.preference.PreferenceScreen;

        i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<android.preference.PreferenceScreen: int getPreferenceCount()>();

        if i0 >= $i1 goto label8;

        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference getPreference(int)>(i0);

        $z0 = $r2 instanceof android.preference.PreferenceGroup;

        if $z0 == 0 goto label6;

        r3 = (android.preference.PreferenceGroup) $r2;

        $i1 = 0;

     label2:
        $i2 = virtualinvoke r3.<android.preference.PreferenceGroup: int getPreferenceCount()>();

        if $i1 >= $i2 goto label7;

        $r2 = virtualinvoke r3.<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)>($i1);

        $z0 = $r2 instanceof android.preference.PreferenceGroup;

        if $z0 == 0 goto label4;

        r4 = (android.preference.PreferenceGroup) $r2;

        $i2 = 0;

     label3:
        $i3 = virtualinvoke r4.<android.preference.PreferenceGroup: int getPreferenceCount()>();

        if $i2 >= $i3 goto label5;

        $r2 = virtualinvoke r4.<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)>($i2);

        specialinvoke r0.<com.ichi2.anki.Preferences: void initPreference(android.preference.Preference)>($r2);

        $i2 = $i2 + 1;

        goto label3;

     label4:
        $r2 = virtualinvoke r3.<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)>($i1);

        specialinvoke r0.<com.ichi2.anki.Preferences: void initPreference(android.preference.Preference)>($r2);

     label5:
        $i1 = $i1 + 1;

        goto label2;

     label6:
        specialinvoke r0.<com.ichi2.anki.Preferences: void initPreference(android.preference.Preference)>($r2);

     label7:
        i0 = i0 + 1;

        goto label1;

     label8:
        return;
    }
    private void initPreference(android.preference.Preference)
    {
        com.ichi2.anki.Preferences r0;
        android.preference.Preference $r1;
        java.util.GregorianCalendar r2;
        java.sql.Timestamp r3;
        byte $b0, $b1;
        java.lang.String[] $r4;
        java.util.List $r5;
        java.lang.String $r6, $r11;
        boolean $z0;
        com.ichi2.libanki.Collection $r7;
        org.json.JSONObject $r8;
        int $i2;
        java.lang.CharSequence $r9;
        java.util.HashMap $r10;
        android.preference.CheckBoxPreference $r12;
        org.json.JSONException r13;
        java.lang.RuntimeException $r14;
        java.lang.NumberFormatException r15;
        com.ichi2.preferences.NumberRangePreference $r16;
        android.preference.ListPreference $r17;
        long $l3;
        com.ichi2.ui.SeekBarPreference $r18;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: android.preference.Preference;

        $b0 = 0;

        $r4 = <com.ichi2.anki.Preferences: java.lang.String[] sCollectionPreferences>;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r6 = virtualinvoke $r1.<android.preference.Preference: java.lang.String getKey()>();

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>($r6);

        if $z0 == 0 goto label60;

        $r7 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        if $r7 == null goto label59;

     label01:
        $r8 = virtualinvoke $r7.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

        $r6 = virtualinvoke $r1.<android.preference.Preference: java.lang.String getKey()>();

     label02:
        $b1 = -1;

     label03:
        $i2 = virtualinvoke $r6.<java.lang.String: int hashCode()>();

     label04:
        lookupswitch($i2)
        {
            case -1853049782: goto label10;
            case -1264922162: goto label08;
            case -730091697: goto label20;
            case -711826607: goto label12;
            case -599404749: goto label18;
            case -494298638: goto label16;
            case 18792686: goto label14;
            default: goto label05;
        };

     label05:
        lookupswitch($b1)
        {
            case 0: goto label22;
            case 1: goto label27;
            case 2: goto label31;
            case 3: goto label36;
            case 4: goto label41;
            case 5: goto label47;
            case 6: goto label50;
            default: goto label06;
        };

     label06:
        $r9 = virtualinvoke $r1.<android.preference.Preference: java.lang.CharSequence getSummary()>();

        $r10 = r0.<com.ichi2.anki.Preferences: java.util.HashMap mOriginalSumarries>;

        $r6 = virtualinvoke $r1.<android.preference.Preference: java.lang.String getKey()>();

        if $r9 == null goto label61;

        $r11 = interfaceinvoke $r9.<java.lang.CharSequence: java.lang.String toString()>();

     label07:
        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r11);

        specialinvoke r0.<com.ichi2.anki.Preferences: void updateSummary(android.preference.Preference)>($r1);

        return;

     label08:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("showEstimates");

     label09:
        if $z0 == 0 goto label05;

        $b1 = 0;

        goto label05;

     label10:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("showProgress");

     label11:
        if $z0 == 0 goto label05;

        $b1 = 1;

        goto label05;

     label12:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("learnCutoff");

     label13:
        if $z0 == 0 goto label05;

        $b1 = 2;

        goto label05;

     label14:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("timeLimit");

     label15:
        if $z0 == 0 goto label05;

        $b1 = 3;

        goto label05;

     label16:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("useCurrent");

     label17:
        if $z0 == 0 goto label05;

        $b1 = 4;

        goto label05;

     label18:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("newSpread");

     label19:
        if $z0 == 0 goto label05;

        $b1 = 5;

        goto label05;

     label20:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("dayOffset");

     label21:
        if $z0 == 0 goto label05;

        $b1 = 6;

        goto label05;

     label22:
        $r12 = (android.preference.CheckBoxPreference) $r1;

     label23:
        $z0 = virtualinvoke $r8.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("estTimes");

        virtualinvoke $r12.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

     label24:
        goto label06;

     label25:
        r13 := @caughtexception;

     label26:
        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>()>();

        throw $r14;

     label27:
        $r12 = (android.preference.CheckBoxPreference) $r1;

     label28:
        $z0 = virtualinvoke $r8.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("dueCounts");

        virtualinvoke $r12.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

     label29:
        goto label06;

     label30:
        r15 := @caughtexception;

        goto label26;

     label31:
        $r16 = (com.ichi2.preferences.NumberRangePreference) $r1;

     label32:
        $i2 = virtualinvoke $r8.<org.json.JSONObject: int getInt(java.lang.String)>("collapseTime");

     label33:
        $i2 = $i2 / 60;

     label34:
        virtualinvoke $r16.<com.ichi2.preferences.NumberRangePreference: void setValue(int)>($i2);

     label35:
        goto label06;

     label36:
        $r16 = (com.ichi2.preferences.NumberRangePreference) $r1;

     label37:
        $i2 = virtualinvoke $r8.<org.json.JSONObject: int getInt(java.lang.String)>("timeLim");

     label38:
        $i2 = $i2 / 60;

     label39:
        virtualinvoke $r16.<com.ichi2.preferences.NumberRangePreference: void setValue(int)>($i2);

     label40:
        goto label06;

     label41:
        $r17 = (android.preference.ListPreference) $r1;

     label42:
        $z0 = virtualinvoke $r8.<org.json.JSONObject: boolean optBoolean(java.lang.String,boolean)>("addToCur", 1);

     label43:
        if $z0 == 0 goto label46;

     label44:
        virtualinvoke $r17.<android.preference.ListPreference: void setValueIndex(int)>($b0);

     label45:
        goto label06;

     label46:
        $b0 = 1;

        goto label44;

     label47:
        $r17 = (android.preference.ListPreference) $r1;

     label48:
        $i2 = virtualinvoke $r8.<org.json.JSONObject: int getInt(java.lang.String)>("newSpread");

        virtualinvoke $r17.<android.preference.ListPreference: void setValueIndex(int)>($i2);

     label49:
        goto label06;

     label50:
        r2 = new java.util.GregorianCalendar;

     label51:
        specialinvoke r2.<java.util.GregorianCalendar: void <init>()>();

     label52:
        r3 = new java.sql.Timestamp;

     label53:
        $l3 = virtualinvoke $r7.<com.ichi2.libanki.Collection: long getCrt()>();

     label54:
        $l3 = $l3 * 1000L;

     label55:
        specialinvoke r3.<java.sql.Timestamp: void <init>(long)>($l3);

        $l3 = virtualinvoke r3.<java.sql.Timestamp: long getTime()>();

        virtualinvoke r2.<java.util.Calendar: void setTimeInMillis(long)>($l3);

     label56:
        $r18 = (com.ichi2.ui.SeekBarPreference) $r1;

     label57:
        $i2 = virtualinvoke r2.<java.util.Calendar: int get(int)>(11);

        virtualinvoke $r18.<com.ichi2.ui.SeekBarPreference: void setValue(int)>($i2);

     label58:
        goto label06;

     label59:
        virtualinvoke $r1.<android.preference.Preference: void setEnabled(boolean)>(0);

        goto label06;

     label60:
        $r6 = "minimumCardsDueForNotification";

        $r11 = virtualinvoke $r1.<android.preference.Preference: java.lang.String getKey()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label06;

        $r17 = (android.preference.ListPreference) $r1;

        virtualinvoke r0.<com.ichi2.anki.Preferences: void updateNotificationPreference(android.preference.ListPreference)>($r17);

        goto label06;

     label61:
        $r11 = "";

        goto label07;

        catch org.json.JSONException from label01 to label02 with label25;
        catch org.json.JSONException from label03 to label04 with label25;
        catch java.lang.NumberFormatException from label01 to label02 with label30;
        catch java.lang.NumberFormatException from label03 to label04 with label30;
        catch org.json.JSONException from label08 to label09 with label25;
        catch org.json.JSONException from label10 to label11 with label25;
        catch org.json.JSONException from label12 to label13 with label25;
        catch org.json.JSONException from label14 to label15 with label25;
        catch org.json.JSONException from label16 to label17 with label25;
        catch org.json.JSONException from label18 to label19 with label25;
        catch org.json.JSONException from label20 to label21 with label25;
        catch org.json.JSONException from label23 to label24 with label25;
        catch java.lang.NumberFormatException from label08 to label09 with label30;
        catch java.lang.NumberFormatException from label10 to label11 with label30;
        catch java.lang.NumberFormatException from label12 to label13 with label30;
        catch java.lang.NumberFormatException from label14 to label15 with label30;
        catch java.lang.NumberFormatException from label16 to label17 with label30;
        catch java.lang.NumberFormatException from label18 to label19 with label30;
        catch java.lang.NumberFormatException from label20 to label21 with label30;
        catch java.lang.NumberFormatException from label23 to label24 with label30;
        catch org.json.JSONException from label28 to label29 with label25;
        catch org.json.JSONException from label32 to label33 with label25;
        catch org.json.JSONException from label34 to label35 with label25;
        catch org.json.JSONException from label37 to label38 with label25;
        catch org.json.JSONException from label39 to label40 with label25;
        catch org.json.JSONException from label42 to label43 with label25;
        catch org.json.JSONException from label44 to label45 with label25;
        catch org.json.JSONException from label48 to label49 with label25;
        catch org.json.JSONException from label51 to label52 with label25;
        catch org.json.JSONException from label53 to label54 with label25;
        catch org.json.JSONException from label55 to label56 with label25;
        catch org.json.JSONException from label57 to label58 with label25;
        catch java.lang.NumberFormatException from label28 to label29 with label30;
        catch java.lang.NumberFormatException from label32 to label33 with label30;
        catch java.lang.NumberFormatException from label34 to label35 with label30;
        catch java.lang.NumberFormatException from label37 to label38 with label30;
        catch java.lang.NumberFormatException from label39 to label40 with label30;
        catch java.lang.NumberFormatException from label42 to label43 with label30;
        catch java.lang.NumberFormatException from label44 to label45 with label30;
        catch java.lang.NumberFormatException from label48 to label49 with label30;
        catch java.lang.NumberFormatException from label51 to label52 with label30;
        catch java.lang.NumberFormatException from label53 to label54 with label30;
        catch java.lang.NumberFormatException from label55 to label56 with label30;
        catch java.lang.NumberFormatException from label57 to label58 with label30;
    }
    private void initSubscreen(java.lang.String, com.ichi2.anki.PreferenceContext)
    {
        com.ichi2.anki.Preferences r0;
        java.lang.String $r1;
        com.ichi2.anki.PreferenceContext $r2;
        byte $b0;
        int $i1;
        boolean $z0;
        android.preference.PreferenceScreen $r3;
        android.preference.Preference $r4;
        android.preference.ListPreference r5;
        com.ichi2.anki.Preferences$2 $r6;
        com.ichi2.anki.Preferences$3 $r7;
        android.support.v7.app.ActionBar $r8;
        com.ichi2.anki.Preferences$4 $r9;
        android.preference.EditTextPreference r10;
        com.ichi2.anki.Preferences$5 $r11;
        com.ichi2.anki.Preferences$6 $r12;
        com.ichi2.anki.Preferences$7 $r13;
        com.ichi2.anki.Preferences$8 $r14;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.ichi2.anki.PreferenceContext;

        $b0 = -1;

        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1917071253: goto label03;
            case -1828876033: goto label08;
            case 201794049: goto label05;
            case 408698832: goto label07;
            case 441594957: goto label04;
            case 468958774: goto label09;
            case 857437479: goto label06;
            case 1863790691: goto label10;
            default: goto label01;
        };

     label01:
        lookupswitch($b0)
        {
            case 0: goto label11;
            case 1: goto label12;
            case 2: goto label13;
            case 3: goto label14;
            case 4: goto label15;
            case 5: goto label16;
            case 6: goto label17;
            case 7: goto label18;
            default: goto label02;
        };

     label02:
        return;

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.ichi2.anki.prefs.general");

        if $z0 == 0 goto label01;

        $b0 = 0;

        goto label01;

     label04:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.ichi2.anki.prefs.reviewing");

        if $z0 == 0 goto label01;

        $b0 = 1;

        goto label01;

     label05:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.ichi2.anki.prefs.appearance");

        if $z0 == 0 goto label01;

        $b0 = 2;

        goto label01;

     label06:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.ichi2.anki.prefs.gestures");

        if $z0 == 0 goto label01;

        $b0 = 3;

        goto label01;

     label07:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.ichi2.anki.prefs.custom_buttons");

        if $z0 == 0 goto label01;

        $b0 = 4;

        goto label01;

     label08:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.ichi2.anki.prefs.advanced");

        if $z0 == 0 goto label01;

        $b0 = 5;

        goto label01;

     label09:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.ichi2.anki.prefs.custom_sync_server");

        if $z0 == 0 goto label01;

        $b0 = 6;

        goto label01;

     label10:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("com.ichi2.anki.prefs.advanced_statistics");

        if $z0 == 0 goto label01;

        $b0 = 7;

        goto label01;

     label11:
        interfaceinvoke $r2.<com.ichi2.anki.PreferenceContext: void addPreferencesFromResource(int)>(2131165194);

        $r3 = interfaceinvoke $r2.<com.ichi2.anki.PreferenceContext: android.preference.PreferenceScreen getPreferenceScreen()>();

        specialinvoke r0.<com.ichi2.anki.Preferences: void initializeLanguageDialog(android.preference.PreferenceScreen)>($r3);

        return;

     label12:
        interfaceinvoke $r2.<com.ichi2.anki.PreferenceContext: void addPreferencesFromResource(int)>(2131165196);

        $r3 = interfaceinvoke $r2.<com.ichi2.anki.PreferenceContext: android.preference.PreferenceScreen getPreferenceScreen()>();

        $r4 = virtualinvoke $r3.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("fullscreenMode");

        r5 = (android.preference.ListPreference) $r4;

        $r6 = new com.ichi2.anki.Preferences$2;

        specialinvoke $r6.<com.ichi2.anki.Preferences$2: void <init>(com.ichi2.anki.Preferences)>(r0);

        virtualinvoke r5.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r6);

        $r4 = virtualinvoke $r3.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("custom_buttons_link");

        $r7 = new com.ichi2.anki.Preferences$3;

        specialinvoke $r7.<com.ichi2.anki.Preferences$3: void <init>(com.ichi2.anki.Preferences)>(r0);

        virtualinvoke $r4.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r7);

        return;

     label13:
        interfaceinvoke $r2.<com.ichi2.anki.PreferenceContext: void addPreferencesFromResource(int)>(2131165191);

        $r3 = interfaceinvoke $r2.<com.ichi2.anki.PreferenceContext: android.preference.PreferenceScreen getPreferenceScreen()>();

        specialinvoke r0.<com.ichi2.anki.Preferences: void initializeCustomFontsDialog(android.preference.PreferenceScreen)>($r3);

        return;

     label14:
        interfaceinvoke $r2.<com.ichi2.anki.PreferenceContext: void addPreferencesFromResource(int)>(2131165195);

        return;

     label15:
        $r8 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.support.v7.app.ActionBar getSupportActionBar()>();

        virtualinvoke $r8.<android.support.v7.app.ActionBar: void setTitle(int)>(2131230863);

        interfaceinvoke $r2.<com.ichi2.anki.PreferenceContext: void addPreferencesFromResource(int)>(2131165192);

        $r3 = interfaceinvoke $r2.<com.ichi2.anki.PreferenceContext: android.preference.PreferenceScreen getPreferenceScreen()>();

        $r4 = virtualinvoke $r3.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("reset_custom_buttons");

        $r9 = new com.ichi2.anki.Preferences$4;

        specialinvoke $r9.<com.ichi2.anki.Preferences$4: void <init>(com.ichi2.anki.Preferences)>(r0);

        virtualinvoke $r4.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r9);

        return;

     label16:
        interfaceinvoke $r2.<com.ichi2.anki.PreferenceContext: void addPreferencesFromResource(int)>(2131165189);

        $r3 = interfaceinvoke $r2.<com.ichi2.anki.PreferenceContext: android.preference.PreferenceScreen getPreferenceScreen()>();

        $r4 = virtualinvoke $r3.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("deckPath");

        r10 = (android.preference.EditTextPreference) $r4;

        $r11 = new com.ichi2.anki.Preferences$5;

        specialinvoke $r11.<com.ichi2.anki.Preferences$5: void <init>(com.ichi2.anki.Preferences)>(r0);

        virtualinvoke r10.<android.preference.EditTextPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>($r11);

        $r4 = virtualinvoke $r3.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("custom_sync_server_link");

        $r12 = new com.ichi2.anki.Preferences$6;

        specialinvoke $r12.<com.ichi2.anki.Preferences$6: void <init>(com.ichi2.anki.Preferences)>(r0);

        virtualinvoke $r4.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r12);

        $r4 = virtualinvoke $r3.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("advanced_statistics_link");

        $r13 = new com.ichi2.anki.Preferences$7;

        specialinvoke $r13.<com.ichi2.anki.Preferences$7: void <init>(com.ichi2.anki.Preferences)>(r0);

        virtualinvoke $r4.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r13);

        $r4 = virtualinvoke $r3.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("force_full_sync");

        $r14 = new com.ichi2.anki.Preferences$8;

        specialinvoke $r14.<com.ichi2.anki.Preferences$8: void <init>(com.ichi2.anki.Preferences)>(r0);

        virtualinvoke $r4.<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>($r14);

        specialinvoke r0.<com.ichi2.anki.Preferences: void removeUnnecessaryAdvancedPrefs(android.preference.PreferenceScreen)>($r3);

        return;

     label17:
        $r8 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.support.v7.app.ActionBar getSupportActionBar()>();

        virtualinvoke $r8.<android.support.v7.app.ActionBar: void setTitle(int)>(2131230890);

        interfaceinvoke $r2.<com.ichi2.anki.PreferenceContext: void addPreferencesFromResource(int)>(2131165193);

        return;

     label18:
        $r8 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.support.v7.app.ActionBar getSupportActionBar()>();

        virtualinvoke $r8.<android.support.v7.app.ActionBar: void setTitle(int)>(2131230756);

        interfaceinvoke $r2.<com.ichi2.anki.PreferenceContext: void addPreferencesFromResource(int)>(2131165190);

        return;
    }
    private void initializeCustomFontsDialog(android.preference.PreferenceScreen)
    {
        com.ichi2.anki.Preferences r0;
        android.preference.PreferenceScreen $r1;
        android.preference.Preference $r2;
        android.preference.ListPreference r3;
        java.lang.String[] $r4;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: android.preference.PreferenceScreen;

        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("defaultFont");

        r3 = (android.preference.ListPreference) $r2;

        if r3 == null goto label1;

        $r4 = specialinvoke r0.<com.ichi2.anki.Preferences: java.lang.String[] getCustomFonts(java.lang.String)>("System default");

        virtualinvoke r3.<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])>($r4);

        $r4 = specialinvoke r0.<com.ichi2.anki.Preferences: java.lang.String[] getCustomFonts(java.lang.String)>("");

        virtualinvoke r3.<android.preference.ListPreference: void setEntryValues(java.lang.CharSequence[])>($r4);

     label1:
        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("browserEditorFont");

        r3 = (android.preference.ListPreference) $r2;

        $r4 = specialinvoke r0.<com.ichi2.anki.Preferences: java.lang.String[] getCustomFonts(java.lang.String)>("System default");

        virtualinvoke r3.<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])>($r4);

        $r4 = specialinvoke r0.<com.ichi2.anki.Preferences: java.lang.String[] getCustomFonts(java.lang.String,boolean)>("", 1);

        virtualinvoke r3.<android.preference.ListPreference: void setEntryValues(java.lang.CharSequence[])>($r4);

        return;
    }
    private void initializeLanguageDialog(android.preference.PreferenceScreen)
    {
        com.ichi2.anki.Preferences r0;
        android.preference.PreferenceScreen $r1;
        java.util.TreeMap r2;
        java.lang.CharSequence[] r3, r4;
        java.lang.String r5, $r10;
        int $i0, $i1;
        android.preference.Preference $r6;
        android.preference.ListPreference r7;
        java.lang.String[] $r8;
        java.util.Locale $r9;
        android.content.res.Resources $r11;
        java.util.Set $r12;
        java.util.Iterator $r13;
        boolean $z0;
        java.lang.Object $r14;
        java.util.Map$Entry r15;
        java.lang.CharSequence $r16;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: android.preference.PreferenceScreen;

        $r6 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("language");

        r7 = (android.preference.ListPreference) $r6;

        if r7 == null goto label5;

        r2 = new java.util.TreeMap;

        specialinvoke r2.<java.util.TreeMap: void <init>()>();

        $r8 = <com.ichi2.utils.LanguageUtil: java.lang.String[] APP_LANGUAGES>;

        $i0 = lengthof $r8;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r5 = $r8[$i1];

        $r9 = staticinvoke <com.ichi2.utils.LanguageUtil: java.util.Locale getLocale(java.lang.String)>(r5);

        r5 = virtualinvoke $r9.<java.util.Locale: java.lang.String getDisplayName()>();

        $r10 = virtualinvoke $r9.<java.util.Locale: java.lang.String toString()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r10);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        $i0 = $i0 + 1;

        r3 = newarray (java.lang.CharSequence)[$i0];

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        $i0 = $i0 + 1;

        r4 = newarray (java.lang.CharSequence)[$i0];

        $r11 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.content.res.Resources getResources()>();

        r5 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int)>(2131231096);

        r3[0] = r5;

        r4[0] = "";

        $i0 = 1;

        $r12 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.util.Map$Entry) $r14;

        $r14 = interfaceinvoke r15.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.CharSequence) $r14;

        r3[$i0] = $r16;

        $r14 = interfaceinvoke r15.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (java.lang.CharSequence) $r14;

        r4[$i0] = $r16;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        virtualinvoke r7.<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])>(r3);

        virtualinvoke r7.<android.preference.ListPreference: void setEntryValues(java.lang.CharSequence[])>(r4);

     label5:
        return;
    }
    private void removeUnnecessaryAdvancedPrefs(android.preference.PreferenceScreen)
    {
        com.ichi2.anki.Preferences r0;
        android.preference.PreferenceScreen $r1;
        android.preference.Preference $r2;
        android.preference.PreferenceCategory r3;
        boolean $z0;
        android.preference.CheckBoxPreference r4, r5, r6, r7, r8, r9;
        android.content.Context $r10;
        int $i0;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: android.preference.PreferenceScreen;

        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("category_plugins");

        r3 = (android.preference.PreferenceCategory) $r2;

        $z0 = staticinvoke <com.ichi2.compat.CompatHelper: boolean hasKanaAndEmojiKeys()>();

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("scrolling_buttons");

        r4 = (android.preference.CheckBoxPreference) $r2;

        if r4 == null goto label1;

        if r3 == null goto label1;

        virtualinvoke r3.<android.preference.PreferenceCategory: boolean removePreference(android.preference.Preference)>(r4);

     label1:
        $z0 = staticinvoke <com.ichi2.compat.CompatHelper: boolean hasScrollKeys()>();

        if $z0 != 0 goto label2;

        $z0 = staticinvoke <com.ichi2.compat.CompatHelper: boolean hasKanaAndEmojiKeys()>();

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("double_scrolling");

        r4 = (android.preference.CheckBoxPreference) $r2;

        if r4 == null goto label2;

        if r3 == null goto label2;

        virtualinvoke r3.<android.preference.PreferenceCategory: boolean removePreference(android.preference.Preference)>(r4);

     label2:
        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("category_workarounds");

        r3 = (android.preference.PreferenceCategory) $r2;

        if r3 == null goto label7;

        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("writeAnswersDisable");

        r4 = (android.preference.CheckBoxPreference) $r2;

        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("useInputTag");

        r5 = (android.preference.CheckBoxPreference) $r2;

        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("inputWorkaround");

        r6 = (android.preference.CheckBoxPreference) $r2;

        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("textSelectionLongclickWorkaround");

        r7 = (android.preference.CheckBoxPreference) $r2;

        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("fixHebrewText");

        r8 = (android.preference.CheckBoxPreference) $r2;

        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("safeDisplay");

        r9 = (android.preference.CheckBoxPreference) $r2;

        $r10 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.content.Context getApplicationContext()>();

        staticinvoke <com.ichi2.compat.CompatHelper: void removeHiddenPreferences(android.content.Context)>($r10);

        $z0 = staticinvoke <com.ichi2.compat.CompatHelper: boolean isHoneycomb()>();

        if $z0 == 0 goto label3;

        virtualinvoke r3.<android.preference.PreferenceCategory: boolean removePreference(android.preference.Preference)>(r7);

     label3:
        $i0 = staticinvoke <com.ichi2.compat.CompatHelper: int getSdkVersion()>();

        if $i0 < 13 goto label4;

        virtualinvoke r3.<android.preference.PreferenceCategory: boolean removePreference(android.preference.Preference)>(r9);

     label4:
        $i0 = staticinvoke <com.ichi2.compat.CompatHelper: int getSdkVersion()>();

        if $i0 < 15 goto label6;

        virtualinvoke r3.<android.preference.PreferenceCategory: boolean removePreference(android.preference.Preference)>(r4);

        virtualinvoke r3.<android.preference.PreferenceCategory: boolean removePreference(android.preference.Preference)>(r6);

     label5:
        $i0 = staticinvoke <com.ichi2.compat.CompatHelper: int getSdkVersion()>();

        if $i0 < 16 goto label7;

        virtualinvoke r3.<android.preference.PreferenceCategory: boolean removePreference(android.preference.Preference)>(r8);

        return;

     label6:
        virtualinvoke r3.<android.preference.PreferenceCategory: boolean removePreference(android.preference.Preference)>(r5);

        goto label5;

     label7:
        return;
    }
    private java.lang.String replaceString(java.lang.String, java.lang.String)
    {
        com.ichi2.anki.Preferences r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.ichi2.anki.Preferences;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("XXX");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("XXX", $r1);

     label1:
        return $r2;
    }
    private java.lang.String replaceStringIfNumeric(java.lang.String, java.lang.String)
    {
        com.ichi2.anki.Preferences r0;
        java.lang.String $r1, r3;
        java.lang.NumberFormatException r2;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

     label1:
        staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r3);

        $r1 = specialinvoke r0.<com.ichi2.anki.Preferences: java.lang.String replaceString(java.lang.String,java.lang.String)>($r1, r3);

     label2:
        return $r1;

     label3:
        r2 := @caughtexception;

        return r3;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
    private void updatePreference(android.content.SharedPreferences, java.lang.String, com.ichi2.anki.PreferenceContext)
    {
        com.ichi2.anki.Preferences r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2;
        com.ichi2.anki.PreferenceContext $r3;
        java.sql.Timestamp r4;
        android.content.ComponentName r5;
        android.preference.PreferenceScreen $r6;
        android.preference.Preference $r7, $r8;
        byte $b0;
        int $i1;
        boolean $z0;
        android.preference.CheckBoxPreference r9, $r10;
        android.view.WindowManager$BadTokenException r11;
        java.lang.Object[] $r12;
        java.lang.NumberFormatException r13;
        java.lang.RuntimeException $r14;
        android.content.Context $r15;
        com.ichi2.libanki.hooks.Hooks $r16;
        org.json.JSONException r17;
        com.ichi2.libanki.Collection $r18;
        org.json.JSONObject $r19;
        android.preference.ListPreference $r20;
        com.ichi2.preferences.NumberRangePreference $r21;
        com.ichi2.ui.SeekBarPreference $r22;
        long $l2;
        java.util.Calendar $r23;
        com.ichi2.anki.AnkiDroidApp $r24;
        android.content.SharedPreferences$Editor $r25;
        android.content.pm.PackageManager $r26;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: android.content.SharedPreferences;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.ichi2.anki.PreferenceContext;

     label001:
        $r6 = interfaceinvoke $r3.<com.ichi2.anki.PreferenceContext: android.preference.PreferenceScreen getPreferenceScreen()>();

        $r7 = virtualinvoke $r6.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>($r2);

     label002:
        $b0 = -1;

     label003:
        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label004:
        lookupswitch($i1)
        {
            case -1914873707: goto label032;
            case -1853049782: goto label018;
            case -1613589672: goto label010;
            case -1264922162: goto label020;
            case -730091697: goto label030;
            case -711826607: goto label026;
            case -599404749: goto label022;
            case -494298638: goto label028;
            case 18792686: goto label024;
            case 511687696: goto label038;
            case 694052706: goto label016;
            case 850209919: goto label008;
            case 884244289: goto label014;
            case 1448288297: goto label012;
            case 1476064018: goto label036;
            case 1505861879: goto label034;
            default: goto label005;
        };

     label005:
        lookupswitch($b0)
        {
            case 0: goto label040;
            case 1: goto label045;
            case 2: goto label049;
            case 3: goto label057;
            case 4: goto label064;
            case 5: goto label071;
            case 6: goto label075;
            case 7: goto label079;
            case 8: goto label083;
            case 9: goto label089;
            case 10: goto label095;
            case 11: goto label099;
            case 12: goto label108;
            case 13: goto label112;
            case 14: goto label114;
            case 15: goto label123;
            default: goto label006;
        };

     label006:
        specialinvoke r0.<com.ichi2.anki.Preferences: void updateSummary(android.preference.Preference)>($r7);

     label007:
        return;

     label008:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("timeoutAnswer");

     label009:
        if $z0 == 0 goto label005;

        $b0 = 0;

        goto label005;

     label010:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("language");

     label011:
        if $z0 == 0 goto label005;

        $b0 = 1;

        goto label005;

     label012:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("convertFenText");

     label013:
        if $z0 == 0 goto label005;

        $b0 = 2;

        goto label005;

     label014:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("fixHebrewText");

     label015:
        if $z0 == 0 goto label005;

        $b0 = 3;

        goto label005;

     label016:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("advanced_statistics_enabled");

     label017:
        if $z0 == 0 goto label005;

        $b0 = 4;

        goto label005;

     label018:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("showProgress");

     label019:
        if $z0 == 0 goto label005;

        $b0 = 5;

        goto label005;

     label020:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("showEstimates");

     label021:
        if $z0 == 0 goto label005;

        $b0 = 6;

        goto label005;

     label022:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("newSpread");

     label023:
        if $z0 == 0 goto label005;

        $b0 = 7;

        goto label005;

     label024:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("timeLimit");

     label025:
        if $z0 == 0 goto label005;

        $b0 = 8;

        goto label005;

     label026:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("learnCutoff");

     label027:
        if $z0 == 0 goto label005;

        $b0 = 9;

        goto label005;

     label028:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("useCurrent");

     label029:
        if $z0 == 0 goto label005;

        $b0 = 10;

        goto label005;

     label030:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("dayOffset");

     label031:
        if $z0 == 0 goto label005;

        $b0 = 11;

        goto label005;

     label032:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("minimumCardsDueForNotification");

     label033:
        if $z0 == 0 goto label005;

        $b0 = 12;

        goto label005;

     label034:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("reportErrorMode");

     label035:
        if $z0 == 0 goto label005;

        $b0 = 13;

        goto label005;

     label036:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("syncAccount");

     label037:
        if $z0 == 0 goto label005;

        $b0 = 14;

        goto label005;

     label038:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("providerEnabled");

     label039:
        if $z0 == 0 goto label005;

        $b0 = 15;

        goto label005;

     label040:
        $r8 = virtualinvoke $r6.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("keepScreenOn");

     label041:
        r9 = (android.preference.CheckBoxPreference) $r8;

        $r10 = (android.preference.CheckBoxPreference) $r7;

     label042:
        $z0 = virtualinvoke $r10.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke r9.<android.preference.CheckBoxPreference: void setChecked(boolean)>($z0);

     label043:
        goto label006;

     label044:
        r11 := @caughtexception;

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r11, "Preferences: BadTokenException on showDialog", $r12);

        return;

     label045:
        specialinvoke r0.<com.ichi2.anki.Preferences: void closePreferences()>();

     label046:
        goto label006;

     label047:
        r13 := @caughtexception;

     label048:
        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>()>();

        throw $r14;

     label049:
        r9 = (android.preference.CheckBoxPreference) $r7;

     label050:
        $z0 = virtualinvoke r9.<android.preference.CheckBoxPreference: boolean isChecked()>();

     label051:
        if $z0 == 0 goto label055;

     label052:
        $r15 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.content.Context getApplicationContext()>();

        $r16 = staticinvoke <com.ichi2.libanki.hooks.Hooks: com.ichi2.libanki.hooks.Hooks getInstance(android.content.Context)>($r15);

        staticinvoke <com.ichi2.libanki.hooks.ChessFilter: void install(com.ichi2.libanki.hooks.Hooks)>($r16);

     label053:
        goto label006;

     label054:
        r17 := @caughtexception;

        goto label048;

     label055:
        $r15 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.content.Context getApplicationContext()>();

        $r16 = staticinvoke <com.ichi2.libanki.hooks.Hooks: com.ichi2.libanki.hooks.Hooks getInstance(android.content.Context)>($r15);

        staticinvoke <com.ichi2.libanki.hooks.ChessFilter: void uninstall(com.ichi2.libanki.hooks.Hooks)>($r16);

     label056:
        goto label006;

     label057:
        r9 = (android.preference.CheckBoxPreference) $r7;

     label058:
        $z0 = virtualinvoke r9.<android.preference.CheckBoxPreference: boolean isChecked()>();

     label059:
        if $z0 == 0 goto label062;

     label060:
        $r15 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.content.Context getApplicationContext()>();

        $r16 = staticinvoke <com.ichi2.libanki.hooks.Hooks: com.ichi2.libanki.hooks.Hooks getInstance(android.content.Context)>($r15);

        staticinvoke <com.ichi2.libanki.hooks.HebrewFixFilter: void install(com.ichi2.libanki.hooks.Hooks)>($r16);

        virtualinvoke r0.<com.ichi2.anki.Preferences: void showDialog(int)>(3);

     label061:
        goto label006;

     label062:
        $r15 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.content.Context getApplicationContext()>();

        $r16 = staticinvoke <com.ichi2.libanki.hooks.Hooks: com.ichi2.libanki.hooks.Hooks getInstance(android.content.Context)>($r15);

        staticinvoke <com.ichi2.libanki.hooks.HebrewFixFilter: void uninstall(com.ichi2.libanki.hooks.Hooks)>($r16);

     label063:
        goto label006;

     label064:
        r9 = (android.preference.CheckBoxPreference) $r7;

     label065:
        $z0 = virtualinvoke r9.<android.preference.CheckBoxPreference: boolean isChecked()>();

     label066:
        if $z0 == 0 goto label069;

     label067:
        $r15 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.content.Context getApplicationContext()>();

        $r16 = staticinvoke <com.ichi2.libanki.hooks.Hooks: com.ichi2.libanki.hooks.Hooks getInstance(android.content.Context)>($r15);

        staticinvoke <com.ichi2.libanki.hooks.AdvancedStatistics: void install(com.ichi2.libanki.hooks.Hooks)>($r16);

     label068:
        goto label006;

     label069:
        $r15 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.content.Context getApplicationContext()>();

        $r16 = staticinvoke <com.ichi2.libanki.hooks.Hooks: com.ichi2.libanki.hooks.Hooks getInstance(android.content.Context)>($r15);

        staticinvoke <com.ichi2.libanki.hooks.AdvancedStatistics: void uninstall(com.ichi2.libanki.hooks.Hooks)>($r16);

     label070:
        goto label006;

     label071:
        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        $r19 = virtualinvoke $r18.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

     label072:
        r9 = (android.preference.CheckBoxPreference) $r7;

     label073:
        $z0 = virtualinvoke r9.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r19.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("dueCounts", $z0);

        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        virtualinvoke $r18.<com.ichi2.libanki.Collection: void setMod()>();

     label074:
        goto label006;

     label075:
        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        $r19 = virtualinvoke $r18.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

     label076:
        r9 = (android.preference.CheckBoxPreference) $r7;

     label077:
        $z0 = virtualinvoke r9.<android.preference.CheckBoxPreference: boolean isChecked()>();

        virtualinvoke $r19.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("estTimes", $z0);

        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        virtualinvoke $r18.<com.ichi2.libanki.Collection: void setMod()>();

     label078:
        goto label006;

     label079:
        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        $r19 = virtualinvoke $r18.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

     label080:
        $r20 = (android.preference.ListPreference) $r7;

     label081:
        $r2 = virtualinvoke $r20.<android.preference.ListPreference: java.lang.String getValue()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        virtualinvoke $r19.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("newSpread", $i1);

        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        virtualinvoke $r18.<com.ichi2.libanki.Collection: void setMod()>();

     label082:
        goto label006;

     label083:
        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        $r19 = virtualinvoke $r18.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

     label084:
        $r21 = (com.ichi2.preferences.NumberRangePreference) $r7;

     label085:
        $i1 = virtualinvoke $r21.<com.ichi2.preferences.NumberRangePreference: int getValue()>();

     label086:
        $i1 = $i1 * 60;

     label087:
        virtualinvoke $r19.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("timeLim", $i1);

        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        virtualinvoke $r18.<com.ichi2.libanki.Collection: void setMod()>();

     label088:
        goto label006;

     label089:
        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        $r19 = virtualinvoke $r18.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

     label090:
        $r21 = (com.ichi2.preferences.NumberRangePreference) $r7;

     label091:
        $i1 = virtualinvoke $r21.<com.ichi2.preferences.NumberRangePreference: int getValue()>();

     label092:
        $i1 = $i1 * 60;

     label093:
        virtualinvoke $r19.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("collapseTime", $i1);

        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        virtualinvoke $r18.<com.ichi2.libanki.Collection: void setMod()>();

     label094:
        goto label006;

     label095:
        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        $r19 = virtualinvoke $r18.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

     label096:
        $r20 = (android.preference.ListPreference) $r7;

     label097:
        $r2 = virtualinvoke $r20.<android.preference.ListPreference: java.lang.String getValue()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("0");

        virtualinvoke $r19.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("addToCur", $z0);

        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        virtualinvoke $r18.<com.ichi2.libanki.Collection: void setMod()>();

     label098:
        goto label006;

     label099:
        $r22 = (com.ichi2.ui.SeekBarPreference) $r7;

     label100:
        $i1 = virtualinvoke $r22.<com.ichi2.ui.SeekBarPreference: int getValue()>();

     label101:
        r4 = new java.sql.Timestamp;

     label102:
        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        $l2 = virtualinvoke $r18.<com.ichi2.libanki.Collection: long getCrt()>();

     label103:
        $l2 = $l2 * 1000L;

     label104:
        specialinvoke r4.<java.sql.Timestamp: void <init>(long)>($l2);

        $r23 = staticinvoke <java.util.GregorianCalendar: java.util.Calendar getInstance()>();

        $l2 = virtualinvoke r4.<java.sql.Timestamp: long getTime()>();

        virtualinvoke $r23.<java.util.Calendar: void setTimeInMillis(long)>($l2);

        virtualinvoke $r23.<java.util.Calendar: void set(int,int)>(11, $i1);

        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        $l2 = virtualinvoke $r23.<java.util.Calendar: long getTimeInMillis()>();

     label105:
        $l2 = $l2 / 1000L;

     label106:
        virtualinvoke $r18.<com.ichi2.libanki.Collection: void setCrt(long)>($l2);

        $r18 = specialinvoke r0.<com.ichi2.anki.Preferences: com.ichi2.libanki.Collection getCol()>();

        virtualinvoke $r18.<com.ichi2.libanki.Collection: void setMod()>();

     label107:
        goto label006;

     label108:
        $r8 = virtualinvoke $r6.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("minimumCardsDueForNotification");

     label109:
        $r20 = (android.preference.ListPreference) $r8;

        if $r20 == null goto label006;

     label110:
        virtualinvoke r0.<com.ichi2.anki.Preferences: void updateNotificationPreference(android.preference.ListPreference)>($r20);

     label111:
        goto label006;

     label112:
        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("reportErrorMode", "");

        $r24 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

        virtualinvoke $r24.<com.ichi2.anki.AnkiDroidApp: void setAcraReportingMode(java.lang.String)>($r2);

        $r1 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>(r0);

        $r25 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r25 = interfaceinvoke $r25.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("sentExceptionReports");

        interfaceinvoke $r25.<android.content.SharedPreferences$Editor: void apply()>();

     label113:
        goto label006;

     label114:
        $r15 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.content.Context getBaseContext()>();

        $r1 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r15);

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("username", "");

        $r8 = virtualinvoke $r6.<android.preference.PreferenceScreen: android.preference.Preference findPreference(java.lang.CharSequence)>("syncAccount");

     label115:
        if $r8 == null goto label006;

     label116:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

     label117:
        if $z0 == 0 goto label120;

     label118:
        virtualinvoke $r8.<android.preference.Preference: void setSummary(int)>(2131231389);

     label119:
        goto label006;

     label120:
        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = $r2;

     label121:
        $r2 = virtualinvoke r0.<com.ichi2.anki.Preferences: java.lang.String getString(int,java.lang.Object[])>(2131231388, $r12);

        virtualinvoke $r8.<android.preference.Preference: void setSummary(java.lang.CharSequence)>($r2);

     label122:
        goto label006;

     label123:
        r5 = new android.content.ComponentName;

     label124:
        specialinvoke r5.<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>(r0, "com.ichi2.anki.provider.CardContentProvider");

        $r26 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.content.pm.PackageManager getPackageManager()>();

     label125:
        r9 = (android.preference.CheckBoxPreference) $r7;

     label126:
        $z0 = virtualinvoke r9.<android.preference.CheckBoxPreference: boolean isChecked()>();

     label127:
        if $z0 == 0 goto label131;

        $b0 = 1;

        $r12 = newarray (java.lang.Object)[0];

     label128:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("AnkiDroid ContentProvider enabled by user", $r12);

     label129:
        virtualinvoke $r26.<android.content.pm.PackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>(r5, $b0, 1);

     label130:
        goto label006;

     label131:
        $b0 = 2;

        $r12 = newarray (java.lang.Object)[0];

     label132:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("AnkiDroid ContentProvider disabled by user", $r12);

     label133:
        goto label129;

        catch android.view.WindowManager$BadTokenException from label001 to label002 with label044;
        catch android.view.WindowManager$BadTokenException from label003 to label004 with label044;
        catch android.view.WindowManager$BadTokenException from label006 to label007 with label044;
        catch android.view.WindowManager$BadTokenException from label008 to label009 with label044;
        catch android.view.WindowManager$BadTokenException from label010 to label011 with label044;
        catch android.view.WindowManager$BadTokenException from label012 to label013 with label044;
        catch android.view.WindowManager$BadTokenException from label014 to label015 with label044;
        catch android.view.WindowManager$BadTokenException from label016 to label017 with label044;
        catch android.view.WindowManager$BadTokenException from label018 to label019 with label044;
        catch android.view.WindowManager$BadTokenException from label020 to label021 with label044;
        catch android.view.WindowManager$BadTokenException from label022 to label023 with label044;
        catch android.view.WindowManager$BadTokenException from label024 to label025 with label044;
        catch android.view.WindowManager$BadTokenException from label026 to label027 with label044;
        catch android.view.WindowManager$BadTokenException from label028 to label029 with label044;
        catch android.view.WindowManager$BadTokenException from label030 to label031 with label044;
        catch android.view.WindowManager$BadTokenException from label032 to label033 with label044;
        catch android.view.WindowManager$BadTokenException from label034 to label035 with label044;
        catch android.view.WindowManager$BadTokenException from label036 to label037 with label044;
        catch android.view.WindowManager$BadTokenException from label038 to label039 with label044;
        catch android.view.WindowManager$BadTokenException from label040 to label041 with label044;
        catch android.view.WindowManager$BadTokenException from label042 to label043 with label044;
        catch java.lang.NumberFormatException from label001 to label002 with label047;
        catch java.lang.NumberFormatException from label003 to label004 with label047;
        catch java.lang.NumberFormatException from label006 to label007 with label047;
        catch java.lang.NumberFormatException from label008 to label009 with label047;
        catch java.lang.NumberFormatException from label010 to label011 with label047;
        catch java.lang.NumberFormatException from label012 to label013 with label047;
        catch java.lang.NumberFormatException from label014 to label015 with label047;
        catch java.lang.NumberFormatException from label016 to label017 with label047;
        catch java.lang.NumberFormatException from label018 to label019 with label047;
        catch java.lang.NumberFormatException from label020 to label021 with label047;
        catch java.lang.NumberFormatException from label022 to label023 with label047;
        catch java.lang.NumberFormatException from label024 to label025 with label047;
        catch java.lang.NumberFormatException from label026 to label027 with label047;
        catch java.lang.NumberFormatException from label028 to label029 with label047;
        catch java.lang.NumberFormatException from label030 to label031 with label047;
        catch java.lang.NumberFormatException from label032 to label033 with label047;
        catch java.lang.NumberFormatException from label034 to label035 with label047;
        catch java.lang.NumberFormatException from label036 to label037 with label047;
        catch java.lang.NumberFormatException from label038 to label039 with label047;
        catch java.lang.NumberFormatException from label040 to label041 with label047;
        catch java.lang.NumberFormatException from label042 to label043 with label047;
        catch org.json.JSONException from label001 to label002 with label054;
        catch org.json.JSONException from label003 to label004 with label054;
        catch org.json.JSONException from label006 to label007 with label054;
        catch org.json.JSONException from label008 to label009 with label054;
        catch org.json.JSONException from label010 to label011 with label054;
        catch org.json.JSONException from label012 to label013 with label054;
        catch org.json.JSONException from label014 to label015 with label054;
        catch org.json.JSONException from label016 to label017 with label054;
        catch org.json.JSONException from label018 to label019 with label054;
        catch org.json.JSONException from label020 to label021 with label054;
        catch org.json.JSONException from label022 to label023 with label054;
        catch org.json.JSONException from label024 to label025 with label054;
        catch org.json.JSONException from label026 to label027 with label054;
        catch org.json.JSONException from label028 to label029 with label054;
        catch org.json.JSONException from label030 to label031 with label054;
        catch org.json.JSONException from label032 to label033 with label054;
        catch org.json.JSONException from label034 to label035 with label054;
        catch org.json.JSONException from label036 to label037 with label054;
        catch org.json.JSONException from label038 to label039 with label054;
        catch org.json.JSONException from label040 to label041 with label054;
        catch org.json.JSONException from label042 to label043 with label054;
        catch android.view.WindowManager$BadTokenException from label045 to label046 with label044;
        catch java.lang.NumberFormatException from label045 to label046 with label047;
        catch org.json.JSONException from label045 to label046 with label054;
        catch android.view.WindowManager$BadTokenException from label050 to label051 with label044;
        catch android.view.WindowManager$BadTokenException from label052 to label053 with label044;
        catch android.view.WindowManager$BadTokenException from label055 to label056 with label044;
        catch android.view.WindowManager$BadTokenException from label058 to label059 with label044;
        catch android.view.WindowManager$BadTokenException from label060 to label061 with label044;
        catch android.view.WindowManager$BadTokenException from label062 to label063 with label044;
        catch android.view.WindowManager$BadTokenException from label065 to label066 with label044;
        catch android.view.WindowManager$BadTokenException from label067 to label068 with label044;
        catch android.view.WindowManager$BadTokenException from label069 to label070 with label044;
        catch android.view.WindowManager$BadTokenException from label071 to label072 with label044;
        catch android.view.WindowManager$BadTokenException from label073 to label074 with label044;
        catch android.view.WindowManager$BadTokenException from label075 to label076 with label044;
        catch android.view.WindowManager$BadTokenException from label077 to label078 with label044;
        catch android.view.WindowManager$BadTokenException from label079 to label080 with label044;
        catch android.view.WindowManager$BadTokenException from label081 to label082 with label044;
        catch android.view.WindowManager$BadTokenException from label083 to label084 with label044;
        catch android.view.WindowManager$BadTokenException from label085 to label086 with label044;
        catch android.view.WindowManager$BadTokenException from label087 to label088 with label044;
        catch android.view.WindowManager$BadTokenException from label089 to label090 with label044;
        catch android.view.WindowManager$BadTokenException from label091 to label092 with label044;
        catch android.view.WindowManager$BadTokenException from label093 to label094 with label044;
        catch android.view.WindowManager$BadTokenException from label095 to label096 with label044;
        catch android.view.WindowManager$BadTokenException from label097 to label098 with label044;
        catch android.view.WindowManager$BadTokenException from label100 to label101 with label044;
        catch android.view.WindowManager$BadTokenException from label102 to label103 with label044;
        catch android.view.WindowManager$BadTokenException from label104 to label105 with label044;
        catch android.view.WindowManager$BadTokenException from label106 to label107 with label044;
        catch android.view.WindowManager$BadTokenException from label108 to label109 with label044;
        catch android.view.WindowManager$BadTokenException from label110 to label111 with label044;
        catch android.view.WindowManager$BadTokenException from label112 to label113 with label044;
        catch android.view.WindowManager$BadTokenException from label114 to label115 with label044;
        catch android.view.WindowManager$BadTokenException from label116 to label117 with label044;
        catch android.view.WindowManager$BadTokenException from label118 to label119 with label044;
        catch android.view.WindowManager$BadTokenException from label121 to label122 with label044;
        catch android.view.WindowManager$BadTokenException from label124 to label125 with label044;
        catch android.view.WindowManager$BadTokenException from label126 to label127 with label044;
        catch android.view.WindowManager$BadTokenException from label128 to label130 with label044;
        catch android.view.WindowManager$BadTokenException from label132 to label133 with label044;
        catch java.lang.NumberFormatException from label050 to label051 with label047;
        catch java.lang.NumberFormatException from label052 to label053 with label047;
        catch java.lang.NumberFormatException from label055 to label056 with label047;
        catch java.lang.NumberFormatException from label058 to label059 with label047;
        catch java.lang.NumberFormatException from label060 to label061 with label047;
        catch java.lang.NumberFormatException from label062 to label063 with label047;
        catch java.lang.NumberFormatException from label065 to label066 with label047;
        catch java.lang.NumberFormatException from label067 to label068 with label047;
        catch java.lang.NumberFormatException from label069 to label070 with label047;
        catch java.lang.NumberFormatException from label071 to label072 with label047;
        catch java.lang.NumberFormatException from label073 to label074 with label047;
        catch java.lang.NumberFormatException from label075 to label076 with label047;
        catch java.lang.NumberFormatException from label077 to label078 with label047;
        catch java.lang.NumberFormatException from label079 to label080 with label047;
        catch java.lang.NumberFormatException from label081 to label082 with label047;
        catch java.lang.NumberFormatException from label083 to label084 with label047;
        catch java.lang.NumberFormatException from label085 to label086 with label047;
        catch java.lang.NumberFormatException from label087 to label088 with label047;
        catch java.lang.NumberFormatException from label089 to label090 with label047;
        catch java.lang.NumberFormatException from label091 to label092 with label047;
        catch java.lang.NumberFormatException from label093 to label094 with label047;
        catch java.lang.NumberFormatException from label095 to label096 with label047;
        catch java.lang.NumberFormatException from label097 to label098 with label047;
        catch java.lang.NumberFormatException from label100 to label101 with label047;
        catch java.lang.NumberFormatException from label102 to label103 with label047;
        catch java.lang.NumberFormatException from label104 to label105 with label047;
        catch java.lang.NumberFormatException from label106 to label107 with label047;
        catch java.lang.NumberFormatException from label108 to label109 with label047;
        catch java.lang.NumberFormatException from label110 to label111 with label047;
        catch java.lang.NumberFormatException from label112 to label113 with label047;
        catch java.lang.NumberFormatException from label114 to label115 with label047;
        catch java.lang.NumberFormatException from label116 to label117 with label047;
        catch java.lang.NumberFormatException from label118 to label119 with label047;
        catch java.lang.NumberFormatException from label121 to label122 with label047;
        catch java.lang.NumberFormatException from label124 to label125 with label047;
        catch java.lang.NumberFormatException from label126 to label127 with label047;
        catch java.lang.NumberFormatException from label128 to label130 with label047;
        catch java.lang.NumberFormatException from label132 to label133 with label047;
        catch org.json.JSONException from label050 to label051 with label054;
        catch org.json.JSONException from label052 to label053 with label054;
        catch org.json.JSONException from label055 to label056 with label054;
        catch org.json.JSONException from label058 to label059 with label054;
        catch org.json.JSONException from label060 to label061 with label054;
        catch org.json.JSONException from label062 to label063 with label054;
        catch org.json.JSONException from label065 to label066 with label054;
        catch org.json.JSONException from label067 to label068 with label054;
        catch org.json.JSONException from label069 to label070 with label054;
        catch org.json.JSONException from label071 to label072 with label054;
        catch org.json.JSONException from label073 to label074 with label054;
        catch org.json.JSONException from label075 to label076 with label054;
        catch org.json.JSONException from label077 to label078 with label054;
        catch org.json.JSONException from label079 to label080 with label054;
        catch org.json.JSONException from label081 to label082 with label054;
        catch org.json.JSONException from label083 to label084 with label054;
        catch org.json.JSONException from label085 to label086 with label054;
        catch org.json.JSONException from label087 to label088 with label054;
        catch org.json.JSONException from label089 to label090 with label054;
        catch org.json.JSONException from label091 to label092 with label054;
        catch org.json.JSONException from label093 to label094 with label054;
        catch org.json.JSONException from label095 to label096 with label054;
        catch org.json.JSONException from label097 to label098 with label054;
        catch org.json.JSONException from label100 to label101 with label054;
        catch org.json.JSONException from label102 to label103 with label054;
        catch org.json.JSONException from label104 to label105 with label054;
        catch org.json.JSONException from label106 to label107 with label054;
        catch org.json.JSONException from label108 to label109 with label054;
        catch org.json.JSONException from label110 to label111 with label054;
        catch org.json.JSONException from label112 to label113 with label054;
        catch org.json.JSONException from label114 to label115 with label054;
        catch org.json.JSONException from label116 to label117 with label054;
        catch org.json.JSONException from label118 to label119 with label054;
        catch org.json.JSONException from label121 to label122 with label054;
        catch org.json.JSONException from label124 to label125 with label054;
        catch org.json.JSONException from label126 to label127 with label054;
        catch org.json.JSONException from label128 to label130 with label054;
        catch org.json.JSONException from label132 to label133 with label054;
    }
    private void updateSummary(android.preference.Preference)
    {
        com.ichi2.anki.Preferences r0;
        android.preference.Preference $r1;
        java.lang.NullPointerException r2;
        java.lang.String $r3, $r8, $r15;
        boolean $z0;
        java.lang.StringBuilder $r4;
        android.content.res.Resources $r5;
        com.ichi2.preferences.NumberRangePreference $r6;
        int $i0;
        java.util.HashMap $r7;
        java.lang.Object $r9;
        android.content.SharedPreferences $r10;
        com.ichi2.ui.SeekBarPreference $r11;
        android.preference.ListPreference $r12;
        java.lang.CharSequence $r13;
        android.preference.EditTextPreference $r14;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: android.preference.Preference;

        if $r1 == null goto label22;

        $r3 = virtualinvoke $r1.<android.preference.Preference: java.lang.String getKey()>();

        if $r3 != null goto label01;

        return;

     label01:
        $r3 = virtualinvoke $r1.<android.preference.Preference: java.lang.String getKey()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("about_dialog_preference");

        if $z0 == 0 goto label05;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(2131230748);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = staticinvoke <com.ichi2.utils.VersionUtils: java.lang.String getPkgVersionName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>($r3);

     label02:
        $z0 = $r1 instanceof com.ichi2.preferences.NumberRangePreference;

        if $z0 == 0 goto label09;

        $r6 = (com.ichi2.preferences.NumberRangePreference) $r1;

     label03:
        $i0 = virtualinvoke $r6.<com.ichi2.preferences.NumberRangePreference: int getValue()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

     label04:
        $r7 = r0.<com.ichi2.anki.Preferences: java.util.HashMap mOriginalSumarries>;

        $r8 = virtualinvoke $r1.<android.preference.Preference: java.lang.String getKey()>();

        $r9 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        $r8 = (java.lang.String) $r9;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label19;

        virtualinvoke $r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>($r3);

        return;

     label05:
        $r3 = virtualinvoke $r1.<android.preference.Preference: java.lang.String getKey()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("custom_sync_server_link");

        if $z0 == 0 goto label07;

        $r10 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>(r0);

        $z0 = interfaceinvoke $r10.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("useCustomSyncServer", 0);

        if $z0 != 0 goto label06;

        virtualinvoke $r1.<android.preference.Preference: void setSummary(int)>(2131230983);

        goto label02;

     label06:
        $r10 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>(r0);

        $r3 = interfaceinvoke $r10.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("syncBaseUrl", "");

        virtualinvoke $r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>($r3);

        goto label02;

     label07:
        $r3 = virtualinvoke $r1.<android.preference.Preference: java.lang.String getKey()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("advanced_statistics_link");

        if $z0 == 0 goto label02;

        $r10 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>(r0);

        $z0 = interfaceinvoke $r10.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("advanced_statistics_enabled", 0);

        if $z0 != 0 goto label08;

        virtualinvoke $r1.<android.preference.Preference: void setSummary(int)>(2131230983);

        goto label02;

     label08:
        virtualinvoke $r1.<android.preference.Preference: void setSummary(int)>(2131231010);

        goto label02;

     label09:
        $z0 = $r1 instanceof com.ichi2.ui.SeekBarPreference;

        if $z0 == 0 goto label12;

        $r11 = (com.ichi2.ui.SeekBarPreference) $r1;

     label10:
        $i0 = virtualinvoke $r11.<com.ichi2.ui.SeekBarPreference: int getValue()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

     label11:
        goto label04;

     label12:
        $z0 = $r1 instanceof android.preference.ListPreference;

        if $z0 == 0 goto label15;

        $r12 = (android.preference.ListPreference) $r1;

     label13:
        $r13 = virtualinvoke $r12.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        $r3 = interfaceinvoke $r13.<java.lang.CharSequence: java.lang.String toString()>();

     label14:
        goto label04;

     label15:
        $z0 = $r1 instanceof android.preference.EditTextPreference;

        if $z0 == 0 goto label22;

        $r14 = (android.preference.EditTextPreference) $r1;

     label16:
        $r3 = virtualinvoke $r14.<android.preference.EditTextPreference: java.lang.String getText()>();

     label17:
        goto label04;

     label18:
        r2 := @caughtexception;

        $r3 = "";

        goto label04;

     label19:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label20;

        virtualinvoke $r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>($r8);

        return;

     label20:
        $r15 = virtualinvoke $r1.<android.preference.Preference: java.lang.String getKey()>();

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("minimumCardsDueForNotification");

        if $z0 == 0 goto label21;

        $r3 = specialinvoke r0.<com.ichi2.anki.Preferences: java.lang.String replaceStringIfNumeric(java.lang.String,java.lang.String)>($r8, $r3);

        virtualinvoke $r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>($r3);

        return;

     label21:
        $r3 = specialinvoke r0.<com.ichi2.anki.Preferences: java.lang.String replaceString(java.lang.String,java.lang.String)>($r8, $r3);

        virtualinvoke $r1.<android.preference.Preference: void setSummary(java.lang.CharSequence)>($r3);

     label22:
        return;

        catch java.lang.NullPointerException from label03 to label04 with label18;
        catch java.lang.NullPointerException from label10 to label11 with label18;
        catch java.lang.NullPointerException from label13 to label14 with label18;
        catch java.lang.NullPointerException from label16 to label17 with label18;
    }
    protected boolean isValidFragment(java.lang.String)
    {
        com.ichi2.anki.Preferences r0;
        java.lang.String $r1, $r3;
        java.lang.Class $r2;
        boolean $z0;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: java.lang.String;

        $r2 = class "Lcom/ichi2/anki/Preferences$SettingsFragment;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }
    public void onBuildHeaders(java.util.List)
    {
        com.ichi2.anki.Preferences r0;
        java.util.List r1;

        r0 := @this: com.ichi2.anki.Preferences;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<com.ichi2.anki.Preferences: void loadHeadersFromResource(int,java.util.List)>(2131165187, r1);

        return;
    }
    protected void onCreate(android.os.Bundle)
    {
        com.ichi2.anki.Preferences r0;
        android.os.Bundle $r1;
        android.content.Intent $r2;
        java.lang.String $r3;
        boolean $z0;
        android.preference.PreferenceScreen $r4;
        android.support.v7.app.ActionBar $r5;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: android.os.Bundle;

        staticinvoke <com.ichi2.themes.Themes: void setThemeLegacy(android.content.Context)>(r0);

        specialinvoke r0.<com.ichi2.ui.AppCompatPreferenceActivity: void onCreate(android.os.Bundle)>($r1);

        $r2 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.content.Intent getIntent()>();

        $r3 = virtualinvoke $r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = staticinvoke <com.ichi2.compat.CompatHelper: boolean isHoneycomb()>();

        if $z0 != 0 goto label2;

        if $r3 != null goto label3;

        virtualinvoke r0.<com.ichi2.anki.Preferences: void addPreferencesFromResource(int)>(2131165188);

     label1:
        $r4 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.preference.PreferenceScreen getPreferenceScreen()>();

        specialinvoke r0.<com.ichi2.anki.Preferences: void initAllPreferences(android.preference.PreferenceScreen)>($r4);

     label2:
        $r5 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.support.v7.app.ActionBar getSupportActionBar()>();

        virtualinvoke $r5.<android.support.v7.app.ActionBar: void setHomeButtonEnabled(boolean)>(1);

        $r5 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.support.v7.app.ActionBar getSupportActionBar()>();

        virtualinvoke $r5.<android.support.v7.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)>(1);

        return;

     label3:
        specialinvoke r0.<com.ichi2.anki.Preferences: void initSubscreen(java.lang.String,com.ichi2.anki.PreferenceContext)>($r3, r0);

        goto label1;
    }
    protected volatile android.app.Dialog onCreateDialog(int)
    {
        com.ichi2.anki.Preferences r0;
        int $i0;
        com.afollestad.materialdialogs.MaterialDialog $r1;

        r0 := @this: com.ichi2.anki.Preferences;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.ichi2.anki.Preferences: com.afollestad.materialdialogs.MaterialDialog onCreateDialog(int)>($i0);

        return $r1;
    }
    protected com.afollestad.materialdialogs.MaterialDialog onCreateDialog(int)
    {
        com.ichi2.anki.Preferences r0;
        int $i0;
        com.afollestad.materialdialogs.MaterialDialog$Builder r1;
        android.content.res.Resources $r2;
        com.afollestad.materialdialogs.MaterialDialog $r3;
        java.lang.String $r4;
        java.lang.Object[] $r5;
        com.ichi2.anki.Preferences$1 $r6;

        r0 := @this: com.ichi2.anki.Preferences;

        $i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.content.res.Resources getResources()>();

        r1 = new com.afollestad.materialdialogs.MaterialDialog$Builder;

        specialinvoke r1.<com.afollestad.materialdialogs.MaterialDialog$Builder: void <init>(android.content.Context)>(r0);

        lookupswitch($i0)
        {
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = virtualinvoke r1.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog show()>();

        return $r3;

     label2:
        $r4 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(2131231043);

        virtualinvoke r1.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder title(java.lang.CharSequence)>($r4);

        $r5 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <com.ichi2.anki.CollectionHelper: java.lang.String getCurrentAnkiDroidDirectory(android.content.Context)>(r0);

        $r5[0] = $r4;

        $r4 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231042, $r5);

        virtualinvoke r1.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder content(java.lang.CharSequence)>($r4);

        $r6 = new com.ichi2.anki.Preferences$1;

        specialinvoke $r6.<com.ichi2.anki.Preferences$1: void <init>(com.ichi2.anki.Preferences)>(r0);

        virtualinvoke r1.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder callback(com.afollestad.materialdialogs.MaterialDialog$ButtonCallback)>($r6);

        $r4 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(2131231041);

        virtualinvoke r1.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveText(java.lang.CharSequence)>($r4);

        virtualinvoke r1.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder negativeText(int)>(2131230967);

        goto label1;
    }
    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.ichi2.anki.Preferences r0;
        int $i0, $i1;
        android.view.KeyEvent $r1;
        java.lang.Object[] $r2;
        boolean $z0;

        r0 := @this: com.ichi2.anki.Preferences;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        if $i0 != 4 goto label1;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i1 != 0 goto label1;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Preferences:: onBackPressed()", $r2);

        specialinvoke r0.<com.ichi2.anki.Preferences: void closePreferences()>();

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.ichi2.ui.AppCompatPreferenceActivity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;
    }
    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        com.ichi2.anki.Preferences r0;
        android.view.MenuItem $r1;
        int $i0;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: android.view.MenuItem;

        $i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 16908332: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        virtualinvoke r0.<com.ichi2.anki.Preferences: void finish()>();

        return 1;
    }
    protected void onPause()
    {
        com.ichi2.anki.Preferences r0;
        boolean $z0;
        android.preference.PreferenceScreen $r1;
        android.content.SharedPreferences $r2;

        r0 := @this: com.ichi2.anki.Preferences;

        specialinvoke r0.<com.ichi2.ui.AppCompatPreferenceActivity: void onPause()>();

        $z0 = staticinvoke <com.ichi2.compat.CompatHelper: boolean isHoneycomb()>();

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.preference.PreferenceScreen getPreferenceScreen()>();

        if $r1 == null goto label1;

        $r1 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.preference.PreferenceScreen getPreferenceScreen()>();

        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.content.SharedPreferences getSharedPreferences()>();

        interfaceinvoke $r2.<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0);

     label1:
        return;
    }
    protected void onResume()
    {
        com.ichi2.anki.Preferences r0;
        boolean $z0;
        android.preference.PreferenceScreen $r1;
        android.content.SharedPreferences $r2;

        r0 := @this: com.ichi2.anki.Preferences;

        specialinvoke r0.<com.ichi2.ui.AppCompatPreferenceActivity: void onResume()>();

        $z0 = staticinvoke <com.ichi2.compat.CompatHelper: boolean isHoneycomb()>();

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.preference.PreferenceScreen getPreferenceScreen()>();

        if $r1 == null goto label1;

        $r1 = virtualinvoke r0.<com.ichi2.anki.Preferences: android.preference.PreferenceScreen getPreferenceScreen()>();

        $r2 = virtualinvoke $r1.<android.preference.PreferenceScreen: android.content.SharedPreferences getSharedPreferences()>();

        interfaceinvoke $r2.<android.content.SharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0);

        specialinvoke r0.<com.ichi2.anki.Preferences: void updatePreference(android.content.SharedPreferences,java.lang.String,com.ichi2.anki.PreferenceContext)>($r2, "syncAccount", r0);

        specialinvoke r0.<com.ichi2.anki.Preferences: void updatePreference(android.content.SharedPreferences,java.lang.String,com.ichi2.anki.PreferenceContext)>($r2, "custom_sync_server_link", r0);

        specialinvoke r0.<com.ichi2.anki.Preferences: void updatePreference(android.content.SharedPreferences,java.lang.String,com.ichi2.anki.PreferenceContext)>($r2, "advanced_statistics_link", r0);

     label1:
        return;
    }
    public void onSharedPreferenceChanged(android.content.SharedPreferences, java.lang.String)
    {
        com.ichi2.anki.Preferences r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: android.content.SharedPreferences;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.ichi2.anki.Preferences: void updatePreference(android.content.SharedPreferences,java.lang.String,com.ichi2.anki.PreferenceContext)>($r1, $r2, r0);

        return;
    }
    public void updateNotificationPreference(android.preference.ListPreference)
    {
        com.ichi2.anki.Preferences r0;
        android.preference.ListPreference $r1;
        java.lang.CharSequence[] $r2, $r3;
        int i0, $i1;
        java.lang.CharSequence $r4;
        java.lang.String $r5;
        boolean $z0;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;

        r0 := @this: com.ichi2.anki.Preferences;

        $r1 := @parameter0: android.preference.ListPreference;

        $r2 = virtualinvoke $r1.<android.preference.ListPreference: java.lang.CharSequence[] getEntries()>();

        $r3 = virtualinvoke $r1.<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if i0 >= $i1 goto label3;

        $r4 = $r3[i0];

        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $r4 = $r2[i0];

        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("%d");

        if $z0 == 0 goto label2;

        $r4 = $r2[i0];

        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[0] = $r7;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r5, $r6);

        $r2[i0] = $r5;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])>($r2);

        $r4 = virtualinvoke $r1.<android.preference.ListPreference: java.lang.CharSequence getEntry()>();

        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke $r1.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r5);

        return;
    }
