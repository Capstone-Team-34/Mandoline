com.ichi2.anki.CardBrowser extends com.ichi2.anki.NavigationDrawerActivity implements com.ichi2.anki.widgets.DeckDropDownAdapter$SubtitleListener
private static final int ADD_NOTE
private static final int BACKGROUND_MARKED
private static final int BACKGROUND_MARKED_SUSPENDED
private static final int BACKGROUND_NORMAL
private static final int BACKGROUND_SUSPENDED
public static final int CARD_ORDER_NONE
private static final java.lang.String[] COLUMN1_KEYS
private static final java.lang.String[] COLUMN2_KEYS
private static final int DEFAULT_FONT_SIZE_RATIO
private static final int EDIT_CARD
private static final java.lang.String[] fSortTypes
public static com.ichi2.libanki.Card sCardBrowserCard
private android.widget.Spinner mActionBarSpinner
private java.util.List mCards
private com.ichi2.anki.CardBrowser$MultiColumnListAdapter mCardsAdapter
private android.widget.ListView mCardsListView
private int mColumn1Index
private int mColumn2Index
private com.afollestad.materialdialogs.MaterialDialog$ListCallback mContextMenuListener
private java.util.HashMap mDeckNames
private com.ichi2.async.DeckTask$TaskListener mDeleteNoteHandler
private com.ichi2.anki.widgets.DeckDropDownAdapter mDropDownAdapter
private java.util.ArrayList mDropDownDecks
private long mLastRenderStart
private com.ichi2.anki.dialogs.CardBrowserMySearchesDialog$MySearchesDialogListener mMySearchesDialogListener
private android.view.MenuItem mMySearchesItem
private int mOrder
private boolean mOrderAsc
private com.afollestad.materialdialogs.MaterialDialog$ListCallbackSingleChoice mOrderDialogListener
private int mPositionInCardsList
private boolean mReloadRequired
private com.ichi2.async.DeckTask$TaskListener mRenderQAHandler
private java.lang.String mRestrictOnDeck
private android.view.MenuItem mSaveSearchItem
private com.ichi2.async.DeckTask$TaskListener mSearchCardsHandler
private android.view.MenuItem mSearchItem
private java.lang.String mSearchTerms
private android.support.v7.widget.SearchView mSearchView
private com.ichi2.async.DeckTask$TaskListener mSuspendCardHandler
private android.content.BroadcastReceiver mUnmountReceiver
private com.ichi2.async.DeckTask$TaskListener mUpdateCardHandler
    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[10];

        $r0[0] = "";

        $r0[1] = "noteFld";

        $r0[2] = "noteCrt";

        $r0[3] = "noteMod";

        $r0[4] = "cardMod";

        $r0[5] = "cardDue";

        $r0[6] = "cardIvl";

        $r0[7] = "cardEase";

        $r0[8] = "cardReps";

        $r0[9] = "cardLapses";

        <com.ichi2.anki.CardBrowser: java.lang.String[] fSortTypes> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "question";

        $r0[1] = "sfld";

        <com.ichi2.anki.CardBrowser: java.lang.String[] COLUMN1_KEYS> = $r0;

        $r0 = newarray (java.lang.String)[14];

        $r0[0] = "answer";

        $r0[1] = "card";

        $r0[2] = "deck";

        $r0[3] = "note";

        $r0[4] = "question";

        $r0[5] = "tags";

        $r0[6] = "lapses";

        $r0[7] = "reviews";

        $r0[8] = "changed";

        $r0[9] = "created";

        $r0[10] = "due";

        $r0[11] = "ease";

        $r0[12] = "edited";

        $r0[13] = "interval";

        <com.ichi2.anki.CardBrowser: java.lang.String[] COLUMN2_KEYS> = $r0;

        return;
    }
    public void <init>()
    {
        com.ichi2.anki.CardBrowser r0;
        com.ichi2.anki.CardBrowser$1 $r1;
        com.ichi2.anki.CardBrowser$2 $r2;
        com.ichi2.anki.CardBrowser$3 $r3;
        com.ichi2.anki.CardBrowser$13 $r4;
        com.ichi2.anki.CardBrowser$14 $r5;
        com.ichi2.anki.CardBrowser$15 $r6;
        com.ichi2.anki.CardBrowser$16 $r7;
        com.ichi2.anki.CardBrowser$17 $r8;

        r0 := @this: com.ichi2.anki.CardBrowser;

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void <init>()>();

        r0.<com.ichi2.anki.CardBrowser: long mLastRenderStart> = 0L;

        r0.<com.ichi2.anki.CardBrowser: boolean mReloadRequired> = 0;

        r0.<com.ichi2.anki.CardBrowser: android.content.BroadcastReceiver mUnmountReceiver> = null;

        $r1 = new com.ichi2.anki.CardBrowser$1;

        specialinvoke $r1.<com.ichi2.anki.CardBrowser$1: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        r0.<com.ichi2.anki.CardBrowser: com.afollestad.materialdialogs.MaterialDialog$ListCallback mContextMenuListener> = $r1;

        $r2 = new com.ichi2.anki.CardBrowser$2;

        specialinvoke $r2.<com.ichi2.anki.CardBrowser$2: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        r0.<com.ichi2.anki.CardBrowser: com.afollestad.materialdialogs.MaterialDialog$ListCallbackSingleChoice mOrderDialogListener> = $r2;

        $r3 = new com.ichi2.anki.CardBrowser$3;

        specialinvoke $r3.<com.ichi2.anki.CardBrowser$3: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        r0.<com.ichi2.anki.CardBrowser: com.ichi2.anki.dialogs.CardBrowserMySearchesDialog$MySearchesDialogListener mMySearchesDialogListener> = $r3;

        $r4 = new com.ichi2.anki.CardBrowser$13;

        specialinvoke $r4.<com.ichi2.anki.CardBrowser$13: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        r0.<com.ichi2.anki.CardBrowser: com.ichi2.async.DeckTask$TaskListener mUpdateCardHandler> = $r4;

        $r5 = new com.ichi2.anki.CardBrowser$14;

        specialinvoke $r5.<com.ichi2.anki.CardBrowser$14: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        r0.<com.ichi2.anki.CardBrowser: com.ichi2.async.DeckTask$TaskListener mSuspendCardHandler> = $r5;

        $r6 = new com.ichi2.anki.CardBrowser$15;

        specialinvoke $r6.<com.ichi2.anki.CardBrowser$15: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        r0.<com.ichi2.anki.CardBrowser: com.ichi2.async.DeckTask$TaskListener mDeleteNoteHandler> = $r6;

        $r7 = new com.ichi2.anki.CardBrowser$16;

        specialinvoke $r7.<com.ichi2.anki.CardBrowser$16: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        r0.<com.ichi2.anki.CardBrowser: com.ichi2.async.DeckTask$TaskListener mSearchCardsHandler> = $r7;

        $r8 = new com.ichi2.anki.CardBrowser$17;

        specialinvoke $r8.<com.ichi2.anki.CardBrowser$17: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        r0.<com.ichi2.anki.CardBrowser: com.ichi2.async.DeckTask$TaskListener mRenderQAHandler> = $r8;

        return;
    }
    static java.util.List access$000(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        java.util.List $r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $r1 = specialinvoke $r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        return $r1;
    }
    static void access$100(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        specialinvoke $r0.<com.ichi2.anki.CardBrowser: void searchCards()>();

        return;
    }
    static long[] access$1000(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        long[] $r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $r1 = specialinvoke $r0.<com.ichi2.anki.CardBrowser: long[] getCardIds()>();

        return $r1;
    }
    static int access$1100(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        i0 = $r0.<com.ichi2.anki.CardBrowser: int mOrder>;

        return i0;
    }
    static int access$1102(com.ichi2.anki.CardBrowser, int)
    {
        com.ichi2.anki.CardBrowser $r0;
        int $i0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $i0 := @parameter1: int;

        $r0.<com.ichi2.anki.CardBrowser: int mOrder> = $i0;

        return $i0;
    }
    static boolean access$1200(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        boolean z0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        z0 = $r0.<com.ichi2.anki.CardBrowser: boolean mOrderAsc>;

        return z0;
    }
    static boolean access$1202(com.ichi2.anki.CardBrowser, boolean)
    {
        com.ichi2.anki.CardBrowser $r0;
        boolean $z0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $z0 := @parameter1: boolean;

        $r0.<com.ichi2.anki.CardBrowser: boolean mOrderAsc> = $z0;

        return $z0;
    }
    static java.lang.String[] access$1300()
    {
        java.lang.String[] r0;

        r0 = <com.ichi2.anki.CardBrowser: java.lang.String[] fSortTypes>;

        return r0;
    }
    static java.util.List access$1400(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        java.util.List r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        r1 = $r0.<com.ichi2.anki.CardBrowser: java.util.List mCards>;

        return r1;
    }
    static java.util.List access$1402(com.ichi2.anki.CardBrowser, java.util.List)
    {
        com.ichi2.anki.CardBrowser $r0;
        java.util.List $r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $r1 := @parameter1: java.util.List;

        $r0.<com.ichi2.anki.CardBrowser: java.util.List mCards> = $r1;

        return $r1;
    }
    static void access$1500(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        specialinvoke $r0.<com.ichi2.anki.CardBrowser: void updateList()>();

        return;
    }
    static java.lang.String access$1600(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        r1 = $r0.<com.ichi2.anki.CardBrowser: java.lang.String mSearchTerms>;

        return r1;
    }
    static java.lang.String access$1602(com.ichi2.anki.CardBrowser, java.lang.String)
    {
        com.ichi2.anki.CardBrowser $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $r1 := @parameter1: java.lang.String;

        $r0.<com.ichi2.anki.CardBrowser: java.lang.String mSearchTerms> = $r1;

        return $r1;
    }
    static android.support.v7.widget.SearchView access$1700(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        android.support.v7.widget.SearchView r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        r1 = $r0.<com.ichi2.anki.CardBrowser: android.support.v7.widget.SearchView mSearchView>;

        return r1;
    }
    static android.view.MenuItem access$1800(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        android.view.MenuItem r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        r1 = $r0.<com.ichi2.anki.CardBrowser: android.view.MenuItem mSearchItem>;

        return r1;
    }
    static android.view.MenuItem access$1900(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        android.view.MenuItem r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        r1 = $r0.<com.ichi2.anki.CardBrowser: android.view.MenuItem mMySearchesItem>;

        return r1;
    }
    static int access$200(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        i0 = $r0.<com.ichi2.anki.CardBrowser: int mPositionInCardsList>;

        return i0;
    }
    static int access$2000(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        i0 = $r0.<com.ichi2.anki.CardBrowser: int mColumn1Index>;

        return i0;
    }
    static int access$2002(com.ichi2.anki.CardBrowser, int)
    {
        com.ichi2.anki.CardBrowser $r0;
        int $i0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $i0 := @parameter1: int;

        $r0.<com.ichi2.anki.CardBrowser: int mColumn1Index> = $i0;

        return $i0;
    }
    static int access$202(com.ichi2.anki.CardBrowser, int)
    {
        com.ichi2.anki.CardBrowser $r0;
        int $i0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $i0 := @parameter1: int;

        $r0.<com.ichi2.anki.CardBrowser: int mPositionInCardsList> = $i0;

        return $i0;
    }
    static com.ichi2.anki.CardBrowser$MultiColumnListAdapter access$2100(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        r1 = $r0.<com.ichi2.anki.CardBrowser: com.ichi2.anki.CardBrowser$MultiColumnListAdapter mCardsAdapter>;

        return r1;
    }
    static java.lang.String[] access$2200()
    {
        java.lang.String[] r0;

        r0 = <com.ichi2.anki.CardBrowser: java.lang.String[] COLUMN1_KEYS>;

        return r0;
    }
    static int access$2300(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        i0 = $r0.<com.ichi2.anki.CardBrowser: int mColumn2Index>;

        return i0;
    }
    static int access$2302(com.ichi2.anki.CardBrowser, int)
    {
        com.ichi2.anki.CardBrowser $r0;
        int $i0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $i0 := @parameter1: int;

        $r0.<com.ichi2.anki.CardBrowser: int mColumn2Index> = $i0;

        return $i0;
    }
    static java.lang.String[] access$2400()
    {
        java.lang.String[] r0;

        r0 = <com.ichi2.anki.CardBrowser: java.lang.String[] COLUMN2_KEYS>;

        return r0;
    }
    static com.afollestad.materialdialogs.MaterialDialog$ListCallback access$2600(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        com.afollestad.materialdialogs.MaterialDialog$ListCallback r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        r1 = $r0.<com.ichi2.anki.CardBrowser: com.afollestad.materialdialogs.MaterialDialog$ListCallback mContextMenuListener>;

        return r1;
    }
    static android.view.MenuItem access$2700(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        android.view.MenuItem r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        r1 = $r0.<com.ichi2.anki.CardBrowser: android.view.MenuItem mSaveSearchItem>;

        return r1;
    }
    static void access$2800(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        specialinvoke $r0.<com.ichi2.anki.CardBrowser: void onSearch()>();

        return;
    }
    static void access$2900(com.ichi2.anki.CardBrowser, int)
    {
        com.ichi2.anki.CardBrowser $r0;
        int $i0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $i0 := @parameter1: int;

        specialinvoke $r0.<com.ichi2.anki.CardBrowser: void closeCardBrowser(int)>($i0);

        return;
    }
    static void access$300(com.ichi2.anki.CardBrowser, com.ichi2.libanki.Card)
    {
        com.ichi2.anki.CardBrowser $r0;
        com.ichi2.libanki.Card $r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $r1 := @parameter1: com.ichi2.libanki.Card;

        specialinvoke $r0.<com.ichi2.anki.CardBrowser: void onMark(com.ichi2.libanki.Card)>($r1);

        return;
    }
    static long access$3000(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        long l0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        l0 = $r0.<com.ichi2.anki.CardBrowser: long mLastRenderStart>;

        return l0;
    }
    static long access$3002(com.ichi2.anki.CardBrowser, long)
    {
        com.ichi2.anki.CardBrowser $r0;
        long $l0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $l0 := @parameter1: long;

        $r0.<com.ichi2.anki.CardBrowser: long mLastRenderStart> = $l0;

        return $l0;
    }
    static com.ichi2.async.DeckTask$TaskListener access$3100(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        com.ichi2.async.DeckTask$TaskListener r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        r1 = $r0.<com.ichi2.anki.CardBrowser: com.ichi2.async.DeckTask$TaskListener mRenderQAHandler>;

        return r1;
    }
    static void access$400(com.ichi2.anki.CardBrowser, com.ichi2.libanki.Card, java.lang.String)
    {
        com.ichi2.anki.CardBrowser $r0;
        com.ichi2.libanki.Card $r1;
        java.lang.String $r2;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $r1 := @parameter1: com.ichi2.libanki.Card;

        $r2 := @parameter2: java.lang.String;

        specialinvoke $r0.<com.ichi2.anki.CardBrowser: void updateCardInList(com.ichi2.libanki.Card,java.lang.String)>($r1, $r2);

        return;
    }
    static boolean access$500(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        boolean $z0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $z0 = specialinvoke $r0.<com.ichi2.anki.CardBrowser: boolean currentCardInUseByReviewer()>();

        return $z0;
    }
    static boolean access$602(com.ichi2.anki.CardBrowser, boolean)
    {
        com.ichi2.anki.CardBrowser $r0;
        boolean $z0;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $z0 := @parameter1: boolean;

        $r0.<com.ichi2.anki.CardBrowser: boolean mReloadRequired> = $z0;

        return $z0;
    }
    static com.ichi2.async.DeckTask$TaskListener access$700(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        com.ichi2.async.DeckTask$TaskListener r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        r1 = $r0.<com.ichi2.anki.CardBrowser: com.ichi2.async.DeckTask$TaskListener mSuspendCardHandler>;

        return r1;
    }
    static void access$800(com.ichi2.anki.CardBrowser, com.ichi2.libanki.Card)
    {
        com.ichi2.anki.CardBrowser $r0;
        com.ichi2.libanki.Card $r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        $r1 := @parameter1: com.ichi2.libanki.Card;

        specialinvoke $r0.<com.ichi2.anki.CardBrowser: void deleteNote(com.ichi2.libanki.Card)>($r1);

        return;
    }
    static com.ichi2.async.DeckTask$TaskListener access$900(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser $r0;
        com.ichi2.async.DeckTask$TaskListener r1;

        $r0 := @parameter0: com.ichi2.anki.CardBrowser;

        r1 = $r0.<com.ichi2.anki.CardBrowser: com.ichi2.async.DeckTask$TaskListener mDeleteNoteHandler>;

        return r1;
    }
    private void closeCardBrowser(int)
    {
        com.ichi2.anki.CardBrowser r0;
        int $i0;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.ichi2.anki.CardBrowser: void closeCardBrowser(int,android.content.Intent)>($i0, null);

        return;
    }
    private void closeCardBrowser(int, android.content.Intent)
    {
        com.ichi2.anki.CardBrowser r0;
        int $i0, $i2;
        android.content.Intent $r1, $r2;
        boolean $z0;
        long $l1;
        android.widget.Spinner $r3;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.Intent getIntent()>();

        $z0 = virtualinvoke $r2.<android.content.Intent: boolean hasExtra(java.lang.String)>("selectedDeck");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.Intent getIntent()>();

        $l1 = virtualinvoke $r2.<android.content.Intent: long getLongExtra(java.lang.String,long)>("selectedDeck", 0L);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("originalDeck", $l1);

     label1:
        $r3 = r0.<com.ichi2.anki.CardBrowser: android.widget.Spinner mActionBarSpinner>;

        $i2 = virtualinvoke $r3.<android.widget.Spinner: int getSelectedItemPosition()>();

        if $i2 != 0 goto label3;

        $z0 = 1;

     label2:
        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("allDecksSelected", $z0);

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: void setResult(int,android.content.Intent)>($i0, $r1);

        $i0 = <com.ichi2.anim.ActivityTransitionAnimation: int RIGHT>;

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: void finishWithAnimation(int)>($i0);

        return;

     label3:
        $z0 = 0;

        goto label2;
    }
    private boolean currentCardInUseByReviewer()
    {
        com.ichi2.anki.CardBrowser r0;
        android.content.Intent $r1;
        boolean $z0;
        java.util.List $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        android.os.Bundle $r4;
        long $l2, $l3;
        java.util.Map $r5;
        java.lang.String $r6;
        byte $b4;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.Intent getIntent()>();

        $z0 = virtualinvoke $r1.<android.content.Intent: boolean hasExtra(java.lang.String)>("currentCard");

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = r0.<com.ichi2.anki.CardBrowser: int mPositionInCardsList>;

        if $i0 <= $i1 goto label1;

        $r2 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $i0 = r0.<com.ichi2.anki.CardBrowser: int mPositionInCardsList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        if $r3 == null goto label1;

        $r1 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.Intent getIntent()>();

        $r4 = virtualinvoke $r1.<android.content.Intent: android.os.Bundle getExtras()>();

        $l2 = virtualinvoke $r4.<android.os.Bundle: long getLong(java.lang.String)>("currentCard");

        $r2 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $i0 = r0.<com.ichi2.anki.CardBrowser: int mPositionInCardsList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (java.util.Map) $r3;

        $r3 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("id");

        $r6 = (java.lang.String) $r3;

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        $b4 = $l3 cmp $l2;

        if $b4 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void deleteNote(com.ichi2.libanki.Card)
    {
        com.ichi2.anki.CardBrowser r0;
        com.ichi2.libanki.Card $r1, r6;
        boolean $z0;
        com.ichi2.libanki.Note $r2;
        java.util.ArrayList $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.util.List $r7;
        long $l0;
        int $i1, $i2;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 := @parameter0: com.ichi2.libanki.Card;

        $z0 = specialinvoke r0.<com.ichi2.anki.CardBrowser: boolean currentCardInUseByReviewer()>();

        if $z0 == 0 goto label1;

        r0.<com.ichi2.anki.CardBrowser: boolean mReloadRequired> = 1;

     label1:
        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Card: com.ichi2.libanki.Note note()>();

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Note: java.util.ArrayList cards()>();

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.ichi2.libanki.Card) $r5;

        $r7 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $l0 = virtualinvoke r6.<com.ichi2.libanki.Card: long getId()>();

        $i1 = specialinvoke r0.<com.ichi2.anki.CardBrowser: int getPosition(java.util.List,long)>($r7, $l0);

        if $i1 < 0 goto label2;

        $r7 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i1 >= $i2 goto label2;

        $r7 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>($i1);

        goto label2;

     label3:
        $r7 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $l0 = virtualinvoke $r1.<com.ichi2.libanki.Card: long getId()>();

        $i1 = specialinvoke r0.<com.ichi2.anki.CardBrowser: int getPosition(java.util.List,long)>($r7, $l0);

        if $i1 < 0 goto label4;

        $r7 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i1 >= $i2 goto label4;

        $r7 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>($i1);

     label4:
        specialinvoke r0.<com.ichi2.anki.CardBrowser: void updateList()>();

        return;
    }
    private static java.lang.String formatQA(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<br>", " ");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<br />", " ");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<div>", " ");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", " ");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\[sound:[^]]+\\]", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\[\\[type:[^]]+\\]\\]", "");

        $r0 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTMLMedia(java.lang.String)>($r0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r0;
    }
    private long[] getCardIds()
    {
        com.ichi2.anki.CardBrowser r0;
        long[] r1;
        java.util.List $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.util.Map $r4;
        java.lang.String $r5;
        long $l2;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r2 = r0.<com.ichi2.anki.CardBrowser: java.util.List mCards>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r1 = newarray (long)[$i0];

        $i0 = 0;

     label1:
        $r2 = r0.<com.ichi2.anki.CardBrowser: java.util.List mCards>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label2;

        $r2 = r0.<com.ichi2.anki.CardBrowser: java.util.List mCards>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.util.Map) $r3;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("id");

        $r5 = (java.lang.String) $r3;

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        r1[$i0] = $l2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
    private java.util.List getCards()
    {
        com.ichi2.anki.CardBrowser r0;
        java.util.List $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 = r0.<com.ichi2.anki.CardBrowser: java.util.List mCards>;

        if $r1 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.ichi2.anki.CardBrowser: java.util.List mCards> = $r2;

     label1:
        $r1 = r0.<com.ichi2.anki.CardBrowser: java.util.List mCards>;

        return $r1;
    }
    private int getDeckPositionFromDeckId(long)
    {
        com.ichi2.anki.CardBrowser r0;
        long $l0, $l3;
        org.json.JSONException r1;
        int i1, $i2;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        org.json.JSONObject r4;
        byte $b4;
        java.lang.RuntimeException $r5;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $l0 := @parameter0: long;

        i1 = 0;

     label1:
        $r2 = r0.<com.ichi2.anki.CardBrowser: java.util.ArrayList mDropDownDecks>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label6;

        $r2 = r0.<com.ichi2.anki.CardBrowser: java.util.ArrayList mDropDownDecks>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (org.json.JSONObject) $r3;

     label2:
        $l3 = virtualinvoke r4.<org.json.JSONObject: long getLong(java.lang.String)>("id");

     label3:
        $b4 = $l3 cmp $l0;

        if $b4 != 0 goto label5;

        i1 = i1 + 1;

        return i1;

     label4:
        r1 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>()>();

        throw $r5;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return 0;

        catch org.json.JSONException from label2 to label3 with label4;
    }
    private int getPosition(java.util.List, long)
    {
        com.ichi2.anki.CardBrowser r0;
        java.util.List r1;
        long $l0;
        java.lang.String $r2, $r5;
        int i1, $i2;
        java.lang.Object $r3;
        java.util.Map $r4;
        boolean $z0;

        r0 := @this: com.ichi2.anki.CardBrowser;

        r1 := @parameter0: java.util.List;

        $l0 := @parameter1: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        i1 = 0;

     label1:
        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i2 goto label3;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (java.util.Map) $r3;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("id");

        $r5 = (java.lang.String) $r3;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }
    private void onMark(com.ichi2.libanki.Card)
    {
        com.ichi2.anki.CardBrowser r0;
        com.ichi2.libanki.Card $r1;
        com.ichi2.libanki.Note $r2;
        boolean $z0;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 := @parameter0: com.ichi2.libanki.Card;

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Card: com.ichi2.libanki.Note note()>();

        $z0 = virtualinvoke $r2.<com.ichi2.libanki.Note: boolean hasTag(java.lang.String)>("marked");

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<com.ichi2.libanki.Note: void delTag(java.lang.String)>("marked");

     label1:
        virtualinvoke $r2.<com.ichi2.libanki.Note: void flush()>();

        return;

     label2:
        virtualinvoke $r2.<com.ichi2.libanki.Note: void addTag(java.lang.String)>("marked");

        goto label1;
    }
    private void onSearch()
    {
        com.ichi2.anki.CardBrowser r0;
        android.support.v7.widget.SearchView $r1;
        java.lang.CharSequence $r2;
        java.lang.String $r3;
        int $i0;
        android.content.res.Resources $r4;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 = r0.<com.ichi2.anki.CardBrowser: android.support.v7.widget.SearchView mSearchView>;

        $r2 = virtualinvoke $r1.<android.support.v7.widget.SearchView: java.lang.CharSequence getQuery()>();

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        r0.<com.ichi2.anki.CardBrowser: java.lang.String mSearchTerms> = $r3;

        $r3 = r0.<com.ichi2.anki.CardBrowser: java.lang.String mSearchTerms>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r1 = r0.<com.ichi2.anki.CardBrowser: android.support.v7.widget.SearchView mSearchView>;

        $r4 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(2131230987);

        virtualinvoke $r1.<android.support.v7.widget.SearchView: void setQueryHint(java.lang.CharSequence)>($r3);

     label1:
        specialinvoke r0.<com.ichi2.anki.CardBrowser: void searchCards()>();

        return;
    }
    private void registerExternalStorageListener()
    {
        com.ichi2.anki.CardBrowser r0;
        android.content.IntentFilter r1;
        android.content.BroadcastReceiver $r2;
        com.ichi2.anki.CardBrowser$18 $r3;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r2 = r0.<com.ichi2.anki.CardBrowser: android.content.BroadcastReceiver mUnmountReceiver>;

        if $r2 != null goto label1;

        $r3 = new com.ichi2.anki.CardBrowser$18;

        specialinvoke $r3.<com.ichi2.anki.CardBrowser$18: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        r0.<com.ichi2.anki.CardBrowser: android.content.BroadcastReceiver mUnmountReceiver> = $r3;

        r1 = new android.content.IntentFilter;

        specialinvoke r1.<android.content.IntentFilter: void <init>()>();

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("com.ichi2.anki.action.MEDIA_EJECT");

        $r2 = r0.<com.ichi2.anki.CardBrowser: android.content.BroadcastReceiver mUnmountReceiver>;

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r2, r1);

     label1:
        return;
    }
    private void searchCards()
    {
        com.ichi2.anki.CardBrowser r0;
        int i0, $i1;
        boolean $z0, $z1;
        java.lang.String $r1;
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter $r2;
        java.util.List $r3;
        android.widget.ListView $r4;
        float $f0, $f1;
        android.content.res.Resources $r5;
        android.util.DisplayMetrics $r6;
        double $d0;
        com.ichi2.async.DeckTask$TaskListener $r7;
        com.ichi2.async.DeckTask$TaskData[] $r8;
        com.ichi2.async.DeckTask$TaskData $r9;
        java.lang.Object[] $r10;
        java.util.HashMap $r11;
        java.lang.Boolean $r12;
        java.lang.Integer $r13;
        java.lang.StringBuilder $r14;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $z0 = 1;

        staticinvoke <com.ichi2.async.DeckTask: void cancelTask(int)>(30);

        staticinvoke <com.ichi2.async.DeckTask: void cancelTask(int)>(37);

        $r1 = r0.<com.ichi2.anki.CardBrowser: java.lang.String mSearchTerms>;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("deck:");

        if $z1 == 0 goto label3;

        $r1 = r0.<com.ichi2.anki.CardBrowser: java.lang.String mSearchTerms>;

     label1:
        $z1 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: boolean colIsOpen()>();

        if $z1 == 0 goto label5;

        $r2 = r0.<com.ichi2.anki.CardBrowser: com.ichi2.anki.CardBrowser$MultiColumnListAdapter mCardsAdapter>;

        if $r2 == null goto label5;

        $r3 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r2 = r0.<com.ichi2.anki.CardBrowser: com.ichi2.anki.CardBrowser$MultiColumnListAdapter mCardsAdapter>;

        virtualinvoke $r2.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: void notifyDataSetChanged()>();

        $r4 = r0.<com.ichi2.anki.CardBrowser: android.widget.ListView mCardsListView>;

        i0 = virtualinvoke $r4.<android.widget.ListView: int getHeight()>();

        $f0 = (float) i0;

        $r5 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 20.0F, $r6);

        $f0 = $f0 / $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i0 = (int) $d0;

        i0 = i0 + 5;

        $r7 = r0.<com.ichi2.anki.CardBrowser: com.ichi2.async.DeckTask$TaskListener mSearchCardsHandler>;

        $r8 = newarray (com.ichi2.async.DeckTask$TaskData)[1];

        $r9 = new com.ichi2.async.DeckTask$TaskData;

        $r10 = newarray (java.lang.Object)[4];

        $r11 = r0.<com.ichi2.anki.CardBrowser: java.util.HashMap mDeckNames>;

        $r10[0] = $r11;

        $r10[1] = $r1;

        $i1 = r0.<com.ichi2.anki.CardBrowser: int mOrder>;

        if $i1 == 0 goto label4;

     label2:
        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r10[2] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10[3] = $r13;

        specialinvoke $r9.<com.ichi2.async.DeckTask$TaskData: void <init>(java.lang.Object[])>($r10);

        $r8[0] = $r9;

        staticinvoke <com.ichi2.async.DeckTask: com.ichi2.async.DeckTask launchDeckTask(int,com.ichi2.async.DeckTask$Listener,com.ichi2.async.DeckTask$TaskData[])>(30, $r7, $r8);

        return;

     label3:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r1 = r0.<com.ichi2.anki.CardBrowser: java.lang.String mRestrictOnDeck>;

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = r0.<com.ichi2.anki.CardBrowser: java.lang.String mSearchTerms>;

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        return;
    }
    private void showTagsDialog()
    {
        com.ichi2.anki.CardBrowser r0;
        java.util.ArrayList $r1, $r2;
        com.ichi2.libanki.Collection $r3;
        com.ichi2.libanki.Tags $r4;
        java.util.List $r5;
        com.ichi2.anki.dialogs.TagsDialog $r6;
        com.ichi2.anki.CardBrowser$12 $r7;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new java.util.ArrayList;

        $r3 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Collection: com.ichi2.libanki.Tags getTags()>();

        $r5 = virtualinvoke $r4.<com.ichi2.libanki.Tags: java.util.List all()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        $r6 = staticinvoke <com.ichi2.anki.dialogs.TagsDialog: com.ichi2.anki.dialogs.TagsDialog newInstance(int,java.util.ArrayList,java.util.ArrayList)>(1, $r1, $r2);

        $r7 = new com.ichi2.anki.CardBrowser$12;

        specialinvoke $r7.<com.ichi2.anki.CardBrowser$12: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        virtualinvoke $r6.<com.ichi2.anki.dialogs.TagsDialog: void setTagsDialogListener(com.ichi2.anki.dialogs.TagsDialog$TagsDialogListener)>($r7);

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: void showDialogFragment(android.support.v4.app.DialogFragment)>($r6);

        return;
    }
    private void updateCardInList(com.ichi2.libanki.Card, java.lang.String)
    {
        com.ichi2.anki.CardBrowser r0;
        com.ichi2.libanki.Card $r1, r8;
        java.lang.String $r2, $r11;
        org.json.JSONException r3;
        com.ichi2.libanki.Note $r4;
        java.util.ArrayList $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.util.List $r9;
        long $l0;
        int $i1, $i2;
        java.util.Map $r10;
        com.ichi2.libanki.Collection $r12;
        com.ichi2.libanki.Decks $r13;
        org.json.JSONObject $r14;
        byte $b3, $b4;
        java.lang.RuntimeException $r15;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 := @parameter0: com.ichi2.libanki.Card;

        $r2 := @parameter1: java.lang.String;

        $r4 = virtualinvoke $r1.<com.ichi2.libanki.Card: com.ichi2.libanki.Note note()>();

        $r5 = virtualinvoke $r4.<com.ichi2.libanki.Note: java.util.ArrayList cards()>();

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.ichi2.libanki.Card) $r7;

        $r9 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $l0 = virtualinvoke r8.<com.ichi2.libanki.Card: long getId()>();

        $i1 = specialinvoke r0.<com.ichi2.anki.CardBrowser: int getPosition(java.util.List,long)>($r9, $l0);

        if $i1 < 0 goto label01;

        $r9 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i1 >= $i2 goto label01;

        if $r2 == null goto label02;

        $r9 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $r7 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i1);

        $r10 = (java.util.Map) $r7;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tags", $r2);

     label02:
        $r11 = virtualinvoke $r4.<com.ichi2.libanki.Note: java.lang.String getSFld()>();

        $r9 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $r7 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i1);

        $r10 = (java.util.Map) $r7;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sfld", $r11);

        $r9 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $r7 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i1);

        $r10 = (java.util.Map) $r7;

        staticinvoke <com.ichi2.anki.CardBrowser: void updateSearchItemQA(java.util.Map,com.ichi2.libanki.Card)>($r10, r8);

     label03:
        $r12 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r13 = virtualinvoke $r12.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l0 = virtualinvoke $r1.<com.ichi2.libanki.Card: long getDid()>();

        $r14 = virtualinvoke $r13.<com.ichi2.libanki.Decks: org.json.JSONObject get(long)>($l0);

        $r11 = virtualinvoke $r14.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

     label04:
        $r9 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $r7 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i1);

        $r10 = (java.util.Map) $r7;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deck", $r11);

        $i2 = virtualinvoke r8.<com.ichi2.libanki.Card: int getQueue()>();

        if $i2 != -1 goto label08;

        $b3 = 1;

     label05:
        $z0 = virtualinvoke $r4.<com.ichi2.libanki.Note: boolean hasTag(java.lang.String)>("marked");

        if $z0 == 0 goto label09;

        $b4 = 2;

     label06:
        $i2 = $b3 + $b4;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r9 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $r7 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i1);

        $r10 = (java.util.Map) $r7;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("flags", $r11);

        goto label01;

     label07:
        r3 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r15;

     label08:
        $b3 = 0;

        goto label05;

     label09:
        $b4 = 0;

        goto label06;

     label10:
        specialinvoke r0.<com.ichi2.anki.CardBrowser: void updateList()>();

        return;

        catch org.json.JSONException from label03 to label04 with label07;
    }
    private void updateList()
    {
        com.ichi2.anki.CardBrowser r0;
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter $r1;
        com.ichi2.anki.widgets.DeckDropDownAdapter $r2;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 = r0.<com.ichi2.anki.CardBrowser: com.ichi2.anki.CardBrowser$MultiColumnListAdapter mCardsAdapter>;

        virtualinvoke $r1.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: void notifyDataSetChanged()>();

        $r2 = r0.<com.ichi2.anki.CardBrowser: com.ichi2.anki.widgets.DeckDropDownAdapter mDropDownAdapter>;

        virtualinvoke $r2.<com.ichi2.anki.widgets.DeckDropDownAdapter: void notifyDataSetChanged()>();

        return;
    }
    public static void updateSearchItemQA(java.util.Map, com.ichi2.libanki.Card)
    {
        java.util.Map r0;
        com.ichi2.libanki.Card $r1;
        java.util.HashMap $r2, $r5;
        java.lang.Object $r3;
        java.lang.String $r4, r6, $r7;
        boolean $z0;
        org.json.JSONObject $r8;
        int $i0;

        r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: com.ichi2.libanki.Card;

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Card: java.util.HashMap _getQA(boolean,boolean)>(1, 1);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("q");

        $r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("a");

        $r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label3;

     label1:
        $r5 = virtualinvoke $r1.<com.ichi2.libanki.Card: java.util.HashMap _getQA(boolean,boolean)>(1, 0);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("q");

        $r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("q");

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("q", $r3);

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("a");

        $r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("a");

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", $r3);

     label3:
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("q");

        $r4 = (java.lang.String) $r3;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("a");

        r6 = (java.lang.String) $r3;

        $z0 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label4;

        $r7 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>($r4);

        r6 = virtualinvoke r6.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>($r7, "");

     label4:
        r6 = staticinvoke <com.ichi2.anki.CardBrowser: java.lang.String formatQA(java.lang.String)>(r6);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("answer", r6);

        $r8 = virtualinvoke $r1.<com.ichi2.libanki.Card: org.json.JSONObject template()>();

        r6 = virtualinvoke $r8.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("name");

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("card", r6);

        $i0 = virtualinvoke $r1.<com.ichi2.libanki.Card: int getLapses()>();

        r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lapses", r6);

        $r8 = virtualinvoke $r1.<com.ichi2.libanki.Card: org.json.JSONObject model()>();

        r6 = virtualinvoke $r8.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("name");

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("note", r6);

        $r4 = staticinvoke <com.ichi2.anki.CardBrowser: java.lang.String formatQA(java.lang.String)>($r4);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("question", $r4);

        $i0 = virtualinvoke $r1.<com.ichi2.libanki.Card: int getReps()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("reviews", $r4);

        return;
    }
    public java.lang.String getSubtitleText()
    {
        com.ichi2.anki.CardBrowser r0;
        java.util.List $r1;
        int $i0;
        android.content.res.Resources $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        java.lang.String $r5;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 = specialinvoke r0.<com.ichi2.anki.CardBrowser: java.util.List getCards()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.res.Resources getResources()>();

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r4;

        $r5 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131361792, $i0, $r3);

        return $r5;
    }
    protected void onActivityResult(int, int, android.content.Intent)
    {
        com.ichi2.anki.CardBrowser r0;
        int $i0, $i1;
        android.content.Intent $r1;
        com.ichi2.libanki.Card $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        com.ichi2.async.DeckTask$TaskListener $r5;
        com.ichi2.async.DeckTask$TaskData[] $r6;
        com.ichi2.async.DeckTask$TaskData $r7;
        boolean $z0;
        android.support.v7.widget.SearchView $r8;
        java.lang.CharSequence $r9;
        java.lang.String $r10;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.content.Intent;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3[1] = $r4;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("onActivityResult(requestCode=%d, resultCode=%d)", $r3);

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onActivityResult(int,int,android.content.Intent)>($i0, $i1, $r1);

        if $i1 != 203 goto label1;

        specialinvoke r0.<com.ichi2.anki.CardBrowser: void closeCardBrowser(int)>(203);

     label1:
        if $i0 != 0 goto label3;

        if $i1 == 0 goto label3;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("CardBrowser:: CardBrowser: Saving card...", $r3);

        $r5 = r0.<com.ichi2.anki.CardBrowser: com.ichi2.async.DeckTask$TaskListener mUpdateCardHandler>;

        $r6 = newarray (com.ichi2.async.DeckTask$TaskData)[1];

        $r7 = new com.ichi2.async.DeckTask$TaskData;

        $r2 = <com.ichi2.anki.CardBrowser: com.ichi2.libanki.Card sCardBrowserCard>;

        specialinvoke $r7.<com.ichi2.async.DeckTask$TaskData: void <init>(com.ichi2.libanki.Card,boolean)>($r2, 0);

        $r6[0] = $r7;

        staticinvoke <com.ichi2.async.DeckTask: com.ichi2.async.DeckTask launchDeckTask(int,com.ichi2.async.DeckTask$Listener,com.ichi2.async.DeckTask$TaskData[])>(7, $r5, $r6);

     label2:
        if $i0 != 0 goto label5;

        if $r1 == null goto label5;

        $z0 = virtualinvoke $r1.<android.content.Intent: boolean hasExtra(java.lang.String)>("reloadRequired");

        if $z0 == 0 goto label5;

        specialinvoke r0.<com.ichi2.anki.CardBrowser: void searchCards()>();

        $z0 = specialinvoke r0.<com.ichi2.anki.CardBrowser: boolean currentCardInUseByReviewer()>();

        if $z0 == 0 goto label5;

        r0.<com.ichi2.anki.CardBrowser: boolean mReloadRequired> = 1;

        return;

     label3:
        if $i0 != 1 goto label2;

        if $i1 != -1 goto label2;

        $r8 = r0.<com.ichi2.anki.CardBrowser: android.support.v7.widget.SearchView mSearchView>;

        if $r8 == null goto label4;

        $r8 = r0.<com.ichi2.anki.CardBrowser: android.support.v7.widget.SearchView mSearchView>;

        $r9 = virtualinvoke $r8.<android.support.v7.widget.SearchView: java.lang.CharSequence getQuery()>();

        $r10 = interfaceinvoke $r9.<java.lang.CharSequence: java.lang.String toString()>();

        r0.<com.ichi2.anki.CardBrowser: java.lang.String mSearchTerms> = $r10;

        specialinvoke r0.<com.ichi2.anki.CardBrowser: void searchCards()>();

        goto label2;

     label4:
        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Note was added from browser and on return mSearchView == null", $r3);

        goto label2;

     label5:
        return;
    }
    public void onBackPressed()
    {
        com.ichi2.anki.CardBrowser r0;
        android.content.Intent r1;
        boolean $z0;
        java.lang.Object[] $r2;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $z0 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: boolean isDrawerOpen()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onBackPressed()>();

        return;

     label1:
        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Back key pressed", $r2);

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>()>();

        $z0 = r0.<com.ichi2.anki.CardBrowser: boolean mReloadRequired>;

        if $z0 == 0 goto label2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("reloadRequired", 1);

     label2:
        specialinvoke r0.<com.ichi2.anki.CardBrowser: void closeCardBrowser(int,android.content.Intent)>(-1, r1);

        return;
    }
    protected void onCollectionLoaded(com.ichi2.libanki.Collection)
    {
        com.ichi2.anki.CardBrowser r0;
        com.ichi2.libanki.Collection $r1, $r20;
        org.json.JSONException r2;
        java.lang.Object[] $r3;
        java.util.HashMap $r4;
        com.ichi2.libanki.Decks $r5;
        java.lang.Long[] $r6;
        int $i0, $i1;
        java.lang.Long $r7;
        long $l2;
        java.lang.String $r8, $r9;
        android.content.Context $r10;
        android.content.SharedPreferences $r11, $r23;
        java.util.ArrayList $r12;
        com.ichi2.anki.widgets.DeckDropDownAdapter $r13;
        android.support.v7.app.ActionBar $r14;
        android.view.View $r15;
        android.widget.Spinner $r16, r25;
        com.ichi2.anki.CardBrowser$4 $r17;
        org.json.JSONObject $r18;
        java.lang.String[] $r19, $r28;
        boolean $z0;
        android.widget.ListView $r21;
        android.widget.ArrayAdapter $r22;
        com.ichi2.anki.CardBrowser$5 $r24;
        com.ichi2.anki.CardBrowser$6 $r26;
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter $r27;
        int[] $r29;
        com.ichi2.anki.CardBrowser$RenderOnScroll $r30;
        com.ichi2.anki.CardBrowser$7 $r31;
        com.ichi2.anki.CardBrowser$8 $r32;
        android.view.Window $r33;
        android.content.Intent $r34;
        java.lang.RuntimeException $r35;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onCollectionLoaded(com.ichi2.libanki.Collection)>($r1);

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("onCollectionLoaded()", $r3);

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.ichi2.anki.CardBrowser: java.util.HashMap mDeckNames> = $r4;

        $r1 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r5 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Decks: java.lang.Long[] allIds()>();

        $i0 = lengthof $r6;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label02;

        $r7 = $r6[$i1];

        $l2 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $r4 = r0.<com.ichi2.anki.CardBrowser: java.util.HashMap mDeckNames>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l2);

        $r1 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r5 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r9 = virtualinvoke $r5.<com.ichi2.libanki.Decks: java.lang.String name(long)>($l2);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $i1 = $i1 + 1;

        goto label01;

     label02:
        specialinvoke r0.<com.ichi2.anki.CardBrowser: void registerExternalStorageListener()>();

        $r10 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.Context getBaseContext()>();

        $r11 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r10);

        $r1 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r5 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r12 = virtualinvoke $r5.<com.ichi2.libanki.Decks: java.util.ArrayList allSorted()>();

        r0.<com.ichi2.anki.CardBrowser: java.util.ArrayList mDropDownDecks> = $r12;

        $r13 = new com.ichi2.anki.widgets.DeckDropDownAdapter;

        $r12 = r0.<com.ichi2.anki.CardBrowser: java.util.ArrayList mDropDownDecks>;

        specialinvoke $r13.<com.ichi2.anki.widgets.DeckDropDownAdapter: void <init>(android.content.Context,java.util.ArrayList)>(r0, $r12);

        r0.<com.ichi2.anki.CardBrowser: com.ichi2.anki.widgets.DeckDropDownAdapter mDropDownAdapter> = $r13;

        $r14 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.support.v7.app.ActionBar getSupportActionBar()>();

        if $r14 == null goto label03;

        virtualinvoke $r14.<android.support.v7.app.ActionBar: void setDisplayShowTitleEnabled(boolean)>(0);

     label03:
        $r15 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.view.View findViewById(int)>(2131755323);

        $r16 = (android.widget.Spinner) $r15;

        r0.<com.ichi2.anki.CardBrowser: android.widget.Spinner mActionBarSpinner> = $r16;

        $r16 = r0.<com.ichi2.anki.CardBrowser: android.widget.Spinner mActionBarSpinner>;

        $r13 = r0.<com.ichi2.anki.CardBrowser: com.ichi2.anki.widgets.DeckDropDownAdapter mDropDownAdapter>;

        virtualinvoke $r16.<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>($r13);

        $r16 = r0.<com.ichi2.anki.CardBrowser: android.widget.Spinner mActionBarSpinner>;

        $r17 = new com.ichi2.anki.CardBrowser$4;

        specialinvoke $r17.<com.ichi2.anki.CardBrowser$4: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        virtualinvoke $r16.<android.widget.Spinner: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>($r17);

        $r16 = r0.<com.ichi2.anki.CardBrowser: android.widget.Spinner mActionBarSpinner>;

        virtualinvoke $r16.<android.widget.Spinner: void setVisibility(int)>(0);

        r0.<com.ichi2.anki.CardBrowser: int mOrder> = 0;

     label04:
        $r1 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r18 = virtualinvoke $r1.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

        $r8 = virtualinvoke $r18.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("sortType");

     label05:
        $i0 = 0;

     label06:
        $r19 = <com.ichi2.anki.CardBrowser: java.lang.String[] fSortTypes>;

        $i1 = lengthof $r19;

        if $i0 >= $i1 goto label09;

        $r19 = <com.ichi2.anki.CardBrowser: java.lang.String[] fSortTypes>;

        $r9 = $r19[$i0];

     label07:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

     label08:
        if $z0 == 0 goto label18;

        r0.<com.ichi2.anki.CardBrowser: int mOrder> = $i0;

     label09:
        $i0 = r0.<com.ichi2.anki.CardBrowser: int mOrder>;

        if $i0 != 1 goto label12;

     label10:
        $z0 = interfaceinvoke $r11.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("cardBrowserNoSorting", 0);

     label11:
        if $z0 == 0 goto label12;

        r0.<com.ichi2.anki.CardBrowser: int mOrder> = 0;

     label12:
        $r1 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r20 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r18 = virtualinvoke $r20.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

        $z0 = staticinvoke <com.ichi2.upgrade.Upgrade: boolean upgradeJSONIfNecessary(com.ichi2.libanki.Collection,org.json.JSONObject,java.lang.String,boolean)>($r1, $r18, "sortBackwards", 0);

     label13:
        r0.<com.ichi2.anki.CardBrowser: boolean mOrderAsc> = $z0;

        $r19 = <com.ichi2.anki.CardBrowser: java.lang.String[] fSortTypes>;

        $i0 = r0.<com.ichi2.anki.CardBrowser: int mOrder>;

        $r8 = $r19[$i0];

     label14:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("noteFld");

     label15:
        if $z0 == 0 goto label17;

        $z0 = r0.<com.ichi2.anki.CardBrowser: boolean mOrderAsc>;

        if $z0 != 0 goto label19;

        $z0 = 1;

     label16:
        r0.<com.ichi2.anki.CardBrowser: boolean mOrderAsc> = $z0;

     label17:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.ichi2.anki.CardBrowser: java.util.List mCards> = $r12;

        $r15 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.view.View findViewById(int)>(2131755138);

        $r21 = (android.widget.ListView) $r15;

        r0.<com.ichi2.anki.CardBrowser: android.widget.ListView mCardsListView> = $r21;

        $r15 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.view.View findViewById(int)>(2131755136);

        $r16 = (android.widget.Spinner) $r15;

        $r22 = staticinvoke <android.widget.ArrayAdapter: android.widget.ArrayAdapter createFromResource(android.content.Context,int,int)>(r0, 2131296259, 17367048);

        virtualinvoke $r22.<android.widget.ArrayAdapter: void setDropDownViewResource(int)>(17367049);

        virtualinvoke $r16.<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>($r22);

        $r10 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.Context getBaseContext()>();

        $r23 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r10);

        $i0 = interfaceinvoke $r23.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("cardBrowserColumn1", 0);

        r0.<com.ichi2.anki.CardBrowser: int mColumn1Index> = $i0;

        $r24 = new com.ichi2.anki.CardBrowser$5;

        specialinvoke $r24.<com.ichi2.anki.CardBrowser$5: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        virtualinvoke $r16.<android.widget.Spinner: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>($r24);

        $r10 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.Context getBaseContext()>();

        $r23 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r10);

        $i0 = interfaceinvoke $r23.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("cardBrowserColumn2", 0);

        r0.<com.ichi2.anki.CardBrowser: int mColumn2Index> = $i0;

        $r15 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.view.View findViewById(int)>(2131755137);

        r25 = (android.widget.Spinner) $r15;

        $r22 = staticinvoke <android.widget.ArrayAdapter: android.widget.ArrayAdapter createFromResource(android.content.Context,int,int)>(r0, 2131296260, 17367048);

        virtualinvoke $r22.<android.widget.ArrayAdapter: void setDropDownViewResource(int)>(17367049);

        virtualinvoke r25.<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>($r22);

        $r26 = new com.ichi2.anki.CardBrowser$6;

        specialinvoke $r26.<com.ichi2.anki.CardBrowser$6: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        virtualinvoke r25.<android.widget.Spinner: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>($r26);

        $i0 = interfaceinvoke $r11.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("relativeCardBrowserFontSize", 100);

        $r8 = interfaceinvoke $r11.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("browserEditorFont", "");

        $r27 = new com.ichi2.anki.CardBrowser$MultiColumnListAdapter;

        $r19 = newarray (java.lang.String)[2];

        $r28 = <com.ichi2.anki.CardBrowser: java.lang.String[] COLUMN1_KEYS>;

        $i1 = r0.<com.ichi2.anki.CardBrowser: int mColumn1Index>;

        $r9 = $r28[$i1];

        $r19[0] = $r9;

        $r28 = <com.ichi2.anki.CardBrowser: java.lang.String[] COLUMN2_KEYS>;

        $i1 = r0.<com.ichi2.anki.CardBrowser: int mColumn2Index>;

        $r9 = $r28[$i1];

        $r19[1] = $r9;

        $r29 = newarray (int)[2];

        $r29[0] = 2131755143;

        $r29[1] = 2131755144;

        specialinvoke $r27.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: void <init>(com.ichi2.anki.CardBrowser,android.content.Context,int,java.lang.String[],int[],java.lang.String,int,java.lang.String)>(r0, r0, 2130903073, $r19, $r29, "flags", $i0, $r8);

        r0.<com.ichi2.anki.CardBrowser: com.ichi2.anki.CardBrowser$MultiColumnListAdapter mCardsAdapter> = $r27;

        $r21 = r0.<com.ichi2.anki.CardBrowser: android.widget.ListView mCardsListView>;

        $r27 = r0.<com.ichi2.anki.CardBrowser: com.ichi2.anki.CardBrowser$MultiColumnListAdapter mCardsAdapter>;

        virtualinvoke $r21.<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>($r27);

        $r21 = r0.<com.ichi2.anki.CardBrowser: android.widget.ListView mCardsListView>;

        $r30 = new com.ichi2.anki.CardBrowser$RenderOnScroll;

        specialinvoke $r30.<com.ichi2.anki.CardBrowser$RenderOnScroll: void <init>(com.ichi2.anki.CardBrowser,com.ichi2.anki.CardBrowser$1)>(r0, null);

        virtualinvoke $r21.<android.widget.ListView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)>($r30);

        $i0 = r0.<com.ichi2.anki.CardBrowser: int mColumn1Index>;

        virtualinvoke $r16.<android.widget.Spinner: void setSelection(int)>($i0);

        $i0 = r0.<com.ichi2.anki.CardBrowser: int mColumn2Index>;

        virtualinvoke r25.<android.widget.Spinner: void setSelection(int)>($i0);

        $r21 = r0.<com.ichi2.anki.CardBrowser: android.widget.ListView mCardsListView>;

        $r31 = new com.ichi2.anki.CardBrowser$7;

        specialinvoke $r31.<com.ichi2.anki.CardBrowser$7: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        virtualinvoke $r21.<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r31);

        $r21 = r0.<com.ichi2.anki.CardBrowser: android.widget.ListView mCardsListView>;

        $r32 = new com.ichi2.anki.CardBrowser$8;

        specialinvoke $r32.<com.ichi2.anki.CardBrowser$8: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        virtualinvoke $r21.<android.widget.ListView: void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener)>($r32);

        $r33 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.view.Window getWindow()>();

        virtualinvoke $r33.<android.view.Window: void setSoftInputMode(int)>(3);

        r0.<com.ichi2.anki.CardBrowser: java.lang.String mSearchTerms> = "";

        $r34 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.Intent getIntent()>();

        $l2 = virtualinvoke $r34.<android.content.Intent: long getLongExtra(java.lang.String,long)>("defaultDeckId", -1L);

        $i0 = specialinvoke r0.<com.ichi2.anki.CardBrowser: int getDeckPositionFromDeckId(long)>($l2);

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: void selectDropDownItem(int)>($i0);

        return;

     label18:
        $i0 = $i0 + 1;

        goto label06;

     label19:
        $z0 = 0;

        goto label16;

     label20:
        r2 := @caughtexception;

        $r35 = new java.lang.RuntimeException;

        specialinvoke $r35.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r35;

        catch org.json.JSONException from label04 to label05 with label20;
        catch org.json.JSONException from label07 to label08 with label20;
        catch org.json.JSONException from label10 to label11 with label20;
        catch org.json.JSONException from label12 to label13 with label20;
        catch org.json.JSONException from label14 to label15 with label20;
    }
    protected void onCreate(android.os.Bundle)
    {
        com.ichi2.anki.CardBrowser r0;
        android.os.Bundle $r1;
        android.view.View $r2;
        java.lang.Object[] $r3;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onCreate(android.os.Bundle)>($r1);

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("onCreate()", $r3);

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: void setContentView(int)>(2130903071);

        $r2 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.view.View findViewById(int)>(16908290);

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: void initNavigationDrawer(android.view.View)>($r2);

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: void startLoadingCollection()>();

        return;
    }
    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        com.ichi2.anki.CardBrowser r0;
        android.view.Menu $r1;
        boolean $z0;
        android.view.MenuInflater $r2;
        android.view.MenuItem $r3;
        com.ichi2.libanki.Collection $r4;
        org.json.JSONObject $r5;
        int $i0;
        com.ichi2.anki.CardBrowser$9 $r6;
        android.view.View $r7;
        android.support.v7.widget.SearchView $r8;
        com.ichi2.anki.CardBrowser$10 $r9;
        com.ichi2.anki.CardBrowser$11 $r10;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 := @parameter0: android.view.Menu;

        $z0 = 0;

        $r2 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.view.MenuInflater getMenuInflater()>();

        virtualinvoke $r2.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(2131820549, $r1);

        $r3 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755349);

        r0.<com.ichi2.anki.CardBrowser: android.view.MenuItem mSaveSearchItem> = $r3;

        $r3 = r0.<com.ichi2.anki.CardBrowser: android.view.MenuItem mSaveSearchItem>;

        interfaceinvoke $r3.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(0);

        $r3 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755350);

        r0.<com.ichi2.anki.CardBrowser: android.view.MenuItem mMySearchesItem> = $r3;

        $r4 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r5 = virtualinvoke $r4.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

        $r5 = virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("savedFilters");

        $r3 = r0.<com.ichi2.anki.CardBrowser: android.view.MenuItem mMySearchesItem>;

        if $r5 == null goto label1;

        $i0 = virtualinvoke $r5.<org.json.JSONObject: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

     label1:
        interfaceinvoke $r3.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>($z0);

        $r3 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755348);

        r0.<com.ichi2.anki.CardBrowser: android.view.MenuItem mSearchItem> = $r3;

        $r3 = r0.<com.ichi2.anki.CardBrowser: android.view.MenuItem mSearchItem>;

        $r6 = new com.ichi2.anki.CardBrowser$9;

        specialinvoke $r6.<com.ichi2.anki.CardBrowser$9: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        staticinvoke <android.support.v4.view.MenuItemCompat: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener)>($r3, $r6);

        $r3 = r0.<com.ichi2.anki.CardBrowser: android.view.MenuItem mSearchItem>;

        $r7 = staticinvoke <android.support.v4.view.MenuItemCompat: android.view.View getActionView(android.view.MenuItem)>($r3);

        $r8 = (android.support.v7.widget.SearchView) $r7;

        r0.<com.ichi2.anki.CardBrowser: android.support.v7.widget.SearchView mSearchView> = $r8;

        $r8 = r0.<com.ichi2.anki.CardBrowser: android.support.v7.widget.SearchView mSearchView>;

        $r9 = new com.ichi2.anki.CardBrowser$10;

        specialinvoke $r9.<com.ichi2.anki.CardBrowser$10: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        virtualinvoke $r8.<android.support.v7.widget.SearchView: void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener)>($r9);

        $r8 = r0.<com.ichi2.anki.CardBrowser: android.support.v7.widget.SearchView mSearchView>;

        $r10 = new com.ichi2.anki.CardBrowser$11;

        specialinvoke $r10.<com.ichi2.anki.CardBrowser$11: void <init>(com.ichi2.anki.CardBrowser)>(r0);

        virtualinvoke $r8.<android.support.v7.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)>($r10);

        $z0 = specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: boolean onCreateOptionsMenu(android.view.Menu)>($r1);

        return $z0;
    }
    protected void onDestroy()
    {
        com.ichi2.anki.CardBrowser r0;
        java.lang.Object[] $r1;
        android.content.BroadcastReceiver $r2;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("onDestroy()", $r1);

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onDestroy()>();

        $r2 = r0.<com.ichi2.anki.CardBrowser: android.content.BroadcastReceiver mUnmountReceiver>;

        if $r2 == null goto label1;

        $r2 = r0.<com.ichi2.anki.CardBrowser: android.content.BroadcastReceiver mUnmountReceiver>;

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

     label1:
        return;
    }
    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        com.ichi2.anki.CardBrowser r0;
        android.view.MenuItem $r1;
        android.content.Intent r2;
        java.util.HashMap r3;
        android.support.v7.app.ActionBarDrawerToggle $r4;
        boolean $z0;
        int $i0;
        android.support.v7.widget.SearchView $r5;
        java.lang.CharSequence $r6;
        java.lang.String $r7, $r14;
        com.ichi2.anki.dialogs.CardBrowserMySearchesDialog$MySearchesDialogListener $r8;
        com.ichi2.anki.dialogs.CardBrowserMySearchesDialog $r9;
        com.ichi2.libanki.Collection $r10;
        org.json.JSONObject $r11;
        java.util.Iterator $r12;
        java.lang.Object $r13;
        com.afollestad.materialdialogs.MaterialDialog$ListCallbackSingleChoice $r15;
        com.ichi2.anki.dialogs.CardBrowserOrderDialog $r16;
        android.content.res.Resources $r17;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 := @parameter0: android.view.MenuItem;

        $r4 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.support.v7.app.ActionBarDrawerToggle getDrawerToggle()>();

        $z0 = virtualinvoke $r4.<android.support.v7.app.ActionBarDrawerToggle: boolean onOptionsItemSelected(android.view.MenuItem)>($r1);

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 2131755347: goto label03;
            case 2131755348: goto label02;
            case 2131755349: goto label04;
            case 2131755350: goto label05;
            case 2131755351: goto label08;
            case 2131755352: goto label09;
            case 2131755353: goto label10;
            case 2131755354: goto label11;
            default: goto label02;
        };

     label02:
        $z0 = specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: boolean onOptionsItemSelected(android.view.MenuItem)>($r1);

        return $z0;

     label03:
        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/ichi2/anki/NoteEditor;");

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("CALLER", 7);

        $i0 = <com.ichi2.anim.ActivityTransitionAnimation: int LEFT>;

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: void startActivityForResultWithAnimation(android.content.Intent,int,int)>(r2, 1, $i0);

        return 1;

     label04:
        $r5 = r0.<com.ichi2.anki.CardBrowser: android.support.v7.widget.SearchView mSearchView>;

        $r6 = virtualinvoke $r5.<android.support.v7.widget.SearchView: java.lang.CharSequence getQuery()>();

        $r7 = interfaceinvoke $r6.<java.lang.CharSequence: java.lang.String toString()>();

        $r8 = r0.<com.ichi2.anki.CardBrowser: com.ichi2.anki.dialogs.CardBrowserMySearchesDialog$MySearchesDialogListener mMySearchesDialogListener>;

        $i0 = <com.ichi2.anki.dialogs.CardBrowserMySearchesDialog: int CARD_BROWSER_MY_SEARCHES_TYPE_SAVE>;

        $r9 = staticinvoke <com.ichi2.anki.dialogs.CardBrowserMySearchesDialog: com.ichi2.anki.dialogs.CardBrowserMySearchesDialog newInstance(java.util.HashMap,com.ichi2.anki.dialogs.CardBrowserMySearchesDialog$MySearchesDialogListener,java.lang.String,int)>(null, $r8, $r7, $i0);

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: void showDialogFragment(android.support.v4.app.DialogFragment)>($r9);

        return 1;

     label05:
        $r10 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r11 = virtualinvoke $r10.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

        $r11 = virtualinvoke $r11.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("savedFilters");

        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        if $r11 == null goto label07;

        $r12 = virtualinvoke $r11.<org.json.JSONObject: java.util.Iterator keys()>();

     label06:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r13;

        $r14 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String optString(java.lang.String)>($r7);

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r14);

        goto label06;

     label07:
        $r8 = r0.<com.ichi2.anki.CardBrowser: com.ichi2.anki.dialogs.CardBrowserMySearchesDialog$MySearchesDialogListener mMySearchesDialogListener>;

        $i0 = <com.ichi2.anki.dialogs.CardBrowserMySearchesDialog: int CARD_BROWSER_MY_SEARCHES_TYPE_LIST>;

        $r9 = staticinvoke <com.ichi2.anki.dialogs.CardBrowserMySearchesDialog: com.ichi2.anki.dialogs.CardBrowserMySearchesDialog newInstance(java.util.HashMap,com.ichi2.anki.dialogs.CardBrowserMySearchesDialog$MySearchesDialogListener,java.lang.String,int)>(r3, $r8, "", $i0);

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: void showDialogFragment(android.support.v4.app.DialogFragment)>($r9);

        return 1;

     label08:
        $i0 = r0.<com.ichi2.anki.CardBrowser: int mOrder>;

        $z0 = r0.<com.ichi2.anki.CardBrowser: boolean mOrderAsc>;

        $r15 = r0.<com.ichi2.anki.CardBrowser: com.afollestad.materialdialogs.MaterialDialog$ListCallbackSingleChoice mOrderDialogListener>;

        $r16 = staticinvoke <com.ichi2.anki.dialogs.CardBrowserOrderDialog: com.ichi2.anki.dialogs.CardBrowserOrderDialog newInstance(int,boolean,com.afollestad.materialdialogs.MaterialDialog$ListCallbackSingleChoice)>($i0, $z0, $r15);

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: void showDialogFragment(android.support.v4.app.DialogFragment)>($r16);

        return 1;

     label09:
        r0.<com.ichi2.anki.CardBrowser: java.lang.String mSearchTerms> = "tag:marked";

        $r5 = r0.<com.ichi2.anki.CardBrowser: android.support.v7.widget.SearchView mSearchView>;

        virtualinvoke $r5.<android.support.v7.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)>("", 0);

        $r5 = r0.<com.ichi2.anki.CardBrowser: android.support.v7.widget.SearchView mSearchView>;

        $r17 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r17.<android.content.res.Resources: java.lang.String getString(int)>(2131230802);

        virtualinvoke $r5.<android.support.v7.widget.SearchView: void setQueryHint(java.lang.CharSequence)>($r7);

        specialinvoke r0.<com.ichi2.anki.CardBrowser: void searchCards()>();

        return 1;

     label10:
        r0.<com.ichi2.anki.CardBrowser: java.lang.String mSearchTerms> = "is:suspended";

        $r5 = r0.<com.ichi2.anki.CardBrowser: android.support.v7.widget.SearchView mSearchView>;

        virtualinvoke $r5.<android.support.v7.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)>("", 0);

        $r5 = r0.<com.ichi2.anki.CardBrowser: android.support.v7.widget.SearchView mSearchView>;

        $r17 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r17.<android.content.res.Resources: java.lang.String getString(int)>(2131230803);

        virtualinvoke $r5.<android.support.v7.widget.SearchView: void setQueryHint(java.lang.CharSequence)>($r7);

        specialinvoke r0.<com.ichi2.anki.CardBrowser: void searchCards()>();

        return 1;

     label11:
        specialinvoke r0.<com.ichi2.anki.CardBrowser: void showTagsDialog()>();

        return 1;
    }
    protected void onResume()
    {
        com.ichi2.anki.CardBrowser r0;
        java.lang.Object[] $r1;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("onResume()", $r1);

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onResume()>();

        virtualinvoke r0.<com.ichi2.anki.CardBrowser: void selectNavigationItem(int)>(2131755373);

        return;
    }
    protected void onStop()
    {
        com.ichi2.anki.CardBrowser r0;
        boolean $z0;
        java.lang.Object[] $r1;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("onStop()", $r1);

        staticinvoke <com.ichi2.async.DeckTask: void cancelTask(int)>(30);

        staticinvoke <com.ichi2.async.DeckTask: void cancelTask(int)>(37);

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onStop()>();

        $z0 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: boolean isFinishing()>();

        if $z0 != 0 goto label1;

        staticinvoke <com.ichi2.widget.WidgetStatus: void update(android.content.Context)>(r0);

        staticinvoke <com.ichi2.anki.UIUtils: void saveCollectionInBackground(android.content.Context)>(r0);

     label1:
        return;
    }
    public void selectDropDownItem(int)
    {
        com.ichi2.anki.CardBrowser r0;
        int $i0;
        android.widget.Spinner $r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        org.json.JSONObject r4;
        java.lang.String $r5;
        com.ichi2.libanki.Collection $r6;
        com.ichi2.libanki.Decks $r7;
        long $l1;
        java.lang.StringBuilder $r8;
        org.json.JSONException r9, r11;
        java.lang.RuntimeException $r10;
        java.lang.Object[] $r12;

        r0 := @this: com.ichi2.anki.CardBrowser;

        $i0 := @parameter0: int;

        $r1 = r0.<com.ichi2.anki.CardBrowser: android.widget.Spinner mActionBarSpinner>;

        virtualinvoke $r1.<android.widget.Spinner: void setSelection(int)>($i0);

        if $i0 != 0 goto label2;

        r0.<com.ichi2.anki.CardBrowser: java.lang.String mRestrictOnDeck> = "";

     label1:
        specialinvoke r0.<com.ichi2.anki.CardBrowser: void searchCards()>();

        return;

     label2:
        $r2 = r0.<com.ichi2.anki.CardBrowser: java.util.ArrayList mDropDownDecks>;

        $i0 = $i0 + -1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r4 = (org.json.JSONObject) $r3;

     label3:
        $r5 = virtualinvoke r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

     label4:
        $r6 = virtualinvoke r0.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r7 = virtualinvoke $r6.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l1 = virtualinvoke r4.<org.json.JSONObject: long getLong(java.lang.String)>("id");

        virtualinvoke $r7.<com.ichi2.libanki.Decks: void select(long)>($l1);

     label5:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deck:\"");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.ichi2.anki.CardBrowser: java.lang.String mRestrictOnDeck> = $r5;

        goto label1;

     label6:
        r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>()>();

        throw $r10;

     label7:
        r11 := @caughtexception;

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r11, "Could not get ID from deck", $r12);

        goto label5;

        catch org.json.JSONException from label3 to label4 with label6;
        catch org.json.JSONException from label4 to label5 with label7;
    }
