com.ichi2.anki.NoteEditor$EditNoteTypeListener extends java.lang.Object implements android.widget.AdapterView$OnItemSelectedListener
final com.ichi2.anki.NoteEditor this$0
    private void <init>(com.ichi2.anki.NoteEditor)
    {
        com.ichi2.anki.NoteEditor$EditNoteTypeListener r0;
        com.ichi2.anki.NoteEditor $r1;

        r0 := @this: com.ichi2.anki.NoteEditor$EditNoteTypeListener;

        $r1 := @parameter0: com.ichi2.anki.NoteEditor;

        r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void <init>(com.ichi2.anki.NoteEditor, com.ichi2.anki.NoteEditor$1)
    {
        com.ichi2.anki.NoteEditor$EditNoteTypeListener r0;
        com.ichi2.anki.NoteEditor $r1;
        com.ichi2.anki.NoteEditor$1 $r2;

        r0 := @this: com.ichi2.anki.NoteEditor$EditNoteTypeListener;

        $r1 := @parameter0: com.ichi2.anki.NoteEditor;

        $r2 := @parameter1: com.ichi2.anki.NoteEditor$1;

        specialinvoke r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: void <init>(com.ichi2.anki.NoteEditor)>($r1);

        return;
    }
    public void onItemSelected(android.widget.AdapterView, android.view.View, int, long)
    {
        com.ichi2.anki.NoteEditor$EditNoteTypeListener r0;
        android.widget.AdapterView r1;
        android.view.View $r2;
        int $i0, $i4;
        long $l1, $l2;
        com.ichi2.libanki.Card $r3;
        org.json.JSONObject $r4;
        com.ichi2.anki.NoteEditor $r5, $r21;
        com.ichi2.libanki.Collection $r6;
        com.ichi2.libanki.Models $r7;
        java.util.ArrayList $r8;
        java.lang.Object $r9;
        java.lang.Long $r10;
        byte $b3;
        java.util.HashMap $r11;
        com.ichi2.libanki.Note $r12;
        java.lang.String[][] $r13;
        java.util.Map $r14;
        java.lang.Integer $r15, $r16;
        org.json.JSONException r17, r20;
        java.lang.RuntimeException $r18;
        org.json.JSONArray $r19;
        java.util.List $r22;
        android.widget.Spinner $r23;

        r0 := @this: com.ichi2.anki.NoteEditor$EditNoteTypeListener;

        r1 := @parameter0: android.widget.AdapterView;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $l1 := @parameter3: long;

        $r3 = <com.ichi2.anki.NoteEditor: com.ichi2.libanki.Card mCurrentEditedCard>;

     label01:
        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Card: org.json.JSONObject model()>();

        $l1 = virtualinvoke $r4.<org.json.JSONObject: long getLong(java.lang.String)>("id");

     label02:
        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r6 = virtualinvoke $r5.<com.ichi2.anki.NoteEditor: com.ichi2.libanki.Collection getCol()>();

        $r7 = virtualinvoke $r6.<com.ichi2.libanki.Collection: com.ichi2.libanki.Models getModels()>();

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r8 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.ArrayList access$3200(com.ichi2.anki.NoteEditor)>($r5);

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r10 = (java.lang.Long) $r9;

        $l2 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        $r4 = virtualinvoke $r7.<com.ichi2.libanki.Models: org.json.JSONObject get(long)>($l2);

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r8 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.ArrayList access$3200(com.ichi2.anki.NoteEditor)>($r5);

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r10 = (java.lang.Long) $r9;

        $l2 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        $b3 = $l2 cmp $l1;

        if $b3 == 0 goto label17;

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        staticinvoke <com.ichi2.anki.NoteEditor: java.util.Map access$2702(com.ichi2.anki.NoteEditor,java.util.Map)>($r5, $r11);

        $i0 = 0;

     label03:
        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r12 = staticinvoke <com.ichi2.anki.NoteEditor: com.ichi2.libanki.Note access$300(com.ichi2.anki.NoteEditor)>($r5);

        $r13 = virtualinvoke $r12.<com.ichi2.libanki.Note: java.lang.String[][] items()>();

        $i4 = lengthof $r13;

        if $i0 >= $i4 goto label05;

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r14 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.Map access$2700(com.ichi2.anki.NoteEditor)>($r5);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16);

        $i0 = $i0 + 1;

        goto label03;

     label04:
        r17 := @caughtexception;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r17);

        throw $r18;

     label05:
        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        staticinvoke <com.ichi2.anki.NoteEditor: java.util.Map access$3502(com.ichi2.anki.NoteEditor,java.util.Map)>($r5, $r11);

        $i0 = 0;

     label06:
        $r19 = virtualinvoke $r4.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("tmpls");

        $i4 = virtualinvoke $r19.<org.json.JSONArray: int length()>();

     label07:
        if $i0 >= $i4 goto label16;

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

     label08:
        $r12 = staticinvoke <com.ichi2.anki.NoteEditor: com.ichi2.libanki.Note access$300(com.ichi2.anki.NoteEditor)>($r5);

        $r8 = virtualinvoke $r12.<com.ichi2.libanki.Note: java.util.ArrayList cards()>();

        $i4 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label09:
        if $i0 >= $i4 goto label12;

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

     label10:
        $r14 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.Map access$3500(com.ichi2.anki.NoteEditor)>($r5);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16);

     label11:
        $i0 = $i0 + 1;

        goto label06;

     label12:
        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

     label13:
        $r14 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.Map access$3500(com.ichi2.anki.NoteEditor)>($r5);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, null);

     label14:
        goto label11;

     label15:
        r20 := @caughtexception;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r20);

        throw $r18;

     label16:
        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        staticinvoke <com.ichi2.anki.NoteEditor: void access$3000(com.ichi2.anki.NoteEditor,org.json.JSONObject)>($r5, $r4);

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r21 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r12 = staticinvoke <com.ichi2.anki.NoteEditor: com.ichi2.libanki.Note access$300(com.ichi2.anki.NoteEditor)>($r21);

        $r22 = virtualinvoke $r12.<com.ichi2.libanki.Note: java.util.List getTags()>();

        staticinvoke <com.ichi2.anki.NoteEditor: java.util.List access$2302(com.ichi2.anki.NoteEditor,java.util.List)>($r5, $r22);

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        staticinvoke <com.ichi2.anki.NoteEditor: void access$2400(com.ichi2.anki.NoteEditor)>($r5);

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r2 = virtualinvoke $r5.<com.ichi2.anki.NoteEditor: android.view.View findViewById(int)>(2131755238);

        virtualinvoke $r2.<android.view.View: void setEnabled(boolean)>(0);

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r23 = staticinvoke <com.ichi2.anki.NoteEditor: android.widget.Spinner access$3600(com.ichi2.anki.NoteEditor)>($r5);

        virtualinvoke $r23.<android.widget.Spinner: void setEnabled(boolean)>(0);

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r8 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.ArrayList access$1600(com.ichi2.anki.NoteEditor)>($r5);

        $r3 = <com.ichi2.anki.NoteEditor: com.ichi2.libanki.Card mCurrentEditedCard>;

        $l1 = virtualinvoke $r3.<com.ichi2.libanki.Card: long getDid()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int indexOf(java.lang.Object)>($r10);

        if $i0 == -1 goto label18;

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r23 = staticinvoke <com.ichi2.anki.NoteEditor: android.widget.Spinner access$3600(com.ichi2.anki.NoteEditor)>($r5);

        virtualinvoke $r23.<android.widget.Spinner: void setSelection(int,boolean)>($i0, 0);

        return;

     label17:
        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        staticinvoke <com.ichi2.anki.NoteEditor: void access$3700(com.ichi2.anki.NoteEditor)>($r5);

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r3 = <com.ichi2.anki.NoteEditor: com.ichi2.libanki.Card mCurrentEditedCard>;

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Card: org.json.JSONObject model()>();

        staticinvoke <com.ichi2.anki.NoteEditor: void access$3800(com.ichi2.anki.NoteEditor,org.json.JSONObject)>($r5, $r4);

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r2 = virtualinvoke $r5.<com.ichi2.anki.NoteEditor: android.view.View findViewById(int)>(2131755238);

        virtualinvoke $r2.<android.view.View: void setEnabled(boolean)>(1);

        $r5 = r0.<com.ichi2.anki.NoteEditor$EditNoteTypeListener: com.ichi2.anki.NoteEditor this$0>;

        $r23 = staticinvoke <com.ichi2.anki.NoteEditor: android.widget.Spinner access$3600(com.ichi2.anki.NoteEditor)>($r5);

        virtualinvoke $r23.<android.widget.Spinner: void setEnabled(boolean)>(1);

     label18:
        return;

        catch org.json.JSONException from label01 to label02 with label04;
        catch org.json.JSONException from label06 to label07 with label15;
        catch org.json.JSONException from label08 to label09 with label15;
        catch org.json.JSONException from label10 to label11 with label15;
        catch org.json.JSONException from label13 to label14 with label15;
    }
    public void onNothingSelected(android.widget.AdapterView)
    {
        com.ichi2.anki.NoteEditor$EditNoteTypeListener r0;
        android.widget.AdapterView r1;

        r0 := @this: com.ichi2.anki.NoteEditor$EditNoteTypeListener;

        r1 := @parameter0: android.widget.AdapterView;

        return;
    }
