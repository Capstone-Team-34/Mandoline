com.ichi2.anki.Reviewer$SuspendProvider extends android.support.v4.view.ActionProvider implements android.view.MenuItem$OnMenuItemClickListener
final com.ichi2.anki.Reviewer this$0
    public void <init>(com.ichi2.anki.Reviewer, android.content.Context)
    {
        com.ichi2.anki.Reviewer$SuspendProvider r0;
        com.ichi2.anki.Reviewer $r1;
        android.content.Context $r2;

        r0 := @this: com.ichi2.anki.Reviewer$SuspendProvider;

        $r1 := @parameter0: com.ichi2.anki.Reviewer;

        $r2 := @parameter1: android.content.Context;

        r0.<com.ichi2.anki.Reviewer$SuspendProvider: com.ichi2.anki.Reviewer this$0> = $r1;

        specialinvoke r0.<android.support.v4.view.ActionProvider: void <init>(android.content.Context)>($r2);

        return;
    }
    public boolean hasSubMenu()
    {
        com.ichi2.anki.Reviewer$SuspendProvider r0;
        com.ichi2.libanki.Collection$DismissType $r1;
        boolean $z0;
        com.ichi2.anki.Reviewer $r2;

        r0 := @this: com.ichi2.anki.Reviewer$SuspendProvider;

        $r2 = r0.<com.ichi2.anki.Reviewer$SuspendProvider: com.ichi2.anki.Reviewer this$0>;

        $r1 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType SUSPEND_NOTE>;

        $z0 = staticinvoke <com.ichi2.anki.Reviewer: boolean access$200(com.ichi2.anki.Reviewer,com.ichi2.libanki.Collection$DismissType)>($r2, $r1);

        return $z0;
    }
    public android.view.View onCreateActionView()
    {
        com.ichi2.anki.Reviewer$SuspendProvider r0;

        r0 := @this: com.ichi2.anki.Reviewer$SuspendProvider;

        return null;
    }
    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.ichi2.anki.Reviewer$SuspendProvider r0;
        android.view.MenuItem $r1;
        int $i0;
        com.ichi2.anki.Reviewer $r2;
        com.ichi2.libanki.Collection$DismissType $r3;

        r0 := @this: com.ichi2.anki.Reviewer$SuspendProvider;

        $r1 := @parameter0: android.view.MenuItem;

        $i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 2131755403: goto label2;
            case 2131755404: goto label3;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $r2 = r0.<com.ichi2.anki.Reviewer$SuspendProvider: com.ichi2.anki.Reviewer this$0>;

        $r3 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType SUSPEND_CARD>;

        virtualinvoke $r2.<com.ichi2.anki.Reviewer: void dismiss(com.ichi2.libanki.Collection$DismissType)>($r3);

        return 1;

     label3:
        $r2 = r0.<com.ichi2.anki.Reviewer$SuspendProvider: com.ichi2.anki.Reviewer this$0>;

        $r3 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType SUSPEND_NOTE>;

        virtualinvoke $r2.<com.ichi2.anki.Reviewer: void dismiss(com.ichi2.libanki.Collection$DismissType)>($r3);

        return 1;
    }
    public void onPrepareSubMenu(android.view.SubMenu)
    {
        com.ichi2.anki.Reviewer$SuspendProvider r0;
        android.view.SubMenu $r1;
        com.ichi2.anki.Reviewer $r2;
        android.view.MenuInflater $r3;
        int i0, $i1;
        android.view.MenuItem $r4;

        r0 := @this: com.ichi2.anki.Reviewer$SuspendProvider;

        $r1 := @parameter0: android.view.SubMenu;

        interfaceinvoke $r1.<android.view.SubMenu: void clear()>();

        $r2 = r0.<com.ichi2.anki.Reviewer$SuspendProvider: com.ichi2.anki.Reviewer this$0>;

        $r3 = virtualinvoke $r2.<com.ichi2.anki.Reviewer: android.view.MenuInflater getMenuInflater()>();

        virtualinvoke $r3.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(2131820559, $r1);

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r1.<android.view.SubMenu: int size()>();

        if i0 >= $i1 goto label2;

        $r4 = interfaceinvoke $r1.<android.view.SubMenu: android.view.MenuItem getItem(int)>(i0);

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>(r0);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
