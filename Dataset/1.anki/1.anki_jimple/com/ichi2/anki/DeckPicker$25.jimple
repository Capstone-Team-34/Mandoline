com.ichi2.anki.DeckPicker$25 extends com.ichi2.async.DeckTask$TaskListener
private boolean removingCurrent
final com.ichi2.anki.DeckPicker this$0
final long val$did
    void <init>(com.ichi2.anki.DeckPicker, long)
    {
        com.ichi2.anki.DeckPicker$25 r0;
        com.ichi2.anki.DeckPicker $r1;
        long $l0;

        r0 := @this: com.ichi2.anki.DeckPicker$25;

        $r1 := @parameter0: com.ichi2.anki.DeckPicker;

        $l0 := @parameter1: long;

        r0.<com.ichi2.anki.DeckPicker$25: com.ichi2.anki.DeckPicker this$0> = $r1;

        r0.<com.ichi2.anki.DeckPicker$25: long val$did> = $l0;

        specialinvoke r0.<com.ichi2.async.DeckTask$TaskListener: void <init>()>();

        return;
    }
    public void onCancelled()
    {
        com.ichi2.anki.DeckPicker$25 r0;

        r0 := @this: com.ichi2.anki.DeckPicker$25;

        return;
    }
    public void onPostExecute(com.ichi2.async.DeckTask$TaskData)
    {
        com.ichi2.anki.DeckPicker$25 r0;
        com.ichi2.async.DeckTask$TaskData $r1;
        java.lang.Exception r2;
        com.ichi2.anki.DeckPicker $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        com.afollestad.materialdialogs.MaterialDialog $r5;
        com.ichi2.libanki.Collection $r6;
        java.lang.Object[] $r7;

        r0 := @this: com.ichi2.anki.DeckPicker$25;

        $r1 := @parameter0: com.ichi2.async.DeckTask$TaskData;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.ichi2.anki.DeckPicker$25: com.ichi2.anki.DeckPicker this$0>;

        $r4 = $r3.<com.ichi2.anki.DeckPicker: java.lang.Boolean mFragmented>;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label5;

        $z0 = r0.<com.ichi2.anki.DeckPicker$25: boolean removingCurrent>;

        if $z0 == 0 goto label5;

        $r3 = r0.<com.ichi2.anki.DeckPicker$25: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: void access$000(com.ichi2.anki.DeckPicker)>($r3);

        $r3 = r0.<com.ichi2.anki.DeckPicker$25: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: void access$800(com.ichi2.anki.DeckPicker,boolean)>($r3, 0);

     label2:
        $r3 = r0.<com.ichi2.anki.DeckPicker$25: com.ichi2.anki.DeckPicker this$0>;

        $r5 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r3);

        if $r5 == null goto label4;

        $r3 = r0.<com.ichi2.anki.DeckPicker$25: com.ichi2.anki.DeckPicker this$0>;

        $r5 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r3);

        $z0 = virtualinvoke $r5.<com.afollestad.materialdialogs.MaterialDialog: boolean isShowing()>();

        if $z0 == 0 goto label4;

     label3:
        $r3 = r0.<com.ichi2.anki.DeckPicker$25: com.ichi2.anki.DeckPicker this$0>;

        $r5 = staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$500(com.ichi2.anki.DeckPicker)>($r3);

        virtualinvoke $r5.<com.afollestad.materialdialogs.MaterialDialog: void dismiss()>();

     label4:
        $r3 = r0.<com.ichi2.anki.DeckPicker$25: com.ichi2.anki.DeckPicker this$0>;

        $r6 = virtualinvoke $r3.<com.ichi2.anki.DeckPicker: com.ichi2.libanki.Collection getCol()>();

        virtualinvoke $r6.<com.ichi2.libanki.Collection: void clearUndo()>();

        return;

     label5:
        $r3 = r0.<com.ichi2.anki.DeckPicker$25: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: void access$000(com.ichi2.anki.DeckPicker)>($r3);

        goto label2;

     label6:
        r2 := @caughtexception;

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "onPostExecute - Exception dismissing dialog", $r7);

        goto label4;

        catch java.lang.Exception from label3 to label4 with label6;
    }
    public void onPreExecute()
    {
        com.ichi2.anki.DeckPicker$25 r0;
        com.ichi2.anki.DeckPicker $r1, $r2, $r3;
        android.content.res.Resources $r4;
        java.lang.String $r5;
        com.afollestad.materialdialogs.MaterialDialog $r6;
        long $l0, $l1;
        com.ichi2.libanki.Collection $r7;
        com.ichi2.libanki.Decks $r8;
        org.json.JSONObject $r9;
        byte $b2;

        r0 := @this: com.ichi2.anki.DeckPicker$25;

        $r1 = r0.<com.ichi2.anki.DeckPicker$25: com.ichi2.anki.DeckPicker this$0>;

        $r2 = r0.<com.ichi2.anki.DeckPicker$25: com.ichi2.anki.DeckPicker this$0>;

        $r3 = r0.<com.ichi2.anki.DeckPicker$25: com.ichi2.anki.DeckPicker this$0>;

        $r4 = virtualinvoke $r3.<com.ichi2.anki.DeckPicker: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>(2131230963);

        $r6 = staticinvoke <com.ichi2.themes.StyledProgressDialog: com.afollestad.materialdialogs.MaterialDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r2, "", $r5, 0);

        staticinvoke <com.ichi2.anki.DeckPicker: com.afollestad.materialdialogs.MaterialDialog access$502(com.ichi2.anki.DeckPicker,com.afollestad.materialdialogs.MaterialDialog)>($r1, $r6);

        $l0 = r0.<com.ichi2.anki.DeckPicker$25: long val$did>;

        $r1 = r0.<com.ichi2.anki.DeckPicker$25: com.ichi2.anki.DeckPicker this$0>;

        $r7 = virtualinvoke $r1.<com.ichi2.anki.DeckPicker: com.ichi2.libanki.Collection getCol()>();

        $r8 = virtualinvoke $r7.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r9 = virtualinvoke $r8.<com.ichi2.libanki.Decks: org.json.JSONObject current()>();

        $l1 = virtualinvoke $r9.<org.json.JSONObject: long optLong(java.lang.String)>("id");

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label1;

        r0.<com.ichi2.anki.DeckPicker$25: boolean removingCurrent> = 1;

     label1:
        return;
    }
    public transient void onProgressUpdate(com.ichi2.async.DeckTask$TaskData[])
    {
        com.ichi2.anki.DeckPicker$25 r0;
        com.ichi2.async.DeckTask$TaskData[] $r1;

        r0 := @this: com.ichi2.anki.DeckPicker$25;

        $r1 := @parameter0: com.ichi2.async.DeckTask$TaskData[];

        return;
    }
