com.ichi2.anki.NoteEditor$JSONNameComparator extends java.lang.Object implements java.util.Comparator
final com.ichi2.anki.NoteEditor this$0
    public void <init>(com.ichi2.anki.NoteEditor)
    {
        com.ichi2.anki.NoteEditor$JSONNameComparator r0;
        com.ichi2.anki.NoteEditor $r1;

        r0 := @this: com.ichi2.anki.NoteEditor$JSONNameComparator;

        $r1 := @parameter0: com.ichi2.anki.NoteEditor;

        r0.<com.ichi2.anki.NoteEditor$JSONNameComparator: com.ichi2.anki.NoteEditor this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.ichi2.anki.NoteEditor$JSONNameComparator r0;
        int $i0;
        java.lang.Object $r1, $r2;
        org.json.JSONObject $r3, $r4;

        r0 := @this: com.ichi2.anki.NoteEditor$JSONNameComparator;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (org.json.JSONObject) $r1;

        $r4 = (org.json.JSONObject) $r2;

        $i0 = virtualinvoke r0.<com.ichi2.anki.NoteEditor$JSONNameComparator: int compare(org.json.JSONObject,org.json.JSONObject)>($r3, $r4);

        return $i0;
    }
    public int compare(org.json.JSONObject, org.json.JSONObject)
    {
        com.ichi2.anki.NoteEditor$JSONNameComparator r0;
        org.json.JSONObject $r1, $r2;
        org.json.JSONException r3;
        java.lang.String $r4, $r7;
        java.lang.String[] $r5, $r6;
        int i0, $i1, $i2;
        java.lang.RuntimeException $r8;

        r0 := @this: com.ichi2.anki.NoteEditor$JSONNameComparator;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 := @parameter1: org.json.JSONObject;

     label1:
        $r4 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("::");

        $r4 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("::");

     label2:
        i0 = 0;

     label3:
        $i1 = lengthof $r5;

        $i2 = lengthof $r6;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        if i0 >= $i1 goto label6;

        $r4 = $r5[i0];

        $r7 = $r6[i0];

        $i1 = virtualinvoke $r4.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r7);

        if $i1 == 0 goto label5;

        return $i1;

     label4:
        r3 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r8;

     label5:
        i0 = i0 + 1;

        goto label3;

     label6:
        i0 = lengthof $r5;

        $i1 = lengthof $r6;

        if i0 >= $i1 goto label7;

        return -1;

     label7:
        i0 = lengthof $r5;

        $i1 = lengthof $r6;

        if i0 <= $i1 goto label8;

        return 1;

     label8:
        return 0;

        catch org.json.JSONException from label1 to label2 with label4;
    }
