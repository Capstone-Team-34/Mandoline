com.ichi2.anki.AnkiDroidApp extends android.app.Application
public static final int CHECK_DB_AT_VERSION
public static final int CHECK_PREFERENCES_AT_VERSION
private static int DEFAULT_SWIPE_MIN_DISTANCE
private static int DEFAULT_SWIPE_THRESHOLD_VELOCITY
public static final java.lang.String FEEDBACK_REPORT_ALWAYS
public static final java.lang.String FEEDBACK_REPORT_ASK
public static final java.lang.String FEEDBACK_REPORT_NEVER
public static final java.lang.String TAG
public static final java.lang.String XML_CUSTOM_NAMESPACE
private static com.ichi2.anki.AnkiDroidApp sInstance
public static int sSwipeMinDistance
public static int sSwipeThresholdVelocity
    static void <clinit>()
    {
        <com.ichi2.anki.AnkiDroidApp: int sSwipeMinDistance> = -1;

        <com.ichi2.anki.AnkiDroidApp: int sSwipeThresholdVelocity> = -1;

        return;
    }
    public void <init>()
    {
        com.ichi2.anki.AnkiDroidApp r0;

        r0 := @this: com.ichi2.anki.AnkiDroidApp;

        specialinvoke r0.<android.app.Application: void <init>()>();

        return;
    }
    public static android.content.res.Resources getAppResources()
    {
        android.content.res.Resources $r0;
        com.ichi2.anki.AnkiDroidApp $r1;

        $r1 = <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp sInstance>;

        $r0 = virtualinvoke $r1.<com.ichi2.anki.AnkiDroidApp: android.content.res.Resources getResources()>();

        return $r0;
    }
    public static java.lang.String getCacheStorageDirectory()
    {
        com.ichi2.anki.AnkiDroidApp $r0;
        java.io.File $r1;
        java.lang.String $r2;

        $r0 = <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp sInstance>;

        $r1 = virtualinvoke $r0.<com.ichi2.anki.AnkiDroidApp: java.io.File getCacheDir()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r2;
    }
    private static java.lang.String getExceptionHash(java.lang.Throwable)
    {
        java.lang.Throwable $r0;
        java.lang.StackTraceElement r1;
        java.lang.StringBuilder r2;
        int $i0, $i1;
        java.lang.StackTraceElement[] $r3;
        java.lang.String $r4;

        $r0 := @parameter0: java.lang.Throwable;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

     label1:
        if $r0 == null goto label4;

        $r3 = virtualinvoke $r0.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        r1 = $r3[$i1];

        $r4 = virtualinvoke r1.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke r1.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r0 = virtualinvoke $r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label4:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        return $r4;
    }
    public static java.lang.String getFeedbackUrl()
    {
        boolean $z0;
        com.ichi2.anki.AnkiDroidApp $r0;
        android.content.res.Resources $r1;
        java.lang.String $r2;

        $z0 = staticinvoke <com.ichi2.anki.AnkiDroidApp: boolean isCurrentLanguage(java.lang.String)>("ja");

        if $z0 == 0 goto label1;

        $r0 = <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp sInstance>;

        $r1 = virtualinvoke $r0.<com.ichi2.anki.AnkiDroidApp: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>(2131231541);

        return $r2;

     label1:
        $r0 = <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp sInstance>;

        $r1 = virtualinvoke $r0.<com.ichi2.anki.AnkiDroidApp: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>(2131231540);

        return $r2;
    }
    public static com.ichi2.anki.AnkiDroidApp getInstance()
    {
        com.ichi2.anki.AnkiDroidApp r0;

        r0 = <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp sInstance>;

        return r0;
    }
    public static java.lang.String getManualUrl()
    {
        boolean $z0;
        com.ichi2.anki.AnkiDroidApp $r0;
        android.content.res.Resources $r1;
        java.lang.String $r2;

        $z0 = staticinvoke <com.ichi2.anki.AnkiDroidApp: boolean isCurrentLanguage(java.lang.String)>("ja");

        if $z0 == 0 goto label1;

        $r0 = <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp sInstance>;

        $r1 = virtualinvoke $r0.<com.ichi2.anki.AnkiDroidApp: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>(2131231545);

        return $r2;

     label1:
        $r0 = <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp sInstance>;

        $r1 = virtualinvoke $r0.<com.ichi2.anki.AnkiDroidApp: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>(2131231543);

        return $r2;
    }
    public static android.content.SharedPreferences getSharedPrefs(android.content.Context)
    {
        android.content.Context $r0;
        android.content.SharedPreferences $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r0);

        return $r1;
    }
    public static boolean initiateGestures(android.content.SharedPreferences)
    {
        android.content.SharedPreferences $r0;
        float f0, $f1;
        boolean $z0;
        java.lang.Boolean $r1;
        int $i0;

        $r0 := @parameter0: android.content.SharedPreferences;

        $z0 = interfaceinvoke $r0.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("gestures", 0);

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke $r0.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("swipeSensitivity", 100);

        if $i0 == 100 goto label2;

        f0 = (float) $i0;

        f0 = 100.0F / f0;

        $i0 = <com.ichi2.anki.AnkiDroidApp: int DEFAULT_SWIPE_MIN_DISTANCE>;

        $f1 = (float) $i0;

        $f1 = $f1 * f0;

        $f1 = $f1 + 0.5F;

        $i0 = (int) $f1;

        <com.ichi2.anki.AnkiDroidApp: int sSwipeMinDistance> = $i0;

        $i0 = <com.ichi2.anki.AnkiDroidApp: int DEFAULT_SWIPE_THRESHOLD_VELOCITY>;

        $f1 = (float) $i0;

        f0 = $f1 * f0;

        f0 = f0 + 0.5F;

        $i0 = (int) f0;

        <com.ichi2.anki.AnkiDroidApp: int sSwipeThresholdVelocity> = $i0;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $i0 = <com.ichi2.anki.AnkiDroidApp: int DEFAULT_SWIPE_MIN_DISTANCE>;

        <com.ichi2.anki.AnkiDroidApp: int sSwipeMinDistance> = $i0;

        $i0 = <com.ichi2.anki.AnkiDroidApp: int DEFAULT_SWIPE_THRESHOLD_VELOCITY>;

        <com.ichi2.anki.AnkiDroidApp: int sSwipeThresholdVelocity> = $i0;

        goto label1;
    }
    private static boolean isCurrentLanguage(java.lang.String)
    {
        java.lang.String $r0, $r3;
        com.ichi2.anki.AnkiDroidApp $r1;
        android.content.SharedPreferences $r2;
        boolean $z0;
        java.util.Locale $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp sInstance>;

        $r2 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r1);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("language", "");

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r3 = virtualinvoke $r4.<java.util.Locale: java.lang.String getLanguage()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    public static boolean isSdCardMounted()
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 = "mounted";

        $r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }
    public static void sendExceptionReport(java.lang.Throwable, java.lang.String)
    {
        java.lang.Throwable $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <com.ichi2.anki.AnkiDroidApp: void sendExceptionReport(java.lang.Throwable,java.lang.String,java.lang.String)>($r0, $r1, null);

        return;
    }
    public static void sendExceptionReport(java.lang.Throwable, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r0;
        java.lang.String $r1, $r2, $r7;
        org.json.JSONException r3;
        org.json.JSONObject r4;
        com.ichi2.anki.AnkiDroidApp $r5;
        android.content.SharedPreferences $r6;
        boolean $z0;
        java.lang.Object[] $r8;
        android.content.SharedPreferences$Editor $r9;
        org.acra.ErrorReporter $r10;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r5 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

        $r6 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r5);

        r4 = new org.json.JSONObject;

     label1:
        $r7 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("sentExceptionReports", "{}");

        specialinvoke r4.<org.json.JSONObject: void <init>(java.lang.String)>($r7);

        $r7 = staticinvoke <com.ichi2.anki.AnkiDroidApp: java.lang.String getExceptionHash(java.lang.Throwable)>($r0);

        $z0 = virtualinvoke r4.<org.json.JSONObject: boolean has(java.lang.String)>($r7);

     label2:
        if $z0 == 0 goto label5;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = $r7;

     label3:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("The exception report with hash %s has already been sent from this device", $r8);

     label4:
        return;

     label5:
        virtualinvoke r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>($r7, 1);

        $r9 = interfaceinvoke $r6.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r7 = virtualinvoke r4.<org.json.JSONObject: java.lang.String toString()>();

        $r9 = interfaceinvoke $r9.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("sentExceptionReports", $r7);

        interfaceinvoke $r9.<android.content.SharedPreferences$Editor: void apply()>();

     label6:
        $r10 = staticinvoke <org.acra.ACRA: org.acra.ErrorReporter getErrorReporter()>();

        virtualinvoke $r10.<org.acra.ErrorReporter: java.lang.String putCustomData(java.lang.String,java.lang.String)>("origin", $r1);

        $r10 = staticinvoke <org.acra.ACRA: org.acra.ErrorReporter getErrorReporter()>();

        virtualinvoke $r10.<org.acra.ErrorReporter: java.lang.String putCustomData(java.lang.String,java.lang.String)>("additionalInfo", $r2);

        $r10 = staticinvoke <org.acra.ACRA: org.acra.ErrorReporter getErrorReporter()>();

        virtualinvoke $r10.<org.acra.ErrorReporter: void handleException(java.lang.Throwable)>($r0);

        return;

     label7:
        r3 := @caughtexception;

        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r3, "Could not get cache of sent exception reports", $r8);

        goto label6;

        catch org.json.JSONException from label1 to label2 with label7;
        catch org.json.JSONException from label3 to label4 with label7;
        catch org.json.JSONException from label5 to label6 with label7;
    }
    public static void setLanguage(java.lang.String)
    {
        java.lang.String $r0;
        com.ichi2.anki.AnkiDroidApp $r1;
        android.content.res.Resources $r2, $r5;
        android.content.res.Configuration $r3;
        java.util.Locale $r4;
        android.util.DisplayMetrics $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

        $r2 = virtualinvoke $r1.<com.ichi2.anki.AnkiDroidApp: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r4 = staticinvoke <com.ichi2.utils.LanguageUtil: java.util.Locale getLocale(java.lang.String)>($r0);

        $r3.<android.content.res.Configuration: java.util.Locale locale> = $r4;

        $r1 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

        $r2 = virtualinvoke $r1.<com.ichi2.anki.AnkiDroidApp: android.content.res.Resources getResources()>();

        $r1 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

        $r5 = virtualinvoke $r1.<com.ichi2.anki.AnkiDroidApp: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        virtualinvoke $r2.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>($r3, $r6);

        return;
    }
    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.ichi2.anki.AnkiDroidApp r0;
        android.content.res.Configuration $r1;
        android.content.SharedPreferences $r2;
        java.lang.String $r3;

        r0 := @this: com.ichi2.anki.AnkiDroidApp;

        $r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.app.Application: void onConfigurationChanged(android.content.res.Configuration)>($r1);

        $r2 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>(r0);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("language", "");

        staticinvoke <com.ichi2.anki.AnkiDroidApp: void setLanguage(java.lang.String)>($r3);

        return;
    }
    public void onCreate()
    {
        com.ichi2.anki.AnkiDroidApp r0;
        com.ichi2.anki.exception.StorageAccessException r1;
        android.content.SharedPreferences $r2;
        com.ichi2.anki.AnkiDroidApp$ProductionCrashReportingTree $r3;
        java.lang.String $r4, $r9;
        com.ichi2.compat.Compat $r5;
        android.content.Context $r6;
        android.view.ViewConfiguration $r7;
        int $i0;
        boolean $z0;
        java.lang.Object[] $r8;

        r0 := @this: com.ichi2.anki.AnkiDroidApp;

        specialinvoke r0.<android.app.Application: void onCreate()>();

        $r2 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>(r0);

        staticinvoke <org.acra.ACRA: void init(android.app.Application)>(r0);

        $r3 = new com.ichi2.anki.AnkiDroidApp$ProductionCrashReportingTree;

        specialinvoke $r3.<com.ichi2.anki.AnkiDroidApp$ProductionCrashReportingTree: void <init>()>();

        staticinvoke <timber.log.Timber: void plant(timber.log.Timber$Tree)>($r3);

        $r4 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("reportErrorMode", "2");

        virtualinvoke r0.<com.ichi2.anki.AnkiDroidApp: void setAcraReportingMode(java.lang.String)>($r4);

        staticinvoke <timber.log.Timber: timber.log.Timber$Tree tag(java.lang.String)>("AnkiDroid");

        <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp sInstance> = r0;

        $r4 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("language", "");

        staticinvoke <com.ichi2.anki.AnkiDroidApp: void setLanguage(java.lang.String)>($r4);

        $r5 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        interfaceinvoke $r5.<com.ichi2.compat.Compat: void enableCookiesForFileSchemePages()>();

        $r5 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        $r6 = virtualinvoke r0.<com.ichi2.anki.AnkiDroidApp: android.content.Context getApplicationContext()>();

        interfaceinvoke $r5.<com.ichi2.compat.Compat: void prepareWebViewCookies(android.content.Context)>($r6);

        $r7 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r0);

        $i0 = virtualinvoke $r7.<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>();

        <com.ichi2.anki.AnkiDroidApp: int DEFAULT_SWIPE_MIN_DISTANCE> = $i0;

        $i0 = virtualinvoke $r7.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        <com.ichi2.anki.AnkiDroidApp: int DEFAULT_SWIPE_THRESHOLD_VELOCITY> = $i0;

        $z0 = staticinvoke <com.ichi2.anki.CollectionHelper: boolean hasStorageAccessPermission(android.content.Context)>(r0);

        if $z0 == 0 goto label4;

     label1:
        $r4 = staticinvoke <com.ichi2.anki.CollectionHelper: java.lang.String getCurrentAnkiDroidDirectory(android.content.Context)>(r0);

        staticinvoke <com.ichi2.anki.CollectionHelper: void initializeAnkiDroidDirectory(java.lang.String)>($r4);

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Could not initialize AnkiDroid directory", $r8);

        $r4 = staticinvoke <com.ichi2.anki.CollectionHelper: java.lang.String getDefaultAnkiDroidDirectory()>();

        $z0 = staticinvoke <com.ichi2.anki.AnkiDroidApp: boolean isSdCardMounted()>();

        if $z0 == 0 goto label4;

        $r9 = staticinvoke <com.ichi2.anki.CollectionHelper: java.lang.String getCurrentAnkiDroidDirectory(android.content.Context)>(r0);

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        staticinvoke <com.ichi2.anki.AnkiDroidApp: void sendExceptionReport(java.lang.Throwable,java.lang.String)>(r1, "AnkiDroidApp.onCreate");

     label4:
        return;

        catch com.ichi2.anki.exception.StorageAccessException from label1 to label2 with label3;
    }
    public void setAcraReportingMode(java.lang.String)
    {
        com.ichi2.anki.AnkiDroidApp r0;
        java.lang.String $r1;
        org.acra.ACRAConfigurationException r2;
        android.content.SharedPreferences $r3;
        android.content.SharedPreferences$Editor $r4;
        boolean $z0;
        org.acra.ACRAConfiguration $r5;
        org.acra.ReportingInteractionMode $r6;
        java.lang.Object[] $r7;

        r0 := @this: com.ichi2.anki.AnkiDroidApp;

        $r1 := @parameter0: java.lang.String;

        $r3 = staticinvoke <org.acra.ACRA: android.content.SharedPreferences getACRASharedPreferences()>();

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z0 == 0 goto label02;

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("acra.disable", 1);

     label01:
        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;

     label02:
        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("acra.disable", 0);

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("0");

     label04:
        if $z0 == 0 goto label10;

     label05:
        $r5 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

     label06:
        $r6 = <org.acra.ReportingInteractionMode: org.acra.ReportingInteractionMode TOAST>;

     label07:
        virtualinvoke $r5.<org.acra.ACRAConfiguration: org.acra.ACRAConfiguration setMode(org.acra.ReportingInteractionMode)>($r6);

        $r5 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        virtualinvoke $r5.<org.acra.ACRAConfiguration: org.acra.ACRAConfiguration setResToastText(int)>(2131231029);

     label08:
        goto label01;

     label09:
        r2 := @caughtexception;

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Could not set ACRA report mode", $r7);

        goto label01;

     label10:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("2");

     label11:
        if $z0 == 0 goto label01;

     label12:
        $r5 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

     label13:
        $r6 = <org.acra.ReportingInteractionMode: org.acra.ReportingInteractionMode DIALOG>;

     label14:
        virtualinvoke $r5.<org.acra.ACRAConfiguration: org.acra.ACRAConfiguration setMode(org.acra.ReportingInteractionMode)>($r6);

        $r5 = staticinvoke <org.acra.ACRA: org.acra.ACRAConfiguration getConfig()>();

        virtualinvoke $r5.<org.acra.ACRAConfiguration: org.acra.ACRAConfiguration setResToastText(int)>(2131231033);

     label15:
        goto label01;

        catch org.acra.ACRAConfigurationException from label03 to label04 with label09;
        catch org.acra.ACRAConfigurationException from label05 to label06 with label09;
        catch org.acra.ACRAConfigurationException from label07 to label08 with label09;
        catch org.acra.ACRAConfigurationException from label10 to label11 with label09;
        catch org.acra.ACRAConfigurationException from label12 to label13 with label09;
        catch org.acra.ACRAConfigurationException from label14 to label15 with label09;
    }
