com.ichi2.anki.NavigationDrawerActivity extends com.ichi2.anki.AnkiActivity implements android.support.design.widget.NavigationView$OnNavigationItemSelectedListener
public static final int REQUEST_BROWSE_CARDS
public static final int REQUEST_PREFERENCES_UPDATE
public static final int REQUEST_STATISTICS
private android.support.v4.widget.DrawerLayout mDrawerLayout
private android.support.v7.app.ActionBarDrawerToggle mDrawerToggle
protected java.lang.Boolean mFragmented
private boolean mNavButtonGoesBack
private android.support.design.widget.NavigationView mNavigationView
private android.support.v7.widget.SwitchCompat mNightModeSwitch
private java.lang.String mOldColPath
private int mOldTheme
protected java.lang.CharSequence mTitle
private java.lang.Runnable pendingRunnable
    public void <init>()
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        java.lang.Boolean $r1;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void <init>()>();

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r0.<com.ichi2.anki.NavigationDrawerActivity: java.lang.Boolean mFragmented> = $r1;

        r0.<com.ichi2.anki.NavigationDrawerActivity: boolean mNavButtonGoesBack> = 0;

        return;
    }
    static boolean access$000(com.ichi2.anki.NavigationDrawerActivity)
    {
        com.ichi2.anki.NavigationDrawerActivity $r0;
        boolean z0;

        $r0 := @parameter0: com.ichi2.anki.NavigationDrawerActivity;

        z0 = $r0.<com.ichi2.anki.NavigationDrawerActivity: boolean mNavButtonGoesBack>;

        return z0;
    }
    static android.support.v4.widget.DrawerLayout access$100(com.ichi2.anki.NavigationDrawerActivity)
    {
        com.ichi2.anki.NavigationDrawerActivity $r0;
        android.support.v4.widget.DrawerLayout r1;

        $r0 := @parameter0: com.ichi2.anki.NavigationDrawerActivity;

        r1 = $r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        return r1;
    }
    static java.lang.Runnable access$200(com.ichi2.anki.NavigationDrawerActivity)
    {
        com.ichi2.anki.NavigationDrawerActivity $r0;
        java.lang.Runnable r1;

        $r0 := @parameter0: com.ichi2.anki.NavigationDrawerActivity;

        r1 = $r0.<com.ichi2.anki.NavigationDrawerActivity: java.lang.Runnable pendingRunnable>;

        return r1;
    }
    static java.lang.Runnable access$202(com.ichi2.anki.NavigationDrawerActivity, java.lang.Runnable)
    {
        com.ichi2.anki.NavigationDrawerActivity $r0;
        java.lang.Runnable $r1;

        $r0 := @parameter0: com.ichi2.anki.NavigationDrawerActivity;

        $r1 := @parameter1: java.lang.Runnable;

        $r0.<com.ichi2.anki.NavigationDrawerActivity: java.lang.Runnable pendingRunnable> = $r1;

        return $r1;
    }
    static android.support.v7.widget.SwitchCompat access$300(com.ichi2.anki.NavigationDrawerActivity)
    {
        com.ichi2.anki.NavigationDrawerActivity $r0;
        android.support.v7.widget.SwitchCompat r1;

        $r0 := @parameter0: com.ichi2.anki.NavigationDrawerActivity;

        r1 = $r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.widget.SwitchCompat mNightModeSwitch>;

        return r1;
    }
    static java.lang.String access$402(com.ichi2.anki.NavigationDrawerActivity, java.lang.String)
    {
        com.ichi2.anki.NavigationDrawerActivity $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.ichi2.anki.NavigationDrawerActivity;

        $r1 := @parameter1: java.lang.String;

        $r0.<com.ichi2.anki.NavigationDrawerActivity: java.lang.String mOldColPath> = $r1;

        return $r1;
    }
    static int access$502(com.ichi2.anki.NavigationDrawerActivity, int)
    {
        com.ichi2.anki.NavigationDrawerActivity $r0;
        int $i0;

        $r0 := @parameter0: com.ichi2.anki.NavigationDrawerActivity;

        $i0 := @parameter1: int;

        $r0.<com.ichi2.anki.NavigationDrawerActivity: int mOldTheme> = $i0;

        return $i0;
    }
    protected void disableDrawerSwipe()
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        android.support.v4.widget.DrawerLayout $r1;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        $r1 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        if $r1 == null goto label1;

        $r1 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: void setDrawerLockMode(int)>(1);

     label1:
        return;
    }
    protected void enableDrawerSwipe()
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        android.support.v4.widget.DrawerLayout $r1;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        $r1 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        if $r1 == null goto label1;

        $r1 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: void setDrawerLockMode(int)>(0);

     label1:
        return;
    }
    public android.support.v7.app.ActionBarDrawerToggle getDrawerToggle()
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        android.support.v7.app.ActionBarDrawerToggle r1;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        r1 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        return r1;
    }
    protected void initNavigationDrawer(android.view.View)
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        android.view.View $r1, $r2;
        android.support.v4.widget.DrawerLayout $r3;
        android.support.design.widget.NavigationView $r4;
        android.support.v7.widget.Toolbar r5;
        android.support.v7.app.ActionBar $r6;
        com.ichi2.anki.NavigationDrawerActivity$1 $r7;
        android.content.SharedPreferences $r8;
        android.view.Menu $r9;
        android.view.MenuItem $r10;
        android.support.v7.widget.SwitchCompat $r11;
        boolean $z0;
        com.ichi2.anki.NavigationDrawerActivity$2 $r12;
        com.ichi2.anki.NavigationDrawerActivity$3 $r13;
        android.support.v7.app.ActionBarDrawerToggle $r14;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>(2131755128);

        $r3 = (android.support.v4.widget.DrawerLayout) $r2;

        r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v4.widget.DrawerLayout mDrawerLayout> = $r3;

        $r3 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        virtualinvoke $r3.<android.support.v4.widget.DrawerLayout: void setDrawerShadow(int,int)>(2130837609, 8388611);

        $r3 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        $r2 = virtualinvoke $r3.<android.support.v4.widget.DrawerLayout: android.view.View findViewById(int)>(2131755229);

        $r4 = (android.support.design.widget.NavigationView) $r2;

        r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.design.widget.NavigationView mNavigationView> = $r4;

        $r4 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.design.widget.NavigationView mNavigationView>;

        virtualinvoke $r4.<android.support.design.widget.NavigationView: void setNavigationItemSelectedListener(android.support.design.widget.NavigationView$OnNavigationItemSelectedListener)>(r0);

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>(2131755165);

        r5 = (android.support.v7.widget.Toolbar) $r1;

        if r5 == null goto label1;

        virtualinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void setSupportActionBar(android.support.v7.widget.Toolbar)>(r5);

        $r6 = virtualinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBar getSupportActionBar()>();

        virtualinvoke $r6.<android.support.v7.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)>(1);

        $r6 = virtualinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBar getSupportActionBar()>();

        virtualinvoke $r6.<android.support.v7.app.ActionBar: void setHomeButtonEnabled(boolean)>(1);

        $r7 = new com.ichi2.anki.NavigationDrawerActivity$1;

        specialinvoke $r7.<com.ichi2.anki.NavigationDrawerActivity$1: void <init>(com.ichi2.anki.NavigationDrawerActivity)>(r0);

        virtualinvoke r5.<android.support.v7.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)>($r7);

     label1:
        $r8 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>(r0);

        $r4 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.design.widget.NavigationView mNavigationView>;

        $r9 = virtualinvoke $r4.<android.support.design.widget.NavigationView: android.view.Menu getMenu()>();

        $r10 = interfaceinvoke $r9.<android.view.Menu: android.view.MenuItem findItem(int)>(2131755375);

        $r1 = staticinvoke <android.support.v4.view.MenuItemCompat: android.view.View getActionView(android.view.MenuItem)>($r10);

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>(2131755230);

        $r11 = (android.support.v7.widget.SwitchCompat) $r1;

        r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.widget.SwitchCompat mNightModeSwitch> = $r11;

        $r11 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.widget.SwitchCompat mNightModeSwitch>;

        $z0 = interfaceinvoke $r8.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("invertedColors", 0);

        virtualinvoke $r11.<android.support.v7.widget.SwitchCompat: void setChecked(boolean)>($z0);

        $r11 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.widget.SwitchCompat mNightModeSwitch>;

        $r12 = new com.ichi2.anki.NavigationDrawerActivity$2;

        specialinvoke $r12.<com.ichi2.anki.NavigationDrawerActivity$2: void <init>(com.ichi2.anki.NavigationDrawerActivity,android.content.SharedPreferences)>(r0, $r8);

        virtualinvoke $r11.<android.support.v7.widget.SwitchCompat: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>($r12);

        $r13 = new com.ichi2.anki.NavigationDrawerActivity$3;

        $r3 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        specialinvoke $r13.<com.ichi2.anki.NavigationDrawerActivity$3: void <init>(com.ichi2.anki.NavigationDrawerActivity,android.app.Activity,android.support.v4.widget.DrawerLayout,int,int)>(r0, r0, $r3, 0, 0);

        r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle> = $r13;

        $r3 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        $r14 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        virtualinvoke $r3.<android.support.v4.widget.DrawerLayout: void addDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener)>($r14);

        return;
    }
    public boolean isDrawerOpen()
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        boolean $z0;
        android.support.v4.widget.DrawerLayout $r1;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        $r1 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        $z0 = virtualinvoke $r1.<android.support.v4.widget.DrawerLayout: boolean isDrawerOpen(int)>(8388611);

        return $z0;
    }
    protected void onActivityResult(int, int, android.content.Intent)
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        int $i0, $i1;
        android.content.Intent $r1;
        android.content.SharedPreferences $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        android.content.Context $r5;
        com.ichi2.compat.Compat $r6;
        com.ichi2.anki.CollectionHelper $r7;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.content.Intent;

        $r2 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>(r0);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("language", "");

        staticinvoke <com.ichi2.anki.AnkiDroidApp: void setLanguage(java.lang.String)>($r3);

        if $i0 != 100 goto label4;

        $r3 = r0.<com.ichi2.anki.NavigationDrawerActivity: java.lang.String mOldColPath>;

        if $r3 == null goto label3;

        $r3 = staticinvoke <com.ichi2.anki.CollectionHelper: java.lang.String getCurrentAnkiDroidDirectory(android.content.Context)>(r0);

        $r4 = r0.<com.ichi2.anki.NavigationDrawerActivity: java.lang.String mOldColPath>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $z0 = r0 instanceof com.ichi2.anki.Reviewer;

        if $z0 == 0 goto label1;

        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("tts", 0);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void finishWithoutAnimation()>();

        return;

     label1:
        $i0 = r0.<com.ichi2.anki.NavigationDrawerActivity: int mOldTheme>;

        $r5 = virtualinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: android.content.Context getApplicationContext()>();

        $i1 = staticinvoke <com.ichi2.themes.Themes: int getCurrentTheme(android.content.Context)>($r5);

        if $i0 == $i1 goto label2;

        $r6 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        interfaceinvoke $r6.<com.ichi2.compat.Compat: void restartActivityInvalidateBackstack(com.ichi2.anki.AnkiActivity)>(r0);

        return;

     label2:
        virtualinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void restartActivity()>();

        return;

     label3:
        $r7 = staticinvoke <com.ichi2.anki.CollectionHelper: com.ichi2.anki.CollectionHelper getInstance()>();

        virtualinvoke $r7.<com.ichi2.anki.CollectionHelper: void closeCollection(boolean)>(1);

        $r6 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        interfaceinvoke $r6.<com.ichi2.compat.Compat: void restartActivityInvalidateBackstack(com.ichi2.anki.AnkiActivity)>(r0);

        return;

     label4:
        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void onActivityResult(int,int,android.content.Intent)>($i0, $i1, $r1);

        return;
    }
    public void onBackPressed()
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        boolean $z0;
        java.lang.Object[] $r1;
        android.support.v4.widget.DrawerLayout $r2;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        $z0 = virtualinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: boolean isDrawerOpen()>();

        if $z0 == 0 goto label1;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Back key pressed", $r1);

        $r2 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        virtualinvoke $r2.<android.support.v4.widget.DrawerLayout: void closeDrawers()>();

        return;

     label1:
        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void onBackPressed()>();

        return;
    }
    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        android.content.res.Configuration $r1;
        android.support.v7.app.ActionBarDrawerToggle $r2;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        $r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void onConfigurationChanged(android.content.res.Configuration)>($r1);

        $r2 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        if $r2 == null goto label1;

        $r2 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        virtualinvoke $r2.<android.support.v7.app.ActionBarDrawerToggle: void onConfigurationChanged(android.content.res.Configuration)>($r1);

     label1:
        return;
    }
    public boolean onNavigationItemSelected(android.view.MenuItem)
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        android.view.MenuItem $r1;
        boolean $z0;
        com.ichi2.anki.NavigationDrawerActivity$4 $r2;
        android.support.v4.widget.DrawerLayout $r3;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        $r1 := @parameter0: android.view.MenuItem;

        $z0 = interfaceinvoke $r1.<android.view.MenuItem: boolean isChecked()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = new com.ichi2.anki.NavigationDrawerActivity$4;

        specialinvoke $r2.<com.ichi2.anki.NavigationDrawerActivity$4: void <init>(com.ichi2.anki.NavigationDrawerActivity,android.view.MenuItem)>(r0, $r1);

        r0.<com.ichi2.anki.NavigationDrawerActivity: java.lang.Runnable pendingRunnable> = $r2;

        $r3 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v4.widget.DrawerLayout mDrawerLayout>;

        virtualinvoke $r3.<android.support.v4.widget.DrawerLayout: void closeDrawers()>();

        return 1;
    }
    protected void onPostCreate(android.os.Bundle)
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        android.os.Bundle $r1;
        android.support.v7.app.ActionBarDrawerToggle $r2;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void onPostCreate(android.os.Bundle)>($r1);

        $r2 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        if $r2 == null goto label1;

        $r2 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        virtualinvoke $r2.<android.support.v7.app.ActionBarDrawerToggle: void syncState()>();

     label1:
        return;
    }
    protected void openCardBrowser()
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        android.content.Intent r1;
        com.ichi2.libanki.Collection $r2;
        com.ichi2.libanki.Decks $r3;
        long $l0;
        int $i1;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/ichi2/anki/CardBrowser;");

        $r2 = virtualinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: com.ichi2.libanki.Collection getCol()>();

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $l0 = virtualinvoke $r3.<com.ichi2.libanki.Decks: long selected()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("selectedDeck", $l0);

        $i1 = <com.ichi2.anim.ActivityTransitionAnimation: int LEFT>;

        virtualinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void startActivityForResultWithAnimation(android.content.Intent,int,int)>(r1, 101, $i1);

        return;
    }
    protected void selectNavigationItem(int)
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        int $i0, $i1;
        android.support.design.widget.NavigationView $r1;
        java.lang.Object[] $r2;
        android.view.Menu $r3;
        android.view.MenuItem $r4;
        java.lang.Integer $r5;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        $i0 := @parameter0: int;

        $r1 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.design.widget.NavigationView mNavigationView>;

        if $r1 != null goto label1;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Could not select item in navigation drawer as NavigationView null", $r2);

        return;

     label1:
        $r1 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.design.widget.NavigationView mNavigationView>;

        $r3 = virtualinvoke $r1.<android.support.design.widget.NavigationView: android.view.Menu getMenu()>();

        if $i0 != -1 goto label3;

        $i0 = 0;

     label2:
        $i1 = interfaceinvoke $r3.<android.view.Menu: int size()>();

        if $i0 >= $i1 goto label5;

        $r4 = interfaceinvoke $r3.<android.view.Menu: android.view.MenuItem getItem(int)>($i0);

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setChecked(boolean)>(0);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r4 = interfaceinvoke $r3.<android.view.Menu: android.view.MenuItem findItem(int)>($i0);

        if $r4 == null goto label4;

        interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setChecked(boolean)>(1);

        return;

     label4:
        $r2 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r5;

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Could not find item %d", $r2);

     label5:
        return;
    }
    public void setTitle(java.lang.CharSequence)
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        java.lang.CharSequence $r1;
        android.support.v7.app.ActionBar $r2;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        $r1 := @parameter0: java.lang.CharSequence;

        r0.<com.ichi2.anki.NavigationDrawerActivity: java.lang.CharSequence mTitle> = $r1;

        $r2 = virtualinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBar getSupportActionBar()>();

        if $r2 == null goto label1;

        $r2 = virtualinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBar getSupportActionBar()>();

        $r1 = r0.<com.ichi2.anki.NavigationDrawerActivity: java.lang.CharSequence mTitle>;

        virtualinvoke $r2.<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>($r1);

     label1:
        return;
    }
    protected void showBackIcon()
    {
        com.ichi2.anki.NavigationDrawerActivity r0;
        android.support.v7.app.ActionBarDrawerToggle $r1;
        android.support.v7.app.ActionBar $r2;

        r0 := @this: com.ichi2.anki.NavigationDrawerActivity;

        $r1 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        if $r1 == null goto label1;

        $r1 = r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBarDrawerToggle mDrawerToggle>;

        virtualinvoke $r1.<android.support.v7.app.ActionBarDrawerToggle: void setDrawerIndicatorEnabled(boolean)>(0);

     label1:
        $r2 = virtualinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBar getSupportActionBar()>();

        if $r2 == null goto label2;

        $r2 = virtualinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: android.support.v7.app.ActionBar getSupportActionBar()>();

        virtualinvoke $r2.<android.support.v7.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)>(1);

     label2:
        r0.<com.ichi2.anki.NavigationDrawerActivity: boolean mNavButtonGoesBack> = 1;

        return;
    }
