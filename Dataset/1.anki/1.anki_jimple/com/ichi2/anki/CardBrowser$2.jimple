com.ichi2.anki.CardBrowser$2 extends java.lang.Object implements com.afollestad.materialdialogs.MaterialDialog$ListCallbackSingleChoice
final com.ichi2.anki.CardBrowser this$0
    void <init>(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser$2 r0;
        com.ichi2.anki.CardBrowser $r1;

        r0 := @this: com.ichi2.anki.CardBrowser$2;

        $r1 := @parameter0: com.ichi2.anki.CardBrowser;

        r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public boolean onSelection(com.afollestad.materialdialogs.MaterialDialog, android.view.View, int, java.lang.CharSequence)
    {
        com.ichi2.anki.CardBrowser$2 r0;
        com.afollestad.materialdialogs.MaterialDialog $r1;
        android.view.View $r2;
        int $i0, $i1;
        java.lang.CharSequence $r3;
        boolean $z0, $z1;
        com.ichi2.anki.CardBrowser $r4, $r14;
        com.ichi2.libanki.Collection $r5;
        org.json.JSONObject $r6;
        java.lang.String[] $r7;
        java.lang.String $r8;
        android.content.Context $r9;
        android.content.SharedPreferences $r10;
        android.content.SharedPreferences$Editor $r11;
        org.json.JSONException r12, r16;
        java.lang.RuntimeException $r13;
        java.util.List $r15;

        r0 := @this: com.ichi2.anki.CardBrowser$2;

        $r1 := @parameter0: com.afollestad.materialdialogs.MaterialDialog;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.CharSequence;

        $z0 = 0;

        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

        $i1 = staticinvoke <com.ichi2.anki.CardBrowser: int access$1100(com.ichi2.anki.CardBrowser)>($r4);

        if $i0 == $i1 goto label30;

        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

        staticinvoke <com.ichi2.anki.CardBrowser: int access$1102(com.ichi2.anki.CardBrowser,int)>($r4, $i0);

        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

        staticinvoke <com.ichi2.anki.CardBrowser: boolean access$1202(com.ichi2.anki.CardBrowser,boolean)>($r4, 0);

        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

     label01:
        $i0 = staticinvoke <com.ichi2.anki.CardBrowser: int access$1100(com.ichi2.anki.CardBrowser)>($r4);

     label02:
        if $i0 != 0 goto label20;

        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

     label03:
        $r5 = virtualinvoke $r4.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

        $r7 = staticinvoke <com.ichi2.anki.CardBrowser: java.lang.String[] access$1300()>();

     label04:
        $r8 = $r7[1];

     label05:
        virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("sortType", $r8);

     label06:
        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

     label07:
        $r9 = virtualinvoke $r4.<com.ichi2.anki.CardBrowser: android.content.Context getBaseContext()>();

        $r10 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r9);

        $r11 = interfaceinvoke $r10.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r11 = interfaceinvoke $r11.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("cardBrowserNoSorting", 1);

        interfaceinvoke $r11.<android.content.SharedPreferences$Editor: boolean commit()>();

     label08:
        $r7 = staticinvoke <com.ichi2.anki.CardBrowser: java.lang.String[] access$1300()>();

     label09:
        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

     label10:
        $i0 = staticinvoke <com.ichi2.anki.CardBrowser: int access$1100(com.ichi2.anki.CardBrowser)>($r4);

     label11:
        $r8 = $r7[$i0];

     label12:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("noteFld");

     label13:
        if $z0 == 0 goto label15;

        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

     label14:
        staticinvoke <com.ichi2.anki.CardBrowser: boolean access$1202(com.ichi2.anki.CardBrowser,boolean)>($r4, 1);

     label15:
        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

     label16:
        $r5 = virtualinvoke $r4.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

     label17:
        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

     label18:
        $z0 = staticinvoke <com.ichi2.anki.CardBrowser: boolean access$1200(com.ichi2.anki.CardBrowser)>($r4);

        virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("sortBackwards", $z0);

     label19:
        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

        staticinvoke <com.ichi2.anki.CardBrowser: void access$100(com.ichi2.anki.CardBrowser)>($r4);

        return 1;

     label20:
        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

     label21:
        $r5 = virtualinvoke $r4.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

        $r7 = staticinvoke <com.ichi2.anki.CardBrowser: java.lang.String[] access$1300()>();

     label22:
        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

     label23:
        $i0 = staticinvoke <com.ichi2.anki.CardBrowser: int access$1100(com.ichi2.anki.CardBrowser)>($r4);

     label24:
        $r8 = $r7[$i0];

     label25:
        virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("sortType", $r8);

     label26:
        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

     label27:
        $r9 = virtualinvoke $r4.<com.ichi2.anki.CardBrowser: android.content.Context getBaseContext()>();

        $r10 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r9);

        $r11 = interfaceinvoke $r10.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r11 = interfaceinvoke $r11.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("cardBrowserNoSorting", 0);

        interfaceinvoke $r11.<android.content.SharedPreferences$Editor: boolean commit()>();

     label28:
        goto label08;

     label29:
        r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r12);

        throw $r13;

     label30:
        if $i0 == 0 goto label37;

        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

        $r14 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

        $z1 = staticinvoke <com.ichi2.anki.CardBrowser: boolean access$1200(com.ichi2.anki.CardBrowser)>($r14);

        if $z1 != 0 goto label31;

        $z0 = 1;

     label31:
        staticinvoke <com.ichi2.anki.CardBrowser: boolean access$1202(com.ichi2.anki.CardBrowser,boolean)>($r4, $z0);

        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

     label32:
        $r5 = virtualinvoke $r4.<com.ichi2.anki.CardBrowser: com.ichi2.libanki.Collection getCol()>();

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

     label33:
        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

     label34:
        $z0 = staticinvoke <com.ichi2.anki.CardBrowser: boolean access$1200(com.ichi2.anki.CardBrowser)>($r4);

        virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("sortBackwards", $z0);

     label35:
        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

        $r15 = staticinvoke <com.ichi2.anki.CardBrowser: java.util.List access$1400(com.ichi2.anki.CardBrowser)>($r4);

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r15);

        $r4 = r0.<com.ichi2.anki.CardBrowser$2: com.ichi2.anki.CardBrowser this$0>;

        staticinvoke <com.ichi2.anki.CardBrowser: void access$1500(com.ichi2.anki.CardBrowser)>($r4);

        return 1;

     label36:
        r16 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r16);

        throw $r13;

     label37:
        return 1;

        catch org.json.JSONException from label01 to label02 with label29;
        catch org.json.JSONException from label03 to label04 with label29;
        catch org.json.JSONException from label05 to label06 with label29;
        catch org.json.JSONException from label07 to label09 with label29;
        catch org.json.JSONException from label10 to label11 with label29;
        catch org.json.JSONException from label12 to label13 with label29;
        catch org.json.JSONException from label14 to label15 with label29;
        catch org.json.JSONException from label16 to label17 with label29;
        catch org.json.JSONException from label18 to label19 with label29;
        catch org.json.JSONException from label21 to label22 with label29;
        catch org.json.JSONException from label23 to label24 with label29;
        catch org.json.JSONException from label25 to label26 with label29;
        catch org.json.JSONException from label27 to label28 with label29;
        catch org.json.JSONException from label32 to label33 with label36;
        catch org.json.JSONException from label34 to label35 with label36;
    }
