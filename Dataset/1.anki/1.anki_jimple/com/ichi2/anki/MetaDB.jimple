com.ichi2.anki.MetaDB extends java.lang.Object
private static final java.lang.String DATABASE_NAME
private static final int DATABASE_VERSION
public static final int LANGUAGES_QA_ANSWER
public static final int LANGUAGES_QA_QUESTION
public static final int LANGUAGES_QA_UNDEFINED
private static android.database.sqlite.SQLiteDatabase mMetaDb
private static final java.util.regex.Pattern quotePattern
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\"\']");

        <com.ichi2.anki.MetaDB: java.util.regex.Pattern quotePattern> = $r0;

        <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb> = null;

        return;
    }
    public void <init>()
    {
        com.ichi2.anki.MetaDB r0;

        r0 := @this: com.ichi2.anki.MetaDB;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static void closeDB()
    {
        boolean $z0;
        android.database.sqlite.SQLiteDatabase $r0;
        java.lang.Object[] $r1;

        $r0 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        if $r0 == null goto label1;

        $r0 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $z0 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label1;

        $r0 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void close()>();

        <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb> = null;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Closing MetaDB", $r1);

     label1:
        return;
    }
    public static java.lang.String getLanguage(android.content.Context, long, int, int)
    {
        android.content.Context $r0;
        long $l0;
        int $i1, $i2;
        java.lang.Exception r1;
        java.lang.String r2, $r5;
        android.database.Cursor r3, $r7;
        java.lang.StringBuilder $r4;
        android.database.sqlite.SQLiteDatabase $r6;
        java.lang.Object[] $r8;
        boolean $z0;
        java.lang.Throwable $r9;

        $r0 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        staticinvoke <com.ichi2.anki.MetaDB: void openDBIfClosed(android.content.Context)>($r0);

        r2 = "";

        r3 = null;

     label01:
        $r4 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT language FROM languages WHERE did = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ord = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND qa = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LIMIT 1");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r6 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label04:
        $r7 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r5, null);

     label05:
        r3 = $r7;

     label06:
        $r8 = newarray (java.lang.Object)[1];

     label07:
        $r8[0] = $r5;

     label08:
        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("getLanguage: %s", $r8);

        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToNext()>();

     label09:
        if $z0 == 0 goto label11;

     label10:
        r2 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>(0);

     label11:
        if $r7 == null goto label17;

        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label17;

        interfaceinvoke $r7.<android.database.Cursor: void close()>();

        return r2;

     label12:
        r1 := @caughtexception;

     label13:
        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Error fetching language ", $r8);

     label14:
        if r3 == null goto label18;

        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label18;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return "";

     label15:
        $r9 := @caughtexception;

        if r3 == null goto label16;

        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label16;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label16:
        throw $r9;

     label17:
        return r2;

     label18:
        return "";

        catch java.lang.Exception from label02 to label03 with label12;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Exception from label06 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label01 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }
    public static int getLookupDictionary(android.content.Context, long)
    {
        android.content.Context $r0;
        long $l0;
        java.lang.Exception r1;
        android.database.Cursor r2, $r6;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        boolean $z0;
        int $i1;
        java.lang.Object[] $r7;
        java.lang.Throwable $r8;

        $r0 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        staticinvoke <com.ichi2.anki.MetaDB: void openDBIfClosed(android.content.Context)>($r0);

        r2 = null;

     label01:
        $r3 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $r4 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT dictionary FROM customDictionary WHERE did = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r5, null);

     label03:
        r2 = $r6;

     label04:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label05:
        if $z0 == 0 goto label08;

     label06:
        $i1 = interfaceinvoke $r6.<android.database.Cursor: int getInt(int)>(0);

     label07:
        if $r6 == null goto label14;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label14;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return $i1;

     label08:
        if $r6 == null goto label15;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label15;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return -1;

     label09:
        r1 := @caughtexception;

     label10:
        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Error retrieving custom dictionary from MetaDB ", $r7);

     label11:
        if r2 == null goto label15;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label15;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return -1;

     label12:
        $r8 := @caughtexception;

        if r2 == null goto label13;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label13;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label13:
        throw $r8;

     label14:
        return $i1;

     label15:
        return -1;

        catch java.lang.Exception from label02 to label03 with label09;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Exception from label06 to label07 with label09;
        catch java.lang.Throwable from label01 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }
    public static int getNotificationStatus(android.content.Context)
    {
        android.content.Context $r0;
        android.database.sqlite.SQLiteException r1;
        android.database.Cursor r2, $r5;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.String[] $r4;
        boolean $z0;
        int $i0;
        java.lang.Object[] $r6;
        java.lang.Throwable $r7;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <com.ichi2.anki.MetaDB: void openDBIfClosed(android.content.Context)>($r0);

        r2 = null;

     label01:
        $r3 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "due";

     label02:
        $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("smallWidgetStatus", $r4, null, null, null, null, null);

     label03:
        r2 = $r5;

     label04:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

     label05:
        if $z0 == 0 goto label08;

     label06:
        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getInt(int)>(0);

     label07:
        if $r5 == null goto label14;

        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label14;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return $i0;

     label08:
        if $r5 == null goto label15;

        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label15;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return 0;

     label09:
        r1 := @caughtexception;

     label10:
        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Error while querying widgetStatus", $r6);

     label11:
        if r2 == null goto label15;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label15;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return 0;

     label12:
        $r7 := @caughtexception;

        if r2 == null goto label13;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label13;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label13:
        throw $r7;

     label14:
        return $i0;

     label15:
        return 0;

        catch android.database.sqlite.SQLiteException from label02 to label03 with label09;
        catch android.database.sqlite.SQLiteException from label04 to label05 with label09;
        catch android.database.sqlite.SQLiteException from label06 to label07 with label09;
        catch java.lang.Throwable from label01 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }
    public static boolean getWhiteboardState(android.content.Context, long)
    {
        android.content.Context $r0;
        long $l0;
        java.lang.Exception r1;
        boolean $z0, $z1;
        android.database.Cursor r2, $r6;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        int $i1;
        java.lang.Object[] $r7;
        java.lang.Throwable $r8;

        $r0 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        $z0 = 0;

        staticinvoke <com.ichi2.anki.MetaDB: void openDBIfClosed(android.content.Context)>($r0);

        r2 = null;

     label01:
        $r3 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $r4 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT state FROM whiteboardState WHERE did = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r5, null);

     label03:
        r2 = $r6;

     label04:
        $z1 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label05:
        if $z1 == 0 goto label09;

     label06:
        $i1 = interfaceinvoke $r6.<android.database.Cursor: int getInt(int)>(0);

     label07:
        if $i1 <= 0 goto label08;

        $z0 = 1;

     label08:
        if $r6 == null goto label15;

        $z1 = interfaceinvoke $r6.<android.database.Cursor: boolean isClosed()>();

        if $z1 != 0 goto label15;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return $z0;

     label09:
        if $r6 == null goto label16;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label16;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return 0;

     label10:
        r1 := @caughtexception;

     label11:
        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Error retrieving whiteboard state from MetaDB ", $r7);

     label12:
        if r2 == null goto label16;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label16;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return 0;

     label13:
        $r8 := @caughtexception;

        if r2 == null goto label14;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label14;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label14:
        throw $r8;

     label15:
        return $z0;

     label16:
        return 0;

        catch java.lang.Exception from label02 to label03 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Throwable from label01 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }
    public static int[] getWidgetSmallStatus(android.content.Context)
    {
        android.content.Context $r0;
        android.database.sqlite.SQLiteException r1;
        android.database.Cursor r2, $r5;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.String[] $r4;
        boolean $z0;
        int[] $r6;
        int $i0;
        java.lang.Object[] $r7;
        java.lang.Throwable $r8;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <com.ichi2.anki.MetaDB: void openDBIfClosed(android.content.Context)>($r0);

        r2 = null;

     label01:
        $r3 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "due";

        $r4[1] = "eta";

     label02:
        $r5 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("smallWidgetStatus", $r4, null, null, null, null, null);

     label03:
        r2 = $r5;

     label04:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

     label05:
        if $z0 == 0 goto label12;

     label06:
        $r6 = newarray (int)[2];

     label07:
        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getInt(int)>(0);

     label08:
        $r6[0] = $i0;

     label09:
        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getInt(int)>(1);

     label10:
        $r6[1] = $i0;

     label11:
        if $r5 == null goto label19;

        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label19;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return $r6;

     label12:
        if $r5 == null goto label13;

        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label13;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label13:
        $r6 = newarray (int)[2];

        $r6[0] = 0;

        $r6[1] = 0;

        return $r6;

     label14:
        r1 := @caughtexception;

     label15:
        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Error while querying widgetStatus", $r7);

     label16:
        if r2 == null goto label13;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label13;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label13;

     label17:
        $r8 := @caughtexception;

        if r2 == null goto label18;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label18;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label18:
        throw $r8;

     label19:
        return $r6;

        catch android.database.sqlite.SQLiteException from label02 to label03 with label14;
        catch android.database.sqlite.SQLiteException from label04 to label05 with label14;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label14;
        catch android.database.sqlite.SQLiteException from label09 to label10 with label14;
        catch java.lang.Throwable from label01 to label03 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label11 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }
    private static void openDB(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception r1;
        android.database.sqlite.SQLiteDatabase $r2;
        boolean $z0;
        java.lang.Object[] $r3;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)>("ankidroid.db", 0, null);

     label2:
        <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb> = $r2;

        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label3:
        $z0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: boolean needUpgrade(int)>(4);

     label4:
        if $z0 == 0 goto label7;

        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label5:
        $r2 = staticinvoke <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase upgradeDB(android.database.sqlite.SQLiteDatabase,int)>($r2, 4);

     label6:
        <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb> = $r2;

     label7:
        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Opening MetaDB", $r3);

     label8:
        return;

     label9:
        r1 := @caughtexception;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Error opening MetaDB ", $r3);

        return;

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }
    private static void openDBIfClosed(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;
        android.database.sqlite.SQLiteDatabase $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        if $r1 == null goto label1;

        $r1 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <com.ichi2.anki.MetaDB: void openDB(android.content.Context)>($r0);

     label2:
        return;
    }
    public static boolean resetDB(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception r1;
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.Object[] $r3;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <com.ichi2.anki.MetaDB: void openDBIfClosed(android.content.Context)>($r0);

        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label01:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS languages;");

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Resetting all language assignment", $r3);

     label02:
        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label03:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS whiteboardState;");

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Resetting whiteboard state", $r3);

     label04:
        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label05:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS customDictionary;");

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Resetting custom Dictionary", $r3);

     label06:
        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label07:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS widgetStatus;");

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Resetting widget status", $r3);

     label08:
        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label09:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS smallWidgetStatus;");

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Resetting small widget status", $r3);

     label10:
        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label11:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS intentInformation;");

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Resetting intentInformation", $r3);

     label12:
        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label13:
        staticinvoke <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase upgradeDB(android.database.sqlite.SQLiteDatabase,int)>($r2, 4);

     label14:
        return 1;

     label15:
        r1 := @caughtexception;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Error resetting MetaDB ", $r3);

        return 0;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }
    public static boolean resetDeckLanguages(android.content.Context, long)
    {
        android.content.Context $r0;
        long $l0;
        java.lang.Exception r1;
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Object[] $r5;
        java.lang.Long $r6;

        $r0 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        staticinvoke <com.ichi2.anki.MetaDB: void openDBIfClosed(android.content.Context)>($r0);

        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $r3 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DELETE FROM languages WHERE did = ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r4);

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5[0] = $r6;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Resetting language assignment for deck %d", $r5);

     label2:
        return 1;

     label3:
        r1 := @caughtexception;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Error resetting deck language", $r5);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public static boolean resetLanguages(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception r1;
        boolean $z0;
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.Object[] $r3;

        $r0 := @parameter0: android.content.Context;

        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        if $r2 == null goto label1;

        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $z0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <com.ichi2.anki.MetaDB: void openDB(android.content.Context)>($r0);

     label2:
        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Resetting all language assignments", $r3);

     label3:
        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label4:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS languages;");

     label5:
        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label6:
        staticinvoke <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase upgradeDB(android.database.sqlite.SQLiteDatabase,int)>($r2, 4);

     label7:
        return 1;

     label8:
        r1 := @caughtexception;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Error resetting MetaDB ", $r3);

        return 0;

        catch java.lang.Exception from label2 to label3 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }
    public static boolean resetWidget(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception r1;
        boolean $z0;
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.Object[] $r3;

        $r0 := @parameter0: android.content.Context;

        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        if $r2 == null goto label01;

        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $z0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 != 0 goto label02;

     label01:
        staticinvoke <com.ichi2.anki.MetaDB: void openDB(android.content.Context)>($r0);

     label02:
        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Resetting widget status", $r3);

     label03:
        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label04:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS widgetStatus;");

     label05:
        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label06:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS smallWidgetStatus;");

     label07:
        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label08:
        staticinvoke <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase upgradeDB(android.database.sqlite.SQLiteDatabase,int)>($r2, 4);

     label09:
        return 1;

     label10:
        r1 := @caughtexception;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Error resetting widgetStatus and smallWidgetStatus", $r3);

        return 0;

        catch java.lang.Exception from label02 to label03 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }
    public static void storeLanguage(android.content.Context, long, int, int, java.lang.String)
    {
        android.content.Context $r0;
        long $l0;
        int $i1, $i2;
        java.lang.String $r1;
        java.lang.Exception r2;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.Object[] $r4;
        java.lang.Long $r5;
        java.lang.Integer $r6;

        $r0 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: java.lang.String;

        staticinvoke <com.ichi2.anki.MetaDB: void openDBIfClosed(android.content.Context)>($r0);

        $r3 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label1:
        $r4 = newarray (java.lang.Object)[4];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[1] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[2] = $r6;

        $r4[3] = $r1;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>("INSERT INTO languages (did, ord, qa, language)  VALUES (?, ?, ?, ?);", $r4);

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4[0] = $r5;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Store language for deck %d", $r4);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Error storing language in MetaDB ", $r4);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public static void storeLookupDictionary(android.content.Context, long, int)
    {
        android.content.Context $r0;
        long $l0;
        int $i1;
        java.lang.Exception r1;
        android.database.Cursor r2, $r6;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        boolean $z0;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        java.lang.Long $r9;
        java.lang.Throwable $r10;

        $r0 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        $i1 := @parameter2: int;

        staticinvoke <com.ichi2.anki.MetaDB: void openDBIfClosed(android.content.Context)>($r0);

        r2 = null;

     label01:
        $r3 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $r4 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT _id FROM customDictionary WHERE did = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r5, null);

     label03:
        r2 = $r6;

     label04:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label05:
        if $z0 == 0 goto label13;

     label06:
        $r3 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $r4 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UPDATE customDictionary SET did = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dictionary=");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE _id=");

        $r5 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r5);

        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label08:
        $r7[0] = $r8;

     label09:
        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label10:
        $r7[1] = $r9;

     label11:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Store custom dictionary (%d) for deck %d", $r7);

     label12:
        if $r6 == null goto label29;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label29;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return;

     label13:
        $r3 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label14:
        $r7 = newarray (java.lang.Object)[2];

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label15:
        $r7[0] = $r9;

     label16:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label17:
        $r7[1] = $r8;

     label18:
        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>("INSERT INTO customDictionary (did, dictionary) VALUES (?, ?)", $r7);

        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label19:
        $r7[0] = $r8;

     label20:
        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label21:
        $r7[1] = $r9;

     label22:
        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Store custom dictionary (%d) for deck %d", $r7);

     label23:
        goto label12;

     label24:
        r1 := @caughtexception;

     label25:
        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Error storing custom dictionary to MetaDB ", $r7);

     label26:
        if r2 == null goto label29;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label29;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return;

     label27:
        $r10 := @caughtexception;

        if r2 == null goto label28;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label28;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label28:
        throw $r10;

     label29:
        return;

        catch java.lang.Exception from label02 to label03 with label24;
        catch java.lang.Exception from label04 to label05 with label24;
        catch java.lang.Exception from label07 to label12 with label24;
        catch java.lang.Throwable from label01 to label03 with label27;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.lang.Throwable from label06 to label08 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Exception from label14 to label23 with label24;
        catch java.lang.Throwable from label13 to label15 with label27;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.Throwable from label18 to label19 with label27;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label22 to label23 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
    }
    public static void storeSmallWidgetStatus(android.content.Context, android.util.Pair)
    {
        android.content.Context $r0;
        android.util.Pair r1;
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        java.lang.IllegalStateException r6;
        android.database.sqlite.SQLiteException r7;
        java.lang.StringBuilder $r8;
        boolean $z0;
        java.lang.String $r9;

        $r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.util.Pair;

        staticinvoke <com.ichi2.anki.MetaDB: void openDBIfClosed(android.content.Context)>($r0);

        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label1:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label2:
        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DELETE FROM smallWidgetStatus");

        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = r1.<android.util.Pair: java.lang.Object first>;

        $r3[0] = $r4;

        $r4 = r1.<android.util.Pair: java.lang.Object second>;

        $r3[1] = $r4;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>("INSERT INTO smallWidgetStatus(due, eta) VALUES (?, ?)", $r3);

        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label3:
        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label4:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label5:
        return;

     label6:
        $r5 := @caughtexception;

        $r2 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label7:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r5;

     label8:
        r6 := @caughtexception;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r6, "MetaDB.storeSmallWidgetStatus: failed", $r3);

        return;

     label9:
        r7 := @caughtexception;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r7, "MetaDB.storeSmallWidgetStatus: failed", $r3);

        staticinvoke <com.ichi2.anki.MetaDB: void closeDB()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MetaDB:: Trying to reset Widget: ");

        $z0 = staticinvoke <com.ichi2.anki.MetaDB: boolean resetWidget(android.content.Context)>($r0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>($r9, $r3);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label8;
        catch android.database.sqlite.SQLiteException from label1 to label2 with label9;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.IllegalStateException from label4 to label5 with label8;
        catch java.lang.IllegalStateException from label7 to label8 with label8;
        catch android.database.sqlite.SQLiteException from label4 to label5 with label9;
        catch android.database.sqlite.SQLiteException from label7 to label8 with label9;
    }
    public static void storeWhiteboardState(android.content.Context, long, boolean)
    {
        android.content.Context $r0;
        long $l0;
        boolean $z0;
        java.lang.Exception r1;
        byte b1;
        android.database.Cursor r2, $r6;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.lang.Object[] $r7;
        java.lang.Integer $r8;
        java.lang.Long $r9;
        java.lang.Throwable $r10;

        $r0 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        b1 = 1;

        if $z0 == 0 goto label14;

     label01:
        staticinvoke <com.ichi2.anki.MetaDB: void openDBIfClosed(android.content.Context)>($r0);

        r2 = null;

     label02:
        $r3 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $r4 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT _id FROM whiteboardState WHERE did  = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r5, null);

     label04:
        r2 = $r6;

     label05:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label06:
        if $z0 == 0 goto label15;

     label07:
        $r3 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

        $r4 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UPDATE whiteboardState SET did = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state=");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(b1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE _id=");

        $r5 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r5);

        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b1);

     label09:
        $r7[0] = $r8;

     label10:
        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label11:
        $r7[1] = $r9;

     label12:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Store whiteboard state (%d) for deck %d", $r7);

     label13:
        if $r6 == null goto label31;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label31;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return;

     label14:
        b1 = 0;

        goto label01;

     label15:
        $r3 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label16:
        $r7 = newarray (java.lang.Object)[2];

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label17:
        $r7[0] = $r9;

     label18:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b1);

     label19:
        $r7[1] = $r8;

     label20:
        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>("INSERT INTO whiteboardState (did, state) VALUES (?, ?)", $r7);

        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b1);

     label21:
        $r7[0] = $r8;

     label22:
        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label23:
        $r7[1] = $r9;

     label24:
        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Store whiteboard state (%d) for deck %d", $r7);

     label25:
        goto label13;

     label26:
        r1 := @caughtexception;

     label27:
        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r1, "Error storing whiteboard state in MetaDB ", $r7);

     label28:
        if r2 == null goto label31;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label31;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return;

     label29:
        $r10 := @caughtexception;

        if r2 == null goto label30;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label30;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label30:
        throw $r10;

     label31:
        return;

        catch java.lang.Exception from label03 to label04 with label26;
        catch java.lang.Exception from label05 to label06 with label26;
        catch java.lang.Exception from label08 to label13 with label26;
        catch java.lang.Throwable from label02 to label04 with label29;
        catch java.lang.Throwable from label05 to label06 with label29;
        catch java.lang.Throwable from label07 to label09 with label29;
        catch java.lang.Throwable from label10 to label11 with label29;
        catch java.lang.Throwable from label12 to label13 with label29;
        catch java.lang.Exception from label16 to label25 with label26;
        catch java.lang.Throwable from label15 to label17 with label29;
        catch java.lang.Throwable from label18 to label19 with label29;
        catch java.lang.Throwable from label20 to label21 with label29;
        catch java.lang.Throwable from label22 to label23 with label29;
        catch java.lang.Throwable from label24 to label25 with label29;
        catch java.lang.Throwable from label27 to label28 with label29;
    }
    private static java.lang.String stripQuotes(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.ichi2.anki.MetaDB: java.util.regex.Pattern quotePattern>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        return $r0;
    }
    public static void updateLanguage(android.content.Context, long, int, int, java.lang.String)
    {
        android.content.Context $r0;
        long $l0;
        int $i1, $i2;
        java.lang.String $r1;
        java.lang.Exception r2;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.Object[] $r4;
        java.lang.Long $r5;
        java.lang.Integer $r6;

        $r0 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: java.lang.String;

        staticinvoke <com.ichi2.anki.MetaDB: void openDBIfClosed(android.content.Context)>($r0);

        $r3 = <com.ichi2.anki.MetaDB: android.database.sqlite.SQLiteDatabase mMetaDb>;

     label1:
        $r4 = newarray (java.lang.Object)[4];

        $r4[0] = $r1;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[2] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[3] = $r6;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>("UPDATE languages SET language = ? WHERE did = ? AND ord = ? AND qa = ?;", $r4);

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4[0] = $r5;

        staticinvoke <timber.log.Timber: void v(java.lang.String,java.lang.Object[])>("Update language for deck %d", $r4);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Error updating language in MetaDB ", $r4);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private static android.database.sqlite.SQLiteDatabase upgradeDB(android.database.sqlite.SQLiteDatabase, int)
    {
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0, $i1;
        java.lang.Object[] $r1;
        android.database.Cursor r2, $r3;
        java.lang.Integer $r4;
        java.lang.Throwable $r5;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Upgrading Internal Database..", $r1);

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Applying changes for version: 0", $r1);

        $i1 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

        if $i1 >= 4 goto label01;

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS languages;");

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS customDictionary;");

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS whiteboardState;");

     label01:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS languages ( _id INTEGER PRIMARY KEY AUTOINCREMENT, did INTEGER NOT NULL, ord INTEGER, qa INTEGER, language TEXT)");

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS whiteboardState (_id INTEGER PRIMARY KEY AUTOINCREMENT, did INTEGER NOT NULL, state INTEGER)");

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS customDictionary (_id INTEGER PRIMARY KEY AUTOINCREMENT, did INTEGER NOT NULL, dictionary INTEGER)");

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS smallWidgetStatus (id INTEGER PRIMARY KEY AUTOINCREMENT, due INTEGER NOT NULL, eta INTEGER NOT NULL)");

        r2 = null;

     label02:
        $r3 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("PRAGMA table_info(widgetStatus)", null);

     label03:
        r2 = $r3;

     label04:
        $i1 = interfaceinvoke $r3.<android.database.Cursor: int getCount()>();

     label05:
        if $i1 <= 0 goto label09;

        if $i1 >= 7 goto label07;

     label06:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("ALTER TABLE widgetStatus ADD COLUMN eta INTEGER NOT NULL DEFAULT \'0\'");

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("ALTER TABLE widgetStatus ADD COLUMN time INTEGER NOT NULL DEFAULT \'0\'");

     label07:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void setVersion(int)>($i0);

        $r1 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r4;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("MetaDB:: Upgrading Internal Database finished. New version: %d", $r1);

     label08:
        if $r3 == null goto label13;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return $r0;

     label09:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS widgetStatus (deckId INTEGER NOT NULL PRIMARY KEY, deckName TEXT NOT NULL, newCards INTEGER NOT NULL, lrnCards INTEGER NOT NULL, dueCards INTEGER NOT NULL, progress INTEGER NOT NULL, eta INTEGER NOT NULL)");

     label10:
        goto label07;

     label11:
        $r5 := @caughtexception;

        if r2 == null goto label12;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label12:
        throw $r5;

     label13:
        return $r0;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
