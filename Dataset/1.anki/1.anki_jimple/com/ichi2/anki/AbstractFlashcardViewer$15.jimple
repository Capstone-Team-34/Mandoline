com.ichi2.anki.AbstractFlashcardViewer$15 extends android.webkit.WebViewClient
final com.ichi2.anki.AbstractFlashcardViewer this$0
    void <init>(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer$15 r0;
        com.ichi2.anki.AbstractFlashcardViewer $r1;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer$15;

        $r1 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        r0.<com.ichi2.anki.AbstractFlashcardViewer$15: com.ichi2.anki.AbstractFlashcardViewer this$0> = $r1;

        specialinvoke r0.<android.webkit.WebViewClient: void <init>()>();

        return;
    }
    public void onPageFinished(android.webkit.WebView, java.lang.String)
    {
        com.ichi2.anki.AbstractFlashcardViewer$15 r0;
        android.webkit.WebView $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer$15;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("onPageFinished triggered", $r3);

        virtualinvoke $r1.<android.webkit.WebView: void loadUrl(java.lang.String)>("javascript:onPageFinished();");

        return;
    }
    public boolean shouldOverrideUrlLoading(android.webkit.WebView, java.lang.String)
    {
        com.ichi2.anki.AbstractFlashcardViewer$15 r0;
        android.webkit.WebView $r1;
        java.lang.String $r2, $r12;
        android.content.ActivityNotFoundException r3;
        boolean $z0;
        android.os.Message $r4;
        com.ichi2.anki.AbstractFlashcardViewer $r5;
        android.os.Handler $r6;
        android.widget.LinearLayout $r7;
        android.content.Intent r8, $r9;
        android.content.pm.PackageManager $r10;
        android.content.pm.ResolveInfo $r11;
        java.lang.Object[] $r13;
        android.net.Uri $r14;
        int $i0;
        java.lang.StringBuilder $r15;
        java.lang.Throwable r16;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer$15;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("playsound:");

        if $z0 == 0 goto label01;

        $r4 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("playsound:", "");

        $r4.<android.os.Message: java.lang.Object obj> = $r2;

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer$15: com.ichi2.anki.AbstractFlashcardViewer this$0>;

        $r6 = staticinvoke <com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler access$1900(com.ichi2.anki.AbstractFlashcardViewer)>($r5);

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return 1;

     label01:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("file");

        if $z0 != 0 goto label02;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("data:");

        if $z0 == 0 goto label03;

     label02:
        return 0;

     label03:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("typeblurtext:");

        if $z0 == 0 goto label04;

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer$15: com.ichi2.anki.AbstractFlashcardViewer this$0>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("typeblurtext:", "");

        $r2 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String)>($r2);

        staticinvoke <com.ichi2.anki.AbstractFlashcardViewer: java.lang.String access$2002(com.ichi2.anki.AbstractFlashcardViewer,java.lang.String)>($r5, $r2);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer$15: com.ichi2.anki.AbstractFlashcardViewer this$0>;

        $r7 = $r5.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mFlipCardLayout>;

        virtualinvoke $r7.<android.widget.LinearLayout: void setVisibility(int)>(0);

        return 1;

     label04:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("typeentertext:");

        if $z0 == 0 goto label05;

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer$15: com.ichi2.anki.AbstractFlashcardViewer this$0>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("typeentertext:", "");

        $r2 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String)>($r2);

        staticinvoke <com.ichi2.anki.AbstractFlashcardViewer: java.lang.String access$2002(com.ichi2.anki.AbstractFlashcardViewer,java.lang.String)>($r5, $r2);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer$15: com.ichi2.anki.AbstractFlashcardViewer this$0>;

        $r7 = $r5.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mFlipCardLayout>;

        virtualinvoke $r7.<android.widget.LinearLayout: boolean performClick()>();

        return 1;

     label05:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("signal:typefocus");

        if $z0 == 0 goto label06;

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer$15: com.ichi2.anki.AbstractFlashcardViewer this$0>;

        $r7 = $r5.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mFlipCardLayout>;

        virtualinvoke $r7.<android.widget.LinearLayout: void setVisibility(int)>(8);

        return 1;

     label06:
        r8 = null;

     label07:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("intent:");

     label08:
        if $z0 == 0 goto label22;

     label09:
        $r9 = staticinvoke <android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>($r2, 1);

     label10:
        if $r9 == null goto label36;

     label11:
        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer$15: com.ichi2.anki.AbstractFlashcardViewer this$0>;

        $r10 = virtualinvoke $r5.<com.ichi2.anki.AbstractFlashcardViewer: android.content.pm.PackageManager getPackageManager()>();

        $r11 = virtualinvoke $r10.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>($r9, 0);

     label12:
        if $r11 != null goto label35;

     label13:
        $r12 = virtualinvoke $r9.<android.content.Intent: java.lang.String getPackage()>();

     label14:
        if $r12 != null goto label32;

     label15:
        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = $r9;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Not using resolved intent uri because not available: %s", $r13);

     label16:
        r8 = null;

     label17:
        if r8 != null goto label39;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = $r2;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Opening external link \"%s\" with an Intent", $r13);

        r8 = new android.content.Intent;

        $r14 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r2);

        specialinvoke r8.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r14);

     label18:
        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer$15: com.ichi2.anki.AbstractFlashcardViewer this$0>;

     label19:
        virtualinvoke $r5.<com.ichi2.anki.AbstractFlashcardViewer: void startActivityWithoutAnimation(android.content.Intent)>(r8);

     label20:
        return 1;

     label21:
        r3 := @caughtexception;

        virtualinvoke r3.<android.content.ActivityNotFoundException: void printStackTrace()>();

        return 1;

     label22:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("android-app:");

     label23:
        if $z0 == 0 goto label41;

     label24:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

     label25:
        if $i0 >= 22 goto label30;

     label26:
        $r9 = staticinvoke <android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>($r2, 0);

     label27:
        r8 = $r9;

     label28:
        virtualinvoke $r9.<android.content.Intent: android.content.Intent setData(android.net.Uri)>(null);

        $r14 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r2);

        $r12 = virtualinvoke $r14.<android.net.Uri: java.lang.String getHost()>();

        virtualinvoke $r9.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r12);

     label29:
        goto label10;

     label30:
        $r9 = staticinvoke <android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>($r2, 2);

     label31:
        goto label10;

     label32:
        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = $r9;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Resolving intent uri to market uri because not available: %s", $r13);

        r8 = new android.content.Intent;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("market://details?id=");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r12);

        specialinvoke r8.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r14);

     label33:
        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer$15: com.ichi2.anki.AbstractFlashcardViewer this$0>;

        $r10 = virtualinvoke $r5.<com.ichi2.anki.AbstractFlashcardViewer: android.content.pm.PackageManager getPackageManager()>();

        $r11 = virtualinvoke $r10.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>(r8, 0);

     label34:
        if $r11 != null goto label17;

        r8 = null;

        goto label17;

     label35:
        virtualinvoke $r9.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.BROWSABLE");

     label36:
        r8 = $r9;

        goto label17;

     label37:
        r16 := @caughtexception;

     label38:
        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = $r2;

        $r12 = virtualinvoke r16.<java.lang.Throwable: java.lang.String getMessage()>();

        $r13[1] = $r12;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Unable to parse intent uri: %s because: %s", $r13);

        goto label17;

     label39:
        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = $r2;

        $r13[1] = r8;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Opening resolved external link \"%s\" with an Intent: %s", $r13);

        goto label18;

     label40:
        r16 := @caughtexception;

        r8 = $r9;

        goto label38;

     label41:
        $r9 = null;

        goto label10;

        catch java.lang.Throwable from label07 to label08 with label37;
        catch java.lang.Throwable from label09 to label10 with label37;
        catch java.lang.Throwable from label11 to label12 with label40;
        catch java.lang.Throwable from label13 to label14 with label40;
        catch java.lang.Throwable from label15 to label16 with label40;
        catch android.content.ActivityNotFoundException from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label37;
        catch java.lang.Throwable from label24 to label25 with label37;
        catch java.lang.Throwable from label26 to label27 with label37;
        catch java.lang.Throwable from label28 to label29 with label37;
        catch java.lang.Throwable from label30 to label31 with label37;
        catch java.lang.Throwable from label32 to label33 with label40;
        catch java.lang.Throwable from label33 to label34 with label37;
        catch java.lang.Throwable from label35 to label36 with label40;
    }
