com.ichi2.anki.DeckPicker$28$1 extends java.lang.Object implements java.lang.Runnable
final com.ichi2.anki.DeckPicker$28 this$1
final java.util.List val$cids
    void <init>(com.ichi2.anki.DeckPicker$28, java.util.List)
    {
        com.ichi2.anki.DeckPicker$28$1 r0;
        com.ichi2.anki.DeckPicker$28 $r1;
        java.util.List $r2;

        r0 := @this: com.ichi2.anki.DeckPicker$28$1;

        $r1 := @parameter0: com.ichi2.anki.DeckPicker$28;

        $r2 := @parameter1: java.util.List;

        r0.<com.ichi2.anki.DeckPicker$28$1: com.ichi2.anki.DeckPicker$28 this$1> = $r1;

        r0.<com.ichi2.anki.DeckPicker$28$1: java.util.List val$cids> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void run()
    {
        com.ichi2.anki.DeckPicker$28$1 r0;
        com.ichi2.anki.DeckPicker$28 $r1;
        com.ichi2.anki.DeckPicker $r2, $r6;
        com.ichi2.libanki.Collection $r3;
        java.util.List $r4;
        long[] $r5;
        android.content.res.Resources $r7;
        java.lang.String $r8;
        java.lang.Object[] $r9;
        int $i0;
        java.lang.Integer $r10;

        r0 := @this: com.ichi2.anki.DeckPicker$28$1;

        $r1 = r0.<com.ichi2.anki.DeckPicker$28$1: com.ichi2.anki.DeckPicker$28 this$1>;

        $r2 = $r1.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0>;

        $r3 = virtualinvoke $r2.<com.ichi2.anki.DeckPicker: com.ichi2.libanki.Collection getCol()>();

        $r4 = r0.<com.ichi2.anki.DeckPicker$28$1: java.util.List val$cids>;

        $r5 = staticinvoke <com.ichi2.libanki.Utils: long[] arrayList2array(java.util.List)>($r4);

        virtualinvoke $r3.<com.ichi2.libanki.Collection: void remCards(long[])>($r5);

        $r1 = r0.<com.ichi2.anki.DeckPicker$28$1: com.ichi2.anki.DeckPicker$28 this$1>;

        $r2 = $r1.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0>;

        $r1 = r0.<com.ichi2.anki.DeckPicker$28$1: com.ichi2.anki.DeckPicker$28 this$1>;

        $r6 = $r1.<com.ichi2.anki.DeckPicker$28: com.ichi2.anki.DeckPicker this$0>;

        $r7 = virtualinvoke $r6.<com.ichi2.anki.DeckPicker: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String getString(int)>(2131230998);

        $r9 = newarray (java.lang.Object)[1];

        $r4 = r0.<com.ichi2.anki.DeckPicker$28$1: java.util.List val$cids>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r9[0] = $r10;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r8, $r9);

        staticinvoke <com.ichi2.anki.UIUtils: void showSimpleSnackbar(android.app.Activity,java.lang.String,boolean)>($r2, $r8, 0);

        return;
    }
