com.ichi2.anki.NoteEditor$1 extends com.ichi2.async.DeckTask$TaskListener
private boolean mCloseAfter
private android.content.Intent mIntent
final com.ichi2.anki.NoteEditor this$0
    void <init>(com.ichi2.anki.NoteEditor)
    {
        com.ichi2.anki.NoteEditor$1 r0;
        com.ichi2.anki.NoteEditor $r1;

        r0 := @this: com.ichi2.anki.NoteEditor$1;

        $r1 := @parameter0: com.ichi2.anki.NoteEditor;

        r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0> = $r1;

        specialinvoke r0.<com.ichi2.async.DeckTask$TaskListener: void <init>()>();

        r0.<com.ichi2.anki.NoteEditor$1: boolean mCloseAfter> = 0;

        return;
    }
    public void onCancelled()
    {
        com.ichi2.anki.NoteEditor$1 r0;

        r0 := @this: com.ichi2.anki.NoteEditor$1;

        return;
    }
    public void onPostExecute(com.ichi2.async.DeckTask$TaskData)
    {
        com.ichi2.anki.NoteEditor$1 r0;
        com.ichi2.async.DeckTask$TaskData $r1;
        java.lang.IllegalArgumentException r2;
        boolean $z0;
        com.ichi2.anki.NoteEditor $r3;
        com.afollestad.materialdialogs.MaterialDialog $r4;
        android.content.Intent $r5;
        java.lang.Object[] $r6;

        r0 := @this: com.ichi2.anki.NoteEditor$1;

        $r1 := @parameter0: com.ichi2.async.DeckTask$TaskData;

        $z0 = virtualinvoke $r1.<com.ichi2.async.DeckTask$TaskData: boolean getBoolean()>();

        if $z0 == 0 goto label6;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r4 = staticinvoke <com.ichi2.anki.NoteEditor: com.afollestad.materialdialogs.MaterialDialog access$000(com.ichi2.anki.NoteEditor)>($r3);

        if $r4 == null goto label2;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r4 = staticinvoke <com.ichi2.anki.NoteEditor: com.afollestad.materialdialogs.MaterialDialog access$000(com.ichi2.anki.NoteEditor)>($r3);

        $z0 = virtualinvoke $r4.<com.afollestad.materialdialogs.MaterialDialog: boolean isShowing()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

     label1:
        $r4 = staticinvoke <com.ichi2.anki.NoteEditor: com.afollestad.materialdialogs.MaterialDialog access$000(com.ichi2.anki.NoteEditor)>($r3);

        virtualinvoke $r4.<com.afollestad.materialdialogs.MaterialDialog: void dismiss()>();

     label2:
        $z0 = r0.<com.ichi2.anki.NoteEditor$1: boolean mCloseAfter>;

        if $z0 == 0 goto label5;

        $r5 = r0.<com.ichi2.anki.NoteEditor$1: android.content.Intent mIntent>;

        if $r5 == null goto label4;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r5 = r0.<com.ichi2.anki.NoteEditor$1: android.content.Intent mIntent>;

        staticinvoke <com.ichi2.anki.NoteEditor: void access$900(com.ichi2.anki.NoteEditor,android.content.Intent)>($r3, $r5);

        return;

     label3:
        r2 := @caughtexception;

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "Note Editor: Error on dismissing progress dialog", $r6);

        goto label2;

     label4:
        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        staticinvoke <com.ichi2.anki.NoteEditor: void access$1000(com.ichi2.anki.NoteEditor)>($r3);

        return;

     label5:
        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        staticinvoke <com.ichi2.anki.NoteEditor: boolean access$1102(com.ichi2.anki.NoteEditor,boolean)>($r3, 0);

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        staticinvoke <com.ichi2.anki.NoteEditor: boolean access$1202(com.ichi2.anki.NoteEditor,boolean)>($r3, 0);

        return;

     label6:
        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        staticinvoke <com.ichi2.anki.NoteEditor: void access$1300(com.ichi2.anki.NoteEditor,int)>($r3, 203);

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }
    public void onPreExecute()
    {
        com.ichi2.anki.NoteEditor$1 r0;
        com.ichi2.anki.NoteEditor $r1, $r3;
        android.content.res.Resources $r2;
        java.lang.String $r4;
        com.afollestad.materialdialogs.MaterialDialog $r5;

        r0 := @this: com.ichi2.anki.NoteEditor$1;

        $r1 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r2 = virtualinvoke $r1.<com.ichi2.anki.NoteEditor: android.content.res.Resources getResources()>();

        $r1 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r4 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(2131231273);

        $r5 = staticinvoke <com.ichi2.themes.StyledProgressDialog: com.afollestad.materialdialogs.MaterialDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>($r3, "", $r4, 0);

        staticinvoke <com.ichi2.anki.NoteEditor: com.afollestad.materialdialogs.MaterialDialog access$002(com.ichi2.anki.NoteEditor,com.afollestad.materialdialogs.MaterialDialog)>($r1, $r5);

        return;
    }
    public transient void onProgressUpdate(com.ichi2.async.DeckTask$TaskData[])
    {
        com.ichi2.anki.NoteEditor$1 r0;
        com.ichi2.async.DeckTask$TaskData[] $r1;
        com.ichi2.async.DeckTask$TaskData $r2;
        int $i0, i1, $i2;
        com.ichi2.anki.NoteEditor $r3, $r15;
        com.ichi2.libanki.Note $r4, $r5;
        org.json.JSONObject $r6;
        org.json.JSONArray $r7;
        boolean $z0;
        java.util.LinkedList $r8;
        java.lang.Object $r9;
        com.ichi2.anki.FieldEditText $r10;
        java.lang.String[] $r11;
        java.lang.String $r12;
        org.json.JSONException r13;
        java.lang.RuntimeException $r14;
        android.content.res.Resources $r16;
        java.lang.Object[] $r17;
        java.lang.Integer $r18;
        com.afollestad.materialdialogs.MaterialDialog $r19;
        android.content.Intent $r20, $r21;
        java.lang.IllegalArgumentException r22;

        r0 := @this: com.ichi2.anki.NoteEditor$1;

        $r1 := @parameter0: com.ichi2.async.DeckTask$TaskData[];

        $r2 = $r1[0];

        $i0 = virtualinvoke $r2.<com.ichi2.async.DeckTask$TaskData: int getInt()>();

        if $i0 <= 0 goto label20;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        staticinvoke <com.ichi2.anki.NoteEditor: boolean access$102(com.ichi2.anki.NoteEditor,boolean)>($r3, 1);

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        staticinvoke <com.ichi2.anki.NoteEditor: java.lang.String[] access$202(com.ichi2.anki.NoteEditor,java.lang.String[])>($r3, null);

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r4 = staticinvoke <com.ichi2.anki.NoteEditor: com.ichi2.libanki.Note access$300(com.ichi2.anki.NoteEditor)>($r3);

        $r4 = virtualinvoke $r4.<com.ichi2.libanki.Note: com.ichi2.libanki.Note clone()>();

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        staticinvoke <com.ichi2.anki.NoteEditor: void access$400(com.ichi2.anki.NoteEditor)>($r3);

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

     label01:
        $r5 = staticinvoke <com.ichi2.anki.NoteEditor: com.ichi2.libanki.Note access$300(com.ichi2.anki.NoteEditor)>($r3);

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Note: org.json.JSONObject model()>();

        $r7 = virtualinvoke $r6.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("flds");

     label02:
        if $r4 == null goto label14;

        i1 = 0;

     label03:
        $i2 = virtualinvoke $r7.<org.json.JSONArray: int length()>();

     label04:
        if i1 >= $i2 goto label14;

     label05:
        $r6 = virtualinvoke $r7.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i1);

        $z0 = virtualinvoke $r6.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("sticky");

     label06:
        if $z0 == 0 goto label12;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

     label07:
        $r8 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.LinkedList access$500(com.ichi2.anki.NoteEditor)>($r3);

        $r9 = virtualinvoke $r8.<java.util.LinkedList: java.lang.Object get(int)>(i1);

     label08:
        $r10 = (com.ichi2.anki.FieldEditText) $r9;

     label09:
        $r11 = virtualinvoke $r4.<com.ichi2.libanki.Note: java.lang.String[] getFields()>();

     label10:
        $r12 = $r11[i1];

     label11:
        virtualinvoke $r10.<com.ichi2.anki.FieldEditText: void setText(java.lang.CharSequence)>($r12);

     label12:
        i1 = i1 + 1;

        goto label03;

     label13:
        r13 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>()>();

        throw $r14;

     label14:
        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r15 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r16 = virtualinvoke $r15.<com.ichi2.anki.NoteEditor: android.content.res.Resources getResources()>();

        $r17 = newarray (java.lang.Object)[1];

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r17[0] = $r18;

        $r12 = virtualinvoke $r16.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131361798, $i0, $r17);

        staticinvoke <com.ichi2.anki.UIUtils: void showThemedToast(android.content.Context,java.lang.String,boolean)>($r3, $r12, 1);

     label15:
        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $z0 = staticinvoke <com.ichi2.anki.NoteEditor: boolean access$600(com.ichi2.anki.NoteEditor)>($r3);

        if $z0 == 0 goto label16;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        i1 = staticinvoke <com.ichi2.anki.NoteEditor: int access$700(com.ichi2.anki.NoteEditor)>($r3);

        if i1 == 8 goto label16;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $z0 = staticinvoke <com.ichi2.anki.NoteEditor: boolean access$800(com.ichi2.anki.NoteEditor)>($r3);

        if $z0 == 0 goto label21;

     label16:
        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        staticinvoke <com.ichi2.anki.NoteEditor: boolean access$102(com.ichi2.anki.NoteEditor,boolean)>($r3, 1);

        r0.<com.ichi2.anki.NoteEditor$1: boolean mCloseAfter> = 1;

     label17:
        $z0 = r0.<com.ichi2.anki.NoteEditor$1: boolean mCloseAfter>;

        if $z0 != 0 goto label25;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r19 = staticinvoke <com.ichi2.anki.NoteEditor: com.afollestad.materialdialogs.MaterialDialog access$000(com.ichi2.anki.NoteEditor)>($r3);

        if $r19 == null goto label25;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r19 = staticinvoke <com.ichi2.anki.NoteEditor: com.afollestad.materialdialogs.MaterialDialog access$000(com.ichi2.anki.NoteEditor)>($r3);

        $z0 = virtualinvoke $r19.<com.afollestad.materialdialogs.MaterialDialog: boolean isShowing()>();

        if $z0 == 0 goto label25;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

     label18:
        $r19 = staticinvoke <com.ichi2.anki.NoteEditor: com.afollestad.materialdialogs.MaterialDialog access$000(com.ichi2.anki.NoteEditor)>($r3);

        virtualinvoke $r19.<com.afollestad.materialdialogs.MaterialDialog: void dismiss()>();

     label19:
        return;

     label20:
        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r15 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r16 = virtualinvoke $r15.<com.ichi2.anki.NoteEditor: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke $r16.<android.content.res.Resources: java.lang.String getString(int)>(2131231028);

        staticinvoke <com.ichi2.anki.UIUtils: void showThemedToast(android.content.Context,java.lang.String,boolean)>($r3, $r12, 1);

        goto label15;

     label21:
        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        i1 = staticinvoke <com.ichi2.anki.NoteEditor: int access$700(com.ichi2.anki.NoteEditor)>($r3);

        if i1 != 10 goto label23;

        if $i0 <= 0 goto label22;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        staticinvoke <com.ichi2.anki.NoteEditor: boolean access$102(com.ichi2.anki.NoteEditor,boolean)>($r3, 1);

     label22:
        r0.<com.ichi2.anki.NoteEditor$1: boolean mCloseAfter> = 1;

        $r20 = new android.content.Intent;

        specialinvoke $r20.<android.content.Intent: void <init>()>();

        r0.<com.ichi2.anki.NoteEditor$1: android.content.Intent mIntent> = $r20;

        $r20 = r0.<com.ichi2.anki.NoteEditor$1: android.content.Intent mIntent>;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r21 = virtualinvoke $r3.<com.ichi2.anki.NoteEditor: android.content.Intent getIntent()>();

        $r12 = virtualinvoke $r21.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("ID");

        virtualinvoke $r20.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("ID", $r12);

        goto label17;

     label23:
        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r8 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.LinkedList access$500(com.ichi2.anki.NoteEditor)>($r3);

        $z0 = virtualinvoke $r8.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 != 0 goto label17;

        $r3 = r0.<com.ichi2.anki.NoteEditor$1: com.ichi2.anki.NoteEditor this$0>;

        $r8 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.LinkedList access$500(com.ichi2.anki.NoteEditor)>($r3);

        $r9 = virtualinvoke $r8.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r10 = (com.ichi2.anki.FieldEditText) $r9;

        virtualinvoke $r10.<com.ichi2.anki.FieldEditText: boolean requestFocus()>();

        goto label17;

     label24:
        r22 := @caughtexception;

        $r17 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r22, "Note Editor: Error on dismissing progress dialog", $r17);

     label25:
        return;

        catch org.json.JSONException from label01 to label02 with label13;
        catch org.json.JSONException from label03 to label04 with label13;
        catch org.json.JSONException from label05 to label06 with label13;
        catch org.json.JSONException from label07 to label08 with label13;
        catch org.json.JSONException from label09 to label10 with label13;
        catch org.json.JSONException from label11 to label12 with label13;
        catch java.lang.IllegalArgumentException from label18 to label19 with label24;
    }
