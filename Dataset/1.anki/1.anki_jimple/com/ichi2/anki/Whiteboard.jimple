com.ichi2.anki.Whiteboard extends android.view.View
private static final float TOUCH_TOLERANCE
private java.lang.ref.WeakReference mActivity
private android.graphics.Bitmap mBitmap
private android.graphics.Paint mBitmapPaint
private android.graphics.Canvas mCanvas
private boolean mInvertedColors
private boolean mMonochrome
private android.graphics.Paint mPaint
private android.graphics.Path mPath
private com.ichi2.anki.Whiteboard$UndoStack mUndo
private boolean mUndoModeActive
private float mX
private float mY
    public void <init>(com.ichi2.anki.AnkiActivity, boolean, boolean)
    {
        com.ichi2.anki.Whiteboard r0;
        com.ichi2.anki.AnkiActivity $r1;
        boolean $z0, $z1;
        com.ichi2.anki.Whiteboard$UndoStack $r2;
        java.lang.ref.WeakReference $r3;
        int i0;
        android.graphics.Paint $r4;
        android.graphics.Paint$Style $r5;
        android.graphics.Paint$Join $r6;
        android.graphics.Paint$Cap $r7;
        android.content.SharedPreferences $r8;
        float $f0;
        android.graphics.Path $r9;

        r0 := @this: com.ichi2.anki.Whiteboard;

        $r1 := @parameter0: com.ichi2.anki.AnkiActivity;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        $r2 = new com.ichi2.anki.Whiteboard$UndoStack;

        specialinvoke $r2.<com.ichi2.anki.Whiteboard$UndoStack: void <init>(com.ichi2.anki.Whiteboard,com.ichi2.anki.Whiteboard$1)>(r0, null);

        r0.<com.ichi2.anki.Whiteboard: com.ichi2.anki.Whiteboard$UndoStack mUndo> = $r2;

        r0.<com.ichi2.anki.Whiteboard: boolean mInvertedColors> = 0;

        r0.<com.ichi2.anki.Whiteboard: boolean mMonochrome> = 1;

        r0.<com.ichi2.anki.Whiteboard: boolean mUndoModeActive> = 0;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        r0.<com.ichi2.anki.Whiteboard: java.lang.ref.WeakReference mActivity> = $r3;

        r0.<com.ichi2.anki.Whiteboard: boolean mInvertedColors> = $z0;

        r0.<com.ichi2.anki.Whiteboard: boolean mMonochrome> = $z1;

        $z0 = r0.<com.ichi2.anki.Whiteboard: boolean mInvertedColors>;

        if $z0 != 0 goto label3;

        $z0 = r0.<com.ichi2.anki.Whiteboard: boolean mMonochrome>;

        if $z0 == 0 goto label2;

        i0 = -16777216;

     label1:
        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mPaint> = $r4;

        $r4 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r4 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setDither(boolean)>(1);

        $r4 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(i0);

        $r4 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mPaint>;

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        $r4 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mPaint>;

        $r6 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r6);

        $r4 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mPaint>;

        $r7 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r7);

        $r8 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r1);

        i0 = interfaceinvoke $r8.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("whiteBoardStrokeWidth", 6);

        $r4 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mPaint>;

        $f0 = (float) i0;

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        specialinvoke r0.<com.ichi2.anki.Whiteboard: void createBitmap()>();

        $r9 = new android.graphics.Path;

        specialinvoke $r9.<android.graphics.Path: void <init>()>();

        r0.<com.ichi2.anki.Whiteboard: android.graphics.Path mPath> = $r9;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>(int)>(4);

        r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mBitmapPaint> = $r4;

        return;

     label2:
        i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r1, 2131689642);

        goto label1;

     label3:
        $z0 = r0.<com.ichi2.anki.Whiteboard: boolean mMonochrome>;

        if $z0 == 0 goto label4;

        i0 = -1;

        goto label1;

     label4:
        i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>($r1, 2131689643);

        goto label1;
    }
    static android.graphics.Bitmap access$100(com.ichi2.anki.Whiteboard)
    {
        com.ichi2.anki.Whiteboard $r0;
        android.graphics.Bitmap r1;

        $r0 := @parameter0: com.ichi2.anki.Whiteboard;

        r1 = $r0.<com.ichi2.anki.Whiteboard: android.graphics.Bitmap mBitmap>;

        return r1;
    }
    static android.graphics.Paint access$200(com.ichi2.anki.Whiteboard)
    {
        com.ichi2.anki.Whiteboard $r0;
        android.graphics.Paint r1;

        $r0 := @parameter0: com.ichi2.anki.Whiteboard;

        r1 = $r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mPaint>;

        return r1;
    }
    static android.graphics.Canvas access$300(com.ichi2.anki.Whiteboard)
    {
        com.ichi2.anki.Whiteboard $r0;
        android.graphics.Canvas r1;

        $r0 := @parameter0: com.ichi2.anki.Whiteboard;

        r1 = $r0.<com.ichi2.anki.Whiteboard: android.graphics.Canvas mCanvas>;

        return r1;
    }
    private void createBitmap()
    {
        com.ichi2.anki.Whiteboard r0;
        int $i0, $i1;
        boolean $z0;
        android.graphics.Bitmap$Config $r1;

        r0 := @this: com.ichi2.anki.Whiteboard;

        $i0 = staticinvoke <com.ichi2.anki.Whiteboard: int getDisplayWidth()>();

        $i1 = staticinvoke <com.ichi2.anki.Whiteboard: int getDisplayHeight()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $z0 = r0.<com.ichi2.anki.Whiteboard: boolean mMonochrome>;

        if $z0 == 0 goto label1;

        $z0 = r0.<com.ichi2.anki.Whiteboard: boolean mInvertedColors>;

        if $z0 != 0 goto label1;

        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ALPHA_8>;

        specialinvoke r0.<com.ichi2.anki.Whiteboard: void createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i0, $r1);

        return;

     label1:
        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_4444>;

        specialinvoke r0.<com.ichi2.anki.Whiteboard: void createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i0, $r1);

        return;
    }
    private void createBitmap(int, int, android.graphics.Bitmap$Config)
    {
        com.ichi2.anki.Whiteboard r0;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r1;
        android.graphics.Bitmap $r2;
        android.graphics.Canvas $r3;

        r0 := @this: com.ichi2.anki.Whiteboard;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Bitmap$Config;

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r1);

        r0.<com.ichi2.anki.Whiteboard: android.graphics.Bitmap mBitmap> = $r2;

        $r3 = new android.graphics.Canvas;

        $r2 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Bitmap mBitmap>;

        specialinvoke $r3.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r2);

        r0.<com.ichi2.anki.Whiteboard: android.graphics.Canvas mCanvas> = $r3;

        virtualinvoke r0.<com.ichi2.anki.Whiteboard: void clear()>();

        return;
    }
    private static int getDisplayHeight()
    {
        com.ichi2.anki.AnkiDroidApp $r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.WindowManager $r3;
        android.view.Display $r4;
        int $i0;

        $r0 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

        $r1 = virtualinvoke $r0.<com.ichi2.anki.AnkiDroidApp: android.content.Context getApplicationContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r4.<android.view.Display: int getHeight()>();

        return $i0;
    }
    private static int getDisplayWidth()
    {
        com.ichi2.anki.AnkiDroidApp $r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.WindowManager $r3;
        android.view.Display $r4;
        int $i0;

        $r0 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

        $r1 = virtualinvoke $r0.<com.ichi2.anki.AnkiDroidApp: android.content.Context getApplicationContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r4.<android.view.Display: int getWidth()>();

        return $i0;
    }
    private void touchMove(float, float)
    {
        com.ichi2.anki.Whiteboard r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b0;
        android.graphics.Path $r1;

        r0 := @this: com.ichi2.anki.Whiteboard;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 = r0.<com.ichi2.anki.Whiteboard: float mX>;

        $f2 = $f0 - $f2;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $f3 = r0.<com.ichi2.anki.Whiteboard: float mY>;

        $f3 = $f1 - $f3;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $b0 = $f2 cmpl 4.0F;

        if $b0 >= 0 goto label1;

        $b0 = $f3 cmpl 4.0F;

        if $b0 < 0 goto label2;

     label1:
        $r1 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Path mPath>;

        $f3 = r0.<com.ichi2.anki.Whiteboard: float mX>;

        $f2 = r0.<com.ichi2.anki.Whiteboard: float mY>;

        $f4 = r0.<com.ichi2.anki.Whiteboard: float mX>;

        $f4 = $f4 + $f0;

        $f4 = $f4 / 2.0F;

        $f5 = r0.<com.ichi2.anki.Whiteboard: float mY>;

        $f5 = $f5 + $f1;

        $f5 = $f5 / 2.0F;

        virtualinvoke $r1.<android.graphics.Path: void quadTo(float,float,float,float)>($f3, $f2, $f4, $f5);

        r0.<com.ichi2.anki.Whiteboard: float mX> = $f0;

        r0.<com.ichi2.anki.Whiteboard: float mY> = $f1;

     label2:
        return;
    }
    private void touchStart(float, float)
    {
        com.ichi2.anki.Whiteboard r0;
        float $f0, $f1;
        android.graphics.Path $r1;

        r0 := @this: com.ichi2.anki.Whiteboard;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Path mPath>;

        virtualinvoke $r1.<android.graphics.Path: void reset()>();

        $r1 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Path mPath>;

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>($f0, $f1);

        r0.<com.ichi2.anki.Whiteboard: float mX> = $f0;

        r0.<com.ichi2.anki.Whiteboard: float mY> = $f1;

        return;
    }
    private void touchUp()
    {
        com.ichi2.anki.Whiteboard r0;
        android.graphics.PathMeasure r1;
        android.graphics.Paint $r2;
        android.graphics.Path $r3;
        float $f0, $f1;
        byte $b0;
        android.graphics.Canvas $r4;
        com.ichi2.anki.Whiteboard$UndoStack $r5;
        int $i1;
        java.lang.ref.WeakReference $r6;
        java.lang.Object $r7;
        com.ichi2.anki.AnkiActivity $r8;

        r0 := @this: com.ichi2.anki.Whiteboard;

        r1 = new android.graphics.PathMeasure;

        $r3 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Path mPath>;

        specialinvoke r1.<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>($r3, 0);

        $r3 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Path mPath>;

        $f0 = r0.<com.ichi2.anki.Whiteboard: float mX>;

        $f1 = r0.<com.ichi2.anki.Whiteboard: float mY>;

        virtualinvoke $r3.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $f0 = virtualinvoke r1.<android.graphics.PathMeasure: float getLength()>();

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label2;

        $r4 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Canvas mCanvas>;

        $r3 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Path mPath>;

        $r2 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r3, $r2);

        $r5 = r0.<com.ichi2.anki.Whiteboard: com.ichi2.anki.Whiteboard$UndoStack mUndo>;

        $r3 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Path mPath>;

        virtualinvoke $r5.<com.ichi2.anki.Whiteboard$UndoStack: void add(android.graphics.Path)>($r3);

     label1:
        r0.<com.ichi2.anki.Whiteboard: boolean mUndoModeActive> = 1;

        $r3 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Path mPath>;

        virtualinvoke $r3.<android.graphics.Path: void reset()>();

        $r5 = r0.<com.ichi2.anki.Whiteboard: com.ichi2.anki.Whiteboard$UndoStack mUndo>;

        $i1 = virtualinvoke $r5.<com.ichi2.anki.Whiteboard$UndoStack: int size()>();

        if $i1 != 1 goto label3;

        $r6 = r0.<com.ichi2.anki.Whiteboard: java.lang.ref.WeakReference mActivity>;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r7 == null goto label3;

        $r6 = r0.<com.ichi2.anki.Whiteboard: java.lang.ref.WeakReference mActivity>;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r8 = (com.ichi2.anki.AnkiActivity) $r7;

        virtualinvoke $r8.<com.ichi2.anki.AnkiActivity: void supportInvalidateOptionsMenu()>();

        return;

     label2:
        $r4 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Canvas mCanvas>;

        $f0 = r0.<com.ichi2.anki.Whiteboard: float mX>;

        $f1 = r0.<com.ichi2.anki.Whiteboard: float mY>;

        $r2 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Canvas: void drawPoint(float,float,android.graphics.Paint)>($f0, $f1, $r2);

        $r5 = r0.<com.ichi2.anki.Whiteboard: com.ichi2.anki.Whiteboard$UndoStack mUndo>;

        $f0 = r0.<com.ichi2.anki.Whiteboard: float mX>;

        $f1 = r0.<com.ichi2.anki.Whiteboard: float mY>;

        virtualinvoke $r5.<com.ichi2.anki.Whiteboard$UndoStack: void add(float,float)>($f0, $f1);

        goto label1;

     label3:
        return;
    }
    public void clear()
    {
        com.ichi2.anki.Whiteboard r0;
        android.graphics.Bitmap $r1;
        com.ichi2.anki.Whiteboard$UndoStack $r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        com.ichi2.anki.AnkiActivity $r5;

        r0 := @this: com.ichi2.anki.Whiteboard;

        r0.<com.ichi2.anki.Whiteboard: boolean mUndoModeActive> = 0;

        $r1 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r1.<android.graphics.Bitmap: void eraseColor(int)>(0);

        $r2 = r0.<com.ichi2.anki.Whiteboard: com.ichi2.anki.Whiteboard$UndoStack mUndo>;

        virtualinvoke $r2.<com.ichi2.anki.Whiteboard$UndoStack: void clear()>();

        virtualinvoke r0.<com.ichi2.anki.Whiteboard: void invalidate()>();

        $r3 = r0.<com.ichi2.anki.Whiteboard: java.lang.ref.WeakReference mActivity>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r4 == null goto label1;

        $r3 = r0.<com.ichi2.anki.Whiteboard: java.lang.ref.WeakReference mActivity>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r5 = (com.ichi2.anki.AnkiActivity) $r4;

        virtualinvoke $r5.<com.ichi2.anki.AnkiActivity: void supportInvalidateOptionsMenu()>();

     label1:
        return;
    }
    public boolean handleTouchEvent(android.view.MotionEvent)
    {
        com.ichi2.anki.Whiteboard r0;
        android.view.MotionEvent $r1;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1;

        r0 := @this: com.ichi2.anki.Whiteboard;

        $r1 := @parameter0: android.view.MotionEvent;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label6;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        specialinvoke r0.<com.ichi2.anki.Whiteboard: void touchStart(float,float)>($f0, $f1);

        virtualinvoke r0.<com.ichi2.anki.Whiteboard: void invalidate()>();

        return 1;

     label3:
        $i0 = 0;

     label4:
        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getHistorySize()>();

        if $i0 >= $i1 goto label5;

        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getHistoricalX(int)>($i0);

        $f3 = virtualinvoke $r1.<android.view.MotionEvent: float getHistoricalY(int)>($i0);

        specialinvoke r0.<com.ichi2.anki.Whiteboard: void touchMove(float,float)>($f2, $f3);

        $i0 = $i0 + 1;

        goto label4;

     label5:
        specialinvoke r0.<com.ichi2.anki.Whiteboard: void touchMove(float,float)>($f0, $f1);

        virtualinvoke r0.<com.ichi2.anki.Whiteboard: void invalidate()>();

        return 1;

     label6:
        specialinvoke r0.<com.ichi2.anki.Whiteboard: void touchUp()>();

        virtualinvoke r0.<com.ichi2.anki.Whiteboard: void invalidate()>();

        return 1;
    }
    public boolean isUndoModeActive()
    {
        com.ichi2.anki.Whiteboard r0;
        boolean z0;

        r0 := @this: com.ichi2.anki.Whiteboard;

        z0 = r0.<com.ichi2.anki.Whiteboard: boolean mUndoModeActive>;

        return z0;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        com.ichi2.anki.Whiteboard r0;
        android.graphics.Canvas $r1;
        android.graphics.Bitmap $r2;
        android.graphics.Paint $r3;
        android.graphics.Path $r4;

        r0 := @this: com.ichi2.anki.Whiteboard;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>($r1);

        virtualinvoke $r1.<android.graphics.Canvas: void drawColor(int)>(0);

        $r2 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Bitmap mBitmap>;

        $r3 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mBitmapPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r2, 0.0F, 0.0F, $r3);

        $r4 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Path mPath>;

        $r3 = r0.<com.ichi2.anki.Whiteboard: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r4, $r3);

        return;
    }
    public void undo()
    {
        com.ichi2.anki.Whiteboard r0;
        com.ichi2.anki.Whiteboard$UndoStack $r1;
        int $i0;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        com.ichi2.anki.AnkiActivity $r4;

        r0 := @this: com.ichi2.anki.Whiteboard;

        $r1 = r0.<com.ichi2.anki.Whiteboard: com.ichi2.anki.Whiteboard$UndoStack mUndo>;

        virtualinvoke $r1.<com.ichi2.anki.Whiteboard$UndoStack: void pop()>();

        $r1 = r0.<com.ichi2.anki.Whiteboard: com.ichi2.anki.Whiteboard$UndoStack mUndo>;

        virtualinvoke $r1.<com.ichi2.anki.Whiteboard$UndoStack: void apply()>();

        $i0 = virtualinvoke r0.<com.ichi2.anki.Whiteboard: int undoSize()>();

        if $i0 != 0 goto label1;

        $r2 = r0.<com.ichi2.anki.Whiteboard: java.lang.ref.WeakReference mActivity>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r3 == null goto label1;

        $r2 = r0.<com.ichi2.anki.Whiteboard: java.lang.ref.WeakReference mActivity>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r4 = (com.ichi2.anki.AnkiActivity) $r3;

        virtualinvoke $r4.<com.ichi2.anki.AnkiActivity: void supportInvalidateOptionsMenu()>();

     label1:
        return;
    }
    public int undoSize()
    {
        com.ichi2.anki.Whiteboard r0;
        int $i0;
        com.ichi2.anki.Whiteboard$UndoStack $r1;

        r0 := @this: com.ichi2.anki.Whiteboard;

        $r1 = r0.<com.ichi2.anki.Whiteboard: com.ichi2.anki.Whiteboard$UndoStack mUndo>;

        $i0 = virtualinvoke $r1.<com.ichi2.anki.Whiteboard$UndoStack: int size()>();

        return $i0;
    }
