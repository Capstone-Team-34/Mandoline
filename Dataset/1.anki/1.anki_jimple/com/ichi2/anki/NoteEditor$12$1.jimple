com.ichi2.anki.NoteEditor$12$1 extends java.lang.Object implements android.support.v7.widget.PopupMenu$OnMenuItemClickListener
final com.ichi2.anki.NoteEditor$12 this$1
final java.lang.String[][] val$items
    void <init>(com.ichi2.anki.NoteEditor$12, java.lang.String[][])
    {
        com.ichi2.anki.NoteEditor$12$1 r0;
        com.ichi2.anki.NoteEditor$12 $r1;
        java.lang.String[][] $r2;

        r0 := @this: com.ichi2.anki.NoteEditor$12$1;

        $r1 := @parameter0: com.ichi2.anki.NoteEditor$12;

        $r2 := @parameter1: java.lang.String[][];

        r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1> = $r1;

        r0.<com.ichi2.anki.NoteEditor$12$1: java.lang.String[][] val$items> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public boolean onMenuItemClick(android.view.MenuItem)
    {
        com.ichi2.anki.NoteEditor$12$1 r0;
        android.view.MenuItem $r1;
        int $i0, $i1;
        java.lang.Integer $r2, $r8, r10;
        java.lang.Object[] $r3;
        com.ichi2.anki.NoteEditor$12 $r4;
        com.ichi2.anki.NoteEditor $r5, $r6;
        java.util.Map $r7;
        java.lang.Object $r9;
        java.lang.String[][] $r11;
        org.json.JSONObject $r12;

        r0 := @this: com.ichi2.anki.NoteEditor$12$1;

        $r1 := @parameter0: android.view.MenuItem;

        $i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r2;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("NoteEditor:: User chose to remap to old field %d", $r3);

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $r5 = $r4.<com.ichi2.anki.NoteEditor$12: com.ichi2.anki.NoteEditor this$0>;

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $r6 = $r4.<com.ichi2.anki.NoteEditor$12: com.ichi2.anki.NoteEditor this$0>;

        $r7 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.Map access$2700(com.ichi2.anki.NoteEditor)>($r6);

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $i0 = $r4.<com.ichi2.anki.NoteEditor$12: int val$newFieldIndex>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r9 = staticinvoke <com.ichi2.anki.NoteEditor: java.lang.Object access$2800(com.ichi2.anki.NoteEditor,java.util.Map,java.lang.Object)>($r5, $r7, $r8);

        $r8 = (java.lang.Integer) $r9;

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $r5 = $r4.<com.ichi2.anki.NoteEditor$12: com.ichi2.anki.NoteEditor this$0>;

        $r7 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.Map access$2700(com.ichi2.anki.NoteEditor)>($r5);

        $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r10 = (java.lang.Integer) $r9;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r11 = r0.<com.ichi2.anki.NoteEditor$12$1: java.lang.String[][] val$items>;

        $i1 = lengthof $r11;

        if $i0 != $i1 goto label2;

        if $r8 == null goto label2;

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $r5 = $r4.<com.ichi2.anki.NoteEditor$12: com.ichi2.anki.NoteEditor this$0>;

        $r7 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.Map access$2700(com.ichi2.anki.NoteEditor)>($r5);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r8);

     label1:
        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $r5 = $r4.<com.ichi2.anki.NoteEditor$12: com.ichi2.anki.NoteEditor this$0>;

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $r6 = $r4.<com.ichi2.anki.NoteEditor$12: com.ichi2.anki.NoteEditor this$0>;

        $r12 = staticinvoke <com.ichi2.anki.NoteEditor: org.json.JSONObject access$2900(com.ichi2.anki.NoteEditor)>($r6);

        staticinvoke <com.ichi2.anki.NoteEditor: void access$3000(com.ichi2.anki.NoteEditor,org.json.JSONObject)>($r5, $r12);

        return 1;

     label2:
        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r11 = r0.<com.ichi2.anki.NoteEditor$12$1: java.lang.String[][] val$items>;

        $i1 = lengthof $r11;

        if $i0 >= $i1 goto label3;

        if r10 == null goto label3;

        if $r8 == null goto label3;

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $i0 = $r4.<com.ichi2.anki.NoteEditor$12: int val$newFieldIndex>;

        $i1 = virtualinvoke r10.<java.lang.Integer: int intValue()>();

        if $i0 == $i1 goto label3;

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $r5 = $r4.<com.ichi2.anki.NoteEditor$12: com.ichi2.anki.NoteEditor this$0>;

        $r7 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.Map access$2700(com.ichi2.anki.NoteEditor)>($r5);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r10);

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $r5 = $r4.<com.ichi2.anki.NoteEditor$12: com.ichi2.anki.NoteEditor this$0>;

        $r7 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.Map access$2700(com.ichi2.anki.NoteEditor)>($r5);

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $i0 = $r4.<com.ichi2.anki.NoteEditor$12: int val$newFieldIndex>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r8);

        goto label1;

     label3:
        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r11 = r0.<com.ichi2.anki.NoteEditor$12$1: java.lang.String[][] val$items>;

        $i1 = lengthof $r11;

        if $i0 >= $i1 goto label4;

        if r10 == null goto label4;

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $r5 = $r4.<com.ichi2.anki.NoteEditor$12: com.ichi2.anki.NoteEditor this$0>;

        $r7 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.Map access$2700(com.ichi2.anki.NoteEditor)>($r5);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r8);

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $r5 = $r4.<com.ichi2.anki.NoteEditor$12: com.ichi2.anki.NoteEditor this$0>;

        $r7 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.Map access$2700(com.ichi2.anki.NoteEditor)>($r5);

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $i0 = $r4.<com.ichi2.anki.NoteEditor$12: int val$newFieldIndex>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r8);

        goto label1;

     label4:
        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r11 = r0.<com.ichi2.anki.NoteEditor$12$1: java.lang.String[][] val$items>;

        $i1 = lengthof $r11;

        if $i0 >= $i1 goto label1;

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $r5 = $r4.<com.ichi2.anki.NoteEditor$12: com.ichi2.anki.NoteEditor this$0>;

        $r7 = staticinvoke <com.ichi2.anki.NoteEditor: java.util.Map access$2700(com.ichi2.anki.NoteEditor)>($r5);

        $r4 = r0.<com.ichi2.anki.NoteEditor$12$1: com.ichi2.anki.NoteEditor$12 this$1>;

        $i0 = $r4.<com.ichi2.anki.NoteEditor$12: int val$newFieldIndex>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r8);

        goto label1;
    }
