com.ichi2.anki.AnkiActivity extends android.support.v7.app.AppCompatActivity implements android.support.v4.app.LoaderManager$LoaderCallbacks com.ichi2.anki.dialogs.SimpleMessageDialog$SimpleMessageDialogListener
public static final int REQUEST_REVIEW
public final int SIMPLE_NOTIFICATION_ID
private com.ichi2.compat.customtabs.CustomTabActivityHelper mCustomTabActivityHelper
private com.ichi2.anki.dialogs.DialogHandler mHandler
    public void <init>()
    {
        com.ichi2.anki.AnkiActivity r0;
        com.ichi2.anki.dialogs.DialogHandler $r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void <init>()>();

        r0.<com.ichi2.anki.AnkiActivity: int SIMPLE_NOTIFICATION_ID> = 0;

        $r1 = new com.ichi2.anki.dialogs.DialogHandler;

        specialinvoke $r1.<com.ichi2.anki.dialogs.DialogHandler: void <init>(com.ichi2.anki.AnkiActivity)>(r0);

        r0.<com.ichi2.anki.AnkiActivity: com.ichi2.anki.dialogs.DialogHandler mHandler> = $r1;

        return;
    }
    private void disableActivityAnimation()
    {
        com.ichi2.anki.AnkiActivity r0;
        int $i0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $i0 = <com.ichi2.anim.ActivityTransitionAnimation: int NONE>;

        staticinvoke <com.ichi2.anim.ActivityTransitionAnimation: void slide(android.app.Activity,int)>(r0, $i0);

        return;
    }
    private void disableIntentAnimation(android.content.Intent)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.content.Intent $r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.content.Intent;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent addFlags(int)>(65536);

        return;
    }
    private void enableActivityAnimation(int)
    {
        com.ichi2.anki.AnkiActivity r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: boolean animationDisabled()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void disableActivityAnimation()>();

        return;

     label1:
        staticinvoke <com.ichi2.anim.ActivityTransitionAnimation: void slide(android.app.Activity,int)>(r0, $i0);

        return;
    }
    private void enableIntentAnimation(android.content.Intent)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.content.Intent $r1;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.content.Intent;

        $z0 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: boolean animationDisabled()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void disableIntentAnimation(android.content.Intent)>($r1);

     label1:
        return;
    }
    public void addContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $z0 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: boolean animationDisabled()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<android.view.View: void clearAnimation()>();

     label1:
        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r2);

        return;
    }
    public boolean animationDisabled()
    {
        com.ichi2.anki.AnkiActivity r0;
        android.content.SharedPreferences $r1;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>(r0);

        $z0 = interfaceinvoke $r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("eInkDisplay", 0);

        return $z0;
    }
    public boolean animationEnabled()
    {
        com.ichi2.anki.AnkiActivity r0;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $z0 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: boolean animationDisabled()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean colIsOpen()
    {
        com.ichi2.anki.AnkiActivity r0;
        com.ichi2.anki.CollectionHelper $r1;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 = staticinvoke <com.ichi2.anki.CollectionHelper: com.ichi2.anki.CollectionHelper getInstance()>();

        $z0 = virtualinvoke $r1.<com.ichi2.anki.CollectionHelper: boolean colIsOpen()>();

        return $z0;
    }
    protected void disableViewAnimation(android.view.View)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.view.View $r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r1.<android.view.View: void clearAnimation()>();

        return;
    }
    public void dismissAllDialogFragments()
    {
        com.ichi2.anki.AnkiActivity r0;
        android.support.v4.app.FragmentManager $r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>();

        virtualinvoke $r1.<android.support.v4.app.FragmentManager: void popBackStack(java.lang.String,int)>("dialog", 1);

        return;
    }
    public void dismissSimpleMessageDialog(boolean)
    {
        com.ichi2.anki.AnkiActivity r0;
        boolean $z0;
        android.content.Intent r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void dismissAllDialogFragments()>();

        if $z0 == 0 goto label1;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/ichi2/anki/DeckPicker;");

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(335544320);

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void startActivityWithoutAnimation(android.content.Intent)>(r1);

     label1:
        return;
    }
    protected void enableViewAnimation(android.view.View, android.view.animation.Animation)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.view.View $r1;
        android.view.animation.Animation $r2;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.animation.Animation;

        $z0 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: boolean animationDisabled()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void disableViewAnimation(android.view.View)>($r1);

        return;

     label1:
        virtualinvoke $r1.<android.view.View: void setAnimation(android.view.animation.Animation)>($r2);

        return;
    }
    public void finish()
    {
        com.ichi2.anki.AnkiActivity r0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void finish()>();

        return;
    }
    public void finishWithAnimation(int)
    {
        com.ichi2.anki.AnkiActivity r0;
        int $i0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $i0 := @parameter0: int;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void finish()>();

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void enableActivityAnimation(int)>($i0);

        return;
    }
    public void finishWithoutAnimation()
    {
        com.ichi2.anki.AnkiActivity r0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void finish()>();

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void disableActivityAnimation()>();

        return;
    }
    public com.ichi2.libanki.Collection getCol()
    {
        com.ichi2.anki.AnkiActivity r0;
        com.ichi2.anki.CollectionHelper $r1;
        com.ichi2.libanki.Collection $r2;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 = staticinvoke <com.ichi2.anki.CollectionHelper: com.ichi2.anki.CollectionHelper getInstance()>();

        $r2 = virtualinvoke $r1.<com.ichi2.anki.CollectionHelper: com.ichi2.libanki.Collection getCol(android.content.Context)>(r0);

        return $r2;
    }
    public com.ichi2.compat.customtabs.CustomTabActivityHelper getCustomTabActivityHelper()
    {
        com.ichi2.anki.AnkiActivity r0;
        com.ichi2.compat.customtabs.CustomTabActivityHelper r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        r1 = r0.<com.ichi2.anki.AnkiActivity: com.ichi2.compat.customtabs.CustomTabActivityHelper mCustomTabActivityHelper>;

        return r1;
    }
    public com.ichi2.anki.dialogs.DialogHandler getDialogHandler()
    {
        com.ichi2.anki.AnkiActivity r0;
        com.ichi2.anki.dialogs.DialogHandler r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        r1 = r0.<com.ichi2.anki.AnkiActivity: com.ichi2.anki.dialogs.DialogHandler mHandler>;

        return r1;
    }
    public void hideProgressBar()
    {
        com.ichi2.anki.AnkiActivity r0;
        android.view.View $r1;
        android.widget.ProgressBar r2;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: android.view.View findViewById(int)>(2131755135);

        r2 = (android.widget.ProgressBar) $r1;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.ProgressBar: void setVisibility(int)>(8);

     label1:
        return;
    }
    protected void mayOpenUrl(android.net.Uri)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.net.Uri $r1;
        com.ichi2.compat.customtabs.CustomTabActivityHelper $r2;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.String $r4;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.net.Uri;

        $r2 = r0.<com.ichi2.anki.AnkiActivity: com.ichi2.compat.customtabs.CustomTabActivityHelper mCustomTabActivityHelper>;

        $z0 = virtualinvoke $r2.<com.ichi2.compat.customtabs.CustomTabActivityHelper: boolean mayLaunchUrl(android.net.Uri,android.os.Bundle,java.util.List)>($r1, null, null);

        if $z0 != 0 goto label1;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke $r1.<android.net.Uri: java.lang.String toString()>();

        $r3[0] = $r4;

        staticinvoke <timber.log.Timber: void w(java.lang.String,java.lang.Object[])>("Couldn\'t preload url: %s", $r3);

     label1:
        return;
    }
    protected void onCollectionLoadError()
    {
        com.ichi2.anki.AnkiActivity r0;
        android.content.Intent r1;
        int $i0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/ichi2/anki/DeckPicker;");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("collectionLoadError", 1);

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(335544320);

        $i0 = <com.ichi2.anim.ActivityTransitionAnimation: int LEFT>;

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void startActivityWithAnimation(android.content.Intent,int)>(r1, $i0);

        return;
    }
    protected void onCollectionLoaded(com.ichi2.libanki.Collection)
    {
        com.ichi2.anki.AnkiActivity r0;
        com.ichi2.libanki.Collection $r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        return;
    }
    protected void onCreate(android.os.Bundle)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.os.Bundle $r1;
        com.ichi2.compat.customtabs.CustomTabActivityHelper $r2;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void setVolumeControlStream(int)>(3);

        staticinvoke <com.ichi2.themes.Themes: void setTheme(android.content.Context)>(r0);

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)>($r1);

        $r2 = new com.ichi2.compat.customtabs.CustomTabActivityHelper;

        specialinvoke $r2.<com.ichi2.compat.customtabs.CustomTabActivityHelper: void <init>()>();

        r0.<com.ichi2.anki.AnkiActivity: com.ichi2.compat.customtabs.CustomTabActivityHelper mCustomTabActivityHelper> = $r2;

        return;
    }
    public android.support.v4.content.Loader onCreateLoader(int, android.os.Bundle)
    {
        com.ichi2.anki.AnkiActivity r0;
        int $i0;
        android.os.Bundle $r1;
        com.ichi2.async.CollectionLoader $r2;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        $r2 = new com.ichi2.async.CollectionLoader;

        specialinvoke $r2.<com.ichi2.async.CollectionLoader: void <init>(android.content.Context)>(r0);

        return $r2;
    }
    public void onLoadFinished(android.support.v4.content.Loader, com.ichi2.libanki.Collection)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.support.v4.content.Loader r1;
        com.ichi2.libanki.Collection $r2;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        r1 := @parameter0: android.support.v4.content.Loader;

        $r2 := @parameter1: com.ichi2.libanki.Collection;

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void hideProgressBar()>();

        if $r2 == null goto label1;

        $z0 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: boolean colIsOpen()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void onCollectionLoaded(com.ichi2.libanki.Collection)>($r2);

        return;

     label1:
        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void onCollectionLoadError()>();

        return;
    }
    public volatile void onLoadFinished(android.support.v4.content.Loader, java.lang.Object)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.support.v4.content.Loader $r1;
        java.lang.Object $r2;
        com.ichi2.libanki.Collection $r3;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.support.v4.content.Loader;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (com.ichi2.libanki.Collection) $r2;

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void onLoadFinished(android.support.v4.content.Loader,com.ichi2.libanki.Collection)>($r1, $r3);

        return;
    }
    public void onLoaderReset(android.support.v4.content.Loader)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.support.v4.content.Loader r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        r1 := @parameter0: android.support.v4.content.Loader;

        return;
    }
    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.view.MenuItem $r1;
        int $i0;
        boolean $z0;
        java.lang.Object[] $r2;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.view.MenuItem;

        $i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 16908332: goto label2;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke r0.<android.support.v7.app.AppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)>($r1);

        return $z0;

     label2:
        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Home button pressed", $r2);

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void finishWithoutAnimation()>();

        return 1;
    }
    protected void onResume()
    {
        com.ichi2.anki.AnkiActivity r0;
        java.lang.Object $r1;
        android.app.NotificationManager $r2;
        com.ichi2.anki.dialogs.DialogHandler $r3;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onResume()>();

        $r1 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: java.lang.Object getSystemService(java.lang.String)>("notification");

        $r2 = (android.app.NotificationManager) $r1;

        virtualinvoke $r2.<android.app.NotificationManager: void cancel(int)>(0);

        $r3 = r0.<com.ichi2.anki.AnkiActivity: com.ichi2.anki.dialogs.DialogHandler mHandler>;

        virtualinvoke $r3.<com.ichi2.anki.dialogs.DialogHandler: void readMessage()>();

        return;
    }
    protected void onStart()
    {
        com.ichi2.anki.AnkiActivity r0;
        com.ichi2.compat.customtabs.CustomTabActivityHelper $r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onStart()>();

        $r1 = r0.<com.ichi2.anki.AnkiActivity: com.ichi2.compat.customtabs.CustomTabActivityHelper mCustomTabActivityHelper>;

        virtualinvoke $r1.<com.ichi2.compat.customtabs.CustomTabActivityHelper: void bindCustomTabsService(android.app.Activity)>(r0);

        return;
    }
    protected void onStop()
    {
        com.ichi2.anki.AnkiActivity r0;
        com.ichi2.compat.customtabs.CustomTabActivityHelper $r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void onStop()>();

        $r1 = r0.<com.ichi2.anki.AnkiActivity: com.ichi2.compat.customtabs.CustomTabActivityHelper mCustomTabActivityHelper>;

        virtualinvoke $r1.<com.ichi2.compat.customtabs.CustomTabActivityHelper: void unbindCustomTabsService(android.app.Activity)>(r0);

        return;
    }
    protected void openUrl(android.net.Uri)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.net.Uri $r1;
        com.ichi2.compat.Compat $r2;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.net.Uri;

        $r2 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        interfaceinvoke $r2.<com.ichi2.compat.Compat: void openUrl(com.ichi2.anki.AnkiActivity,android.net.Uri)>(r0, $r1);

        return;
    }
    public void restartActivity()
    {
        com.ichi2.anki.AnkiActivity r0;
        android.content.Intent r1;
        java.lang.Class $r2;
        java.lang.Object[] $r3;
        android.os.Bundle $r4;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("AnkiActivity -- restartActivity()", $r3);

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>(r0, $r2);

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>($r4);

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void startActivityWithoutAnimation(android.content.Intent)>(r1);

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void finishWithoutAnimation()>();

        return;
    }
    public void setContentView(android.view.View)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: boolean animationDisabled()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<android.view.View: void clearAnimation()>();

     label1:
        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void setContentView(android.view.View)>($r1);

        return;
    }
    public void setContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $z0 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: boolean animationDisabled()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<android.view.View: void clearAnimation()>();

     label1:
        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r2);

        return;
    }
    public void showAsyncDialogFragment(com.ichi2.anki.dialogs.AsyncDialogFragment)
    {
        com.ichi2.anki.AnkiActivity r0;
        com.ichi2.anki.dialogs.AsyncDialogFragment $r1;
        java.lang.IllegalStateException r2;
        android.os.Message $r3;
        java.lang.String $r4, $r5;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: com.ichi2.anki.dialogs.AsyncDialogFragment;

     label1:
        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void showDialogFragment(android.support.v4.app.DialogFragment)>($r1);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r3 = virtualinvoke $r1.<com.ichi2.anki.dialogs.AsyncDialogFragment: android.os.Message getDialogHandlerMessage()>();

        staticinvoke <com.ichi2.anki.dialogs.DialogHandler: void storeMessage(android.os.Message)>($r3);

        $r4 = virtualinvoke $r1.<com.ichi2.anki.dialogs.AsyncDialogFragment: java.lang.String getNotificationTitle()>();

        $r5 = virtualinvoke $r1.<com.ichi2.anki.dialogs.AsyncDialogFragment: java.lang.String getNotificationMessage()>();

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void showSimpleNotification(java.lang.String,java.lang.String)>($r4, $r5);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }
    public void showDialogFragment(android.support.v4.app.DialogFragment)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.support.v4.app.DialogFragment $r1;
        android.support.v4.app.FragmentManager $r2;
        android.support.v4.app.FragmentTransaction $r3;
        android.support.v4.app.Fragment $r4;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.support.v4.app.DialogFragment;

        $r2 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>();

        $r3 = virtualinvoke $r2.<android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()>();

        $r2 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>();

        $r4 = virtualinvoke $r2.<android.support.v4.app.FragmentManager: android.support.v4.app.Fragment findFragmentByTag(java.lang.String)>("dialog");

        if $r4 == null goto label1;

        virtualinvoke $r3.<android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)>($r4);

     label1:
        virtualinvoke $r3.<android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)>("dialog");

        virtualinvoke $r1.<android.support.v4.app.DialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)>($r3, "dialog");

        $r2 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>();

        virtualinvoke $r2.<android.support.v4.app.FragmentManager: boolean executePendingTransactions()>();

        return;
    }
    public void showProgressBar()
    {
        com.ichi2.anki.AnkiActivity r0;
        android.view.View $r1;
        android.widget.ProgressBar r2;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: android.view.View findViewById(int)>(2131755135);

        r2 = (android.widget.ProgressBar) $r1;

        if r2 == null goto label1;

        virtualinvoke r2.<android.widget.ProgressBar: void setVisibility(int)>(0);

     label1:
        return;
    }
    protected void showSimpleMessageDialog(java.lang.String)
    {
        com.ichi2.anki.AnkiActivity r0;
        java.lang.String $r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void showSimpleMessageDialog(java.lang.String,boolean)>($r1, 0);

        return;
    }
    protected void showSimpleMessageDialog(java.lang.String, java.lang.String)
    {
        com.ichi2.anki.AnkiActivity r0;
        java.lang.String $r1, $r2;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void showSimpleMessageDialog(java.lang.String,java.lang.String,boolean)>($r1, $r2, 0);

        return;
    }
    protected void showSimpleMessageDialog(java.lang.String, java.lang.String, boolean)
    {
        com.ichi2.anki.AnkiActivity r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.ichi2.anki.dialogs.SimpleMessageDialog $r3;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 = staticinvoke <com.ichi2.anki.dialogs.SimpleMessageDialog: com.ichi2.anki.dialogs.SimpleMessageDialog newInstance(java.lang.String,java.lang.String,boolean)>($r1, $r2, $z0);

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void showAsyncDialogFragment(com.ichi2.anki.dialogs.AsyncDialogFragment)>($r3);

        return;
    }
    protected void showSimpleMessageDialog(java.lang.String, boolean)
    {
        com.ichi2.anki.AnkiActivity r0;
        java.lang.String $r1;
        boolean $z0;
        com.ichi2.anki.dialogs.SimpleMessageDialog $r2;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.ichi2.anki.dialogs.SimpleMessageDialog: com.ichi2.anki.dialogs.SimpleMessageDialog newInstance(java.lang.String,boolean)>($r1, $z0);

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void showAsyncDialogFragment(com.ichi2.anki.dialogs.AsyncDialogFragment)>($r2);

        return;
    }
    public void showSimpleNotification(java.lang.String, java.lang.String)
    {
        com.ichi2.anki.AnkiActivity r0;
        java.lang.String $r1, $r2, $r5, $r7;
        android.content.Intent r3;
        android.content.SharedPreferences $r4;
        int $i0;
        android.content.res.Resources $r6;
        boolean $z0;
        android.support.v4.app.NotificationCompat$Builder $r8;
        android.support.v4.app.NotificationCompat$BigTextStyle $r9;
        long[] $r10;
        android.app.PendingIntent $r11;
        java.lang.Object $r12;
        android.app.NotificationManager r13;
        android.app.Notification $r14;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>(r0);

        $r5 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("minimumCardsDueForNotification", "0");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        if $i0 > 1000000 goto label4;

        $r5 = $r1;

        $r6 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>(2131231527);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        $r5 = $r2;

     label1:
        $r8 = new android.support.v4.app.NotificationCompat$Builder;

        specialinvoke $r8.<android.support.v4.app.NotificationCompat$Builder: void <init>(android.content.Context)>(r0);

        $r8 = virtualinvoke $r8.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setSmallIcon(int)>(2130837682);

        $r8 = virtualinvoke $r8.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)>($r1);

        $r8 = virtualinvoke $r8.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)>($r2);

        $i0 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r0, 2131689553);

        $r8 = virtualinvoke $r8.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setColor(int)>($i0);

        $r9 = new android.support.v4.app.NotificationCompat$BigTextStyle;

        specialinvoke $r9.<android.support.v4.app.NotificationCompat$BigTextStyle: void <init>()>();

        $r9 = virtualinvoke $r9.<android.support.v4.app.NotificationCompat$BigTextStyle: android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence)>($r2);

        $r8 = virtualinvoke $r8.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style)>($r9);

        $r8 = virtualinvoke $r8.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setVisibility(int)>(1);

        $r8 = virtualinvoke $r8.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)>($r5);

        $z0 = interfaceinvoke $r4.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("widgetVibrate", 0);

        if $z0 == 0 goto label2;

        $r10 = newarray (long)[3];

        $r10[0] = 1000L;

        $r10[1] = 1000L;

        $r10[2] = 1000L;

        virtualinvoke $r8.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setVibrate(long[])>($r10);

     label2:
        $z0 = interfaceinvoke $r4.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("widgetBlink", 0);

        if $z0 == 0 goto label3;

        virtualinvoke $r8.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setLights(int,int,int)>(-16776961, 1000, 1000);

     label3:
        r3 = new android.content.Intent;

        specialinvoke r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/ichi2/anki/DeckPicker;");

        virtualinvoke r3.<android.content.Intent: android.content.Intent setFlags(int)>(268468224);

        $r11 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>(r0, 0, r3, 134217728);

        virtualinvoke $r8.<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)>($r11);

        $r12 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: java.lang.Object getSystemService(java.lang.String)>("notification");

        r13 = (android.app.NotificationManager) $r12;

        $r14 = virtualinvoke $r8.<android.support.v4.app.NotificationCompat$Builder: android.app.Notification build()>();

        virtualinvoke r13.<android.app.NotificationManager: void notify(int,android.app.Notification)>(0, $r14);

     label4:
        return;
    }
    public void startActivity(android.content.Intent)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.content.Intent $r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.content.Intent;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)>($r1);

        return;
    }
    public void startActivityForResult(android.content.Intent, int)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.content.Intent $r1;
        int $i0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void startActivityForResult(android.content.Intent,int)>($r1, $i0);

        return;
    }
    public void startActivityForResultWithAnimation(android.content.Intent, int, int)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.content.Intent $r1;
        int $i0, $i1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void enableIntentAnimation(android.content.Intent)>($r1);

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void startActivityForResult(android.content.Intent,int)>($r1, $i0);

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void enableActivityAnimation(int)>($i1);

        return;
    }
    public void startActivityForResultWithoutAnimation(android.content.Intent, int)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.content.Intent $r1;
        int $i0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void disableIntentAnimation(android.content.Intent)>($r1);

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void startActivityForResult(android.content.Intent,int)>($r1, $i0);

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void disableActivityAnimation()>();

        return;
    }
    public void startActivityWithAnimation(android.content.Intent, int)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.content.Intent $r1;
        int $i0;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void enableIntentAnimation(android.content.Intent)>($r1);

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)>($r1);

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void enableActivityAnimation(int)>($i0);

        return;
    }
    public void startActivityWithoutAnimation(android.content.Intent)
    {
        com.ichi2.anki.AnkiActivity r0;
        android.content.Intent $r1;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 := @parameter0: android.content.Intent;

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void disableIntentAnimation(android.content.Intent)>($r1);

        specialinvoke r0.<android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)>($r1);

        specialinvoke r0.<com.ichi2.anki.AnkiActivity: void disableActivityAnimation()>();

        return;
    }
    public void startLoadingCollection()
    {
        com.ichi2.anki.AnkiActivity r0;
        java.lang.Object[] $r1;
        boolean $z0;
        android.support.v4.app.LoaderManager $r2;

        r0 := @this: com.ichi2.anki.AnkiActivity;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("AnkiActivity.startLoadingCollection()", $r1);

        $z0 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: boolean colIsOpen()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.ichi2.anki.AnkiActivity: void showProgressBar()>();

     label1:
        $r2 = virtualinvoke r0.<com.ichi2.anki.AnkiActivity: android.support.v4.app.LoaderManager getSupportLoaderManager()>();

        virtualinvoke $r2.<android.support.v4.app.LoaderManager: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>(0, null, r0);

        return;
    }
