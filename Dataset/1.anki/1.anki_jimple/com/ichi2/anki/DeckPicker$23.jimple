com.ichi2.anki.DeckPicker$23 extends com.ichi2.async.DeckTask$TaskListener
final com.ichi2.anki.DeckPicker this$0
    void <init>(com.ichi2.anki.DeckPicker)
    {
        com.ichi2.anki.DeckPicker$23 r0;
        com.ichi2.anki.DeckPicker $r1;

        r0 := @this: com.ichi2.anki.DeckPicker$23;

        $r1 := @parameter0: com.ichi2.anki.DeckPicker;

        r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0> = $r1;

        specialinvoke r0.<com.ichi2.async.DeckTask$TaskListener: void <init>()>();

        return;
    }
    public void onCancelled()
    {
        com.ichi2.anki.DeckPicker$23 r0;

        r0 := @this: com.ichi2.anki.DeckPicker$23;

        return;
    }
    public void onPostExecute(com.ichi2.async.DeckTask$TaskData)
    {
        com.ichi2.anki.DeckPicker$23 r0;
        com.ichi2.async.DeckTask$TaskData $r1;
        java.lang.RuntimeException r2;
        com.ichi2.anki.DeckPicker $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        android.view.View $r5;
        java.lang.Object[] $r6;
        java.lang.Object r7;
        java.util.List r8;
        com.ichi2.anki.widgets.DeckAdapter $r9;
        com.ichi2.libanki.Collection $r10;
        int $i0, $i1, $i2;
        android.content.res.Resources $r11;
        java.lang.String r12;
        java.lang.Integer $r13;
        android.support.v7.app.ActionBar $r14;
        com.ichi2.libanki.Decks $r15;
        org.json.JSONObject $r16;
        long $l3, $l4;
        byte $b5;
        android.widget.TextView $r17;

        r0 := @this: com.ichi2.anki.DeckPicker$23;

        $r1 := @parameter0: com.ichi2.async.DeckTask$TaskData;

        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        virtualinvoke $r3.<com.ichi2.anki.DeckPicker: void hideProgressBar()>();

        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $r4 = $r3.<com.ichi2.anki.DeckPicker: java.lang.Boolean mFragmented>;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label01;

        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $r5 = staticinvoke <com.ichi2.anki.DeckPicker: android.view.View access$1400(com.ichi2.anki.DeckPicker)>($r3);

        virtualinvoke $r5.<android.view.View: void setVisibility(int)>(0);

     label01:
        if $r1 != null goto label02;

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("null result loading deck counts", $r6);

        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        virtualinvoke $r3.<com.ichi2.anki.DeckPicker: void onCollectionLoadError()>();

        return;

     label02:
        $r6 = virtualinvoke $r1.<com.ichi2.async.DeckTask$TaskData: java.lang.Object[] getObjArray()>();

        r7 = $r6[0];

        r8 = (java.util.List) r7;

        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $r9 = staticinvoke <com.ichi2.anki.DeckPicker: com.ichi2.anki.widgets.DeckAdapter access$300(com.ichi2.anki.DeckPicker)>($r3);

        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $r10 = virtualinvoke $r3.<com.ichi2.anki.DeckPicker: com.ichi2.libanki.Collection getCol()>();

        virtualinvoke $r9.<com.ichi2.anki.widgets.DeckAdapter: void buildDeckList(java.util.List,com.ichi2.libanki.Collection)>(r8, $r10);

     label03:
        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $r9 = staticinvoke <com.ichi2.anki.DeckPicker: com.ichi2.anki.widgets.DeckAdapter access$300(com.ichi2.anki.DeckPicker)>($r3);

        $i0 = virtualinvoke $r9.<com.ichi2.anki.widgets.DeckAdapter: int getEta()>();

        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $r9 = staticinvoke <com.ichi2.anki.DeckPicker: com.ichi2.anki.widgets.DeckAdapter access$300(com.ichi2.anki.DeckPicker)>($r3);

        $i1 = virtualinvoke $r9.<com.ichi2.anki.widgets.DeckAdapter: int getDue()>();

        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $r11 = virtualinvoke $r3.<com.ichi2.anki.DeckPicker: android.content.res.Resources getResources()>();

        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $r10 = virtualinvoke $r3.<com.ichi2.anki.DeckPicker: com.ichi2.libanki.Collection getCol()>();

        $i2 = virtualinvoke $r10.<com.ichi2.libanki.Collection: int cardCount()>();

     label04:
        if $i2 == -1 goto label09;

        r12 = "-";

        if $i0 == -1 goto label06;

     label05:
        $r6 = newarray (java.lang.Object)[1];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[0] = $r13;

        r12 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231458, $r6);

     label06:
        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $r14 = virtualinvoke $r3.<com.ichi2.anki.DeckPicker: android.support.v7.app.ActionBar getSupportActionBar()>();

     label07:
        if $r14 == null goto label09;

     label08:
        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $r14 = virtualinvoke $r3.<com.ichi2.anki.DeckPicker: android.support.v7.app.ActionBar getSupportActionBar()>();

        $r6 = newarray (java.lang.Object)[2];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[0] = $r13;

        $r6[1] = r12;

        r12 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131361796, $i1, $r6);

        virtualinvoke $r14.<android.support.v7.app.ActionBar: void setSubtitle(java.lang.CharSequence)>(r12);

     label09:
        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $r10 = virtualinvoke $r3.<com.ichi2.anki.DeckPicker: com.ichi2.libanki.Collection getCol()>();

        $r15 = virtualinvoke $r10.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r16 = virtualinvoke $r15.<com.ichi2.libanki.Decks: org.json.JSONObject current()>();

        $l3 = virtualinvoke $r16.<org.json.JSONObject: long optLong(java.lang.String)>("id");

        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $l4 = staticinvoke <com.ichi2.anki.DeckPicker: long access$1500(com.ichi2.anki.DeckPicker)>($r3);

        $b5 = $l4 cmp $l3;

        if $b5 == 0 goto label10;

        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: void access$1600(com.ichi2.anki.DeckPicker,long)>($r3, $l3);

        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        staticinvoke <com.ichi2.anki.DeckPicker: long access$1502(com.ichi2.anki.DeckPicker,long)>($r3, $l3);

     label10:
        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $r10 = virtualinvoke $r3.<com.ichi2.anki.DeckPicker: com.ichi2.libanki.Collection getCol()>();

        $r3 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $r17 = staticinvoke <com.ichi2.anki.DeckPicker: android.widget.TextView access$1700(com.ichi2.anki.DeckPicker)>($r3);

        staticinvoke <com.ichi2.anki.stats.AnkiStatsTaskHandler: com.ichi2.anki.stats.AnkiStatsTaskHandler$DeckPreviewStatistics createReviewSummaryStatistics(com.ichi2.libanki.Collection,android.widget.TextView)>($r10, $r17);

        return;

     label11:
        r2 := @caughtexception;

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r2, "RuntimeException setting time remaining", $r6);

        goto label09;

        catch java.lang.RuntimeException from label03 to label04 with label11;
        catch java.lang.RuntimeException from label05 to label06 with label11;
        catch java.lang.RuntimeException from label06 to label07 with label11;
        catch java.lang.RuntimeException from label08 to label09 with label11;
    }
    public void onPreExecute()
    {
        com.ichi2.anki.DeckPicker$23 r0;
        boolean $z0;
        com.ichi2.anki.DeckPicker $r1;
        java.lang.Object[] $r2;

        r0 := @this: com.ichi2.anki.DeckPicker$23;

        $r1 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        $z0 = virtualinvoke $r1.<com.ichi2.anki.DeckPicker: boolean colIsOpen()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.ichi2.anki.DeckPicker$23: com.ichi2.anki.DeckPicker this$0>;

        virtualinvoke $r1.<com.ichi2.anki.DeckPicker: void showProgressBar()>();

     label1:
        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Refreshing deck list", $r2);

        return;
    }
    public transient void onProgressUpdate(com.ichi2.async.DeckTask$TaskData[])
    {
        com.ichi2.anki.DeckPicker$23 r0;
        com.ichi2.async.DeckTask$TaskData[] $r1;

        r0 := @this: com.ichi2.anki.DeckPicker$23;

        $r1 := @parameter0: com.ichi2.async.DeckTask$TaskData[];

        return;
    }
