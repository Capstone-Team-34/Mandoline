com.ichi2.anki.CardBrowser$17 extends com.ichi2.async.DeckTask$TaskListener
final com.ichi2.anki.CardBrowser this$0
    void <init>(com.ichi2.anki.CardBrowser)
    {
        com.ichi2.anki.CardBrowser$17 r0;
        com.ichi2.anki.CardBrowser $r1;

        r0 := @this: com.ichi2.anki.CardBrowser$17;

        $r1 := @parameter0: com.ichi2.anki.CardBrowser;

        r0.<com.ichi2.anki.CardBrowser$17: com.ichi2.anki.CardBrowser this$0> = $r1;

        specialinvoke r0.<com.ichi2.async.DeckTask$TaskListener: void <init>()>();

        return;
    }
    public void onCancelled()
    {
        com.ichi2.anki.CardBrowser$17 r0;
        com.ichi2.anki.CardBrowser $r1;

        r0 := @this: com.ichi2.anki.CardBrowser$17;

        $r1 = r0.<com.ichi2.anki.CardBrowser$17: com.ichi2.anki.CardBrowser this$0>;

        virtualinvoke $r1.<com.ichi2.anki.CardBrowser: void hideProgressBar()>();

        return;
    }
    public void onPostExecute(com.ichi2.async.DeckTask$TaskData)
    {
        com.ichi2.anki.CardBrowser$17 r0;
        com.ichi2.async.DeckTask$TaskData $r1;
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter $r2;
        com.ichi2.anki.CardBrowser $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.ichi2.anki.CardBrowser$17;

        $r1 := @parameter0: com.ichi2.async.DeckTask$TaskData;

        if $r1 == null goto label1;

        $r3 = r0.<com.ichi2.anki.CardBrowser$17: com.ichi2.anki.CardBrowser this$0>;

        virtualinvoke $r3.<com.ichi2.anki.CardBrowser: void hideProgressBar()>();

        $r3 = r0.<com.ichi2.anki.CardBrowser$17: com.ichi2.anki.CardBrowser this$0>;

        $r2 = staticinvoke <com.ichi2.anki.CardBrowser: com.ichi2.anki.CardBrowser$MultiColumnListAdapter access$2100(com.ichi2.anki.CardBrowser)>($r3);

        virtualinvoke $r2.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: void notifyDataSetChanged()>();

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Completed doInBackgroundRenderBrowserQA Successfuly", $r4);

        return;

     label1:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("doInBackgroundRenderBrowserQA was not successful... continuing anyway", $r4);

        return;
    }
    public void onPreExecute()
    {
        com.ichi2.anki.CardBrowser$17 r0;
        java.lang.Object[] $r1;

        r0 := @this: com.ichi2.anki.CardBrowser$17;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Starting Q&A background rendering", $r1);

        return;
    }
    public transient void onProgressUpdate(com.ichi2.async.DeckTask$TaskData[])
    {
        com.ichi2.anki.CardBrowser$17 r0;
        com.ichi2.async.DeckTask$TaskData[] $r1;
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter $r2;
        com.ichi2.anki.CardBrowser $r3;

        r0 := @this: com.ichi2.anki.CardBrowser$17;

        $r1 := @parameter0: com.ichi2.async.DeckTask$TaskData[];

        $r3 = r0.<com.ichi2.anki.CardBrowser$17: com.ichi2.anki.CardBrowser this$0>;

        $r2 = staticinvoke <com.ichi2.anki.CardBrowser: com.ichi2.anki.CardBrowser$MultiColumnListAdapter access$2100(com.ichi2.anki.CardBrowser)>($r3);

        virtualinvoke $r2.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: void notifyDataSetChanged()>();

        return;
    }
