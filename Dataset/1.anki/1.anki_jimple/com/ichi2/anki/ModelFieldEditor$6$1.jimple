com.ichi2.anki.ModelFieldEditor$6$1 extends java.lang.Object implements java.lang.Runnable
final com.ichi2.anki.ModelFieldEditor$6 this$1
    void <init>(com.ichi2.anki.ModelFieldEditor$6)
    {
        com.ichi2.anki.ModelFieldEditor$6$1 r0;
        com.ichi2.anki.ModelFieldEditor$6 $r1;

        r0 := @this: com.ichi2.anki.ModelFieldEditor$6$1;

        $r1 := @parameter0: com.ichi2.anki.ModelFieldEditor$6;

        r0.<com.ichi2.anki.ModelFieldEditor$6$1: com.ichi2.anki.ModelFieldEditor$6 this$1> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void run()
    {
        com.ichi2.anki.ModelFieldEditor$6$1 r0;
        org.json.JSONException r1;
        com.ichi2.async.DeckTask$TaskData $r2;
        com.ichi2.anki.ModelFieldEditor$6 $r3;
        com.ichi2.anki.ModelFieldEditor $r4;
        com.ichi2.libanki.Collection $r5;
        android.widget.EditText $r6;
        android.text.Editable $r7;
        java.lang.String $r8;
        int $i0, $i1;
        com.ichi2.async.DeckTask$TaskListener $r9;
        com.ichi2.async.DeckTask$TaskData[] $r10;
        java.lang.Object[] $r11;
        org.json.JSONObject $r12;
        org.json.JSONArray $r13;
        java.lang.Integer $r14;
        java.lang.RuntimeException $r15;

        r0 := @this: com.ichi2.anki.ModelFieldEditor$6$1;

        $r3 = r0.<com.ichi2.anki.ModelFieldEditor$6$1: com.ichi2.anki.ModelFieldEditor$6 this$1>;

        $r4 = $r3.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

     label01:
        $r5 = staticinvoke <com.ichi2.anki.ModelFieldEditor: com.ichi2.libanki.Collection access$800(com.ichi2.anki.ModelFieldEditor)>($r4);

        virtualinvoke $r5.<com.ichi2.libanki.Collection: void modSchemaNoCheck()>();

     label02:
        $r3 = r0.<com.ichi2.anki.ModelFieldEditor$6$1: com.ichi2.anki.ModelFieldEditor$6 this$1>;

        $r4 = $r3.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

     label03:
        $r6 = staticinvoke <com.ichi2.anki.ModelFieldEditor: android.widget.EditText access$500(com.ichi2.anki.ModelFieldEditor)>($r4);

        $r7 = virtualinvoke $r6.<android.widget.EditText: android.text.Editable getText()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

     label04:
        $r3 = r0.<com.ichi2.anki.ModelFieldEditor$6$1: com.ichi2.anki.ModelFieldEditor$6 this$1>;

        $r4 = $r3.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

     label05:
        $r9 = staticinvoke <com.ichi2.anki.ModelFieldEditor: com.ichi2.async.DeckTask$TaskListener access$900(com.ichi2.anki.ModelFieldEditor)>($r4);

     label06:
        $r10 = newarray (com.ichi2.async.DeckTask$TaskData)[1];

        $r2 = new com.ichi2.async.DeckTask$TaskData;

        $r11 = newarray (java.lang.Object)[3];

        $r3 = r0.<com.ichi2.anki.ModelFieldEditor$6$1: com.ichi2.anki.ModelFieldEditor$6 this$1>;

        $r4 = $r3.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

     label07:
        $r12 = staticinvoke <com.ichi2.anki.ModelFieldEditor: org.json.JSONObject access$1000(com.ichi2.anki.ModelFieldEditor)>($r4);

     label08:
        $r11[0] = $r12;

        $r3 = r0.<com.ichi2.anki.ModelFieldEditor$6$1: com.ichi2.anki.ModelFieldEditor$6 this$1>;

        $r4 = $r3.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

     label09:
        $r13 = staticinvoke <com.ichi2.anki.ModelFieldEditor: org.json.JSONArray access$1500(com.ichi2.anki.ModelFieldEditor)>($r4);

     label10:
        $r3 = r0.<com.ichi2.anki.ModelFieldEditor$6$1: com.ichi2.anki.ModelFieldEditor$6 this$1>;

        $r4 = $r3.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

     label11:
        $i1 = staticinvoke <com.ichi2.anki.ModelFieldEditor: int access$400(com.ichi2.anki.ModelFieldEditor)>($r4);

        $r12 = virtualinvoke $r13.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i1);

     label12:
        $r11[1] = $r12;

        $i0 = $i0 + -1;

     label13:
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label14:
        $r11[2] = $r14;

     label15:
        specialinvoke $r2.<com.ichi2.async.DeckTask$TaskData: void <init>(java.lang.Object[])>($r11);

     label16:
        $r10[0] = $r2;

     label17:
        staticinvoke <com.ichi2.async.DeckTask: com.ichi2.async.DeckTask launchDeckTask(int,com.ichi2.async.DeckTask$Listener,com.ichi2.async.DeckTask$TaskData[])>(44, $r9, $r10);

     label18:
        $r3 = r0.<com.ichi2.anki.ModelFieldEditor$6$1: com.ichi2.anki.ModelFieldEditor$6 this$1>;

        $r4 = $r3.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

     label19:
        staticinvoke <com.ichi2.anki.ModelFieldEditor: void access$000(com.ichi2.anki.ModelFieldEditor)>($r4);

     label20:
        return;

     label21:
        r1 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r15;

        catch org.json.JSONException from label01 to label02 with label21;
        catch org.json.JSONException from label03 to label04 with label21;
        catch org.json.JSONException from label05 to label06 with label21;
        catch org.json.JSONException from label07 to label08 with label21;
        catch org.json.JSONException from label09 to label10 with label21;
        catch org.json.JSONException from label11 to label12 with label21;
        catch org.json.JSONException from label13 to label14 with label21;
        catch org.json.JSONException from label15 to label16 with label21;
        catch org.json.JSONException from label17 to label18 with label21;
        catch org.json.JSONException from label19 to label20 with label21;
    }
