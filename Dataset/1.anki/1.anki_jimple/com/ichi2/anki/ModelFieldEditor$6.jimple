com.ichi2.anki.ModelFieldEditor$6 extends com.afollestad.materialdialogs.MaterialDialog$ButtonCallback
final com.ichi2.anki.ModelFieldEditor this$0
    void <init>(com.ichi2.anki.ModelFieldEditor)
    {
        com.ichi2.anki.ModelFieldEditor$6 r0;
        com.ichi2.anki.ModelFieldEditor $r1;

        r0 := @this: com.ichi2.anki.ModelFieldEditor$6;

        $r1 := @parameter0: com.ichi2.anki.ModelFieldEditor;

        r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0> = $r1;

        specialinvoke r0.<com.afollestad.materialdialogs.MaterialDialog$ButtonCallback: void <init>()>();

        return;
    }
    public void onPositive(com.afollestad.materialdialogs.MaterialDialog)
    {
        com.ichi2.anki.ModelFieldEditor$6 r0;
        com.afollestad.materialdialogs.MaterialDialog $r1;
        com.ichi2.anki.dialogs.ConfirmationDialog r2;
        com.ichi2.anki.ModelFieldEditor$6$1 r3;
        java.lang.NumberFormatException r4;
        com.ichi2.async.DeckTask$TaskData $r5;
        com.ichi2.anki.ModelFieldEditor $r6, $r11;
        android.widget.EditText $r7;
        android.text.Editable $r8;
        java.lang.String $r9;
        int $i0, $i1;
        java.util.ArrayList $r10;
        android.content.res.Resources $r12;
        com.ichi2.libanki.Collection $r13;
        com.ichi2.async.DeckTask$TaskListener $r14;
        com.ichi2.async.DeckTask$TaskData[] $r15;
        java.lang.Object[] $r16;
        org.json.JSONObject $r17;
        org.json.JSONArray $r18;
        java.lang.Integer $r19;
        com.ichi2.anki.exception.ConfirmModSchemaException r20;
        java.lang.Runnable $r21;
        org.json.JSONException r22;
        java.lang.RuntimeException $r23;

        r0 := @this: com.ichi2.anki.ModelFieldEditor$6;

        $r1 := @parameter0: com.afollestad.materialdialogs.MaterialDialog;

        $r6 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

        $r7 = staticinvoke <com.ichi2.anki.ModelFieldEditor: android.widget.EditText access$500(com.ichi2.anki.ModelFieldEditor)>($r6);

        $r8 = virtualinvoke $r7.<android.widget.EditText: android.text.Editable getText()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

     label01:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

     label02:
        if $i0 < 1 goto label03;

        $r6 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

        $r10 = staticinvoke <com.ichi2.anki.ModelFieldEditor: java.util.ArrayList access$200(com.ichi2.anki.ModelFieldEditor)>($r6);

        $i1 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i0 <= $i1 goto label05;

     label03:
        $r6 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

        $r11 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

        $r12 = virtualinvoke $r11.<com.ichi2.anki.ModelFieldEditor: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r12.<android.content.res.Resources: java.lang.String getString(int)>(2131231476);

        staticinvoke <com.ichi2.anki.ModelFieldEditor: void access$600(com.ichi2.anki.ModelFieldEditor,java.lang.CharSequence)>($r6, $r9);

        return;

     label04:
        r4 := @caughtexception;

        $r6 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

        $r11 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

        $r12 = virtualinvoke $r11.<com.ichi2.anki.ModelFieldEditor: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r12.<android.content.res.Resources: java.lang.String getString(int)>(2131231476);

        staticinvoke <com.ichi2.anki.ModelFieldEditor: void access$600(com.ichi2.anki.ModelFieldEditor,java.lang.CharSequence)>($r6, $r9);

        return;

     label05:
        $r6 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

     label06:
        $r13 = staticinvoke <com.ichi2.anki.ModelFieldEditor: com.ichi2.libanki.Collection access$800(com.ichi2.anki.ModelFieldEditor)>($r6);

        virtualinvoke $r13.<com.ichi2.libanki.Collection: void modSchema()>();

     label07:
        $r6 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

     label08:
        $r14 = staticinvoke <com.ichi2.anki.ModelFieldEditor: com.ichi2.async.DeckTask$TaskListener access$900(com.ichi2.anki.ModelFieldEditor)>($r6);

     label09:
        $r15 = newarray (com.ichi2.async.DeckTask$TaskData)[1];

        $r5 = new com.ichi2.async.DeckTask$TaskData;

        $r16 = newarray (java.lang.Object)[3];

        $r6 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

     label10:
        $r17 = staticinvoke <com.ichi2.anki.ModelFieldEditor: org.json.JSONObject access$1000(com.ichi2.anki.ModelFieldEditor)>($r6);

     label11:
        $r16[0] = $r17;

        $r6 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

     label12:
        $r18 = staticinvoke <com.ichi2.anki.ModelFieldEditor: org.json.JSONArray access$1500(com.ichi2.anki.ModelFieldEditor)>($r6);

     label13:
        $r6 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

     label14:
        $i1 = staticinvoke <com.ichi2.anki.ModelFieldEditor: int access$400(com.ichi2.anki.ModelFieldEditor)>($r6);

        $r17 = virtualinvoke $r18.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i1);

     label15:
        $r16[1] = $r17;

        $i0 = $i0 + -1;

     label16:
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label17:
        $r16[2] = $r19;

     label18:
        specialinvoke $r5.<com.ichi2.async.DeckTask$TaskData: void <init>(java.lang.Object[])>($r16);

     label19:
        $r15[0] = $r5;

     label20:
        staticinvoke <com.ichi2.async.DeckTask: com.ichi2.async.DeckTask launchDeckTask(int,com.ichi2.async.DeckTask$Listener,com.ichi2.async.DeckTask$TaskData[])>(44, $r14, $r15);

     label21:
        return;

     label22:
        r20 := @caughtexception;

        r2 = new com.ichi2.anki.dialogs.ConfirmationDialog;

        specialinvoke r2.<com.ichi2.anki.dialogs.ConfirmationDialog: void <init>()>();

        $r6 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

        $r12 = virtualinvoke $r6.<com.ichi2.anki.ModelFieldEditor: android.content.res.Resources getResources()>();

        $r9 = virtualinvoke $r12.<android.content.res.Resources: java.lang.String getString(int)>(2131231051);

        virtualinvoke r2.<com.ichi2.anki.dialogs.ConfirmationDialog: void setArgs(java.lang.String)>($r9);

        r3 = new com.ichi2.anki.ModelFieldEditor$6$1;

        specialinvoke r3.<com.ichi2.anki.ModelFieldEditor$6$1: void <init>(com.ichi2.anki.ModelFieldEditor$6)>(r0);

        virtualinvoke r2.<com.ichi2.anki.dialogs.ConfirmationDialog: void setConfirm(java.lang.Runnable)>(r3);

        $r6 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

        $r21 = staticinvoke <com.ichi2.anki.ModelFieldEditor: java.lang.Runnable access$1100(com.ichi2.anki.ModelFieldEditor)>($r6);

        virtualinvoke r2.<com.ichi2.anki.dialogs.ConfirmationDialog: void setCancel(java.lang.Runnable)>($r21);

        $r6 = r0.<com.ichi2.anki.ModelFieldEditor$6: com.ichi2.anki.ModelFieldEditor this$0>;

        virtualinvoke $r6.<com.ichi2.anki.ModelFieldEditor: void showDialogFragment(android.support.v4.app.DialogFragment)>(r2);

        return;

     label23:
        r22 := @caughtexception;

        $r23 = new java.lang.RuntimeException;

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r22);

        throw $r23;

        catch java.lang.NumberFormatException from label01 to label02 with label04;
        catch com.ichi2.anki.exception.ConfirmModSchemaException from label06 to label07 with label22;
        catch com.ichi2.anki.exception.ConfirmModSchemaException from label08 to label09 with label22;
        catch com.ichi2.anki.exception.ConfirmModSchemaException from label10 to label11 with label22;
        catch com.ichi2.anki.exception.ConfirmModSchemaException from label12 to label13 with label22;
        catch com.ichi2.anki.exception.ConfirmModSchemaException from label14 to label15 with label22;
        catch com.ichi2.anki.exception.ConfirmModSchemaException from label16 to label17 with label22;
        catch com.ichi2.anki.exception.ConfirmModSchemaException from label18 to label19 with label22;
        catch com.ichi2.anki.exception.ConfirmModSchemaException from label20 to label21 with label22;
        catch org.json.JSONException from label06 to label07 with label23;
        catch org.json.JSONException from label08 to label09 with label23;
        catch org.json.JSONException from label10 to label11 with label23;
        catch org.json.JSONException from label12 to label13 with label23;
        catch org.json.JSONException from label14 to label15 with label23;
        catch org.json.JSONException from label16 to label17 with label23;
        catch org.json.JSONException from label18 to label19 with label23;
        catch org.json.JSONException from label20 to label21 with label23;
    }
