com.ichi2.anki.CardBrowser$MultiColumnListAdapter extends android.widget.BaseAdapter
private final java.lang.String mColorFlagKey
private android.graphics.Typeface mCustomTypeface
private final int mFontSizeScalePcent
private java.lang.String[] mFromKeys
private android.view.LayoutInflater mInflater
private float mOriginalTextSize
private final int mResource
private final int[] mToIds
final com.ichi2.anki.CardBrowser this$0
    public void <init>(com.ichi2.anki.CardBrowser, android.content.Context, int, java.lang.String[], int[], java.lang.String, int, java.lang.String)
    {
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter r0;
        com.ichi2.anki.CardBrowser $r1;
        android.content.Context $r2;
        int $i0, $i1;
        java.lang.String[] $r3;
        int[] $r4;
        java.lang.String $r5, $r6;
        boolean $z0;
        android.graphics.Typeface $r7;
        java.lang.Object $r8;
        android.view.LayoutInflater $r9;

        r0 := @this: com.ichi2.anki.CardBrowser$MultiColumnListAdapter;

        $r1 := @parameter0: com.ichi2.anki.CardBrowser;

        $r2 := @parameter1: android.content.Context;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.String[];

        $r4 := @parameter4: int[];

        $r5 := @parameter5: java.lang.String;

        $i1 := @parameter6: int;

        $r6 := @parameter7: java.lang.String;

        r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: com.ichi2.anki.CardBrowser this$0> = $r1;

        specialinvoke r0.<android.widget.BaseAdapter: void <init>()>();

        r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: float mOriginalTextSize> = -1.0F;

        r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: android.graphics.Typeface mCustomTypeface> = null;

        r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: int mResource> = $i0;

        r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: java.lang.String[] mFromKeys> = $r3;

        r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: int[] mToIds> = $r4;

        r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: java.lang.String mColorFlagKey> = $r5;

        r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: int mFontSizeScalePcent> = $i1;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $r7 = staticinvoke <com.ichi2.anki.AnkiFont: android.graphics.Typeface getTypeface(android.content.Context,java.lang.String)>($r2, $r6);

        r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: android.graphics.Typeface mCustomTypeface> = $r7;

     label1:
        $r8 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r9 = (android.view.LayoutInflater) $r8;

        r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: android.view.LayoutInflater mInflater> = $r9;

        return;
    }
    private void bindView(int, android.view.View)
    {
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter r0;
        int $i0, i1, $i2;
        android.view.View $r1;
        java.lang.Object $r2;
        android.view.View[] $r3;
        com.ichi2.anki.CardBrowser $r4;
        java.util.List $r5;
        java.util.Map r6;
        java.lang.String $r7;
        int[] $r8, $r9;
        android.widget.TextView r10;
        java.lang.String[] $r11;
        java.lang.CharSequence $r12;

        r0 := @this: com.ichi2.anki.CardBrowser$MultiColumnListAdapter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: java.lang.Object getTag()>();

        $r3 = (android.view.View[]) $r2;

        $r4 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: com.ichi2.anki.CardBrowser this$0>;

        $r5 = staticinvoke <com.ichi2.anki.CardBrowser: java.util.List access$000(com.ichi2.anki.CardBrowser)>($r4);

        $r2 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        r6 = (java.util.Map) $r2;

        $r7 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: java.lang.String mColorFlagKey>;

        $r2 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r7 = (java.lang.String) $r2;

        $i0 = specialinvoke r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: int getColor(java.lang.String)>($r7);

        $r4 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: com.ichi2.anki.CardBrowser this$0>;

        $r8 = newarray (int)[4];

        $r8[0] = 16842801;

        $r8[1] = 2130772003;

        $r8[2] = 2130772051;

        $r8[3] = 2130772003;

        $r8 = staticinvoke <com.ichi2.themes.Themes: int[] getColorFromAttr(android.content.Context,int[])>($r4, $r8);

        i1 = 0;

     label1:
        $r9 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: int[] mToIds>;

        $i2 = lengthof $r9;

        if i1 >= $i2 goto label2;

        $r1 = $r3[i1];

        r10 = (android.widget.TextView) $r1;

        specialinvoke r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: void setFont(android.widget.TextView)>(r10);

        $i2 = $r8[$i0];

        virtualinvoke r10.<android.widget.TextView: void setBackgroundColor(int)>($i2);

        $r11 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: java.lang.String[] mFromKeys>;

        $r7 = $r11[i1];

        $r2 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r12 = (java.lang.CharSequence) $r2;

        virtualinvoke r10.<android.widget.TextView: void setText(java.lang.CharSequence)>($r12);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    private int getColor(java.lang.String)
    {
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter r0;
        java.lang.String $r1;
        byte $b0;
        int $i1;
        boolean $z0;

        r0 := @this: com.ichi2.anki.CardBrowser$MultiColumnListAdapter;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return 0;

     label1:
        $b0 = -1;

        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case 49: goto label5;
            case 50: goto label6;
            case 51: goto label7;
            default: goto label2;
        };

     label2:
        lookupswitch($b0)
        {
            case 0: goto label4;
            case 1: goto label8;
            case 2: goto label9;
            default: goto label3;
        };

     label3:
        return 0;

     label4:
        return 2;

     label5:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z0 == 0 goto label2;

        $b0 = 0;

        goto label2;

     label6:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("2");

        if $z0 == 0 goto label2;

        $b0 = 1;

        goto label2;

     label7:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("3");

        if $z0 == 0 goto label2;

        $b0 = 2;

        goto label2;

     label8:
        return 1;

     label9:
        return 3;
    }
    private void setFont(android.widget.TextView)
    {
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter r0;
        android.widget.TextView $r1;
        float $f0, $f1;
        byte $b0;
        int $i1;
        double $d0;
        android.graphics.Typeface $r2;

        r0 := @this: com.ichi2.anki.CardBrowser$MultiColumnListAdapter;

        $r1 := @parameter0: android.widget.TextView;

        $f0 = virtualinvoke $r1.<android.widget.TextView: float getTextSize()>();

        $f1 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: float mOriginalTextSize>;

        $b0 = $f1 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $f1 = virtualinvoke $r1.<android.widget.TextView: float getTextSize()>();

        r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: float mOriginalTextSize> = $f1;

     label1:
        $i1 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: int mFontSizeScalePcent>;

        if $i1 == 100 goto label2;

        $f1 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: float mOriginalTextSize>;

        $f0 = $f1 - $f0;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $d0 = (double) $f0;

        $b0 = $d0 cmpg 0.1;

        if $b0 >= 0 goto label2;

        $f0 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: float mOriginalTextSize>;

        $i1 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: int mFontSizeScalePcent>;

        $f1 = (float) $i1;

        $f1 = $f1 / 100.0F;

        $f0 = $f0 * $f1;

        virtualinvoke $r1.<android.widget.TextView: void setTextSize(int,float)>(2, $f0);

     label2:
        $r2 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: android.graphics.Typeface mCustomTypeface>;

        if $r2 == null goto label3;

        $r2 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: android.graphics.Typeface mCustomTypeface>;

        virtualinvoke $r1.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r2);

     label3:
        return;
    }
    public int getCount()
    {
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter r0;
        com.ichi2.anki.CardBrowser $r1;
        java.util.List $r2;
        int $i0;

        r0 := @this: com.ichi2.anki.CardBrowser$MultiColumnListAdapter;

        $r1 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: com.ichi2.anki.CardBrowser this$0>;

        $r2 = staticinvoke <com.ichi2.anki.CardBrowser: java.util.List access$000(com.ichi2.anki.CardBrowser)>($r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        return $i0;
    }
    public java.lang.String[] getFromMapping()
    {
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter r0;
        java.lang.String[] r1;

        r0 := @this: com.ichi2.anki.CardBrowser$MultiColumnListAdapter;

        r1 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: java.lang.String[] mFromKeys>;

        return r1;
    }
    public java.lang.Object getItem(int)
    {
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter r0;
        int $i0;
        com.ichi2.anki.CardBrowser $r1;
        java.util.List $r2;
        java.lang.Object $r3;

        r0 := @this: com.ichi2.anki.CardBrowser$MultiColumnListAdapter;

        $i0 := @parameter0: int;

        $r1 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: com.ichi2.anki.CardBrowser this$0>;

        $r2 = staticinvoke <com.ichi2.anki.CardBrowser: java.util.List access$000(com.ichi2.anki.CardBrowser)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        return $r3;
    }
    public long getItemId(int)
    {
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter r0;
        int $i0;
        long $l1;

        r0 := @this: com.ichi2.anki.CardBrowser$MultiColumnListAdapter;

        $i0 := @parameter0: int;

        $l1 = (long) $i0;

        return $l1;
    }
    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter r0;
        int $i0, i1, i2, $i3;
        android.view.View $r1, r5, $r7;
        android.view.ViewGroup $r2;
        android.view.View[] r3;
        android.view.LayoutInflater $r4;
        int[] $r6;

        r0 := @this: com.ichi2.anki.CardBrowser$MultiColumnListAdapter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.View;

        $r2 := @parameter2: android.view.ViewGroup;

        if $r1 != null goto label4;

        $r4 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: android.view.LayoutInflater mInflater>;

        i1 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: int mResource>;

        $r1 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(i1, $r2, 0);

        r5 = $r1;

        $r6 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: int[] mToIds>;

        i1 = lengthof $r6;

        r3 = newarray (android.view.View)[i1];

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r6 = r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: int[] mToIds>;

        $i3 = $r6[i2];

        $r7 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i3);

        r3[i2] = $r7;

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke $r1.<android.view.View: void setTag(java.lang.Object)>(r3);

     label3:
        specialinvoke r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: void bindView(int,android.view.View)>($i0, r5);

        return r5;

     label4:
        r5 = $r1;

        goto label3;
    }
    public void setFromMapping(java.lang.String[])
    {
        com.ichi2.anki.CardBrowser$MultiColumnListAdapter r0;
        java.lang.String[] $r1;

        r0 := @this: com.ichi2.anki.CardBrowser$MultiColumnListAdapter;

        $r1 := @parameter0: java.lang.String[];

        r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: java.lang.String[] mFromKeys> = $r1;

        virtualinvoke r0.<com.ichi2.anki.CardBrowser$MultiColumnListAdapter: void notifyDataSetChanged()>();

        return;
    }
