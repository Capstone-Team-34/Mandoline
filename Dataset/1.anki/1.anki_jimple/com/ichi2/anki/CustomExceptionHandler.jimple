com.ichi2.anki.CustomExceptionHandler extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
private static com.ichi2.anki.CustomExceptionHandler sInstance
private android.content.Context mCurContext
private java.util.HashMap mInformation
private java.lang.Thread$UncaughtExceptionHandler mPreviousHandler
    public void <init>()
    {
        com.ichi2.anki.CustomExceptionHandler r0;
        java.util.HashMap $r1;

        r0 := @this: com.ichi2.anki.CustomExceptionHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(20);

        r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation> = $r1;

        return;
    }
    private void collectInformation()
    {
        com.ichi2.anki.CustomExceptionHandler r0;
        java.lang.Exception r1;
        java.lang.Object[] $r2;
        android.content.Context $r3;
        android.content.pm.PackageManager $r4;
        java.lang.String $r5;
        android.content.pm.PackageInfo $r6;
        java.util.HashMap $r7;
        long $l0;
        android.content.res.Resources $r8;
        android.content.res.Configuration $r9;
        java.util.Locale $r10;

        r0 := @this: com.ichi2.anki.CustomExceptionHandler;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("collectInformation", $r2);

        $r3 = r0.<com.ichi2.anki.CustomExceptionHandler: android.content.Context mCurContext>;

        if $r3 != null goto label01;

        return;

     label01:
        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("collecting information", $r2);

        $r3 = r0.<com.ichi2.anki.CustomExceptionHandler: android.content.Context mCurContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = r0.<com.ichi2.anki.CustomExceptionHandler: android.content.Context mCurContext>;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r5, 0);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

        $r5 = $r6.<android.content.pm.PackageInfo: java.lang.String versionName>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("VersionName", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

        $r5 = $r6.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("PackageName", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

     label02:
        $r5 = <android.os.Build$VERSION: java.lang.String RELEASE>;

     label03:
        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("AndroidVersion", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

     label04:
        $r5 = <android.os.Build: java.lang.String BOARD>;

     label05:
        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Board", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

     label06:
        $r5 = <android.os.Build: java.lang.String BRAND>;

     label07:
        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Brand", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

     label08:
        $r5 = <android.os.Build: java.lang.String DEVICE>;

     label09:
        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Device", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

     label10:
        $r5 = <android.os.Build: java.lang.String DISPLAY>;

     label11:
        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Display", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

     label12:
        $r5 = <android.os.Build: java.lang.String HOST>;

     label13:
        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Host", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

     label14:
        $r5 = <android.os.Build: java.lang.String ID>;

     label15:
        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ID", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

     label16:
        $r5 = <android.os.Build: java.lang.String MODEL>;

     label17:
        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Model", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

     label18:
        $r5 = <android.os.Build: java.lang.String PRODUCT>;

     label19:
        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Product", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

     label20:
        $l0 = <android.os.Build: long TIME>;

     label21:
        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Time", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

        $l0 = specialinvoke r0.<com.ichi2.anki.CustomExceptionHandler: long getTotalInternalMemorySize()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("TotalInternalMemory", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

        $l0 = specialinvoke r0.<com.ichi2.anki.CustomExceptionHandler: long getAvailableInternalMemorySize()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("AvailableInternalMemory", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

        $r8 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.res.Resources getAppResources()>();

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r10 = $r9.<android.content.res.Configuration: java.util.Locale locale>;

        $r5 = virtualinvoke $r10.<java.util.Locale: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Locale", $r5);

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Information collected", $r2);

     label22:
        return;

     label23:
        r1 := @caughtexception;

        $r5 = virtualinvoke r1.<java.lang.Exception: java.lang.String toString()>();

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>($r5, $r2);

        return;

        catch java.lang.Exception from label01 to label02 with label23;
        catch java.lang.Exception from label03 to label04 with label23;
        catch java.lang.Exception from label05 to label06 with label23;
        catch java.lang.Exception from label07 to label08 with label23;
        catch java.lang.Exception from label09 to label10 with label23;
        catch java.lang.Exception from label11 to label12 with label23;
        catch java.lang.Exception from label13 to label14 with label23;
        catch java.lang.Exception from label15 to label16 with label23;
        catch java.lang.Exception from label17 to label18 with label23;
        catch java.lang.Exception from label19 to label20 with label23;
        catch java.lang.Exception from label21 to label22 with label23;
    }
    private long getAvailableInternalMemorySize()
    {
        com.ichi2.anki.CustomExceptionHandler r0;
        long l0, l1;
        android.os.StatFs r1;
        java.io.File $r2;
        java.lang.String $r3;
        int $i2;

        r0 := @this: com.ichi2.anki.CustomExceptionHandler;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        r1 = new android.os.StatFs;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        specialinvoke r1.<android.os.StatFs: void <init>(java.lang.String)>($r3);

        $i2 = virtualinvoke r1.<android.os.StatFs: int getBlockSize()>();

        l1 = (long) $i2;

        $i2 = virtualinvoke r1.<android.os.StatFs: int getAvailableBlocks()>();

        l0 = (long) $i2;

        l0 = l0 * l1;

        return l0;
    }
    static com.ichi2.anki.CustomExceptionHandler getInstance()
    {
        com.ichi2.anki.CustomExceptionHandler $r0;
        java.lang.Object[] $r1;

        $r0 = <com.ichi2.anki.CustomExceptionHandler: com.ichi2.anki.CustomExceptionHandler sInstance>;

        if $r0 != null goto label1;

        $r0 = new com.ichi2.anki.CustomExceptionHandler;

        specialinvoke $r0.<com.ichi2.anki.CustomExceptionHandler: void <init>()>();

        <com.ichi2.anki.CustomExceptionHandler: com.ichi2.anki.CustomExceptionHandler sInstance> = $r0;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("New instance of custom exception handler", $r1);

     label1:
        $r0 = <com.ichi2.anki.CustomExceptionHandler: com.ichi2.anki.CustomExceptionHandler sInstance>;

        return $r0;
    }
    private long getTotalInternalMemorySize()
    {
        com.ichi2.anki.CustomExceptionHandler r0;
        long l0, l1;
        android.os.StatFs r1;
        java.io.File $r2;
        java.lang.String $r3;
        int $i2;

        r0 := @this: com.ichi2.anki.CustomExceptionHandler;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        r1 = new android.os.StatFs;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        specialinvoke r1.<android.os.StatFs: void <init>(java.lang.String)>($r3);

        $i2 = virtualinvoke r1.<android.os.StatFs: int getBlockSize()>();

        l0 = (long) $i2;

        $i2 = virtualinvoke r1.<android.os.StatFs: int getBlockCount()>();

        l1 = (long) $i2;

        l0 = l1 * l0;

        return l0;
    }
    private void saveReportToFile(java.lang.String)
    {
        com.ichi2.anki.CustomExceptionHandler r0;
        java.lang.String $r1, $r6;
        java.util.Date r2;
        java.lang.Exception r3;
        java.text.SimpleDateFormat r4;
        java.lang.Object[] $r5;
        android.content.Context $r7;
        java.io.FileOutputStream $r8;
        byte[] $r9;

        r0 := @this: com.ichi2.anki.CustomExceptionHandler;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("saveReportFile", $r5);

     label2:
        r2 = new java.util.Date;

     label3:
        specialinvoke r2.<java.util.Date: void <init>()>();

     label4:
        r4 = new java.text.SimpleDateFormat;

     label5:
        specialinvoke r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMddHHmmss");

        $r5 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r4.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r2);

        $r5[0] = $r6;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ad-%s.stacktrace", $r5);

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("No external storage available", $r5);

        $r7 = r0.<com.ichi2.anki.CustomExceptionHandler: android.content.Context mCurContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>($r6, 0);

        $r9 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r8.<java.io.FileOutputStream: void write(byte[])>($r9);

        virtualinvoke $r8.<java.io.FileOutputStream: void close()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("report saved", $r5);

     label6:
        return;

     label7:
        r3 := @caughtexception;

        $r1 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>($r1, $r5);

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
    public void init(android.content.Context)
    {
        com.ichi2.anki.CustomExceptionHandler r0;
        android.content.Context $r1;
        java.lang.Thread$UncaughtExceptionHandler $r2;

        r0 := @this: com.ichi2.anki.CustomExceptionHandler;

        $r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        r0.<com.ichi2.anki.CustomExceptionHandler: java.lang.Thread$UncaughtExceptionHandler mPreviousHandler> = $r2;

        staticinvoke <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>(r0);

        r0.<com.ichi2.anki.CustomExceptionHandler: android.content.Context mCurContext> = $r1;

        return;
    }
    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        com.ichi2.anki.CustomExceptionHandler r0;
        java.lang.Thread $r1;
        java.lang.Throwable $r2;

        r0 := @this: com.ichi2.anki.CustomExceptionHandler;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        virtualinvoke r0.<com.ichi2.anki.CustomExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable,java.lang.String)>($r1, $r2, null);

        return;
    }
    public void uncaughtException(java.lang.Thread, java.lang.Throwable, java.lang.String)
    {
        com.ichi2.anki.CustomExceptionHandler r0;
        java.lang.Thread $r1;
        java.lang.Throwable $r2;
        java.lang.String $r3;

        r0 := @this: com.ichi2.anki.CustomExceptionHandler;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.ichi2.anki.CustomExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable,java.lang.String,java.lang.String)>($r1, $r2, $r3, null);

        return;
    }
    public void uncaughtException(java.lang.Thread, java.lang.Throwable, java.lang.String, java.lang.String)
    {
        com.ichi2.anki.CustomExceptionHandler r0;
        java.lang.Thread $r1;
        java.lang.Throwable $r2, $r23;
        java.lang.String $r3, $r4, $r15, $r16, $r17;
        java.text.SimpleDateFormat r5, r6;
        java.io.PrintWriter r7;
        java.lang.StringBuilder r8;
        java.io.StringWriter r9;
        java.util.Date r10;
        java.lang.Object[] $r11;
        java.util.TimeZone $r12, $r14;
        java.util.Locale $r13, $r22;
        int $i0;
        java.util.HashMap $r18;
        java.util.Set $r19;
        java.util.Iterator $r20;
        boolean $z0;
        java.lang.Object $r21;
        java.lang.Thread$UncaughtExceptionHandler $r24;

        r0 := @this: com.ichi2.anki.CustomExceptionHandler;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("uncaughtException", $r11);

        specialinvoke r0.<com.ichi2.anki.CustomExceptionHandler: void collectInformation()>();

        r10 = new java.util.Date;

        specialinvoke r10.<java.util.Date: void <init>()>();

        $r12 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        r5 = new java.text.SimpleDateFormat;

        $r13 = <java.util.Locale: java.util.Locale US>;

        specialinvoke r5.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd\'T\'HH:mm:ss.SSS", $r13);

        r6 = new java.text.SimpleDateFormat;

        $r13 = <java.util.Locale: java.util.Locale US>;

        specialinvoke r6.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("Z", $r13);

        $r14 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke r5.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r14);

        $r11 = newarray (java.lang.Object)[1];

        $r15 = virtualinvoke r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r10);

        $r11[0] = $r15;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", $r11);

        $r11 = newarray (java.lang.Object)[1];

        $r16 = virtualinvoke r6.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r10);

        $r11[0] = $r16;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", $r11);

        $r11 = newarray (java.lang.Object)[1];

        $r17 = virtualinvoke $r12.<java.util.TimeZone: java.lang.String getID()>();

        $r11[0] = $r17;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", $r11);

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>(int)>(10000);

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r15;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("reportgeneratedutc=%s\n", $r11);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r16;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("reportgeneratedtzoffset=%s\n", $r11);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r17;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("reportgeneratedtz=%s\n", $r11);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("origin=%s\n", $r11);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label1:
        $r18 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.util.Set keySet()>();

        $r20 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.lang.String) $r21;

        $r18 = r0.<com.ichi2.anki.CustomExceptionHandler: java.util.HashMap mInformation>;

        $r21 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r15);

        $r3 = (java.lang.String) $r21;

        $r13 = <java.util.Locale: java.util.Locale US>;

        $r11 = newarray (java.lang.Object)[2];

        $r22 = <java.util.Locale: java.util.Locale US>;

        $r15 = virtualinvoke $r15.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r22);

        $r11[0] = $r15;

        $r11[1] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r13, "%s=%s\n", $r11);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label2;

     label3:
        if $r4 == null goto label4;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label4;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r4;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("additionalinformation=%s\n", $r11);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label4:
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stacktrace=\nBegin Stacktrace\n");

        r9 = new java.io.StringWriter;

        specialinvoke r9.<java.io.StringWriter: void <init>()>();

        r7 = new java.io.PrintWriter;

        specialinvoke r7.<java.io.PrintWriter: void <init>(java.io.Writer)>(r9);

        virtualinvoke $r2.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r7);

        $r11 = newarray (java.lang.Object)[1];

        $r3 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();

        $r11[0] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s\n", $r11);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End Stacktrace\n\nBegin Inner exceptions\n");

        $r23 = virtualinvoke $r2.<java.lang.Throwable: java.lang.Throwable getCause()>();

     label5:
        if $r23 == null goto label6;

        virtualinvoke $r23.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r7);

        $r11 = newarray (java.lang.Object)[1];

        $r3 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();

        $r11[0] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s\n", $r11);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r23 = virtualinvoke $r23.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label5;

     label6:
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End Inner exceptions");

        virtualinvoke r7.<java.io.PrintWriter: void close()>();

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("report infomation string created", $r11);

        $r3 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.ichi2.anki.CustomExceptionHandler: void saveReportToFile(java.lang.String)>($r3);

        if $r1 == null goto label7;

        $r24 = r0.<com.ichi2.anki.CustomExceptionHandler: java.lang.Thread$UncaughtExceptionHandler mPreviousHandler>;

        interfaceinvoke $r24.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

     label7:
        return;
    }
