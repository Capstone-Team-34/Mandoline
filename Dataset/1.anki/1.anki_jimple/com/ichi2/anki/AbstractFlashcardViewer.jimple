com.ichi2.anki.AbstractFlashcardViewer extends com.ichi2.anki.NavigationDrawerActivity
public static final java.lang.String ANSWER_CLASS
public static final int DECK_OPTIONS
private static final int DOUBLE_TAP_IGNORE_THRESHOLD
private static final int DYNAMIC_FONT_FACTOR
private static final int DYNAMIC_FONT_MAX_SIZE
private static final int DYNAMIC_FONT_MIN_SIZE
public static final int EASE_1
public static final int EASE_2
public static final int EASE_3
public static final int EASE_4
public static final int EDIT_CURRENT_CARD
private static final int GESTURE_ANSWER_BETTER_THAN_RECOMMENDED
private static final int GESTURE_ANSWER_EASE1
private static final int GESTURE_ANSWER_EASE2
private static final int GESTURE_ANSWER_EASE3
private static final int GESTURE_ANSWER_EASE4
private static final int GESTURE_ANSWER_RECOMMENDED
private static final int GESTURE_BURY_CARD
private static final int GESTURE_BURY_NOTE
protected static final int GESTURE_DELETE
public static final int GESTURE_EDIT
protected static final int GESTURE_EXIT
protected static final int GESTURE_LOOKUP
protected static final int GESTURE_MARK
protected static final int GESTURE_NOTHING
protected static final int GESTURE_PLAY_MEDIA
private static final int GESTURE_SHOW_ANSWER
private static final int GESTURE_SUSPEND_CARD
private static final int GESTURE_SUSPEND_NOTE
private static final int GESTURE_UNDO
protected static final int INITIAL_HIDE_DELAY
protected static final int MENU_DISABLED
public static final java.lang.String QUESTION_CLASS
public static final int RESULT_DECK_CLOSED
public static final int RESULT_DEFAULT
public static final int RESULT_EDIT_CARD_RESET
public static final int RESULT_NO_MORE_CARDS
private static final boolean SAVE_CARD_CONTENT
private static final java.util.regex.Pattern sBrPattern
protected static boolean sDisplayAnswer
private static com.ichi2.libanki.Card sEditorCard
private static final java.util.regex.Pattern sSpanPattern
private static final java.util.regex.Pattern sTypeAnsPat
private static final java.util.regex.Pattern sTypeAnsTyped
private android.support.v4.view.GestureDetectorCompat gestureDetector
private final android.os.Handler longClickHandler
private final java.lang.Runnable longClickTestRunnable
protected com.ichi2.async.DeckTask$TaskListener mAnswerCardHandler
protected android.widget.EditText mAnswerField
private boolean mAnswerSoundsAdded
private java.lang.String mBaseUrl
private boolean mButtonHeightSet
private android.webkit.WebView mCard
private android.widget.FrameLayout mCardContainer
private android.text.Spanned mCardContent
private android.widget.FrameLayout mCardFrame
private java.lang.String mCardTemplate
private android.widget.Chronometer mCardTimer
private int mCardZoom
private android.widget.TextView mChosenAnswer
private android.text.ClipboardManager mClipboard
private boolean mConfigurationChanged
protected com.ichi2.libanki.Card mCurrentCard
private int mCurrentEase
protected java.util.Map mCustomButtons
protected boolean mDisableClipboard
protected com.ichi2.async.DeckTask$TaskListener mDismissCardHandler
private boolean mDoubleScrolling
protected android.widget.TextView mEase1
protected android.widget.LinearLayout mEase1Layout
protected android.widget.TextView mEase2
protected android.widget.LinearLayout mEase2Layout
protected android.widget.TextView mEase3
protected android.widget.LinearLayout mEase3Layout
protected android.widget.TextView mEase4
protected android.widget.LinearLayout mEase4Layout
private com.ichi2.anki.reviewer.ReviewerExtRegistry mExtensions
private int mFadeDuration
private android.widget.Button mFlipCard
protected android.widget.LinearLayout mFlipCardLayout
private android.view.View$OnClickListener mFlipCardListener
protected final android.os.Handler mFullScreenHandler
private int mGestureDoubleTap
private android.view.View$OnTouchListener mGestureListener
private int mGestureLongclick
private int mGestureSwipeDown
private int mGestureSwipeLeft
private int mGestureSwipeRight
private int mGestureSwipeUp
private int mGestureTapBottom
private int mGestureTapLeft
private int mGestureTapRight
private int mGestureTapTop
private boolean mGesturesEnabled
private android.os.Handler mHandler
private int mImageZoom
private boolean mInAnswer
private boolean mInputWorkaround
private boolean mIsSelecting
private boolean mIsXScrolling
private boolean mIsYScrolling
private long mLastClickTime
private android.view.View$OnLongClickListener mLongClickListener
private boolean mLongClickWorkaround
private android.view.View mLookUpIcon
private android.view.View mMainLayout
protected android.widget.TextView mNext1
protected android.widget.TextView mNext2
protected android.widget.TextView mNext3
protected android.widget.TextView mNext4
private android.webkit.WebView mNextCard
protected boolean mNightMode
private boolean mPrefCenterVertically
private int mPrefFullscreenReview
private boolean mPrefHideDueCount
private boolean mPrefSafeDisplay
private boolean mPrefShowETA
protected boolean mPrefUseTimer
protected boolean mPrefWhiteboard
private int mRelativeButtonSize
private boolean mReplayOnTtsInit
protected com.ichi2.libanki.Sched mSched
private boolean mScrollingButtons
private android.view.View$OnClickListener mSelectEaseHandler
protected java.lang.Runnable mShowAnswerTask
private int mShowChosenAnswerLength
private boolean mShowNextReviewTime
protected java.lang.Runnable mShowQuestionTask
private boolean mShowRemainingCardCount
private boolean mShowTimer
private boolean mShowTypeAnswerField
private com.ichi2.libanki.Sound mSoundPlayer
protected boolean mSpeakText
private android.widget.TextView mTextBarLearn
private android.widget.TextView mTextBarNew
private android.widget.TextView mTextBarReview
protected android.os.Handler mTimeoutHandler
private android.os.Handler mTimerHandler
protected android.widget.RelativeLayout mTopBarLayout
private android.widget.FrameLayout mTouchLayer
private boolean mTouchStarted
private boolean mTtsInitialized
private java.lang.String mTypeCorrect
private java.lang.String mTypeFont
private java.lang.String mTypeInput
private int mTypeSize
private java.lang.String mTypeWarning
private android.content.BroadcastReceiver mUnmountReceiver
private com.ichi2.async.DeckTask$TaskListener mUpdateCardHandler
protected boolean mUseInputTag
private boolean mUseQuickUpdate
private long mUseTimerDynamicMS
protected int mWaitAnswerSecond
protected int mWaitQuestionSecond
protected com.ichi2.anki.Whiteboard mWhiteboard
private java.lang.Runnable removeChosenAnswerText
private final java.lang.Runnable startLongClickAction
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("</?span[^>]*>");

        <com.ichi2.anki.AbstractFlashcardViewer: java.util.regex.Pattern sSpanPattern> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("<br\\s?/?>");

        <com.ichi2.anki.AbstractFlashcardViewer: java.util.regex.Pattern sBrPattern> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\[\\[type:(.+?)\\]\\]");

        <com.ichi2.anki.AbstractFlashcardViewer: java.util.regex.Pattern sTypeAnsPat> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("typed=([^&]*)");

        <com.ichi2.anki.AbstractFlashcardViewer: java.util.regex.Pattern sTypeAnsTyped> = $r0;

        <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer> = 0;

        return;
    }
    public void <init>()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.util.HashMap $r1;
        com.ichi2.libanki.Sound $r2;
        com.ichi2.anki.AbstractFlashcardViewer$1 $r3;
        android.os.Handler $r4;
        com.ichi2.anki.AbstractFlashcardViewer$2 $r5;
        com.ichi2.anki.AbstractFlashcardViewer$3 $r6;
        com.ichi2.anki.AbstractFlashcardViewer$4 $r7;
        com.ichi2.anki.AbstractFlashcardViewer$5 $r8;
        com.ichi2.anki.AbstractFlashcardViewer$6 $r9;
        com.ichi2.anki.AbstractFlashcardViewer$7 $r10;
        com.ichi2.anki.AbstractFlashcardViewer$8 $r11;
        com.ichi2.anki.AbstractFlashcardViewer$9 $r12;
        com.ichi2.anki.AbstractFlashcardViewer$10 $r13;
        com.ichi2.anki.AbstractFlashcardViewer$11 $r14;
        com.ichi2.anki.AbstractFlashcardViewer$18 $r15;
        com.ichi2.anki.AbstractFlashcardViewer$19 $r16;
        com.ichi2.anki.AbstractFlashcardViewer$21 $r17;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void <init>()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mTtsInitialized> = 0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mReplayOnTtsInit> = 0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.BroadcastReceiver mUnmountReceiver> = null;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDisableClipboard> = 0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mNightMode> = 0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeCorrect> = null;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeInput> = "";

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeFont> = "";

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mTypeSize> = 0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mIsSelecting> = 0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mTouchStarted> = 0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mInAnswer> = 0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mAnswerSoundsAdded> = 0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mButtonHeightSet> = 0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mConfigurationChanged> = 0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mShowChosenAnswerLength> = 2000;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mUseQuickUpdate> = 0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mIsXScrolling> = 0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mIsYScrolling> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.util.Map mCustomButtons> = $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mFadeDuration> = 300;

        $r2 = new com.ichi2.libanki.Sound;

        specialinvoke $r2.<com.ichi2.libanki.Sound: void <init>()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer> = $r2;

        $r3 = new com.ichi2.anki.AbstractFlashcardViewer$1;

        specialinvoke $r3.<com.ichi2.anki.AbstractFlashcardViewer$1: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mHandler> = $r3;

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler longClickHandler> = $r4;

        $r5 = new com.ichi2.anki.AbstractFlashcardViewer$2;

        specialinvoke $r5.<com.ichi2.anki.AbstractFlashcardViewer$2: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable longClickTestRunnable> = $r5;

        $r6 = new com.ichi2.anki.AbstractFlashcardViewer$3;

        specialinvoke $r6.<com.ichi2.anki.AbstractFlashcardViewer$3: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable startLongClickAction> = $r6;

        $r7 = new com.ichi2.anki.AbstractFlashcardViewer$4;

        specialinvoke $r7.<com.ichi2.anki.AbstractFlashcardViewer$4: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View$OnClickListener mFlipCardListener> = $r7;

        $r8 = new com.ichi2.anki.AbstractFlashcardViewer$5;

        specialinvoke $r8.<com.ichi2.anki.AbstractFlashcardViewer$5: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View$OnClickListener mSelectEaseHandler> = $r8;

        $r9 = new com.ichi2.anki.AbstractFlashcardViewer$6;

        specialinvoke $r9.<com.ichi2.anki.AbstractFlashcardViewer$6: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View$OnTouchListener mGestureListener> = $r9;

        $r10 = new com.ichi2.anki.AbstractFlashcardViewer$7;

        specialinvoke $r10.<com.ichi2.anki.AbstractFlashcardViewer$7: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View$OnLongClickListener mLongClickListener> = $r10;

        $r11 = new com.ichi2.anki.AbstractFlashcardViewer$8;

        specialinvoke $r11.<com.ichi2.anki.AbstractFlashcardViewer$8: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.async.DeckTask$TaskListener mDismissCardHandler> = $r11;

        $r12 = new com.ichi2.anki.AbstractFlashcardViewer$9;

        specialinvoke $r12.<com.ichi2.anki.AbstractFlashcardViewer$9: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.async.DeckTask$TaskListener mUpdateCardHandler> = $r12;

        $r13 = new com.ichi2.anki.AbstractFlashcardViewer$10;

        specialinvoke $r13.<com.ichi2.anki.AbstractFlashcardViewer$10: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.async.DeckTask$TaskListener mAnswerCardHandler> = $r13;

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mTimerHandler> = $r4;

        $r14 = new com.ichi2.anki.AbstractFlashcardViewer$11;

        specialinvoke $r14.<com.ichi2.anki.AbstractFlashcardViewer$11: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable removeChosenAnswerText> = $r14;

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mTimeoutHandler> = $r4;

        $r15 = new com.ichi2.anki.AbstractFlashcardViewer$18;

        specialinvoke $r15.<com.ichi2.anki.AbstractFlashcardViewer$18: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable mShowQuestionTask> = $r15;

        $r16 = new com.ichi2.anki.AbstractFlashcardViewer$19;

        specialinvoke $r16.<com.ichi2.anki.AbstractFlashcardViewer$19: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable mShowAnswerTask> = $r16;

        $r17 = new com.ichi2.anki.AbstractFlashcardViewer$21;

        specialinvoke $r17.<com.ichi2.anki.AbstractFlashcardViewer$21: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mFullScreenHandler> = $r17;

        return;
    }
    private java.lang.String SmpToHtmlEntity(java.lang.String)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.String $r1;
        java.lang.StringBuffer r2;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        int $i0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([^\u0000-\uffff])");

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

     label1:
        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#x");

        $r1 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i0 = virtualinvoke $r1.<java.lang.String: int codePointAt(int)>(0);

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <java.util.regex.Matcher: java.lang.String quoteReplacement(java.lang.String)>($r1);

        virtualinvoke $r4.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>(r2, $r1);

        goto label1;

     label2:
        virtualinvoke $r4.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>(r2);

        $r1 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }
    static com.ichi2.libanki.Sound access$000(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        com.ichi2.libanki.Sound r1;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        r1 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        return r1;
    }
    static java.lang.Runnable access$100(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        java.lang.Runnable r1;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        r1 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable startLongClickAction>;

        return r1;
    }
    static android.webkit.WebView access$1000(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        android.webkit.WebView r1;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        r1 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        return r1;
    }
    static boolean access$1100(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        boolean z0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        z0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mInputWorkaround>;

        return z0;
    }
    static boolean access$1200(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        boolean z0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        z0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mIsSelecting>;

        return z0;
    }
    static boolean access$1202(com.ichi2.anki.AbstractFlashcardViewer, boolean)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        boolean $z0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 := @parameter1: boolean;

        $r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mIsSelecting> = $z0;

        return $z0;
    }
    static boolean access$1302(com.ichi2.anki.AbstractFlashcardViewer, boolean)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        boolean $z0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 := @parameter1: boolean;

        $r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mAnswerSoundsAdded> = $z0;

        return $z0;
    }
    static void access$1400(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        specialinvoke $r0.<com.ichi2.anki.AbstractFlashcardViewer: void updateTypeAnswerInfo()>();

        return;
    }
    static void access$1500(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        specialinvoke $r0.<com.ichi2.anki.AbstractFlashcardViewer: void blockControls()>();

        return;
    }
    static void access$1600(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        specialinvoke $r0.<com.ichi2.anki.AbstractFlashcardViewer: void unblockControls()>();

        return;
    }
    static android.widget.TextView access$1700(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        android.widget.TextView r1;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        r1 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mChosenAnswer>;

        return r1;
    }
    static boolean access$1800(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        boolean $z0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 = specialinvoke $r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean lookUp()>();

        return $z0;
    }
    static android.os.Handler access$1900(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        android.os.Handler r1;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        r1 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mHandler>;

        return r1;
    }
    static android.os.Handler access$200(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        android.os.Handler r1;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        r1 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler longClickHandler>;

        return r1;
    }
    static java.lang.String access$2002(com.ichi2.anki.AbstractFlashcardViewer, java.lang.String)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter1: java.lang.String;

        $r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeInput> = $r1;

        return $r1;
    }
    static boolean access$2100(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        boolean z0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        z0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mIsXScrolling>;

        return z0;
    }
    static boolean access$2102(com.ichi2.anki.AbstractFlashcardViewer, boolean)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        boolean $z0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 := @parameter1: boolean;

        $r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mIsXScrolling> = $z0;

        return $z0;
    }
    static boolean access$2200(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        boolean z0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        z0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mIsYScrolling>;

        return z0;
    }
    static boolean access$2202(com.ichi2.anki.AbstractFlashcardViewer, boolean)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        boolean $z0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 := @parameter1: boolean;

        $r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mIsYScrolling> = $z0;

        return $z0;
    }
    static int access$2300(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        i0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: int mPrefFullscreenReview>;

        return i0;
    }
    static boolean access$2400(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        boolean z0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        z0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mGesturesEnabled>;

        return z0;
    }
    static int access$2500(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        i0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureSwipeRight>;

        return i0;
    }
    static int access$2600(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        i0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureSwipeLeft>;

        return i0;
    }
    static int access$2700(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        i0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureSwipeDown>;

        return i0;
    }
    static int access$2800(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        i0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureSwipeUp>;

        return i0;
    }
    static int access$2900(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        i0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureDoubleTap>;

        return i0;
    }
    static int access$300(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        i0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureLongclick>;

        return i0;
    }
    static android.widget.FrameLayout access$3000(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        android.widget.FrameLayout r1;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        r1 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mTouchLayer>;

        return r1;
    }
    static int access$3100(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        i0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureTapRight>;

        return i0;
    }
    static int access$3200(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        i0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureTapTop>;

        return i0;
    }
    static int access$3300(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        i0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureTapBottom>;

        return i0;
    }
    static int access$3400(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        int i0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        i0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureTapLeft>;

        return i0;
    }
    static void access$3500(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        specialinvoke $r0.<com.ichi2.anki.AbstractFlashcardViewer: void showLookupButtonIfNeeded()>();

        return;
    }
    static long access$400(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        long l0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        l0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: long mLastClickTime>;

        return l0;
    }
    static long access$402(com.ichi2.anki.AbstractFlashcardViewer, long)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        long $l0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        $l0 := @parameter1: long;

        $r0.<com.ichi2.anki.AbstractFlashcardViewer: long mLastClickTime> = $l0;

        return $l0;
    }
    static int access$502(com.ichi2.anki.AbstractFlashcardViewer, int)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        int $i0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        $i0 := @parameter1: int;

        $r0.<com.ichi2.anki.AbstractFlashcardViewer: int mCurrentEase> = $i0;

        return $i0;
    }
    static android.support.v4.view.GestureDetectorCompat access$600(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        android.support.v4.view.GestureDetectorCompat r1;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        r1 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: android.support.v4.view.GestureDetectorCompat gestureDetector>;

        return r1;
    }
    static boolean access$700(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        boolean z0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        z0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mLongClickWorkaround>;

        return z0;
    }
    static boolean access$800(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        boolean z0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        z0 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mTouchStarted>;

        return z0;
    }
    static boolean access$802(com.ichi2.anki.AbstractFlashcardViewer, boolean)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        boolean $z0;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 := @parameter1: boolean;

        $r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mTouchStarted> = $z0;

        return $z0;
    }
    static java.lang.Runnable access$900(com.ichi2.anki.AbstractFlashcardViewer)
    {
        com.ichi2.anki.AbstractFlashcardViewer $r0;
        java.lang.Runnable r1;

        $r0 := @parameter0: com.ichi2.anki.AbstractFlashcardViewer;

        r1 = $r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable longClickTestRunnable>;

        return r1;
    }
    private void addAnswerSounds(java.lang.String)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.ichi2.libanki.Sound $r3;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mAnswerSoundsAdded>;

        if $z0 != 0 goto label1;

        $r2 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String removeFrontSideAudio(java.lang.String)>($r1);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mBaseUrl>;

        virtualinvoke $r3.<com.ichi2.libanki.Sound: void addSounds(java.lang.String,java.lang.String,int)>($r1, $r2, 1);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mAnswerSoundsAdded> = 1;

     label1:
        return;
    }
    private void blockControls()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        boolean $z0;
        android.widget.FrameLayout $r1;
        android.widget.LinearLayout $r2;
        int $i0;
        com.ichi2.anki.Whiteboard $r3;
        android.widget.EditText $r4;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mCardFrame>;

        virtualinvoke $r1.<android.widget.FrameLayout: void setEnabled(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mFlipCardLayout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mTouchLayer>;

        virtualinvoke $r1.<android.widget.FrameLayout: void setVisibility(int)>(4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mInAnswer> = 1;

        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mCurrentEase>;

        lookupswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            default: goto label1;
        };

     label1:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

     label2:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefWhiteboard>;

        if $z0 == 0 goto label3;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        if $r3 == null goto label3;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        virtualinvoke $r3.<com.ichi2.anki.Whiteboard: void setEnabled(boolean)>(0);

     label3:
        $z0 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean typeAnswer()>();

        if $z0 == 0 goto label8;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        virtualinvoke $r4.<android.widget.EditText: void setEnabled(boolean)>(0);

        return;

     label4:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setClickable(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        goto label2;

     label5:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setClickable(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        goto label2;

     label6:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setClickable(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        goto label2;

     label7:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setClickable(boolean)>(0);

        goto label2;

     label8:
        return;
    }
    private static int calculateDynamicFontSize(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\<br.*?\\>", " ");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\<hr.*?\\>", " ");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\<.*?\\>", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&nbsp;", " ");

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 5;

        $i0 = 14 - $i0;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(3, $i0);

        return $i0;
    }
    private java.lang.CharSequence clipboardGetText()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.CharSequence $r1;
        android.text.ClipboardManager $r2;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.text.ClipboardManager mClipboard>;

        if $r2 == null goto label2;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.text.ClipboardManager mClipboard>;

        $r1 = virtualinvoke $r2.<android.text.ClipboardManager: java.lang.CharSequence getText()>();

     label1:
        if $r1 == null goto label3;

        return $r1;

     label2:
        $r1 = null;

        goto label1;

     label3:
        return "";
    }
    private void clipboardSetText(java.lang.CharSequence)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.CharSequence $r1;
        java.lang.Exception r2;
        android.text.ClipboardManager $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: java.lang.CharSequence;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.text.ClipboardManager mClipboard>;

        if $r3 == null goto label4;

     label1:
        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.text.ClipboardManager mClipboard>;

        virtualinvoke $r3.<android.text.ClipboardManager: void setText(java.lang.CharSequence)>($r1);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void e(java.lang.String,java.lang.Object[])>("Clipboard error. Disabling text selection setting.", $r4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDisableClipboard> = 1;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private java.lang.String contentForCloze(java.lang.String, int)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.String $r1, $r4;
        int $i0;
        java.util.LinkedHashSet r2;
        java.lang.StringBuilder r3;
        java.util.regex.Pattern $r5;
        java.util.regex.Matcher $r6;
        boolean $z0;
        java.util.Iterator $r7;
        java.lang.Object $r8;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\{\\{c");

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::(.+?)\\}\\}");

        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        r2 = new java.util.LinkedHashSet;

        specialinvoke r2.<java.util.LinkedHashSet: void <init>()>();

     label1:
        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label3;

        $r1 = virtualinvoke $r6.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r4 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("::");

        if $i0 <= -1 goto label2;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r4);

        goto label1;

     label3:
        $r1 = "";

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r7 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r8;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r1 = ", ";

        goto label4;

     label5:
        $r1 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    private android.webkit.WebView createWebView()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        com.ichi2.anki.AbstractFlashcardViewer$MyWebView r1;
        boolean $z0;
        android.webkit.WebSettings $r2;
        com.ichi2.anki.AbstractFlashcardViewer$AnkiDroidWebChromeClient $r3;
        java.lang.Object[] $r4;
        java.lang.Boolean $r5;
        com.ichi2.anki.AbstractFlashcardViewer$15 $r6;
        int $i0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        r1 = new com.ichi2.anki.AbstractFlashcardViewer$MyWebView;

        specialinvoke r1.<com.ichi2.anki.AbstractFlashcardViewer$MyWebView: void <init>(com.ichi2.anki.AbstractFlashcardViewer,android.content.Context)>(r0, r0);

        virtualinvoke r1.<android.webkit.WebView: void setWillNotCacheDrawing(boolean)>(1);

        virtualinvoke r1.<android.webkit.WebView: void setScrollBarStyle(int)>(33554432);

        $z0 = staticinvoke <com.ichi2.compat.CompatHelper: boolean isHoneycomb()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r2.<android.webkit.WebSettings: void setDisplayZoomControls(boolean)>(0);

     label1:
        $r2 = virtualinvoke r1.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r2.<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>(1);

        $r2 = virtualinvoke r1.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r2.<android.webkit.WebSettings: void setSupportZoom(boolean)>(1);

        $r2 = virtualinvoke r1.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r2.<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)>(1);

        $r2 = virtualinvoke r1.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r2.<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>(1);

        $r3 = new com.ichi2.anki.AbstractFlashcardViewer$AnkiDroidWebChromeClient;

        specialinvoke $r3.<com.ichi2.anki.AbstractFlashcardViewer$AnkiDroidWebChromeClient: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        virtualinvoke r1.<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>($r3);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mUseInputTag>;

        virtualinvoke r1.<android.webkit.WebView: void setFocusableInTouchMode(boolean)>($z0);

        virtualinvoke r1.<android.webkit.WebView: void setScrollbarFadingEnabled(boolean)>(1);

        $r4 = newarray (java.lang.Object)[2];

        $z0 = virtualinvoke r1.<android.webkit.WebView: boolean isFocusable()>();

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4[0] = $r5;

        $z0 = virtualinvoke r1.<android.webkit.WebView: boolean isFocusableInTouchMode()>();

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4[1] = $r5;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("Focusable = %s, Focusable in touch mode = %s", $r4);

        $r6 = new com.ichi2.anki.AbstractFlashcardViewer$15;

        specialinvoke $r6.<com.ichi2.anki.AbstractFlashcardViewer$15: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        virtualinvoke r1.<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>($r6);

        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(1, 0, 0, 0);

        virtualinvoke r1.<android.webkit.WebView: void setBackgroundColor(int)>($i0);

        return r1;
    }
    private void destroyWebView(android.webkit.WebView)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        android.webkit.WebView $r1;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: android.webkit.WebView;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.webkit.WebView: void stopLoading()>();

        virtualinvoke $r1.<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>(null);

        virtualinvoke $r1.<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>(null);

        virtualinvoke $r1.<android.webkit.WebView: void destroy()>();

     label1:
        return;
    }
    private static java.lang.String enrichWithQADiv(java.lang.String, boolean)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.StringBuilder r1;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<div class=\"");

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("answer");

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</div>");

        $r0 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("question");

        goto label1;
    }
    private void finishNoStorageAvailable()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void setResult(int)>(202);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void finishWithoutAnimation()>();

        return;
    }
    private org.json.JSONObject getConfigForCurrentCard()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        com.ichi2.libanki.Card $r1;
        com.ichi2.libanki.Collection $r2;
        com.ichi2.libanki.Decks $r3;
        long $l0;
        org.json.JSONObject $r4;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r2 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Collection getCol()>();

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $l0 = staticinvoke <com.ichi2.anki.AbstractFlashcardViewer: long getDeckIdForCard(com.ichi2.libanki.Card)>($r1);

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Decks: org.json.JSONObject confForDid(long)>($l0);

        return $r4;
    }
    private static long getDeckIdForCard(com.ichi2.libanki.Card)
    {
        com.ichi2.libanki.Card $r0;
        long $l0;
        byte $b1;

        $r0 := @parameter0: com.ichi2.libanki.Card;

        $l0 = virtualinvoke $r0.<com.ichi2.libanki.Card: long getODid()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $l0 = virtualinvoke $r0.<com.ichi2.libanki.Card: long getDid()>();

        return $l0;

     label1:
        $l0 = virtualinvoke $r0.<com.ichi2.libanki.Card: long getODid()>();

        return $l0;
    }
    public static com.ichi2.libanki.Card getEditorCard()
    {
        com.ichi2.libanki.Card r0;

        r0 = <com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card sEditorCard>;

        return r0;
    }
    private int getRecommendedEase(boolean)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        boolean $z0;
        java.lang.RuntimeException r1;
        com.ichi2.libanki.Card $r2;
        int $i0;
        com.ichi2.libanki.Sched $r3;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 := @parameter0: boolean;

     label1:
        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sched mSched>;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $i0 = virtualinvoke $r3.<com.ichi2.libanki.Sched: int answerButtons(com.ichi2.libanki.Card)>($r2);

     label2:
        lookupswitch($i0)
        {
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label3;
        };

     label3:
        return 0;

     label4:
        return 2;

     label5:
        if $z0 != 0 goto label8;

        return 2;

     label6:
        if $z0 == 0 goto label8;

        return 4;

     label7:
        r1 := @caughtexception;

        staticinvoke <com.ichi2.anki.AnkiDroidApp: void sendExceptionReport(java.lang.Throwable,java.lang.String)>(r1, "AbstractReviewer-getRecommendedEase");

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void closeReviewer(int,boolean)>(203, 1);

        return 0;

     label8:
        return 3;

        catch java.lang.RuntimeException from label1 to label2 with label7;
    }
    private void hideLookupButton()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        int $i0;
        boolean $z0;
        android.view.View $r1;
        android.view.animation.Animation $r2;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDisableClipboard>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mLookUpIcon>;

        $i0 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i0 == 8 goto label1;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mLookUpIcon>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(8);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mLookUpIcon>;

        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mFadeDuration>;

        $r2 = staticinvoke <com.ichi2.anim.ViewAnimation: android.view.animation.Animation fade(int,int,int)>(1, $i0, 0);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void enableViewAnimation(android.view.View,android.view.animation.Animation)>($r1, $r2);

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void clipboardSetText(java.lang.CharSequence)>("");

     label1:
        return;
    }
    private boolean lookUp()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        android.view.View $r1;
        java.lang.CharSequence $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mLookUpIcon>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(8);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mIsSelecting> = 0;

        $r2 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.CharSequence clipboardGetText()>();

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        $z0 = staticinvoke <com.ichi2.anki.Lookup: boolean lookUp(java.lang.String)>($r3);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void clipboardSetText(java.lang.CharSequence)>("");

     label1:
        return 1;
    }
    private void pauseTimer()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        com.ichi2.libanki.Card $r1;
        android.widget.Chronometer $r2;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        if $r1 == null goto label1;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        virtualinvoke $r1.<com.ichi2.libanki.Card: void stopTimer()>();

     label1:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        if $r2 == null goto label2;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        virtualinvoke $r2.<android.widget.Chronometer: void stop()>();

     label2:
        return;
    }
    private static void readCardText(com.ichi2.libanki.Card, int)
    {
        com.ichi2.libanki.Card $r0;
        int $i0;
        java.lang.String $r1;
        long $l1;

        $r0 := @parameter0: com.ichi2.libanki.Card;

        $i0 := @parameter1: int;

        if $i0 != 0 goto label1;

        $r1 = virtualinvoke $r0.<com.ichi2.libanki.Card: java.lang.String q(boolean)>(1);

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTML(java.lang.String)>($r1);

        $l1 = staticinvoke <com.ichi2.anki.AbstractFlashcardViewer: long getDeckIdForCard(com.ichi2.libanki.Card)>($r0);

        $i0 = virtualinvoke $r0.<com.ichi2.libanki.Card: int getOrd()>();

        staticinvoke <com.ichi2.anki.ReadText: void textToSpeech(java.lang.String,long,int,int)>($r1, $l1, $i0, 0);

        return;

     label1:
        if 1 != $i0 goto label2;

        $r1 = virtualinvoke $r0.<com.ichi2.libanki.Card: java.lang.String getPureAnswer()>();

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTML(java.lang.String)>($r1);

        $l1 = staticinvoke <com.ichi2.anki.AbstractFlashcardViewer: long getDeckIdForCard(com.ichi2.libanki.Card)>($r0);

        $i0 = virtualinvoke $r0.<com.ichi2.libanki.Card: int getOrd()>();

        staticinvoke <com.ichi2.anki.ReadText: void textToSpeech(java.lang.String,long,int,int)>($r1, $l1, $i0, 1);

     label2:
        return;
    }
    private void registerExternalStorageListener()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        android.content.IntentFilter r1;
        android.content.BroadcastReceiver $r2;
        com.ichi2.anki.AbstractFlashcardViewer$12 $r3;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.BroadcastReceiver mUnmountReceiver>;

        if $r2 != null goto label1;

        $r3 = new com.ichi2.anki.AbstractFlashcardViewer$12;

        specialinvoke $r3.<com.ichi2.anki.AbstractFlashcardViewer$12: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.BroadcastReceiver mUnmountReceiver> = $r3;

        r1 = new android.content.IntentFilter;

        specialinvoke r1.<android.content.IntentFilter: void <init>()>();

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("com.ichi2.anki.action.MEDIA_EJECT");

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.BroadcastReceiver mUnmountReceiver>;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r2, r1);

     label1:
        return;
    }
    private java.lang.String removeFrontSideAudio(java.lang.String)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.ichi2.libanki.Card $r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        java.util.regex.Pattern $r6;
        java.util.regex.Matcher $r7;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String getAnswerFormat()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{FrontSide}}");

        if $z0 == 0 goto label2;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Card: java.util.HashMap _getQA(boolean)>(0);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("q");

        $r2 = (java.lang.String) $r5;

        $r6 = <com.ichi2.libanki.Sound: java.util.regex.Pattern sSoundPattern>;

        $r7 = virtualinvoke $r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

     label1:
        $z0 = virtualinvoke $r7.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r7.<java.util.regex.Matcher: java.lang.String group()>();

        $r2 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>($r2, "");

        goto label1;

     label2:
        return $r1;
    }
    private void resumeTimer()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        long $l0, $l1;
        com.ichi2.libanki.Card $r1;
        android.widget.Chronometer $r2;
        int $i2;
        byte $b3;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        if $r1 == null goto label1;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        virtualinvoke $r1.<com.ichi2.libanki.Card: void resumeTimer()>();

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $i2 = virtualinvoke $r1.<com.ichi2.libanki.Card: int timeTaken()>();

        $l0 = (long) $i2;

        $l0 = $l1 - $l0;

        virtualinvoke $r2.<android.widget.Chronometer: void setBase(long)>($l0);

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        $l1 = virtualinvoke $r2.<android.widget.Chronometer: long getBase()>();

        $l0 = $l0 - $l1;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $i2 = virtualinvoke $r1.<com.ichi2.libanki.Card: int timeLimit()>();

        $l1 = (long) $i2;

        $b3 = $l0 cmp $l1;

        if $b3 >= 0 goto label1;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        virtualinvoke $r2.<android.widget.Chronometer: void start()>();

     label1:
        return;
    }
    private void selectAndCopyText()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.Exception r1;
        android.view.KeyEvent r2;
        android.webkit.WebView $r3;
        java.lang.AssertionError $r4;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        r2 = new android.view.KeyEvent;

     label1:
        specialinvoke r2.<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>(0L, 0L, 0, 59, 0, 0);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        virtualinvoke r2.<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback)>($r3);

        virtualinvoke r2.<android.view.KeyEvent: boolean isShiftPressed()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mIsSelecting> = 1;

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private void setInterface()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        com.ichi2.libanki.Card $r1;
        android.webkit.WebView $r2;
        android.widget.FrameLayout $r3;
        boolean $z0;
        int $i0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        if $r2 != null goto label2;

        $r2 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView createWebView()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard> = $r2;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mCardFrame>;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        virtualinvoke $r3.<android.widget.FrameLayout: void addView(android.view.View)>($r2);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mUseQuickUpdate>;

        if $z0 != 0 goto label2;

        $r2 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView createWebView()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mNextCard> = $r2;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mNextCard>;

        virtualinvoke $r2.<android.webkit.WebView: void setVisibility(int)>(8);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mCardFrame>;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mNextCard>;

        virtualinvoke $r3.<android.widget.FrameLayout: void addView(android.view.View,int)>($r2, 0);

     label2:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        $i0 = virtualinvoke $r2.<android.webkit.WebView: int getVisibility()>();

        if $i0 == 0 goto label3;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        virtualinvoke $r2.<android.webkit.WebView: void setVisibility(int)>(0);

     label3:
        return;
    }
    private boolean shouldUseQuickUpdate()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefSafeDisplay>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void showLookupButtonIfNeeded()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        int $i0;
        boolean $z0;
        android.text.ClipboardManager $r1;
        java.lang.CharSequence $r2;
        android.view.View $r3;
        android.view.animation.Animation $r4;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDisableClipboard>;

        if $z0 != 0 goto label2;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.text.ClipboardManager mClipboard>;

        if $r1 == null goto label2;

        $r2 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.CharSequence clipboardGetText()>();

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i0 == 0 goto label1;

        $z0 = staticinvoke <com.ichi2.anki.Lookup: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mLookUpIcon>;

        $i0 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if $i0 == 0 goto label1;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mLookUpIcon>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(0);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mLookUpIcon>;

        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mFadeDuration>;

        $r4 = staticinvoke <com.ichi2.anim.ViewAnimation: android.view.animation.Animation fade(int,int,int)>(0, $i0, 0);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void enableViewAnimation(android.view.View,android.view.animation.Animation)>($r3, $r4);

        return;

     label1:
        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mLookUpIcon>;

        $i0 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label2;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mLookUpIcon>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(8);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mLookUpIcon>;

        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mFadeDuration>;

        $r4 = staticinvoke <com.ichi2.anim.ViewAnimation: android.view.animation.Animation fade(int,int,int)>(1, $i0, 0);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void enableViewAnimation(android.view.View,android.view.animation.Animation)>($r3, $r4);

     label2:
        return;
    }
    private void switchTopBarVisibility(int)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        int $i0;
        boolean $z0;
        android.widget.Chronometer $r1;
        android.widget.TextView $r2;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $i0 := @parameter0: int;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowTimer>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        virtualinvoke $r1.<android.widget.Chronometer: void setVisibility(int)>($i0);

     label1:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowRemainingCardCount>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarNew>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>($i0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarLearn>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>($i0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarReview>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>($i0);

     label2:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mChosenAnswer>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>($i0);

        return;
    }
    private java.lang.String typeAnsAnswerFilter(java.lang.String, java.lang.String, java.lang.String)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.String $r1, $r2, $r3;
        com.ichi2.utils.DiffEngine r4;
        java.lang.StringBuilder r5;
        java.util.regex.Pattern $r6;
        java.util.regex.Matcher $r7;
        boolean $z0;
        java.lang.String[] $r8;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r6 = <com.ichi2.anki.AbstractFlashcardViewer: java.util.regex.Pattern sTypeAnsPat>;

        $r7 = virtualinvoke $r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        r4 = new com.ichi2.utils.DiffEngine;

        specialinvoke r4.<com.ichi2.utils.DiffEngine: void <init>()>();

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<div");

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mUseInputTag>;

        if $z0 != 0 goto label1;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowTypeAnswerField>;

        if $z0 != 0 goto label1;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" class=\"typeOff\"");

     label1:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("><code id=typeans>");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $r1 = staticinvoke <com.ichi2.utils.DiffEngine: java.lang.String wrapGood(java.lang.String)>($r3);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u2714");

     label2:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</code></div>");

        $r1 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r7.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($r1);

        return $r1;

     label3:
        $r8 = virtualinvoke r4.<com.ichi2.utils.DiffEngine: java.lang.String[] diffedHtmlStrings(java.lang.String,java.lang.String)>($r3, $r2);

        $r1 = $r8[0];

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br>&darr;<br>");

        $r1 = $r8[1];

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label2;

     label4:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowTypeAnswerField>;

        if $z0 == 0 goto label5;

        $r1 = staticinvoke <com.ichi2.utils.DiffEngine: java.lang.String wrapMissing(java.lang.String)>($r3);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label2;

     label5:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label2;
    }
    private java.lang.String typeAnsQuestionFilter(java.lang.String)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.String $r1;
        java.lang.StringBuilder r2, $r5;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;
        boolean $z0;
        int $i0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: java.lang.String;

        $r3 = <com.ichi2.anki.AbstractFlashcardViewer: java.util.regex.Pattern sTypeAnsPat>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeWarning>;

        if $r1 == null goto label1;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeWarning>;

        $r1 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>($r1);

        return $r1;

     label1:
        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mUseInputTag>;

        if $z0 == 0 goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<center>\n<input type=text name=typed id=typeans onfocus=\"taFocus();\" onblur=\"taBlur(this);\" onKeyPress=\"return taKey(this, event)\" autocomplete=\"off\" ");

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeFont>;

        if $r1 == null goto label2;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeFont>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label2;

        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mTypeSize>;

        if $i0 <= 0 goto label2;

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("style=\"font-family: \'");

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeFont>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'; font-size: ");

        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mTypeSize>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("px;\" ");

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n</center>\n");

     label3:
        $r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($r1);

        return $r1;

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<span id=typeans class=\"typePrompt");

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowTypeAnswerField>;

        if $z0 != 0 goto label5;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" typeOff");

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">........</span>");

        goto label3;
    }
    private boolean typeAnswer()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowTypeAnswerField>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeCorrect>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    private void unblockControls()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        boolean $z0;
        android.widget.FrameLayout $r1;
        android.widget.LinearLayout $r2;
        int $i0;
        com.ichi2.anki.Whiteboard $r3;
        android.widget.EditText $r4;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mCardFrame>;

        virtualinvoke $r1.<android.widget.FrameLayout: void setEnabled(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mFlipCardLayout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mCurrentEase>;

        lookupswitch($i0)
        {
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            case 4: goto label8;
            default: goto label1;
        };

     label1:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

     label2:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefWhiteboard>;

        if $z0 == 0 goto label3;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        if $r3 == null goto label3;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        virtualinvoke $r3.<com.ichi2.anki.Whiteboard: void setEnabled(boolean)>(1);

     label3:
        $z0 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean typeAnswer()>();

        if $z0 == 0 goto label4;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        virtualinvoke $r4.<android.widget.EditText: void setEnabled(boolean)>(1);

     label4:
        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mTouchLayer>;

        virtualinvoke $r1.<android.widget.FrameLayout: void setVisibility(int)>(0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mInAnswer> = 0;

        return;

     label5:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setClickable(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        goto label2;

     label6:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setClickable(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        goto label2;

     label7:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setClickable(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        goto label2;

     label8:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setEnabled(boolean)>(1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setClickable(boolean)>(1);

        goto label2;
    }
    private void updateCard(java.lang.String)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.StringBuilder r1, $r12;
        java.lang.String $r2, $r7, $r8, $r9;
        java.lang.Object[] $r3;
        com.ichi2.libanki.Card $r4;
        android.webkit.WebView $r5;
        android.webkit.WebSettings $r6;
        int $i0;
        boolean $z0;
        com.ichi2.anki.reviewer.ReviewerExtRegistry $r10;
        double $d0;
        java.lang.Double $r11;
        android.text.SpannedString $r13;
        com.ichi2.libanki.Sound $r14;
        org.json.JSONObject $r15;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r2 := @parameter0: java.lang.String;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("updateCard()", $r3);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: long mUseTimerDynamicMS> = 0L;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        if $r4 != null goto label1;

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        $r6 = virtualinvoke $r5.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        $i0 = staticinvoke <com.ichi2.anki.AbstractFlashcardViewer: int calculateDynamicFontSize(java.lang.String)>($r2);

        virtualinvoke $r6.<android.webkit.WebSettings: void setDefaultFontSize(int)>($i0);

     label1:
        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 == 0 goto label7;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void addAnswerSounds(java.lang.String)>($r2);

     label2:
        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mBaseUrl>;

        $r2 = staticinvoke <com.ichi2.libanki.Sound: java.lang.String expandSounds(java.lang.String,java.lang.String)>($r7, $r2);

        $r7 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("font-weight:600;", "font-weight:700;");

        $r8 = $r7;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("card card");

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $i0 = virtualinvoke $r4.<com.ichi2.libanki.Card: int getOrd()>();

        $i0 = $i0 + 1;

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = $r9;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefCenterVertically>;

        if $z0 == 0 goto label3;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vertically_centered");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r7;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("content card = \n %s", $r3);

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.anki.reviewer.ReviewerExtRegistry mExtensions>;

        virtualinvoke $r10.<com.ichi2.anki.reviewer.ReviewerExtRegistry: void updateCssStyle(java.lang.StringBuilder)>(r1);

        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mCardZoom>;

        if $i0 == 100 goto label4;

        $r3 = newarray (java.lang.Object)[1];

        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mCardZoom>;

        $d0 = (double) $i0;

        $d0 = $d0 / 100.0;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3[0] = $r11;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("body { zoom: %s }\n", $r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label4:
        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mImageZoom>;

        if $i0 == 100 goto label5;

        $r3 = newarray (java.lang.Object)[1];

        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mImageZoom>;

        $d0 = (double) $i0;

        $d0 = $d0 / 100.0;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3[0] = $r11;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("img { zoom: %s }\n", $r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label5:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("::style::", $r3);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mNightMode>;

        if $z0 == 0 goto label6;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" night_mode");

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r9 = virtualinvoke $r4.<com.ichi2.libanki.Card: java.lang.String css()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>(".night_mode");

        if $z0 != 0 goto label6;

        $r8 = staticinvoke <com.ichi2.themes.HtmlColors: java.lang.String invertColors(java.lang.String)>($r7);

     label6:
        $r7 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String SmpToHtmlEntity(java.lang.String)>($r8);

        $r13 = new android.text.SpannedString;

        $r8 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mCardTemplate>;

        $r7 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("::content::", $r7);

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("::style::", $r8);

        $r2 = virtualinvoke $r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("::class::", $r2);

        specialinvoke $r13.<android.text.SpannedString: void <init>(java.lang.CharSequence)>($r2);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.text.Spanned mCardContent> = $r13;

        $r3 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mBaseUrl>;

        $r3[0] = $r2;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("base url = %s", $r3);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void fillFlashcard()>();

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mConfigurationChanged>;

        if $z0 != 0 goto label8;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void playSounds(boolean)>(0);

        return;

     label7:
        $r14 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        virtualinvoke $r14.<com.ichi2.libanki.Sound: void resetSounds()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mAnswerSoundsAdded> = 0;

        $r14 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mBaseUrl>;

        virtualinvoke $r14.<com.ichi2.libanki.Sound: void addSounds(java.lang.String,java.lang.String,int)>($r7, $r2, 0);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefUseTimer>;

        if $z0 == 0 goto label2;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mAnswerSoundsAdded>;

        if $z0 != 0 goto label2;

        $r15 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: org.json.JSONObject getConfigForCurrentCard()>();

        $z0 = virtualinvoke $r15.<org.json.JSONObject: boolean optBoolean(java.lang.String,boolean)>("autoplay", 0);

        if $z0 == 0 goto label2;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r7 = virtualinvoke $r4.<com.ichi2.libanki.Card: java.lang.String a()>();

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void addAnswerSounds(java.lang.String)>($r7);

        goto label2;

     label8:
        return;
    }
    private void updateForNewCard()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        boolean $z0;
        android.widget.EditText $r1;
        com.ichi2.anki.Whiteboard $r2;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void updateScreenCounts()>();

        $z0 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean typeAnswer()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        virtualinvoke $r1.<android.widget.EditText: void setText(java.lang.CharSequence)>("");

     label1:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefWhiteboard>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        if $r2 == null goto label2;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.anki.Whiteboard mWhiteboard>;

        virtualinvoke $r2.<com.ichi2.anki.Whiteboard: void clear()>();

     label2:
        return;
    }
    private void updateTypeAnswerInfo()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        org.json.JSONException r1;
        com.ichi2.libanki.Card $r2;
        java.lang.String $r3, $r6;
        java.util.regex.Pattern $r4;
        java.util.regex.Matcher $r5;
        int i0, i1, $i2;
        boolean $z0;
        java.lang.String[] $r7;
        org.json.JSONObject $r8;
        org.json.JSONArray $r9;
        java.lang.Object $r10;
        com.ichi2.libanki.Note $r11;
        java.lang.Integer $r12;
        android.content.res.Resources $r13;
        java.lang.RuntimeException $r14;
        java.lang.Object[] $r15;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeCorrect> = null;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeInput> = "";

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Card: java.lang.String q(boolean)>(0);

        $r4 = <com.ichi2.anki.AbstractFlashcardViewer: java.util.regex.Pattern sTypeAnsPat>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        i0 = 0;

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $r6 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r3 = $r6;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String,int)>("cloze:", 0);

        if $z0 == 0 goto label02;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        i0 = virtualinvoke $r2.<com.ichi2.libanki.Card: int getOrd()>();

        i0 = i0 + 1;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r3 = $r7[1];

     label02:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

     label03:
        $r8 = virtualinvoke $r2.<com.ichi2.libanki.Card: org.json.JSONObject model()>();

        $r9 = virtualinvoke $r8.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("flds");

     label04:
        i1 = 0;

     label05:
        $i2 = virtualinvoke $r9.<org.json.JSONArray: int length()>();

     label06:
        if i1 >= $i2 goto label21;

     label07:
        $r8 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i1);

        $r10 = virtualinvoke $r8.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("name");

     label08:
        $r6 = (java.lang.String) $r10;

     label09:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label10:
        if $z0 == 0 goto label22;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

     label11:
        $r11 = virtualinvoke $r2.<com.ichi2.libanki.Card: com.ichi2.libanki.Note note()>();

        $r6 = virtualinvoke $r11.<com.ichi2.libanki.Note: java.lang.String getItem(java.lang.String)>($r6);

     label12:
        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeCorrect> = $r6;

        if i0 == 0 goto label15;

        $r6 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeCorrect>;

     label13:
        $r6 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String contentForCloze(java.lang.String,int)>($r6, i0);

     label14:
        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeCorrect> = $r6;

     label15:
        $r8 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i1);

        $r10 = virtualinvoke $r8.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("font");

     label16:
        $r6 = (java.lang.String) $r10;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeFont> = $r6;

     label17:
        $r8 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i1);

        $r10 = virtualinvoke $r8.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("size");

     label18:
        $r12 = (java.lang.Integer) $r10;

     label19:
        i1 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

     label20:
        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mTypeSize> = i1;

     label21:
        $r6 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeCorrect>;

        if $r6 != null goto label25;

        if i0 == 0 goto label24;

        $r13 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r13.<android.content.res.Resources: java.lang.String getString(int)>(2131230995);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeWarning> = $r3;

        return;

     label22:
        i1 = i1 + 1;

        goto label05;

     label23:
        r1 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r14;

     label24:
        $r13 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.res.Resources getResources()>();

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = $r3;

        $r3 = virtualinvoke $r13.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131231489, $r15);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeWarning> = $r3;

        return;

     label25:
        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeCorrect>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label26;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeCorrect> = null;

        return;

     label26:
        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeWarning> = null;

        return;

        catch org.json.JSONException from label03 to label04 with label23;
        catch org.json.JSONException from label05 to label06 with label23;
        catch org.json.JSONException from label07 to label08 with label23;
        catch org.json.JSONException from label09 to label10 with label23;
        catch org.json.JSONException from label11 to label12 with label23;
        catch org.json.JSONException from label13 to label14 with label23;
        catch org.json.JSONException from label15 to label16 with label23;
        catch org.json.JSONException from label17 to label18 with label23;
        catch org.json.JSONException from label19 to label20 with label23;
    }
    protected void answerCard(int)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        int $i0, $i1, $i2;
        boolean $z0;
        com.ichi2.libanki.Collection $r1;
        com.ichi2.libanki.Sched $r2;
        com.ichi2.libanki.Card $r3;
        android.os.Handler $r4;
        java.lang.Runnable $r5;
        long $l3;
        com.ichi2.libanki.Sound $r6;
        com.ichi2.async.DeckTask$TaskListener $r7;
        com.ichi2.async.DeckTask$TaskData[] $r8;
        com.ichi2.async.DeckTask$TaskData $r9;
        android.widget.TextView $r10;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $i0 := @parameter0: int;

        $i1 = 2131689532;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mInAnswer>;

        if $z0 == 0 goto label01;

        return;

     label01:
        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mIsSelecting> = 0;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void hideLookupButton()>();

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Collection getCol()>();

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $i2 = virtualinvoke $r2.<com.ichi2.libanki.Sched: int answerButtons(com.ichi2.libanki.Card)>($r3);

        if $i2 < $i0 goto label10;

        lookupswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label06;
            case 4: goto label09;
            default: goto label02;
        };

     label02:
        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mTimerHandler>;

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable removeChosenAnswerText>;

        virtualinvoke $r4.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r5);

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mTimerHandler>;

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable removeChosenAnswerText>;

        $i1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mShowChosenAnswerLength>;

        $l3 = (long) $i1;

        virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r5, $l3);

        $r6 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        virtualinvoke $r6.<com.ichi2.libanki.Sound: void stopSounds()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mCurrentEase> = $i0;

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.async.DeckTask$TaskListener mAnswerCardHandler>;

        $r8 = newarray (com.ichi2.async.DeckTask$TaskData)[1];

        $r9 = new com.ichi2.async.DeckTask$TaskData;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mCurrentEase>;

        specialinvoke $r9.<com.ichi2.async.DeckTask$TaskData: void <init>(com.ichi2.libanki.Card,int)>($r3, $i0);

        $r8[0] = $r9;

        staticinvoke <com.ichi2.async.DeckTask: com.ichi2.async.DeckTask launchDeckTask(int,com.ichi2.async.DeckTask$Listener,com.ichi2.async.DeckTask$TaskData[])>(3, $r7, $r8);

        return;

     label03:
        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mChosenAnswer>;

        virtualinvoke $r10.<android.widget.TextView: void setText(java.lang.CharSequence)>("\u2022");

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mChosenAnswer>;

        $i1 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r0, 2131689565);

        virtualinvoke $r10.<android.widget.TextView: void setTextColor(int)>($i1);

        goto label02;

     label04:
        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mChosenAnswer>;

        virtualinvoke $r10.<android.widget.TextView: void setText(java.lang.CharSequence)>("\u2022\u2022");

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mChosenAnswer>;

        if $i2 != 4 goto label05;

        $i1 = 2131689518;

     label05:
        $i1 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r0, $i1);

        virtualinvoke $r10.<android.widget.TextView: void setTextColor(int)>($i1);

        goto label02;

     label06:
        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mChosenAnswer>;

        virtualinvoke $r10.<android.widget.TextView: void setText(java.lang.CharSequence)>("\u2022\u2022\u2022");

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mChosenAnswer>;

        if $i2 != 4 goto label08;

     label07:
        $i1 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r0, $i1);

        virtualinvoke $r10.<android.widget.TextView: void setTextColor(int)>($i1);

        goto label02;

     label08:
        $i1 = 2131689553;

        goto label07;

     label09:
        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mChosenAnswer>;

        virtualinvoke $r10.<android.widget.TextView: void setText(java.lang.CharSequence)>("\u2022\u2022\u2022\u2022");

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mChosenAnswer>;

        $i1 = staticinvoke <android.support.v4.content.ContextCompat: int getColor(android.content.Context,int)>(r0, 2131689553);

        virtualinvoke $r10.<android.widget.TextView: void setTextColor(int)>($i1);

        goto label02;

     label10:
        return;
    }
    protected java.lang.String cleanCorrectAnswer(java.lang.String)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        return "";

     label2:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r2 = <com.ichi2.anki.AbstractFlashcardViewer: java.util.regex.Pattern sSpanPattern>;

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTMLMedia(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $r1 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r2 = <com.ichi2.anki.AbstractFlashcardViewer: java.util.regex.Pattern sBrPattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $r1 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("\n");

        $r2 = <com.ichi2.libanki.Sound: java.util.regex.Pattern sSoundPattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $r1 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String nfcNormalized(java.lang.String)>($r1);

        return $r1;
    }
    protected java.lang.String cleanTypedAnswer(java.lang.String)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        return "";

     label2:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r1 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String nfcNormalized(java.lang.String)>($r1);

        return $r1;
    }
    protected boolean clipboardHasText()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        boolean $z0;
        android.text.ClipboardManager $r1;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.text.ClipboardManager mClipboard>;

        if $r1 == null goto label1;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.text.ClipboardManager mClipboard>;

        $z0 = virtualinvoke $r1.<android.text.ClipboardManager: boolean hasText()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    protected void closeReviewer(int, boolean)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        int $i0;
        boolean $z0;
        android.os.Handler $r1;
        java.lang.Runnable $r2;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mTimeoutHandler>;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable mShowAnswerTask>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mTimeoutHandler>;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable mShowQuestionTask>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mTimerHandler>;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable removeChosenAnswerText>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler longClickHandler>;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable longClickTestRunnable>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler longClickHandler>;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable startLongClickAction>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void setResult(int)>($i0);

        if $z0 == 0 goto label1;

        staticinvoke <com.ichi2.anki.UIUtils: void saveCollectionInBackground(android.content.Context)>(r0);

     label1:
        $i0 = <com.ichi2.anim.ActivityTransitionAnimation: int RIGHT>;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void finishWithAnimation(int)>($i0);

        return;
    }
    protected void delayedHide(int)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        int $i0;
        long $l1;
        android.os.Handler $r1;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $i0 := @parameter0: int;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mFullScreenHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(0);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mFullScreenHandler>;

        $l1 = (long) $i0;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(0, $l1);

        return;
    }
    protected void dismiss(com.ichi2.libanki.Collection$DismissType)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        com.ichi2.libanki.Collection$DismissType $r1;
        com.ichi2.async.DeckTask$TaskListener $r2;
        com.ichi2.async.DeckTask$TaskData[] $r3;
        com.ichi2.async.DeckTask$TaskData $r4;
        com.ichi2.libanki.Card $r5;
        java.lang.Object[] $r6;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: com.ichi2.libanki.Collection$DismissType;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.async.DeckTask$TaskListener mDismissCardHandler>;

        $r3 = newarray (com.ichi2.async.DeckTask$TaskData)[1];

        $r4 = new com.ichi2.async.DeckTask$TaskData;

        $r6 = newarray (java.lang.Object)[2];

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r6[0] = $r5;

        $r6[1] = $r1;

        specialinvoke $r4.<com.ichi2.async.DeckTask$TaskData: void <init>(java.lang.Object[])>($r6);

        $r3[0] = $r4;

        staticinvoke <com.ichi2.async.DeckTask: com.ichi2.async.DeckTask launchDeckTask(int,com.ichi2.async.DeckTask$Listener,com.ichi2.async.DeckTask$TaskData[])>(11, $r2, $r3);

        return;
    }
    protected void displayCardAnswer()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        long l0, $l2;
        java.lang.Object[] $r1;
        com.ichi2.libanki.Card $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.view.inputmethod.InputMethodManager r4;
        android.widget.EditText $r5;
        android.os.IBinder $r6;
        java.lang.String $r7, $r11, $r12;
        com.ichi2.libanki.Sound $r8;
        com.ichi2.libanki.Collection $r9;
        com.ichi2.libanki.Media $r10;
        int $i1;
        byte $b3;
        android.os.Handler $r13;
        java.lang.Runnable $r14;
        android.text.Editable $r15;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("displayCardAnswer()", $r1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        if $r2 != null goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean typeAnswer()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Object getSystemService(java.lang.String)>("input_method");

        r4 = (android.view.inputmethod.InputMethodManager) $r3;

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        $r6 = virtualinvoke $r5.<android.widget.EditText: android.os.IBinder getWindowToken()>();

        virtualinvoke r4.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r6, 0);

     label2:
        <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer> = 1;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r7 = virtualinvoke $r2.<com.ichi2.libanki.Card: java.lang.String a()>();

        $r8 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        virtualinvoke $r8.<com.ichi2.libanki.Sound: void stopSounds()>();

        $r9 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Collection getCol()>();

        $r10 = virtualinvoke $r9.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        $r7 = virtualinvoke $r10.<com.ichi2.libanki.Media: java.lang.String escapeImages(java.lang.String)>($r7);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        virtualinvoke $r5.<android.widget.EditText: void setVisibility(int)>(8);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mUseInputTag>;

        if $z0 == 0 goto label4;

        $r11 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeInput>;

        $r11 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String cleanTypedAnswer(java.lang.String)>($r11);

     label3:
        $r12 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mTypeCorrect>;

        $r12 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String cleanCorrectAnswer(java.lang.String)>($r12);

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r12;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("correct answer = %s", $r1);

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r11;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("user answer = %s", $r1);

        $r7 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String typeAnsAnswerFilter(java.lang.String,java.lang.String,java.lang.String)>($r7, $r11, $r12);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mIsSelecting> = 0;

        $r7 = staticinvoke <com.ichi2.anki.AbstractFlashcardViewer: java.lang.String enrichWithQADiv(java.lang.String,boolean)>($r7, 1);

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void updateCard(java.lang.String)>($r7);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void showEaseButtons()>();

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefUseTimer>;

        if $z0 == 0 goto label5;

        $i1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mWaitQuestionSecond>;

        $i1 = $i1 * 1000;

        l0 = (long) $i1;

        $l2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: long mUseTimerDynamicMS>;

        l0 = l0 + $l2;

        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label5;

        $r13 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mTimeoutHandler>;

        $r14 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable mShowQuestionTask>;

        virtualinvoke $r13.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r14);

        $r13 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mTimeoutHandler>;

        $r14 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable mShowQuestionTask>;

        virtualinvoke $r13.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r14, l0);

        return;

     label4:
        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        $r15 = virtualinvoke $r5.<android.widget.EditText: android.text.Editable getText()>();

        $r11 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        $r11 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String cleanTypedAnswer(java.lang.String)>($r11);

        goto label3;

     label5:
        return;
    }
    protected void displayCardQuestion()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        long l0, $l2;
        java.lang.Object[] $r1;
        com.ichi2.libanki.Card $r2;
        boolean $z0;
        android.content.res.Resources $r3;
        java.lang.String $r4;
        int $i1;
        byte $b3;
        android.os.Handler $r5;
        java.lang.Runnable $r6;
        java.lang.Long $r7;
        com.ichi2.libanki.Collection $r8;
        com.ichi2.libanki.Media $r9;
        android.widget.EditText $r10;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("displayCardQuestion()", $r1);

        <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer> = 0;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void setInterface()>();

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $z0 = virtualinvoke $r2.<com.ichi2.libanki.Card: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(2131230995);

     label1:
        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void updateCard(java.lang.String)>($r4);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void hideEaseButtons()>();

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefUseTimer>;

        if $z0 == 0 goto label2;

        $i1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mWaitAnswerSecond>;

        $i1 = $i1 * 1000;

        l0 = (long) $i1;

        $l2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: long mUseTimerDynamicMS>;

        l0 = l0 + $l2;

        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label2;

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mTimeoutHandler>;

        $r6 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable mShowAnswerTask>;

        virtualinvoke $r5.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r6);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mTimeoutHandler>;

        $r6 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable mShowAnswerTask>;

        virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, l0);

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        l0 = virtualinvoke $r2.<com.ichi2.libanki.Card: long getId()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r1[0] = $r7;

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("AbstractFlashcardViewer:: Question successfully shown for card id %d", $r1);

        return;

     label3:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r4 = virtualinvoke $r2.<com.ichi2.libanki.Card: java.lang.String q()>();

        $r8 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Collection getCol()>();

        $r9 = virtualinvoke $r8.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        $r4 = virtualinvoke $r9.<com.ichi2.libanki.Media: java.lang.String escapeImages(java.lang.String)>($r4);

        $r4 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String typeAnsQuestionFilter(java.lang.String)>($r4);

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r4;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("question: \'%s\'", $r1);

        $z0 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean typeAnswer()>();

        if $z0 == 0 goto label4;

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        virtualinvoke $r10.<android.widget.EditText: void setVisibility(int)>(0);

     label4:
        $r4 = staticinvoke <com.ichi2.anki.AbstractFlashcardViewer: java.lang.String enrichWithQADiv(java.lang.String,boolean)>($r4, 0);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mSpeakText>;

        if $z0 == 0 goto label1;

        goto label1;
    }
    protected boolean editCard()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        android.content.Intent r1;
        int $i0;
        com.ichi2.libanki.Card $r2;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/ichi2/anki/NoteEditor;");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("CALLER", 1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        <com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card sEditorCard> = $r2;

        $i0 = <com.ichi2.anim.ActivityTransitionAnimation: int LEFT>;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void startActivityForResultWithAnimation(android.content.Intent,int,int)>(r1, 0, $i0);

        return 1;
    }
    protected void executeCommand(int)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        int $i0;
        boolean $z0;
        com.ichi2.libanki.Collection $r1;
        com.ichi2.libanki.Card $r2;
        com.ichi2.libanki.Collection$DismissType $r3;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label05;
            case 4: goto label07;
            case 5: goto label09;
            case 6: goto label11;
            case 7: goto label13;
            case 8: goto label16;
            case 9: goto label17;
            case 10: goto label18;
            case 11: goto label19;
            case 12: goto label20;
            case 13: goto label22;
            case 14: goto label24;
            case 15: goto label01;
            case 16: goto label25;
            case 17: goto label15;
            case 18: goto label21;
            case 19: goto label23;
            default: goto label01;
        };

     label01:
        return;

     label02:
        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 != 0 goto label26;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void displayCardAnswer()>();

        return;

     label03:
        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 == 0 goto label04;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void answerCard(int)>(1);

        return;

     label04:
        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void displayCardAnswer()>();

        return;

     label05:
        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 == 0 goto label06;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void answerCard(int)>(2);

        return;

     label06:
        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void displayCardAnswer()>();

        return;

     label07:
        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 == 0 goto label08;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void answerCard(int)>(3);

        return;

     label08:
        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void displayCardAnswer()>();

        return;

     label09:
        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 == 0 goto label10;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void answerCard(int)>(4);

        return;

     label10:
        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void displayCardAnswer()>();

        return;

     label11:
        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 == 0 goto label12;

        $i0 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: int getRecommendedEase(boolean)>(0);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void answerCard(int)>($i0);

        return;

     label12:
        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void displayCardAnswer()>();

        return;

     label13:
        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 == 0 goto label14;

        $i0 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: int getRecommendedEase(boolean)>(1);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void answerCard(int)>($i0);

        return;

     label14:
        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void displayCardAnswer()>();

        return;

     label15:
        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void closeReviewer(int,boolean)>(50, 0);

        return;

     label16:
        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Collection getCol()>();

        $z0 = virtualinvoke $r1.<com.ichi2.libanki.Collection: boolean undoAvailable()>();

        if $z0 == 0 goto label26;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void undo()>();

        return;

     label17:
        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean editCard()>();

        return;

     label18:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void onMark(com.ichi2.libanki.Card)>($r2);

        return;

     label19:
        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void lookUpOrSelectText()>();

        return;

     label20:
        $r3 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType BURY_CARD>;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void dismiss(com.ichi2.libanki.Collection$DismissType)>($r3);

        return;

     label21:
        $r3 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType BURY_NOTE>;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void dismiss(com.ichi2.libanki.Collection$DismissType)>($r3);

        return;

     label22:
        $r3 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType SUSPEND_CARD>;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void dismiss(com.ichi2.libanki.Collection$DismissType)>($r3);

        return;

     label23:
        $r3 = <com.ichi2.libanki.Collection$DismissType: com.ichi2.libanki.Collection$DismissType SUSPEND_NOTE>;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void dismiss(com.ichi2.libanki.Collection$DismissType)>($r3);

        return;

     label24:
        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void showDeleteNoteDialog()>();

        return;

     label25:
        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void playSounds(boolean)>(1);

     label26:
        return;
    }
    public void fillFlashcard()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r10;
        boolean $z0;
        android.webkit.WebView $r3;
        com.ichi2.compat.Compat $r4;
        android.webkit.WebSettings $r5;
        org.json.JSONObject $r6;
        java.lang.Boolean $r7;
        java.lang.StringBuilder $r8;
        android.text.Spanned $r9;
        android.widget.FrameLayout $r11;
        android.widget.Chronometer $r12;
        int $i0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("fillFlashcard()", $r1);

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mBaseUrl>;

        $r1[0] = $r2;

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("base url = %s", $r1);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mUseQuickUpdate>;

        if $z0 != 0 goto label3;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        if $r3 == null goto label3;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mNextCard>;

        if $r3 == null goto label3;

        $r4 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mNextCard>;

        $r5 = virtualinvoke $r3.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        $r6 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: org.json.JSONObject getConfigForCurrentCard()>();

        $z0 = virtualinvoke $r6.<org.json.JSONObject: boolean optBoolean(java.lang.String)>("autoplay");

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r4.<com.ichi2.compat.Compat: void setHTML5MediaAutoPlay(android.webkit.WebSettings,java.lang.Boolean)>($r5, $r7);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mNextCard>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mBaseUrl>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__viewer__.html");

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.text.Spanned mCardContent>;

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r3.<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r2, $r10, "text/html", "utf-8", null);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mNextCard>;

        virtualinvoke $r3.<android.webkit.WebView: void setVisibility(int)>(0);

        $r11 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mCardFrame>;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        virtualinvoke $r11.<android.widget.FrameLayout: void removeView(android.view.View)>($r3);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void destroyWebView(android.webkit.WebView)>($r3);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mNextCard>;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard> = $r3;

        $r3 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView createWebView()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mNextCard> = $r3;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mNextCard>;

        virtualinvoke $r3.<android.webkit.WebView: void setVisibility(int)>(8);

        $r11 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mCardFrame>;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mNextCard>;

        virtualinvoke $r11.<android.widget.FrameLayout: void addView(android.view.View,int)>($r3, 0);

     label1:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowTimer>;

        if $z0 == 0 goto label2;

        $r12 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        $i0 = virtualinvoke $r12.<android.widget.Chronometer: int getVisibility()>();

        if $i0 != 4 goto label2;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void switchTopBarVisibility(int)>(0);

     label2:
        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 != 0 goto label4;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void updateForNewCard()>();

        return;

     label3:
        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        if $r3 == null goto label1;

        $r4 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        $r5 = virtualinvoke $r3.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        $r6 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: org.json.JSONObject getConfigForCurrentCard()>();

        $z0 = virtualinvoke $r6.<org.json.JSONObject: boolean optBoolean(java.lang.String)>("autoplay");

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r4.<com.ichi2.compat.Compat: void setHTML5MediaAutoPlay(android.webkit.WebSettings,java.lang.Boolean)>($r5, $r7);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mBaseUrl>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__viewer__.html");

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.text.Spanned mCardContent>;

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r3.<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r2, $r10, "text/html", "utf-8", null);

        goto label1;

     label4:
        return;
    }
    protected void generateQuestionSoundList()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        com.ichi2.libanki.Sound $r1;
        java.lang.String $r2, $r3;
        com.ichi2.libanki.Card $r4;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mBaseUrl>;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r3 = virtualinvoke $r4.<com.ichi2.libanki.Card: java.lang.String qSimple()>();

        virtualinvoke $r1.<com.ichi2.libanki.Sound: void addSounds(java.lang.String,java.lang.String,int)>($r2, $r3, 0);

        return;
    }
    public java.lang.String getAnswerFormat()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        org.json.JSONException r1;
        com.ichi2.libanki.Card $r2;
        org.json.JSONObject $r3;
        int $i0;
        org.json.JSONArray $r4;
        java.lang.String $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

     label01:
        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Card: org.json.JSONObject model()>();

        $i0 = virtualinvoke $r3.<org.json.JSONObject: int getInt(java.lang.String)>("type");

     label02:
        if $i0 != 0 goto label08;

     label03:
        $r4 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("tmpls");

     label04:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

     label05:
        $i0 = virtualinvoke $r2.<com.ichi2.libanki.Card: int getOrd()>();

        $r3 = virtualinvoke $r4.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

     label06:
        $r5 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("afmt");

     label07:
        return $r5;

     label08:
        $r4 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("tmpls");

        $r3 = virtualinvoke $r4.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(0);

     label09:
        goto label06;

     label10:
        r1 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r6;

        catch org.json.JSONException from label01 to label02 with label10;
        catch org.json.JSONException from label03 to label04 with label10;
        catch org.json.JSONException from label05 to label06 with label10;
        catch org.json.JSONException from label06 to label07 with label10;
        catch org.json.JSONException from label08 to label09 with label10;
    }
    protected int getContentViewAttr(int)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        int $i0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $i0 := @parameter0: int;

        return 2130903144;
    }
    protected int getDefaultEase()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        com.ichi2.libanki.Collection $r1;
        com.ichi2.libanki.Sched $r2;
        com.ichi2.libanki.Card $r3;
        int $i0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Collection getCol()>();

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $i0 = virtualinvoke $r2.<com.ichi2.libanki.Sched: int answerButtons(com.ichi2.libanki.Card)>($r3);

        if $i0 != 4 goto label1;

        return 3;

     label1:
        return 2;
    }
    public android.support.v4.view.GestureDetectorCompat getGestureDetector()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        android.support.v4.view.GestureDetectorCompat r1;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.support.v4.view.GestureDetectorCompat gestureDetector>;

        return r1;
    }
    protected long getParentDid()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        org.json.JSONException r1;
        com.ichi2.libanki.Collection $r2;
        com.ichi2.libanki.Decks $r3;
        org.json.JSONObject $r4;
        long $l0;
        java.lang.RuntimeException $r5;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

     label1:
        $r2 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Collection getCol()>();

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

        $r4 = virtualinvoke $r3.<com.ichi2.libanki.Decks: org.json.JSONObject current()>();

        $l0 = virtualinvoke $r4.<org.json.JSONObject: long getLong(java.lang.String)>("id");

     label2:
        return $l0;

     label3:
        r1 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch org.json.JSONException from label1 to label2 with label3;
    }
    protected void hideEaseButtons()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        boolean $z0;
        android.widget.LinearLayout $r1;
        android.widget.EditText $r2;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        virtualinvoke $r1.<android.widget.LinearLayout: void setVisibility(int)>(8);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r1.<android.widget.LinearLayout: void setVisibility(int)>(8);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r1.<android.widget.LinearLayout: void setVisibility(int)>(8);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        virtualinvoke $r1.<android.widget.LinearLayout: void setVisibility(int)>(8);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mFlipCardLayout>;

        virtualinvoke $r1.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $z0 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean typeAnswer()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        virtualinvoke $r2.<android.widget.EditText: boolean requestFocus()>();

        return;

     label1:
        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mFlipCardLayout>;

        virtualinvoke $r1.<android.widget.LinearLayout: boolean requestFocus()>();

        return;
    }
    protected void initControls()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        boolean $z0;
        byte $b0;
        android.widget.FrameLayout $r1;
        android.widget.TextView $r2;
        android.widget.LinearLayout $r3;
        android.widget.EditText $r4;
        com.ichi2.anki.AbstractFlashcardViewer$16 $r5;
        com.ichi2.anki.AbstractFlashcardViewer$17 $r6;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $b0 = 0;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mCardFrame>;

        virtualinvoke $r1.<android.widget.FrameLayout: void setVisibility(int)>(0);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowRemainingCardCount>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarNew>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarLearn>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarReview>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(0);

     label1:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mChosenAnswer>;

        virtualinvoke $r2.<android.widget.TextView: void setVisibility(int)>(0);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mFlipCardLayout>;

        virtualinvoke $r3.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        $z0 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean typeAnswer()>();

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke $r4.<android.widget.EditText: void setVisibility(int)>($b0);

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        $r5 = new com.ichi2.anki.AbstractFlashcardViewer$16;

        specialinvoke $r5.<com.ichi2.anki.AbstractFlashcardViewer$16: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        virtualinvoke $r4.<android.widget.EditText: void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)>($r5);

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        $r6 = new com.ichi2.anki.AbstractFlashcardViewer$17;

        specialinvoke $r6.<com.ichi2.anki.AbstractFlashcardViewer$17: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        virtualinvoke $r4.<android.widget.EditText: void setOnKeyListener(android.view.View$OnKeyListener)>($r6);

        return;

     label3:
        $b0 = 8;

        goto label2;
    }
    protected void initLayout()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        android.view.View $r1;
        android.widget.FrameLayout $r2;
        android.widget.RelativeLayout $r3;
        android.view.View$OnTouchListener $r4;
        boolean $z0;
        android.view.View$OnLongClickListener $r5;
        java.lang.Object $r6;
        android.text.ClipboardManager $r7;
        android.support.v4.view.GestureDetectorCompat $r8;
        com.ichi2.anki.AbstractFlashcardViewer$MyGestureDetector $r9;
        android.widget.TextView $r10;
        android.graphics.Typeface $r11;
        android.widget.LinearLayout $r12;
        android.view.View$OnClickListener $r13;
        android.widget.Button $r14;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r15;
        android.widget.Chronometer $r16;
        android.widget.EditText $r17;
        com.ichi2.anki.AbstractFlashcardViewer$14 $r18;
        android.content.SharedPreferences $r19;
        java.lang.String $r20;
        android.widget.RelativeLayout$LayoutParams r21, r22;
        byte $b2;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755150);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mMainLayout> = $r1;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755283);

        $r2 = (android.widget.FrameLayout) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mCardContainer> = $r2;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755289);

        $r3 = (android.widget.RelativeLayout) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.RelativeLayout mTopBarLayout> = $r3;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755284);

        $r2 = (android.widget.FrameLayout) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mCardFrame> = $r2;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755285);

        $r2 = (android.widget.FrameLayout) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mTouchLayer> = $r2;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mTouchLayer>;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View$OnTouchListener mGestureListener>;

        virtualinvoke $r2.<android.widget.FrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)>($r4);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDisableClipboard>;

        if $z0 != 0 goto label01;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mLongClickWorkaround>;

        if $z0 == 0 goto label01;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mTouchLayer>;

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View$OnLongClickListener mLongClickListener>;

        virtualinvoke $r2.<android.widget.FrameLayout: void setOnLongClickListener(android.view.View$OnLongClickListener)>($r5);

     label01:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDisableClipboard>;

        if $z0 != 0 goto label02;

        $r6 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        $r7 = (android.text.ClipboardManager) $r6;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.text.ClipboardManager mClipboard> = $r7;

     label02:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mCardFrame>;

        virtualinvoke $r2.<android.widget.FrameLayout: void removeAllViews()>();

        $r8 = new android.support.v4.view.GestureDetectorCompat;

        $r9 = new com.ichi2.anki.AbstractFlashcardViewer$MyGestureDetector;

        specialinvoke $r9.<com.ichi2.anki.AbstractFlashcardViewer$MyGestureDetector: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        specialinvoke $r8.<android.support.v4.view.GestureDetectorCompat: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>(r0, $r9);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.support.v4.view.GestureDetectorCompat gestureDetector> = $r8;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755273);

        $r10 = (android.widget.TextView) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase1> = $r10;

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase1>;

        $r11 = staticinvoke <com.afollestad.materialdialogs.util.TypefaceHelper: android.graphics.Typeface get(android.content.Context,java.lang.String)>(r0, "Roboto-Medium");

        virtualinvoke $r10.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r11);

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755271);

        $r12 = (android.widget.LinearLayout) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout> = $r12;

        $r12 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        $r13 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View$OnClickListener mSelectEaseHandler>;

        virtualinvoke $r12.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>($r13);

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755276);

        $r10 = (android.widget.TextView) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase2> = $r10;

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase2>;

        $r11 = staticinvoke <com.afollestad.materialdialogs.util.TypefaceHelper: android.graphics.Typeface get(android.content.Context,java.lang.String)>(r0, "Roboto-Medium");

        virtualinvoke $r10.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r11);

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755274);

        $r12 = (android.widget.LinearLayout) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout> = $r12;

        $r12 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        $r13 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View$OnClickListener mSelectEaseHandler>;

        virtualinvoke $r12.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>($r13);

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755279);

        $r10 = (android.widget.TextView) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase3> = $r10;

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase3>;

        $r11 = staticinvoke <com.afollestad.materialdialogs.util.TypefaceHelper: android.graphics.Typeface get(android.content.Context,java.lang.String)>(r0, "Roboto-Medium");

        virtualinvoke $r10.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r11);

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755277);

        $r12 = (android.widget.LinearLayout) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout> = $r12;

        $r12 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        $r13 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View$OnClickListener mSelectEaseHandler>;

        virtualinvoke $r12.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>($r13);

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755282);

        $r10 = (android.widget.TextView) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase4> = $r10;

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase4>;

        $r11 = staticinvoke <com.afollestad.materialdialogs.util.TypefaceHelper: android.graphics.Typeface get(android.content.Context,java.lang.String)>(r0, "Roboto-Medium");

        virtualinvoke $r10.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r11);

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755280);

        $r12 = (android.widget.LinearLayout) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout> = $r12;

        $r12 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        $r13 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View$OnClickListener mSelectEaseHandler>;

        virtualinvoke $r12.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>($r13);

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755272);

        $r10 = (android.widget.TextView) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext1> = $r10;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755275);

        $r10 = (android.widget.TextView) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext2> = $r10;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755278);

        $r10 = (android.widget.TextView) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext3> = $r10;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755281);

        $r10 = (android.widget.TextView) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext4> = $r10;

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext1>;

        $r11 = staticinvoke <com.afollestad.materialdialogs.util.TypefaceHelper: android.graphics.Typeface get(android.content.Context,java.lang.String)>(r0, "Roboto-Regular");

        virtualinvoke $r10.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r11);

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext2>;

        $r11 = staticinvoke <com.afollestad.materialdialogs.util.TypefaceHelper: android.graphics.Typeface get(android.content.Context,java.lang.String)>(r0, "Roboto-Regular");

        virtualinvoke $r10.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r11);

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext3>;

        $r11 = staticinvoke <com.afollestad.materialdialogs.util.TypefaceHelper: android.graphics.Typeface get(android.content.Context,java.lang.String)>(r0, "Roboto-Regular");

        virtualinvoke $r10.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r11);

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext4>;

        $r11 = staticinvoke <com.afollestad.materialdialogs.util.TypefaceHelper: android.graphics.Typeface get(android.content.Context,java.lang.String)>(r0, "Roboto-Regular");

        virtualinvoke $r10.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r11);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowNextReviewTime>;

        if $z0 != 0 goto label03;

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext1>;

        virtualinvoke $r10.<android.widget.TextView: void setVisibility(int)>(8);

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext2>;

        virtualinvoke $r10.<android.widget.TextView: void setVisibility(int)>(8);

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext3>;

        virtualinvoke $r10.<android.widget.TextView: void setVisibility(int)>(8);

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext4>;

        virtualinvoke $r10.<android.widget.TextView: void setVisibility(int)>(8);

     label03:
        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755270);

        $r14 = (android.widget.Button) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Button mFlipCard> = $r14;

        $r14 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Button mFlipCard>;

        $r11 = staticinvoke <com.afollestad.materialdialogs.util.TypefaceHelper: android.graphics.Typeface get(android.content.Context,java.lang.String)>(r0, "Roboto-Medium");

        virtualinvoke $r14.<android.widget.Button: void setTypeface(android.graphics.Typeface)>($r11);

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755269);

        $r12 = (android.widget.LinearLayout) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mFlipCardLayout> = $r12;

        $r12 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mFlipCardLayout>;

        $r13 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View$OnClickListener mFlipCardListener>;

        virtualinvoke $r12.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>($r13);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mButtonHeightSet>;

        if $z0 != 0 goto label04;

        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mRelativeButtonSize>;

        if $i0 == 100 goto label04;

        $r12 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mFlipCardLayout>;

        $r15 = virtualinvoke $r12.<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r15.<android.view.ViewGroup$LayoutParams: int height>;

        $i1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mRelativeButtonSize>;

        $i0 = $i0 * $i1;

        $i0 = $i0 / 100;

        $r15.<android.view.ViewGroup$LayoutParams: int height> = $i0;

        $r12 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        $r15 = virtualinvoke $r12.<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r15.<android.view.ViewGroup$LayoutParams: int height>;

        $i1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mRelativeButtonSize>;

        $i0 = $i0 * $i1;

        $i0 = $i0 / 100;

        $r15.<android.view.ViewGroup$LayoutParams: int height> = $i0;

        $r12 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        $r15 = virtualinvoke $r12.<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r15.<android.view.ViewGroup$LayoutParams: int height>;

        $i1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mRelativeButtonSize>;

        $i0 = $i0 * $i1;

        $i0 = $i0 / 100;

        $r15.<android.view.ViewGroup$LayoutParams: int height> = $i0;

        $r12 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        $r15 = virtualinvoke $r12.<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r15.<android.view.ViewGroup$LayoutParams: int height>;

        $i1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mRelativeButtonSize>;

        $i0 = $i0 * $i1;

        $i0 = $i0 / 100;

        $r15.<android.view.ViewGroup$LayoutParams: int height> = $i0;

        $r12 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        $r15 = virtualinvoke $r12.<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r15.<android.view.ViewGroup$LayoutParams: int height>;

        $i1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mRelativeButtonSize>;

        $i0 = $i0 * $i1;

        $i0 = $i0 / 100;

        $r15.<android.view.ViewGroup$LayoutParams: int height> = $i0;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mButtonHeightSet> = 1;

     label04:
        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755290);

        $r10 = (android.widget.TextView) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarNew> = $r10;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755291);

        $r10 = (android.widget.TextView) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarLearn> = $r10;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755292);

        $r10 = (android.widget.TextView) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarReview> = $r10;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowRemainingCardCount>;

        if $z0 != 0 goto label05;

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarNew>;

        virtualinvoke $r10.<android.widget.TextView: void setVisibility(int)>(8);

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarLearn>;

        virtualinvoke $r10.<android.widget.TextView: void setVisibility(int)>(8);

        $r10 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarReview>;

        virtualinvoke $r10.<android.widget.TextView: void setVisibility(int)>(8);

     label05:
        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755294);

        $r16 = (android.widget.Chronometer) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer> = $r16;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755293);

        $r10 = (android.widget.TextView) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mChosenAnswer> = $r10;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755267);

        $r17 = (android.widget.EditText) $r1;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField> = $r17;

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755287);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mLookUpIcon> = $r1;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mLookUpIcon>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(8);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View mLookUpIcon>;

        $r18 = new com.ichi2.anki.AbstractFlashcardViewer$14;

        specialinvoke $r18.<com.ichi2.anki.AbstractFlashcardViewer$14: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        virtualinvoke $r1.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r18);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void initControls()>();

        $r19 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>(r0);

        $r20 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String getString(int)>(2131231526);

        $r20 = interfaceinvoke $r19.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r20, "bottom");

        $r1 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(2131755266);

        $r12 = (android.widget.LinearLayout) $r1;

        $r15 = virtualinvoke $r12.<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r21 = (android.widget.RelativeLayout$LayoutParams) $r15;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mCardContainer>;

        $r15 = virtualinvoke $r2.<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r22 = (android.widget.RelativeLayout$LayoutParams) $r15;

        $b2 = -1;

        $i0 = virtualinvoke $r20.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1383228885: goto label09;
            case 115029: goto label08;
            default: goto label06;
        };

     label06:
        lookupswitch($b2)
        {
            case 0: goto label10;
            case 1: goto label11;
            default: goto label07;
        };

     label07:
        virtualinvoke $r12.<android.widget.LinearLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r21);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mCardContainer>;

        virtualinvoke $r2.<android.widget.FrameLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r22);

        return;

     label08:
        $z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("top");

        if $z0 == 0 goto label06;

        $b2 = 0;

        goto label06;

     label09:
        $z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("bottom");

        if $z0 == 0 goto label06;

        $b2 = 1;

        goto label06;

     label10:
        virtualinvoke r22.<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>(3, 2131755266);

        virtualinvoke r21.<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>(3, 2131755289);

        $r17 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        virtualinvoke $r12.<android.widget.LinearLayout: void removeView(android.view.View)>($r17);

        $r17 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        virtualinvoke $r12.<android.widget.LinearLayout: void addView(android.view.View,int)>($r17, 1);

        goto label07;

     label11:
        virtualinvoke r22.<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>(2, 2131755266);

        virtualinvoke r22.<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>(3, 2131755289);

        virtualinvoke r21.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(12);

        goto label07;
    }
    protected void initTimer()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        android.util.TypedValue r1;
        com.ichi2.libanki.Card $r2;
        boolean $z0;
        android.widget.Chronometer $r3;
        int $i0;
        android.content.res.Resources$Theme $r4;
        long $l1;
        com.ichi2.anki.AbstractFlashcardViewer$20 $r5;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        r1 = new android.util.TypedValue;

        specialinvoke r1.<android.util.TypedValue: void <init>()>();

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $z0 = virtualinvoke $r2.<com.ichi2.libanki.Card: boolean showTimer()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowTimer> = $z0;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowTimer>;

        if $z0 == 0 goto label2;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        $i0 = virtualinvoke $r3.<android.widget.Chronometer: int getVisibility()>();

        if $i0 != 4 goto label2;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        virtualinvoke $r3.<android.widget.Chronometer: void setVisibility(int)>(0);

     label1:
        $r4 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r4.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842904, r1, 1);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        $i0 = r1.<android.util.TypedValue: int data>;

        virtualinvoke $r3.<android.widget.Chronometer: void setTextColor(int)>($i0);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke $r3.<android.widget.Chronometer: void setBase(long)>($l1);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        virtualinvoke $r3.<android.widget.Chronometer: void start()>();

        $r4 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r4.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(2130772005, r1, 1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $i0 = virtualinvoke $r2.<com.ichi2.libanki.Card: int timeLimit()>();

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        $r5 = new com.ichi2.anki.AbstractFlashcardViewer$20;

        specialinvoke $r5.<com.ichi2.anki.AbstractFlashcardViewer$20: void <init>(com.ichi2.anki.AbstractFlashcardViewer,int,android.util.TypedValue)>(r0, $i0, r1);

        virtualinvoke $r3.<android.widget.Chronometer: void setOnChronometerTickListener(android.widget.Chronometer$OnChronometerTickListener)>($r5);

        return;

     label2:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowTimer>;

        if $z0 != 0 goto label1;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        $i0 = virtualinvoke $r3.<android.widget.Chronometer: int getVisibility()>();

        if $i0 == 4 goto label1;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.Chronometer mCardTimer>;

        virtualinvoke $r3.<android.widget.Chronometer: void setVisibility(int)>(4);

        goto label1;
    }
    protected void lookUpOrSelectText()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean clipboardHasText()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clipboard has text = ");

        $z0 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean clipboardHasText()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>($r2, $r3);

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean lookUp()>();

        return;

     label1:
        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void selectAndCopyText()>();

        return;
    }
    protected void onActivityResult(int, int, android.content.Intent)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        int $i0, $i1;
        android.content.Intent $r1;
        boolean $z0;
        com.ichi2.libanki.Collection $r2;
        com.ichi2.libanki.Sched $r3;
        com.ichi2.async.DeckTask$TaskListener $r4;
        com.ichi2.async.DeckTask$TaskData[] $r5;
        com.ichi2.async.DeckTask$TaskData $r6;
        java.lang.Object[] $r7;
        com.ichi2.libanki.Card $r8;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.content.Intent;

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onActivityResult(int,int,android.content.Intent)>($i0, $i1, $r1);

        if $i1 != 203 goto label1;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void closeReviewer(int,boolean)>(203, 0);

     label1:
        if $i1 != 202 goto label2;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void finishNoStorageAvailable()>();

     label2:
        if $r1 == null goto label3;

        $z0 = virtualinvoke $r1.<android.content.Intent: boolean hasExtra(java.lang.String)>("reloadRequired");

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Collection getCol()>();

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        virtualinvoke $r3.<com.ichi2.libanki.Sched: void reset()>();

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.async.DeckTask$TaskListener mAnswerCardHandler>;

        $r5 = newarray (com.ichi2.async.DeckTask$TaskData)[1];

        $r6 = new com.ichi2.async.DeckTask$TaskData;

        specialinvoke $r6.<com.ichi2.async.DeckTask$TaskData: void <init>(com.ichi2.libanki.Card,int)>(null, 0);

        $r5[0] = $r6;

        staticinvoke <com.ichi2.async.DeckTask: com.ichi2.async.DeckTask launchDeckTask(int,com.ichi2.async.DeckTask$Listener,com.ichi2.async.DeckTask$TaskData[])>(3, $r4, $r5);

     label3:
        if $i0 != 0 goto label7;

        if $i1 != -1 goto label5;

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("AbstractFlashcardViewer:: Saving card...", $r7);

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.async.DeckTask$TaskListener mUpdateCardHandler>;

        $r5 = newarray (com.ichi2.async.DeckTask$TaskData)[1];

        $r6 = new com.ichi2.async.DeckTask$TaskData;

        $r8 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        specialinvoke $r6.<com.ichi2.async.DeckTask$TaskData: void <init>(com.ichi2.libanki.Card,boolean)>($r8, 1);

        $r5[0] = $r6;

        staticinvoke <com.ichi2.async.DeckTask: com.ichi2.async.DeckTask launchDeckTask(int,com.ichi2.async.DeckTask$Listener,com.ichi2.async.DeckTask$TaskData[])>(7, $r4, $r5);

     label4:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDisableClipboard>;

        if $z0 != 0 goto label8;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void clipboardSetText(java.lang.CharSequence)>("");

        return;

     label5:
        if $i1 != 0 goto label4;

        if $r1 == null goto label6;

        $z0 = virtualinvoke $r1.<android.content.Intent: boolean hasExtra(java.lang.String)>("reloadRequired");

        if $z0 != 0 goto label4;

     label6:
        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void fillFlashcard()>();

        goto label4;

     label7:
        if $i0 != 1 goto label4;

        if $i1 != -1 goto label4;

        $r2 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Collection getCol()>();

        $r3 = virtualinvoke $r2.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        virtualinvoke $r3.<com.ichi2.libanki.Sched: void reset()>();

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.async.DeckTask$TaskListener mAnswerCardHandler>;

        $r5 = newarray (com.ichi2.async.DeckTask$TaskData)[1];

        $r6 = new com.ichi2.async.DeckTask$TaskData;

        specialinvoke $r6.<com.ichi2.async.DeckTask$TaskData: void <init>(com.ichi2.libanki.Card,int)>(null, 0);

        $r5[0] = $r6;

        staticinvoke <com.ichi2.async.DeckTask: com.ichi2.async.DeckTask launchDeckTask(int,com.ichi2.async.DeckTask$Listener,com.ichi2.async.DeckTask$TaskData[])>(3, $r4, $r5);

        goto label4;

     label8:
        return;
    }
    public void onBackPressed()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.Object[] $r1;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean isDrawerOpen()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onBackPressed()>();

        return;

     label1:
        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Back key pressed", $r1);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void closeReviewer(int,boolean)>(50, 0);

        return;
    }
    protected void onCollectionLoaded(com.ichi2.libanki.Collection)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        com.ichi2.libanki.Collection $r1;
        java.io.IOException r2;
        com.ichi2.libanki.Sched $r3;
        com.ichi2.libanki.Media $r4;
        java.lang.String $r5;
        boolean $z0;
        android.content.res.AssetManager $r6;
        java.io.InputStream $r7;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: com.ichi2.libanki.Collection;

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onCollectionLoaded(com.ichi2.libanki.Collection)>($r1);

        $r3 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sched mSched> = $r3;

        $r4 = virtualinvoke $r1.<com.ichi2.libanki.Collection: com.ichi2.libanki.Media getMedia()>();

        $r5 = virtualinvoke $r4.<com.ichi2.libanki.Media: java.lang.String dir()>();

        $r5 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String getBaseUrl(java.lang.String)>($r5);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mBaseUrl> = $r5;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void registerExternalStorageListener()>();

        $z0 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean shouldUseQuickUpdate()>();

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mUseQuickUpdate> = $z0;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void initLayout()>();

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void setTitle()>();

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDisableClipboard>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void clipboardSetText(java.lang.CharSequence)>("");

     label1:
        $r6 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.res.AssetManager getAssets()>();

        $r7 = virtualinvoke $r6.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>("card_template.html");

        $r5 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String convertStreamToString(java.io.InputStream)>($r7);

     label2:
        r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.String mCardTemplate> = $r5;

     label3:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mSpeakText>;

        if $z0 == 0 goto label4;

        staticinvoke <com.ichi2.anki.ReadText: void initializeTts(android.content.Context)>(r0);

     label4:
        staticinvoke <com.ichi2.anki.Lookup: boolean initialize(android.content.Context)>(r0);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void updateScreenCounts()>();

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void supportInvalidateOptionsMenu()>();

        return;

     label5:
        r2 := @caughtexception;

        virtualinvoke r2.<java.io.IOException: void printStackTrace()>();

        goto label3;

        catch java.io.IOException from label1 to label2 with label5;
    }
    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        android.content.res.Configuration $r1;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onConfigurationChanged(android.content.res.Configuration)>($r1);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void refreshActionBar()>();

        return;
    }
    protected void onCreate(android.os.Bundle)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        android.os.Bundle $r1;
        java.lang.Object[] $r2;
        com.ichi2.anki.reviewer.ReviewerExtRegistry $r3;
        android.content.Context $r4;
        int $i0;
        android.view.View $r5;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("onCreate()", $r2);

        $r3 = new com.ichi2.anki.reviewer.ReviewerExtRegistry;

        $r4 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.Context getBaseContext()>();

        specialinvoke $r3.<com.ichi2.anki.reviewer.ReviewerExtRegistry: void <init>(android.content.Context)>($r4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.anki.reviewer.ReviewerExtRegistry mExtensions> = $r3;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.SharedPreferences restorePreferences()>();

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onCreate(android.os.Bundle)>($r1);

        $i0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: int mPrefFullscreenReview>;

        $i0 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: int getContentViewAttr(int)>($i0);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void setContentView(int)>($i0);

        $r5 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.View findViewById(int)>(16908290);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void initNavigationDrawer(android.view.View)>($r5);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void startLoadingCollection()>();

        return;
    }
    protected void onDestroy()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.Object[] $r1;
        boolean $z0;
        android.content.BroadcastReceiver $r2;
        android.widget.FrameLayout $r3;
        android.webkit.WebView $r4;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onDestroy()>();

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("onDestroy()", $r1);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mSpeakText>;

        if $z0 == 0 goto label1;

        staticinvoke <com.ichi2.anki.ReadText: void releaseTts()>();

     label1:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.BroadcastReceiver mUnmountReceiver>;

        if $r2 == null goto label2;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.BroadcastReceiver mUnmountReceiver>;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

     label2:
        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.FrameLayout mCardFrame>;

        virtualinvoke $r3.<android.widget.FrameLayout: void removeAllViews()>();

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void destroyWebView(android.webkit.WebView)>($r4);

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mNextCard>;

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void destroyWebView(android.webkit.WebView)>($r4);

        return;
    }
    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        int $i0;
        android.view.KeyEvent $r1;
        boolean $z0;
        android.webkit.WebView $r2;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        if $i0 != 92 goto label1;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        virtualinvoke $r2.<android.webkit.WebView: boolean pageUp(boolean)>(0);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDoubleScrolling>;

        if $z0 == 0 goto label5;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        virtualinvoke $r2.<android.webkit.WebView: boolean pageUp(boolean)>(0);

        return 1;

     label1:
        if $i0 != 93 goto label2;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        virtualinvoke $r2.<android.webkit.WebView: boolean pageDown(boolean)>(0);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDoubleScrolling>;

        if $z0 == 0 goto label5;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        virtualinvoke $r2.<android.webkit.WebView: boolean pageDown(boolean)>(0);

        return 1;

     label2:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mScrollingButtons>;

        if $z0 == 0 goto label3;

        if $i0 != 94 goto label3;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        virtualinvoke $r2.<android.webkit.WebView: boolean pageUp(boolean)>(0);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDoubleScrolling>;

        if $z0 == 0 goto label5;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        virtualinvoke $r2.<android.webkit.WebView: boolean pageUp(boolean)>(0);

        return 1;

     label3:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mScrollingButtons>;

        if $z0 == 0 goto label4;

        if $i0 != 95 goto label4;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        virtualinvoke $r2.<android.webkit.WebView: boolean pageDown(boolean)>(0);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDoubleScrolling>;

        if $z0 == 0 goto label5;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.webkit.WebView mCard>;

        virtualinvoke $r2.<android.webkit.WebView: boolean pageDown(boolean)>(0);

        return 1;

     label4:
        $z0 = specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;

     label5:
        return 1;
    }
    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        int $i0;
        android.view.KeyEvent $r1;
        android.widget.EditText $r2;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        if $r2 == null goto label2;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.EditText mAnswerField>;

        $z0 = virtualinvoke $r2.<android.widget.EditText: boolean isFocused()>();

        if $z0 != 0 goto label2;

        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 != 0 goto label2;

        if $i0 == 62 goto label1;

        if $i0 == 66 goto label1;

        if $i0 != 160 goto label2;

     label1:
        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void displayCardAnswer()>();

        return 1;

     label2:
        $z0 = specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: boolean onKeyUp(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;
    }
    protected void onMark(com.ichi2.libanki.Card)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        com.ichi2.libanki.Card $r1;
        com.ichi2.libanki.Note $r2;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: com.ichi2.libanki.Card;

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Card: com.ichi2.libanki.Note note()>();

        $z0 = virtualinvoke $r2.<com.ichi2.libanki.Note: boolean hasTag(java.lang.String)>("marked");

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<com.ichi2.libanki.Note: void delTag(java.lang.String)>("marked");

     label1:
        virtualinvoke $r2.<com.ichi2.libanki.Note: void flush()>();

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void refreshActionBar()>();

        return;

     label2:
        virtualinvoke $r2.<com.ichi2.libanki.Note: void addTag(java.lang.String)>("marked");

        goto label1;
    }
    protected void onPause()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        com.ichi2.compat.Compat $r1;
        java.lang.Object[] $r2;
        android.os.Handler $r3;
        java.lang.Runnable $r4;
        com.ichi2.libanki.Sound $r5;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onPause()>();

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void d(java.lang.String,java.lang.Object[])>("onPause()", $r2);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mTimeoutHandler>;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable mShowAnswerTask>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler mTimeoutHandler>;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable mShowQuestionTask>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler longClickHandler>;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable longClickTestRunnable>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.os.Handler longClickHandler>;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.lang.Runnable startLongClickAction>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void pauseTimer()>();

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        virtualinvoke $r5.<com.ichi2.libanki.Sound: void stopSounds()>();

        $r1 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        interfaceinvoke $r1.<com.ichi2.compat.Compat: void flushWebViewCookies()>();

        return;
    }
    protected void onResume()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.ref.WeakReference $r1;
        com.ichi2.libanki.Sound $r2;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        specialinvoke r0.<com.ichi2.anki.NavigationDrawerActivity: void onResume()>();

        specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void resumeTimer()>();

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        $r1 = new java.lang.ref.WeakReference;

        specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        virtualinvoke $r2.<com.ichi2.libanki.Sound: void setContext(java.lang.ref.WeakReference)>($r1);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void setTitle()>();

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void updateScreenCounts()>();

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void selectNavigationItem(int)>(-1);

        return;
    }
    protected void playSounds(boolean)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        boolean $z0, $z1, $z2;
        org.json.JSONObject $r1;
        com.ichi2.libanki.Sound $r2;
        long $l0;
        com.ichi2.libanki.Card $r3;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: org.json.JSONObject getConfigForCurrentCard()>();

        $z1 = virtualinvoke $r1.<org.json.JSONObject: boolean optBoolean(java.lang.String,boolean)>("replayq", 1);

        $r1 = specialinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: org.json.JSONObject getConfigForCurrentCard()>();

        $z2 = virtualinvoke $r1.<org.json.JSONObject: boolean optBoolean(java.lang.String,boolean)>("autoplay", 0);

        if $z2 != 0 goto label01;

        if $z0 == 0 goto label12;

     label01:
        $z2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mSpeakText>;

        if $z2 == 0 goto label05;

        $z2 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z2 == 0 goto label02;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        $z2 = virtualinvoke $r2.<com.ichi2.libanki.Sound: boolean hasAnswer()>();

        if $z2 != 0 goto label05;

     label02:
        $z2 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z2 != 0 goto label03;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        $z2 = virtualinvoke $r2.<com.ichi2.libanki.Sound: boolean hasQuestion()>();

        if $z2 != 0 goto label05;

     label03:
        $z2 = 1;

     label04:
        if $z2 != 0 goto label08;

        if $z0 == 0 goto label06;

        if $z1 == 0 goto label06;

        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 == 0 goto label06;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        virtualinvoke $r2.<com.ichi2.libanki.Sound: void playSounds(int)>(2);

        return;

     label05:
        $z2 = 0;

        goto label04;

     label06:
        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 == 0 goto label07;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        virtualinvoke $r2.<com.ichi2.libanki.Sound: void playSounds(int)>(1);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefUseTimer>;

        if $z0 == 0 goto label12;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        $l0 = virtualinvoke $r2.<com.ichi2.libanki.Sound: long getSoundsLength(int)>(1);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: long mUseTimerDynamicMS> = $l0;

        return;

     label07:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        virtualinvoke $r2.<com.ichi2.libanki.Sound: void playSounds(int)>(0);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefUseTimer>;

        if $z0 == 0 goto label12;

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sound mSoundPlayer>;

        $l0 = virtualinvoke $r2.<com.ichi2.libanki.Sound: long getSoundsLength(int)>(2);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: long mUseTimerDynamicMS> = $l0;

        return;

     label08:
        $z2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mTtsInitialized>;

        if $z2 == 0 goto label11;

        $z2 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z2 == 0 goto label09;

        if $z0 == 0 goto label10;

        if $z1 == 0 goto label10;

     label09:
        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        staticinvoke <com.ichi2.anki.AbstractFlashcardViewer: void readCardText(com.ichi2.libanki.Card,int)>($r3, 0);

     label10:
        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 == 0 goto label12;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        staticinvoke <com.ichi2.anki.AbstractFlashcardViewer: void readCardText(com.ichi2.libanki.Card,int)>($r3, 1);

        return;

     label11:
        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mReplayOnTtsInit> = 1;

     label12:
        return;
    }
    public void playVideo(java.lang.String)
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.String $r1;
        android.content.Intent r2;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r1 := @parameter0: java.lang.String;

        r2 = new android.content.Intent;

        specialinvoke r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/ichi2/anki/VideoPlayer;");

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("path", $r1);

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void startActivityWithoutAnimation(android.content.Intent)>(r2);

        return;
    }
    protected void refreshActionBar()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void supportInvalidateOptionsMenu()>();

        return;
    }
    protected android.content.SharedPreferences restorePreferences()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        org.json.JSONException r1;
        boolean $z0, $z1;
        android.content.Context $r2;
        android.content.SharedPreferences $r3;
        int $i0;
        java.lang.String $r4;
        java.util.Map $r5;
        java.lang.Integer $r6, $r7;
        android.view.Window $r8;
        com.ichi2.libanki.Collection $r9;
        org.json.JSONObject $r10;
        java.lang.RuntimeException $r11;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 = 1;

        $r2 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.Context getBaseContext()>();

        $r3 = staticinvoke <com.ichi2.anki.AnkiDroidApp: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r2);

        $z1 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("hideDueCount", 0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefHideDueCount> = $z1;

        $z1 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("showETA", 1);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefShowETA> = $z1;

        $z1 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("useInputTag", 0);

        if $z1 == 0 goto label09;

        $i0 = staticinvoke <com.ichi2.compat.CompatHelper: int getSdkVersion()>();

        if $i0 < 15 goto label09;

        $z1 = 1;

     label01:
        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mUseInputTag> = $z1;

        $z1 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("writeAnswersDisable", 0);

        if $z1 != 0 goto label10;

        $z1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mUseInputTag>;

        if $z1 != 0 goto label10;

     label02:
        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowTypeAnswerField> = $z0;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("dictionary", "0");

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("0");

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDisableClipboard> = $z0;

        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("textSelectionLongclickWorkaround", 0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mLongClickWorkaround> = $z0;

        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("invertedColors", 0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mNightMode> = $z0;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("fullscreenMode", "0");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mPrefFullscreenReview> = $i0;

        $i0 = interfaceinvoke $r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("cardZoom", 100);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mCardZoom> = $i0;

        $i0 = interfaceinvoke $r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("imageZoom", 100);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mImageZoom> = $i0;

        $i0 = interfaceinvoke $r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("answerButtonSize", 100);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mRelativeButtonSize> = $i0;

        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("inputWorkaround", 0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mInputWorkaround> = $z0;

        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("tts", 0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mSpeakText> = $z0;

        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("safeDisplay", 0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefSafeDisplay> = $z0;

        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("timeoutAnswer", 0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefUseTimer> = $z0;

        $i0 = interfaceinvoke $r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("timeoutAnswerSeconds", 20);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mWaitAnswerSecond> = $i0;

        $i0 = interfaceinvoke $r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("timeoutQuestionSeconds", 60);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mWaitQuestionSecond> = $i0;

        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("scrolling_buttons", 0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mScrollingButtons> = $z0;

        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("double_scrolling", 0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mDoubleScrolling> = $z0;

        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("centerVertically", 0);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefCenterVertically> = $z0;

        $z0 = staticinvoke <com.ichi2.anki.AnkiDroidApp: boolean initiateGestures(android.content.SharedPreferences)>($r3);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mGesturesEnabled> = $z0;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mGesturesEnabled>;

        if $z0 == 0 goto label03;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gestureSwipeUp", "9");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureSwipeUp> = $i0;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gestureSwipeDown", "0");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureSwipeDown> = $i0;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gestureSwipeLeft", "8");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureSwipeLeft> = $i0;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gestureSwipeRight", "17");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureSwipeRight> = $i0;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gestureDoubleTap", "7");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureDoubleTap> = $i0;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gestureTapLeft", "3");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureTapLeft> = $i0;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gestureTapRight", "6");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureTapRight> = $i0;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gestureTapTop", "12");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureTapTop> = $i0;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gestureTapBottom", "2");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureTapBottom> = $i0;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gestureLongclick", "11");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureLongclick> = $i0;

     label03:
        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755360);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("customButtonUndo", "2");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755391);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("customButtonMarkCard", "2");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755392);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("customButtonEditCard", "1");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755393);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("customButtonAddCard", "3");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755394);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("customButtonReplay", "1");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755389);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("customButtonClearWhiteboard", "1");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755390);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("customButtonShowHideWhiteboard", "2");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755400);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("customButtonSelectTts", "0");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755399);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("customButtonDeckOptions", "0");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755395);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("customButtonBury", "0");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755396);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("customButtonSuspend", "0");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: java.util.Map mCustomButtons>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131755358);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("customButtonDelete", "0");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mLongClickWorkaround>;

        if $z0 == 0 goto label04;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: int mGestureLongclick> = 11;

     label04:
        $z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("keepScreenOn", 0);

        if $z0 == 0 goto label05;

        $r8 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.view.Window getWindow()>();

        virtualinvoke $r8.<android.view.Window: void addFlags(int)>(128);

     label05:
        $r9 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Collection getCol()>();

        $r10 = virtualinvoke $r9.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

        $z0 = virtualinvoke $r10.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("estTimes");

     label06:
        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowNextReviewTime> = $z0;

     label07:
        $r9 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Collection getCol()>();

        $r10 = virtualinvoke $r9.<com.ichi2.libanki.Collection: org.json.JSONObject getConf()>();

        $z0 = virtualinvoke $r10.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("dueCounts");

     label08:
        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowRemainingCardCount> = $z0;

        return $r3;

     label09:
        $z1 = 0;

        goto label01;

     label10:
        $z0 = 0;

        goto label02;

     label11:
        r1 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>()>();

        throw $r11;

        catch org.json.JSONException from label05 to label06 with label11;
        catch org.json.JSONException from label07 to label08 with label11;
    }
protected abstract void setTitle() { 
// no body
} 
    protected void showDeleteNoteDialog()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.Object[] $r1;
        android.content.res.Resources $r2;
        com.afollestad.materialdialogs.MaterialDialog$Builder $r3;
        java.lang.String $r4, $r6;
        com.ichi2.libanki.Card $r5;
        com.ichi2.anki.AbstractFlashcardViewer$13 $r7;
        com.afollestad.materialdialogs.MaterialDialog $r8;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r2 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.res.Resources getResources()>();

        $r3 = new com.afollestad.materialdialogs.MaterialDialog$Builder;

        specialinvoke $r3.<com.afollestad.materialdialogs.MaterialDialog$Builder: void <init>(android.content.Context)>(r0);

        $r4 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(2131230961);

        $r3 = virtualinvoke $r3.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder title(java.lang.CharSequence)>($r4);

        $r3 = virtualinvoke $r3.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder iconAttr(int)>(2130771980);

        $r4 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(2131230966);

        $r1 = newarray (java.lang.Object)[1];

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r6 = virtualinvoke $r5.<com.ichi2.libanki.Card: java.lang.String q(boolean)>(1);

        $r6 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTML(java.lang.String)>($r6);

        $r1[0] = $r6;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r4, $r1);

        $r3 = virtualinvoke $r3.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder content(java.lang.CharSequence)>($r4);

        $r4 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(2131230972);

        $r3 = virtualinvoke $r3.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveText(java.lang.CharSequence)>($r4);

        $r4 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>(2131230967);

        $r3 = virtualinvoke $r3.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder negativeText(java.lang.CharSequence)>($r4);

        $r7 = new com.ichi2.anki.AbstractFlashcardViewer$13;

        specialinvoke $r7.<com.ichi2.anki.AbstractFlashcardViewer$13: void <init>(com.ichi2.anki.AbstractFlashcardViewer)>(r0);

        $r3 = virtualinvoke $r3.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder callback(com.afollestad.materialdialogs.MaterialDialog$ButtonCallback)>($r7);

        $r8 = virtualinvoke $r3.<com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>();

        virtualinvoke $r8.<com.afollestad.materialdialogs.MaterialDialog: void show()>();

        return;
    }
    protected void showEaseButtons()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        java.lang.RuntimeException r1;
        android.widget.LinearLayout $r2;
        com.ichi2.libanki.Sched $r3;
        com.ichi2.libanki.Card $r4;
        int $i0, $i1;
        int[] $r5, $r6;
        android.widget.TextView $r7;
        boolean $z0;
        java.lang.String $r8;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.res.Resources getResources()>();

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mFlipCardLayout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setVisibility(int)>(8);

     label1:
        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sched mSched>;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $i0 = virtualinvoke $r3.<com.ichi2.libanki.Sched: int answerButtons(com.ichi2.libanki.Card)>($r4);

     label2:
        $r5 = newarray (int)[4];

        $r5[0] = 2130771971;

        $r5[1] = 2130771996;

        $r5[2] = 2130771994;

        $r5[3] = 2130771986;

        $r5 = staticinvoke <com.ichi2.themes.Themes: int[] getResFromAttr(android.content.Context,int[])>(r0, $r5);

        $r6 = newarray (int)[4];

        $r6[0] = 2130771972;

        $r6[1] = 2130771997;

        $r6[2] = 2130771995;

        $r6[3] = 2130771987;

        $r6 = staticinvoke <com.ichi2.themes.Themes: int[] getColorFromAttr(android.content.Context,int[])>(r0, $r6);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase1Layout>;

        $i1 = $r5[0];

        virtualinvoke $r2.<android.widget.LinearLayout: void setBackgroundResource(int)>($i1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        $i1 = $r5[3];

        virtualinvoke $r2.<android.widget.LinearLayout: void setBackgroundResource(int)>($i1);

        lookupswitch($i0)
        {
            case 2: goto label7;
            case 3: goto label8;
            default: goto label3;
        };

     label3:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        $i1 = $r5[1];

        virtualinvoke $r2.<android.widget.LinearLayout: void setBackgroundResource(int)>($i1);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase2>;

        virtualinvoke $r7.<android.widget.TextView: void setText(int)>(2131230994);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase2>;

        $i1 = $r6[1];

        virtualinvoke $r7.<android.widget.TextView: void setTextColor(int)>($i1);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext2>;

        $i1 = $r6[1];

        virtualinvoke $r7.<android.widget.TextView: void setTextColor(int)>($i1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: boolean requestFocus()>();

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        $i1 = $r5[2];

        virtualinvoke $r2.<android.widget.LinearLayout: void setBackgroundResource(int)>($i1);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase3>;

        virtualinvoke $r7.<android.widget.TextView: void setText(int)>(2131230993);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase3>;

        $i1 = $r6[2];

        virtualinvoke $r7.<android.widget.TextView: void setTextColor(int)>($i1);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext3>;

        $i1 = $r6[2];

        virtualinvoke $r7.<android.widget.TextView: void setTextColor(int)>($i1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase4Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: boolean requestFocus()>();

     label4:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mShowNextReviewTime>;

        if $z0 == 0 goto label9;

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext1>;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sched mSched>;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r8 = virtualinvoke $r3.<com.ichi2.libanki.Sched: java.lang.String nextIvlStr(android.content.Context,com.ichi2.libanki.Card,int)>(r0, $r4, 1);

        virtualinvoke $r7.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext2>;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sched mSched>;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r8 = virtualinvoke $r3.<com.ichi2.libanki.Sched: java.lang.String nextIvlStr(android.content.Context,com.ichi2.libanki.Card,int)>(r0, $r4, 2);

        virtualinvoke $r7.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);

        if $i0 <= 2 goto label5;

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext3>;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sched mSched>;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r8 = virtualinvoke $r3.<com.ichi2.libanki.Sched: java.lang.String nextIvlStr(android.content.Context,com.ichi2.libanki.Card,int)>(r0, $r4, 3);

        virtualinvoke $r7.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);

     label5:
        if $i0 <= 3 goto label9;

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext4>;

        $r3 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sched mSched>;

        $r4 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r8 = virtualinvoke $r3.<com.ichi2.libanki.Sched: java.lang.String nextIvlStr(android.content.Context,com.ichi2.libanki.Card,int)>(r0, $r4, 4);

        virtualinvoke $r7.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);

        return;

     label6:
        r1 := @caughtexception;

        staticinvoke <com.ichi2.anki.AnkiDroidApp: void sendExceptionReport(java.lang.Throwable,java.lang.String)>(r1, "AbstractReviewer-showEaseButtons");

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void closeReviewer(int,boolean)>(203, 1);

        return;

     label7:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        $i1 = $r5[2];

        virtualinvoke $r2.<android.widget.LinearLayout: void setBackgroundResource(int)>($i1);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase2>;

        virtualinvoke $r7.<android.widget.TextView: void setText(int)>(2131230993);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase2>;

        $i1 = $r6[2];

        virtualinvoke $r7.<android.widget.TextView: void setTextColor(int)>($i1);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext2>;

        $i1 = $r6[2];

        virtualinvoke $r7.<android.widget.TextView: void setTextColor(int)>($i1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: boolean requestFocus()>();

        goto label4;

     label8:
        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        $i1 = $r5[2];

        virtualinvoke $r2.<android.widget.LinearLayout: void setBackgroundResource(int)>($i1);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase2>;

        virtualinvoke $r7.<android.widget.TextView: void setText(int)>(2131230993);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase2>;

        $i1 = $r6[2];

        virtualinvoke $r7.<android.widget.TextView: void setTextColor(int)>($i1);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext2>;

        $i1 = $r6[2];

        virtualinvoke $r7.<android.widget.TextView: void setTextColor(int)>($i1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase3Layout>;

        $i1 = $r5[3];

        virtualinvoke $r2.<android.widget.LinearLayout: void setBackgroundResource(int)>($i1);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase3>;

        virtualinvoke $r7.<android.widget.TextView: void setText(int)>(2131230992);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mEase3>;

        $i1 = $r6[3];

        virtualinvoke $r7.<android.widget.TextView: void setTextColor(int)>($i1);

        $r7 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mNext3>;

        $i1 = $r6[3];

        virtualinvoke $r7.<android.widget.TextView: void setTextColor(int)>($i1);

        $r2 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.LinearLayout mEase2Layout>;

        virtualinvoke $r2.<android.widget.LinearLayout: boolean requestFocus()>();

        goto label4;

     label9:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label6;
    }
    protected void showSelectTtsDialogue()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        boolean $z0;
        com.ichi2.libanki.Card $r1;
        java.lang.String $r2;
        long $l0;
        int $i1;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mTtsInitialized>;

        if $z0 == 0 goto label2;

        $z0 = <com.ichi2.anki.AbstractFlashcardViewer: boolean sDisplayAnswer>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Card: java.lang.String q(boolean)>(1);

        $r2 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTML(java.lang.String)>($r2);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $l0 = staticinvoke <com.ichi2.anki.AbstractFlashcardViewer: long getDeckIdForCard(com.ichi2.libanki.Card)>($r1);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $i1 = virtualinvoke $r1.<com.ichi2.libanki.Card: int getOrd()>();

        staticinvoke <com.ichi2.anki.ReadText: void selectTts(java.lang.String,long,int,int)>($r2, $l0, $i1, 0);

        return;

     label1:
        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r2 = virtualinvoke $r1.<com.ichi2.libanki.Card: java.lang.String getPureAnswer()>();

        $r2 = staticinvoke <com.ichi2.libanki.Utils: java.lang.String stripHTML(java.lang.String)>($r2);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $l0 = staticinvoke <com.ichi2.anki.AbstractFlashcardViewer: long getDeckIdForCard(com.ichi2.libanki.Card)>($r1);

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $i1 = virtualinvoke $r1.<com.ichi2.libanki.Card: int getOrd()>();

        staticinvoke <com.ichi2.anki.ReadText: void selectTts(java.lang.String,long,int,int)>($r2, $l0, $i1, 1);

     label2:
        return;
    }
    public void ttsInitialized()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        boolean $z0;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mTtsInitialized> = 1;

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mReplayOnTtsInit>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: void playSounds(boolean)>(1);

     label1:
        return;
    }
    protected void undo()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        com.ichi2.async.DeckTask$TaskListener $r1;
        com.ichi2.libanki.Collection $r2;
        boolean $z0;
        com.ichi2.async.DeckTask$TaskData[] $r3;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r2 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Collection getCol()>();

        $z0 = virtualinvoke $r2.<com.ichi2.libanki.Collection: boolean undoAvailable()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.async.DeckTask$TaskListener mAnswerCardHandler>;

        $r3 = newarray (com.ichi2.async.DeckTask$TaskData)[0];

        staticinvoke <com.ichi2.async.DeckTask: com.ichi2.async.DeckTask launchDeckTask(int,com.ichi2.async.DeckTask$Listener,com.ichi2.async.DeckTask$TaskData[])>(8, $r1, $r3);

     label1:
        return;
    }
    protected void updateScreenCounts()
    {
        com.ichi2.anki.AbstractFlashcardViewer r0;
        org.json.JSONException r1;
        android.text.SpannableString r2, r3, r16;
        android.support.v7.app.ActionBar $r4;
        com.ichi2.libanki.Card $r5;
        com.ichi2.libanki.Sched $r6;
        int[] $r7;
        com.ichi2.libanki.Collection $r8;
        com.ichi2.libanki.Decks $r9;
        long $l0;
        org.json.JSONObject $r10;
        java.lang.String $r11;
        java.lang.String[] $r12;
        int $i1;
        boolean $z0;
        android.content.res.Resources $r13;
        java.lang.Object[] $r14;
        java.lang.Integer $r15;
        android.widget.TextView $r17;
        java.lang.RuntimeException $r18;
        android.text.style.UnderlineSpan $r19;

        r0 := @this: com.ichi2.anki.AbstractFlashcardViewer;

        $r4 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.support.v7.app.ActionBar getSupportActionBar()>();

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        if $r5 != null goto label01;

        return;

     label01:
        $r6 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sched mSched>;

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $r7 = virtualinvoke $r6.<com.ichi2.libanki.Sched: int[] counts(com.ichi2.libanki.Card)>($r5);

        if $r4 == null goto label08;

     label02:
        $r8 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Collection getCol()>();

        $r9 = virtualinvoke $r8.<com.ichi2.libanki.Collection: com.ichi2.libanki.Decks getDecks()>();

     label03:
        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

     label04:
        $l0 = virtualinvoke $r5.<com.ichi2.libanki.Card: long getDid()>();

        $r10 = virtualinvoke $r9.<com.ichi2.libanki.Decks: org.json.JSONObject get(long)>($l0);

        $r11 = virtualinvoke $r10.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String[] split(java.lang.String)>("::");

     label05:
        $i1 = lengthof $r12;

        $i1 = $i1 + -1;

        $r11 = $r12[$i1];

     label06:
        virtualinvoke $r4.<android.support.v7.app.ActionBar: void setTitle(java.lang.CharSequence)>($r11);

     label07:
        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefShowETA>;

        if $z0 == 0 goto label08;

        $r6 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sched mSched>;

        $i1 = virtualinvoke $r6.<com.ichi2.libanki.Sched: int eta(int[],boolean)>($r7, 0);

        $r13 = virtualinvoke r0.<com.ichi2.anki.AbstractFlashcardViewer: android.content.res.Resources getResources()>();

        $r14 = newarray (java.lang.Object)[1];

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r14[0] = $r15;

        $r11 = virtualinvoke $r13.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(2131361802, $i1, $r14);

        virtualinvoke $r4.<android.support.v7.app.ActionBar: void setSubtitle(java.lang.CharSequence)>($r11);

     label08:
        r3 = new android.text.SpannableString;

        $i1 = $r7[0];

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        specialinvoke r3.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r11);

        r2 = new android.text.SpannableString;

        $i1 = $r7[1];

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        specialinvoke r2.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r11);

        r16 = new android.text.SpannableString;

        $i1 = $r7[2];

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        specialinvoke r16.<android.text.SpannableString: void <init>(java.lang.CharSequence)>($r11);

        $z0 = r0.<com.ichi2.anki.AbstractFlashcardViewer: boolean mPrefHideDueCount>;

        if $z0 == 0 goto label09;

        r16 = new android.text.SpannableString;

        specialinvoke r16.<android.text.SpannableString: void <init>(java.lang.CharSequence)>("???");

     label09:
        $r6 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Sched mSched>;

        $r5 = r0.<com.ichi2.anki.AbstractFlashcardViewer: com.ichi2.libanki.Card mCurrentCard>;

        $i1 = virtualinvoke $r6.<com.ichi2.libanki.Sched: int countIdx(com.ichi2.libanki.Card)>($r5);

        lookupswitch($i1)
        {
            case 0: goto label12;
            case 1: goto label13;
            case 2: goto label14;
            default: goto label10;
        };

     label10:
        $r17 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarNew>;

        virtualinvoke $r17.<android.widget.TextView: void setText(java.lang.CharSequence)>(r3);

        $r17 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarLearn>;

        virtualinvoke $r17.<android.widget.TextView: void setText(java.lang.CharSequence)>(r2);

        $r17 = r0.<com.ichi2.anki.AbstractFlashcardViewer: android.widget.TextView mTextBarReview>;

        virtualinvoke $r17.<android.widget.TextView: void setText(java.lang.CharSequence)>(r16);

        return;

     label11:
        r1 := @caughtexception;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r18;

     label12:
        $r19 = new android.text.style.UnderlineSpan;

        specialinvoke $r19.<android.text.style.UnderlineSpan: void <init>()>();

        $i1 = virtualinvoke r3.<android.text.SpannableString: int length()>();

        virtualinvoke r3.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r19, 0, $i1, 0);

        goto label10;

     label13:
        $r19 = new android.text.style.UnderlineSpan;

        specialinvoke $r19.<android.text.style.UnderlineSpan: void <init>()>();

        $i1 = virtualinvoke r2.<android.text.SpannableString: int length()>();

        virtualinvoke r2.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r19, 0, $i1, 0);

        goto label10;

     label14:
        $r19 = new android.text.style.UnderlineSpan;

        specialinvoke $r19.<android.text.style.UnderlineSpan: void <init>()>();

        $i1 = virtualinvoke r16.<android.text.SpannableString: int length()>();

        virtualinvoke r16.<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>($r19, 0, $i1, 0);

        goto label10;

        catch org.json.JSONException from label02 to label03 with label11;
        catch org.json.JSONException from label04 to label05 with label11;
        catch org.json.JSONException from label06 to label07 with label11;
    }
