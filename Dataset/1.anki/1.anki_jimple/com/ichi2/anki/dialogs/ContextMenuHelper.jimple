com.ichi2.anki.dialogs.ContextMenuHelper extends java.lang.Object
    public void <init>()
    {
        com.ichi2.anki.dialogs.ContextMenuHelper r0;

        r0 := @this: com.ichi2.anki.dialogs.ContextMenuHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.String[] getValuesFromKeys(java.util.HashMap, int[])
    {
        java.util.HashMap r0;
        int[] $r1;
        java.lang.String[] r2;
        int $i0, $i1;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @parameter0: java.util.HashMap;

        $r1 := @parameter1: int[];

        $i0 = lengthof $r1;

        r2 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label2;

        $i1 = $r1[$i0];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        r2[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r2;
    }
    public static int[] integerListToArray(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        int[] r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        r0 := @parameter0: java.util.ArrayList;

        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        r1 = newarray (int)[$i0];

        $i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label2;

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (java.lang.Integer) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        r1[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return r1;
    }
