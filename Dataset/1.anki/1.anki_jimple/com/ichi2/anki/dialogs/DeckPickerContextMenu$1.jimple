com.ichi2.anki.dialogs.DeckPickerContextMenu$1 extends java.lang.Object implements com.afollestad.materialdialogs.MaterialDialog$ListCallback
final com.ichi2.anki.dialogs.DeckPickerContextMenu this$0
    void <init>(com.ichi2.anki.dialogs.DeckPickerContextMenu)
    {
        com.ichi2.anki.dialogs.DeckPickerContextMenu$1 r0;
        com.ichi2.anki.dialogs.DeckPickerContextMenu $r1;

        r0 := @this: com.ichi2.anki.dialogs.DeckPickerContextMenu$1;

        $r1 := @parameter0: com.ichi2.anki.dialogs.DeckPickerContextMenu;

        r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void onSelection(com.afollestad.materialdialogs.MaterialDialog, android.view.View, int, java.lang.CharSequence)
    {
        com.ichi2.anki.dialogs.DeckPickerContextMenu$1 r0;
        com.afollestad.materialdialogs.MaterialDialog $r1;
        android.view.View $r2;
        int $i0;
        java.lang.CharSequence $r3;
        java.lang.Object[] $r4;
        com.ichi2.anki.dialogs.DeckPickerContextMenu $r5;
        android.support.v4.app.FragmentActivity $r6;
        com.ichi2.anki.DeckPicker $r7;
        com.ichi2.anki.AnkiActivity $r8;
        android.os.Bundle $r9;
        long $l1;
        com.ichi2.anki.dialogs.CustomStudyDialog $r10;
        com.ichi2.anki.CollectionHelper $r11;
        android.content.Context $r12;
        com.ichi2.libanki.Collection $r13;
        com.ichi2.libanki.Sched $r14;
        com.ichi2.anki.StudyOptionsFragment$StudyOptionsListener $r15;

        r0 := @this: com.ichi2.anki.dialogs.DeckPickerContextMenu$1;

        $r1 := @parameter0: com.afollestad.materialdialogs.MaterialDialog;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.lang.CharSequence;

        $i0 = virtualinvoke $r2.<android.view.View: int getId()>();

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label2;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label8;
            case 7: goto label9;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Delete deck selected", $r4);

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r6 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.support.v4.app.FragmentActivity getActivity()>();

        $r7 = (com.ichi2.anki.DeckPicker) $r6;

        virtualinvoke $r7.<com.ichi2.anki.DeckPicker: void confirmDeckDeletion()>();

        return;

     label3:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Open deck options selected", $r4);

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r6 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.support.v4.app.FragmentActivity getActivity()>();

        $r7 = (com.ichi2.anki.DeckPicker) $r6;

        virtualinvoke $r7.<com.ichi2.anki.DeckPicker: void showContextMenuDeckOptions()>();

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r6 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.support.v4.app.FragmentActivity getActivity()>();

        $r8 = (com.ichi2.anki.AnkiActivity) $r6;

        virtualinvoke $r8.<com.ichi2.anki.AnkiActivity: void dismissAllDialogFragments()>();

        return;

     label4:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Custom study option selected", $r4);

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r9 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.os.Bundle getArguments()>();

        $l1 = virtualinvoke $r9.<android.os.Bundle: long getLong(java.lang.String)>("did");

        $r10 = staticinvoke <com.ichi2.anki.dialogs.CustomStudyDialog: com.ichi2.anki.dialogs.CustomStudyDialog newInstance(int,long)>(0, $l1);

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r6 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.support.v4.app.FragmentActivity getActivity()>();

        $r8 = (com.ichi2.anki.AnkiActivity) $r6;

        virtualinvoke $r8.<com.ichi2.anki.AnkiActivity: void showDialogFragment(android.support.v4.app.DialogFragment)>($r10);

        return;

     label5:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Rename deck selected", $r4);

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r6 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.support.v4.app.FragmentActivity getActivity()>();

        $r7 = (com.ichi2.anki.DeckPicker) $r6;

        virtualinvoke $r7.<com.ichi2.anki.DeckPicker: void renameDeckDialog()>();

        return;

     label6:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Export deck selected", $r4);

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r6 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.support.v4.app.FragmentActivity getActivity()>();

        $r7 = (com.ichi2.anki.DeckPicker) $r6;

        virtualinvoke $r7.<com.ichi2.anki.DeckPicker: void showContextMenuExportDialog()>();

        return;

     label7:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Unbury deck selected", $r4);

        $r11 = staticinvoke <com.ichi2.anki.CollectionHelper: com.ichi2.anki.CollectionHelper getInstance()>();

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r12 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.content.Context getContext()>();

        $r13 = virtualinvoke $r11.<com.ichi2.anki.CollectionHelper: com.ichi2.libanki.Collection getCol(android.content.Context)>($r12);

        $r14 = virtualinvoke $r13.<com.ichi2.libanki.Collection: com.ichi2.libanki.Sched getSched()>();

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r9 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.os.Bundle getArguments()>();

        $l1 = virtualinvoke $r9.<android.os.Bundle: long getLong(java.lang.String)>("did");

        virtualinvoke $r14.<com.ichi2.libanki.Sched: void unburyCardsForDeck(long)>($l1);

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r6 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.support.v4.app.FragmentActivity getActivity()>();

        $r15 = (com.ichi2.anki.StudyOptionsFragment$StudyOptionsListener) $r6;

        interfaceinvoke $r15.<com.ichi2.anki.StudyOptionsFragment$StudyOptionsListener: void onRequireDeckListUpdate()>();

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r6 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.support.v4.app.FragmentActivity getActivity()>();

        $r8 = (com.ichi2.anki.AnkiActivity) $r6;

        virtualinvoke $r8.<com.ichi2.anki.AnkiActivity: void dismissAllDialogFragments()>();

        return;

     label8:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Empty deck selected", $r4);

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r6 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.support.v4.app.FragmentActivity getActivity()>();

        $r7 = (com.ichi2.anki.DeckPicker) $r6;

        virtualinvoke $r7.<com.ichi2.anki.DeckPicker: void rebuildFiltered()>();

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r6 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.support.v4.app.FragmentActivity getActivity()>();

        $r8 = (com.ichi2.anki.AnkiActivity) $r6;

        virtualinvoke $r8.<com.ichi2.anki.AnkiActivity: void dismissAllDialogFragments()>();

        return;

     label9:
        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <timber.log.Timber: void i(java.lang.String,java.lang.Object[])>("Empty deck selected", $r4);

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r6 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.support.v4.app.FragmentActivity getActivity()>();

        $r7 = (com.ichi2.anki.DeckPicker) $r6;

        virtualinvoke $r7.<com.ichi2.anki.DeckPicker: void emptyFiltered()>();

        $r5 = r0.<com.ichi2.anki.dialogs.DeckPickerContextMenu$1: com.ichi2.anki.dialogs.DeckPickerContextMenu this$0>;

        $r6 = virtualinvoke $r5.<com.ichi2.anki.dialogs.DeckPickerContextMenu: android.support.v4.app.FragmentActivity getActivity()>();

        $r8 = (com.ichi2.anki.AnkiActivity) $r6;

        virtualinvoke $r8.<com.ichi2.anki.AnkiActivity: void dismissAllDialogFragments()>();

        return;
    }
