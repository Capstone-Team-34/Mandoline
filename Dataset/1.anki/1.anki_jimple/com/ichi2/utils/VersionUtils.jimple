com.ichi2.utils.VersionUtils extends java.lang.Object
    public void <init>()
    {
        com.ichi2.utils.VersionUtils r0;

        r0 := @this: com.ichi2.utils.VersionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.String getAppName()
    {
        android.content.pm.PackageManager$NameNotFoundException r0;
        com.ichi2.anki.AnkiDroidApp $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3;
        android.content.pm.PackageInfo $r4;
        android.content.pm.ApplicationInfo $r5;
        int $i0;
        java.lang.Object[] $r6;

        $r1 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

     label1:
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 0);

     label2:
        $r5 = $r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r5.<android.content.pm.ApplicationInfo: int labelRes>;

     label3:
        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>($i0);

     label4:
        return $r3;

     label5:
        r0 := @caughtexception;

        $r6 = newarray (java.lang.Object)[1];

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r6[0] = $r3;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r0, "Couldn\'t find package named %s", $r6);

        return "AnkiDroid";

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }
    public static int getPkgVersionCode()
    {
        android.content.pm.PackageManager$NameNotFoundException r0;
        com.ichi2.anki.AnkiDroidApp $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3;
        android.content.pm.PackageInfo $r4;
        java.lang.Object[] $r5;
        int i0;

        $r1 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

     label1:
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 0);

     label2:
        i0 = $r4.<android.content.pm.PackageInfo: int versionCode>;

        return i0;

     label3:
        r0 := @caughtexception;

        $r5 = newarray (java.lang.Object)[1];

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r5[0] = $r3;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r0, "Couldn\'t find package named %s", $r5);

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }
    public static java.lang.String getPkgVersionName()
    {
        android.content.pm.PackageManager$NameNotFoundException r0;
        com.ichi2.anki.AnkiDroidApp $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3;
        android.content.pm.PackageInfo $r4;
        java.lang.Object[] $r5;

        $r1 = staticinvoke <com.ichi2.anki.AnkiDroidApp: com.ichi2.anki.AnkiDroidApp getInstance()>();

        if $r1 == null goto label4;

     label1:
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 0);

     label2:
        $r3 = $r4.<android.content.pm.PackageInfo: java.lang.String versionName>;

        return $r3;

     label3:
        r0 := @caughtexception;

        $r5 = newarray (java.lang.Object)[1];

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r5[0] = $r3;

        staticinvoke <timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r0, "Couldn\'t find package named %s", $r5);

     label4:
        return "?";

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }
    public static boolean isReleaseVersion()
    {
        int $i0;
        java.lang.String $r0;
        char $c1;

        $i0 = staticinvoke <com.ichi2.utils.VersionUtils: int getPkgVersionCode()>();

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -3;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c1 != 51 goto label1;

        return 1;

     label1:
        return 0;
    }
