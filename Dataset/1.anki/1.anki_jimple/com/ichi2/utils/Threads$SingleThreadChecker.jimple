com.ichi2.utils.Threads$SingleThreadChecker extends java.lang.Object implements com.ichi2.utils.Threads$ThreadChecker
private java.lang.Thread mThread
    private void <init>(java.lang.Thread)
    {
        com.ichi2.utils.Threads$SingleThreadChecker r0;
        java.lang.Thread $r1;

        r0 := @this: com.ichi2.utils.Threads$SingleThreadChecker;

        $r1 := @parameter0: java.lang.Thread;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ichi2.utils.Threads$SingleThreadChecker: java.lang.Thread mThread> = $r1;

        return;
    }
    void <init>(java.lang.Thread, com.ichi2.utils.Threads$1)
    {
        com.ichi2.utils.Threads$SingleThreadChecker r0;
        java.lang.Thread $r1;
        com.ichi2.utils.Threads$1 $r2;

        r0 := @this: com.ichi2.utils.Threads$SingleThreadChecker;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: com.ichi2.utils.Threads$1;

        specialinvoke r0.<com.ichi2.utils.Threads$SingleThreadChecker: void <init>(java.lang.Thread)>($r1);

        return;
    }
    public void checkThread()
    {
        com.ichi2.utils.Threads$SingleThreadChecker r0;
        java.lang.Thread $r1, $r2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: com.ichi2.utils.Threads$SingleThreadChecker;

        $r1 = r0.<com.ichi2.utils.Threads$SingleThreadChecker: java.lang.Thread mThread>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<com.ichi2.utils.Threads$SingleThreadChecker: java.lang.Thread mThread> = $r1;

        return;

     label1:
        $r1 = r0.<com.ichi2.utils.Threads$SingleThreadChecker: java.lang.Thread mThread>;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r1 == $r2 goto label2;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be called from single thread: ");

        $r1 = r0.<com.ichi2.utils.Threads$SingleThreadChecker: java.lang.Thread mThread>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead of ");

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label2:
        return;
    }
