com.ichi2.utils.DiffEngine extends java.lang.Object
static final boolean $assertionsDisabled
private java.util.regex.Pattern BLANKLINEEND
private java.util.regex.Pattern BLANKLINESTART
public short Diff_DualThreshold
public short Diff_EditCost
public float Diff_Timeout
    static void <clinit>()
    {
        boolean $z0;
        java.lang.Class $r0;

        $r0 = class "Lcom/ichi2/utils/DiffEngine;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.ichi2.utils.DiffEngine: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    public void <init>()
    {
        com.ichi2.utils.DiffEngine r0;
        java.util.regex.Pattern $r1;

        r0 := @this: com.ichi2.utils.DiffEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ichi2.utils.DiffEngine: float Diff_Timeout> = 1.0F;

        r0.<com.ichi2.utils.DiffEngine: short Diff_EditCost> = 4;

        r0.<com.ichi2.utils.DiffEngine: short Diff_DualThreshold> = 32;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("\\n\\r?\\n\\Z", 32);

        r0.<com.ichi2.utils.DiffEngine: java.util.regex.Pattern BLANKLINEEND> = $r1;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("\\A\\r?\\n\\r?\\n", 32);

        r0.<com.ichi2.utils.DiffEngine: java.util.regex.Pattern BLANKLINESTART> = $r1;

        return;
    }
    private int diff_cleanupSemanticScore(java.lang.String, java.lang.String)
    {
        com.ichi2.utils.DiffEngine r0;
        java.lang.String $r1, $r2;
        int $i0, $i2;
        char $c1;
        boolean $z0;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;

        r0 := @this: com.ichi2.utils.DiffEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return 5;

     label2:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c1);

        if $z0 == 0 goto label3;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c1);

        if $z0 != 0 goto label7;

     label3:
        $i0 = 1;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = $i2 + -1;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z0 != 0 goto label4;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z0 == 0 goto label8;

     label4:
        $i0 = 1 + 1;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = $i2 + -1;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        $i2 = staticinvoke <java.lang.Character: int getType(char)>($c1);

        if $i2 == 15 goto label5;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $i2 = staticinvoke <java.lang.Character: int getType(char)>($c1);

        if $i2 != 15 goto label8;

     label5:
        $i0 = $i0 + 1;

        $r3 = r0.<com.ichi2.utils.DiffEngine: java.util.regex.Pattern BLANKLINEEND>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label6;

        $r3 = r0.<com.ichi2.utils.DiffEngine: java.util.regex.Pattern BLANKLINESTART>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label8;

     label6:
        $i0 = $i0 + 1;

        return $i0;

     label7:
        return 0;

     label8:
        return $i0;
    }
    private java.lang.String[] diff_halfMatchI(java.lang.String, java.lang.String, int)
    {
        com.ichi2.utils.DiffEngine r0;
        java.lang.String $r1, $r2, $r3, r4, r5, r6, r7, r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringBuilder $r11;
        java.lang.String[] $r12;

        r0 := @this: com.ichi2.utils.DiffEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i1 / 4;

        $i1 = $i1 + $i0;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $i1 = -1;

        r4 = "";

        r5 = "";

        r6 = "";

        r7 = "";

        r8 = "";

     label1:
        $i1 = $i1 + 1;

        $i2 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String,int)>($r3, $i1);

        $i1 = $i2;

        if $i2 == -1 goto label2;

        $r9 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i2);

        $i3 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: int diff_commonPrefix(java.lang.String,java.lang.String)>($r9, $r10);

        $r9 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r10 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $i4 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: int diff_commonSuffix(java.lang.String,java.lang.String)>($r9, $r10);

        $i5 = virtualinvoke r4.<java.lang.String: int length()>();

        $i6 = $i4 + $i3;

        if $i5 >= $i6 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $i5 = $i2 - $i4;

        r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i5, $i2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $i5 = $i2 + $i3;

        r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i2, $i5);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $i5 = $i0 - $i4;

        r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        $i5 = $i0 + $i3;

        r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i5);

        $i4 = $i2 - $i4;

        r7 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $i2 = $i2 + $i3;

        r8 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i2);

        goto label1;

     label2:
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i1 / 2;

        if $i0 < $i1 goto label3;

        $r12 = newarray (java.lang.String)[5];

        $r12[0] = r5;

        $r12[1] = r6;

        $r12[2] = r7;

        $r12[3] = r8;

        $r12[4] = r4;

        return $r12;

     label3:
        return null;
    }
    private java.lang.String diff_linesToCharsMunge(java.lang.String, java.util.List, java.util.Map)
    {
        com.ichi2.utils.DiffEngine r0;
        java.lang.String $r1, $r5;
        java.util.List r2;
        java.util.Map r3;
        java.lang.StringBuilder r4;
        int i0, i1, $i2;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.Integer $r7;
        char $c3;

        r0 := @this: com.ichi2.utils.DiffEngine;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.Map;

        i0 = 0;

        i1 = -1;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

     label1:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = $i2 + -1;

        if i1 >= $i2 goto label4;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(10, i0);

        i1 = $i2;

        if $i2 != -1 goto label2;

        i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        i1 = i1 + -1;

     label2:
        $i2 = i1 + 1;

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

        i0 = i1 + 1;

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (java.lang.Integer) $r6;

        $i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $c3 = (char) $i2;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c3);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        goto label1;

     label3:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        $i2 = $i2 + -1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        $i2 = $i2 + -1;

        $c3 = (char) $i2;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c3);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        goto label1;

     label4:
        $r1 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
    public static java.lang.String wrapBad(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        com.ichi2.compat.Compat $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<span class=\"typeBad\">");

        $r2 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        $r0 = interfaceinvoke $r2.<com.ichi2.compat.Compat: java.lang.String detagged(java.lang.String)>($r0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\", "&#x5c;");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</span>");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    public static java.lang.String wrapGood(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        com.ichi2.compat.Compat $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<span class=\"typeGood\">");

        $r2 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        $r0 = interfaceinvoke $r2.<com.ichi2.compat.Compat: java.lang.String detagged(java.lang.String)>($r0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\", "&#x5c;");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</span>");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    public static java.lang.String wrapMissing(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        com.ichi2.compat.Compat $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<span class=\"typeMissed\">");

        $r2 = staticinvoke <com.ichi2.compat.CompatHelper: com.ichi2.compat.Compat getCompat()>();

        $r0 = interfaceinvoke $r2.<com.ichi2.compat.Compat: java.lang.String detagged(java.lang.String)>($r0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\", "&#x5c;");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</span>");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    protected void diff_charsToLines(java.util.LinkedList, java.util.List)
    {
        com.ichi2.utils.DiffEngine r0;
        java.util.LinkedList r1;
        java.util.List r2;
        java.lang.StringBuilder r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.ichi2.utils.DiffEngine$DiffAction r6;
        int i0, $i1;
        java.lang.String $r7;
        char $c2;

        r0 := @this: com.ichi2.utils.DiffEngine;

        r1 := @parameter0: java.util.LinkedList;

        r2 := @parameter1: java.util.List;

        $r4 = virtualinvoke r1.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.ichi2.utils.DiffEngine$DiffAction) $r5;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        i0 = 0;

     label2:
        $r7 = r6.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if i0 >= $i1 goto label3;

        $r7 = r6.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $c2 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(i0);

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($c2);

        $r7 = (java.lang.String) $r5;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r6.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = $r7;

        goto label1;

     label4:
        return;
    }
    public void diff_cleanupMerge(java.util.LinkedList)
    {
        com.ichi2.utils.DiffEngine r0;
        java.util.LinkedList r1;
        com.ichi2.utils.DiffEngine$DiffAction $r2, r8, $r14;
        com.ichi2.utils.DiffEngine$Operation $r3, $r11;
        java.util.ListIterator $r4;
        int i0, i1, $i2;
        java.lang.String r5, r6, $r13;
        java.lang.Object $r7;
        int[] $r9;
        boolean $z0, $z1;
        java.lang.StringBuilder $r10;
        java.lang.AssertionError $r12;

        r0 := @this: com.ichi2.utils.DiffEngine;

        r1 := @parameter0: java.util.LinkedList;

        $r2 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r3 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        specialinvoke $r2.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r3, "");

        virtualinvoke r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);

        $r4 = virtualinvoke r1.<java.util.LinkedList: java.util.ListIterator listIterator()>();

        i0 = 0;

        i1 = 0;

        r5 = "";

        r6 = "";

        $r7 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        r8 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

        $r2 = null;

     label01:
        if r8 == null goto label21;

        $r9 = <com.ichi2.utils.DiffEngine$1: int[] $SwitchMap$com$ichi2$utils$DiffEngine$Operation>;

        $r3 = r8.<com.ichi2.utils.DiffEngine$DiffAction: com.ichi2.utils.DiffEngine$Operation operation>;

        $i2 = virtualinvoke $r3.<com.ichi2.utils.DiffEngine$Operation: int ordinal()>();

        $i2 = $r9[$i2];

        lookupswitch($i2)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            default: goto label02;
        };

     label02:
        $z0 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r7 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        r8 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

        goto label01;

     label03:
        i1 = i1 + 1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        r6 = r8.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = null;

        goto label02;

     label04:
        i0 = i0 + 1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = r8.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = null;

        goto label02;

     label05:
        if i0 != 0 goto label06;

        if i1 == 0 goto label19;

     label06:
        interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();

        $i2 = i0;

     label07:
        i0 = $i2 + -1;

        if $i2 <= 0 goto label37;

        interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();

        interfaceinvoke $r4.<java.util.ListIterator: void remove()>();

        $i2 = i0;

        goto label07;

     label08:
        i1 = $i2 + -1;

        if $i2 <= 0 goto label09;

        interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();

        interfaceinvoke $r4.<java.util.ListIterator: void remove()>();

        $i2 = i1;

        goto label08;

     label09:
        if i0 == 0 goto label13;

        if i1 == 0 goto label13;

        i1 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: int diff_commonPrefix(java.lang.String,java.lang.String)>(r6, r5);

        if i1 == 0 goto label12;

        $z0 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label17;

        $r7 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();

        $r2 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

        $z0 = <com.ichi2.utils.DiffEngine: boolean $assertionsDisabled>;

        if $z0 != 0 goto label10;

        $r3 = $r2.<com.ichi2.utils.DiffEngine$DiffAction: com.ichi2.utils.DiffEngine$Operation operation>;

        $r11 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        if $r3 == $r11 goto label10;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>("Previous diff should have been an equality.");

        throw $r12;

     label10:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = $r13;

        interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

     label11:
        r6 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(i1);

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(i1);

     label12:
        i1 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: int diff_commonSuffix(java.lang.String,java.lang.String)>(r6, r5);

        if i1 == 0 goto label13;

        $r7 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        $r2 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        i0 = virtualinvoke r6.<java.lang.String: int length()>();

        i0 = i0 - i1;

        $r13 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(i0);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = $r13;

        i0 = virtualinvoke r6.<java.lang.String: int length()>();

        i0 = i0 - i1;

        r6 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        i0 = virtualinvoke r5.<java.lang.String: int length()>();

        i1 = i0 - i1;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();

     label13:
        i1 = virtualinvoke r5.<java.lang.String: int length()>();

        if i1 <= 0 goto label14;

        $r2 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r3 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation DELETE>;

        specialinvoke $r2.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r3, r5);

        interfaceinvoke $r4.<java.util.ListIterator: void add(java.lang.Object)>($r2);

     label14:
        i1 = virtualinvoke r6.<java.lang.String: int length()>();

        if i1 <= 0 goto label15;

        $r2 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r3 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation INSERT>;

        specialinvoke $r2.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r3, r6);

        interfaceinvoke $r4.<java.util.ListIterator: void add(java.lang.Object)>($r2);

     label15:
        $z0 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r7 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        r8 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

     label16:
        i1 = 0;

        i0 = 0;

        r5 = "";

        r6 = "";

        $r2 = r8;

        goto label02;

     label17:
        $r2 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r3 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        $r13 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        specialinvoke $r2.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r3, $r13);

        interfaceinvoke $r4.<java.util.ListIterator: void add(java.lang.Object)>($r2);

        goto label11;

     label18:
        r8 = null;

        goto label16;

     label19:
        if $r2 == null goto label16;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r5 = $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = r8.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = r5;

        interfaceinvoke $r4.<java.util.ListIterator: void remove()>();

        $r7 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();

        r8 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

        interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        goto label16;

     label20:
        r8 = null;

        goto label01;

     label21:
        $r7 = virtualinvoke r1.<java.util.LinkedList: java.lang.Object getLast()>();

        $r2 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

        r5 = $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        i1 = virtualinvoke r5.<java.lang.String: int length()>();

        if i1 != 0 goto label22;

        virtualinvoke r1.<java.util.LinkedList: java.lang.Object removeLast()>();

     label22:
        $z0 = 0;

        $r4 = virtualinvoke r1.<java.util.LinkedList: java.util.ListIterator listIterator()>();

        $z1 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label28;

        $r7 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        r8 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

     label23:
        $z1 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label29;

        $r7 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        $r2 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

     label24:
        $z1 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label30;

        $r7 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        $r14 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

     label25:
        if $r14 == null goto label36;

        $r3 = r8.<com.ichi2.utils.DiffEngine$DiffAction: com.ichi2.utils.DiffEngine$Operation operation>;

        $r11 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        if $r3 != $r11 goto label27;

        $r3 = $r14.<com.ichi2.utils.DiffEngine$DiffAction: com.ichi2.utils.DiffEngine$Operation operation>;

        $r11 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        if $r3 != $r11 goto label27;

        r5 = $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        r6 = r8.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $z1 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>(r6);

        if $z1 == 0 goto label32;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r5 = r8.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        r6 = $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        i1 = virtualinvoke r6.<java.lang.String: int length()>();

        r6 = r8.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        i0 = virtualinvoke r6.<java.lang.String: int length()>();

        i1 = i1 - i0;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = r5;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r5 = r8.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = $r14.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = r5;

        interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();

        interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();

        interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();

        interfaceinvoke $r4.<java.util.ListIterator: void remove()>();

        interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        $r7 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        $r2 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

        $z0 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label31;

        $r7 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        $r14 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

     label26:
        $z0 = 1;

     label27:
        r8 = $r2;

        $r2 = $r14;

        $z1 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label35;

        $r7 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        $r14 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

        goto label25;

     label28:
        r8 = null;

        goto label23;

     label29:
        $r2 = null;

        goto label24;

     label30:
        $r14 = null;

        goto label25;

     label31:
        $r14 = null;

        goto label26;

     label32:
        r5 = $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        r6 = $r14.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $z1 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>(r6);

        if $z1 == 0 goto label27;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r5 = r8.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = $r14.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r8.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = r5;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r5 = $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        r6 = $r14.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        i1 = virtualinvoke r6.<java.lang.String: int length()>();

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(i1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = $r14.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = r5;

        interfaceinvoke $r4.<java.util.ListIterator: void remove()>();

        $z0 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label34;

        $r7 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        $r14 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

     label33:
        $z0 = 1;

        goto label27;

     label34:
        $r14 = null;

        goto label33;

     label35:
        $r14 = null;

        goto label25;

     label36:
        if $z0 == 0 goto label38;

        virtualinvoke r0.<com.ichi2.utils.DiffEngine: void diff_cleanupMerge(java.util.LinkedList)>(r1);

        return;

     label37:
        $i2 = i1;

        goto label08;

     label38:
        return;
    }
    public void diff_cleanupSemantic(java.util.LinkedList)
    {
        com.ichi2.utils.DiffEngine r0;
        java.util.LinkedList r1;
        java.util.Stack r2;
        boolean $z0, $z1;
        java.lang.String r3, $r9;
        java.util.ListIterator $r4;
        int i0, i1, $i2;
        java.lang.Object $r5;
        com.ichi2.utils.DiffEngine$DiffAction r6;
        com.ichi2.utils.DiffEngine$Operation $r7, $r8;

        r0 := @this: com.ichi2.utils.DiffEngine;

        r1 := @parameter0: java.util.LinkedList;

        $z0 = virtualinvoke r1.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $z0 = 0;

        r2 = new java.util.Stack;

        specialinvoke r2.<java.util.Stack: void <init>()>();

        r3 = null;

        $r4 = virtualinvoke r1.<java.util.LinkedList: java.util.ListIterator listIterator()>();

        i0 = 0;

        i1 = 0;

        $r5 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        r6 = (com.ichi2.utils.DiffEngine$DiffAction) $r5;

     label02:
        if r6 == null goto label13;

        $r7 = r6.<com.ichi2.utils.DiffEngine$DiffAction: com.ichi2.utils.DiffEngine$Operation operation>;

        $r8 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        if $r7 != $r8 goto label04;

        virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r6);

        i0 = i1;

        i1 = 0;

        r3 = r6.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

     label03:
        $z1 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r5 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        r6 = (com.ichi2.utils.DiffEngine$DiffAction) $r5;

        goto label02;

     label04:
        $r9 = r6.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        i1 = i1 + $i2;

        if r3 == null goto label03;

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i2 > i0 goto label03;

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i2 > i1 goto label03;

     label05:
        $r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object lastElement()>();

        if r6 == $r5 goto label06;

        $r5 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();

        r6 = (com.ichi2.utils.DiffEngine$DiffAction) $r5;

        goto label05;

     label06:
        interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        r6 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r7 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation DELETE>;

        specialinvoke r6.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r7, r3);

        interfaceinvoke $r4.<java.util.ListIterator: void set(java.lang.Object)>(r6);

        r6 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r7 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation INSERT>;

        specialinvoke r6.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r7, r3);

        interfaceinvoke $r4.<java.util.ListIterator: void add(java.lang.Object)>(r6);

        virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();

        $z0 = virtualinvoke r2.<java.util.Stack: boolean empty()>();

        if $z0 != 0 goto label07;

        virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>();

     label07:
        $z0 = virtualinvoke r2.<java.util.Stack: boolean empty()>();

        if $z0 == 0 goto label09;

     label08:
        $z0 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasPrevious()>();

        if $z0 == 0 goto label11;

        interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();

        goto label08;

     label09:
        $r5 = virtualinvoke r2.<java.util.Stack: java.lang.Object lastElement()>();

        r6 = (com.ichi2.utils.DiffEngine$DiffAction) $r5;

     label10:
        $r5 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object previous()>();

        if r6 != $r5 goto label10;

     label11:
        i0 = 0;

        i1 = 0;

        r3 = null;

        $z0 = 1;

        goto label03;

     label12:
        r6 = null;

        goto label02;

     label13:
        if $z0 == 0 goto label14;

        virtualinvoke r0.<com.ichi2.utils.DiffEngine: void diff_cleanupMerge(java.util.LinkedList)>(r1);

     label14:
        virtualinvoke r0.<com.ichi2.utils.DiffEngine: void diff_cleanupSemanticLossless(java.util.LinkedList)>(r1);

        return;
    }
    public void diff_cleanupSemanticLossless(java.util.LinkedList)
    {
        com.ichi2.utils.DiffEngine r0;
        java.util.LinkedList r1;
        int i0, $i1, $i4;
        java.util.ListIterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.ichi2.utils.DiffEngine$DiffAction $r4, $r5, $r6;
        com.ichi2.utils.DiffEngine$Operation $r7, $r8;
        java.lang.String r9, r10, r11, $r12, r14, r15, $r16, $r17, $r18;
        java.lang.StringBuilder $r13;
        char $c2, $c3;

        r0 := @this: com.ichi2.utils.DiffEngine;

        r1 := @parameter0: java.util.LinkedList;

        $r2 = virtualinvoke r1.<java.util.LinkedList: java.util.ListIterator listIterator()>();

        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        $r4 = (com.ichi2.utils.DiffEngine$DiffAction) $r3;

     label01:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        $r5 = (com.ichi2.utils.DiffEngine$DiffAction) $r3;

     label02:
        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        $r6 = (com.ichi2.utils.DiffEngine$DiffAction) $r3;

     label03:
        if $r6 == null goto label15;

        $r7 = $r4.<com.ichi2.utils.DiffEngine$DiffAction: com.ichi2.utils.DiffEngine$Operation operation>;

        $r8 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        if $r7 != $r8 goto label11;

        $r7 = $r6.<com.ichi2.utils.DiffEngine$DiffAction: com.ichi2.utils.DiffEngine$Operation operation>;

        $r8 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        if $r7 != $r8 goto label11;

        r9 = $r4.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        r10 = $r5.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        r11 = $r6.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $i1 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: int diff_commonSuffix(java.lang.String,java.lang.String)>(r9, r10);

        if $i1 == 0 goto label04;

        i0 = virtualinvoke r10.<java.lang.String: int length()>();

        i0 = i0 - $i1;

        $r12 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>(i0);

        i0 = virtualinvoke r9.<java.lang.String: int length()>();

        i0 = i0 - $i1;

        r9 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        i0 = virtualinvoke r10.<java.lang.String: int length()>();

        $i1 = i0 - $i1;

        r10 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        r11 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r12 = r9;

        r14 = r10;

        r15 = r11;

        $i1 = specialinvoke r0.<com.ichi2.utils.DiffEngine: int diff_cleanupSemanticScore(java.lang.String,java.lang.String)>(r9, r10);

        i0 = specialinvoke r0.<com.ichi2.utils.DiffEngine: int diff_cleanupSemanticScore(java.lang.String,java.lang.String)>(r10, r11);

        $i1 = $i1 + i0;

     label05:
        i0 = virtualinvoke r10.<java.lang.String: int length()>();

        if i0 <= 0 goto label09;

        i0 = virtualinvoke r11.<java.lang.String: int length()>();

        if i0 <= 0 goto label09;

        $c2 = virtualinvoke r10.<java.lang.String: char charAt(int)>(0);

        $c3 = virtualinvoke r11.<java.lang.String: char charAt(int)>(0);

        if $c2 != $c3 goto label09;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $c2 = virtualinvoke r10.<java.lang.String: char charAt(int)>(0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r9 = $r16;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        r10 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>(1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $c2 = virtualinvoke r11.<java.lang.String: char charAt(int)>(0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r10 = $r17;

        $r18 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(1);

        r11 = $r18;

        i0 = specialinvoke r0.<com.ichi2.utils.DiffEngine: int diff_cleanupSemanticScore(java.lang.String,java.lang.String)>($r16, $r17);

        $i4 = specialinvoke r0.<com.ichi2.utils.DiffEngine: int diff_cleanupSemanticScore(java.lang.String,java.lang.String)>($r17, $r18);

        i0 = i0 + $i4;

        if i0 < $i1 goto label05;

        $i1 = i0;

        $r12 = $r16;

        r14 = $r17;

        r15 = $r18;

        goto label05;

     label06:
        $r4 = null;

        goto label01;

     label07:
        $r5 = null;

        goto label02;

     label08:
        $r6 = null;

        goto label03;

     label09:
        r9 = $r4.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label11;

        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i1 <= 0 goto label12;

        $r4.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = $r12;

     label10:
        $r5.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = r14;

        $i1 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i1 <= 0 goto label13;

        $r6.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = r15;

     label11:
        $r4 = $r5;

        $r5 = $r6;

        $z0 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r3 = interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        $r6 = (com.ichi2.utils.DiffEngine$DiffAction) $r3;

        goto label03;

     label12:
        interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object previous()>();

        interfaceinvoke $r2.<java.util.ListIterator: void remove()>();

        interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        interfaceinvoke $r2.<java.util.ListIterator: java.lang.Object next()>();

        goto label10;

     label13:
        interfaceinvoke $r2.<java.util.ListIterator: void remove()>();

        $r6 = $r5;

        $r5 = $r4;

        goto label11;

     label14:
        $r6 = null;

        goto label03;

     label15:
        return;
    }
    public int diff_commonPrefix(java.lang.String, java.lang.String)
    {
        com.ichi2.utils.DiffEngine r0;
        java.lang.String $r1, $r2;
        int $i0, $i1;
        char $c2, $c3;

        r0 := @this: com.ichi2.utils.DiffEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i1);

        if $c2 == $c3 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i0;
    }
    public int diff_commonSuffix(java.lang.String, java.lang.String)
    {
        com.ichi2.utils.DiffEngine r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, $i2, i3, $i4;
        char $c5, $c6;

        r0 := @this: com.ichi2.utils.DiffEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        i3 = 1;

     label1:
        if i3 > $i2 goto label3;

        $i4 = $i0 - i3;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i4);

        $i4 = $i1 - i3;

        $c6 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i4);

        if $c5 == $c6 goto label2;

        $i0 = i3 + -1;

        return $i0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return $i2;
    }
    protected java.util.LinkedList diff_compute(java.lang.String, java.lang.String, boolean)
    {
        com.ichi2.utils.DiffEngine r0;
        java.lang.String r1, r2, r3, r4, r5;
        boolean $z0;
        java.util.LinkedList r6, $r11;
        int $i0, $i1, $i2, $i3;
        com.ichi2.utils.DiffEngine$DiffAction $r7;
        com.ichi2.utils.DiffEngine$Operation $r8, $r9;
        java.lang.String[] $r10;
        java.util.List r12;
        com.ichi2.utils.DiffEngine$LinesToCharsResult $r13;
        java.util.ListIterator $r14;
        java.lang.Object $r15;
        int[] $r16;
        java.lang.StringBuilder $r17;
        java.util.Iterator $r18;

        r0 := @this: com.ichi2.utils.DiffEngine;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        r6 = new java.util.LinkedList;

        specialinvoke r6.<java.util.LinkedList: void <init>()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        $r7 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r8 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation INSERT>;

        specialinvoke $r7.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r8, r2);

        virtualinvoke r6.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

        return r6;

     label01:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

        $r7 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r8 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation DELETE>;

        specialinvoke $r7.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r8, r1);

        virtualinvoke r6.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

        return r6;

     label02:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label06;

        r3 = r1;

     label03:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label07;

        r4 = r2;

     label04:
        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>(r4);

        if $i0 == -1 goto label09;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 <= $i2 goto label08;

        $r8 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation DELETE>;

     label05:
        $r7 = new com.ichi2.utils.DiffEngine$DiffAction;

        r1 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        specialinvoke $r7.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r8, r1);

        virtualinvoke r6.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

        $r7 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r9 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        specialinvoke $r7.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r9, r4);

        virtualinvoke r6.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

        $r7 = new com.ichi2.utils.DiffEngine$DiffAction;

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        $i0 = $i1 + $i0;

        r1 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i0);

        specialinvoke $r7.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r8, r1);

        virtualinvoke r6.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

        return r6;

     label06:
        r3 = r2;

        goto label03;

     label07:
        r4 = r1;

        goto label04;

     label08:
        $r8 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation INSERT>;

        goto label05;

     label09:
        $r10 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: java.lang.String[] diff_halfMatch(java.lang.String,java.lang.String)>(r1, r2);

        if $r10 == null goto label10;

        r2 = $r10[0];

        r3 = $r10[1];

        r4 = $r10[2];

        r5 = $r10[3];

        r1 = $r10[4];

        r6 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: java.util.LinkedList diff_main(java.lang.String,java.lang.String,boolean)>(r2, r4, $z0);

        $r11 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: java.util.LinkedList diff_main(java.lang.String,java.lang.String,boolean)>(r3, r5, $z0);

        $r7 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r8 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        specialinvoke $r7.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r8, r1);

        virtualinvoke r6.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

        virtualinvoke r6.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r11);

        return r6;

     label10:
        if $z0 == 0 goto label12;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 < 100 goto label11;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 >= 100 goto label12;

     label11:
        $z0 = 0;

     label12:
        r12 = null;

        if $z0 == 0 goto label13;

        $r13 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: com.ichi2.utils.DiffEngine$LinesToCharsResult diff_linesToChars(java.lang.String,java.lang.String)>(r1, r2);

        r1 = $r13.<com.ichi2.utils.DiffEngine$LinesToCharsResult: java.lang.String chars1>;

        r2 = $r13.<com.ichi2.utils.DiffEngine$LinesToCharsResult: java.lang.String chars2>;

        r12 = $r13.<com.ichi2.utils.DiffEngine$LinesToCharsResult: java.util.List lineArray>;

     label13:
        $r11 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: java.util.LinkedList diff_map(java.lang.String,java.lang.String)>(r1, r2);

        r6 = $r11;

        if $r11 != null goto label14;

        r6 = new java.util.LinkedList;

        specialinvoke r6.<java.util.LinkedList: void <init>()>();

        $r7 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r8 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation DELETE>;

        specialinvoke $r7.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r8, r1);

        virtualinvoke r6.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

        $r7 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r8 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation INSERT>;

        specialinvoke $r7.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r8, r2);

        virtualinvoke r6.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

     label14:
        if $z0 == 0 goto label26;

        virtualinvoke r0.<com.ichi2.utils.DiffEngine: void diff_charsToLines(java.util.LinkedList,java.util.List)>(r6, r12);

        virtualinvoke r0.<com.ichi2.utils.DiffEngine: void diff_cleanupSemantic(java.util.LinkedList)>(r6);

        $r7 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r8 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        specialinvoke $r7.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r8, "");

        virtualinvoke r6.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

        $i0 = 0;

        $i1 = 0;

        r1 = "";

        r2 = "";

        $r14 = virtualinvoke r6.<java.util.LinkedList: java.util.ListIterator listIterator()>();

        $r15 = interfaceinvoke $r14.<java.util.ListIterator: java.lang.Object next()>();

        $r7 = (com.ichi2.utils.DiffEngine$DiffAction) $r15;

     label15:
        if $r7 == null goto label25;

        $r16 = <com.ichi2.utils.DiffEngine$1: int[] $SwitchMap$com$ichi2$utils$DiffEngine$Operation>;

        $r8 = $r7.<com.ichi2.utils.DiffEngine$DiffAction: com.ichi2.utils.DiffEngine$Operation operation>;

        $i2 = virtualinvoke $r8.<com.ichi2.utils.DiffEngine$Operation: int ordinal()>();

        $i2 = $r16[$i2];

        lookupswitch($i2)
        {
            case 1: goto label17;
            case 2: goto label18;
            case 3: goto label19;
            default: goto label16;
        };

     label16:
        $z0 = interfaceinvoke $r14.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label24;

        $r15 = interfaceinvoke $r14.<java.util.ListIterator: java.lang.Object next()>();

        $r7 = (com.ichi2.utils.DiffEngine$DiffAction) $r15;

        goto label15;

     label17:
        $i1 = $i1 + 1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = $r7.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label16;

     label18:
        $i0 = $i0 + 1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = $r7.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label16;

     label19:
        if $i0 < 1 goto label23;

        if $i1 < 1 goto label23;

        interfaceinvoke $r14.<java.util.ListIterator: java.lang.Object previous()>();

        $i2 = 0;

     label20:
        $i3 = $i0 + $i1;

        if $i2 >= $i3 goto label21;

        interfaceinvoke $r14.<java.util.ListIterator: java.lang.Object previous()>();

        interfaceinvoke $r14.<java.util.ListIterator: void remove()>();

        $i2 = $i2 + 1;

        goto label20;

     label21:
        $r11 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: java.util.LinkedList diff_main(java.lang.String,java.lang.String,boolean)>(r1, r2, 0);

        $r18 = virtualinvoke $r11.<java.util.LinkedList: java.util.Iterator iterator()>();

     label22:
        $z0 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label23;

        $r15 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.ichi2.utils.DiffEngine$DiffAction) $r15;

        interfaceinvoke $r14.<java.util.ListIterator: void add(java.lang.Object)>($r7);

        goto label22;

     label23:
        $i1 = 0;

        $i0 = 0;

        r1 = "";

        r2 = "";

        goto label16;

     label24:
        $r7 = null;

        goto label15;

     label25:
        virtualinvoke r6.<java.util.LinkedList: java.lang.Object removeLast()>();

     label26:
        return r6;
    }
    protected long diff_footprint(int, int)
    {
        com.ichi2.utils.DiffEngine r0;
        int $i0, $i1;
        long l2, $l3;

        r0 := @this: com.ichi2.utils.DiffEngine;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        l2 = (long) $i0;

        l2 = l2 << 32;

        $l3 = (long) $i1;

        l2 = l2 + $l3;

        return l2;
    }
    protected java.lang.String[] diff_halfMatch(java.lang.String, java.lang.String)
    {
        com.ichi2.utils.DiffEngine r0;
        java.lang.String $r1, $r2, r3, r4;
        int $i0, $i1;
        java.lang.String[] $r5, $r6;

        r0 := @this: com.ichi2.utils.DiffEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label04;

        r3 = $r1;

     label01:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label05;

        r4 = $r2;

     label02:
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 < 10 goto label03;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 >= 1 goto label06;

     label03:
        return null;

     label04:
        r3 = $r2;

        goto label01;

     label05:
        r4 = $r1;

        goto label02;

     label06:
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        $i0 = $i0 + 3;

        $i0 = $i0 / 4;

        $r5 = specialinvoke r0.<com.ichi2.utils.DiffEngine: java.lang.String[] diff_halfMatchI(java.lang.String,java.lang.String,int)>(r3, r4, $i0);

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        $i0 = $i0 + 1;

        $i0 = $i0 / 2;

        $r6 = specialinvoke r0.<com.ichi2.utils.DiffEngine: java.lang.String[] diff_halfMatchI(java.lang.String,java.lang.String,int)>(r3, r4, $i0);

        if $r5 != null goto label07;

        if $r6 != null goto label07;

        return null;

     label07:
        if $r6 != null goto label09;

     label08:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 > $i1 goto label12;

        $r6 = newarray (java.lang.String)[5];

        $r1 = $r5[2];

        $r6[0] = $r1;

        $r1 = $r5[3];

        $r6[1] = $r1;

        $r1 = $r5[0];

        $r6[2] = $r1;

        $r1 = $r5[1];

        $r6[3] = $r1;

        $r1 = $r5[4];

        $r6[4] = $r1;

        return $r6;

     label09:
        if $r5 != null goto label10;

        $r5 = $r6;

        goto label08;

     label10:
        r3 = $r5[4];

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        r3 = $r6[4];

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label11;

        goto label08;

     label11:
        $r5 = $r6;

        goto label08;

     label12:
        return $r5;
    }
    protected com.ichi2.utils.DiffEngine$LinesToCharsResult diff_linesToChars(java.lang.String, java.lang.String)
    {
        com.ichi2.utils.DiffEngine r0;
        java.lang.String $r1, $r2;
        java.util.ArrayList r3;
        java.util.HashMap r4;
        com.ichi2.utils.DiffEngine$LinesToCharsResult $r5;

        r0 := @this: com.ichi2.utils.DiffEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>("");

        $r1 = specialinvoke r0.<com.ichi2.utils.DiffEngine: java.lang.String diff_linesToCharsMunge(java.lang.String,java.util.List,java.util.Map)>($r1, r3, r4);

        $r2 = specialinvoke r0.<com.ichi2.utils.DiffEngine: java.lang.String diff_linesToCharsMunge(java.lang.String,java.util.List,java.util.Map)>($r2, r3, r4);

        $r5 = new com.ichi2.utils.DiffEngine$LinesToCharsResult;

        specialinvoke $r5.<com.ichi2.utils.DiffEngine$LinesToCharsResult: void <init>(java.lang.String,java.lang.String,java.util.List)>($r1, $r2, r3);

        return $r5;
    }
    public java.util.LinkedList diff_main(java.lang.String, java.lang.String)
    {
        com.ichi2.utils.DiffEngine r0;
        java.lang.String $r1, $r2;
        java.util.LinkedList $r3;

        r0 := @this: com.ichi2.utils.DiffEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: java.util.LinkedList diff_main(java.lang.String,java.lang.String,boolean)>($r1, $r2, 1);

        return $r3;
    }
    public java.util.LinkedList diff_main(java.lang.String, java.lang.String, boolean)
    {
        com.ichi2.utils.DiffEngine r0;
        boolean $z0, $z1;
        java.lang.String $r1, $r2, $r6, $r7;
        java.util.LinkedList r3;
        com.ichi2.utils.DiffEngine$DiffAction $r4;
        com.ichi2.utils.DiffEngine$Operation $r5;
        int $i0, $i1;

        r0 := @this: com.ichi2.utils.DiffEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        r3 = new java.util.LinkedList;

        specialinvoke r3.<java.util.LinkedList: void <init>()>();

        $r4 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        specialinvoke $r4.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r5, $r1);

        virtualinvoke r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r4);

        return r3;

     label1:
        $i0 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: int diff_commonPrefix(java.lang.String,java.lang.String)>($r1, $r2);

        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $i0 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: int diff_commonSuffix(java.lang.String,java.lang.String)>($r7, $r2);

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i1 = $i1 - $i0;

        $r1 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i1);

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i1 = $i1 - $i0;

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i1 - $i0;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r3 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: java.util.LinkedList diff_compute(java.lang.String,java.lang.String,boolean)>($r7, $r2, $z0);

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r4 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        specialinvoke $r4.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r5, $r6);

        virtualinvoke r3.<java.util.LinkedList: void addFirst(java.lang.Object)>($r4);

     label2:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r4 = new com.ichi2.utils.DiffEngine$DiffAction;

        $r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        specialinvoke $r4.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>($r5, $r1);

        virtualinvoke r3.<java.util.LinkedList: void addLast(java.lang.Object)>($r4);

     label3:
        virtualinvoke r0.<com.ichi2.utils.DiffEngine: void diff_cleanupMerge(java.util.LinkedList)>(r3);

        return r3;
    }
    protected java.util.LinkedList diff_map(java.lang.String, java.lang.String)
    {
        com.ichi2.utils.DiffEngine r0;
        java.lang.String $r1, $r2, $r17, $r18;
        java.util.HashMap r3, r4, r5;
        int i0, $i3, $i4, $i6, i8, $i9, $i10, $i13, $i14;
        long l1, $l2;
        float $f0;
        short $s5;
        boolean z0, z1, z2, $z3;
        java.util.ArrayList r6, r7;
        java.lang.Integer $r8, $r9;
        java.lang.Long $r10, $r13;
        byte $b7;
        java.util.HashSet $r11;
        java.lang.Object $r12;
        char $c11, $c12;
        java.util.Set $r14;
        java.util.LinkedList $r15, $r19;
        java.util.List $r16;

        r0 := @this: com.ichi2.utils.DiffEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $f0 = r0.<com.ichi2.utils.DiffEngine: float Diff_Timeout>;

        $f0 = $f0 * 1000.0F;

        $l2 = (long) $f0;

        l1 = l1 + $l2;

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i4 = virtualinvoke $r2.<java.lang.String: int length()>();

        i0 = $i3 + $i4;

        i0 = i0 + -1;

        $s5 = r0.<com.ichi2.utils.DiffEngine: short Diff_DualThreshold>;

        $i6 = $s5 * 2;

        if $i6 >= i0 goto label04;

        z0 = 1;

     label01:
        r6 = new java.util.ArrayList;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        r7 = new java.util.ArrayList;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

        r5 = new java.util.HashMap;

        specialinvoke r5.<java.util.HashMap: void <init>()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        z1 = 0;

        $i6 = $i3 + $i4;

        $i6 = $i6 % 2;

        if $i6 != 1 goto label05;

        z2 = 1;

     label02:
        $i6 = 0;

     label03:
        if $i6 >= i0 goto label28;

        $f0 = r0.<com.ichi2.utils.DiffEngine: float Diff_Timeout>;

        $b7 = $f0 cmpl 0.0F;

        if $b7 <= 0 goto label06;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b7 = $l2 cmp l1;

        if $b7 <= 0 goto label06;

        return null;

     label04:
        z0 = 0;

        goto label01;

     label05:
        z2 = 0;

        goto label02;

     label06:
        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r11);

        i8 = neg $i6;

     label07:
        if i8 > $i6 goto label17;

        $i9 = neg $i6;

        if i8 == $i9 goto label08;

        if i8 == $i6 goto label13;

        $i9 = i8 + -1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r12 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r8 = (java.lang.Integer) $r12;

        $i9 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $i10 = i8 + 1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r12 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r8 = (java.lang.Integer) $r12;

        $i10 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        if $i9 >= $i10 goto label13;

     label08:
        $i9 = i8 + 1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r12 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r8 = (java.lang.Integer) $r12;

        $i9 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

     label09:
        $i10 = $i9 - i8;

        if z0 == 0 goto label11;

        $l2 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: long diff_footprint(int,int)>($i9, $i10);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r10 = $r13;

        if z2 == 0 goto label10;

        $z3 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r13);

        if $z3 == 0 goto label10;

        z1 = 1;

     label10:
        if z2 != 0 goto label11;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r8);

     label11:
        if z1 != 0 goto label14;

        if $i9 >= $i3 goto label14;

        if $i10 >= $i4 goto label14;

        $c11 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i9);

        $c12 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i10);

        if $c11 != $c12 goto label14;

        $i9 = $i9 + 1;

        $i10 = $i10 + 1;

        if z0 == 0 goto label11;

        $l2 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: long diff_footprint(int,int)>($i9, $i10);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r10 = $r13;

        if z2 == 0 goto label12;

        $z3 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r13);

        if $z3 == 0 goto label12;

        z1 = 1;

     label12:
        if z2 != 0 goto label11;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r8);

        goto label11;

     label13:
        $i9 = i8 + -1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r12 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r8 = (java.lang.Integer) $r12;

        $i9 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $i9 = $i9 + 1;

        goto label09;

     label14:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r12 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>($i6);

        $r14 = (java.util.Set) $r12;

        $l2 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: long diff_footprint(int,int)>($i9, $i10);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>($r13);

        if $i9 != $i3 goto label15;

        if $i10 != $i4 goto label15;

        $r15 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: java.util.LinkedList diff_path1(java.util.List,java.lang.String,java.lang.String)>(r6, $r1, $r2);

        return $r15;

     label15:
        if z1 == 0 goto label16;

        $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r8 = (java.lang.Integer) $r12;

        $i4 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $i4 = $i4 + 1;

        $r16 = interfaceinvoke r7.<java.util.List: java.util.List subList(int,int)>(0, $i4);

        $r17 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i9);

        $r18 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i10);

        $r15 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: java.util.LinkedList diff_path1(java.util.List,java.lang.String,java.lang.String)>(r6, $r17, $r18);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i9);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i10);

        $r19 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: java.util.LinkedList diff_path2(java.util.List,java.lang.String,java.lang.String)>($r16, $r1, $r2);

        virtualinvoke $r15.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r19);

        return $r15;

     label16:
        i8 = i8 + 2;

        goto label07;

     label17:
        if z0 == 0 goto label27;

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r11);

        i8 = neg $i6;

     label18:
        if i8 > $i6 goto label27;

        $i9 = neg $i6;

        if i8 == $i9 goto label19;

        if i8 == $i6 goto label24;

        $i9 = i8 + -1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r12 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r8 = (java.lang.Integer) $r12;

        $i9 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $i10 = i8 + 1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r12 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r8 = (java.lang.Integer) $r12;

        $i10 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        if $i9 >= $i10 goto label24;

     label19:
        $i9 = i8 + 1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r12 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r8 = (java.lang.Integer) $r12;

        $i10 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

     label20:
        $i9 = $i10 - i8;

        $i13 = $i3 - $i10;

        $i14 = $i4 - $i9;

        $l2 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: long diff_footprint(int,int)>($i13, $i14);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r10 = $r13;

        if z2 != 0 goto label21;

        $z3 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r13);

        if $z3 == 0 goto label21;

        z1 = 1;

     label21:
        if z2 == 0 goto label22;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r8);

     label22:
        if z1 != 0 goto label25;

        if $i10 >= $i3 goto label25;

        if $i9 >= $i4 goto label25;

        $i13 = $i3 - $i10;

        $i13 = $i13 + -1;

        $c11 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i13);

        $i13 = $i4 - $i9;

        $i13 = $i13 + -1;

        $c12 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i13);

        if $c11 != $c12 goto label25;

        $i10 = $i10 + 1;

        $i9 = $i9 + 1;

        $i13 = $i3 - $i10;

        $i14 = $i4 - $i9;

        $l2 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: long diff_footprint(int,int)>($i13, $i14);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r10 = $r13;

        if z2 != 0 goto label23;

        $z3 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r13);

        if $z3 == 0 goto label23;

        z1 = 1;

     label23:
        if z2 == 0 goto label22;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r8);

        goto label22;

     label24:
        $i9 = i8 + -1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r12 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r8 = (java.lang.Integer) $r12;

        $i9 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $i10 = $i9 + 1;

        goto label20;

     label25:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r12 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>($i6);

        $r14 = (java.util.Set) $r12;

        $l2 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: long diff_footprint(int,int)>($i10, $i9);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>($r13);

        if z1 == 0 goto label26;

        $r12 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r8 = (java.lang.Integer) $r12;

        i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        i0 = i0 + 1;

        $r16 = interfaceinvoke r6.<java.util.List: java.util.List subList(int,int)>(0, i0);

        i0 = $i3 - $i10;

        $r17 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        i0 = $i4 - $i9;

        $r18 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r15 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: java.util.LinkedList diff_path1(java.util.List,java.lang.String,java.lang.String)>($r16, $r17, $r18);

        $i3 = $i3 - $i10;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i3);

        $i4 = $i4 - $i9;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i4);

        $r19 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: java.util.LinkedList diff_path2(java.util.List,java.lang.String,java.lang.String)>(r7, $r1, $r2);

        virtualinvoke $r15.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r19);

        return $r15;

     label26:
        i8 = i8 + 2;

        goto label18;

     label27:
        $i6 = $i6 + 1;

        goto label03;

     label28:
        return null;
    }
    protected java.util.LinkedList diff_path1(java.util.List, java.lang.String, java.lang.String)
    {
        com.ichi2.utils.DiffEngine r0;
        java.util.List r1;
        java.lang.String $r2, $r3, $r13;
        java.util.LinkedList r4;
        int $i0, $i1, $i2, $i3;
        com.ichi2.utils.DiffEngine$Operation r5, $r9;
        java.lang.Object $r6;
        java.util.Set $r7;
        long $l4;
        java.lang.Long $r8;
        boolean $z0;
        com.ichi2.utils.DiffEngine$DiffAction $r10, $r12;
        java.lang.StringBuilder $r11;
        char $c5, $c6;
        java.lang.AssertionError $r14;

        r0 := @this: com.ichi2.utils.DiffEngine;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 = new java.util.LinkedList;

        specialinvoke r4.<java.util.LinkedList: void <init>()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        r5 = null;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        $i2 = $i2 + -2;

     label01:
        if $i2 < 0 goto label13;

     label02:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i2);

        $r7 = (java.util.Set) $r6;

        $i3 = $i0 + -1;

        $l4 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: long diff_footprint(int,int)>($i3, $i1);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r8);

        if $z0 == 0 goto label06;

        $i0 = $i0 + -1;

        $r9 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation DELETE>;

        if r5 != $r9 goto label05;

        $r6 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r10 = (com.ichi2.utils.DiffEngine$DiffAction) $r6;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $c5 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r6 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r12 = (com.ichi2.utils.DiffEngine$DiffAction) $r6;

        $r13 = $r12.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = $r13;

     label03:
        r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation DELETE>;

     label04:
        $i2 = $i2 + -1;

        goto label01;

     label05:
        $r10 = new com.ichi2.utils.DiffEngine$DiffAction;

        r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation DELETE>;

        $i3 = $i0 + 1;

        $r13 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        specialinvoke $r10.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>(r5, $r13);

        virtualinvoke r4.<java.util.LinkedList: void addFirst(java.lang.Object)>($r10);

        goto label03;

     label06:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i2);

        $r7 = (java.util.Set) $r6;

        $i3 = $i1 + -1;

        $l4 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: long diff_footprint(int,int)>($i0, $i3);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r8);

        if $z0 == 0 goto label09;

        $i1 = $i1 + -1;

        $r9 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation INSERT>;

        if r5 != $r9 goto label08;

        $r6 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r10 = (com.ichi2.utils.DiffEngine$DiffAction) $r6;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $c5 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i1);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r6 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r12 = (com.ichi2.utils.DiffEngine$DiffAction) $r6;

        $r13 = $r12.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = $r13;

     label07:
        r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation INSERT>;

        goto label04;

     label08:
        $r10 = new com.ichi2.utils.DiffEngine$DiffAction;

        r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation INSERT>;

        $i3 = $i1 + 1;

        $r13 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i1, $i3);

        specialinvoke $r10.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>(r5, $r13);

        virtualinvoke r4.<java.util.LinkedList: void addFirst(java.lang.Object)>($r10);

        goto label07;

     label09:
        $i0 = $i0 + -1;

        $i1 = $i1 + -1;

        $z0 = <com.ichi2.utils.DiffEngine: boolean $assertionsDisabled>;

        if $z0 != 0 goto label10;

        $c5 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $c6 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i1);

        if $c5 == $c6 goto label10;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>("No diagonal.  Can\'t happen. (diff_path1)");

        throw $r14;

     label10:
        $r9 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        if r5 != $r9 goto label12;

        $r6 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r10 = (com.ichi2.utils.DiffEngine$DiffAction) $r6;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $c5 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r6 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r12 = (com.ichi2.utils.DiffEngine$DiffAction) $r6;

        $r13 = $r12.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = $r13;

     label11:
        r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        goto label02;

     label12:
        $r10 = new com.ichi2.utils.DiffEngine$DiffAction;

        r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        $i3 = $i0 + 1;

        $r13 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        specialinvoke $r10.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>(r5, $r13);

        virtualinvoke r4.<java.util.LinkedList: void addFirst(java.lang.Object)>($r10);

        goto label11;

     label13:
        return r4;
    }
    protected java.util.LinkedList diff_path2(java.util.List, java.lang.String, java.lang.String)
    {
        com.ichi2.utils.DiffEngine r0;
        java.util.List r1;
        java.lang.String $r2, $r3, $r12;
        java.util.LinkedList r4;
        int $i0, $i1, $i2, $i3, $i6;
        com.ichi2.utils.DiffEngine$Operation r5, $r9;
        java.lang.Object $r6;
        java.util.Set $r7;
        long $l4;
        java.lang.Long $r8;
        boolean $z0;
        java.lang.StringBuilder $r10;
        com.ichi2.utils.DiffEngine$DiffAction $r11;
        char $c5, $c7;
        java.lang.AssertionError $r13;

        r0 := @this: com.ichi2.utils.DiffEngine;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 = new java.util.LinkedList;

        specialinvoke r4.<java.util.LinkedList: void <init>()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        r5 = null;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        $i2 = $i2 + -2;

     label01:
        if $i2 < 0 goto label13;

     label02:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i2);

        $r7 = (java.util.Set) $r6;

        $i3 = $i0 + -1;

        $l4 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: long diff_footprint(int,int)>($i3, $i1);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r8);

        if $z0 == 0 goto label06;

        $i0 = $i0 + -1;

        $r9 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation DELETE>;

        if r5 != $r9 goto label05;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object getLast()>();

        $r11 = (com.ichi2.utils.DiffEngine$DiffAction) $r6;

        $r12 = $r11.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i3 = $i3 - $i0;

        $i3 = $i3 + -1;

        $c5 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i3);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = $r12;

     label03:
        r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation DELETE>;

     label04:
        $i2 = $i2 + -1;

        goto label01;

     label05:
        $r11 = new com.ichi2.utils.DiffEngine$DiffAction;

        r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation DELETE>;

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i3 = $i3 - $i0;

        $i3 = $i3 + -1;

        $i6 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i6 = $i6 - $i0;

        $r12 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i3, $i6);

        specialinvoke $r11.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>(r5, $r12);

        virtualinvoke r4.<java.util.LinkedList: void addLast(java.lang.Object)>($r11);

        goto label03;

     label06:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i2);

        $r7 = (java.util.Set) $r6;

        $i3 = $i1 + -1;

        $l4 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: long diff_footprint(int,int)>($i0, $i3);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r8);

        if $z0 == 0 goto label09;

        $i1 = $i1 + -1;

        $r9 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation INSERT>;

        if r5 != $r9 goto label08;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object getLast()>();

        $r11 = (com.ichi2.utils.DiffEngine$DiffAction) $r6;

        $r12 = $r11.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i3 = $i3 - $i1;

        $i3 = $i3 + -1;

        $c5 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i3);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = $r12;

     label07:
        r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation INSERT>;

        goto label04;

     label08:
        $r11 = new com.ichi2.utils.DiffEngine$DiffAction;

        r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation INSERT>;

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i3 = $i3 - $i1;

        $i3 = $i3 + -1;

        $i6 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i6 = $i6 - $i1;

        $r12 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i3, $i6);

        specialinvoke $r11.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>(r5, $r12);

        virtualinvoke r4.<java.util.LinkedList: void addLast(java.lang.Object)>($r11);

        goto label07;

     label09:
        $i0 = $i0 + -1;

        $i1 = $i1 + -1;

        $z0 = <com.ichi2.utils.DiffEngine: boolean $assertionsDisabled>;

        if $z0 != 0 goto label10;

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i3 = $i3 - $i0;

        $i3 = $i3 + -1;

        $c5 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i3);

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i3 = $i3 - $i1;

        $i3 = $i3 + -1;

        $c7 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i3);

        if $c5 == $c7 goto label10;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>("No diagonal.  Can\'t happen. (diff_path2)");

        throw $r13;

     label10:
        $r9 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        if r5 != $r9 goto label12;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object getLast()>();

        $r11 = (com.ichi2.utils.DiffEngine$DiffAction) $r6;

        $r12 = $r11.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i3 = $i3 - $i0;

        $i3 = $i3 + -1;

        $c5 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i3);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text> = $r12;

     label11:
        r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        goto label02;

     label12:
        $r11 = new com.ichi2.utils.DiffEngine$DiffAction;

        r5 = <com.ichi2.utils.DiffEngine$Operation: com.ichi2.utils.DiffEngine$Operation EQUAL>;

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i3 = $i3 - $i0;

        $i3 = $i3 + -1;

        $i6 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i6 = $i6 - $i0;

        $r12 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i3, $i6);

        specialinvoke $r11.<com.ichi2.utils.DiffEngine$DiffAction: void <init>(com.ichi2.utils.DiffEngine$Operation,java.lang.String)>(r5, $r12);

        virtualinvoke r4.<java.util.LinkedList: void addLast(java.lang.Object)>($r11);

        goto label11;

     label13:
        return r4;
    }
    public java.lang.String[] diffedHtmlStrings(java.lang.String, java.lang.String)
    {
        com.ichi2.utils.DiffEngine r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder r3, r4;
        java.util.LinkedList $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.ichi2.utils.DiffEngine$DiffAction r8;
        int[] $r9;
        com.ichi2.utils.DiffEngine$Operation $r10;
        int $i0;
        java.lang.String[] $r11;

        r0 := @this: com.ichi2.utils.DiffEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<com.ichi2.utils.DiffEngine: java.util.LinkedList diff_main(java.lang.String,java.lang.String)>($r1, $r2);

        $r6 = virtualinvoke $r5.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.ichi2.utils.DiffEngine$DiffAction) $r7;

        $r9 = <com.ichi2.utils.DiffEngine$1: int[] $SwitchMap$com$ichi2$utils$DiffEngine$Operation>;

        $r10 = r8.<com.ichi2.utils.DiffEngine$DiffAction: com.ichi2.utils.DiffEngine$Operation operation>;

        $i0 = virtualinvoke $r10.<com.ichi2.utils.DiffEngine$Operation: int ordinal()>();

        $i0 = $r9[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label2;
        };

     label2:
        goto label1;

     label3:
        $r1 = r8.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r1 = staticinvoke <com.ichi2.utils.DiffEngine: java.lang.String wrapBad(java.lang.String)>($r1);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label1;

     label4:
        $r1 = r8.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r1 = staticinvoke <com.ichi2.utils.DiffEngine: java.lang.String wrapMissing(java.lang.String)>($r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label1;

     label5:
        $r1 = r8.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r1 = staticinvoke <com.ichi2.utils.DiffEngine: java.lang.String wrapGood(java.lang.String)>($r1);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = r8.<com.ichi2.utils.DiffEngine$DiffAction: java.lang.String text>;

        $r1 = staticinvoke <com.ichi2.utils.DiffEngine: java.lang.String wrapGood(java.lang.String)>($r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label1;

     label6:
        $r11 = newarray (java.lang.String)[2];

        $r1 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[0] = $r1;

        $r1 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11[1] = $r1;

        return $r11;
    }
