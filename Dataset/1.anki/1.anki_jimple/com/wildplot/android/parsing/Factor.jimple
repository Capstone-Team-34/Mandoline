com.wildplot.android.parsing.Factor extends java.lang.Object implements com.wildplot.android.parsing.TreeElement
private com.wildplot.android.parsing.Factor factor
private com.wildplot.android.parsing.Factor$FactorType factorType
private com.wildplot.android.parsing.TopLevelParser parser
private com.wildplot.android.parsing.Pow pow
    public void <init>(java.lang.String, com.wildplot.android.parsing.TopLevelParser)
    {
        com.wildplot.android.parsing.Factor r0;
        java.lang.String $r1;
        com.wildplot.android.parsing.TopLevelParser $r2;
        com.wildplot.android.parsing.Factor$FactorType $r3;
        boolean $z0, z1;

        r0 := @this: com.wildplot.android.parsing.Factor;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.wildplot.android.parsing.TopLevelParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <com.wildplot.android.parsing.Factor$FactorType: com.wildplot.android.parsing.Factor$FactorType INVALID>;

        r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor$FactorType factorType> = $r3;

        r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.TopLevelParser parser> = $r2;

        $z0 = staticinvoke <com.wildplot.android.parsing.TopLevelParser: boolean stringHasValidBrackets(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r3 = <com.wildplot.android.parsing.Factor$FactorType: com.wildplot.android.parsing.Factor$FactorType INVALID>;

        r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor$FactorType factorType> = $r3;

        return;

     label1:
        $z0 = specialinvoke r0.<com.wildplot.android.parsing.Factor: boolean initAsPlusFactor(java.lang.String)>($r1);

        z1 = $z0;

        if $z0 != 0 goto label2;

        z1 = specialinvoke r0.<com.wildplot.android.parsing.Factor: boolean initAsMinusFactor(java.lang.String)>($r1);

     label2:
        if z1 != 0 goto label3;

        z1 = specialinvoke r0.<com.wildplot.android.parsing.Factor: boolean initAsPow(java.lang.String)>($r1);

     label3:
        if z1 != 0 goto label4;

        $r3 = <com.wildplot.android.parsing.Factor$FactorType: com.wildplot.android.parsing.Factor$FactorType INVALID>;

        r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor$FactorType factorType> = $r3;

     label4:
        return;
    }
    private boolean initAsMinusFactor(java.lang.String)
    {
        com.wildplot.android.parsing.Factor r0, r2;
        java.lang.String $r1;
        int $i0;
        char $c1;
        com.wildplot.android.parsing.TopLevelParser $r3;
        com.wildplot.android.parsing.Factor$FactorType $r4, $r5;
        boolean z0;

        r0 := @this: com.wildplot.android.parsing.Factor;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        if $c1 != 45 goto label3;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        r2 = new com.wildplot.android.parsing.Factor;

        $r3 = r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke r2.<com.wildplot.android.parsing.Factor: void <init>(java.lang.String,com.wildplot.android.parsing.TopLevelParser)>($r1, $r3);

        $r4 = virtualinvoke r2.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor$FactorType getFactorType()>();

        $r5 = <com.wildplot.android.parsing.Factor$FactorType: com.wildplot.android.parsing.Factor$FactorType INVALID>;

        if $r4 == $r5 goto label2;

        z0 = 1;

     label1:
        if z0 == 0 goto label3;

        $r4 = <com.wildplot.android.parsing.Factor$FactorType: com.wildplot.android.parsing.Factor$FactorType MINUS_FACTOR>;

        r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor$FactorType factorType> = $r4;

        r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor factor> = r2;

        return 1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        return 0;
    }
    private boolean initAsPlusFactor(java.lang.String)
    {
        com.wildplot.android.parsing.Factor r0, r2;
        java.lang.String $r1;
        int $i0;
        char $c1;
        com.wildplot.android.parsing.TopLevelParser $r3;
        com.wildplot.android.parsing.Factor$FactorType $r4, $r5;
        boolean z0;

        r0 := @this: com.wildplot.android.parsing.Factor;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        if $c1 != 43 goto label3;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        r2 = new com.wildplot.android.parsing.Factor;

        $r3 = r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke r2.<com.wildplot.android.parsing.Factor: void <init>(java.lang.String,com.wildplot.android.parsing.TopLevelParser)>($r1, $r3);

        $r4 = virtualinvoke r2.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor$FactorType getFactorType()>();

        $r5 = <com.wildplot.android.parsing.Factor$FactorType: com.wildplot.android.parsing.Factor$FactorType INVALID>;

        if $r4 == $r5 goto label2;

        z0 = 1;

     label1:
        if z0 == 0 goto label3;

        $r4 = <com.wildplot.android.parsing.Factor$FactorType: com.wildplot.android.parsing.Factor$FactorType PLUS_FACTOR>;

        r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor$FactorType factorType> = $r4;

        r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor factor> = r2;

        return 1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        return 0;
    }
    private boolean initAsPow(java.lang.String)
    {
        com.wildplot.android.parsing.Factor r0;
        java.lang.String $r1;
        com.wildplot.android.parsing.Pow r2;
        com.wildplot.android.parsing.Pow$PowType $r3, $r4;
        com.wildplot.android.parsing.TopLevelParser $r5;
        boolean z0;
        com.wildplot.android.parsing.Factor$FactorType $r6;

        r0 := @this: com.wildplot.android.parsing.Factor;

        $r1 := @parameter0: java.lang.String;

        r2 = new com.wildplot.android.parsing.Pow;

        $r5 = r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke r2.<com.wildplot.android.parsing.Pow: void <init>(java.lang.String,com.wildplot.android.parsing.TopLevelParser)>($r1, $r5);

        $r4 = virtualinvoke r2.<com.wildplot.android.parsing.Pow: com.wildplot.android.parsing.Pow$PowType getPowType()>();

        $r3 = <com.wildplot.android.parsing.Pow$PowType: com.wildplot.android.parsing.Pow$PowType INVALID>;

        if $r4 == $r3 goto label2;

        z0 = 1;

     label1:
        if z0 == 0 goto label3;

        $r6 = <com.wildplot.android.parsing.Factor$FactorType: com.wildplot.android.parsing.Factor$FactorType POW>;

        r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor$FactorType factorType> = $r6;

        r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Pow pow> = r2;

        return 1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        return 0;
    }
    public com.wildplot.android.parsing.Factor$FactorType getFactorType()
    {
        com.wildplot.android.parsing.Factor r0;
        com.wildplot.android.parsing.Factor$FactorType r1;

        r0 := @this: com.wildplot.android.parsing.Factor;

        r1 = r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor$FactorType factorType>;

        return r1;
    }
    public double getValue() throws com.wildplot.android.parsing.ExpressionFormatException
    {
        com.wildplot.android.parsing.Factor r0;
        int[] $r1;
        com.wildplot.android.parsing.Factor$FactorType $r2;
        int $i0;
        com.wildplot.android.parsing.ExpressionFormatException $r3;
        double $d0;
        com.wildplot.android.parsing.Pow $r4;

        r0 := @this: com.wildplot.android.parsing.Factor;

        $r1 = <com.wildplot.android.parsing.Factor$1: int[] $SwitchMap$com$wildplot$android$parsing$Factor$FactorType>;

        $r2 = r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor$FactorType factorType>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.Factor$FactorType: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        $r3 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r3.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("cannot parse expression at factor level");

        throw $r3;

     label2:
        r0 = r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor factor>;

        $d0 = virtualinvoke r0.<com.wildplot.android.parsing.Factor: double getValue()>();

        return $d0;

     label3:
        r0 = r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor factor>;

        $d0 = virtualinvoke r0.<com.wildplot.android.parsing.Factor: double getValue()>();

        $d0 = neg $d0;

        return $d0;

     label4:
        $r4 = r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Pow pow>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Pow: double getValue()>();

        return $d0;
    }
    public boolean isVariable() throws com.wildplot.android.parsing.ExpressionFormatException
    {
        com.wildplot.android.parsing.Factor r0;
        int[] $r1;
        com.wildplot.android.parsing.Factor$FactorType $r2;
        int $i0;
        com.wildplot.android.parsing.ExpressionFormatException $r3;
        boolean $z0;
        com.wildplot.android.parsing.Pow $r4;

        r0 := @this: com.wildplot.android.parsing.Factor;

        $r1 = <com.wildplot.android.parsing.Factor$1: int[] $SwitchMap$com$wildplot$android$parsing$Factor$FactorType>;

        $r2 = r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor$FactorType factorType>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.Factor$FactorType: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label1;
        };

     label1:
        $r3 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r3.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("cannot parse expression at factor level");

        throw $r3;

     label2:
        r0 = r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Factor factor>;

        $z0 = virtualinvoke r0.<com.wildplot.android.parsing.Factor: boolean isVariable()>();

        return $z0;

     label3:
        $r4 = r0.<com.wildplot.android.parsing.Factor: com.wildplot.android.parsing.Pow pow>;

        $z0 = virtualinvoke $r4.<com.wildplot.android.parsing.Pow: boolean isVariable()>();

        return $z0;
    }
