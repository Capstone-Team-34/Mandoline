com.wildplot.android.parsing.Atom$1 extends java.lang.Object
static final int[] $SwitchMap$com$wildplot$android$parsing$Atom$AtomType
    static void <clinit>()
    {
        com.wildplot.android.parsing.Atom$AtomType[] $r0;
        int $i0;
        int[] $r1;
        com.wildplot.android.parsing.Atom$AtomType $r2;
        java.lang.NoSuchFieldError $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = staticinvoke <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <com.wildplot.android.parsing.Atom$1: int[] $SwitchMap$com$wildplot$android$parsing$Atom$AtomType> = $r1;

     label01:
        $r1 = <com.wildplot.android.parsing.Atom$1: int[] $SwitchMap$com$wildplot$android$parsing$Atom$AtomType>;

        $r2 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType EXP_IN_BRACKETS>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.Atom$AtomType: int ordinal()>();

     label02:
        $r1[$i0] = 1;

     label03:
        $r1 = <com.wildplot.android.parsing.Atom$1: int[] $SwitchMap$com$wildplot$android$parsing$Atom$AtomType>;

        $r2 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType VARIABLE>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.Atom$AtomType: int ordinal()>();

     label04:
        $r1[$i0] = 2;

     label05:
        $r1 = <com.wildplot.android.parsing.Atom$1: int[] $SwitchMap$com$wildplot$android$parsing$Atom$AtomType>;

        $r2 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType NUMBER>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.Atom$AtomType: int ordinal()>();

     label06:
        $r1[$i0] = 3;

     label07:
        $r1 = <com.wildplot.android.parsing.Atom$1: int[] $SwitchMap$com$wildplot$android$parsing$Atom$AtomType>;

        $r2 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType FUNCTION_MATH>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.Atom$AtomType: int ordinal()>();

     label08:
        $r1[$i0] = 4;

     label09:
        $r1 = <com.wildplot.android.parsing.Atom$1: int[] $SwitchMap$com$wildplot$android$parsing$Atom$AtomType>;

        $r2 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType FUNCTION_X>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.Atom$AtomType: int ordinal()>();

     label10:
        $r1[$i0] = 5;

     label11:
        $r1 = <com.wildplot.android.parsing.Atom$1: int[] $SwitchMap$com$wildplot$android$parsing$Atom$AtomType>;

        $r2 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType FUNCTION_X_Y>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.Atom$AtomType: int ordinal()>();

     label12:
        $r1[$i0] = 6;

     label13:
        $r1 = <com.wildplot.android.parsing.Atom$1: int[] $SwitchMap$com$wildplot$android$parsing$Atom$AtomType>;

        $r2 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.Atom$AtomType: int ordinal()>();

     label14:
        $r1[$i0] = 7;

        return;

     label15:
        $r3 := @caughtexception;

        return;

     label16:
        $r4 := @caughtexception;

        goto label13;

     label17:
        $r5 := @caughtexception;

        goto label11;

     label18:
        $r6 := @caughtexception;

        goto label09;

     label19:
        $r7 := @caughtexception;

        goto label07;

     label20:
        $r8 := @caughtexception;

        goto label05;

     label21:
        $r9 := @caughtexception;

        goto label03;

        catch java.lang.NoSuchFieldError from label01 to label02 with label21;
        catch java.lang.NoSuchFieldError from label03 to label04 with label20;
        catch java.lang.NoSuchFieldError from label05 to label06 with label19;
        catch java.lang.NoSuchFieldError from label07 to label08 with label18;
        catch java.lang.NoSuchFieldError from label09 to label10 with label17;
        catch java.lang.NoSuchFieldError from label11 to label12 with label16;
        catch java.lang.NoSuchFieldError from label13 to label14 with label15;
    }
