com.wildplot.android.parsing.Atom extends java.lang.Object implements com.wildplot.android.parsing.TreeElement
private com.wildplot.android.parsing.TreeElement atomObject
private com.wildplot.android.parsing.Atom$AtomType atomType
private com.wildplot.android.parsing.Expression expression
private com.wildplot.android.parsing.TopLevelParser parser
    public void <init>(java.lang.String, com.wildplot.android.parsing.TopLevelParser)
    {
        com.wildplot.android.parsing.Atom r0;
        java.lang.String $r1;
        com.wildplot.android.parsing.TopLevelParser $r2;
        com.wildplot.android.parsing.Atom$AtomType $r3;
        boolean $z0, z1;

        r0 := @this: com.wildplot.android.parsing.Atom;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.wildplot.android.parsing.TopLevelParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r3;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TopLevelParser parser> = $r2;

        $z0 = staticinvoke <com.wildplot.android.parsing.TopLevelParser: boolean stringHasValidBrackets(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r3 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r3;

        return;

     label1:
        $z0 = specialinvoke r0.<com.wildplot.android.parsing.Atom: boolean initAsExpInBrackets(java.lang.String)>($r1);

        z1 = $z0;

        if $z0 != 0 goto label2;

        z1 = specialinvoke r0.<com.wildplot.android.parsing.Atom: boolean initAsFunctionMath(java.lang.String)>($r1);

     label2:
        if z1 != 0 goto label3;

        z1 = specialinvoke r0.<com.wildplot.android.parsing.Atom: boolean initAsFunctionX(java.lang.String)>($r1);

     label3:
        if z1 != 0 goto label4;

        z1 = specialinvoke r0.<com.wildplot.android.parsing.Atom: boolean initAsFunctionXY(java.lang.String)>($r1);

     label4:
        if z1 != 0 goto label5;

        z1 = specialinvoke r0.<com.wildplot.android.parsing.Atom: boolean initAsNumber(java.lang.String)>($r1);

     label5:
        if z1 != 0 goto label6;

        z1 = specialinvoke r0.<com.wildplot.android.parsing.Atom: boolean initAsXVariable(java.lang.String)>($r1);

     label6:
        if z1 != 0 goto label7;

        z1 = specialinvoke r0.<com.wildplot.android.parsing.Atom: boolean initAsYVariable(java.lang.String)>($r1);

     label7:
        if z1 != 0 goto label8;

        z1 = specialinvoke r0.<com.wildplot.android.parsing.Atom: boolean initAsVariable(java.lang.String)>($r1);

     label8:
        if z1 != 0 goto label9;

        $r3 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r3;

     label9:
        return;
    }
    private boolean initAsExpInBrackets(java.lang.String)
    {
        com.wildplot.android.parsing.Atom r0;
        java.lang.String $r1;
        com.wildplot.android.parsing.Expression r2;
        int $i0;
        char $c1;
        com.wildplot.android.parsing.TopLevelParser $r3;
        com.wildplot.android.parsing.Expression$ExpressionType $r4, $r5;
        boolean z0;
        com.wildplot.android.parsing.Atom$AtomType $r6;

        r0 := @this: com.wildplot.android.parsing.Atom;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        if $c1 != 40 goto label3;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if $c1 != 41 goto label3;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        r2 = new com.wildplot.android.parsing.Expression;

        $r3 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke r2.<com.wildplot.android.parsing.Expression: void <init>(java.lang.String,com.wildplot.android.parsing.TopLevelParser)>($r1, $r3);

        $r4 = virtualinvoke r2.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression$ExpressionType getExpressionType()>();

        $r5 = <com.wildplot.android.parsing.Expression$ExpressionType: com.wildplot.android.parsing.Expression$ExpressionType INVALID>;

        if $r4 == $r5 goto label2;

        z0 = 1;

     label1:
        if z0 == 0 goto label3;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Expression expression> = r2;

        $r6 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType EXP_IN_BRACKETS>;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r6;

        return 1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        return 0;
    }
    private boolean initAsFunctionMath(java.lang.String)
    {
        com.wildplot.android.parsing.Atom r0;
        java.lang.String $r1;
        com.wildplot.android.parsing.AtomTypes.MathFunctionAtom r2;
        com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType $r3, $r4;
        com.wildplot.android.parsing.TopLevelParser $r5;
        boolean z0;
        com.wildplot.android.parsing.Atom$AtomType $r6;

        r0 := @this: com.wildplot.android.parsing.Atom;

        $r1 := @parameter0: java.lang.String;

        r2 = new com.wildplot.android.parsing.AtomTypes.MathFunctionAtom;

        $r5 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke r2.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: void <init>(java.lang.String,com.wildplot.android.parsing.TopLevelParser)>($r1, $r5);

        $r4 = virtualinvoke r2.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType getMathType()>();

        $r3 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType INVALID>;

        if $r4 == $r3 goto label2;

        z0 = 1;

     label1:
        if z0 == 0 goto label3;

        $r6 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType FUNCTION_MATH>;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r6;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TreeElement atomObject> = r2;

        return 1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        return 0;
    }
    private boolean initAsFunctionX(java.lang.String)
    {
        com.wildplot.android.parsing.Atom r0;
        java.lang.String $r1;
        com.wildplot.android.parsing.AtomTypes.FunctionXAtom r2;
        com.wildplot.android.parsing.Atom$AtomType $r3, $r4;
        com.wildplot.android.parsing.TopLevelParser $r5;
        boolean z0;

        r0 := @this: com.wildplot.android.parsing.Atom;

        $r1 := @parameter0: java.lang.String;

        r2 = new com.wildplot.android.parsing.AtomTypes.FunctionXAtom;

        $r5 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke r2.<com.wildplot.android.parsing.AtomTypes.FunctionXAtom: void <init>(java.lang.String,com.wildplot.android.parsing.TopLevelParser)>($r1, $r5);

        $r4 = virtualinvoke r2.<com.wildplot.android.parsing.AtomTypes.FunctionXAtom: com.wildplot.android.parsing.Atom$AtomType getAtomType()>();

        $r3 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        if $r4 == $r3 goto label2;

        z0 = 1;

     label1:
        if z0 == 0 goto label3;

        $r3 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType FUNCTION_X>;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r3;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TreeElement atomObject> = r2;

        return 1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        return 0;
    }
    private boolean initAsFunctionXY(java.lang.String)
    {
        com.wildplot.android.parsing.Atom r0;
        java.lang.String $r1;
        com.wildplot.android.parsing.AtomTypes.FunctionXYAtom r2;
        com.wildplot.android.parsing.Atom$AtomType $r3, $r4;
        com.wildplot.android.parsing.TopLevelParser $r5;
        boolean z0;

        r0 := @this: com.wildplot.android.parsing.Atom;

        $r1 := @parameter0: java.lang.String;

        r2 = new com.wildplot.android.parsing.AtomTypes.FunctionXYAtom;

        $r5 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke r2.<com.wildplot.android.parsing.AtomTypes.FunctionXYAtom: void <init>(java.lang.String,com.wildplot.android.parsing.TopLevelParser)>($r1, $r5);

        $r4 = virtualinvoke r2.<com.wildplot.android.parsing.AtomTypes.FunctionXYAtom: com.wildplot.android.parsing.Atom$AtomType getAtomType()>();

        $r3 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        if $r4 == $r3 goto label2;

        z0 = 1;

     label1:
        if z0 == 0 goto label3;

        $r3 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType FUNCTION_X_Y>;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r3;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TreeElement atomObject> = r2;

        return 1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        return 0;
    }
    private boolean initAsNumber(java.lang.String)
    {
        com.wildplot.android.parsing.Atom r0;
        java.lang.String $r1;
        com.wildplot.android.parsing.AtomTypes.NumberAtom r2;
        com.wildplot.android.parsing.Atom$AtomType $r3, $r4;
        boolean z0;

        r0 := @this: com.wildplot.android.parsing.Atom;

        $r1 := @parameter0: java.lang.String;

        r2 = new com.wildplot.android.parsing.AtomTypes.NumberAtom;

        specialinvoke r2.<com.wildplot.android.parsing.AtomTypes.NumberAtom: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke r2.<com.wildplot.android.parsing.AtomTypes.NumberAtom: com.wildplot.android.parsing.Atom$AtomType getAtomType()>();

        $r3 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        if $r4 == $r3 goto label2;

        z0 = 1;

     label1:
        if z0 == 0 goto label3;

        $r3 = virtualinvoke r2.<com.wildplot.android.parsing.AtomTypes.NumberAtom: com.wildplot.android.parsing.Atom$AtomType getAtomType()>();

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r3;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TreeElement atomObject> = r2;

        return 1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        return 0;
    }
    private boolean initAsVariable(java.lang.String)
    {
        com.wildplot.android.parsing.Atom r0;
        java.lang.String $r1;
        com.wildplot.android.parsing.AtomTypes.VariableAtom r2;
        com.wildplot.android.parsing.Atom$AtomType $r3, $r5;
        com.wildplot.android.parsing.TopLevelParser $r4;
        boolean z0;

        r0 := @this: com.wildplot.android.parsing.Atom;

        $r1 := @parameter0: java.lang.String;

        r2 = new com.wildplot.android.parsing.AtomTypes.VariableAtom;

        $r4 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke r2.<com.wildplot.android.parsing.AtomTypes.VariableAtom: void <init>(java.lang.String,com.wildplot.android.parsing.TopLevelParser)>($r1, $r4);

        $r5 = virtualinvoke r2.<com.wildplot.android.parsing.AtomTypes.VariableAtom: com.wildplot.android.parsing.Atom$AtomType getAtomType()>();

        $r3 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        if $r5 == $r3 goto label2;

        z0 = 1;

     label1:
        if z0 == 0 goto label3;

        $r3 = virtualinvoke r2.<com.wildplot.android.parsing.AtomTypes.VariableAtom: com.wildplot.android.parsing.Atom$AtomType getAtomType()>();

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r3;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TreeElement atomObject> = r2;

        return 1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        return 0;
    }
    private boolean initAsXVariable(java.lang.String)
    {
        com.wildplot.android.parsing.Atom r0;
        java.lang.String $r1, $r3;
        com.wildplot.android.parsing.TopLevelParser $r2;
        boolean $z0;
        com.wildplot.android.parsing.Atom$AtomType $r4;
        com.wildplot.android.parsing.AtomTypes.XVariableAtom $r5;

        r0 := @this: com.wildplot.android.parsing.Atom;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TopLevelParser parser>;

        $r3 = virtualinvoke $r2.<com.wildplot.android.parsing.TopLevelParser: java.lang.String getxName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType VARIABLE>;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r4;

        $r5 = new com.wildplot.android.parsing.AtomTypes.XVariableAtom;

        $r2 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke $r5.<com.wildplot.android.parsing.AtomTypes.XVariableAtom: void <init>(com.wildplot.android.parsing.TopLevelParser)>($r2);

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TreeElement atomObject> = $r5;

        return 1;

     label1:
        return 0;
    }
    private boolean initAsYVariable(java.lang.String)
    {
        com.wildplot.android.parsing.Atom r0;
        java.lang.String $r1, $r3;
        com.wildplot.android.parsing.TopLevelParser $r2;
        boolean $z0;
        com.wildplot.android.parsing.Atom$AtomType $r4;
        com.wildplot.android.parsing.AtomTypes.YVariableAtom $r5;

        r0 := @this: com.wildplot.android.parsing.Atom;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TopLevelParser parser>;

        $r3 = virtualinvoke $r2.<com.wildplot.android.parsing.TopLevelParser: java.lang.String getyName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType VARIABLE>;

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r4;

        $r5 = new com.wildplot.android.parsing.AtomTypes.YVariableAtom;

        $r2 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke $r5.<com.wildplot.android.parsing.AtomTypes.YVariableAtom: void <init>(com.wildplot.android.parsing.TopLevelParser)>($r2);

        r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TreeElement atomObject> = $r5;

        return 1;

     label1:
        return 0;
    }
    public com.wildplot.android.parsing.Atom$AtomType getAtomType()
    {
        com.wildplot.android.parsing.Atom r0;
        com.wildplot.android.parsing.Atom$AtomType r1;

        r0 := @this: com.wildplot.android.parsing.Atom;

        r1 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType>;

        return r1;
    }
    public double getValue() throws com.wildplot.android.parsing.ExpressionFormatException
    {
        com.wildplot.android.parsing.Atom r0;
        int[] $r1;
        com.wildplot.android.parsing.Atom$AtomType $r2;
        int $i0;
        com.wildplot.android.parsing.ExpressionFormatException $r3;
        com.wildplot.android.parsing.Expression $r4;
        double $d0;
        com.wildplot.android.parsing.TreeElement $r5;

        r0 := @this: com.wildplot.android.parsing.Atom;

        $r1 = <com.wildplot.android.parsing.Atom$1: int[] $SwitchMap$com$wildplot$android$parsing$Atom$AtomType>;

        $r2 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.Atom$AtomType: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label3;
            default: goto label1;
        };

     label1:
        $r3 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r3.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("cannot parse Atom object");

        throw $r3;

     label2:
        $r4 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        return $d0;

     label3:
        $r5 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TreeElement atomObject>;

        $d0 = interfaceinvoke $r5.<com.wildplot.android.parsing.TreeElement: double getValue()>();

        return $d0;
    }
    public boolean isVariable() throws com.wildplot.android.parsing.ExpressionFormatException
    {
        com.wildplot.android.parsing.Atom r0;
        int[] $r1;
        com.wildplot.android.parsing.Atom$AtomType $r2;
        int $i0;
        com.wildplot.android.parsing.ExpressionFormatException $r3;
        com.wildplot.android.parsing.Expression $r4;
        boolean $z0;
        com.wildplot.android.parsing.TreeElement $r5;

        r0 := @this: com.wildplot.android.parsing.Atom;

        $r1 = <com.wildplot.android.parsing.Atom$1: int[] $SwitchMap$com$wildplot$android$parsing$Atom$AtomType>;

        $r2 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Atom$AtomType atomType>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.Atom$AtomType: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label3;
            default: goto label1;
        };

     label1:
        $r3 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r3.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("cannot parse Atom object");

        throw $r3;

     label2:
        $r4 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.Expression expression>;

        $z0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: boolean isVariable()>();

        return $z0;

     label3:
        $r5 = r0.<com.wildplot.android.parsing.Atom: com.wildplot.android.parsing.TreeElement atomObject>;

        $z0 = interfaceinvoke $r5.<com.wildplot.android.parsing.TreeElement: boolean isVariable()>();

        return $z0;
    }
