com.wildplot.android.parsing.AtomTypes.NumberAtom extends java.lang.Object implements com.wildplot.android.parsing.TreeElement
private com.wildplot.android.parsing.Atom$AtomType atomType
private java.lang.Double value
    public void <init>(java.lang.String)
    {
        com.wildplot.android.parsing.AtomTypes.NumberAtom r0;
        java.lang.String $r1;
        java.lang.NumberFormatException r2;
        com.wildplot.android.parsing.Atom$AtomType $r3;
        double $d0;
        java.lang.Double $r4;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.NumberAtom;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType NUMBER>;

        r0.<com.wildplot.android.parsing.AtomTypes.NumberAtom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r3;

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r1);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

     label2:
        r0.<com.wildplot.android.parsing.AtomTypes.NumberAtom: java.lang.Double value> = $r4;

        return;

     label3:
        r2 := @caughtexception;

        $r3 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        r0.<com.wildplot.android.parsing.AtomTypes.NumberAtom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r3;

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
    public com.wildplot.android.parsing.Atom$AtomType getAtomType()
    {
        com.wildplot.android.parsing.AtomTypes.NumberAtom r0;
        com.wildplot.android.parsing.Atom$AtomType r1;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.NumberAtom;

        r1 = r0.<com.wildplot.android.parsing.AtomTypes.NumberAtom: com.wildplot.android.parsing.Atom$AtomType atomType>;

        return r1;
    }
    public double getValue() throws com.wildplot.android.parsing.ExpressionFormatException
    {
        com.wildplot.android.parsing.AtomTypes.NumberAtom r0;
        double $d0;
        com.wildplot.android.parsing.Atom$AtomType $r1, $r2;
        java.lang.Double $r3;
        com.wildplot.android.parsing.ExpressionFormatException $r4;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.NumberAtom;

        $r1 = r0.<com.wildplot.android.parsing.AtomTypes.NumberAtom: com.wildplot.android.parsing.Atom$AtomType atomType>;

        $r2 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        if $r1 == $r2 goto label1;

        $r3 = r0.<com.wildplot.android.parsing.AtomTypes.NumberAtom: java.lang.Double value>;

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        return $d0;

     label1:
        $r4 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r4.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("Number is Invalid, cannot parse");

        throw $r4;
    }
    public boolean isVariable() throws com.wildplot.android.parsing.ExpressionFormatException
    {
        com.wildplot.android.parsing.AtomTypes.NumberAtom r0;
        com.wildplot.android.parsing.Atom$AtomType $r1, $r2;
        com.wildplot.android.parsing.ExpressionFormatException $r3;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.NumberAtom;

        $r1 = r0.<com.wildplot.android.parsing.AtomTypes.NumberAtom: com.wildplot.android.parsing.Atom$AtomType atomType>;

        $r2 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        if $r1 == $r2 goto label1;

        return 0;

     label1:
        $r3 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r3.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("Number is Invalid, cannot parse");

        throw $r3;
    }
