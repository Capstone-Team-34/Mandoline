com.wildplot.android.parsing.AtomTypes.MathFunctionAtom extends java.lang.Object implements com.wildplot.android.parsing.TreeElement
private com.wildplot.android.parsing.Expression expression
private boolean hasSavedValue
private com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType
private com.wildplot.android.parsing.TopLevelParser parser
private double savedValue
    public void <init>(java.lang.String, com.wildplot.android.parsing.TopLevelParser)
    {
        com.wildplot.android.parsing.AtomTypes.MathFunctionAtom r0;
        java.lang.String $r1;
        com.wildplot.android.parsing.TopLevelParser $r2;
        com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType $r3;
        boolean $z0;
        double $d0;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.wildplot.android.parsing.TopLevelParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType INVALID>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r3;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: boolean hasSavedValue> = 0;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: double savedValue> = 0.0;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.TopLevelParser parser> = $r2;

        $z0 = specialinvoke r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: boolean init(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r3 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType INVALID>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r3;

     label1:
        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: boolean isVariable()>();

        if $z0 != 0 goto label2;

        $d0 = virtualinvoke r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: double getValue()>();

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: double savedValue> = $d0;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: boolean hasSavedValue> = 1;

     label2:
        return;
    }
    private boolean init(java.lang.String)
    {
        com.wildplot.android.parsing.AtomTypes.MathFunctionAtom r0;
        java.lang.String $r1, $r4;
        com.wildplot.android.parsing.Expression r2;
        com.wildplot.android.parsing.Expression$ExpressionType $r3, $r6;
        int $i0, $i1, $i2;
        com.wildplot.android.parsing.TopLevelParser $r5;
        boolean z0;
        com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType $r7;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("(");

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>(")");

        if $i0 <= 1 goto label16;

        $i2 = $i0 + 1;

        if $i1 <= $i2 goto label16;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        r2 = new com.wildplot.android.parsing.Expression;

        $r5 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke r2.<com.wildplot.android.parsing.Expression: void <init>(java.lang.String,com.wildplot.android.parsing.TopLevelParser)>($r1, $r5);

        $r6 = virtualinvoke r2.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression$ExpressionType getExpressionType()>();

        $r3 = <com.wildplot.android.parsing.Expression$ExpressionType: com.wildplot.android.parsing.Expression$ExpressionType INVALID>;

        if $r6 == $r3 goto label03;

        z0 = 1;

     label01:
        if z0 == 0 goto label16;

        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("sin");

        if z0 == 0 goto label04;

        $r7 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType SIN>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r7;

     label02:
        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.Expression expression> = r2;

        return 1;

     label03:
        z0 = 0;

        goto label01;

     label04:
        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("cos");

        if z0 == 0 goto label05;

        $r7 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType COS>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r7;

        goto label02;

     label05:
        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("tan");

        if z0 == 0 goto label06;

        $r7 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType TAN>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r7;

        goto label02;

     label06:
        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("sqrt");

        if z0 == 0 goto label07;

        $r7 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType SQRT>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r7;

        goto label02;

     label07:
        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("acos");

        if z0 == 0 goto label08;

        $r7 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType ACOS>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r7;

        goto label02;

     label08:
        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("asin");

        if z0 == 0 goto label09;

        $r7 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType ASIN>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r7;

        goto label02;

     label09:
        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("atan");

        if z0 == 0 goto label10;

        $r7 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType ATAN>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r7;

        goto label02;

     label10:
        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("sinh");

        if z0 == 0 goto label11;

        $r7 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType SINH>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r7;

        goto label02;

     label11:
        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("cosh");

        if z0 == 0 goto label12;

        $r7 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType COSH>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r7;

        goto label02;

     label12:
        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("log");

        if z0 != 0 goto label13;

        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("lg");

        if z0 == 0 goto label14;

     label13:
        $r7 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType LOG>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r7;

        goto label02;

     label14:
        z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("ln");

        if z0 == 0 goto label15;

        $r7 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType LN>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r7;

        goto label02;

     label15:
        $r7 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType INVALID>;

        r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType> = $r7;

     label16:
        return 0;
    }
    public com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType getMathType()
    {
        com.wildplot.android.parsing.AtomTypes.MathFunctionAtom r0;
        com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType r1;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom;

        r1 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType>;

        return r1;
    }
    public double getValue() throws com.wildplot.android.parsing.ExpressionFormatException
    {
        com.wildplot.android.parsing.AtomTypes.MathFunctionAtom r0;
        boolean $z0;
        int[] $r1;
        com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType $r2;
        int $i0;
        com.wildplot.android.parsing.ExpressionFormatException $r3;
        com.wildplot.android.parsing.Expression $r4;
        double $d0;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom;

        $z0 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: boolean hasSavedValue>;

        if $z0 == 0 goto label01;

        $d0 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: double savedValue>;

        return $d0;

     label01:
        $r1 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$1: int[] $SwitchMap$com$wildplot$android$parsing$AtomTypes$MathFunctionAtom$MathType>;

        $r2 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label13;
            default: goto label02;
        };

     label02:
        $r3 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r3.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("Number is Invalid, cannot parse");

        throw $r3;

     label03:
        $r4 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        $d0 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        return $d0;

     label04:
        $r4 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        $d0 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        return $d0;

     label05:
        $r4 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        $d0 = staticinvoke <java.lang.Math: double tan(double)>($d0);

        return $d0;

     label06:
        $r4 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        return $d0;

     label07:
        $r4 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        $d0 = staticinvoke <java.lang.Math: double acos(double)>($d0);

        return $d0;

     label08:
        $r4 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        $d0 = staticinvoke <java.lang.Math: double asin(double)>($d0);

        return $d0;

     label09:
        $r4 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        $d0 = staticinvoke <java.lang.Math: double atan(double)>($d0);

        return $d0;

     label10:
        $r4 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        $d0 = staticinvoke <java.lang.Math: double sinh(double)>($d0);

        return $d0;

     label11:
        $r4 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        $d0 = staticinvoke <java.lang.Math: double cosh(double)>($d0);

        return $d0;

     label12:
        $r4 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        $d0 = staticinvoke <java.lang.Math: double log10(double)>($d0);

        return $d0;

     label13:
        $r4 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        $d0 = staticinvoke <java.lang.Math: double log(double)>($d0);

        return $d0;
    }
    public boolean isVariable()
    {
        com.wildplot.android.parsing.AtomTypes.MathFunctionAtom r0;
        boolean $z0;
        com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType $r1, $r2;
        com.wildplot.android.parsing.Expression $r3;
        com.wildplot.android.parsing.ExpressionFormatException $r4;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom;

        $r1 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType mathType>;

        $r2 = <com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType: com.wildplot.android.parsing.AtomTypes.MathFunctionAtom$MathType INVALID>;

        if $r1 == $r2 goto label1;

        $r3 = r0.<com.wildplot.android.parsing.AtomTypes.MathFunctionAtom: com.wildplot.android.parsing.Expression expression>;

        $z0 = virtualinvoke $r3.<com.wildplot.android.parsing.Expression: boolean isVariable()>();

        return $z0;

     label1:
        $r4 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r4.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("Number is Invalid, cannot parse");

        throw $r4;
    }
