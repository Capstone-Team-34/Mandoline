com.wildplot.android.parsing.AtomTypes.VariableAtom extends java.lang.Object implements com.wildplot.android.parsing.TreeElement
private com.wildplot.android.parsing.Atom$AtomType atomType
private com.wildplot.android.parsing.TopLevelParser parser
private java.lang.String varName
    public void <init>(java.lang.String, com.wildplot.android.parsing.TopLevelParser)
    {
        com.wildplot.android.parsing.AtomTypes.VariableAtom r0;
        java.lang.String $r1;
        com.wildplot.android.parsing.TopLevelParser $r2;
        com.wildplot.android.parsing.Atom$AtomType $r3;
        java.util.regex.Pattern $r4;
        java.util.regex.Matcher $r5;
        boolean $z0;
        int $i0;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.VariableAtom;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.wildplot.android.parsing.TopLevelParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType NUMBER>;

        r0.<com.wildplot.android.parsing.AtomTypes.VariableAtom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r3;

        r0.<com.wildplot.android.parsing.AtomTypes.VariableAtom: com.wildplot.android.parsing.TopLevelParser parser> = $r2;

        r0.<com.wildplot.android.parsing.AtomTypes.VariableAtom: java.lang.String varName> = $r1;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[^a-zA-Z0-9]");

        $r1 = r0.<com.wildplot.android.parsing.AtomTypes.VariableAtom: java.lang.String varName>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.wildplot.android.parsing.AtomTypes.VariableAtom: java.lang.String varName>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 > 0 goto label2;

     label1:
        $r3 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        r0.<com.wildplot.android.parsing.AtomTypes.VariableAtom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r3;

     label2:
        return;
    }
    public com.wildplot.android.parsing.Atom$AtomType getAtomType()
    {
        com.wildplot.android.parsing.AtomTypes.VariableAtom r0;
        com.wildplot.android.parsing.Atom$AtomType r1;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.VariableAtom;

        r1 = r0.<com.wildplot.android.parsing.AtomTypes.VariableAtom: com.wildplot.android.parsing.Atom$AtomType atomType>;

        return r1;
    }
    public double getValue()
    {
        com.wildplot.android.parsing.AtomTypes.VariableAtom r0;
        double $d0;
        com.wildplot.android.parsing.Atom$AtomType $r1, $r2;
        com.wildplot.android.parsing.TopLevelParser $r3;
        java.lang.String $r4;
        com.wildplot.android.parsing.ExpressionFormatException $r5;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.VariableAtom;

        $r1 = r0.<com.wildplot.android.parsing.AtomTypes.VariableAtom: com.wildplot.android.parsing.Atom$AtomType atomType>;

        $r2 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        if $r1 == $r2 goto label1;

        $r3 = r0.<com.wildplot.android.parsing.AtomTypes.VariableAtom: com.wildplot.android.parsing.TopLevelParser parser>;

        $r4 = r0.<com.wildplot.android.parsing.AtomTypes.VariableAtom: java.lang.String varName>;

        $d0 = virtualinvoke $r3.<com.wildplot.android.parsing.TopLevelParser: double getVarVal(java.lang.String)>($r4);

        return $d0;

     label1:
        $r5 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r5.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("Number is Invalid, cannot parse");

        throw $r5;
    }
    public boolean isVariable()
    {
        com.wildplot.android.parsing.AtomTypes.VariableAtom r0;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.VariableAtom;

        return 1;
    }
