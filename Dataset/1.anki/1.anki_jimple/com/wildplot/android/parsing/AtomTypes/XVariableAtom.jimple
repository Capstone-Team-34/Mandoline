com.wildplot.android.parsing.AtomTypes.XVariableAtom extends java.lang.Object implements com.wildplot.android.parsing.TreeElement
private com.wildplot.android.parsing.Atom$AtomType atomType
private com.wildplot.android.parsing.TopLevelParser parser
    public void <init>(com.wildplot.android.parsing.TopLevelParser)
    {
        com.wildplot.android.parsing.AtomTypes.XVariableAtom r0;
        com.wildplot.android.parsing.TopLevelParser $r1;
        com.wildplot.android.parsing.Atom$AtomType $r2;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.XVariableAtom;

        $r1 := @parameter0: com.wildplot.android.parsing.TopLevelParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType VARIABLE>;

        r0.<com.wildplot.android.parsing.AtomTypes.XVariableAtom: com.wildplot.android.parsing.Atom$AtomType atomType> = $r2;

        r0.<com.wildplot.android.parsing.AtomTypes.XVariableAtom: com.wildplot.android.parsing.TopLevelParser parser> = $r1;

        return;
    }
    public com.wildplot.android.parsing.Atom$AtomType getAtomType()
    {
        com.wildplot.android.parsing.AtomTypes.XVariableAtom r0;
        com.wildplot.android.parsing.Atom$AtomType r1;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.XVariableAtom;

        r1 = r0.<com.wildplot.android.parsing.AtomTypes.XVariableAtom: com.wildplot.android.parsing.Atom$AtomType atomType>;

        return r1;
    }
    public double getValue()
    {
        com.wildplot.android.parsing.AtomTypes.XVariableAtom r0;
        double $d0;
        com.wildplot.android.parsing.Atom$AtomType $r1, $r2;
        com.wildplot.android.parsing.TopLevelParser $r3;
        com.wildplot.android.parsing.ExpressionFormatException $r4;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.XVariableAtom;

        $r1 = r0.<com.wildplot.android.parsing.AtomTypes.XVariableAtom: com.wildplot.android.parsing.Atom$AtomType atomType>;

        $r2 = <com.wildplot.android.parsing.Atom$AtomType: com.wildplot.android.parsing.Atom$AtomType INVALID>;

        if $r1 == $r2 goto label1;

        $r3 = r0.<com.wildplot.android.parsing.AtomTypes.XVariableAtom: com.wildplot.android.parsing.TopLevelParser parser>;

        $d0 = virtualinvoke $r3.<com.wildplot.android.parsing.TopLevelParser: double getX()>();

        return $d0;

     label1:
        $r4 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r4.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("Number is Invalid, cannot parse");

        throw $r4;
    }
    public boolean isVariable()
    {
        com.wildplot.android.parsing.AtomTypes.XVariableAtom r0;

        r0 := @this: com.wildplot.android.parsing.AtomTypes.XVariableAtom;

        return 1;
    }
