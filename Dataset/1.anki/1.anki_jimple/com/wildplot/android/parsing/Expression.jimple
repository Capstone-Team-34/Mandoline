com.wildplot.android.parsing.Expression extends java.lang.Object implements com.wildplot.android.parsing.TreeElement
private com.wildplot.android.parsing.Expression expression
private com.wildplot.android.parsing.Expression$ExpressionType expressionType
private com.wildplot.android.parsing.TopLevelParser parser
private com.wildplot.android.parsing.Term term
    public void <init>(java.lang.String, com.wildplot.android.parsing.TopLevelParser)
    {
        com.wildplot.android.parsing.Expression r0;
        java.lang.String $r1;
        com.wildplot.android.parsing.TopLevelParser $r2;
        com.wildplot.android.parsing.Expression$ExpressionType $r3;
        boolean $z0, z1;

        r0 := @this: com.wildplot.android.parsing.Expression;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.wildplot.android.parsing.TopLevelParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <com.wildplot.android.parsing.Expression$ExpressionType: com.wildplot.android.parsing.Expression$ExpressionType INVALID>;

        r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression$ExpressionType expressionType> = $r3;

        r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression expression> = null;

        r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Term term> = null;

        r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.TopLevelParser parser> = $r2;

        $z0 = staticinvoke <com.wildplot.android.parsing.TopLevelParser: boolean stringHasValidBrackets(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r3 = <com.wildplot.android.parsing.Expression$ExpressionType: com.wildplot.android.parsing.Expression$ExpressionType INVALID>;

        r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression$ExpressionType expressionType> = $r3;

        return;

     label1:
        $z0 = specialinvoke r0.<com.wildplot.android.parsing.Expression: boolean initAsExpPlusOrMinusTerm(java.lang.String)>($r1);

        z1 = $z0;

        if $z0 != 0 goto label2;

        z1 = specialinvoke r0.<com.wildplot.android.parsing.Expression: boolean initAsTerm(java.lang.String)>($r1);

     label2:
        if z1 != 0 goto label3;

        $r3 = <com.wildplot.android.parsing.Expression$ExpressionType: com.wildplot.android.parsing.Expression$ExpressionType INVALID>;

        r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression$ExpressionType expressionType> = $r3;

     label3:
        return;
    }
    private boolean initAsExpPlusOrMinusTerm(java.lang.String)
    {
        com.wildplot.android.parsing.Expression r0, r2;
        java.lang.String $r1, $r4;
        com.wildplot.android.parsing.Term r3;
        int i0, i1, $i2, $i4;
        char $c3;
        boolean $z0;
        com.wildplot.android.parsing.TopLevelParser $r5;
        com.wildplot.android.parsing.Expression$ExpressionType $r6, $r7;
        com.wildplot.android.parsing.Term$TermType $r8, $r9;

        r0 := @this: com.wildplot.android.parsing.Expression;

        $r1 := @parameter0: java.lang.String;

        i0 = 0;

        i1 = 0;

     label01:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i1 >= $i2 goto label13;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        if $c3 != 40 goto label02;

        i0 = i0 + 1;

     label02:
        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        if $c3 != 41 goto label03;

        i0 = i0 + -1;

     label03:
        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        if $c3 == 43 goto label04;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        if $c3 != 45 goto label05;

     label04:
        if i0 != 0 goto label05;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $z0 = staticinvoke <com.wildplot.android.parsing.TopLevelParser: boolean stringHasValidBrackets(java.lang.String)>($r4);

        if $z0 != 0 goto label06;

     label05:
        i1 = i1 + 1;

        goto label01;

     label06:
        r2 = new com.wildplot.android.parsing.Expression;

        $r5 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke r2.<com.wildplot.android.parsing.Expression: void <init>(java.lang.String,com.wildplot.android.parsing.TopLevelParser)>($r4, $r5);

        $r6 = virtualinvoke r2.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression$ExpressionType getExpressionType()>();

        $r7 = <com.wildplot.android.parsing.Expression$ExpressionType: com.wildplot.android.parsing.Expression$ExpressionType INVALID>;

        if $r6 == $r7 goto label10;

        $z0 = 1;

     label07:
        if $z0 == 0 goto label05;

        $i2 = i1 + 1;

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i2, $i4);

        $z0 = staticinvoke <com.wildplot.android.parsing.TopLevelParser: boolean stringHasValidBrackets(java.lang.String)>($r4);

        if $z0 == 0 goto label05;

        r3 = new com.wildplot.android.parsing.Term;

        $r5 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke r3.<com.wildplot.android.parsing.Term: void <init>(java.lang.String,com.wildplot.android.parsing.TopLevelParser)>($r4, $r5);

        $r8 = virtualinvoke r3.<com.wildplot.android.parsing.Term: com.wildplot.android.parsing.Term$TermType getTermType()>();

        $r9 = <com.wildplot.android.parsing.Term$TermType: com.wildplot.android.parsing.Term$TermType INVALID>;

        if $r8 == $r9 goto label11;

        $z0 = 1;

     label08:
        if $z0 == 0 goto label05;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i1);

        if $c3 != 43 goto label12;

        $r6 = <com.wildplot.android.parsing.Expression$ExpressionType: com.wildplot.android.parsing.Expression$ExpressionType EXP_PLUS_TERM>;

        r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression$ExpressionType expressionType> = $r6;

     label09:
        r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression expression> = r2;

        r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Term term> = r3;

        return 1;

     label10:
        $z0 = 0;

        goto label07;

     label11:
        $z0 = 0;

        goto label08;

     label12:
        $r6 = <com.wildplot.android.parsing.Expression$ExpressionType: com.wildplot.android.parsing.Expression$ExpressionType EXP_MINUS_TERM>;

        r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression$ExpressionType expressionType> = $r6;

        goto label09;

     label13:
        return 0;
    }
    private boolean initAsTerm(java.lang.String)
    {
        com.wildplot.android.parsing.Expression r0;
        java.lang.String $r1;
        com.wildplot.android.parsing.Term r2;
        com.wildplot.android.parsing.Term$TermType $r3, $r5;
        boolean $z0;
        com.wildplot.android.parsing.TopLevelParser $r4;
        com.wildplot.android.parsing.Expression$ExpressionType $r6;

        r0 := @this: com.wildplot.android.parsing.Expression;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.wildplot.android.parsing.TopLevelParser: boolean stringHasValidBrackets(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = new com.wildplot.android.parsing.Term;

        $r4 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.TopLevelParser parser>;

        specialinvoke r2.<com.wildplot.android.parsing.Term: void <init>(java.lang.String,com.wildplot.android.parsing.TopLevelParser)>($r1, $r4);

        $r5 = virtualinvoke r2.<com.wildplot.android.parsing.Term: com.wildplot.android.parsing.Term$TermType getTermType()>();

        $r3 = <com.wildplot.android.parsing.Term$TermType: com.wildplot.android.parsing.Term$TermType INVALID>;

        if $r5 == $r3 goto label3;

        $z0 = 1;

     label2:
        if $z0 == 0 goto label4;

        $r6 = <com.wildplot.android.parsing.Expression$ExpressionType: com.wildplot.android.parsing.Expression$ExpressionType TERM>;

        r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression$ExpressionType expressionType> = $r6;

        r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Term term> = r2;

        return 1;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        return 0;
    }
    public com.wildplot.android.parsing.Expression$ExpressionType getExpressionType()
    {
        com.wildplot.android.parsing.Expression r0;
        com.wildplot.android.parsing.Expression$ExpressionType r1;

        r0 := @this: com.wildplot.android.parsing.Expression;

        r1 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression$ExpressionType expressionType>;

        return r1;
    }
    public double getValue() throws com.wildplot.android.parsing.ExpressionFormatException
    {
        com.wildplot.android.parsing.Expression r0, $r4;
        int[] $r1;
        com.wildplot.android.parsing.Expression$ExpressionType $r2;
        int $i0;
        com.wildplot.android.parsing.ExpressionFormatException $r3;
        double $d0, $d1;
        com.wildplot.android.parsing.Term $r5;

        r0 := @this: com.wildplot.android.parsing.Expression;

        $r1 = <com.wildplot.android.parsing.Expression$1: int[] $SwitchMap$com$wildplot$android$parsing$Expression$ExpressionType>;

        $r2 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression$ExpressionType expressionType>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.Expression$ExpressionType: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        $r3 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r3.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("could not parse Expression");

        throw $r3;

     label2:
        $r4 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        $r5 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Term term>;

        $d1 = virtualinvoke $r5.<com.wildplot.android.parsing.Term: double getValue()>();

        $d0 = $d0 + $d1;

        return $d0;

     label3:
        $r4 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: double getValue()>();

        $r5 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Term term>;

        $d1 = virtualinvoke $r5.<com.wildplot.android.parsing.Term: double getValue()>();

        $d0 = $d0 - $d1;

        return $d0;

     label4:
        $r5 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Term term>;

        $d0 = virtualinvoke $r5.<com.wildplot.android.parsing.Term: double getValue()>();

        return $d0;
    }
    public boolean isVariable()
    {
        com.wildplot.android.parsing.Expression r0, $r4;
        int[] $r1;
        com.wildplot.android.parsing.Expression$ExpressionType $r2;
        int $i0;
        com.wildplot.android.parsing.ExpressionFormatException $r3;
        boolean $z0;
        com.wildplot.android.parsing.Term $r5;

        r0 := @this: com.wildplot.android.parsing.Expression;

        $r1 = <com.wildplot.android.parsing.Expression$1: int[] $SwitchMap$com$wildplot$android$parsing$Expression$ExpressionType>;

        $r2 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression$ExpressionType expressionType>;

        $i0 = virtualinvoke $r2.<com.wildplot.android.parsing.Expression$ExpressionType: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        $r3 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r3.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("could not parse Expression");

        throw $r3;

     label2:
        $r4 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression expression>;

        $z0 = virtualinvoke $r4.<com.wildplot.android.parsing.Expression: boolean isVariable()>();

        if $z0 != 0 goto label3;

        $r5 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Term term>;

        $z0 = virtualinvoke $r5.<com.wildplot.android.parsing.Term: boolean isVariable()>();

        if $z0 == 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;

     label5:
        $r5 = r0.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Term term>;

        $z0 = virtualinvoke $r5.<com.wildplot.android.parsing.Term: boolean isVariable()>();

        return $z0;
    }
