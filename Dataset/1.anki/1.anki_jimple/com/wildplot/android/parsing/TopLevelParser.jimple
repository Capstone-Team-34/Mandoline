com.wildplot.android.parsing.TopLevelParser extends java.lang.Object implements com.wildplot.android.rendering.interfaces.Function2D com.wildplot.android.rendering.interfaces.Function3D java.lang.Cloneable
private com.wildplot.android.parsing.Expression expression
private java.lang.String expressionString
private java.lang.String funcName
private boolean isValid
private java.util.HashMap parserRegister
java.util.Random random
private java.util.HashMap varMap
private double x
private java.lang.String xName
private double y
private java.lang.String yName
    public void <init>(java.lang.String, java.util.HashMap)
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        java.lang.String $r1, $r6;
        java.util.HashMap r2, $r4;
        boolean $z0, $z1;
        java.util.Random $r3;
        java.lang.StringBuilder $r5;
        int $i0;
        com.wildplot.android.parsing.Expression $r7;
        com.wildplot.android.parsing.Expression$ExpressionType $r8, $r9;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.HashMap;

        $z0 = 0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        r0.<com.wildplot.android.parsing.TopLevelParser: java.util.Random random> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.wildplot.android.parsing.TopLevelParser: java.util.HashMap varMap> = $r4;

        r0.<com.wildplot.android.parsing.TopLevelParser: double x> = 0.0;

        r0.<com.wildplot.android.parsing.TopLevelParser: double y> = 0.0;

        r0.<com.wildplot.android.parsing.TopLevelParser: com.wildplot.android.parsing.Expression expression> = null;

        r0.<com.wildplot.android.parsing.TopLevelParser: boolean isValid> = 0;

        r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String xName> = "x";

        r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String yName> = "y";

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r3 = r0.<com.wildplot.android.parsing.TopLevelParser: java.util.Random random>;

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String funcName> = $r6;

        specialinvoke r0.<com.wildplot.android.parsing.TopLevelParser: void initVarMap()>();

        r0.<com.wildplot.android.parsing.TopLevelParser: java.util.HashMap parserRegister> = r2;

        r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String expressionString> = $r1;

        $z1 = specialinvoke r0.<com.wildplot.android.parsing.TopLevelParser: boolean initExpressionString()>();

        $r7 = new com.wildplot.android.parsing.Expression;

        $r1 = r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String expressionString>;

        specialinvoke $r7.<com.wildplot.android.parsing.Expression: void <init>(java.lang.String,com.wildplot.android.parsing.TopLevelParser)>($r1, r0);

        r0.<com.wildplot.android.parsing.TopLevelParser: com.wildplot.android.parsing.Expression expression> = $r7;

        $r7 = r0.<com.wildplot.android.parsing.TopLevelParser: com.wildplot.android.parsing.Expression expression>;

        $r8 = virtualinvoke $r7.<com.wildplot.android.parsing.Expression: com.wildplot.android.parsing.Expression$ExpressionType getExpressionType()>();

        $r9 = <com.wildplot.android.parsing.Expression$ExpressionType: com.wildplot.android.parsing.Expression$ExpressionType INVALID>;

        if $r8 == $r9 goto label1;

        if $z1 == 0 goto label1;

        $z0 = 1;

     label1:
        r0.<com.wildplot.android.parsing.TopLevelParser: boolean isValid> = $z0;

        return;
    }
    private boolean initExpressionString()
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        java.lang.String $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3;
        java.util.regex.Pattern $r4;
        java.util.regex.Matcher $r5;
        boolean $z0;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        $r1 = r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String expressionString>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(" ", "");

        r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String expressionString> = $r1;

        $r1 = r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String expressionString>;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("=");

        if $i0 < 1 goto label3;

        $r1 = r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String expressionString>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r2 = r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String expressionString>;

        $i0 = $i0 + 1;

        $r3 = r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String expressionString>;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String expressionString> = $r2;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(",");

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("(");

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(")");

        if $i2 <= 0 goto label5;

        $i3 = $i2 + 1;

        if $i0 <= $i3 goto label5;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[^a-zA-Z0-9]");

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        if $i1 != -1 goto label4;

        $i1 = $i2 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label5;

        r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String xName> = $r1;

     label2:
        r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String funcName> = $r2;

     label3:
        return 1;

     label4:
        $i2 = $i2 + 1;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1);

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label5;

        $i1 = $i1 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label5;

        r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String xName> = $r3;

        r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String yName> = $r1;

        goto label2;

     label5:
        return 0;
    }
    private void initVarMap()
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        java.util.HashMap $r1;
        java.lang.Double $r2;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        $r1 = r0.<com.wildplot.android.parsing.TopLevelParser: java.util.HashMap varMap>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(2.718281828459045);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("e", $r2);

        $r1 = r0.<com.wildplot.android.parsing.TopLevelParser: java.util.HashMap varMap>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(3.141592653589793);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("pi", $r2);

        return;
    }
    public static boolean stringHasValidBrackets(java.lang.String)
    {
        java.lang.String $r0, $r1;
        int i0, $i1, $i2;
        char $c3;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\(", "");

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\)", "");

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        i0 = i0 - $i1;

        if i0 == 0 goto label1;

        return 0;

     label1:
        i0 = 0;

        $i1 = 0;

     label2:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label5;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if $c3 != 40 goto label3;

        i0 = i0 + 1;

     label3:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if $c3 != 41 goto label4;

        i0 = i0 + -1;

     label4:
        if i0 < 0 goto label6;

        $i1 = $i1 + 1;

        goto label2;

     label5:
        return 1;

     label6:
        return 0;
    }
    public com.wildplot.android.parsing.TopLevelParser createCopy()
    {
        com.wildplot.android.parsing.TopLevelParser r0, $r7;
        java.util.HashMap r1, $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String r6;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $r2 = r0.<com.wildplot.android.parsing.TopLevelParser: java.util.HashMap parserRegister>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r2 = r0.<com.wildplot.android.parsing.TopLevelParser: java.util.HashMap parserRegister>;

        $r5 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        $r7 = (com.wildplot.android.parsing.TopLevelParser) $r5;

        $r7 = virtualinvoke $r7.<com.wildplot.android.parsing.TopLevelParser: com.wildplot.android.parsing.TopLevelParser createCopy(java.util.HashMap)>(r1);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r7);

        goto label1;

     label2:
        r6 = r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String funcName>;

        $r5 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r0 = (com.wildplot.android.parsing.TopLevelParser) $r5;

        return r0;
    }
    public com.wildplot.android.parsing.TopLevelParser createCopy(java.util.HashMap)
    {
        com.wildplot.android.parsing.TopLevelParser r0, $r2;
        java.util.HashMap r1;
        java.lang.String $r3;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        r1 := @parameter0: java.util.HashMap;

        $r2 = new com.wildplot.android.parsing.TopLevelParser;

        $r3 = r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String expressionString>;

        specialinvoke $r2.<com.wildplot.android.parsing.TopLevelParser: void <init>(java.lang.String,java.util.HashMap)>($r3, r1);

        return $r2;
    }
    public double f(double)
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        double $d0;
        boolean $z0;
        com.wildplot.android.parsing.Expression $r1;
        com.wildplot.android.parsing.ExpressionFormatException $r2;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        $d0 := @parameter0: double;

        r0.<com.wildplot.android.parsing.TopLevelParser: double x> = $d0;

        $z0 = r0.<com.wildplot.android.parsing.TopLevelParser: boolean isValid>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.wildplot.android.parsing.TopLevelParser: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r1.<com.wildplot.android.parsing.Expression: double getValue()>();

        return $d0;

     label1:
        $r2 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r2.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("illegal Expression, cannot parse and return value");

        throw $r2;
    }
    public double f(double, double)
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        double $d0, $d1;
        boolean $z0;
        com.wildplot.android.parsing.Expression $r1;
        com.wildplot.android.parsing.ExpressionFormatException $r2;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        r0.<com.wildplot.android.parsing.TopLevelParser: double x> = $d0;

        r0.<com.wildplot.android.parsing.TopLevelParser: double y> = $d1;

        $z0 = r0.<com.wildplot.android.parsing.TopLevelParser: boolean isValid>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.wildplot.android.parsing.TopLevelParser: com.wildplot.android.parsing.Expression expression>;

        $d0 = virtualinvoke $r1.<com.wildplot.android.parsing.Expression: double getValue()>();

        return $d0;

     label1:
        $r2 = new com.wildplot.android.parsing.ExpressionFormatException;

        specialinvoke $r2.<com.wildplot.android.parsing.ExpressionFormatException: void <init>(java.lang.String)>("illegal Expression, cannot parse and return value");

        throw $r2;
    }
    public java.lang.String getFuncName()
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        java.lang.String r1;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        r1 = r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String funcName>;

        return r1;
    }
    public double getFuncVal(java.lang.String, double)
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        java.lang.String $r1;
        double $d0;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        $r1 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        $r2 = r0.<com.wildplot.android.parsing.TopLevelParser: java.util.HashMap parserRegister>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r0 = (com.wildplot.android.parsing.TopLevelParser) $r3;

        $d0 = virtualinvoke r0.<com.wildplot.android.parsing.TopLevelParser: double f(double)>($d0);

        return $d0;
    }
    public double getFuncVal(java.lang.String, double, double)
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        java.lang.String $r1;
        double $d0, $d1;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        $r1 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $r2 = r0.<com.wildplot.android.parsing.TopLevelParser: java.util.HashMap parserRegister>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r0 = (com.wildplot.android.parsing.TopLevelParser) $r3;

        $d0 = virtualinvoke r0.<com.wildplot.android.parsing.TopLevelParser: double f(double,double)>($d0, $d1);

        return $d0;
    }
    public double getVarVal(java.lang.String)
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        java.lang.String $r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.Double $r4;
        double $d0;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.wildplot.android.parsing.TopLevelParser: java.util.HashMap varMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        return $d0;
    }
    public double getX()
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        double d0;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        d0 = r0.<com.wildplot.android.parsing.TopLevelParser: double x>;

        return d0;
    }
    public double getY()
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        double d0;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        d0 = r0.<com.wildplot.android.parsing.TopLevelParser: double y>;

        return d0;
    }
    public java.lang.String getxName()
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        java.lang.String r1;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        r1 = r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String xName>;

        return r1;
    }
    public java.lang.String getyName()
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        java.lang.String r1;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        r1 = r0.<com.wildplot.android.parsing.TopLevelParser: java.lang.String yName>;

        return r1;
    }
    public boolean isValid()
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        boolean z0;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        z0 = r0.<com.wildplot.android.parsing.TopLevelParser: boolean isValid>;

        return z0;
    }
    public void setVarVal(java.lang.String, double)
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        java.lang.String $r1;
        double $d0;
        java.util.HashMap $r2;
        java.lang.Double $r3;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        $r1 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        $r2 = r0.<com.wildplot.android.parsing.TopLevelParser: java.util.HashMap varMap>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }
    public void setVarVal(java.lang.String, java.lang.String)
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        java.lang.String $r1, $r2;
        java.util.HashMap $r3;
        double $d0;
        java.lang.Double $r4;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.wildplot.android.parsing.TopLevelParser: java.util.HashMap varMap>;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r2);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        return;
    }
    public void setX(double)
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        double $d0;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        $d0 := @parameter0: double;

        r0.<com.wildplot.android.parsing.TopLevelParser: double x> = $d0;

        return;
    }
    public void setY(double)
    {
        com.wildplot.android.parsing.TopLevelParser r0;
        double $d0;

        r0 := @this: com.wildplot.android.parsing.TopLevelParser;

        $d0 := @parameter0: double;

        r0.<com.wildplot.android.parsing.TopLevelParser: double y> = $d0;

        return;
    }
