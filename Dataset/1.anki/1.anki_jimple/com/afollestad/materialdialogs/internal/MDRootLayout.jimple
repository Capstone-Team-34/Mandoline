com.afollestad.materialdialogs.internal.MDRootLayout extends android.view.ViewGroup
private static final int INDEX_NEGATIVE
private static final int INDEX_NEUTRAL
private static final int INDEX_POSITIVE
private android.view.ViewTreeObserver$OnScrollChangedListener mBottomOnScrollChangedListener
private int mButtonBarHeight
private com.afollestad.materialdialogs.GravityEnum mButtonGravity
private int mButtonHorizontalEdgeMargin
private int mButtonPaddingFull
private final com.afollestad.materialdialogs.internal.MDButton[] mButtons
private android.view.View mContent
private android.graphics.Paint mDividerPaint
private int mDividerWidth
private boolean mDrawBottomDivider
private boolean mDrawTopDivider
private boolean mIsStacked
private boolean mNoTitleNoPadding
private int mNoTitlePaddingFull
private boolean mReducePaddingNoTitleNoButtons
private com.afollestad.materialdialogs.StackingBehavior mStackBehavior
private android.view.View mTitleBar
private android.view.ViewTreeObserver$OnScrollChangedListener mTopOnScrollChangedListener
private boolean mUseFullPadding
    public void <init>(android.content.Context)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        android.content.Context $r1;
        com.afollestad.materialdialogs.internal.MDButton[] $r2;
        com.afollestad.materialdialogs.StackingBehavior $r3;
        com.afollestad.materialdialogs.GravityEnum $r4;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>($r1);

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawTopDivider> = 0;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawBottomDivider> = 0;

        $r2 = newarray (com.afollestad.materialdialogs.internal.MDButton)[3];

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons> = $r2;

        $r3 = <com.afollestad.materialdialogs.StackingBehavior: com.afollestad.materialdialogs.StackingBehavior ADAPTIVE>;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.StackingBehavior mStackBehavior> = $r3;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mIsStacked> = 0;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mUseFullPadding> = 1;

        $r4 = <com.afollestad.materialdialogs.GravityEnum: com.afollestad.materialdialogs.GravityEnum START>;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.GravityEnum mButtonGravity> = $r4;

        specialinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void init(android.content.Context,android.util.AttributeSet,int)>($r1, null, 0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.afollestad.materialdialogs.internal.MDButton[] $r3;
        com.afollestad.materialdialogs.StackingBehavior $r4;
        com.afollestad.materialdialogs.GravityEnum $r5;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawTopDivider> = 0;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawBottomDivider> = 0;

        $r3 = newarray (com.afollestad.materialdialogs.internal.MDButton)[3];

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons> = $r3;

        $r4 = <com.afollestad.materialdialogs.StackingBehavior: com.afollestad.materialdialogs.StackingBehavior ADAPTIVE>;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.StackingBehavior mStackBehavior> = $r4;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mIsStacked> = 0;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mUseFullPadding> = 1;

        $r5 = <com.afollestad.materialdialogs.GravityEnum: com.afollestad.materialdialogs.GravityEnum START>;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.GravityEnum mButtonGravity> = $r5;

        specialinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void init(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        com.afollestad.materialdialogs.internal.MDButton[] $r3;
        com.afollestad.materialdialogs.StackingBehavior $r4;
        com.afollestad.materialdialogs.GravityEnum $r5;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawTopDivider> = 0;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawBottomDivider> = 0;

        $r3 = newarray (com.afollestad.materialdialogs.internal.MDButton)[3];

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons> = $r3;

        $r4 = <com.afollestad.materialdialogs.StackingBehavior: com.afollestad.materialdialogs.StackingBehavior ADAPTIVE>;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.StackingBehavior mStackBehavior> = $r4;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mIsStacked> = 0;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mUseFullPadding> = 1;

        $r5 = <com.afollestad.materialdialogs.GravityEnum: com.afollestad.materialdialogs.GravityEnum START>;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.GravityEnum mButtonGravity> = $r5;

        specialinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void init(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1;
        com.afollestad.materialdialogs.internal.MDButton[] $r3;
        com.afollestad.materialdialogs.StackingBehavior $r4;
        com.afollestad.materialdialogs.GravityEnum $r5;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($r1, $r2, $i0, $i1);

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawTopDivider> = 0;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawBottomDivider> = 0;

        $r3 = newarray (com.afollestad.materialdialogs.internal.MDButton)[3];

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons> = $r3;

        $r4 = <com.afollestad.materialdialogs.StackingBehavior: com.afollestad.materialdialogs.StackingBehavior ADAPTIVE>;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.StackingBehavior mStackBehavior> = $r4;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mIsStacked> = 0;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mUseFullPadding> = 1;

        $r5 = <com.afollestad.materialdialogs.GravityEnum: com.afollestad.materialdialogs.GravityEnum START>;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.GravityEnum mButtonGravity> = $r5;

        specialinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void init(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }
    static boolean access$000(android.webkit.WebView)
    {
        android.webkit.WebView $r0;
        boolean $z0;

        $r0 := @parameter0: android.webkit.WebView;

        $z0 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean canWebViewScroll(android.webkit.WebView)>($r0);

        return $z0;
    }
    static boolean access$102(com.afollestad.materialdialogs.internal.MDRootLayout, boolean)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout $r0;
        boolean $z0;

        $r0 := @parameter0: com.afollestad.materialdialogs.internal.MDRootLayout;

        $z0 := @parameter1: boolean;

        $r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawTopDivider> = $z0;

        return $z0;
    }
    static boolean access$202(com.afollestad.materialdialogs.internal.MDRootLayout, boolean)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout $r0;
        boolean $z0;

        $r0 := @parameter0: com.afollestad.materialdialogs.internal.MDRootLayout;

        $z0 := @parameter1: boolean;

        $r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawBottomDivider> = $z0;

        return $z0;
    }
    static void access$300(com.afollestad.materialdialogs.internal.MDRootLayout, android.view.ViewGroup, boolean, boolean)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout $r0;
        android.view.ViewGroup $r1;
        boolean $z0, $z1;

        $r0 := @parameter0: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter1: android.view.ViewGroup;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        specialinvoke $r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void addScrollListener(android.view.ViewGroup,boolean,boolean)>($r1, $z0, $z1);

        return;
    }
    static com.afollestad.materialdialogs.internal.MDButton[] access$400(com.afollestad.materialdialogs.internal.MDRootLayout)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout $r0;
        com.afollestad.materialdialogs.internal.MDButton[] r1;

        $r0 := @parameter0: com.afollestad.materialdialogs.internal.MDRootLayout;

        r1 = $r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        return r1;
    }
    static void access$500(com.afollestad.materialdialogs.internal.MDRootLayout, android.webkit.WebView, boolean, boolean, boolean)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout $r0;
        android.webkit.WebView $r1;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter1: android.webkit.WebView;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $z2 := @parameter4: boolean;

        specialinvoke $r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void invalidateDividersForWebView(android.webkit.WebView,boolean,boolean,boolean)>($r1, $z0, $z1, $z2);

        return;
    }
    static void access$600(com.afollestad.materialdialogs.internal.MDRootLayout, android.view.ViewGroup, boolean, boolean, boolean)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout $r0;
        android.view.ViewGroup $r1;
        boolean $z0, $z1, $z2;

        $r0 := @parameter0: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter1: android.view.ViewGroup;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $z2 := @parameter4: boolean;

        specialinvoke $r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void invalidateDividersForScrollingView(android.view.ViewGroup,boolean,boolean,boolean)>($r1, $z0, $z1, $z2);

        return;
    }
    private void addScrollListener(android.view.ViewGroup, boolean, boolean)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        android.view.ViewGroup $r1;
        boolean $z0, $z1;
        com.afollestad.materialdialogs.internal.MDRootLayout$2 r2;
        android.view.ViewTreeObserver$OnScrollChangedListener $r3;
        android.view.ViewTreeObserver $r4;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter0: android.view.ViewGroup;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        if $z1 != 0 goto label1;

        $r3 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.ViewTreeObserver$OnScrollChangedListener mTopOnScrollChangedListener>;

        if $r3 == null goto label2;

     label1:
        if $z1 == 0 goto label5;

        $r3 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.ViewTreeObserver$OnScrollChangedListener mBottomOnScrollChangedListener>;

        if $r3 != null goto label5;

     label2:
        r2 = new com.afollestad.materialdialogs.internal.MDRootLayout$2;

        specialinvoke r2.<com.afollestad.materialdialogs.internal.MDRootLayout$2: void <init>(com.afollestad.materialdialogs.internal.MDRootLayout,android.view.ViewGroup,boolean,boolean)>(r0, $r1, $z0, $z1);

        if $z1 != 0 goto label4;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.ViewTreeObserver$OnScrollChangedListener mTopOnScrollChangedListener> = r2;

        $r4 = virtualinvoke $r1.<android.view.ViewGroup: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.ViewTreeObserver$OnScrollChangedListener mTopOnScrollChangedListener>;

        virtualinvoke $r4.<android.view.ViewTreeObserver: void addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener)>($r3);

     label3:
        interfaceinvoke r2.<android.view.ViewTreeObserver$OnScrollChangedListener: void onScrollChanged()>();

        return;

     label4:
        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.ViewTreeObserver$OnScrollChangedListener mBottomOnScrollChangedListener> = r2;

        $r4 = virtualinvoke $r1.<android.view.ViewGroup: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.ViewTreeObserver$OnScrollChangedListener mBottomOnScrollChangedListener>;

        virtualinvoke $r4.<android.view.ViewTreeObserver: void addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener)>($r3);

        goto label3;

     label5:
        return;
    }
    private static boolean canAdapterViewScroll(android.widget.AdapterView)
    {
        android.widget.AdapterView $r0;
        int $i0, $i1, $i2;
        boolean z0, z1;
        android.view.View $r1;

        $r0 := @parameter0: android.widget.AdapterView;

        $i0 = virtualinvoke $r0.<android.widget.AdapterView: int getLastVisiblePosition()>();

        if $i0 != -1 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r0.<android.widget.AdapterView: int getFirstVisiblePosition()>();

        if $i0 != 0 goto label4;

        z0 = 1;

     label2:
        $i0 = virtualinvoke $r0.<android.widget.AdapterView: int getLastVisiblePosition()>();

        $i1 = virtualinvoke $r0.<android.widget.AdapterView: int getCount()>();

        $i1 = $i1 + -1;

        if $i0 != $i1 goto label5;

        z1 = 1;

     label3:
        if z0 == 0 goto label6;

        if z1 == 0 goto label6;

        $i0 = virtualinvoke $r0.<android.widget.AdapterView: int getChildCount()>();

        if $i0 <= 0 goto label6;

        $r1 = virtualinvoke $r0.<android.widget.AdapterView: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i1 = virtualinvoke $r0.<android.widget.AdapterView: int getPaddingTop()>();

        if $i0 < $i1 goto label6;

        $i0 = virtualinvoke $r0.<android.widget.AdapterView: int getChildCount()>();

        $i0 = $i0 + -1;

        $r1 = virtualinvoke $r0.<android.widget.AdapterView: android.view.View getChildAt(int)>($i0);

        $i0 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i1 = virtualinvoke $r0.<android.widget.AdapterView: int getHeight()>();

        $i2 = virtualinvoke $r0.<android.widget.AdapterView: int getPaddingBottom()>();

        $i1 = $i1 - $i2;

        if $i0 > $i1 goto label6;

        return 0;

     label4:
        z0 = 0;

        goto label2;

     label5:
        z1 = 0;

        goto label3;

     label6:
        return 1;
    }
    public static boolean canRecyclerViewScroll(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView $r0;
        android.support.v7.widget.RecyclerView$Adapter $r1;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        android.support.v7.widget.LinearLayoutManager r3;
        android.view.View $r4;
        com.afollestad.materialdialogs.MaterialDialog$NotImplementedException $r5;

        $r0 := @parameter0: android.support.v7.widget.RecyclerView;

        if $r0 == null goto label6;

        $r1 = virtualinvoke $r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter getAdapter()>();

        if $r1 == null goto label6;

        $r2 = virtualinvoke $r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager()>();

        if $r2 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke $r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager()>();

        $r1 = virtualinvoke $r0.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter getAdapter()>();

        $i0 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Adapter: int getItemCount()>();

        $z0 = $r2 instanceof android.support.v7.widget.LinearLayoutManager;

        if $z0 == 0 goto label4;

        r3 = (android.support.v7.widget.LinearLayoutManager) $r2;

        $i1 = virtualinvoke r3.<android.support.v7.widget.LinearLayoutManager: int findLastVisibleItemPosition()>();

        if $i1 == -1 goto label6;

        $i0 = $i0 + -1;

        if $i1 != $i0 goto label5;

        $z0 = 1;

     label2:
        if $z0 == 0 goto label3;

        $i1 = virtualinvoke $r0.<android.support.v7.widget.RecyclerView: int getChildCount()>();

        if $i1 <= 0 goto label6;

        $i1 = virtualinvoke $r0.<android.support.v7.widget.RecyclerView: int getChildCount()>();

        $i1 = $i1 + -1;

        $r4 = virtualinvoke $r0.<android.support.v7.widget.RecyclerView: android.view.View getChildAt(int)>($i1);

        $i1 = virtualinvoke $r4.<android.view.View: int getBottom()>();

        $i0 = virtualinvoke $r0.<android.support.v7.widget.RecyclerView: int getHeight()>();

        $i2 = virtualinvoke $r0.<android.support.v7.widget.RecyclerView: int getPaddingBottom()>();

        $i0 = $i0 - $i2;

        if $i1 <= $i0 goto label6;

     label3:
        return 1;

     label4:
        $r5 = new com.afollestad.materialdialogs.MaterialDialog$NotImplementedException;

        specialinvoke $r5.<com.afollestad.materialdialogs.MaterialDialog$NotImplementedException: void <init>(java.lang.String)>("Material Dialogs currently only supports LinearLayoutManager. Please report any new layout managers.");

        throw $r5;

     label5:
        $z0 = 0;

        goto label2;

     label6:
        return 0;
    }
    private static boolean canScrollViewScroll(android.widget.ScrollView)
    {
        android.widget.ScrollView $r0;
        int $i0, $i1, $i2;
        android.view.View $r1;

        $r0 := @parameter0: android.widget.ScrollView;

        $i0 = virtualinvoke $r0.<android.widget.ScrollView: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke $r0.<android.widget.ScrollView: android.view.View getChildAt(int)>(0);

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i1 = virtualinvoke $r0.<android.widget.ScrollView: int getMeasuredHeight()>();

        $i2 = virtualinvoke $r0.<android.widget.ScrollView: int getPaddingTop()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke $r0.<android.widget.ScrollView: int getPaddingBottom()>();

        $i1 = $i1 - $i2;

        if $i1 >= $i0 goto label2;

        return 1;

     label2:
        return 0;
    }
    private static boolean canWebViewScroll(android.webkit.WebView)
    {
        android.webkit.WebView $r0;
        int $i0;
        float $f0, $f1, $f2;
        byte $b1;

        $r0 := @parameter0: android.webkit.WebView;

        $i0 = virtualinvoke $r0.<android.webkit.WebView: int getMeasuredHeight()>();

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r0.<android.webkit.WebView: int getContentHeight()>();

        $f1 = (float) $i0;

        $f2 = virtualinvoke $r0.<android.webkit.WebView: float getScale()>();

        $f1 = $f1 * $f2;

        $b1 = $f0 cmpg $f1;

        if $b1 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private static android.view.View getBottomView(android.view.ViewGroup)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1, $i2;
        android.view.View $r1;

        $r0 := @parameter0: android.view.ViewGroup;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i0 = $i0 + -1;

     label3:
        if $i0 < 0 goto label5;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        $i1 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i1 != 0 goto label4;

        $i1 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i2 = virtualinvoke $r0.<android.view.ViewGroup: int getMeasuredHeight()>();

        if $i1 != $i2 goto label4;

        return $r1;

     label4:
        $i0 = $i0 + -1;

        goto label3;

     label5:
        return null;
    }
    private static android.view.View getTopView(android.view.ViewGroup)
    {
        android.view.ViewGroup $r0;
        int $i0, $i1;
        android.view.View $r1;

        $r0 := @parameter0: android.view.ViewGroup;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $i0 = virtualinvoke $r0.<android.view.ViewGroup: int getChildCount()>();

        $i0 = $i0 + -1;

     label3:
        if $i0 < 0 goto label5;

        $r1 = virtualinvoke $r0.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        $i1 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i1 != 0 goto label4;

        $i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        if $i1 != 0 goto label4;

        return $r1;

     label4:
        $i0 = $i0 + -1;

        goto label3;

     label5:
        return null;
    }
    private void init(android.content.Context, android.util.AttributeSet, int)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        android.content.res.Resources $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        boolean $z0;
        android.graphics.Paint $r6;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = <com.afollestad.materialdialogs.R$styleable: int[] MDRootLayout>;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r4, $i0, 0);

        $i0 = <com.afollestad.materialdialogs.R$styleable: int MDRootLayout_md_reduce_padding_no_title_no_buttons>;

        $z0 = virtualinvoke $r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mReducePaddingNoTitleNoButtons> = $z0;

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $i0 = <com.afollestad.materialdialogs.R$dimen: int md_notitle_vertical_padding>;

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mNoTitlePaddingFull> = $i0;

        $i0 = <com.afollestad.materialdialogs.R$dimen: int md_button_frame_vertical_padding>;

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonPaddingFull> = $i0;

        $i0 = <com.afollestad.materialdialogs.R$dimen: int md_button_padding_frame_side>;

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonHorizontalEdgeMargin> = $i0;

        $i0 = <com.afollestad.materialdialogs.R$dimen: int md_button_height>;

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonBarHeight> = $i0;

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>()>();

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.graphics.Paint mDividerPaint> = $r6;

        $i0 = <com.afollestad.materialdialogs.R$dimen: int md_divider_height>;

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mDividerWidth> = $i0;

        $r6 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.graphics.Paint mDividerPaint>;

        $i0 = <com.afollestad.materialdialogs.R$attr: int md_divider_color>;

        $i0 = staticinvoke <com.afollestad.materialdialogs.util.DialogUtils: int resolveColor(android.content.Context,int)>($r1, $i0);

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void setWillNotDraw(boolean)>(0);

        return;
    }
    private void invalidateDividersForScrollingView(android.view.ViewGroup, boolean, boolean, boolean)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        android.view.ViewGroup $r1;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        android.view.View $r2;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter0: android.view.ViewGroup;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        $z3 = 1;

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 0 goto label2;

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mTitleBar>;

        if $r2 == null goto label4;

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mTitleBar>;

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 == 8 goto label4;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getScrollY()>();

        $i1 = virtualinvoke $r1.<android.view.ViewGroup: int getPaddingTop()>();

        $i0 = $i0 + $i1;

        $r2 = virtualinvoke $r1.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        if $i0 <= $i1 goto label4;

        $z0 = 1;

     label1:
        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawTopDivider> = $z0;

     label2:
        if $z1 == 0 goto label6;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getChildCount()>();

        if $i0 <= 0 goto label6;

        if $z2 == 0 goto label5;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getScrollY()>();

        $i1 = virtualinvoke $r1.<android.view.ViewGroup: int getHeight()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r1.<android.view.ViewGroup: int getPaddingBottom()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r1.<android.view.ViewGroup: int getChildCount()>();

        $i1 = $i1 + -1;

        $r2 = virtualinvoke $r1.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        $i1 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        if $i0 >= $i1 goto label5;

     label3:
        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawBottomDivider> = $z3;

        return;

     label4:
        $z0 = 0;

        goto label1;

     label5:
        $z3 = 0;

        goto label3;

     label6:
        return;
    }
    private void invalidateDividersForWebView(android.webkit.WebView, boolean, boolean, boolean)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        android.webkit.WebView $r1;
        boolean $z0, $z1, $z2, $z3;
        android.view.View $r2;
        int $i0, $i1;
        float $f0, $f1, $f2;
        byte $b2;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter0: android.webkit.WebView;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        $z3 = 1;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mTitleBar>;

        if $r2 == null goto label4;

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mTitleBar>;

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 == 8 goto label4;

        $i0 = virtualinvoke $r1.<android.webkit.WebView: int getScrollY()>();

        $i1 = virtualinvoke $r1.<android.webkit.WebView: int getPaddingTop()>();

        $i0 = $i0 + $i1;

        if $i0 <= 0 goto label4;

        $z0 = 1;

     label1:
        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawTopDivider> = $z0;

     label2:
        if $z1 == 0 goto label6;

        if $z2 == 0 goto label5;

        $i0 = virtualinvoke $r1.<android.webkit.WebView: int getScrollY()>();

        $i1 = virtualinvoke $r1.<android.webkit.WebView: int getMeasuredHeight()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r1.<android.webkit.WebView: int getPaddingBottom()>();

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.webkit.WebView: int getContentHeight()>();

        $f1 = (float) $i0;

        $f2 = virtualinvoke $r1.<android.webkit.WebView: float getScale()>();

        $f1 = $f1 * $f2;

        $b2 = $f0 cmpg $f1;

        if $b2 >= 0 goto label5;

     label3:
        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawBottomDivider> = $z3;

        return;

     label4:
        $z0 = 0;

        goto label1;

     label5:
        $z3 = 0;

        goto label3;

     label6:
        return;
    }
    private void invertGravityIfNecessary()
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        int $i0;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;
        int[] $r3;
        com.afollestad.materialdialogs.GravityEnum $r4;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 17 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = virtualinvoke $r2.<android.content.res.Configuration: int getLayoutDirection()>();

        if $i0 != 1 goto label5;

        $r3 = <com.afollestad.materialdialogs.internal.MDRootLayout$3: int[] $SwitchMap$com$afollestad$materialdialogs$GravityEnum>;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.GravityEnum mButtonGravity>;

        $i0 = virtualinvoke $r4.<com.afollestad.materialdialogs.GravityEnum: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            default: goto label2;
        };

     label2:
        return;

     label3:
        $r4 = <com.afollestad.materialdialogs.GravityEnum: com.afollestad.materialdialogs.GravityEnum END>;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.GravityEnum mButtonGravity> = $r4;

        return;

     label4:
        $r4 = <com.afollestad.materialdialogs.GravityEnum: com.afollestad.materialdialogs.GravityEnum START>;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.GravityEnum mButtonGravity> = $r4;

     label5:
        return;
    }
    private static boolean isVisible(android.view.View)
    {
        android.view.View r0;
        int $i0;
        boolean z0, $z1;
        com.afollestad.materialdialogs.internal.MDButton r1;
        java.lang.CharSequence $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.view.View;

        if r0 == null goto label2;

        $i0 = virtualinvoke r0.<android.view.View: int getVisibility()>();

        if $i0 == 8 goto label2;

        z0 = 1;

     label1:
        if z0 == 0 goto label4;

        $z1 = r0 instanceof com.afollestad.materialdialogs.internal.MDButton;

        if $z1 == 0 goto label4;

        r1 = (com.afollestad.materialdialogs.internal.MDButton) r0;

        $r2 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: java.lang.CharSequence getText()>();

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        return 1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        return 0;

     label4:
        return z0;
    }
    private void setUpDividersVisibility(android.view.View, boolean, boolean)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        boolean $z0, $z1, $z2;
        android.view.View r1, $r8;
        android.widget.ScrollView r2;
        android.widget.AdapterView r3;
        android.view.ViewTreeObserver $r4;
        com.afollestad.materialdialogs.internal.MDRootLayout$1 $r5;
        android.support.v7.widget.RecyclerView r6;
        android.view.ViewGroup $r7;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        if r1 != null goto label01;

        return;

     label01:
        $z2 = r1 instanceof android.widget.ScrollView;

        if $z2 == 0 goto label04;

        r2 = (android.widget.ScrollView) r1;

        $z2 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean canScrollViewScroll(android.widget.ScrollView)>(r2);

        if $z2 == 0 goto label02;

        specialinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void addScrollListener(android.view.ViewGroup,boolean,boolean)>(r2, $z0, $z1);

        return;

     label02:
        if $z0 == 0 goto label03;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawTopDivider> = 0;

     label03:
        if $z1 == 0 goto label11;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawBottomDivider> = 0;

        return;

     label04:
        $z2 = r1 instanceof android.widget.AdapterView;

        if $z2 == 0 goto label07;

        r3 = (android.widget.AdapterView) r1;

        $z2 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean canAdapterViewScroll(android.widget.AdapterView)>(r3);

        if $z2 == 0 goto label05;

        specialinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void addScrollListener(android.view.ViewGroup,boolean,boolean)>(r3, $z0, $z1);

        return;

     label05:
        if $z0 == 0 goto label06;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawTopDivider> = 0;

     label06:
        if $z1 == 0 goto label11;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawBottomDivider> = 0;

        return;

     label07:
        $z2 = r1 instanceof android.webkit.WebView;

        if $z2 == 0 goto label08;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r5 = new com.afollestad.materialdialogs.internal.MDRootLayout$1;

        specialinvoke $r5.<com.afollestad.materialdialogs.internal.MDRootLayout$1: void <init>(com.afollestad.materialdialogs.internal.MDRootLayout,android.view.View,boolean,boolean)>(r0, r1, $z0, $z1);

        virtualinvoke $r4.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r5);

        return;

     label08:
        $z2 = r1 instanceof android.support.v7.widget.RecyclerView;

        if $z2 == 0 goto label10;

        r6 = (android.support.v7.widget.RecyclerView) r1;

        $z2 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean canRecyclerViewScroll(android.support.v7.widget.RecyclerView)>(r6);

        if $z0 == 0 goto label09;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawTopDivider> = $z2;

     label09:
        if $z1 == 0 goto label11;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawBottomDivider> = $z2;

        return;

     label10:
        $z2 = r1 instanceof android.view.ViewGroup;

        if $z2 == 0 goto label11;

        $r7 = (android.view.ViewGroup) r1;

        $r8 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View getTopView(android.view.ViewGroup)>($r7);

        specialinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void setUpDividersVisibility(android.view.View,boolean,boolean)>($r8, $z0, $z1);

        $r7 = (android.view.ViewGroup) r1;

        r1 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View getBottomView(android.view.ViewGroup)>($r7);

        if r1 == $r8 goto label11;

        specialinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void setUpDividersVisibility(android.view.View,boolean,boolean)>(r1, 0, 1);

     label11:
        return;
    }
    public void noTitleNoPadding()
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mNoTitleNoPadding> = 1;

        return;
    }
    public void onDraw(android.graphics.Canvas)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        android.graphics.Canvas $r1;
        android.view.View $r2;
        boolean $z0;
        int $i0, $i1;
        float $f0, $f1, $f2;
        android.graphics.Paint $r3;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>($r1);

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mContent>;

        if $r2 == null goto label2;

        $z0 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawTopDivider>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mContent>;

        $i0 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i1 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mDividerWidth>;

        $i1 = $i0 - $i1;

        $f0 = (float) $i1;

        $i1 = virtualinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int getMeasuredWidth()>();

        $f1 = (float) $i1;

        $f2 = (float) $i0;

        $r3 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.graphics.Paint mDividerPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, $f0, $f1, $f2, $r3);

     label1:
        $z0 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mDrawBottomDivider>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mContent>;

        $i0 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $f0 = (float) $i0;

        $i1 = virtualinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int getMeasuredWidth()>();

        $f1 = (float) $i1;

        $i1 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mDividerWidth>;

        $i0 = $i1 + $i0;

        $f2 = (float) $i0;

        $r3 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.graphics.Paint mDividerPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, $f0, $f1, $f2, $r3);

     label2:
        return;
    }
    public void onFinishInflate()
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        int i0, $i1, $i2;
        android.view.View $r1;
        com.afollestad.materialdialogs.internal.MDButton[] $r2;
        com.afollestad.materialdialogs.internal.MDButton r3;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        specialinvoke r0.<android.view.ViewGroup: void onFinishInflate()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int getChildCount()>();

        if i0 >= $i1 goto label7;

        $r1 = virtualinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View getChildAt(int)>(i0);

        $i1 = virtualinvoke $r1.<android.view.View: int getId()>();

        $i2 = <com.afollestad.materialdialogs.R$id: int titleFrame>;

        if $i1 != $i2 goto label3;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mTitleBar> = $r1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $i1 = virtualinvoke $r1.<android.view.View: int getId()>();

        $i2 = <com.afollestad.materialdialogs.R$id: int buttonDefaultNeutral>;

        if $i1 != $i2 goto label4;

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r3 = (com.afollestad.materialdialogs.internal.MDButton) $r1;

        $r2[0] = r3;

        goto label2;

     label4:
        $i1 = virtualinvoke $r1.<android.view.View: int getId()>();

        $i2 = <com.afollestad.materialdialogs.R$id: int buttonDefaultNegative>;

        if $i1 != $i2 goto label5;

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r3 = (com.afollestad.materialdialogs.internal.MDButton) $r1;

        $r2[1] = r3;

        goto label2;

     label5:
        $i1 = virtualinvoke $r1.<android.view.View: int getId()>();

        $i2 = <com.afollestad.materialdialogs.R$id: int buttonDefaultPositive>;

        if $i1 != $i2 goto label6;

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r3 = (com.afollestad.materialdialogs.internal.MDButton) $r1;

        $r2[2] = r3;

        goto label2;

     label6:
        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mContent> = $r1;

        goto label2;

     label7:
        return;
    }
    protected void onLayout(boolean, int, int, int, int)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        boolean $z0;
        int $i0, $i1, i2, $i3, $i4, $i5, i6, i7, $i8;
        com.afollestad.materialdialogs.internal.MDButton r1;
        android.view.View $r2, $r3;
        com.afollestad.materialdialogs.internal.MDButton[] $r4;
        com.afollestad.materialdialogs.GravityEnum $r5, $r6;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i3 := @parameter2: int;

        $i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mTitleBar>;

        $z0 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean isVisible(android.view.View)>($r2);

        if $z0 == 0 goto label05;

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mTitleBar>;

        $i4 = virtualinvoke $r2.<android.view.View: int getMeasuredHeight()>();

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mTitleBar>;

        $i5 = $i3 + $i4;

        virtualinvoke $r2.<android.view.View: void layout(int,int,int,int)>($i0, $i3, $i1, $i5);

        $i3 = $i3 + $i4;

     label01:
        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mContent>;

        $z0 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean isVisible(android.view.View)>($r2);

        if $z0 == 0 goto label02;

        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mContent>;

        $r3 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mContent>;

        $i4 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();

        $i4 = $i4 + $i3;

        virtualinvoke $r2.<android.view.View: void layout(int,int,int,int)>($i0, $i3, $i1, $i4);

     label02:
        $z0 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mIsStacked>;

        if $z0 == 0 goto label06;

        $i3 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonPaddingFull>;

        $i3 = i2 - $i3;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        i2 = lengthof $r4;

        $i4 = 0;

     label03:
        if $i4 >= i2 goto label13;

        r1 = $r4[$i4];

        $z0 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean isVisible(android.view.View)>(r1);

        if $z0 == 0 goto label04;

        $i5 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredHeight()>();

        $i5 = $i3 - $i5;

        virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: void layout(int,int,int,int)>($i0, $i5, $i1, $i3);

        $i5 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredHeight()>();

        $i3 = $i3 - $i5;

     label04:
        $i4 = $i4 + 1;

        goto label03;

     label05:
        $z0 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mNoTitleNoPadding>;

        if $z0 != 0 goto label01;

        $z0 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mUseFullPadding>;

        if $z0 == 0 goto label01;

        $i4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mNoTitlePaddingFull>;

        $i3 = $i3 + $i4;

        goto label01;

     label06:
        $i3 = i2;

        $z0 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mUseFullPadding>;

        if $z0 == 0 goto label07;

        $i3 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonPaddingFull>;

        $i3 = i2 - $i3;

     label07:
        i2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonBarHeight>;

        i2 = $i3 - i2;

        i6 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonHorizontalEdgeMargin>;

        $i5 = -1;

        $i4 = -1;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[2];

        $z0 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean isVisible(android.view.View)>(r1);

        if $z0 == 0 goto label09;

        $r5 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.GravityEnum mButtonGravity>;

        $r6 = <com.afollestad.materialdialogs.GravityEnum: com.afollestad.materialdialogs.GravityEnum END>;

        if $r5 != $r6 goto label14;

        i7 = $i0 + i6;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[2];

        $i8 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredWidth()>();

        $i8 = i7 + $i8;

     label08:
        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[2];

        virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: void layout(int,int,int,int)>(i7, i2, $i8, $i3);

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[2];

        i7 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredWidth()>();

        i6 = i6 + i7;

     label09:
        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[1];

        $z0 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean isVisible(android.view.View)>(r1);

        if $z0 == 0 goto label11;

        $r5 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.GravityEnum mButtonGravity>;

        $r6 = <com.afollestad.materialdialogs.GravityEnum: com.afollestad.materialdialogs.GravityEnum END>;

        if $r5 != $r6 goto label15;

        i6 = $i0 + i6;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[1];

        i7 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredWidth()>();

        i7 = i6 + i7;

     label10:
        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[1];

        virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: void layout(int,int,int,int)>(i6, i2, i7, $i3);

     label11:
        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[0];

        $z0 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean isVisible(android.view.View)>(r1);

        if $z0 == 0 goto label13;

        $r5 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.GravityEnum mButtonGravity>;

        $r6 = <com.afollestad.materialdialogs.GravityEnum: com.afollestad.materialdialogs.GravityEnum END>;

        if $r5 != $r6 goto label17;

        $i0 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonHorizontalEdgeMargin>;

        $i1 = $i1 - $i0;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[0];

        $i0 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredWidth()>();

        $i0 = $i1 - $i0;

     label12:
        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[0];

        virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: void layout(int,int,int,int)>($i0, i2, $i1, $i3);

     label13:
        $r2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mContent>;

        specialinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void setUpDividersVisibility(android.view.View,boolean,boolean)>($r2, 1, 1);

        return;

     label14:
        $i8 = $i1 - i6;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[2];

        $i4 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredWidth()>();

        i7 = $i8 - $i4;

        $i4 = i7;

        goto label08;

     label15:
        $r5 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.GravityEnum mButtonGravity>;

        $r6 = <com.afollestad.materialdialogs.GravityEnum: com.afollestad.materialdialogs.GravityEnum START>;

        if $r5 != $r6 goto label16;

        i7 = $i1 - i6;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[1];

        i6 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredWidth()>();

        i6 = i7 - i6;

        goto label10;

     label16:
        $i5 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonHorizontalEdgeMargin>;

        i6 = $i0 + $i5;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[1];

        $i5 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredWidth()>();

        i7 = i6 + $i5;

        $i5 = i7;

        goto label10;

     label17:
        $r5 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.GravityEnum mButtonGravity>;

        $r6 = <com.afollestad.materialdialogs.GravityEnum: com.afollestad.materialdialogs.GravityEnum START>;

        if $r5 != $r6 goto label18;

        $i1 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonHorizontalEdgeMargin>;

        $i0 = $i0 + $i1;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[0];

        $i1 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredWidth()>();

        $i1 = $i0 + $i1;

        goto label12;

     label18:
        if $i5 != -1 goto label20;

        if $i4 == -1 goto label20;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[0];

        $i0 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredWidth()>();

        $i5 = $i4 - $i0;

     label19:
        $i0 = $i5;

        $i1 = $i4;

        goto label12;

     label20:
        if $i4 != -1 goto label21;

        if $i5 == -1 goto label21;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[0];

        $i0 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredWidth()>();

        $i4 = $i5 + $i0;

        goto label19;

     label21:
        if $i4 != -1 goto label19;

        $i0 = $i1 - $i0;

        $i0 = $i0 / 2;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[0];

        $i1 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredWidth()>();

        $i1 = $i1 / 2;

        $i5 = $i0 - $i1;

        $r4 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        r1 = $r4[0];

        $i0 = virtualinvoke r1.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredWidth()>();

        $i4 = $i5 + $i0;

        goto label19;
    }
    public void onMeasure(int, int)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        int $i0, $i1, i2, $i3, $i4, i5, $i6, $i7;
        boolean z0, z1;
        com.afollestad.materialdialogs.StackingBehavior $r1, $r2;
        com.afollestad.materialdialogs.internal.MDButton[] $r3;
        com.afollestad.materialdialogs.internal.MDButton r4;
        android.content.Context $r5;
        android.content.res.Resources $r6;
        android.view.View $r7;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mUseFullPadding> = 1;

        z0 = 0;

        $r1 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.StackingBehavior mStackBehavior>;

        $r2 = <com.afollestad.materialdialogs.StackingBehavior: com.afollestad.materialdialogs.StackingBehavior ALWAYS>;

        if $r1 != $r2 goto label04;

        z1 = 1;

     label01:
        i5 = 0;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mIsStacked> = z1;

        if z1 == 0 goto label10;

        $r3 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        i2 = lengthof $r3;

        $i6 = 0;

     label02:
        if $i6 >= i2 goto label10;

        r4 = $r3[$i6];

        if r4 == null goto label03;

        z1 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean isVisible(android.view.View)>(r4);

        if z1 == 0 goto label03;

        virtualinvoke r4.<com.afollestad.materialdialogs.internal.MDButton: void setStacked(boolean,boolean)>(1, 0);

        virtualinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void measureChild(android.view.View,int,int)>(r4, $i0, $i1);

        $i7 = virtualinvoke r4.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredHeight()>();

        i5 = i5 + $i7;

        z0 = 1;

     label03:
        $i6 = $i6 + 1;

        goto label02;

     label04:
        $r1 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.StackingBehavior mStackBehavior>;

        $r2 = <com.afollestad.materialdialogs.StackingBehavior: com.afollestad.materialdialogs.StackingBehavior NEVER>;

        if $r1 != $r2 goto label05;

        z1 = 0;

        goto label01;

     label05:
        i5 = 0;

        $r3 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        i2 = lengthof $r3;

        $i6 = 0;

     label06:
        if $i6 >= i2 goto label08;

        r4 = $r3[$i6];

        if r4 == null goto label07;

        z1 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean isVisible(android.view.View)>(r4);

        if z1 == 0 goto label07;

        virtualinvoke r4.<com.afollestad.materialdialogs.internal.MDButton: void setStacked(boolean,boolean)>(0, 0);

        virtualinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void measureChild(android.view.View,int,int)>(r4, $i0, $i1);

        $i7 = virtualinvoke r4.<com.afollestad.materialdialogs.internal.MDButton: int getMeasuredWidth()>();

        i5 = i5 + $i7;

        z0 = 1;

     label07:
        $i6 = $i6 + 1;

        goto label06;

     label08:
        $r5 = virtualinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        i2 = <com.afollestad.materialdialogs.R$dimen: int md_neutral_button_margin>;

        i2 = virtualinvoke $r6.<android.content.res.Resources: int getDimensionPixelSize(int)>(i2);

        i2 = i2 * 2;

        i2 = $i3 - i2;

        if i5 <= i2 goto label09;

        z1 = 1;

        goto label01;

     label09:
        z1 = 0;

        goto label01;

     label10:
        $i0 = $i4;

        $i1 = 0;

        if z0 == 0 goto label16;

        z1 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mIsStacked>;

        if z1 == 0 goto label15;

        $i0 = $i4 - i5;

        $i1 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonPaddingFull>;

        $i1 = $i1 * 2;

        i5 = $i1;

        $i1 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonPaddingFull>;

        $i1 = $i1 * 2;

     label11:
        $r7 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mTitleBar>;

        z1 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean isVisible(android.view.View)>($r7);

        if z1 == 0 goto label17;

        $r7 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mTitleBar>;

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 1073741824);

        virtualinvoke $r7.<android.view.View: void measure(int,int)>(i2, 0);

        $r7 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mTitleBar>;

        i2 = virtualinvoke $r7.<android.view.View: int getMeasuredHeight()>();

        $i0 = $i0 - i2;

     label12:
        $r7 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mContent>;

        z1 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean isVisible(android.view.View)>($r7);

        if z1 == 0 goto label14;

        $r7 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mContent>;

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 1073741824);

        $i6 = $i0 - $i1;

        $i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, -2147483648);

        virtualinvoke $r7.<android.view.View: void measure(int,int)>(i2, $i6);

        $r7 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mContent>;

        i2 = virtualinvoke $r7.<android.view.View: int getMeasuredHeight()>();

        $i6 = $i0 - i5;

        if i2 > $i6 goto label19;

        z1 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mReducePaddingNoTitleNoButtons>;

        if z1 == 0 goto label13;

        $r7 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mTitleBar>;

        z1 = staticinvoke <com.afollestad.materialdialogs.internal.MDRootLayout: boolean isVisible(android.view.View)>($r7);

        if z1 != 0 goto label13;

        if z0 == 0 goto label18;

     label13:
        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mUseFullPadding> = 1;

        $r7 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mContent>;

        $i1 = virtualinvoke $r7.<android.view.View: int getMeasuredHeight()>();

        $i1 = $i1 + i5;

        $i0 = $i0 - $i1;

     label14:
        $i0 = $i4 - $i0;

        virtualinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void setMeasuredDimension(int,int)>($i3, $i0);

        return;

     label15:
        $i0 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonBarHeight>;

        $i0 = $i4 - $i0;

        i5 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonPaddingFull>;

        i5 = i5 * 2;

        goto label11;

     label16:
        i5 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mButtonPaddingFull>;

        i5 = i5 * 2;

        goto label11;

     label17:
        z1 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mNoTitleNoPadding>;

        if z1 != 0 goto label12;

        i2 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: int mNoTitlePaddingFull>;

        i5 = i5 + i2;

        goto label12;

     label18:
        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mUseFullPadding> = 0;

        $r7 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.view.View mContent>;

        i5 = virtualinvoke $r7.<android.view.View: int getMeasuredHeight()>();

        $i1 = i5 + $i1;

        $i0 = $i0 - $i1;

        goto label14;

     label19:
        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: boolean mUseFullPadding> = 0;

        $i0 = 0;

        goto label14;
    }
    public void setButtonGravity(com.afollestad.materialdialogs.GravityEnum)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        com.afollestad.materialdialogs.GravityEnum $r1;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter0: com.afollestad.materialdialogs.GravityEnum;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.GravityEnum mButtonGravity> = $r1;

        specialinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void invertGravityIfNecessary()>();

        return;
    }
    public void setButtonStackedGravity(com.afollestad.materialdialogs.GravityEnum)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        com.afollestad.materialdialogs.GravityEnum $r1;
        com.afollestad.materialdialogs.internal.MDButton r2;
        com.afollestad.materialdialogs.internal.MDButton[] $r3;
        int $i0, $i1;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter0: com.afollestad.materialdialogs.GravityEnum;

        $r3 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.internal.MDButton[] mButtons>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r2 = $r3[$i1];

        if r2 == null goto label2;

        virtualinvoke r2.<com.afollestad.materialdialogs.internal.MDButton: void setStackedGravity(com.afollestad.materialdialogs.GravityEnum)>($r1);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }
    public void setDividerColor(int)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<com.afollestad.materialdialogs.internal.MDRootLayout: android.graphics.Paint mDividerPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void invalidate()>();

        return;
    }
    public void setStackingBehavior(com.afollestad.materialdialogs.StackingBehavior)
    {
        com.afollestad.materialdialogs.internal.MDRootLayout r0;
        com.afollestad.materialdialogs.StackingBehavior $r1;

        r0 := @this: com.afollestad.materialdialogs.internal.MDRootLayout;

        $r1 := @parameter0: com.afollestad.materialdialogs.StackingBehavior;

        r0.<com.afollestad.materialdialogs.internal.MDRootLayout: com.afollestad.materialdialogs.StackingBehavior mStackBehavior> = $r1;

        virtualinvoke r0.<com.afollestad.materialdialogs.internal.MDRootLayout: void invalidate()>();

        return;
    }
