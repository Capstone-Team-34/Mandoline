com.google.gson.internal.LinkedHashTreeMap$AvlBuilder extends java.lang.Object
private int leavesSkipped
private int leavesToSkip
private int size
private com.google.gson.internal.LinkedHashTreeMap$Node stack
    void <init>()
    {
        com.google.gson.internal.LinkedHashTreeMap$AvlBuilder r0;

        r0 := @this: com.google.gson.internal.LinkedHashTreeMap$AvlBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    void add(com.google.gson.internal.LinkedHashTreeMap$Node)
    {
        com.google.gson.internal.LinkedHashTreeMap$AvlBuilder r0;
        com.google.gson.internal.LinkedHashTreeMap$Node r1, $r2, r3, $r4;
        int $i0, $i1, $i2;

        r0 := @this: com.google.gson.internal.LinkedHashTreeMap$AvlBuilder;

        r1 := @parameter0: com.google.gson.internal.LinkedHashTreeMap$Node;

        r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right> = null;

        r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = null;

        r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left> = null;

        r1.<com.google.gson.internal.LinkedHashTreeMap$Node: int height> = 1;

        $i0 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip>;

        if $i0 <= 0 goto label1;

        $i0 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size>;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label1;

        $i0 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size>;

        $i0 = $i0 + 1;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size> = $i0;

        $i0 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip>;

        $i0 = $i0 + -1;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip> = $i0;

        $i0 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped>;

        $i0 = $i0 + 1;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped> = $i0;

     label1:
        $r2 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack>;

        r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r2;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack> = r1;

        $i0 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size>;

        $i0 = $i0 + 1;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size> = $i0;

        $i0 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip>;

        if $i0 <= 0 goto label2;

        $i0 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size>;

        $i0 = $i0 & 1;

        if $i0 != 0 goto label2;

        $i0 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size>;

        $i0 = $i0 + 1;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size> = $i0;

        $i0 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip>;

        $i0 = $i0 + -1;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip> = $i0;

        $i0 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped>;

        $i0 = $i0 + 1;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped> = $i0;

     label2:
        $i0 = 4;

     label3:
        $i1 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size>;

        $i2 = $i0 + -1;

        $i1 = $i1 & $i2;

        $i2 = $i0 + -1;

        if $i1 != $i2 goto label7;

        $i1 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped>;

        if $i1 != 0 goto label5;

        $r2 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack>;

        r3 = $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent>;

        r1 = r3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent>;

        $r4 = r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent>;

        r3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r4;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack> = r3;

        r3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left> = r1;

        r3.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right> = $r2;

        $i1 = $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

        $i1 = $i1 + 1;

        r3.<com.google.gson.internal.LinkedHashTreeMap$Node: int height> = $i1;

        r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = r3;

        $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = r3;

     label4:
        $i0 = $i0 * 2;

        goto label3;

     label5:
        $i1 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped>;

        if $i1 != 1 goto label6;

        r1 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack>;

        $r2 = r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent>;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack> = $r2;

        $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right> = r1;

        $i1 = r1.<com.google.gson.internal.LinkedHashTreeMap$Node: int height>;

        $i1 = $i1 + 1;

        $r2.<com.google.gson.internal.LinkedHashTreeMap$Node: int height> = $i1;

        r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent> = $r2;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped> = 0;

        goto label4;

     label6:
        $i1 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped>;

        if $i1 != 2 goto label4;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped> = 0;

        goto label4;

     label7:
        return;
    }
    void reset(int)
    {
        com.google.gson.internal.LinkedHashTreeMap$AvlBuilder r0;
        int $i0, i1;

        r0 := @this: com.google.gson.internal.LinkedHashTreeMap$AvlBuilder;

        $i0 := @parameter0: int;

        i1 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($i0);

        i1 = i1 * 2;

        i1 = i1 + -1;

        $i0 = i1 - $i0;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip> = $i0;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size> = 0;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped> = 0;

        r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack> = null;

        return;
    }
    com.google.gson.internal.LinkedHashTreeMap$Node root()
    {
        com.google.gson.internal.LinkedHashTreeMap$AvlBuilder r0;
        com.google.gson.internal.LinkedHashTreeMap$Node r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: com.google.gson.internal.LinkedHashTreeMap$AvlBuilder;

        r1 = r0.<com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack>;

        $r2 = r1.<com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent>;

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        return r1;
    }
