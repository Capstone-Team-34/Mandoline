com.getbase.floatingactionbutton.FloatingActionButton extends android.widget.ImageButton
public static final int SIZE_MINI
public static final int SIZE_NORMAL
private float mCircleSize
int mColorDisabled
int mColorNormal
int mColorPressed
private int mDrawableSize
private int mIcon
private android.graphics.drawable.Drawable mIconDrawable
private float mShadowOffset
private float mShadowRadius
private int mSize
boolean mStrokeVisible
java.lang.String mTitle
    public void <init>(android.content.Context)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        android.content.Context $r1;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void init(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void init(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }
    private int adjustColorBrightness(int, float)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0;
        float $f0, $f1;
        float[] r1;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        r1 = newarray (float)[3];

        staticinvoke <android.graphics.Color: void colorToHSV(int,float[])>($i0, r1);

        $f1 = r1[2];

        $f0 = $f1 * $f0;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, 1.0F);

        r1[2] = $f0;

        $i0 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>($i0, r1);

        return $i0;
    }
    private android.graphics.drawable.Drawable createCircleDrawable(int, float)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1;
        float $f0;
        android.graphics.drawable.Drawable[] r2;
        android.graphics.Paint $r3;
        android.graphics.drawable.Drawable $r4;
        boolean $z0;
        android.graphics.drawable.LayerDrawable r5, $r8;
        android.graphics.drawable.shapes.OvalShape $r6;
        android.graphics.drawable.ShapeDrawable $r7;
        com.getbase.floatingactionbutton.FloatingActionButton$TranslucentLayerDrawable $r9;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        $i0 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int opaque(int)>($i0);

        $r7 = new android.graphics.drawable.ShapeDrawable;

        $r6 = new android.graphics.drawable.shapes.OvalShape;

        specialinvoke $r6.<android.graphics.drawable.shapes.OvalShape: void <init>()>();

        specialinvoke $r7.<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>($r6);

        $r3 = virtualinvoke $r7.<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        r2 = newarray (android.graphics.drawable.Drawable)[2];

        r2[0] = $r7;

        $r4 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable createInnerStrokesDrawable(int,float)>($i0, $f0);

        r2[1] = $r4;

        if $i1 == 255 goto label1;

        $z0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: boolean mStrokeVisible>;

        if $z0 != 0 goto label3;

     label1:
        $r8 = new android.graphics.drawable.LayerDrawable;

        r5 = $r8;

        specialinvoke $r8.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>(r2);

     label2:
        $f0 = $f0 / 2.0F;

        $i0 = (int) $f0;

        virtualinvoke r5.<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>(1, $i0, $i0, $i0, $i0);

        return r5;

     label3:
        $r9 = new com.getbase.floatingactionbutton.FloatingActionButton$TranslucentLayerDrawable;

        r5 = $r9;

        specialinvoke $r9.<com.getbase.floatingactionbutton.FloatingActionButton$TranslucentLayerDrawable: void <init>(int,android.graphics.drawable.Drawable[])>($i1, r2);

        goto label2;
    }
    private android.graphics.drawable.StateListDrawable createFillDrawable(float)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        float $f0;
        android.graphics.drawable.StateListDrawable r1;
        int[] $r2;
        int $i0;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $f0 := @parameter0: float;

        r1 = new android.graphics.drawable.StateListDrawable;

        specialinvoke r1.<android.graphics.drawable.StateListDrawable: void <init>()>();

        $r2 = newarray (int)[1];

        $r2[0] = -16842910;

        $i0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorDisabled>;

        $r3 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable createCircleDrawable(int,float)>($i0, $f0);

        virtualinvoke r1.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r2, $r3);

        $r2 = newarray (int)[1];

        $r2[0] = 16842919;

        $i0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorPressed>;

        $r3 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable createCircleDrawable(int,float)>($i0, $f0);

        virtualinvoke r1.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r2, $r3);

        $r2 = newarray (int)[0];

        $i0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorNormal>;

        $r3 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable createCircleDrawable(int,float)>($i0, $f0);

        virtualinvoke r1.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r2, $r3);

        return r1;
    }
    private android.graphics.drawable.Drawable createInnerStrokesDrawable(int, float)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0;
        boolean $z0;
        android.graphics.drawable.ColorDrawable r1;
        android.graphics.drawable.ShapeDrawable r2;
        android.graphics.drawable.shapes.OvalShape $r3;
        android.graphics.Paint $r4;
        android.graphics.Paint$Style $r5;
        com.getbase.floatingactionbutton.FloatingActionButton$1 $r6;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $z0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: boolean mStrokeVisible>;

        if $z0 != 0 goto label1;

        r1 = new android.graphics.drawable.ColorDrawable;

        specialinvoke r1.<android.graphics.drawable.ColorDrawable: void <init>(int)>(0);

        return r1;

     label1:
        r2 = new android.graphics.drawable.ShapeDrawable;

        $r3 = new android.graphics.drawable.shapes.OvalShape;

        specialinvoke $r3.<android.graphics.drawable.shapes.OvalShape: void <init>()>();

        specialinvoke r2.<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>($r3);

        $i1 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int darkenColor(int)>($i0);

        $i2 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int halfTransparent(int)>($i1);

        $i3 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int lightenColor(int)>($i0);

        $i4 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int halfTransparent(int)>($i3);

        $r4 = virtualinvoke r2.<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        $r6 = new com.getbase.floatingactionbutton.FloatingActionButton$1;

        specialinvoke $r6.<com.getbase.floatingactionbutton.FloatingActionButton$1: void <init>(com.getbase.floatingactionbutton.FloatingActionButton,int,int,int,int,int)>(r0, $i3, $i4, $i0, $i2, $i1);

        virtualinvoke r2.<android.graphics.drawable.ShapeDrawable: void setShaderFactory(android.graphics.drawable.ShapeDrawable$ShaderFactory)>($r6);

        return r2;
    }
    private android.graphics.drawable.Drawable createOuterStrokeDrawable(float)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        float $f0;
        android.graphics.drawable.ShapeDrawable r1;
        android.graphics.drawable.shapes.OvalShape $r2;
        android.graphics.Paint $r3;
        android.graphics.Paint$Style $r4;
        int $i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $f0 := @parameter0: float;

        r1 = new android.graphics.drawable.ShapeDrawable;

        $r2 = new android.graphics.drawable.shapes.OvalShape;

        specialinvoke $r2.<android.graphics.drawable.shapes.OvalShape: void <init>()>();

        specialinvoke r1.<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>($r2);

        $r3 = virtualinvoke r1.<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>();

        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(-16777216);

        $i0 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int opacityToAlpha(float)>(0.02F);

        virtualinvoke $r3.<android.graphics.Paint: void setAlpha(int)>($i0);

        return r1;
    }
    private int darkenColor(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i0 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int adjustColorBrightness(int,float)>($i0, 0.9F);

        return $i0;
    }
    private int halfTransparent(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);

        $i1 = $i1 / 2;

        $i2 = staticinvoke <android.graphics.Color: int red(int)>($i0);

        $i3 = staticinvoke <android.graphics.Color: int green(int)>($i0);

        $i0 = staticinvoke <android.graphics.Color: int blue(int)>($i0);

        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>($i1, $i2, $i3, $i0);

        return $i0;
    }
    private int lightenColor(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i0 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int adjustColorBrightness(int,float)>($i0, 1.1F);

        return $i0;
    }
    private int opacityToAlpha(float)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        float $f0;
        int $i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $f0 := @parameter0: float;

        $f0 = 255.0F * $f0;

        $i0 = (int) $f0;

        return $i0;
    }
    private int opaque(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1, $i2;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <android.graphics.Color: int red(int)>($i0);

        $i2 = staticinvoke <android.graphics.Color: int green(int)>($i0);

        $i0 = staticinvoke <android.graphics.Color: int blue(int)>($i0);

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i1, $i2, $i0);

        return $i0;
    }
    private void setBackgroundCompat(android.graphics.drawable.Drawable)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void setBackground(android.graphics.drawable.Drawable)>($r1);

        return;

     label1:
        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }
    private void updateCircleSize()
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        float $f0;
        int $i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mSize>;

        if $i0 != 0 goto label2;

        $i0 = <com.getbase.floatingactionbutton.R$dimen: int fab_size_normal>;

     label1:
        $f0 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: float getDimension(int)>($i0);

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: float mCircleSize> = $f0;

        return;

     label2:
        $i0 = <com.getbase.floatingactionbutton.R$dimen: int fab_size_mini>;

        goto label1;
    }
    private void updateDrawableSize()
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        float $f0, $f1;
        int $i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $f1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: float mCircleSize>;

        $f0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: float mShadowRadius>;

        $f0 = 2.0F * $f0;

        $f1 = $f1 + $f0;

        $i0 = (int) $f1;

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mDrawableSize> = $i0;

        return;
    }
    int getColor(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0;
        android.content.res.Resources $r1;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int)>($i0);

        return $i0;
    }
    public int getColorDisabled()
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        i0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorDisabled>;

        return i0;
    }
    public int getColorNormal()
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        i0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorNormal>;

        return i0;
    }
    public int getColorPressed()
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        i0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorPressed>;

        return i0;
    }
    float getDimension(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0;
        android.content.res.Resources $r1;
        float $f0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.content.res.Resources getResources()>();

        $f0 = virtualinvoke $r1.<android.content.res.Resources: float getDimension(int)>($i0);

        return $f0;
    }
    android.graphics.drawable.Drawable getIconDrawable()
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;
        android.content.res.Resources $r2;
        android.graphics.drawable.ColorDrawable $r3;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $r1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable mIconDrawable>;

        if $r1 == null goto label1;

        $r1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable mIconDrawable>;

        return $r1;

     label1:
        $i0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mIcon>;

        if $i0 == 0 goto label2;

        $r2 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.content.res.Resources getResources()>();

        $i0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mIcon>;

        $r1 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        return $r1;

     label2:
        $r3 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r3.<android.graphics.drawable.ColorDrawable: void <init>(int)>(0);

        return $r3;
    }
    android.widget.TextView getLabelView()
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        java.lang.Object $r1;
        int $i0;
        android.widget.TextView $r2;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 = <com.getbase.floatingactionbutton.R$id: int fab_label>;

        $r1 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: java.lang.Object getTag(int)>($i0);

        $r2 = (android.widget.TextView) $r1;

        return $r2;
    }
    public int getSize()
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        i0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mSize>;

        return i0;
    }
    public java.lang.String getTitle()
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        java.lang.String r1;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        r1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: java.lang.String mTitle>;

        return r1;
    }
    void init(android.content.Context, android.util.AttributeSet)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        int $i0, $i1;
        java.lang.String $r5;
        boolean $z0;
        float $f0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 = <com.getbase.floatingactionbutton.R$styleable: int[] FloatingActionButton>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, 0, 0);

        $i0 = <com.getbase.floatingactionbutton.R$styleable: int FloatingActionButton_fab_colorNormal>;

        $i1 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int getColor(int)>(17170451);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getColor(int,int)>($i0, $i1);

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorNormal> = $i0;

        $i0 = <com.getbase.floatingactionbutton.R$styleable: int FloatingActionButton_fab_colorPressed>;

        $i1 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int getColor(int)>(17170450);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getColor(int,int)>($i0, $i1);

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorPressed> = $i0;

        $i0 = <com.getbase.floatingactionbutton.R$styleable: int FloatingActionButton_fab_colorDisabled>;

        $i1 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int getColor(int)>(17170432);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getColor(int,int)>($i0, $i1);

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorDisabled> = $i0;

        $i0 = <com.getbase.floatingactionbutton.R$styleable: int FloatingActionButton_fab_size>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>($i0, 0);

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mSize> = $i0;

        $i0 = <com.getbase.floatingactionbutton.R$styleable: int FloatingActionButton_fab_icon>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mIcon> = $i0;

        $i0 = <com.getbase.floatingactionbutton.R$styleable: int FloatingActionButton_fab_title>;

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: java.lang.String getString(int)>($i0);

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: java.lang.String mTitle> = $r5;

        $i0 = <com.getbase.floatingactionbutton.R$styleable: int FloatingActionButton_fab_stroke_visible>;

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: boolean mStrokeVisible> = $z0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void updateCircleSize()>();

        $i0 = <com.getbase.floatingactionbutton.R$dimen: int fab_shadow_radius>;

        $f0 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: float getDimension(int)>($i0);

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: float mShadowRadius> = $f0;

        $i0 = <com.getbase.floatingactionbutton.R$dimen: int fab_shadow_offset>;

        $f0 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: float getDimension(int)>($i0);

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: float mShadowOffset> = $f0;

        specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void updateDrawableSize()>();

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void updateBackground()>();

        return;
    }
    public boolean isStrokeVisible()
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        boolean z0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        z0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: boolean mStrokeVisible>;

        return z0;
    }
    protected void onMeasure(int, int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.widget.ImageButton: void onMeasure(int,int)>($i0, $i1);

        $i0 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mDrawableSize>;

        $i1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mDrawableSize>;

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }
    public void setColorDisabled(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorDisabled>;

        if $i1 == $i0 goto label1;

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorDisabled> = $i0;

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void updateBackground()>();

     label1:
        return;
    }
    public void setColorDisabledResId(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i0 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int getColor(int)>($i0);

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void setColorDisabled(int)>($i0);

        return;
    }
    public void setColorNormal(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorNormal>;

        if $i1 == $i0 goto label1;

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorNormal> = $i0;

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void updateBackground()>();

     label1:
        return;
    }
    public void setColorNormalResId(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i0 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int getColor(int)>($i0);

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void setColorNormal(int)>($i0);

        return;
    }
    public void setColorPressed(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorPressed>;

        if $i1 == $i0 goto label1;

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mColorPressed> = $i0;

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void updateBackground()>();

     label1:
        return;
    }
    public void setColorPressedResId(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i0 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: int getColor(int)>($i0);

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void setColorPressed(int)>($i0);

        return;
    }
    public void setIcon(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $i1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mIcon>;

        if $i1 == $i0 goto label1;

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mIcon> = $i0;

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable mIconDrawable> = null;

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void updateBackground()>();

     label1:
        return;
    }
    public void setIconDrawable(android.graphics.drawable.Drawable)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable mIconDrawable>;

        if $r2 == $r1 goto label1;

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mIcon> = 0;

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable mIconDrawable> = $r1;

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void updateBackground()>();

     label1:
        return;
    }
    public void setSize(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        if $i0 == 1 goto label1;

        if $i0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Use @FAB_SIZE constants only!");

        throw $r1;

     label1:
        $i1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mSize>;

        if $i1 == $i0 goto label2;

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mSize> = $i0;

        specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void updateCircleSize()>();

        specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void updateDrawableSize()>();

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void updateBackground()>();

     label2:
        return;
    }
    public void setStrokeVisible(boolean)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        boolean $z0, $z1;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: boolean mStrokeVisible>;

        if $z1 == $z0 goto label1;

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: boolean mStrokeVisible> = $z0;

        virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void updateBackground()>();

     label1:
        return;
    }
    public void setTitle(java.lang.String)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        java.lang.String $r1;
        android.widget.TextView $r2;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $r1 := @parameter0: java.lang.String;

        r0.<com.getbase.floatingactionbutton.FloatingActionButton: java.lang.String mTitle> = $r1;

        $r2 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.widget.TextView getLabelView()>();

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

     label1:
        return;
    }
    public void setVisibility(int)
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        int $i0;
        android.widget.TextView $r1;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.widget.TextView getLabelView()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.widget.TextView: void setVisibility(int)>($i0);

     label1:
        specialinvoke r0.<android.widget.ImageButton: void setVisibility(int)>($i0);

        return;
    }
    void updateBackground()
    {
        com.getbase.floatingactionbutton.FloatingActionButton r0;
        android.graphics.drawable.LayerDrawable r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        float f0, $f1, $f2;
        android.graphics.drawable.Drawable[] $r2;
        android.content.res.Resources $r3;
        android.graphics.drawable.Drawable $r4;
        android.graphics.drawable.StateListDrawable $r5;

        r0 := @this: com.getbase.floatingactionbutton.FloatingActionButton;

        i2 = <com.getbase.floatingactionbutton.R$dimen: int fab_stroke_width>;

        $f1 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: float getDimension(int)>(i2);

        f0 = $f1 / 2.0F;

        r1 = new android.graphics.drawable.LayerDrawable;

        $r2 = newarray (android.graphics.drawable.Drawable)[4];

        $r3 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.content.res.Resources getResources()>();

        i2 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: int mSize>;

        if i2 != 0 goto label2;

        i2 = <com.getbase.floatingactionbutton.R$drawable: int fab_bg_normal>;

     label1:
        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i2);

        $r2[0] = $r4;

        $r5 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.graphics.drawable.StateListDrawable createFillDrawable(float)>($f1);

        $r2[1] = $r5;

        $r4 = specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable createOuterStrokeDrawable(float)>($f1);

        $r2[2] = $r4;

        $r4 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getIconDrawable()>();

        $r2[3] = $r4;

        specialinvoke r1.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r2);

        $f1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: float mCircleSize>;

        i2 = <com.getbase.floatingactionbutton.R$dimen: int fab_icon_size>;

        $f2 = virtualinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: float getDimension(int)>(i2);

        $f1 = $f1 - $f2;

        i2 = (int) $f1;

        i3 = i2 / 2;

        $f1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: float mShadowRadius>;

        i0 = (int) $f1;

        $f1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: float mShadowRadius>;

        $f2 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: float mShadowOffset>;

        $f1 = $f1 - $f2;

        i1 = (int) $f1;

        $f1 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: float mShadowRadius>;

        $f2 = r0.<com.getbase.floatingactionbutton.FloatingActionButton: float mShadowOffset>;

        $f1 = $f1 + $f2;

        i2 = (int) $f1;

        virtualinvoke r1.<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>(1, i0, i1, i0, i2);

        $f1 = (float) i0;

        $f1 = $f1 - f0;

        $i4 = (int) $f1;

        $f1 = (float) i1;

        $f1 = $f1 - f0;

        $i5 = (int) $f1;

        $f1 = (float) i0;

        $f1 = $f1 - f0;

        $i6 = (int) $f1;

        $f1 = (float) i2;

        f0 = $f1 - f0;

        $i7 = (int) f0;

        virtualinvoke r1.<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>(2, $i4, $i5, $i6, $i7);

        $i4 = i0 + i3;

        i1 = i1 + i3;

        i0 = i0 + i3;

        i2 = i2 + i3;

        virtualinvoke r1.<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>(3, $i4, i1, i0, i2);

        specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void setBackgroundCompat(android.graphics.drawable.Drawable)>(r1);

        return;

     label2:
        i2 = <com.getbase.floatingactionbutton.R$drawable: int fab_bg_mini>;

        goto label1;
    }
