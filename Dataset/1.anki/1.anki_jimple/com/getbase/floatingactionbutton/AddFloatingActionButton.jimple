com.getbase.floatingactionbutton.AddFloatingActionButton extends com.getbase.floatingactionbutton.FloatingActionButton
int mPlusColor
    public void <init>(android.content.Context)
    {
        com.getbase.floatingactionbutton.AddFloatingActionButton r0;
        android.content.Context $r1;

        r0 := @this: com.getbase.floatingactionbutton.AddFloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.getbase.floatingactionbutton.AddFloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.getbase.floatingactionbutton.AddFloatingActionButton r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.getbase.floatingactionbutton.AddFloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.getbase.floatingactionbutton.AddFloatingActionButton r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.getbase.floatingactionbutton.AddFloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }
    android.graphics.drawable.Drawable getIconDrawable()
    {
        com.getbase.floatingactionbutton.AddFloatingActionButton r0;
        com.getbase.floatingactionbutton.AddFloatingActionButton$1 r1;
        float f0, f1, f2, $f3;
        android.graphics.drawable.ShapeDrawable r2;
        int $i0;
        android.graphics.Paint $r3;
        android.graphics.Paint$Style $r4;

        r0 := @this: com.getbase.floatingactionbutton.AddFloatingActionButton;

        $i0 = <com.getbase.floatingactionbutton.R$dimen: int fab_icon_size>;

        $f3 = virtualinvoke r0.<com.getbase.floatingactionbutton.AddFloatingActionButton: float getDimension(int)>($i0);

        f1 = $f3 / 2.0F;

        $i0 = <com.getbase.floatingactionbutton.R$dimen: int fab_plus_icon_size>;

        f0 = virtualinvoke r0.<com.getbase.floatingactionbutton.AddFloatingActionButton: float getDimension(int)>($i0);

        $i0 = <com.getbase.floatingactionbutton.R$dimen: int fab_plus_icon_stroke>;

        f2 = virtualinvoke r0.<com.getbase.floatingactionbutton.AddFloatingActionButton: float getDimension(int)>($i0);

        f2 = f2 / 2.0F;

        f0 = $f3 - f0;

        f0 = f0 / 2.0F;

        r1 = new com.getbase.floatingactionbutton.AddFloatingActionButton$1;

        specialinvoke r1.<com.getbase.floatingactionbutton.AddFloatingActionButton$1: void <init>(com.getbase.floatingactionbutton.AddFloatingActionButton,float,float,float,float)>(r0, f0, f1, f2, $f3);

        r2 = new android.graphics.drawable.ShapeDrawable;

        specialinvoke r2.<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>(r1);

        $r3 = virtualinvoke r2.<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>();

        $i0 = r0.<com.getbase.floatingactionbutton.AddFloatingActionButton: int mPlusColor>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        return r2;
    }
    public int getPlusColor()
    {
        com.getbase.floatingactionbutton.AddFloatingActionButton r0;
        int i0;

        r0 := @this: com.getbase.floatingactionbutton.AddFloatingActionButton;

        i0 = r0.<com.getbase.floatingactionbutton.AddFloatingActionButton: int mPlusColor>;

        return i0;
    }
    void init(android.content.Context, android.util.AttributeSet)
    {
        com.getbase.floatingactionbutton.AddFloatingActionButton r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        int $i0, $i1;

        r0 := @this: com.getbase.floatingactionbutton.AddFloatingActionButton;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 = <com.getbase.floatingactionbutton.R$styleable: int[] AddFloatingActionButton>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, 0, 0);

        $i0 = <com.getbase.floatingactionbutton.R$styleable: int AddFloatingActionButton_fab_plusIconColor>;

        $i1 = virtualinvoke r0.<com.getbase.floatingactionbutton.AddFloatingActionButton: int getColor(int)>(17170443);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getColor(int,int)>($i0, $i1);

        r0.<com.getbase.floatingactionbutton.AddFloatingActionButton: int mPlusColor> = $i0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<com.getbase.floatingactionbutton.FloatingActionButton: void init(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }
    public void setIcon(int)
    {
        com.getbase.floatingactionbutton.AddFloatingActionButton r0;
        int $i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.getbase.floatingactionbutton.AddFloatingActionButton;

        $i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Use FloatingActionButton if you want to use custom icon");

        throw $r1;
    }
    public void setPlusColor(int)
    {
        com.getbase.floatingactionbutton.AddFloatingActionButton r0;
        int $i0, $i1;

        r0 := @this: com.getbase.floatingactionbutton.AddFloatingActionButton;

        $i0 := @parameter0: int;

        $i1 = r0.<com.getbase.floatingactionbutton.AddFloatingActionButton: int mPlusColor>;

        if $i1 == $i0 goto label1;

        r0.<com.getbase.floatingactionbutton.AddFloatingActionButton: int mPlusColor> = $i0;

        virtualinvoke r0.<com.getbase.floatingactionbutton.AddFloatingActionButton: void updateBackground()>();

     label1:
        return;
    }
    public void setPlusColorResId(int)
    {
        com.getbase.floatingactionbutton.AddFloatingActionButton r0;
        int $i0;

        r0 := @this: com.getbase.floatingactionbutton.AddFloatingActionButton;

        $i0 := @parameter0: int;

        $i0 = virtualinvoke r0.<com.getbase.floatingactionbutton.AddFloatingActionButton: int getColor(int)>($i0);

        virtualinvoke r0.<com.getbase.floatingactionbutton.AddFloatingActionButton: void setPlusColor(int)>($i0);

        return;
    }
