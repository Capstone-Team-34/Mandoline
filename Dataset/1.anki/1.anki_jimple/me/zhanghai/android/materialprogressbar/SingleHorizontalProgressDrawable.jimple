me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable extends me.zhanghai.android.materialprogressbar.ProgressDrawableBase
private static final int LEVEL_MAX
private static final float PADDED_INTRINSIC_HEIGHT_DP
private static final float PROGRESS_INTRINSIC_HEIGHT_DP
private static final android.graphics.RectF RECT_BOUND
private static final android.graphics.RectF RECT_PADDED_BOUND
private int mPaddedIntrinsicHeight
private int mProgressIntrinsicHeight
private boolean mShowTrack
private float mTrackAlpha
    static void <clinit>()
    {
        android.graphics.RectF $r0;

        $r0 = new android.graphics.RectF;

        specialinvoke $r0.<android.graphics.RectF: void <init>(float,float,float,float)>(-180.0F, -1.0F, 180.0F, 1.0F);

        <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: android.graphics.RectF RECT_BOUND> = $r0;

        $r0 = new android.graphics.RectF;

        specialinvoke $r0.<android.graphics.RectF: void <init>(float,float,float,float)>(-180.0F, -5.0F, 180.0F, 5.0F);

        <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND> = $r0;

        return;
    }
    public void <init>(android.content.Context)
    {
        me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable r0;
        android.content.Context $r1;
        float f0, $f1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        int $i0;

        r0 := @this: me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<me.zhanghai.android.materialprogressbar.ProgressDrawableBase: void <init>(android.content.Context)>($r1);

        r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: boolean mShowTrack> = 1;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r3.<android.util.DisplayMetrics: float density>;

        $f1 = 3.2F * f0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f1);

        r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: int mProgressIntrinsicHeight> = $i0;

        f0 = 16.0F * f0;

        $i0 = staticinvoke <java.lang.Math: int round(float)>(f0);

        r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: int mPaddedIntrinsicHeight> = $i0;

        f0 = staticinvoke <me.zhanghai.android.materialprogressbar.internal.ThemeUtils: float getFloatFromAttrRes(int,android.content.Context)>(16842803, $r1);

        r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: float mTrackAlpha> = f0;

        return;
    }
    private void drawProgressRect(android.graphics.Canvas, android.graphics.Paint)
    {
        me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        int $i0, $i1;
        float $f0, $f1;
        android.graphics.RectF $r3;

        r0 := @this: me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $i0 = virtualinvoke r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: int getLevel()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $i1 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $f0 = (float) $i0;

        $f0 = $f0 / 10000.0F;

        $r3 = <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: android.graphics.RectF RECT_BOUND>;

        $f1 = $r3.<android.graphics.RectF: float left>;

        virtualinvoke $r1.<android.graphics.Canvas: void scale(float,float,float,float)>($f0, 1.0F, $f1, 0.0F);

        $r3 = <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: android.graphics.RectF RECT_BOUND>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r3, $r2);

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i1);

        return;
    }
    private static void drawTrackRect(android.graphics.Canvas, android.graphics.Paint)
    {
        android.graphics.Canvas $r0;
        android.graphics.Paint $r1;
        android.graphics.RectF $r2;

        $r0 := @parameter0: android.graphics.Canvas;

        $r1 := @parameter1: android.graphics.Paint;

        $r2 = <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: android.graphics.RectF RECT_BOUND>;

        virtualinvoke $r0.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r2, $r1);

        return;
    }
    public int getIntrinsicHeight()
    {
        me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable r0;
        boolean $z0;
        int i0;

        r0 := @this: me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable;

        $z0 = r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: boolean mUseIntrinsicPadding>;

        if $z0 == 0 goto label1;

        i0 = r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: int mPaddedIntrinsicHeight>;

        return i0;

     label1:
        i0 = r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: int mProgressIntrinsicHeight>;

        return i0;
    }
    public boolean getShowTrack()
    {
        me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable r0;
        boolean z0;

        r0 := @this: me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable;

        z0 = r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: boolean mShowTrack>;

        return z0;
    }
    protected void onDraw(android.graphics.Canvas, int, int, android.graphics.Paint)
    {
        me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable r0;
        android.graphics.Canvas $r1;
        int $i0, $i1;
        android.graphics.Paint $r2;
        boolean $z0;
        float $f0, $f1, $f2;
        android.graphics.RectF $r3;

        r0 := @this: me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: android.graphics.Paint;

        $z0 = r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: boolean mUseIntrinsicPadding>;

        if $z0 == 0 goto label3;

        $f0 = (float) $i0;

        $r3 = <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND>;

        $f1 = virtualinvoke $r3.<android.graphics.RectF: float width()>();

        $f0 = $f0 / $f1;

        $f1 = (float) $i1;

        $r3 = <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND>;

        $f2 = virtualinvoke $r3.<android.graphics.RectF: float height()>();

        $f1 = $f1 / $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void scale(float,float)>($f0, $f1);

        $r3 = <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND>;

        $f0 = virtualinvoke $r3.<android.graphics.RectF: float width()>();

        $f0 = $f0 / 2.0F;

        $r3 = <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: android.graphics.RectF RECT_PADDED_BOUND>;

        $f1 = virtualinvoke $r3.<android.graphics.RectF: float height()>();

        $f1 = $f1 / 2.0F;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

     label1:
        $z0 = r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: boolean mShowTrack>;

        if $z0 == 0 goto label2;

        $i0 = r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: int mAlpha>;

        $f0 = (float) $i0;

        $f1 = r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: float mTrackAlpha>;

        $f0 = $f0 * $f1;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i0);

        staticinvoke <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: void drawTrackRect(android.graphics.Canvas,android.graphics.Paint)>($r1, $r2);

        $i0 = r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: int mAlpha>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i0);

     label2:
        specialinvoke r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: void drawProgressRect(android.graphics.Canvas,android.graphics.Paint)>($r1, $r2);

        return;

     label3:
        $f0 = (float) $i0;

        $r3 = <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: android.graphics.RectF RECT_BOUND>;

        $f1 = virtualinvoke $r3.<android.graphics.RectF: float width()>();

        $f0 = $f0 / $f1;

        $f1 = (float) $i1;

        $r3 = <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: android.graphics.RectF RECT_BOUND>;

        $f2 = virtualinvoke $r3.<android.graphics.RectF: float height()>();

        $f1 = $f1 / $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void scale(float,float)>($f0, $f1);

        $r3 = <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: android.graphics.RectF RECT_BOUND>;

        $f0 = virtualinvoke $r3.<android.graphics.RectF: float width()>();

        $f0 = $f0 / 2.0F;

        $r3 = <me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: android.graphics.RectF RECT_BOUND>;

        $f1 = virtualinvoke $r3.<android.graphics.RectF: float height()>();

        $f1 = $f1 / 2.0F;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        goto label1;
    }
    protected boolean onLevelChange(int)
    {
        me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable r0;
        int $i0;

        r0 := @this: me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable;

        $i0 := @parameter0: int;

        virtualinvoke r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: void invalidateSelf()>();

        return 1;
    }
    protected void onPreparePaint(android.graphics.Paint)
    {
        me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable r0;
        android.graphics.Paint $r1;
        android.graphics.Paint$Style $r2;

        r0 := @this: me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable;

        $r1 := @parameter0: android.graphics.Paint;

        $r2 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r1.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r2);

        return;
    }
    public void setShowTrack(boolean)
    {
        me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable r0;
        boolean $z0, $z1;

        r0 := @this: me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable;

        $z0 := @parameter0: boolean;

        $z1 = r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: boolean mShowTrack>;

        if $z1 == $z0 goto label1;

        r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: boolean mShowTrack> = $z0;

        virtualinvoke r0.<me.zhanghai.android.materialprogressbar.SingleHorizontalProgressDrawable: void invalidateSelf()>();

     label1:
        return;
    }
