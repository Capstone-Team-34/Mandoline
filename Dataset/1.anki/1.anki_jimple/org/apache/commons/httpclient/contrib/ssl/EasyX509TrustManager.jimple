org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager extends java.lang.Object implements javax.net.ssl.X509TrustManager
private javax.net.ssl.X509TrustManager standardTrustManager
    public void <init>(java.security.KeyStore) throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException
    {
        org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager r0;
        java.security.KeyStore $r1;
        java.lang.String $r2;
        javax.net.ssl.TrustManagerFactory $r3;
        javax.net.ssl.TrustManager[] $r4;
        int $i0;
        java.security.NoSuchAlgorithmException $r5;
        javax.net.ssl.TrustManager $r6;
        javax.net.ssl.X509TrustManager $r7;

        r0 := @this: org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager;

        $r1 := @parameter0: java.security.KeyStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager: javax.net.ssl.X509TrustManager standardTrustManager> = null;

        $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2);

        virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1);

        $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        $i0 = lengthof $r4;

        if $i0 != 0 goto label1;

        $r5 = new java.security.NoSuchAlgorithmException;

        specialinvoke $r5.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>("no trust manager found");

        throw $r5;

     label1:
        $r6 = $r4[0];

        $r7 = (javax.net.ssl.X509TrustManager) $r6;

        r0.<org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager: javax.net.ssl.X509TrustManager standardTrustManager> = $r7;

        return;
    }
    public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager r0;
        java.security.cert.X509Certificate[] $r1;
        java.lang.String $r2;
        javax.net.ssl.X509TrustManager $r3;

        r0 := @this: org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager;

        $r1 := @parameter0: java.security.cert.X509Certificate[];

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager: javax.net.ssl.X509TrustManager standardTrustManager>;

        interfaceinvoke $r3.<javax.net.ssl.X509TrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>($r1, $r2);

        return;
    }
    public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager r0;
        java.security.cert.X509Certificate[] $r1;
        java.lang.String $r2;
        java.security.cert.X509Certificate r3, $r7;
        java.util.Date r4, $r8;
        int $i0, $i1, $i2;
        boolean z0, $z1;
        java.security.Principal $r5, $r6;
        javax.net.ssl.X509TrustManager $r9;

        r0 := @this: org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager;

        $r1 := @parameter0: java.security.cert.X509Certificate[];

        $r2 := @parameter1: java.lang.String;

        $i0 = lengthof $r1;

        if $i0 <= 1 goto label5;

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label4;

        z0 = 0;

        $i1 = $i0 + 1;

     label2:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label3;

        r3 = $r1[$i0];

        $r5 = virtualinvoke r3.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        r3 = $r1[$i1];

        $r6 = virtualinvoke r3.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $z1 = interfaceinvoke $r5.<java.security.Principal: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label6;

        z0 = 1;

        $i2 = $i0 + 1;

        if $i1 == $i2 goto label3;

        r3 = $r1[$i1];

        $i2 = $i0 + 1;

        $r7 = $r1[$i2];

        $r1[$i1] = $r7;

        $i1 = $i0 + 1;

        $r1[$i1] = r3;

     label3:
        if z0 != 0 goto label7;

     label4:
        $i0 = $i0 + 1;

        $i0 = $i0 + -1;

        r3 = $r1[$i0];

        r4 = new java.util.Date;

        specialinvoke r4.<java.util.Date: void <init>()>();

        $r5 = virtualinvoke r3.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r6 = virtualinvoke r3.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        z0 = interfaceinvoke $r5.<java.security.Principal: boolean equals(java.lang.Object)>($r6);

        if z0 == 0 goto label5;

        $r8 = virtualinvoke r3.<java.security.cert.X509Certificate: java.util.Date getNotAfter()>();

        z0 = virtualinvoke r4.<java.util.Date: boolean after(java.util.Date)>($r8);

        if z0 == 0 goto label5;

     label5:
        $r9 = r0.<org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager: javax.net.ssl.X509TrustManager standardTrustManager>;

        interfaceinvoke $r9.<javax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>($r1, $r2);

        return;

     label6:
        $i1 = $i1 + 1;

        goto label2;

     label7:
        $i0 = $i0 + 1;

        goto label1;
    }
    public java.security.cert.X509Certificate[] getAcceptedIssuers()
    {
        org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager r0;
        java.security.cert.X509Certificate[] $r1;
        javax.net.ssl.X509TrustManager $r2;

        r0 := @this: org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager;

        $r2 = r0.<org.apache.commons.httpclient.contrib.ssl.EasyX509TrustManager: javax.net.ssl.X509TrustManager standardTrustManager>;

        $r1 = interfaceinvoke $r2.<javax.net.ssl.X509TrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>();

        return $r1;
    }
