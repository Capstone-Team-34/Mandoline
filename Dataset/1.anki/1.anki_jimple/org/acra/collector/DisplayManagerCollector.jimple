org.acra.collector.DisplayManagerCollector extends java.lang.Object
static final android.util.SparseArray mDensities
static final android.util.SparseArray mFlagsNames
    static void <clinit>()
    {
        android.util.SparseArray $r0;

        $r0 = new android.util.SparseArray;

        specialinvoke $r0.<android.util.SparseArray: void <init>()>();

        <org.acra.collector.DisplayManagerCollector: android.util.SparseArray mFlagsNames> = $r0;

        $r0 = new android.util.SparseArray;

        specialinvoke $r0.<android.util.SparseArray: void <init>()>();

        <org.acra.collector.DisplayManagerCollector: android.util.SparseArray mDensities> = $r0;

        return;
    }
    void <init>()
    {
        org.acra.collector.DisplayManagerCollector r0;

        r0 := @this: org.acra.collector.DisplayManagerCollector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static java.lang.String activeFlags(android.util.SparseArray, int)
    {
        android.util.SparseArray r0;
        int $i0, i1, i2, $i3;
        java.lang.StringBuilder r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.util.SparseArray;

        $i0 := @parameter1: int;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label1:
        i1 = virtualinvoke r0.<android.util.SparseArray: int size()>();

        if i2 >= i1 goto label4;

        i1 = virtualinvoke r0.<android.util.SparseArray: int keyAt(int)>(i2);

        i1 = $i0 & i1;

        if i1 <= 0 goto label3;

        $i3 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i3 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

     label2:
        $r2 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        $r3 = (java.lang.String) $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
    private static java.lang.String collectCurrentSizeRange(android.view.Display)
    {
        android.view.Display $r0;
        android.graphics.Point r1, r3;
        java.lang.StringBuilder r2, $r8;
        java.lang.Class $r4;
        java.lang.Class[] $r5;
        java.lang.reflect.Method $r6;
        java.lang.Object[] $r7;
        int $i0;
        java.lang.String $r9;
        java.lang.reflect.InvocationTargetException $r10;
        java.lang.IllegalAccessException $r11;
        java.lang.IllegalArgumentException $r12;
        java.lang.NoSuchMethodException $r13;
        java.lang.SecurityException $r14;

        $r0 := @parameter0: android.view.Display;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r5 = newarray (java.lang.Class)[2];

        $r5[0] = class "Landroid/graphics/Point;";

        $r5[1] = class "Landroid/graphics/Point;";

     label03:
        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getCurrentSizeRange", $r5);

     label04:
        r3 = new android.graphics.Point;

     label05:
        specialinvoke r3.<android.graphics.Point: void <init>()>();

     label06:
        r1 = new android.graphics.Point;

     label07:
        specialinvoke r1.<android.graphics.Point: void <init>()>();

     label08:
        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r3;

        $r7[1] = r1;

     label09:
        virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r7);

        $i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".currentSizeRange.smallest=[");

     label10:
        $i0 = r3.<android.graphics.Point: int x>;

     label11:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label12:
        $i0 = r3.<android.graphics.Point: int y>;

     label13:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".currentSizeRange.largest=[");

     label14:
        $i0 = r1.<android.graphics.Point: int x>;

     label15:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label16:
        $i0 = r1.<android.graphics.Point: int y>;

     label17:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label18:
        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label19:
        $r10 := @caughtexception;

        goto label18;

     label20:
        $r11 := @caughtexception;

        goto label18;

     label21:
        $r12 := @caughtexception;

        goto label18;

     label22:
        $r13 := @caughtexception;

        goto label18;

     label23:
        $r14 := @caughtexception;

        goto label18;

        catch java.lang.SecurityException from label01 to label02 with label23;
        catch java.lang.SecurityException from label03 to label04 with label23;
        catch java.lang.SecurityException from label05 to label06 with label23;
        catch java.lang.SecurityException from label07 to label08 with label23;
        catch java.lang.SecurityException from label09 to label10 with label23;
        catch java.lang.SecurityException from label11 to label12 with label23;
        catch java.lang.SecurityException from label13 to label14 with label23;
        catch java.lang.SecurityException from label15 to label16 with label23;
        catch java.lang.SecurityException from label17 to label18 with label23;
        catch java.lang.NoSuchMethodException from label01 to label02 with label22;
        catch java.lang.NoSuchMethodException from label03 to label04 with label22;
        catch java.lang.NoSuchMethodException from label05 to label06 with label22;
        catch java.lang.NoSuchMethodException from label07 to label08 with label22;
        catch java.lang.NoSuchMethodException from label09 to label10 with label22;
        catch java.lang.NoSuchMethodException from label11 to label12 with label22;
        catch java.lang.NoSuchMethodException from label13 to label14 with label22;
        catch java.lang.NoSuchMethodException from label15 to label16 with label22;
        catch java.lang.NoSuchMethodException from label17 to label18 with label22;
        catch java.lang.IllegalArgumentException from label01 to label02 with label21;
        catch java.lang.IllegalArgumentException from label03 to label04 with label21;
        catch java.lang.IllegalArgumentException from label05 to label06 with label21;
        catch java.lang.IllegalArgumentException from label07 to label08 with label21;
        catch java.lang.IllegalArgumentException from label09 to label10 with label21;
        catch java.lang.IllegalArgumentException from label11 to label12 with label21;
        catch java.lang.IllegalArgumentException from label13 to label14 with label21;
        catch java.lang.IllegalArgumentException from label15 to label16 with label21;
        catch java.lang.IllegalArgumentException from label17 to label18 with label21;
        catch java.lang.IllegalAccessException from label01 to label02 with label20;
        catch java.lang.IllegalAccessException from label03 to label04 with label20;
        catch java.lang.IllegalAccessException from label05 to label06 with label20;
        catch java.lang.IllegalAccessException from label07 to label08 with label20;
        catch java.lang.IllegalAccessException from label09 to label10 with label20;
        catch java.lang.IllegalAccessException from label11 to label12 with label20;
        catch java.lang.IllegalAccessException from label13 to label14 with label20;
        catch java.lang.IllegalAccessException from label15 to label16 with label20;
        catch java.lang.IllegalAccessException from label17 to label18 with label20;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label19;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label19;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label19;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label19;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label19;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label19;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label19;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label19;
        catch java.lang.reflect.InvocationTargetException from label17 to label18 with label19;
    }
    private static java.lang.Object collectDisplayData(android.view.Display)
    {
        android.view.Display $r0;
        android.util.DisplayMetrics r1;
        java.lang.StringBuilder r2, $r4;
        java.lang.String $r3;
        int $i0;
        java.lang.Object $r5;
        float $f0;

        $r0 := @parameter0: android.view.Display;

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        virtualinvoke $r0.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <org.acra.collector.DisplayManagerCollector: java.lang.String collectCurrentSizeRange(android.view.Display)>($r0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = staticinvoke <org.acra.collector.DisplayManagerCollector: java.lang.String collectFlags(android.view.Display)>($r0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".height=");

        $i0 = virtualinvoke $r0.<android.view.Display: int getHeight()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r5 = staticinvoke <org.acra.collector.DisplayManagerCollector: java.lang.Object collectMetrics(android.view.Display,java.lang.String)>($r0, "getMetrics");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r3 = staticinvoke <org.acra.collector.DisplayManagerCollector: java.lang.String collectName(android.view.Display)>($r0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".orientation=");

        $i0 = virtualinvoke $r0.<android.view.Display: int getOrientation()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".pixelFormat=");

        $i0 = virtualinvoke $r0.<android.view.Display: int getPixelFormat()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r5 = staticinvoke <org.acra.collector.DisplayManagerCollector: java.lang.Object collectMetrics(android.view.Display,java.lang.String)>($r0, "getRealMetrics");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r5 = staticinvoke <org.acra.collector.DisplayManagerCollector: java.lang.Object collectSize(android.view.Display,java.lang.String)>($r0, "getRealSize");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r5 = staticinvoke <org.acra.collector.DisplayManagerCollector: java.lang.Object collectRectSize(android.view.Display)>($r0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".refreshRate=");

        $f0 = virtualinvoke $r0.<android.view.Display: float getRefreshRate()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r5 = staticinvoke <org.acra.collector.DisplayManagerCollector: java.lang.Object collectRotation(android.view.Display)>($r0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r5 = staticinvoke <org.acra.collector.DisplayManagerCollector: java.lang.Object collectSize(android.view.Display,java.lang.String)>($r0, "getSize");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".width=");

        $i0 = virtualinvoke $r0.<android.view.Display: int getWidth()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r5 = staticinvoke <org.acra.collector.DisplayManagerCollector: java.lang.Object collectIsValid(android.view.Display)>($r0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
    public static java.lang.String collectDisplays(android.content.Context)
    {
        android.content.Context $r0;
        android.view.Display[] r1, r4;
        android.view.Display r2;
        int i0, i1;
        java.lang.StringBuilder r3;
        java.lang.Object $r5;
        android.view.WindowManager r6;
        java.lang.Class $r7;
        java.lang.reflect.Field $r8;
        java.lang.String $r9;
        java.lang.Class[] $r10;
        java.lang.reflect.Method $r11;
        java.lang.Object[] $r12;
        java.lang.IllegalArgumentException r13;
        org.acra.log.ACRALog $r14;
        java.lang.SecurityException r15;
        java.lang.IllegalAccessException r16;
        java.lang.NoSuchFieldException r17;
        java.lang.NoSuchMethodException r18;
        java.lang.reflect.InvocationTargetException r19;

        $r0 := @parameter0: android.content.Context;

        r4 = null;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        i0 = staticinvoke <org.acra.collector.Compatibility: int getAPILevel()>();

        if i0 >= 17 goto label03;

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r6 = (android.view.WindowManager) $r5;

        r4 = newarray (android.view.Display)[1];

        r2 = interfaceinvoke r6.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        r4[0] = r2;

     label01:
        r1 = r4;

        i0 = lengthof r4;

        i1 = 0;

     label02:
        if i1 >= i0 goto label17;

        r2 = r1[i1];

        $r5 = staticinvoke <org.acra.collector.DisplayManagerCollector: java.lang.Object collectDisplayData(android.view.Display)>(r2);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label02;

     label03:
        $r7 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("DISPLAY_SERVICE");

        $r5 = virtualinvoke $r8.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

     label04:
        $r9 = (java.lang.String) $r5;

     label05:
        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>($r9);

        $r7 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

     label06:
        $r10 = newarray (java.lang.Class)[0];

     label07:
        $r11 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getDisplays", $r10);

     label08:
        $r12 = newarray (java.lang.Object)[0];

     label09:
        $r5 = virtualinvoke $r11.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, $r12);

     label10:
        r1 = (android.view.Display[]) $r5;

        r4 = r1;

        goto label01;

     label11:
        r13 := @caughtexception;

        $r14 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r9 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r14.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Error while collecting DisplayManager data: ", r13);

        goto label01;

     label12:
        r15 := @caughtexception;

        $r14 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r9 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r14.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Error while collecting DisplayManager data: ", r15);

        goto label01;

     label13:
        r16 := @caughtexception;

        $r14 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r9 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r14.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Error while collecting DisplayManager data: ", r16);

        goto label01;

     label14:
        r17 := @caughtexception;

        $r14 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r9 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r14.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Error while collecting DisplayManager data: ", r17);

        goto label01;

     label15:
        r18 := @caughtexception;

        $r14 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r9 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r14.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Error while collecting DisplayManager data: ", r18);

        goto label01;

     label16:
        r19 := @caughtexception;

        $r14 = <org.acra.ACRA: org.acra.log.ACRALog log>;

        $r9 = <org.acra.ACRA: java.lang.String LOG_TAG>;

        interfaceinvoke $r14.<org.acra.log.ACRALog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "Error while collecting DisplayManager data: ", r19);

        goto label01;

     label17:
        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

        catch java.lang.IllegalArgumentException from label03 to label04 with label11;
        catch java.lang.IllegalArgumentException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label07 to label08 with label11;
        catch java.lang.IllegalArgumentException from label09 to label10 with label11;
        catch java.lang.SecurityException from label03 to label04 with label12;
        catch java.lang.SecurityException from label05 to label06 with label12;
        catch java.lang.SecurityException from label07 to label08 with label12;
        catch java.lang.SecurityException from label09 to label10 with label12;
        catch java.lang.IllegalAccessException from label03 to label04 with label13;
        catch java.lang.IllegalAccessException from label05 to label06 with label13;
        catch java.lang.IllegalAccessException from label07 to label08 with label13;
        catch java.lang.IllegalAccessException from label09 to label10 with label13;
        catch java.lang.NoSuchFieldException from label03 to label04 with label14;
        catch java.lang.NoSuchFieldException from label05 to label06 with label14;
        catch java.lang.NoSuchFieldException from label07 to label08 with label14;
        catch java.lang.NoSuchFieldException from label09 to label10 with label14;
        catch java.lang.NoSuchMethodException from label03 to label04 with label15;
        catch java.lang.NoSuchMethodException from label05 to label06 with label15;
        catch java.lang.NoSuchMethodException from label07 to label08 with label15;
        catch java.lang.NoSuchMethodException from label09 to label10 with label15;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label16;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label16;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label16;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label16;
    }
    private static java.lang.String collectFlags(android.view.Display)
    {
        android.view.Display $r0;
        java.lang.reflect.Field r1;
        int i0, $i1, i2, $i3;
        java.lang.StringBuilder r2, $r12;
        java.lang.Class $r3;
        java.lang.Class[] $r4;
        java.lang.reflect.Method $r5;
        java.lang.Object[] $r6;
        java.lang.Object $r7;
        java.lang.Integer $r8;
        java.lang.reflect.Field[] $r9;
        java.lang.String $r10;
        boolean $z0;
        android.util.SparseArray $r11;
        java.lang.reflect.InvocationTargetException $r13;
        java.lang.IllegalAccessException $r14;
        java.lang.IllegalArgumentException $r15;
        java.lang.NoSuchMethodException $r16;
        java.lang.SecurityException $r17;

        $r0 := @parameter0: android.view.Display;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r4 = newarray (java.lang.Class)[0];

     label03:
        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getFlags", $r4);

     label04:
        $r6 = newarray (java.lang.Object)[0];

     label05:
        $r7 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r6);

     label06:
        $r8 = (java.lang.Integer) $r7;

     label07:
        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

     label08:
        i0 = lengthof $r9;

        i2 = 0;

     label09:
        if i2 >= i0 goto label14;

        r1 = $r9[i2];

     label10:
        $r10 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("FLAG_");

     label11:
        if $z0 == 0 goto label13;

        $r11 = <org.acra.collector.DisplayManagerCollector: android.util.SparseArray mFlagsNames>;

     label12:
        $i3 = virtualinvoke r1.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        $r10 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>();

        virtualinvoke $r11.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, $r10);

     label13:
        i2 = i2 + 1;

        goto label09;

     label14:
        i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r12 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".flags=");

     label15:
        $r11 = <org.acra.collector.DisplayManagerCollector: android.util.SparseArray mFlagsNames>;

     label16:
        $r10 = staticinvoke <org.acra.collector.DisplayManagerCollector: java.lang.String activeFlags(android.util.SparseArray,int)>($r11, $i1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label17:
        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label18:
        $r13 := @caughtexception;

        goto label17;

     label19:
        $r14 := @caughtexception;

        goto label17;

     label20:
        $r15 := @caughtexception;

        goto label17;

     label21:
        $r16 := @caughtexception;

        goto label17;

     label22:
        $r17 := @caughtexception;

        goto label17;

        catch java.lang.SecurityException from label01 to label02 with label22;
        catch java.lang.SecurityException from label03 to label04 with label22;
        catch java.lang.SecurityException from label05 to label06 with label22;
        catch java.lang.SecurityException from label07 to label08 with label22;
        catch java.lang.SecurityException from label10 to label11 with label22;
        catch java.lang.SecurityException from label12 to label13 with label22;
        catch java.lang.SecurityException from label14 to label15 with label22;
        catch java.lang.SecurityException from label16 to label17 with label22;
        catch java.lang.NoSuchMethodException from label01 to label02 with label21;
        catch java.lang.NoSuchMethodException from label03 to label04 with label21;
        catch java.lang.NoSuchMethodException from label05 to label06 with label21;
        catch java.lang.NoSuchMethodException from label07 to label08 with label21;
        catch java.lang.NoSuchMethodException from label10 to label11 with label21;
        catch java.lang.NoSuchMethodException from label12 to label13 with label21;
        catch java.lang.NoSuchMethodException from label14 to label15 with label21;
        catch java.lang.NoSuchMethodException from label16 to label17 with label21;
        catch java.lang.IllegalArgumentException from label01 to label02 with label20;
        catch java.lang.IllegalArgumentException from label03 to label04 with label20;
        catch java.lang.IllegalArgumentException from label05 to label06 with label20;
        catch java.lang.IllegalArgumentException from label07 to label08 with label20;
        catch java.lang.IllegalArgumentException from label10 to label11 with label20;
        catch java.lang.IllegalArgumentException from label12 to label13 with label20;
        catch java.lang.IllegalArgumentException from label14 to label15 with label20;
        catch java.lang.IllegalArgumentException from label16 to label17 with label20;
        catch java.lang.IllegalAccessException from label01 to label02 with label19;
        catch java.lang.IllegalAccessException from label03 to label04 with label19;
        catch java.lang.IllegalAccessException from label05 to label06 with label19;
        catch java.lang.IllegalAccessException from label07 to label08 with label19;
        catch java.lang.IllegalAccessException from label10 to label11 with label19;
        catch java.lang.IllegalAccessException from label12 to label13 with label19;
        catch java.lang.IllegalAccessException from label14 to label15 with label19;
        catch java.lang.IllegalAccessException from label16 to label17 with label19;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label18;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label18;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label18;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label18;
        catch java.lang.reflect.InvocationTargetException from label10 to label11 with label18;
        catch java.lang.reflect.InvocationTargetException from label12 to label13 with label18;
        catch java.lang.reflect.InvocationTargetException from label14 to label15 with label18;
        catch java.lang.reflect.InvocationTargetException from label16 to label17 with label18;
    }
    private static java.lang.Object collectIsValid(android.view.Display)
    {
        android.view.Display $r0;
        java.lang.StringBuilder r1, $r8;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        java.lang.Boolean r7;
        int $i0;
        java.lang.String $r9;
        java.lang.reflect.InvocationTargetException $r10;
        java.lang.IllegalAccessException $r11;
        java.lang.IllegalArgumentException $r12;
        java.lang.NoSuchMethodException $r13;
        java.lang.SecurityException $r14;

        $r0 := @parameter0: android.view.Display;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r3 = newarray (java.lang.Class)[0];

     label03:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isValid", $r3);

     label04:
        $r5 = newarray (java.lang.Object)[0];

     label05:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r5);

     label06:
        r7 = (java.lang.Boolean) $r6;

     label07:
        $i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".isValid=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label08:
        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label09:
        $r10 := @caughtexception;

        goto label08;

     label10:
        $r11 := @caughtexception;

        goto label08;

     label11:
        $r12 := @caughtexception;

        goto label08;

     label12:
        $r13 := @caughtexception;

        goto label08;

     label13:
        $r14 := @caughtexception;

        goto label08;

        catch java.lang.SecurityException from label01 to label02 with label13;
        catch java.lang.SecurityException from label03 to label04 with label13;
        catch java.lang.SecurityException from label05 to label06 with label13;
        catch java.lang.SecurityException from label07 to label08 with label13;
        catch java.lang.NoSuchMethodException from label01 to label02 with label12;
        catch java.lang.NoSuchMethodException from label03 to label04 with label12;
        catch java.lang.NoSuchMethodException from label05 to label06 with label12;
        catch java.lang.NoSuchMethodException from label07 to label08 with label12;
        catch java.lang.IllegalArgumentException from label01 to label02 with label11;
        catch java.lang.IllegalArgumentException from label03 to label04 with label11;
        catch java.lang.IllegalArgumentException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label07 to label08 with label11;
        catch java.lang.IllegalAccessException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label10;
        catch java.lang.IllegalAccessException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label09;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label09;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label09;
    }
    private static java.lang.Object collectMetrics(android.view.Display, java.lang.String)
    {
        android.view.Display $r0;
        java.lang.String $r1, $r11;
        java.lang.reflect.Field r2;
        int i0, i1, $i2;
        java.lang.StringBuilder r3, $r13;
        java.lang.Class $r4;
        java.lang.Class[] $r5;
        java.lang.reflect.Method $r6;
        java.lang.Object[] $r7;
        java.lang.Object $r8;
        android.util.DisplayMetrics r9;
        java.lang.reflect.Field[] $r10;
        boolean $z0;
        android.util.SparseArray $r12;
        float $f0;
        java.lang.NoSuchFieldException $r14;
        java.lang.reflect.InvocationTargetException $r15;
        java.lang.IllegalAccessException $r16;
        java.lang.IllegalArgumentException $r17;
        java.lang.NoSuchMethodException $r18;
        java.lang.SecurityException $r19;

        $r0 := @parameter0: android.view.Display;

        $r1 := @parameter1: java.lang.String;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r5 = newarray (java.lang.Class)[0];

     label03:
        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r1, $r5);

     label04:
        $r7 = newarray (java.lang.Object)[0];

     label05:
        $r8 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r7);

     label06:
        r9 = (android.util.DisplayMetrics) $r8;

        $r4 = class "Landroid/util/DisplayMetrics;";

     label07:
        $r10 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

     label08:
        i0 = lengthof $r10;

        i1 = 0;

     label09:
        if i1 >= i0 goto label18;

        r2 = $r10[i1];

     label10:
        $r4 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Integer;");

     label11:
        if $z0 == 0 goto label17;

     label12:
        $r11 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("DENSITY_");

     label13:
        if $z0 == 0 goto label17;

     label14:
        $r11 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("DENSITY_DEFAULT");

     label15:
        if $z0 != 0 goto label17;

        $r12 = <org.acra.collector.DisplayManagerCollector: android.util.SparseArray mDensities>;

     label16:
        $i2 = virtualinvoke r2.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        $r11 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();

        virtualinvoke $r12.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r11);

     label17:
        i1 = i1 + 1;

        goto label09;

     label18:
        i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".density=");

     label19:
        $f0 = r9.<android.util.DisplayMetrics: float density>;

     label20:
        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".densityDpi=");

        $r4 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("densityDpi");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scaledDensity=x");

     label21:
        $f0 = r9.<android.util.DisplayMetrics: float scaledDensity>;

     label22:
        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".widthPixels=");

     label23:
        i0 = r9.<android.util.DisplayMetrics: int widthPixels>;

     label24:
        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".heightPixels=");

     label25:
        i0 = r9.<android.util.DisplayMetrics: int heightPixels>;

     label26:
        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xdpi=");

     label27:
        $f0 = r9.<android.util.DisplayMetrics: float xdpi>;

     label28:
        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ydpi=");

     label29:
        $f0 = r9.<android.util.DisplayMetrics: float ydpi>;

     label30:
        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label31:
        $r1 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label32:
        $r14 := @caughtexception;

        goto label31;

     label33:
        $r15 := @caughtexception;

        goto label31;

     label34:
        $r16 := @caughtexception;

        goto label31;

     label35:
        $r17 := @caughtexception;

        goto label31;

     label36:
        $r18 := @caughtexception;

        goto label31;

     label37:
        $r19 := @caughtexception;

        goto label31;

        catch java.lang.SecurityException from label01 to label02 with label37;
        catch java.lang.SecurityException from label03 to label04 with label37;
        catch java.lang.SecurityException from label05 to label06 with label37;
        catch java.lang.SecurityException from label07 to label08 with label37;
        catch java.lang.SecurityException from label10 to label11 with label37;
        catch java.lang.SecurityException from label12 to label13 with label37;
        catch java.lang.SecurityException from label14 to label15 with label37;
        catch java.lang.SecurityException from label16 to label17 with label37;
        catch java.lang.SecurityException from label18 to label19 with label37;
        catch java.lang.SecurityException from label20 to label21 with label37;
        catch java.lang.SecurityException from label22 to label23 with label37;
        catch java.lang.SecurityException from label24 to label25 with label37;
        catch java.lang.SecurityException from label26 to label27 with label37;
        catch java.lang.SecurityException from label28 to label29 with label37;
        catch java.lang.SecurityException from label30 to label31 with label37;
        catch java.lang.NoSuchMethodException from label01 to label02 with label36;
        catch java.lang.NoSuchMethodException from label03 to label04 with label36;
        catch java.lang.NoSuchMethodException from label05 to label06 with label36;
        catch java.lang.NoSuchMethodException from label07 to label08 with label36;
        catch java.lang.NoSuchMethodException from label10 to label11 with label36;
        catch java.lang.NoSuchMethodException from label12 to label13 with label36;
        catch java.lang.NoSuchMethodException from label14 to label15 with label36;
        catch java.lang.NoSuchMethodException from label16 to label17 with label36;
        catch java.lang.NoSuchMethodException from label18 to label19 with label36;
        catch java.lang.NoSuchMethodException from label20 to label21 with label36;
        catch java.lang.NoSuchMethodException from label22 to label23 with label36;
        catch java.lang.NoSuchMethodException from label24 to label25 with label36;
        catch java.lang.NoSuchMethodException from label26 to label27 with label36;
        catch java.lang.NoSuchMethodException from label28 to label29 with label36;
        catch java.lang.NoSuchMethodException from label30 to label31 with label36;
        catch java.lang.IllegalArgumentException from label01 to label02 with label35;
        catch java.lang.IllegalArgumentException from label03 to label04 with label35;
        catch java.lang.IllegalArgumentException from label05 to label06 with label35;
        catch java.lang.IllegalArgumentException from label07 to label08 with label35;
        catch java.lang.IllegalArgumentException from label10 to label11 with label35;
        catch java.lang.IllegalArgumentException from label12 to label13 with label35;
        catch java.lang.IllegalArgumentException from label14 to label15 with label35;
        catch java.lang.IllegalArgumentException from label16 to label17 with label35;
        catch java.lang.IllegalArgumentException from label18 to label19 with label35;
        catch java.lang.IllegalArgumentException from label20 to label21 with label35;
        catch java.lang.IllegalArgumentException from label22 to label23 with label35;
        catch java.lang.IllegalArgumentException from label24 to label25 with label35;
        catch java.lang.IllegalArgumentException from label26 to label27 with label35;
        catch java.lang.IllegalArgumentException from label28 to label29 with label35;
        catch java.lang.IllegalArgumentException from label30 to label31 with label35;
        catch java.lang.IllegalAccessException from label01 to label02 with label34;
        catch java.lang.IllegalAccessException from label03 to label04 with label34;
        catch java.lang.IllegalAccessException from label05 to label06 with label34;
        catch java.lang.IllegalAccessException from label07 to label08 with label34;
        catch java.lang.IllegalAccessException from label10 to label11 with label34;
        catch java.lang.IllegalAccessException from label12 to label13 with label34;
        catch java.lang.IllegalAccessException from label14 to label15 with label34;
        catch java.lang.IllegalAccessException from label16 to label17 with label34;
        catch java.lang.IllegalAccessException from label18 to label19 with label34;
        catch java.lang.IllegalAccessException from label20 to label21 with label34;
        catch java.lang.IllegalAccessException from label22 to label23 with label34;
        catch java.lang.IllegalAccessException from label24 to label25 with label34;
        catch java.lang.IllegalAccessException from label26 to label27 with label34;
        catch java.lang.IllegalAccessException from label28 to label29 with label34;
        catch java.lang.IllegalAccessException from label30 to label31 with label34;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label33;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label33;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label33;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label33;
        catch java.lang.reflect.InvocationTargetException from label10 to label11 with label33;
        catch java.lang.reflect.InvocationTargetException from label12 to label13 with label33;
        catch java.lang.reflect.InvocationTargetException from label14 to label15 with label33;
        catch java.lang.reflect.InvocationTargetException from label16 to label17 with label33;
        catch java.lang.reflect.InvocationTargetException from label18 to label19 with label33;
        catch java.lang.reflect.InvocationTargetException from label20 to label21 with label33;
        catch java.lang.reflect.InvocationTargetException from label22 to label23 with label33;
        catch java.lang.reflect.InvocationTargetException from label24 to label25 with label33;
        catch java.lang.reflect.InvocationTargetException from label26 to label27 with label33;
        catch java.lang.reflect.InvocationTargetException from label28 to label29 with label33;
        catch java.lang.reflect.InvocationTargetException from label30 to label31 with label33;
        catch java.lang.NoSuchFieldException from label01 to label02 with label32;
        catch java.lang.NoSuchFieldException from label03 to label04 with label32;
        catch java.lang.NoSuchFieldException from label05 to label06 with label32;
        catch java.lang.NoSuchFieldException from label07 to label08 with label32;
        catch java.lang.NoSuchFieldException from label10 to label11 with label32;
        catch java.lang.NoSuchFieldException from label12 to label13 with label32;
        catch java.lang.NoSuchFieldException from label14 to label15 with label32;
        catch java.lang.NoSuchFieldException from label16 to label17 with label32;
        catch java.lang.NoSuchFieldException from label18 to label19 with label32;
        catch java.lang.NoSuchFieldException from label20 to label21 with label32;
        catch java.lang.NoSuchFieldException from label22 to label23 with label32;
        catch java.lang.NoSuchFieldException from label24 to label25 with label32;
        catch java.lang.NoSuchFieldException from label26 to label27 with label32;
        catch java.lang.NoSuchFieldException from label28 to label29 with label32;
        catch java.lang.NoSuchFieldException from label30 to label31 with label32;
    }
    private static java.lang.String collectName(android.view.Display)
    {
        android.view.Display $r0;
        java.lang.StringBuilder r1, $r8;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        java.lang.String r7;
        int $i0;
        java.lang.reflect.InvocationTargetException $r9;
        java.lang.IllegalAccessException $r10;
        java.lang.IllegalArgumentException $r11;
        java.lang.NoSuchMethodException $r12;
        java.lang.SecurityException $r13;

        $r0 := @parameter0: android.view.Display;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r3 = newarray (java.lang.Class)[0];

     label03:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getName", $r3);

     label04:
        $r5 = newarray (java.lang.Object)[0];

     label05:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r5);

     label06:
        r7 = (java.lang.String) $r6;

     label07:
        $i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".name=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label08:
        r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return r7;

     label09:
        $r9 := @caughtexception;

        goto label08;

     label10:
        $r10 := @caughtexception;

        goto label08;

     label11:
        $r11 := @caughtexception;

        goto label08;

     label12:
        $r12 := @caughtexception;

        goto label08;

     label13:
        $r13 := @caughtexception;

        goto label08;

        catch java.lang.SecurityException from label01 to label02 with label13;
        catch java.lang.SecurityException from label03 to label04 with label13;
        catch java.lang.SecurityException from label05 to label06 with label13;
        catch java.lang.SecurityException from label07 to label08 with label13;
        catch java.lang.NoSuchMethodException from label01 to label02 with label12;
        catch java.lang.NoSuchMethodException from label03 to label04 with label12;
        catch java.lang.NoSuchMethodException from label05 to label06 with label12;
        catch java.lang.NoSuchMethodException from label07 to label08 with label12;
        catch java.lang.IllegalArgumentException from label01 to label02 with label11;
        catch java.lang.IllegalArgumentException from label03 to label04 with label11;
        catch java.lang.IllegalArgumentException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label07 to label08 with label11;
        catch java.lang.IllegalAccessException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label10;
        catch java.lang.IllegalAccessException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label09;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label09;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label09;
    }
    private static java.lang.Object collectRectSize(android.view.Display)
    {
        android.view.Display $r0;
        java.lang.StringBuilder r1, $r7;
        android.graphics.Rect r2;
        java.lang.Class $r3;
        java.lang.Class[] $r4;
        java.lang.reflect.Method $r5;
        java.lang.Object[] $r6;
        int $i0;
        java.lang.String $r8;
        java.lang.reflect.InvocationTargetException $r9;
        java.lang.IllegalAccessException $r10;
        java.lang.IllegalArgumentException $r11;
        java.lang.NoSuchMethodException $r12;
        java.lang.SecurityException $r13;

        $r0 := @parameter0: android.view.Display;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Landroid/graphics/Rect;";

     label03:
        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getRectSize", $r4);

     label04:
        r2 = new android.graphics.Rect;

     label05:
        specialinvoke r2.<android.graphics.Rect: void <init>()>();

     label06:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r2;

     label07:
        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r6);

        $i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".rectSize=[");

     label08:
        $i0 = r2.<android.graphics.Rect: int top>;

     label09:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label10:
        $i0 = r2.<android.graphics.Rect: int left>;

     label11:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i0 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i0 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label12:
        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label13:
        $r9 := @caughtexception;

        goto label12;

     label14:
        $r10 := @caughtexception;

        goto label12;

     label15:
        $r11 := @caughtexception;

        goto label12;

     label16:
        $r12 := @caughtexception;

        goto label12;

     label17:
        $r13 := @caughtexception;

        goto label12;

        catch java.lang.SecurityException from label01 to label02 with label17;
        catch java.lang.SecurityException from label03 to label04 with label17;
        catch java.lang.SecurityException from label05 to label06 with label17;
        catch java.lang.SecurityException from label07 to label08 with label17;
        catch java.lang.SecurityException from label09 to label10 with label17;
        catch java.lang.SecurityException from label11 to label12 with label17;
        catch java.lang.NoSuchMethodException from label01 to label02 with label16;
        catch java.lang.NoSuchMethodException from label03 to label04 with label16;
        catch java.lang.NoSuchMethodException from label05 to label06 with label16;
        catch java.lang.NoSuchMethodException from label07 to label08 with label16;
        catch java.lang.NoSuchMethodException from label09 to label10 with label16;
        catch java.lang.NoSuchMethodException from label11 to label12 with label16;
        catch java.lang.IllegalArgumentException from label01 to label02 with label15;
        catch java.lang.IllegalArgumentException from label03 to label04 with label15;
        catch java.lang.IllegalArgumentException from label05 to label06 with label15;
        catch java.lang.IllegalArgumentException from label07 to label08 with label15;
        catch java.lang.IllegalArgumentException from label09 to label10 with label15;
        catch java.lang.IllegalArgumentException from label11 to label12 with label15;
        catch java.lang.IllegalAccessException from label01 to label02 with label14;
        catch java.lang.IllegalAccessException from label03 to label04 with label14;
        catch java.lang.IllegalAccessException from label05 to label06 with label14;
        catch java.lang.IllegalAccessException from label07 to label08 with label14;
        catch java.lang.IllegalAccessException from label09 to label10 with label14;
        catch java.lang.IllegalAccessException from label11 to label12 with label14;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label13;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label13;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label13;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label13;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label13;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label13;
    }
    private static java.lang.Object collectRotation(android.view.Display)
    {
        android.view.Display $r0;
        java.lang.StringBuilder r1, $r8;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        java.lang.Integer $r7;
        int $i0, $i1;
        java.lang.String $r9;
        java.lang.SecurityException $r10;
        java.lang.NoSuchMethodException $r11;
        java.lang.IllegalArgumentException $r12;
        java.lang.IllegalAccessException $r13;
        java.lang.reflect.InvocationTargetException $r14;

        $r0 := @parameter0: android.view.Display;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r3 = newarray (java.lang.Class)[0];

     label03:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getRotation", $r3);

     label04:
        $r5 = newarray (java.lang.Object)[0];

     label05:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r5);

     label06:
        $r7 = (java.lang.Integer) $r6;

     label07:
        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i1 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".rotation=");

     label08:
        lookupswitch($i0)
        {
            case 0: goto label12;
            case 1: goto label15;
            case 2: goto label18;
            case 3: goto label21;
            default: goto label09;
        };

     label09:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

     label10:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label11:
        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label12:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ROTATION_0");

     label13:
        goto label10;

     label14:
        $r10 := @caughtexception;

        goto label11;

     label15:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ROTATION_90");

     label16:
        goto label10;

     label17:
        $r11 := @caughtexception;

        goto label11;

     label18:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ROTATION_180");

     label19:
        goto label10;

     label20:
        $r12 := @caughtexception;

        goto label11;

     label21:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ROTATION_270");

     label22:
        goto label10;

     label23:
        $r13 := @caughtexception;

        goto label11;

     label24:
        $r14 := @caughtexception;

        goto label11;

        catch java.lang.SecurityException from label01 to label02 with label14;
        catch java.lang.SecurityException from label03 to label04 with label14;
        catch java.lang.SecurityException from label05 to label06 with label14;
        catch java.lang.SecurityException from label07 to label08 with label14;
        catch java.lang.SecurityException from label09 to label11 with label14;
        catch java.lang.NoSuchMethodException from label01 to label02 with label17;
        catch java.lang.NoSuchMethodException from label03 to label04 with label17;
        catch java.lang.NoSuchMethodException from label05 to label06 with label17;
        catch java.lang.NoSuchMethodException from label07 to label08 with label17;
        catch java.lang.NoSuchMethodException from label09 to label11 with label17;
        catch java.lang.IllegalArgumentException from label01 to label02 with label20;
        catch java.lang.IllegalArgumentException from label03 to label04 with label20;
        catch java.lang.IllegalArgumentException from label05 to label06 with label20;
        catch java.lang.IllegalArgumentException from label07 to label08 with label20;
        catch java.lang.IllegalArgumentException from label09 to label11 with label20;
        catch java.lang.IllegalAccessException from label01 to label02 with label23;
        catch java.lang.IllegalAccessException from label03 to label04 with label23;
        catch java.lang.IllegalAccessException from label05 to label06 with label23;
        catch java.lang.IllegalAccessException from label07 to label08 with label23;
        catch java.lang.IllegalAccessException from label09 to label11 with label23;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label24;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label24;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label24;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label24;
        catch java.lang.reflect.InvocationTargetException from label09 to label11 with label24;
        catch java.lang.SecurityException from label12 to label13 with label14;
        catch java.lang.SecurityException from label15 to label16 with label14;
        catch java.lang.SecurityException from label18 to label19 with label14;
        catch java.lang.SecurityException from label21 to label22 with label14;
        catch java.lang.NoSuchMethodException from label12 to label13 with label17;
        catch java.lang.NoSuchMethodException from label15 to label16 with label17;
        catch java.lang.NoSuchMethodException from label18 to label19 with label17;
        catch java.lang.NoSuchMethodException from label21 to label22 with label17;
        catch java.lang.IllegalArgumentException from label12 to label13 with label20;
        catch java.lang.IllegalArgumentException from label15 to label16 with label20;
        catch java.lang.IllegalArgumentException from label18 to label19 with label20;
        catch java.lang.IllegalArgumentException from label21 to label22 with label20;
        catch java.lang.IllegalAccessException from label12 to label13 with label23;
        catch java.lang.IllegalAccessException from label15 to label16 with label23;
        catch java.lang.IllegalAccessException from label18 to label19 with label23;
        catch java.lang.IllegalAccessException from label21 to label22 with label23;
        catch java.lang.reflect.InvocationTargetException from label12 to label13 with label24;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label24;
        catch java.lang.reflect.InvocationTargetException from label18 to label19 with label24;
        catch java.lang.reflect.InvocationTargetException from label21 to label22 with label24;
    }
    private static java.lang.Object collectSize(android.view.Display, java.lang.String)
    {
        android.view.Display $r0;
        java.lang.String $r1;
        java.lang.StringBuilder r2, $r8;
        android.graphics.Point r3;
        java.lang.Class $r4;
        java.lang.Class[] $r5;
        java.lang.reflect.Method $r6;
        java.lang.Object[] $r7;
        int $i0;
        java.lang.reflect.InvocationTargetException $r9;
        java.lang.IllegalAccessException $r10;
        java.lang.IllegalArgumentException $r11;
        java.lang.NoSuchMethodException $r12;
        java.lang.SecurityException $r13;

        $r0 := @parameter0: android.view.Display;

        $r1 := @parameter1: java.lang.String;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r5 = newarray (java.lang.Class)[1];

        $r5[0] = class "Landroid/graphics/Point;";

     label03:
        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r1, $r5);

     label04:
        r3 = new android.graphics.Point;

     label05:
        specialinvoke r3.<android.graphics.Point: void <init>()>();

     label06:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r3;

     label07:
        virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r7);

        $i0 = virtualinvoke $r0.<android.view.Display: int getDisplayId()>();

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=[");

     label08:
        $i0 = r3.<android.graphics.Point: int x>;

     label09:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label10:
        $i0 = r3.<android.graphics.Point: int y>;

     label11:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label12:
        $r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label13:
        $r9 := @caughtexception;

        goto label12;

     label14:
        $r10 := @caughtexception;

        goto label12;

     label15:
        $r11 := @caughtexception;

        goto label12;

     label16:
        $r12 := @caughtexception;

        goto label12;

     label17:
        $r13 := @caughtexception;

        goto label12;

        catch java.lang.SecurityException from label01 to label02 with label17;
        catch java.lang.SecurityException from label03 to label04 with label17;
        catch java.lang.SecurityException from label05 to label06 with label17;
        catch java.lang.SecurityException from label07 to label08 with label17;
        catch java.lang.SecurityException from label09 to label10 with label17;
        catch java.lang.SecurityException from label11 to label12 with label17;
        catch java.lang.NoSuchMethodException from label01 to label02 with label16;
        catch java.lang.NoSuchMethodException from label03 to label04 with label16;
        catch java.lang.NoSuchMethodException from label05 to label06 with label16;
        catch java.lang.NoSuchMethodException from label07 to label08 with label16;
        catch java.lang.NoSuchMethodException from label09 to label10 with label16;
        catch java.lang.NoSuchMethodException from label11 to label12 with label16;
        catch java.lang.IllegalArgumentException from label01 to label02 with label15;
        catch java.lang.IllegalArgumentException from label03 to label04 with label15;
        catch java.lang.IllegalArgumentException from label05 to label06 with label15;
        catch java.lang.IllegalArgumentException from label07 to label08 with label15;
        catch java.lang.IllegalArgumentException from label09 to label10 with label15;
        catch java.lang.IllegalArgumentException from label11 to label12 with label15;
        catch java.lang.IllegalAccessException from label01 to label02 with label14;
        catch java.lang.IllegalAccessException from label03 to label04 with label14;
        catch java.lang.IllegalAccessException from label05 to label06 with label14;
        catch java.lang.IllegalAccessException from label07 to label08 with label14;
        catch java.lang.IllegalAccessException from label09 to label10 with label14;
        catch java.lang.IllegalAccessException from label11 to label12 with label14;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label13;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label13;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label13;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label13;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label13;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label13;
    }
