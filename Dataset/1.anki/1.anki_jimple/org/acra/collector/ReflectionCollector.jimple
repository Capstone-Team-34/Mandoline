org.acra.collector.ReflectionCollector extends java.lang.Object
    void <init>()
    {
        org.acra.collector.ReflectionCollector r0;

        r0 := @this: org.acra.collector.ReflectionCollector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.String collectConstants(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.acra.collector.ReflectionCollector: java.lang.String collectConstants(java.lang.Class,java.lang.String)>(r0, "");

        return $r1;
    }
    public static java.lang.String collectConstants(java.lang.Class, java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String $r1, $r6;
        java.lang.reflect.Field r2;
        int i0, i1, $i2;
        java.lang.StringBuilder r3, $r5;
        java.lang.reflect.Field[] $r4;
        java.lang.Object $r7;
        boolean $z0;
        java.lang.Object[] r8;
        java.lang.IllegalArgumentException r9;
        java.lang.IllegalAccessException r10;

        r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        i0 = lengthof $r4;

        i1 = 0;

     label01:
        if i1 >= i0 goto label13;

        r2 = $r4[i1];

        if $r1 == null goto label02;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label02;

        $r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

     label02:
        $r6 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();

        $r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

     label03:
        $r7 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

     label04:
        if $r7 == null goto label08;

     label05:
        r0 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

     label06:
        if $z0 == 0 goto label09;

        r8 = (java.lang.Object[]) $r7;

     label07:
        $r6 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r8);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label08:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        i1 = i1 + 1;

        goto label01;

     label09:
        $r6 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label10:
        goto label08;

     label11:
        r9 := @caughtexception;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("N/A");

        goto label08;

     label12:
        r10 := @caughtexception;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("N/A");

        goto label08;

     label13:
        $r1 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

        catch java.lang.IllegalArgumentException from label03 to label04 with label11;
        catch java.lang.IllegalArgumentException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label07 to label08 with label11;
        catch java.lang.IllegalAccessException from label03 to label04 with label12;
        catch java.lang.IllegalAccessException from label05 to label06 with label12;
        catch java.lang.IllegalAccessException from label07 to label08 with label12;
        catch java.lang.IllegalArgumentException from label09 to label10 with label11;
        catch java.lang.IllegalAccessException from label09 to label10 with label12;
    }
    public static java.lang.String collectStaticGettersResults(java.lang.Class)
    {
        java.lang.Class r0;
        int i0, i1, $i2;
        java.lang.reflect.Method r1;
        java.lang.StringBuilder r2;
        java.lang.reflect.Method[] $r3;
        java.lang.Class[] $r4;
        java.lang.String $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.reflect.InvocationTargetException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.IllegalArgumentException $r9;

        r0 := @parameter0: java.lang.Class;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r1 = $r3[i1];

        $r4 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i2 = lengthof $r4;

        if $i2 != 0 goto label4;

        $r5 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("get");

        if $z0 != 0 goto label2;

        $r5 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("is");

        if $z0 == 0 goto label4;

     label2:
        $r5 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("getClass");

        if $z0 != 0 goto label4;

     label3:
        $r5 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r6 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label6:
        $r7 := @caughtexception;

        goto label4;

     label7:
        $r8 := @caughtexception;

        goto label4;

     label8:
        $r9 := @caughtexception;

        goto label4;

        catch java.lang.IllegalArgumentException from label3 to label4 with label8;
        catch java.lang.IllegalAccessException from label3 to label4 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label6;
    }
