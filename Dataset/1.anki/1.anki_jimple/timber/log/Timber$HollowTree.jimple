timber.log.Timber$HollowTree extends java.lang.Object implements timber.log.Timber$Tree
    public void <init>()
    {
        timber.log.Timber$HollowTree r0;

        r0 := @this: timber.log.Timber$HollowTree;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public transient void d(java.lang.String, java.lang.Object[])
    {
        timber.log.Timber$HollowTree r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;

        r0 := @this: timber.log.Timber$HollowTree;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        return;
    }
    public transient void d(java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        timber.log.Timber$HollowTree r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;

        r0 := @this: timber.log.Timber$HollowTree;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object[];

        return;
    }
    public transient void e(java.lang.String, java.lang.Object[])
    {
        timber.log.Timber$HollowTree r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;

        r0 := @this: timber.log.Timber$HollowTree;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        return;
    }
    public transient void e(java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        timber.log.Timber$HollowTree r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;

        r0 := @this: timber.log.Timber$HollowTree;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object[];

        return;
    }
    public transient void i(java.lang.String, java.lang.Object[])
    {
        timber.log.Timber$HollowTree r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;

        r0 := @this: timber.log.Timber$HollowTree;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        return;
    }
    public transient void i(java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        timber.log.Timber$HollowTree r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;

        r0 := @this: timber.log.Timber$HollowTree;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object[];

        return;
    }
    public transient void v(java.lang.String, java.lang.Object[])
    {
        timber.log.Timber$HollowTree r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;

        r0 := @this: timber.log.Timber$HollowTree;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        return;
    }
    public transient void v(java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        timber.log.Timber$HollowTree r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;

        r0 := @this: timber.log.Timber$HollowTree;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object[];

        return;
    }
    public transient void w(java.lang.String, java.lang.Object[])
    {
        timber.log.Timber$HollowTree r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;

        r0 := @this: timber.log.Timber$HollowTree;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        return;
    }
    public transient void w(java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        timber.log.Timber$HollowTree r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;

        r0 := @this: timber.log.Timber$HollowTree;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object[];

        return;
    }
