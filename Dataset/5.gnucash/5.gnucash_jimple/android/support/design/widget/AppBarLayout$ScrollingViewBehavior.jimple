android.support.design.widget.AppBarLayout$ScrollingViewBehavior extends android.support.design.widget.ViewOffsetBehavior
private int mOverlayTop
    public void <init>()
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        specialinvoke r0.<android.support.design.widget.ViewOffsetBehavior: void <init>()>();

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.design.widget.ViewOffsetBehavior: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = <android.support.design.R$styleable: int[] ScrollingViewBehavior_Params>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $i0 = <android.support.design.R$styleable: int ScrollingViewBehavior_Params_behavior_overlapTop>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        r0.<android.support.design.widget.AppBarLayout$ScrollingViewBehavior: int mOverlayTop> = $i0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }
    private static android.support.design.widget.AppBarLayout findFirstAppBarLayout(java.util.List)
    {
        java.util.List r0;
        boolean $z0;
        int i0, $i1;
        java.lang.Object $r1;
        android.view.View r2;
        android.support.design.widget.AppBarLayout r3;

        r0 := @parameter0: java.util.List;

        i0 = 0;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

     label1:
        if i0 >= $i1 goto label3;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (android.view.View) $r1;

        $z0 = r2 instanceof android.support.design.widget.AppBarLayout;

        if $z0 == 0 goto label2;

        r3 = (android.support.design.widget.AppBarLayout) r2;

        return r3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }
    public volatile int getLeftAndRightOffset()
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $i0 = specialinvoke r0.<android.support.design.widget.ViewOffsetBehavior: int getLeftAndRightOffset()>();

        return $i0;
    }
    public int getOverlayTop()
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        int i0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        i0 = r0.<android.support.design.widget.AppBarLayout$ScrollingViewBehavior: int mOverlayTop>;

        return i0;
    }
    public volatile int getTopAndBottomOffset()
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $i0 = specialinvoke r0.<android.support.design.widget.ViewOffsetBehavior: int getTopAndBottomOffset()>();

        return $i0;
    }
    public boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.View)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View $r2, $r3;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.view.View;

        $z0 = $r3 instanceof android.support.design.widget.AppBarLayout;

        return $z0;
    }
    public boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout, android.view.View, android.view.View)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View $r2, r3;
        int i0, i1, $i2, $i3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r5;
        android.support.design.widget.CoordinatorLayout$Behavior $r6;
        boolean $z0;
        android.support.design.widget.AppBarLayout$Behavior r7;
        android.support.design.widget.AppBarLayout r8;
        float $f0, $f1;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.View;

        $r4 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        $r6 = virtualinvoke $r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        $z0 = $r6 instanceof android.support.design.widget.AppBarLayout$Behavior;

        if $z0 == 0 goto label1;

        r7 = (android.support.design.widget.AppBarLayout$Behavior) $r6;

        $i2 = virtualinvoke r7.<android.support.design.widget.AppBarLayout$Behavior: int getTopBottomOffsetForScrollingSibling()>();

        i1 = virtualinvoke r3.<android.view.View: int getHeight()>();

        i0 = r0.<android.support.design.widget.AppBarLayout$ScrollingViewBehavior: int mOverlayTop>;

        i1 = i1 - i0;

        i0 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        $i3 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        i0 = i0 - $i3;

        $i3 = r0.<android.support.design.widget.AppBarLayout$ScrollingViewBehavior: int mOverlayTop>;

        if $i3 == 0 goto label2;

        $z0 = r3 instanceof android.support.design.widget.AppBarLayout;

        if $z0 == 0 goto label2;

        r8 = (android.support.design.widget.AppBarLayout) r3;

        $i3 = virtualinvoke r8.<android.support.design.widget.AppBarLayout: int getTotalScrollRange()>();

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        $f0 = (float) $i2;

        $f1 = (float) $i3;

        $f0 = $f0 / $f1;

        $i2 = staticinvoke <android.support.design.widget.AnimationUtils: int lerp(int,int,float)>(i1, i0, $f0);

        virtualinvoke r0.<android.support.design.widget.AppBarLayout$ScrollingViewBehavior: boolean setTopAndBottomOffset(int)>($i2);

     label1:
        return 0;

     label2:
        i1 = virtualinvoke r3.<android.view.View: int getHeight()>();

        i0 = r0.<android.support.design.widget.AppBarLayout$ScrollingViewBehavior: int mOverlayTop>;

        i1 = i1 - i0;

        $i2 = i1 + $i2;

        virtualinvoke r0.<android.support.design.widget.AppBarLayout$ScrollingViewBehavior: boolean setTopAndBottomOffset(int)>($i2);

        goto label1;
    }
    public volatile boolean onLayoutChild(android.support.design.widget.CoordinatorLayout, android.view.View, int)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $z0 = specialinvoke r0.<android.support.design.widget.ViewOffsetBehavior: boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)>($r1, $r2, $i0);

        return $z0;
    }
    public boolean onMeasureChild(android.support.design.widget.CoordinatorLayout, android.view.View, int, int, int, int)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        android.support.design.widget.CoordinatorLayout $r1;
        android.view.View $r2;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.ViewGroup$LayoutParams $r3;
        java.util.List $r4;
        boolean $z0;
        android.support.design.widget.AppBarLayout $r5;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $r1 := @parameter0: android.support.design.widget.CoordinatorLayout;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i4 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        if $i4 != -1 goto label4;

        $r4 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: java.util.List getDependencies(android.view.View)>($r2);

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r5 = staticinvoke <android.support.design.widget.AppBarLayout$ScrollingViewBehavior: android.support.design.widget.AppBarLayout findFirstAppBarLayout(java.util.List)>($r4);

        if $r5 == null goto label4;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>($r5);

        if $z0 == 0 goto label4;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r5);

        if $z0 == 0 goto label2;

        staticinvoke <android.support.v4.view.ViewCompat: void setFitsSystemWindows(android.view.View,boolean)>($r2, 1);

     label2:
        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i2);

        $i2 = $i4;

        if $i4 != 0 goto label3;

        $i2 = virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

     label3:
        $i4 = virtualinvoke $r5.<android.support.design.widget.AppBarLayout: int getMeasuredHeight()>();

        $i2 = $i2 - $i4;

        $i4 = virtualinvoke $r5.<android.support.design.widget.AppBarLayout: int getTotalScrollRange()>();

        $i2 = $i2 + $i4;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, -2147483648);

        virtualinvoke $r1.<android.support.design.widget.CoordinatorLayout: void onMeasureChild(android.view.View,int,int,int,int)>($r2, $i0, $i1, $i2, $i3);

        return 1;

     label4:
        return 0;
    }
    public volatile boolean setLeftAndRightOffset(int)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.support.design.widget.ViewOffsetBehavior: boolean setLeftAndRightOffset(int)>($i0);

        return $z0;
    }
    public void setOverlayTop(int)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        int $i0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $i0 := @parameter0: int;

        r0.<android.support.design.widget.AppBarLayout$ScrollingViewBehavior: int mOverlayTop> = $i0;

        return;
    }
    public volatile boolean setTopAndBottomOffset(int)
    {
        android.support.design.widget.AppBarLayout$ScrollingViewBehavior r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.AppBarLayout$ScrollingViewBehavior;

        $i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.support.design.widget.ViewOffsetBehavior: boolean setTopAndBottomOffset(int)>($i0);

        return $z0;
    }
