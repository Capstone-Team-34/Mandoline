android.support.design.widget.CoordinatorLayout extends android.view.ViewGroup implements android.support.v4.view.NestedScrollingParent
static final java.lang.Class[] CONSTRUCTOR_PARAMS
static final android.support.design.widget.CoordinatorLayoutInsetsHelper INSETS_HELPER
static final java.lang.String TAG
static final java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR
static final java.lang.String WIDGET_PACKAGE_NAME
static final java.lang.ThreadLocal sConstructors
private android.view.View mBehaviorTouchView
private final java.util.List mDependencySortedChildren
private boolean mDrawStatusBarBackground
private boolean mIsAttachedToWindow
private int[] mKeylines
private android.support.v4.view.WindowInsetsCompat mLastInsets
final java.util.Comparator mLayoutDependencyComparator
private boolean mNeedsPreDrawListener
private android.view.View mNestedScrollingDirectChild
private final android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper
private android.view.View mNestedScrollingTarget
private android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener
private android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener
private android.graphics.Paint mScrimPaint
private android.graphics.drawable.Drawable mStatusBarBackground
private final java.util.List mTempDependenciesList
private final int[] mTempIntPair
private final java.util.List mTempList1
private final android.graphics.Rect mTempRect1
private final android.graphics.Rect mTempRect2
private final android.graphics.Rect mTempRect3
    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.Package $r1;
        java.lang.String $r2;
        int $i0;
        android.support.design.widget.CoordinatorLayout$ViewElevationComparator $r3;
        android.support.design.widget.CoordinatorLayoutInsetsHelperLollipop $r4;
        java.lang.Class[] $r5;
        java.lang.ThreadLocal $r6;

        $r0 = class "Landroid/support/design/widget/CoordinatorLayout;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Package getPackage()>();

        $r2 = virtualinvoke $r1.<java.lang.Package: java.lang.String getName()>();

        <android.support.design.widget.CoordinatorLayout: java.lang.String WIDGET_PACKAGE_NAME> = $r2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label2;

        $r3 = new android.support.design.widget.CoordinatorLayout$ViewElevationComparator;

        specialinvoke $r3.<android.support.design.widget.CoordinatorLayout$ViewElevationComparator: void <init>()>();

        <android.support.design.widget.CoordinatorLayout: java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR> = $r3;

        $r4 = new android.support.design.widget.CoordinatorLayoutInsetsHelperLollipop;

        specialinvoke $r4.<android.support.design.widget.CoordinatorLayoutInsetsHelperLollipop: void <init>()>();

        <android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayoutInsetsHelper INSETS_HELPER> = $r4;

     label1:
        $r5 = newarray (java.lang.Class)[2];

        $r5[0] = class "Landroid/content/Context;";

        $r5[1] = class "Landroid/util/AttributeSet;";

        <android.support.design.widget.CoordinatorLayout: java.lang.Class[] CONSTRUCTOR_PARAMS> = $r5;

        $r6 = new java.lang.ThreadLocal;

        specialinvoke $r6.<java.lang.ThreadLocal: void <init>()>();

        <android.support.design.widget.CoordinatorLayout: java.lang.ThreadLocal sConstructors> = $r6;

        return;

     label2:
        <android.support.design.widget.CoordinatorLayout: java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR> = null;

        <android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayoutInsetsHelper INSETS_HELPER> = null;

        goto label1;
    }
    public void <init>(android.content.Context)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.content.Context $r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1, $i2;
        float f0, $f1;
        android.support.design.widget.CoordinatorLayout$1 $r3;
        java.util.ArrayList $r4;
        android.graphics.Rect $r5;
        int[] $r6;
        android.support.v4.view.NestedScrollingParentHelper $r7;
        android.content.res.TypedArray $r8;
        android.content.res.Resources $r9;
        android.util.DisplayMetrics $r10;
        android.graphics.drawable.Drawable $r11;
        android.support.design.widget.CoordinatorLayoutInsetsHelper $r12;
        android.support.design.widget.CoordinatorLayout$ApplyInsetsListener $r13;
        android.support.design.widget.CoordinatorLayout$HierarchyChangeListener $r14;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.support.design.widget.CoordinatorLayout$1;

        specialinvoke $r3.<android.support.design.widget.CoordinatorLayout$1: void <init>(android.support.design.widget.CoordinatorLayout)>(r0);

        r0.<android.support.design.widget.CoordinatorLayout: java.util.Comparator mLayoutDependencyComparator> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.support.design.widget.CoordinatorLayout: java.util.List mTempList1> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.support.design.widget.CoordinatorLayout: java.util.List mTempDependenciesList> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect1> = $r5;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect2> = $r5;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect3> = $r5;

        $r6 = newarray (int)[2];

        r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair> = $r6;

        $r7 = new android.support.v4.view.NestedScrollingParentHelper;

        specialinvoke $r7.<android.support.v4.view.NestedScrollingParentHelper: void <init>(android.view.ViewGroup)>(r0);

        r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper> = $r7;

        $r6 = <android.support.design.R$styleable: int[] CoordinatorLayout>;

        $i1 = <android.support.design.R$style: int Widget_Design_CoordinatorLayout>;

        $r8 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r6, $i0, $i1);

        $i0 = <android.support.design.R$styleable: int CoordinatorLayout_keylines>;

        $i0 = virtualinvoke $r8.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

        if $i0 == 0 goto label2;

        $r9 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r9.<android.content.res.Resources: int[] getIntArray(int)>($i0);

        r0.<android.support.design.widget.CoordinatorLayout: int[] mKeylines> = $r6;

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r10.<android.util.DisplayMetrics: float density>;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: int[] mKeylines>;

        $i0 = lengthof $r6;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: int[] mKeylines>;

        $i2 = $r6[$i1];

        $f1 = (float) $i2;

        $f1 = $f1 * f0;

        $i2 = (int) $f1;

        $r6[$i1] = $i2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $i0 = <android.support.design.R$styleable: int CoordinatorLayout_statusBarBackground>;

        $r11 = virtualinvoke $r8.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $r11;

        virtualinvoke $r8.<android.content.res.TypedArray: void recycle()>();

        $r12 = <android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayoutInsetsHelper INSETS_HELPER>;

        if $r12 == null goto label3;

        $r12 = <android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayoutInsetsHelper INSETS_HELPER>;

        $r13 = new android.support.design.widget.CoordinatorLayout$ApplyInsetsListener;

        specialinvoke $r13.<android.support.design.widget.CoordinatorLayout$ApplyInsetsListener: void <init>(android.support.design.widget.CoordinatorLayout)>(r0);

        interfaceinvoke $r12.<android.support.design.widget.CoordinatorLayoutInsetsHelper: void setupForWindowInsets(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener)>(r0, $r13);

     label3:
        $r14 = new android.support.design.widget.CoordinatorLayout$HierarchyChangeListener;

        specialinvoke $r14.<android.support.design.widget.CoordinatorLayout$HierarchyChangeListener: void <init>(android.support.design.widget.CoordinatorLayout)>(r0);

        specialinvoke r0.<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>($r14);

        return;
    }
    static void access$000(android.support.design.widget.CoordinatorLayout, android.support.v4.view.WindowInsetsCompat)
    {
        android.support.design.widget.CoordinatorLayout $r0;
        android.support.v4.view.WindowInsetsCompat $r1;

        $r0 := @parameter0: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter1: android.support.v4.view.WindowInsetsCompat;

        specialinvoke $r0.<android.support.design.widget.CoordinatorLayout: void setWindowInsets(android.support.v4.view.WindowInsetsCompat)>($r1);

        return;
    }
    static android.view.ViewGroup$OnHierarchyChangeListener access$100(android.support.design.widget.CoordinatorLayout)
    {
        android.support.design.widget.CoordinatorLayout $r0;
        android.view.ViewGroup$OnHierarchyChangeListener r1;

        $r0 := @parameter0: android.support.design.widget.CoordinatorLayout;

        r1 = $r0.<android.support.design.widget.CoordinatorLayout: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener>;

        return r1;
    }
    private void dispatchChildApplyWindowInsets(android.support.v4.view.WindowInsetsCompat)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.support.v4.view.WindowInsetsCompat $r1, $r6;
        boolean $z0;
        int i0, $i1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        android.support.design.widget.CoordinatorLayout$Behavior $r5;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.support.v4.view.WindowInsetsCompat;

        $z0 = virtualinvoke $r1.<android.support.v4.view.WindowInsetsCompat: boolean isConsumed()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        i0 = 0;

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

     label2:
        if i0 >= $i1 goto label5;

        $r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i0);

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r2);

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        $r5 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r5 == null goto label3;

        $r6 = virtualinvoke $r5.<android.support.design.widget.CoordinatorLayout$Behavior: android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.support.design.widget.CoordinatorLayout,android.view.View,android.support.v4.view.WindowInsetsCompat)>(r0, $r2, $r1);

        $r1 = $r6;

        $z0 = virtualinvoke $r6.<android.support.v4.view.WindowInsetsCompat: boolean isConsumed()>();

        if $z0 != 0 goto label5;

     label3:
        $r6 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat)>($r2, $r1);

        $r1 = $r6;

        $z0 = virtualinvoke $r6.<android.support.v4.view.WindowInsetsCompat: boolean isConsumed()>();

        if $z0 != 0 goto label5;

     label4:
        i0 = i0 + 1;

        goto label2;

     label5:
        return;
    }
    private int getKeyline(int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        int $i0, $i1;
        int[] $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: int[] mKeylines>;

        if $r1 != null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No keylines defined for ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - attempted index lookup ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoordinatorLayout", $r3);

        return 0;

     label1:
        if $i0 < 0 goto label2;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: int[] mKeylines>;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Keyline index ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of range for ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoordinatorLayout", $r3);

        return 0;

     label3:
        $r1 = r0.<android.support.design.widget.CoordinatorLayout: int[] mKeylines>;

        $i0 = $r1[$i0];

        return $i0;
    }
    private void getTopSortedChildren(java.util.List)
    {
        android.support.design.widget.CoordinatorLayout r0;
        java.util.List r1;
        boolean $z0;
        int $i0, i1, $i2;
        android.view.View $r2;
        java.util.Comparator $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: java.util.List;

        interfaceinvoke r1.<java.util.List: void clear()>();

        $z0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: boolean isChildrenDrawingOrderEnabled()>();

        $i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i1 = $i0 + -1;

     label1:
        if i1 < 0 goto label4;

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildDrawingOrder(int,int)>($i0, i1);

     label2:
        $r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i2);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        i1 = i1 + -1;

        goto label1;

     label3:
        $i2 = i1;

        goto label2;

     label4:
        $r3 = <android.support.design.widget.CoordinatorLayout: java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR>;

        if $r3 == null goto label5;

        $r3 = <android.support.design.widget.CoordinatorLayout: java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r3);

     label5:
        return;
    }
    private void layoutChild(android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.Rect r2, r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.design.widget.CoordinatorLayout$LayoutParams r5;
        android.support.v4.view.WindowInsetsCompat $r6;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r4 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        r2 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect1>;

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i2 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        $i1 = $i1 + $i2;

        $i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingTop()>();

        $i3 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        $i4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        $i3 = $i3 - $i4;

        $i4 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i3 = $i3 - $i4;

        $i4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        $i5 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i4 = $i4 - $i5;

        $i5 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i4 = $i4 - $i5;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i2, $i3, $i4);

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        if $r6 == null goto label1;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r0);

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r1);

        if $z0 != 0 goto label1;

        $i1 = r2.<android.graphics.Rect: int left>;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i2 = virtualinvoke $r6.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        $i1 = $i1 + $i2;

        r2.<android.graphics.Rect: int left> = $i1;

        $i1 = r2.<android.graphics.Rect: int top>;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i2 = virtualinvoke $r6.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        $i1 = $i1 + $i2;

        r2.<android.graphics.Rect: int top> = $i1;

        $i1 = r2.<android.graphics.Rect: int right>;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i2 = virtualinvoke $r6.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        $i1 = $i1 - $i2;

        r2.<android.graphics.Rect: int right> = $i1;

        $i1 = r2.<android.graphics.Rect: int bottom>;

        $r6 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i2 = virtualinvoke $r6.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>();

        $i1 = $i1 - $i2;

        r2.<android.graphics.Rect: int bottom> = $i1;

     label1:
        r3 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect2>;

        $i1 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int gravity>;

        $i1 = staticinvoke <android.support.design.widget.CoordinatorLayout: int resolveGravity(int)>($i1);

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        staticinvoke <android.support.v4.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>($i1, $i2, $i3, r2, r3, $i0);

        $i0 = r3.<android.graphics.Rect: int left>;

        $i1 = r3.<android.graphics.Rect: int top>;

        $i2 = r3.<android.graphics.Rect: int right>;

        $i3 = r3.<android.graphics.Rect: int bottom>;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
    private void layoutChildWithAnchor(android.view.View, android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.Rect r3, r4;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.design.widget.CoordinatorLayout$LayoutParams r6;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r5 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        r3 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect1>;

        r4 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect2>;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getDescendantRect(android.view.View,android.graphics.Rect)>($r2, r3);

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect)>($r1, $i0, r3, r4);

        $i0 = r4.<android.graphics.Rect: int left>;

        $i1 = r4.<android.graphics.Rect: int top>;

        $i2 = r4.<android.graphics.Rect: int right>;

        $i3 = r4.<android.graphics.Rect: int bottom>;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
    private void layoutChildWithKeyline(android.view.View, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.design.widget.CoordinatorLayout$LayoutParams r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i3 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r2;

        $i4 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int gravity>;

        $i4 = staticinvoke <android.support.design.widget.CoordinatorLayout: int resolveKeylineGravity(int)>($i4);

        $i4 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>($i4, $i0);

        i1 = $i4 & 7;

        i2 = $i4 & 112;

        $i5 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        $i6 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        $i7 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        if $i0 != 1 goto label1;

        $i3 = $i5 - $i3;

     label1:
        $i3 = specialinvoke r0.<android.support.design.widget.CoordinatorLayout: int getKeyline(int)>($i3);

        $i0 = $i3 - $i7;

        $i3 = 0;

        lookupswitch(i1)
        {
            case 1: goto label5;
            case 5: goto label4;
            default: goto label2;
        };

     label2:
        lookupswitch(i2)
        {
            case 16: goto label7;
            case 80: goto label6;
            default: goto label3;
        };

     label3:
        i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        i2 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        i1 = i1 + i2;

        i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        $i5 = $i5 - i2;

        $i5 = $i5 - $i7;

        i2 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i5 = $i5 - i2;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i5);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i0);

        $i5 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingTop()>();

        i1 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i5 = $i5 + i1;

        i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i6 = $i6 - i1;

        $i6 = $i6 - $i4;

        i1 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i6 = $i6 - i1;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i6);

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i3);

        $i7 = $i0 + $i7;

        $i4 = $i3 + $i4;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i3, $i7, $i4);

        return;

     label4:
        $i0 = $i0 + $i7;

        goto label2;

     label5:
        i1 = $i7 / 2;

        $i0 = $i0 + i1;

        goto label2;

     label6:
        $i3 = $i4;

        goto label3;

     label7:
        $i3 = $i4 / 2;

        goto label3;
    }
    static android.support.design.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context, android.util.AttributeSet, java.lang.String)
    {
        android.content.Context $r0;
        android.util.AttributeSet $r1;
        java.lang.String $r2, $r5;
        java.lang.Exception r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r16;
        java.lang.ThreadLocal $r6;
        java.lang.Object $r7;
        java.util.Map r8;
        java.lang.reflect.Constructor r9, $r13;
        java.lang.ClassLoader $r10;
        java.lang.Class $r11;
        java.lang.Class[] $r12;
        java.lang.Object[] $r14;
        android.support.design.widget.CoordinatorLayout$Behavior $r15;
        int $i0;
        java.util.HashMap $r17;
        java.lang.RuntimeException $r18;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.util.AttributeSet;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label01;

        return null;

     label01:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label17;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r6 = <android.support.design.widget.CoordinatorLayout: java.lang.ThreadLocal sConstructors>;

     label03:
        $r7 = virtualinvoke $r6.<java.lang.ThreadLocal: java.lang.Object get()>();

        r8 = (java.util.Map) $r7;

     label04:
        if r8 != null goto label08;

        $r17 = new java.util.HashMap;

        r8 = $r17;

     label05:
        specialinvoke $r17.<java.util.HashMap: void <init>()>();

     label06:
        $r6 = <android.support.design.widget.CoordinatorLayout: java.lang.ThreadLocal sConstructors>;

     label07:
        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>($r17);

     label08:
        $r7 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r9 = (java.lang.reflect.Constructor) $r7;

     label09:
        if r9 != null goto label15;

     label10:
        $r10 = virtualinvoke $r0.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r11 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r2, 1, $r10);

     label11:
        $r12 = <android.support.design.widget.CoordinatorLayout: java.lang.Class[] CONSTRUCTOR_PARAMS>;

     label12:
        $r13 = virtualinvoke $r11.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r12);

     label13:
        r9 = $r13;

     label14:
        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r13);

     label15:
        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = $r0;

        $r14[1] = $r1;

        $r7 = virtualinvoke r9.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r14);

        $r15 = (android.support.design.widget.CoordinatorLayout$Behavior) $r7;

     label16:
        return $r15;

     label17:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(46);

        if $i0 < 0 goto label18;

        goto label02;

     label18:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r5 = <android.support.design.widget.CoordinatorLayout: java.lang.String WIDGET_PACKAGE_NAME>;

        $r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label19:
        r3 := @caughtexception;

        $r18 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not inflate Behavior subclass ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r2, r3);

        throw $r18;

        catch java.lang.Exception from label03 to label04 with label19;
        catch java.lang.Exception from label05 to label06 with label19;
        catch java.lang.Exception from label07 to label09 with label19;
        catch java.lang.Exception from label10 to label11 with label19;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Exception from label14 to label16 with label19;
    }
    private boolean performIntercept(android.view.MotionEvent)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.MotionEvent $r1, r2;
        boolean z0, z1, $z2;
        int $i0, $i1, i2;
        java.util.List $r3;
        java.lang.Object $r4;
        android.view.View r5;
        android.view.ViewGroup$LayoutParams $r6;
        android.support.design.widget.CoordinatorLayout$LayoutParams r7;
        android.support.design.widget.CoordinatorLayout$Behavior $r8;
        long $l3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.MotionEvent;

        z0 = 0;

        z1 = 0;

        r2 = null;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mTempList1>;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void getTopSortedChildren(java.util.List)>($r3);

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label8;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (android.view.View) $r4;

        $r6 = virtualinvoke r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r6;

        $r8 = virtualinvoke r7.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if z0 != 0 goto label2;

        if z1 == 0 goto label5;

     label2:
        if $i0 == 0 goto label5;

        if $r8 == null goto label4;

        if r2 == null goto label3;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l3, $l3, 3, 0.0F, 0.0F, 0);

     label3:
        virtualinvoke $r8.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>(r0, r5, r2);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        if z0 != 0 goto label6;

        if $r8 == null goto label6;

        $z2 = virtualinvoke $r8.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>(r0, r5, $r1);

        z0 = $z2;

        if $z2 == 0 goto label6;

        r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView> = r5;

     label6:
        z1 = virtualinvoke r7.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean didBlockInteraction()>();

        $z2 = virtualinvoke r7.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isBlockingInteractionBelow(android.support.design.widget.CoordinatorLayout,android.view.View)>(r0, r5);

        if $z2 == 0 goto label9;

        if z1 != 0 goto label9;

        z1 = 1;

     label7:
        if $z2 == 0 goto label4;

        if z1 != 0 goto label4;

     label8:
        interfaceinvoke $r3.<java.util.List: void clear()>();

        return z0;

     label9:
        z1 = 0;

        goto label7;
    }
    private void prepareChildren()
    {
        android.support.design.widget.CoordinatorLayout r0;
        int $i0, $i1;
        java.util.List $r1;
        boolean z0, $z1;
        android.view.View $r2;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r3;
        java.util.Comparator $r4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 == $i0 goto label4;

        z0 = 1;

     label1:
        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i1);

        $r3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View)>($r2);

        if z0 != 0 goto label3;

        $z1 = virtualinvoke $r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isDirty(android.support.design.widget.CoordinatorLayout,android.view.View)>(r0, $r2);

        if $z1 == 0 goto label3;

        z0 = 1;

     label3:
        virtualinvoke $r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View findAnchorView(android.support.design.widget.CoordinatorLayout,android.view.View)>(r0, $r2);

        $i1 = $i1 + 1;

        goto label2;

     label4:
        z0 = 0;

        goto label1;

     label5:
        if z0 == 0 goto label8;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $i1 = 0;

     label6:
        if $i1 >= $i0 goto label7;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label6;

     label7:
        $r1 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r4 = r0.<android.support.design.widget.CoordinatorLayout: java.util.Comparator mLayoutDependencyComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r1, $r4);

     label8:
        return;
    }
    private void resetTouchBehaviors()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r3;
        android.support.design.widget.CoordinatorLayout$Behavior $r4;
        long $l0;
        android.view.MotionEvent $r5;
        int $i1, i2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        if $r1 == null goto label2;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r2;

        $r4 = virtualinvoke $r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r4 == null goto label1;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l0, $l0, 3, 0.0F, 0.0F, 0);

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        virtualinvoke $r4.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>(r0, $r1, $r5);

        virtualinvoke $r5.<android.view.MotionEvent: void recycle()>();

     label1:
        r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView> = null;

     label2:
        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i2 = 0;

     label3:
        if i2 >= $i1 goto label4;

        $r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i2);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r2;

        virtualinvoke $r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: void resetTouchBehaviorTracking()>();

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }
    private static int resolveAnchoredChildGravity(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        return 17;

     label1:
        return $i0;
    }
    private static int resolveGravity(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        return 8388659;

     label1:
        return $i0;
    }
    private static int resolveKeylineGravity(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        return 8388661;

     label1:
        return $i0;
    }
    private void setWindowInsets(android.support.v4.view.WindowInsetsCompat)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.support.v4.view.WindowInsetsCompat $r1, $r2;
        boolean $z0, $z1;
        int $i0;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.support.v4.view.WindowInsetsCompat;

        $z0 = 1;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        if $r2 == $r1 goto label5;

        r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets> = $r1;

        if $r1 == null goto label3;

        $i0 = virtualinvoke $r1.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        if $i0 <= 0 goto label3;

        $z1 = 1;

     label1:
        r0.<android.support.design.widget.CoordinatorLayout: boolean mDrawStatusBarBackground> = $z1;

        $z1 = r0.<android.support.design.widget.CoordinatorLayout: boolean mDrawStatusBarBackground>;

        if $z1 != 0 goto label4;

        $r3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable getBackground()>();

        if $r3 != null goto label4;

     label2:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void setWillNotDraw(boolean)>($z0);

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void dispatchChildApplyWindowInsets(android.support.v4.view.WindowInsetsCompat)>($r1);

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void requestLayout()>();

        return;

     label3:
        $z1 = 0;

        goto label1;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        return;
    }
    void addPreDrawListener()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewTreeObserver $r1;
        boolean $z0;
        android.support.design.widget.CoordinatorLayout$OnPreDrawListener $r2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $z0 = r0.<android.support.design.widget.CoordinatorLayout: boolean mIsAttachedToWindow>;

        if $z0 == 0 goto label2;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        if $r2 != null goto label1;

        $r2 = new android.support.design.widget.CoordinatorLayout$OnPreDrawListener;

        specialinvoke $r2.<android.support.design.widget.CoordinatorLayout$OnPreDrawListener: void <init>(android.support.design.widget.CoordinatorLayout)>(r0);

        r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener> = $r2;

     label1:
        $r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke $r1.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r2);

     label2:
        r0.<android.support.design.widget.CoordinatorLayout: boolean mNeedsPreDrawListener> = 1;

        return;
    }
    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof android.support.design.widget.CoordinatorLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    void dispatchDependentViewRemoved(android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r2;
        int $i0, i1;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        android.support.design.widget.CoordinatorLayout$Behavior $r5;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i1);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        $r5 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r5 == null goto label2;

        $z0 = virtualinvoke $r5.<android.support.design.widget.CoordinatorLayout$Behavior: boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, $r2, $r1);

        if $z0 == 0 goto label2;

        virtualinvoke $r5.<android.support.design.widget.CoordinatorLayout$Behavior: void onDependentViewRemoved(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, $r2, $r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }
    public void dispatchDependentViewsChanged(android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, r4;
        java.util.List $r2;
        int $i0, i1;
        boolean z0, $z1;
        java.lang.Object $r3;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.design.widget.CoordinatorLayout$LayoutParams r6;
        android.support.design.widget.CoordinatorLayout$Behavior $r7;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        z0 = 0;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (android.view.View) $r3;

        if r4 != $r1 goto label3;

        z0 = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if z0 == 0 goto label2;

        $r5 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        $r7 = virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r7 == null goto label2;

        $z1 = virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, r4, $r1);

        if $z1 == 0 goto label2;

        virtualinvoke $r7.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, r4, $r1);

        goto label2;

     label4:
        return;
    }
    void dispatchOnDependentViewChanged(boolean)
    {
        android.support.design.widget.CoordinatorLayout r0;
        boolean $z0, $z1;
        android.graphics.Rect r1, r2;
        int $i0, $i1, i2, i3;
        java.util.List $r3;
        java.lang.Object $r4;
        android.view.View r5, r8, $r9;
        android.view.ViewGroup$LayoutParams $r6;
        android.support.design.widget.CoordinatorLayout$LayoutParams r7;
        android.support.design.widget.CoordinatorLayout$Behavior $r10;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $z0 := @parameter0: boolean;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        i2 = 0;

     label01:
        if i2 >= $i1 goto label10;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (android.view.View) $r4;

        $r6 = virtualinvoke r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r6;

        i3 = 0;

     label02:
        if i3 >= i2 goto label04;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        r8 = (android.view.View) $r4;

        $r9 = r7.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorDirectChild>;

        if $r9 != r8 goto label03;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void offsetChildToAnchor(android.view.View,int)>(r5, $i0);

     label03:
        i3 = i3 + 1;

        goto label02;

     label04:
        r2 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect1>;

        r1 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect2>;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getLastChildRect(android.view.View,android.graphics.Rect)>(r5, r2);

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getChildRect(android.view.View,boolean,android.graphics.Rect)>(r5, 1, r1);

        $z1 = virtualinvoke r2.<android.graphics.Rect: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label06;

     label05:
        i2 = i2 + 1;

        goto label01;

     label06:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void recordLastChildRect(android.view.View,android.graphics.Rect)>(r5, r1);

        i3 = i2 + 1;

     label07:
        if i3 >= $i1 goto label05;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        r8 = (android.view.View) $r4;

        $r6 = virtualinvoke r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r6;

        $r10 = virtualinvoke r7.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r10 == null goto label08;

        $z1 = virtualinvoke $r10.<android.support.design.widget.CoordinatorLayout$Behavior: boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, r8, r5);

        if $z1 == 0 goto label08;

        if $z0 != 0 goto label09;

        $z1 = virtualinvoke r7.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean getChangedAfterNestedScroll()>();

        if $z1 == 0 goto label09;

        virtualinvoke r7.<android.support.design.widget.CoordinatorLayout$LayoutParams: void resetChangedAfterNestedScroll()>();

     label08:
        i3 = i3 + 1;

        goto label07;

     label09:
        $z1 = virtualinvoke $r10.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, r8, r5);

        if $z0 == 0 goto label08;

        virtualinvoke r7.<android.support.design.widget.CoordinatorLayout$LayoutParams: void setChangedAfterNestedScroll(boolean)>($z1);

        goto label08;

     label10:
        return;
    }
    public boolean doViewsOverlap(android.view.View, android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r2;
        android.graphics.Rect r3, r4;
        int $i0, $i1;
        android.view.ViewParent $r5;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label5;

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label5;

        r3 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect1>;

        $r5 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r5 == r0 goto label3;

        $z0 = 1;

     label1:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getChildRect(android.view.View,boolean,android.graphics.Rect)>($r1, $z0, r3);

        r4 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect2>;

        $r5 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r5 == r0 goto label4;

        $z0 = 1;

     label2:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getChildRect(android.view.View,boolean,android.graphics.Rect)>($r2, $z0, r4);

        $i0 = r3.<android.graphics.Rect: int left>;

        $i1 = r4.<android.graphics.Rect: int right>;

        if $i0 > $i1 goto label5;

        $i0 = r3.<android.graphics.Rect: int top>;

        $i1 = r4.<android.graphics.Rect: int bottom>;

        if $i0 > $i1 goto label5;

        $i0 = r3.<android.graphics.Rect: int right>;

        $i1 = r4.<android.graphics.Rect: int left>;

        if $i0 < $i1 goto label5;

        $i0 = r3.<android.graphics.Rect: int bottom>;

        $i1 = r4.<android.graphics.Rect: int top>;

        if $i0 < $i1 goto label5;

        return 1;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        return 0;
    }
    protected boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.graphics.Canvas $r1;
        android.view.View $r2;
        long $l0;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.design.widget.CoordinatorLayout$LayoutParams r5;
        android.support.design.widget.CoordinatorLayout$Behavior $r6;
        byte $b1;
        int $i2, $i3;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.view.View;

        $l0 := @parameter2: long;

        $r4 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        $r6 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior mBehavior>;

        if $r6 == null goto label2;

        $r6 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior mBehavior>;

        $f0 = virtualinvoke $r6.<android.support.design.widget.CoordinatorLayout$Behavior: float getScrimOpacity(android.support.design.widget.CoordinatorLayout,android.view.View)>(r0, $r2);

        $b1 = $f0 cmpl 0.0F;

        if $b1 <= 0 goto label2;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint>;

        if $r3 != null goto label1;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint> = $r3;

     label1:
        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint>;

        $r6 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior mBehavior>;

        $i2 = virtualinvoke $r6.<android.support.design.widget.CoordinatorLayout$Behavior: int getScrimColor(android.support.design.widget.CoordinatorLayout,android.view.View)>(r0, $r2);

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i2);

        $i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        $f1 = (float) $i2;

        $i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingTop()>();

        $f0 = (float) $i2;

        $i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        $i3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        $i2 = $i2 - $i3;

        $f2 = (float) $i2;

        $i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        $i3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i2 = $i2 - $i3;

        $f3 = (float) $i2;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f1, $f0, $f2, $f3, $r3);

     label2:
        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>($r1, $r2, $l0);

        return $z0;
    }
    void ensurePreDrawListener()
    {
        android.support.design.widget.CoordinatorLayout r0;
        boolean z0, $z1;
        int $i0, i1;
        android.view.View $r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        z0 = 0;

        $i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i1);

        $z1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: boolean hasDependencies(android.view.View)>($r1);

        if $z1 == 0 goto label3;

        z0 = 1;

     label2:
        $z1 = r0.<android.support.design.widget.CoordinatorLayout: boolean mNeedsPreDrawListener>;

        if z0 == $z1 goto label5;

        if z0 == 0 goto label4;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void addPreDrawListener()>();

        return;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void removePreDrawListener()>();

     label5:
        return;
    }
    protected android.support.design.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 = new android.support.design.widget.CoordinatorLayout$LayoutParams;

        specialinvoke $r1.<android.support.design.widget.CoordinatorLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }
    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }
    public android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.util.AttributeSet $r1;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.support.design.widget.CoordinatorLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }
    protected android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r2, r3;
        android.view.ViewGroup$MarginLayoutParams r4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.support.design.widget.CoordinatorLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $r2 = new android.support.design.widget.CoordinatorLayout$LayoutParams;

        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) r1;

        specialinvoke $r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: void <init>(android.support.design.widget.CoordinatorLayout$LayoutParams)>(r3);

        return $r2;

     label1:
        $z0 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label2;

        $r2 = new android.support.design.widget.CoordinatorLayout$LayoutParams;

        r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>(r4);

        return $r2;

     label2:
        $r2 = new android.support.design.widget.CoordinatorLayout$LayoutParams;

        specialinvoke $r2.<android.support.design.widget.CoordinatorLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }
    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.util.AttributeSet $r1;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r1);

        return $r2;
    }
    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }
    void getChildRect(android.view.View, boolean, android.graphics.Rect)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1;
        boolean $z0, $z1;
        android.graphics.Rect $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: android.graphics.Rect;

        $z1 = virtualinvoke $r1.<android.view.View: boolean isLayoutRequested()>();

        if $z1 != 0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i0 != 8 goto label2;

     label1:
        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return;

     label2:
        if $z0 == 0 goto label3;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getDescendantRect(android.view.View,android.graphics.Rect)>($r1, $r2);

        return;

     label3:
        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }
    public java.util.List getDependencies(android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r5;
        java.util.List r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        int $i0, i1;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        r2 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mTempDependenciesList>;

        interfaceinvoke r2.<java.util.List: void clear()>();

        $i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r5 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i1);

        if $r5 != $r1 goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z0 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, $r1, $r5);

        if $z0 == 0 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label2;

     label4:
        return r2;
    }
    void getDescendantRect(android.view.View, android.graphics.Rect)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1;
        android.graphics.Rect $r2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        staticinvoke <android.support.design.widget.ViewGroupUtils: void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)>(r0, $r1, $r2);

        return;
    }
    void getDesiredAnchoredChildRect(android.view.View, int, android.graphics.Rect, android.graphics.Rect)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1;
        int $i0, i1, i2, i3, i4, $i5, $i6, $i7;
        android.graphics.Rect $r2, $r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.design.widget.CoordinatorLayout$LayoutParams r5;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.graphics.Rect;

        $r3 := @parameter3: android.graphics.Rect;

        $r4 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        $i5 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int gravity>;

        $i5 = staticinvoke <android.support.design.widget.CoordinatorLayout: int resolveAnchoredChildGravity(int)>($i5);

        $i5 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>($i5, $i0);

        i2 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int anchorGravity>;

        i2 = staticinvoke <android.support.design.widget.CoordinatorLayout: int resolveGravity(int)>(i2);

        $i0 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>(i2, $i0);

        i3 = $i5 & 7;

        i4 = $i5 & 112;

        i1 = $i0 & 7;

        i2 = $i0 & 112;

        $i5 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        lookupswitch(i1)
        {
            case 1: goto label10;
            case 5: goto label09;
            default: goto label01;
        };

     label01:
        i1 = $r2.<android.graphics.Rect: int left>;

     label02:
        lookupswitch(i2)
        {
            case 16: goto label12;
            case 80: goto label11;
            default: goto label03;
        };

     label03:
        i2 = $r2.<android.graphics.Rect: int top>;

     label04:
        lookupswitch(i3)
        {
            case 1: goto label13;
            case 5: goto label06;
            default: goto label05;
        };

     label05:
        i1 = i1 - $i5;

     label06:
        lookupswitch(i4)
        {
            case 16: goto label14;
            case 80: goto label08;
            default: goto label07;
        };

     label07:
        i2 = i2 - $i0;

     label08:
        $i6 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        i3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getHeight()>();

        i4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i7 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        i4 = i4 + $i7;

        $i7 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        $i6 = $i6 - $i7;

        $i6 = $i6 - $i5;

        $i7 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i6 = $i6 - $i7;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i6);

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i1);

        i4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingTop()>();

        $i6 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        i4 = i4 + $i6;

        $i6 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        i3 = i3 - $i6;

        i3 = i3 - $i0;

        $i6 = r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        i3 = i3 - $i6;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i3);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i2);

        $i5 = i1 + $i5;

        $i0 = i2 + $i0;

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>(i1, i2, $i5, $i0);

        return;

     label09:
        i1 = $r2.<android.graphics.Rect: int right>;

        goto label02;

     label10:
        i1 = $r2.<android.graphics.Rect: int left>;

        $i6 = virtualinvoke $r2.<android.graphics.Rect: int width()>();

        $i6 = $i6 / 2;

        i1 = i1 + $i6;

        goto label02;

     label11:
        i2 = $r2.<android.graphics.Rect: int bottom>;

        goto label04;

     label12:
        i2 = $r2.<android.graphics.Rect: int top>;

        $i6 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        $i6 = $i6 / 2;

        i2 = i2 + $i6;

        goto label04;

     label13:
        i3 = $i5 / 2;

        i1 = i1 - i3;

        goto label06;

     label14:
        i3 = $i0 / 2;

        i2 = i2 - i3;

        goto label08;
    }
    void getLastChildRect(android.view.View, android.graphics.Rect)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1;
        android.graphics.Rect $r2, $r5;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        $r5 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.graphics.Rect getLastChildRect()>();

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r5);

        return;
    }
    public int getNestedScrollAxes()
    {
        android.support.design.widget.CoordinatorLayout r0;
        int $i0;
        android.support.v4.view.NestedScrollingParentHelper $r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        $i0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingParentHelper: int getNestedScrollAxes()>();

        return $i0;
    }
    android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1;
        java.lang.Exception r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        boolean $z0;
        java.lang.Class $r5;
        android.support.design.widget.CoordinatorLayout$DefaultBehavior r6;
        java.lang.'annotation'.Annotation $r7;
        java.lang.Object $r8;
        android.support.design.widget.CoordinatorLayout$Behavior $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        $z0 = r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved>;

        if $z0 != 0 goto label6;

        $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        r6 = null;

     label1:
        if $r5 == null goto label2;

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Landroid/support/design/widget/CoordinatorLayout$DefaultBehavior;");

        r6 = (android.support.design.widget.CoordinatorLayout$DefaultBehavior) $r7;

        if r6 != null goto label2;

        $r5 = virtualinvoke $r5.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label2:
        if r6 == null goto label4;

     label3:
        $r5 = interfaceinvoke r6.<android.support.design.widget.CoordinatorLayout$DefaultBehavior: java.lang.Class value()>();

        $r8 = virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();

        $r9 = (android.support.design.widget.CoordinatorLayout$Behavior) $r8;

        virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: void setBehavior(android.support.design.widget.CoordinatorLayout$Behavior)>($r9);

     label4:
        r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved> = 1;

        return r4;

     label5:
        r2 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Default behavior class ");

        $r5 = interfaceinvoke r6.<android.support.design.widget.CoordinatorLayout$DefaultBehavior: java.lang.Class value()>();

        $r11 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated. Did you forget a default constructor?");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CoordinatorLayout", $r11, r2);

        goto label4;

     label6:
        return r4;

        catch java.lang.Exception from label3 to label4 with label5;
    }
    public android.graphics.drawable.Drawable getStatusBarBackground()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r1 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        return r1;
    }
    protected int getSuggestedMinimumHeight()
    {
        android.support.design.widget.CoordinatorLayout r0;
        int $i0, $i1, $i2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $i0 = specialinvoke r0.<android.view.ViewGroup: int getSuggestedMinimumHeight()>();

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingTop()>();

        $i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i1 = $i1 + $i2;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i0;
    }
    protected int getSuggestedMinimumWidth()
    {
        android.support.design.widget.CoordinatorLayout r0;
        int $i0, $i1, $i2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $i0 = specialinvoke r0.<android.view.ViewGroup: int getSuggestedMinimumWidth()>();

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        $i1 = $i1 + $i2;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i0;
    }
    boolean hasDependencies(android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r4;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.design.widget.CoordinatorLayout$LayoutParams r3;
        int $i0, i1;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r2;

        $r4 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        if $r4 == null goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label5;

        $r4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i1);

        if $r4 != $r1 goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $z0 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, $r1, $r4);

        if $z0 == 0 goto label3;

        return 1;

     label5:
        return 0;
    }
    public boolean isPointInChildBounds(android.view.View, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1;
        int $i0, $i1;
        android.graphics.Rect r2;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect1>;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getDescendantRect(android.view.View,android.graphics.Rect)>($r1, r2);

        $z0 = virtualinvoke r2.<android.graphics.Rect: boolean contains(int,int)>($i0, $i1);

        return $z0;
    }
    void offsetChildToAnchor(android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r7;
        int $i0, i1, $i2;
        android.graphics.Rect r2, r3, r4;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.design.widget.CoordinatorLayout$LayoutParams r6;
        android.support.design.widget.CoordinatorLayout$Behavior $r8;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r5 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        $r7 = r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        if $r7 == null goto label4;

        r2 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect1>;

        r3 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect2>;

        r4 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.Rect mTempRect3>;

        $r7 = r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getDescendantRect(android.view.View,android.graphics.Rect)>($r7, r2);

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getChildRect(android.view.View,boolean,android.graphics.Rect)>($r1, 0, r3);

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect)>($r1, $i0, r2, r4);

        $i0 = r4.<android.graphics.Rect: int left>;

        i1 = r3.<android.graphics.Rect: int left>;

        $i0 = $i0 - i1;

        i1 = r4.<android.graphics.Rect: int top>;

        $i2 = r3.<android.graphics.Rect: int top>;

        i1 = i1 - $i2;

        if $i0 == 0 goto label1;

        virtualinvoke $r1.<android.view.View: void offsetLeftAndRight(int)>($i0);

     label1:
        if i1 == 0 goto label2;

        virtualinvoke $r1.<android.view.View: void offsetTopAndBottom(int)>(i1);

     label2:
        if $i0 != 0 goto label3;

        if i1 == 0 goto label4;

     label3:
        $r8 = virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r8 == null goto label4;

        $r7 = r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        virtualinvoke $r8.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, $r1, $r7);

     label4:
        return;
    }
    public void onAttachedToWindow()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewTreeObserver $r1;
        boolean $z0;
        android.support.design.widget.CoordinatorLayout$OnPreDrawListener $r2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void resetTouchBehaviors()>();

        $z0 = r0.<android.support.design.widget.CoordinatorLayout: boolean mNeedsPreDrawListener>;

        if $z0 == 0 goto label2;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        if $r2 != null goto label1;

        $r2 = new android.support.design.widget.CoordinatorLayout$OnPreDrawListener;

        specialinvoke $r2.<android.support.design.widget.CoordinatorLayout$OnPreDrawListener: void <init>(android.support.design.widget.CoordinatorLayout)>(r0);

        r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener> = $r2;

     label1:
        $r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke $r1.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r2);

     label2:
        r0.<android.support.design.widget.CoordinatorLayout: boolean mIsAttachedToWindow> = 1;

        return;
    }
    public void onDetachedFromWindow()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewTreeObserver $r1;
        boolean $z0;
        android.support.design.widget.CoordinatorLayout$OnPreDrawListener $r2;
        android.view.View $r3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void resetTouchBehaviors()>();

        $z0 = r0.<android.support.design.widget.CoordinatorLayout: boolean mNeedsPreDrawListener>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke $r1.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r2);

     label1:
        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mNestedScrollingTarget>;

        if $r3 == null goto label2;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mNestedScrollingTarget>;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void onStopNestedScroll(android.view.View)>($r3);

     label2:
        r0.<android.support.design.widget.CoordinatorLayout: boolean mIsAttachedToWindow> = 0;

        return;
    }
    public void onDraw(android.graphics.Canvas)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.graphics.Canvas $r1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2;
        android.support.v4.view.WindowInsetsCompat $r3;
        int $i0, $i1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>($r1);

        $z0 = r0.<android.support.design.widget.CoordinatorLayout: boolean mDrawStatusBarBackground>;

        if $z0 == 0 goto label3;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r2 == null goto label3;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        if $r3 == null goto label2;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i0 = virtualinvoke $r3.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

     label1:
        if $i0 <= 0 goto label3;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getWidth()>();

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i1, $i0);

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;

     label2:
        $i0 = 0;

        goto label1;

     label3:
        return;
    }
    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.MotionEvent $r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);

        if $i0 != 0 goto label1;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void resetTouchBehaviors()>();

     label1:
        $z0 = specialinvoke r0.<android.support.design.widget.CoordinatorLayout: boolean performIntercept(android.view.MotionEvent)>($r1);

        goto label2;

     label2:
        if $i0 == 1 goto label3;

        if $i0 != 3 goto label4;

     label3:
        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void resetTouchBehaviors()>();

     label4:
        return $z0;
    }
    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.util.List $r1;
        java.lang.Object $r2;
        android.view.View r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.design.widget.CoordinatorLayout$LayoutParams r5;
        android.support.design.widget.CoordinatorLayout$Behavior $r6;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);

        r3 = (android.view.View) $r2;

        $r4 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        $r6 = virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r6 == null goto label2;

        $z0 = virtualinvoke $r6.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)>(r0, r3, $i0);

        if $z0 != 0 goto label3;

     label2:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>(r3, $i0);

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        return;
    }
    public void onLayoutChild(android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r5;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.design.widget.CoordinatorLayout$LayoutParams r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r2;

        $z0 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean checkAnchorChanged()>();

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("An anchor may not be changed after CoordinatorLayout measurement begins before layout is complete.");

        throw $r4;

     label1:
        $r5 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        if $r5 == null goto label2;

        $r5 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void layoutChildWithAnchor(android.view.View,android.view.View,int)>($r1, $r5, $i0);

        return;

     label2:
        $i1 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int keyline>;

        if $i1 < 0 goto label3;

        $i1 = r3.<android.support.design.widget.CoordinatorLayout$LayoutParams: int keyline>;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void layoutChildWithKeyline(android.view.View,int,int)>($r1, $i1, $i0);

        return;

     label3:
        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>($r1, $i0);

        return;
    }
    protected void onMeasure(int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        int $i0, $i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i16, i17, i18, $i19;
        boolean z0, $z1, $z2;
        android.support.v4.view.WindowInsetsCompat $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        android.view.View r4;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.design.widget.CoordinatorLayout$LayoutParams r6;
        android.support.design.widget.CoordinatorLayout$Behavior $r7;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void prepareChildren()>();

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void ensurePreDrawListener()>();

        $i6 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingLeft()>();

        i2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingTop()>();

        $i7 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingRight()>();

        $i8 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i9 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        if $i9 != 1 goto label10;

        z0 = 1;

     label01:
        $i10 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i11 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i12 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i13 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        i5 = $i6 + $i7;

        i2 = i2 + $i8;

        i14 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getSuggestedMinimumWidth()>();

        $i8 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getSuggestedMinimumHeight()>();

        i15 = 0;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        if $r1 == null goto label11;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r0);

        if $z1 == 0 goto label11;

        $z1 = 1;

     label02:
        $r2 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $i16 = interfaceinvoke $r2.<java.util.List: int size()>();

        i17 = 0;

     label03:
        if i17 >= $i16 goto label15;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i17);

        r4 = (android.view.View) $r3;

        $r5 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        i18 = 0;

        i4 = r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: int keyline>;

        if i4 < 0 goto label06;

        if $i10 == 0 goto label06;

        i4 = r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: int keyline>;

        i4 = specialinvoke r0.<android.support.design.widget.CoordinatorLayout: int getKeyline(int)>(i4);

        i3 = r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: int gravity>;

        i3 = staticinvoke <android.support.design.widget.CoordinatorLayout: int resolveKeylineGravity(int)>(i3);

        i3 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>(i3, $i9);

        i3 = i3 & 7;

        if i3 != 3 goto label04;

        if z0 == 0 goto label05;

     label04:
        if i3 != 5 goto label12;

        if z0 == 0 goto label12;

     label05:
        i18 = $i11 - $i7;

        i18 = i18 - i4;

        i18 = staticinvoke <java.lang.Math: int max(int,int)>(0, i18);

     label06:
        i3 = $i0;

        i4 = $i1;

        if $z1 == 0 goto label07;

        $z2 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r4);

        if $z2 != 0 goto label07;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        i4 = virtualinvoke $r1.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        i3 = virtualinvoke $r1.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        i3 = i4 + i3;

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        i4 = virtualinvoke $r1.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        $r1 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.WindowInsetsCompat mLastInsets>;

        $i19 = virtualinvoke $r1.<android.support.v4.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>();

        i4 = i4 + $i19;

        i3 = $i11 - i3;

        i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i3, $i10);

        i4 = $i13 - i4;

        i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i4, $i12);

     label07:
        $r7 = virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r7 == null goto label08;

        $z2 = virtualinvoke $r7.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int)>(r0, r4, i3, i18, i4, 0);

        if $z2 != 0 goto label09;

     label08:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void onMeasureChild(android.view.View,int,int,int,int)>(r4, i3, i18, i4, 0);

     label09:
        i18 = virtualinvoke r4.<android.view.View: int getMeasuredWidth()>();

        i18 = i18 + i5;

        i4 = r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        i18 = i18 + i4;

        i4 = r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        i18 = i18 + i4;

        i14 = staticinvoke <java.lang.Math: int max(int,int)>(i14, i18);

        i18 = virtualinvoke r4.<android.view.View: int getMeasuredHeight()>();

        i18 = i18 + i2;

        i4 = r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        i18 = i18 + i4;

        i4 = r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        i18 = i18 + i4;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i8, i18);

        i18 = staticinvoke <android.support.v4.view.ViewCompat: int getMeasuredState(android.view.View)>(r4);

        i15 = staticinvoke <android.support.v4.view.ViewCompat: int combineMeasuredStates(int,int)>(i15, i18);

        i17 = i17 + 1;

        goto label03;

     label10:
        z0 = 0;

        goto label01;

     label11:
        $z1 = 0;

        goto label02;

     label12:
        if i3 != 5 goto label13;

        if z0 == 0 goto label14;

     label13:
        if i3 != 3 goto label06;

        if z0 == 0 goto label06;

     label14:
        i18 = i4 - $i6;

        i18 = staticinvoke <java.lang.Math: int max(int,int)>(0, i18);

        goto label06;

     label15:
        i5 = -16777216 & i15;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int resolveSizeAndState(int,int,int)>(i14, $i0, i5);

        i5 = i15 << 16;

        $i1 = staticinvoke <android.support.v4.view.ViewCompat: int resolveSizeAndState(int,int,int)>($i8, $i1, i5);

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }
    public void onMeasureChild(android.view.View, int, int, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

        return;
    }
    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r2;
        float $f0, $f1;
        boolean $z0, z1, $z2;
        int $i0, i1;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        android.support.design.widget.CoordinatorLayout$Behavior $r5;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 := @parameter3: boolean;

        z1 = 0;

        $i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i1);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        $z2 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted()>();

        if $z2 != 0 goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r5 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r5 == null goto label2;

        $z2 = virtualinvoke $r5.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onNestedFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean)>(r0, $r2, $r1, $f0, $f1, $z0);

        z1 = z1 | $z2;

        goto label2;

     label4:
        if z1 == 0 goto label5;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void dispatchOnDependentViewChanged(boolean)>(1);

     label5:
        return z1;
    }
    public boolean onNestedPreFling(android.view.View, float, float)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r2;
        float $f0, $f1;
        boolean z0, $z1;
        int $i0, i1;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        android.support.design.widget.CoordinatorLayout$Behavior $r5;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        z0 = 0;

        $i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i1);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        $z1 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted()>();

        if $z1 != 0 goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r5 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r5 == null goto label2;

        $z1 = virtualinvoke $r5.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onNestedPreFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>(r0, $r2, $r1, $f0, $f1);

        z0 = z0 | $z1;

        goto label2;

     label4:
        return z0;
    }
    public void onNestedPreScroll(android.view.View, int, int, int[])
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r3;
        int $i0, $i1, i2, i3, $i4, i5, $i6;
        int[] $r2, $r7, $r8;
        boolean z0, $z1;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.design.widget.CoordinatorLayout$LayoutParams r5;
        android.support.design.widget.CoordinatorLayout$Behavior $r6;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: int[];

        i2 = 0;

        i3 = 0;

        z0 = 0;

        $i4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i5 = 0;

     label1:
        if i5 >= $i4 goto label8;

        $r3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i5);

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        $z1 = virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted()>();

        if $z1 != 0 goto label3;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $r6 = virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r6 == null goto label2;

        $r7 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        $r8 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        $r8[1] = 0;

        $r7[0] = 0;

        $r7 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        virtualinvoke $r6.<android.support.design.widget.CoordinatorLayout$Behavior: void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[])>(r0, $r3, $r1, $i0, $i1, $r7);

        if $i0 <= 0 goto label6;

        $r7 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        $i6 = $r7[0];

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i6);

     label4:
        if $i1 <= 0 goto label7;

        $r7 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        $i6 = $r7[1];

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i6);

     label5:
        z0 = 1;

        goto label2;

     label6:
        $r7 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        $i6 = $r7[0];

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i6);

        goto label4;

     label7:
        $r7 = r0.<android.support.design.widget.CoordinatorLayout: int[] mTempIntPair>;

        $i6 = $r7[1];

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i6);

        goto label5;

     label8:
        $r2[0] = i2;

        $r2[1] = i3;

        if z0 == 0 goto label9;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void dispatchOnDependentViewChanged(boolean)>(1);

     label9:
        return;
    }
    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, i5;
        boolean z0, $z1;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;
        android.support.design.widget.CoordinatorLayout$Behavior $r5;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        z0 = 0;

        i5 = 0;

     label1:
        if i5 >= $i4 goto label4;

        $r2 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i5);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        $z1 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted()>();

        if $z1 != 0 goto label3;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $r5 = virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r5 == null goto label2;

        virtualinvoke $r5.<android.support.design.widget.CoordinatorLayout$Behavior: void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int)>(r0, $r2, $r1, $i0, $i1, $i2, $i3);

        z0 = 1;

        goto label2;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void dispatchOnDependentViewChanged(boolean)>(1);

     label5:
        return;
    }
    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r2, $r4;
        int $i0, $i1, i2;
        android.support.v4.view.NestedScrollingParentHelper $r3;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.design.widget.CoordinatorLayout$LayoutParams r6;
        boolean $z0;
        android.support.design.widget.CoordinatorLayout$Behavior $r7;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        virtualinvoke $r3.<android.support.v4.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)>($r1, $r2, $i0);

        r0.<android.support.design.widget.CoordinatorLayout: android.view.View mNestedScrollingDirectChild> = $r1;

        r0.<android.support.design.widget.CoordinatorLayout: android.view.View mNestedScrollingTarget> = $r2;

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label4;

        $r4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i2);

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        $z0 = virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted()>();

        if $z0 != 0 goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r7 = virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r7 == null goto label2;

        virtualinvoke $r7.<android.support.design.widget.CoordinatorLayout$Behavior: void onNestedScrollAccepted(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)>(r0, $r4, $r1, $r2, $i0);

        goto label2;

     label4:
        return;
    }
    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.os.Parcelable $r1;
        android.util.SparseArray r2;
        android.support.design.widget.CoordinatorLayout$SavedState r3;
        int i0, $i1, $i2;
        android.view.View $r4;
        android.support.design.widget.CoordinatorLayout$LayoutParams $r5;
        android.support.design.widget.CoordinatorLayout$Behavior $r6;
        java.lang.Object $r7;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.os.Parcelable;

        r3 = (android.support.design.widget.CoordinatorLayout$SavedState) $r1;

        $r1 = virtualinvoke r3.<android.support.design.widget.CoordinatorLayout$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        r2 = r3.<android.support.design.widget.CoordinatorLayout$SavedState: android.util.SparseArray behaviorStates>;

        i0 = 0;

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

     label1:
        if i0 >= $i1 goto label3;

        $r4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i0);

        $i2 = virtualinvoke $r4.<android.view.View: int getId()>();

        $r5 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View)>($r4);

        $r6 = virtualinvoke $r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $i2 == -1 goto label2;

        if $r6 == null goto label2;

        $r7 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        $r1 = (android.os.Parcelable) $r7;

        if $r1 == null goto label2;

        virtualinvoke $r6.<android.support.design.widget.CoordinatorLayout$Behavior: void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)>(r0, $r4, $r1);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }
    protected android.os.Parcelable onSaveInstanceState()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.util.SparseArray r1;
        android.support.design.widget.CoordinatorLayout$SavedState r2;
        android.os.Parcelable $r3;
        int i0, $i1, $i2;
        android.view.View $r4;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.design.widget.CoordinatorLayout$LayoutParams r6;
        android.support.design.widget.CoordinatorLayout$Behavior $r7;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        r2 = new android.support.design.widget.CoordinatorLayout$SavedState;

        $r3 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke r2.<android.support.design.widget.CoordinatorLayout$SavedState: void <init>(android.os.Parcelable)>($r3);

        r1 = new android.util.SparseArray;

        specialinvoke r1.<android.util.SparseArray: void <init>()>();

        i0 = 0;

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

     label1:
        if i0 >= $i1 goto label3;

        $r4 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i0);

        $i2 = virtualinvoke $r4.<android.view.View: int getId()>();

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r5;

        $r7 = virtualinvoke r6.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $i2 == -1 goto label2;

        if $r7 == null goto label2;

        $r3 = virtualinvoke $r7.<android.support.design.widget.CoordinatorLayout$Behavior: android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View)>(r0, $r4);

        if $r3 == null goto label2;

        virtualinvoke r1.<android.util.SparseArray: void append(int,java.lang.Object)>($i2, $r3);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        r2.<android.support.design.widget.CoordinatorLayout$SavedState: android.util.SparseArray behaviorStates> = r1;

        return r2;
    }
    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r2, $r3;
        int $i0, $i1, i2;
        boolean z0, $z1;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.design.widget.CoordinatorLayout$LayoutParams r5;
        android.support.design.widget.CoordinatorLayout$Behavior $r6;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        z0 = 0;

        $i1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label4;

        $r3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i2);

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        $r6 = virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r6 == null goto label3;

        $z1 = virtualinvoke $r6.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)>(r0, $r3, $r1, $r2, $i0);

        z0 = z0 | $z1;

        virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: void acceptNestedScroll(boolean)>($z1);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: void acceptNestedScroll(boolean)>(0);

        goto label2;

     label4:
        return z0;
    }
    public void onStopNestedScroll(android.view.View)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1, $r3;
        android.support.v4.view.NestedScrollingParentHelper $r2;
        int $i0, i1;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.design.widget.CoordinatorLayout$LayoutParams r5;
        boolean $z0;
        android.support.design.widget.CoordinatorLayout$Behavior $r6;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        virtualinvoke $r2.<android.support.v4.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View)>($r1);

        $i0 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label5;

        $r3 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.View getChildAt(int)>(i1);

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        $z0 = virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted()>();

        if $z0 != 0 goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r6 == null goto label4;

        virtualinvoke $r6.<android.support.design.widget.CoordinatorLayout$Behavior: void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View)>(r0, $r3, $r1);

     label4:
        virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: void resetNestedScroll()>();

        virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: void resetChangedAfterNestedScroll()>();

        goto label2;

     label5:
        r0.<android.support.design.widget.CoordinatorLayout: android.view.View mNestedScrollingDirectChild> = null;

        r0.<android.support.design.widget.CoordinatorLayout: android.view.View mNestedScrollingTarget> = null;

        return;
    }
    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.MotionEvent $r1;
        boolean z0, z1, $z2;
        int $i0;
        android.view.View $r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.design.widget.CoordinatorLayout$LayoutParams r5;
        android.support.design.widget.CoordinatorLayout$Behavior $r6;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.MotionEvent;

        z0 = 0;

        z1 = 0;

        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        if $r3 != null goto label1;

        $z2 = specialinvoke r0.<android.support.design.widget.CoordinatorLayout: boolean performIntercept(android.view.MotionEvent)>($r1);

        z1 = $z2;

        if $z2 == 0 goto label2;

     label1:
        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r4;

        $r6 = virtualinvoke r5.<android.support.design.widget.CoordinatorLayout$LayoutParams: android.support.design.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r6 == null goto label2;

        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        virtualinvoke $r6.<android.support.design.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>(r0, $r3, $r1);

     label2:
        $r3 = r0.<android.support.design.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        if $r3 != null goto label7;

        z0 = specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>($r1);

     label3:
        if z0 != 0 goto label4;

        if $i0 != 0 goto label4;

     label4:
        goto label5;

     label5:
        if $i0 == 1 goto label6;

        if $i0 != 3 goto label9;

     label6:
        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void resetTouchBehaviors()>();

        return z0;

     label7:
        if z1 == 0 goto label3;

        goto label8;

     label8:
        specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>(null);

        goto label3;

     label9:
        return z0;
    }
    void recordLastChildRect(android.view.View, android.graphics.Rect)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.design.widget.CoordinatorLayout$LayoutParams r4;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.design.widget.CoordinatorLayout$LayoutParams) $r3;

        virtualinvoke r4.<android.support.design.widget.CoordinatorLayout$LayoutParams: void setLastChildRect(android.graphics.Rect)>($r2);

        return;
    }
    void removePreDrawListener()
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewTreeObserver $r1;
        boolean $z0;
        android.support.design.widget.CoordinatorLayout$OnPreDrawListener $r2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $z0 = r0.<android.support.design.widget.CoordinatorLayout: boolean mIsAttachedToWindow>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r2 = r0.<android.support.design.widget.CoordinatorLayout: android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke $r1.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r2);

     label1:
        r0.<android.support.design.widget.CoordinatorLayout: boolean mNeedsPreDrawListener> = 0;

        return;
    }
    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.support.design.widget.CoordinatorLayout r0;
        boolean $z0;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>($z0);

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.support.design.widget.CoordinatorLayout: void resetTouchBehaviors()>();

     label1:
        return;
    }
    public void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.view.ViewGroup$OnHierarchyChangeListener $r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.ViewGroup$OnHierarchyChangeListener;

        r0.<android.support.design.widget.CoordinatorLayout: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener> = $r1;

        return;
    }
    public void setStatusBarBackground(android.graphics.drawable.Drawable)
    {
        android.support.design.widget.CoordinatorLayout r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<android.support.design.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $r1;

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void invalidate()>();

        return;
    }
    public void setStatusBarBackgroundColor(int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        int $i0;
        android.graphics.drawable.ColorDrawable $r1;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $i0 := @parameter0: int;

        $r1 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r1.<android.graphics.drawable.ColorDrawable: void <init>(int)>($i0);

        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>($r1);

        return;
    }
    public void setStatusBarBackgroundResource(int)
    {
        android.support.design.widget.CoordinatorLayout r0;
        int $i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.design.widget.CoordinatorLayout;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label2;

        $r1 = virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: android.content.Context getContext()>();

        $r2 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

     label1:
        virtualinvoke r0.<android.support.design.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>($r2);

        return;

     label2:
        $r2 = null;

        goto label1;
    }
