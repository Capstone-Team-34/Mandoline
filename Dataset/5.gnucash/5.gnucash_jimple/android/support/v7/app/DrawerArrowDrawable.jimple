android.support.v7.app.DrawerArrowDrawable extends android.graphics.drawable.Drawable
private static final float ARROW_HEAD_ANGLE
private final float mBarGap
private final float mBarSize
private final float mBarThickness
private float mCenterOffset
private float mMaxCutForBarSize
private final float mMiddleArrowSize
private final android.graphics.Paint mPaint
private final android.graphics.Path mPath
private float mProgress
private final int mSize
private final boolean mSpin
private final float mTopBottomArrowSize
private boolean mVerticalMirror
    static void <clinit>()
    {
        double $d0;
        float $f0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>(45.0);

        $f0 = (float) $d0;

        <android.support.v7.app.DrawerArrowDrawable: float ARROW_HEAD_ANGLE> = $f0;

        return;
    }
    void <init>(android.content.Context)
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        android.content.Context $r1;
        int i0, $i1;
        android.graphics.Paint $r2;
        android.graphics.Path $r3;
        android.content.res.Resources$Theme $r4;
        int[] $r5;
        android.content.res.TypedArray $r6;
        float $f0, $f1;
        boolean $z0;
        double $d0, $d1, $d2;
        android.graphics.Paint$Style $r7;
        android.graphics.Paint$Join $r8;
        android.graphics.Paint$Cap $r9;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint> = $r2;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath> = $r3;

        r0.<android.support.v7.app.DrawerArrowDrawable: boolean mVerticalMirror> = 0;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r5 = <android.support.v7.appcompat.R$styleable: int[] DrawerArrowToggle>;

        i0 = <android.support.v7.appcompat.R$attr: int drawerArrowStyle>;

        $i1 = <android.support.v7.appcompat.R$style: int Base_Widget_AppCompat_DrawerArrowToggle>;

        $r6 = virtualinvoke $r4.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r5, i0, $i1);

        $r2 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r2 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        i0 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_color>;

        i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(i0, 0);

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i0);

        i0 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_drawableSize>;

        i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i0, 0);

        r0.<android.support.v7.app.DrawerArrowDrawable: int mSize> = i0;

        i0 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_barSize>;

        $f0 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(i0, 0.0F);

        i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = (float) i0;

        r0.<android.support.v7.app.DrawerArrowDrawable: float mBarSize> = $f0;

        i0 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_topBottomBarArrowSize>;

        $f0 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(i0, 0.0F);

        i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = (float) i0;

        r0.<android.support.v7.app.DrawerArrowDrawable: float mTopBottomArrowSize> = $f0;

        i0 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_thickness>;

        $f0 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(i0, 0.0F);

        r0.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness> = $f0;

        i0 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_gapBetweenBars>;

        $f0 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(i0, 0.0F);

        i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = (float) i0;

        r0.<android.support.v7.app.DrawerArrowDrawable: float mBarGap> = $f0;

        i0 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_spinBars>;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i0, 1);

        r0.<android.support.v7.app.DrawerArrowDrawable: boolean mSpin> = $z0;

        i0 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_middleBarArrowSize>;

        $f0 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(i0, 0.0F);

        r0.<android.support.v7.app.DrawerArrowDrawable: float mMiddleArrowSize> = $f0;

        i0 = r0.<android.support.v7.app.DrawerArrowDrawable: int mSize>;

        $f0 = (float) i0;

        $f1 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness>;

        $f1 = $f1 * 3.0F;

        $f0 = $f0 - $f1;

        $f1 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarGap>;

        $f1 = $f1 * 2.0F;

        $f0 = $f0 - $f1;

        i0 = (int) $f0;

        i0 = i0 / 4;

        i0 = i0 * 2;

        $f0 = (float) i0;

        r0.<android.support.v7.app.DrawerArrowDrawable: float mCenterOffset> = $f0;

        $f0 = r0.<android.support.v7.app.DrawerArrowDrawable: float mCenterOffset>;

        $d0 = (double) $f0;

        $f0 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness>;

        $d1 = (double) $f0;

        $d1 = $d1 * 1.5;

        $f0 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarGap>;

        $d2 = (double) $f0;

        $d1 = $d1 + $d2;

        $d0 = $d0 + $d1;

        $f0 = (float) $d0;

        r0.<android.support.v7.app.DrawerArrowDrawable: float mCenterOffset> = $f0;

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        $r2 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r7);

        $r2 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r8 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r8);

        $r2 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r9 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r9);

        $r2 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $f0 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $f0 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness>;

        $f0 = $f0 / 2.0F;

        $d0 = (double) $f0;

        $f0 = <android.support.v7.app.DrawerArrowDrawable: float ARROW_HEAD_ANGLE>;

        $d1 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d0 = $d0 * $d1;

        $f0 = (float) $d0;

        r0.<android.support.v7.app.DrawerArrowDrawable: float mMaxCutForBarSize> = $f0;

        return;
    }
    private static float lerp(float, float, float)
    {
        float $f0, $f1, $f2;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f1 = $f1 - $f0;

        $f1 = $f1 * $f2;

        $f0 = $f1 + $f0;

        return $f0;
    }
    public void draw(android.graphics.Canvas)
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        android.graphics.Canvas $r1;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        android.graphics.Rect $r2;
        boolean $z0, $z1;
        int $i0;
        double $d0, $d1;
        long $l1;
        android.graphics.Path $r3;
        byte $b2;
        android.graphics.Paint $r4;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = virtualinvoke r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Rect getBounds()>();

        $z0 = virtualinvoke r0.<android.support.v7.app.DrawerArrowDrawable: boolean isLayoutRtl()>();

        $f4 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarSize>;

        $f5 = r0.<android.support.v7.app.DrawerArrowDrawable: float mTopBottomArrowSize>;

        f3 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        f1 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>($f4, $f5, f3);

        $f4 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarSize>;

        $f5 = r0.<android.support.v7.app.DrawerArrowDrawable: float mMiddleArrowSize>;

        f3 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        $f4 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>($f4, $f5, f3);

        $f5 = r0.<android.support.v7.app.DrawerArrowDrawable: float mMaxCutForBarSize>;

        f3 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        $f5 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>(0.0F, $f5, f3);

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f5);

        f3 = (float) $i0;

        $f5 = <android.support.v7.app.DrawerArrowDrawable: float ARROW_HEAD_ANGLE>;

        f2 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        f0 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>(0.0F, $f5, f2);

        if $z0 == 0 goto label5;

        $f5 = 0.0F;

     label1:
        if $z0 == 0 goto label6;

        f2 = 180.0F;

     label2:
        $f6 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        $f5 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>($f5, f2, $f6);

        $d0 = (double) f1;

        $d1 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d0 = $d0 * $d1;

        $l1 = staticinvoke <java.lang.Math: long round(double)>($d0);

        f2 = (float) $l1;

        $d0 = (double) f1;

        $d1 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d0 = $d0 * $d1;

        $l1 = staticinvoke <java.lang.Math: long round(double)>($d0);

        f1 = (float) $l1;

        $r3 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3.<android.graphics.Path: void rewind()>();

        f0 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarGap>;

        $f6 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness>;

        f0 = f0 + $f6;

        $f6 = r0.<android.support.v7.app.DrawerArrowDrawable: float mMaxCutForBarSize>;

        $f6 = neg $f6;

        $f7 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        $f6 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>(f0, $f6, $f7);

        f0 = neg $f4;

        f0 = f0 / 2.0F;

        $r3 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f7 = f0 + f3;

        virtualinvoke $r3.<android.graphics.Path: void moveTo(float,float)>($f7, 0.0F);

        $r3 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        f3 = 2.0F * f3;

        $f4 = $f4 - f3;

        virtualinvoke $r3.<android.graphics.Path: void rLineTo(float,float)>($f4, 0.0F);

        $r3 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3.<android.graphics.Path: void moveTo(float,float)>(f0, $f6);

        $r3 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3.<android.graphics.Path: void rLineTo(float,float)>(f2, f1);

        $r3 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f4 = neg $f6;

        virtualinvoke $r3.<android.graphics.Path: void moveTo(float,float)>(f0, $f4);

        $r3 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f4 = neg f1;

        virtualinvoke $r3.<android.graphics.Path: void rLineTo(float,float)>(f2, $f4);

        $r3 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3.<android.graphics.Path: void close()>();

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i0 = virtualinvoke $r2.<android.graphics.Rect: int centerX()>();

        $f4 = (float) $i0;

        f3 = r0.<android.support.v7.app.DrawerArrowDrawable: float mCenterOffset>;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f4, f3);

        $z1 = r0.<android.support.v7.app.DrawerArrowDrawable: boolean mSpin>;

        if $z1 == 0 goto label8;

        $z1 = r0.<android.support.v7.app.DrawerArrowDrawable: boolean mVerticalMirror>;

        $z0 = $z1 ^ $z0;

        if $z0 == 0 goto label7;

        $b2 = -1;

     label3:
        $f4 = (float) $b2;

        $f4 = $f4 * $f5;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>($f4);

     label4:
        $r3 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $r4 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r3, $r4);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;

     label5:
        $f5 = -180.0F;

        goto label1;

     label6:
        f2 = 0.0F;

        goto label2;

     label7:
        $b2 = 1;

        goto label3;

     label8:
        if $z0 == 0 goto label4;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(180.0F);

        goto label4;
    }
    public int getIntrinsicHeight()
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        int i0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        i0 = r0.<android.support.v7.app.DrawerArrowDrawable: int mSize>;

        return i0;
    }
    public int getIntrinsicWidth()
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        int i0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        i0 = r0.<android.support.v7.app.DrawerArrowDrawable: int mSize>;

        return i0;
    }
    public int getOpacity()
    {
        android.support.v7.app.DrawerArrowDrawable r0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        return -3;
    }
    public float getProgress()
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        float f0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        f0 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        return f0;
    }
    public boolean isAutoMirrored()
    {
        android.support.v7.app.DrawerArrowDrawable r0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        return 1;
    }
abstract boolean isLayoutRtl() { 
// no body
} 
    public void setAlpha(int)
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);

        return;
    }
    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        android.graphics.ColorFilter $r1;
        android.graphics.Paint $r2;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r1);

        return;
    }
    public void setProgress(float)
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        float $f0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $f0 := @parameter0: float;

        r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress> = $f0;

        virtualinvoke r0.<android.support.v7.app.DrawerArrowDrawable: void invalidateSelf()>();

        return;
    }
    protected void setVerticalMirror(boolean)
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        boolean $z0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $z0 := @parameter0: boolean;

        r0.<android.support.v7.app.DrawerArrowDrawable: boolean mVerticalMirror> = $z0;

        return;
    }
