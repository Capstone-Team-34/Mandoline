android.support.v7.internal.widget.TintManager extends java.lang.Object
private static final int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY
private static final int[] COLORFILTER_COLOR_CONTROL_ACTIVATED
private static final int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL
private static final android.support.v7.internal.widget.TintManager$ColorFilterLruCache COLOR_FILTER_CACHE
private static final boolean DEBUG
private static final android.graphics.PorterDuff$Mode DEFAULT_MODE
private static final java.util.WeakHashMap INSTANCE_CACHE
public static final boolean SHOULD_BE_USED
private static final java.lang.String TAG
private static final int[] TINT_CHECKABLE_BUTTON_LIST
private static final int[] TINT_COLOR_CONTROL_NORMAL
private static final int[] TINT_COLOR_CONTROL_STATE_LIST
private final java.lang.ref.WeakReference mContextRef
private android.content.res.ColorStateList mDefaultColorStateList
private android.util.SparseArray mTintLists
    static void <clinit>()
    {
        int $i0;
        boolean $z0;
        android.graphics.PorterDuff$Mode $r0;
        java.util.WeakHashMap $r1;
        android.support.v7.internal.widget.TintManager$ColorFilterLruCache $r2;
        int[] $r3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label2;

        $z0 = 1;

     label1:
        <android.support.v7.internal.widget.TintManager: boolean SHOULD_BE_USED> = $z0;

        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        <android.support.v7.internal.widget.TintManager: android.graphics.PorterDuff$Mode DEFAULT_MODE> = $r0;

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        <android.support.v7.internal.widget.TintManager: java.util.WeakHashMap INSTANCE_CACHE> = $r1;

        $r2 = new android.support.v7.internal.widget.TintManager$ColorFilterLruCache;

        specialinvoke $r2.<android.support.v7.internal.widget.TintManager$ColorFilterLruCache: void <init>(int)>(6);

        <android.support.v7.internal.widget.TintManager: android.support.v7.internal.widget.TintManager$ColorFilterLruCache COLOR_FILTER_CACHE> = $r2;

        $r3 = newarray (int)[3];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_textfield_search_default_mtrl_alpha>;

        $r3[0] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_textfield_default_mtrl_alpha>;

        $r3[1] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ab_share_pack_mtrl_alpha>;

        $r3[2] = $i0;

        <android.support.v7.internal.widget.TintManager: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL> = $r3;

        $r3 = newarray (int)[12];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_ab_back_mtrl_am_alpha>;

        $r3[0] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_go_search_api_mtrl_alpha>;

        $r3[1] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_search_api_mtrl_alpha>;

        $r3[2] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha>;

        $r3[3] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_clear_mtrl_alpha>;

        $r3[4] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_share_mtrl_alpha>;

        $r3[5] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha>;

        $r3[6] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_cut_mtrl_alpha>;

        $r3[7] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha>;

        $r3[8] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha>;

        $r3[9] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_menu_moreoverflow_mtrl_alpha>;

        $r3[10] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ic_voice_search_api_mtrl_alpha>;

        $r3[11] = $i0;

        <android.support.v7.internal.widget.TintManager: int[] TINT_COLOR_CONTROL_NORMAL> = $r3;

        $r3 = newarray (int)[4];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_textfield_activated_mtrl_alpha>;

        $r3[0] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_textfield_search_activated_mtrl_alpha>;

        $r3[1] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha>;

        $r3[2] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_text_cursor_mtrl_alpha>;

        $r3[3] = $i0;

        <android.support.v7.internal.widget.TintManager: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED> = $r3;

        $r3 = newarray (int)[3];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_popup_background_mtrl_mult>;

        $r3[0] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_internal_bg>;

        $r3[1] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult>;

        $r3[2] = $i0;

        <android.support.v7.internal.widget.TintManager: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY> = $r3;

        $r3 = newarray (int)[10];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_edit_text_material>;

        $r3[0] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_tab_indicator_material>;

        $r3[1] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_textfield_search_material>;

        $r3[2] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha>;

        $r3[3] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_spinner_textfield_background_material>;

        $r3[4] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_ratingbar_full_material>;

        $r3[5] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_switch_track_mtrl_alpha>;

        $r3[6] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_switch_thumb_material>;

        $r3[7] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_btn_default_mtrl_shape>;

        $r3[8] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_btn_borderless_material>;

        $r3[9] = $i0;

        <android.support.v7.internal.widget.TintManager: int[] TINT_COLOR_CONTROL_STATE_LIST> = $r3;

        $r3 = newarray (int)[2];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_btn_check_material>;

        $r3[0] = $i0;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_btn_radio_material>;

        $r3[1] = $i0;

        <android.support.v7.internal.widget.TintManager: int[] TINT_CHECKABLE_BUTTON_LIST> = $r3;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    private void <init>(android.content.Context)
    {
        android.support.v7.internal.widget.TintManager r0;
        android.content.Context $r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: android.support.v7.internal.widget.TintManager;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        r0.<android.support.v7.internal.widget.TintManager: java.lang.ref.WeakReference mContextRef> = $r2;

        return;
    }
    private static boolean arrayContains(int[], int)
    {
        int[] $r0;
        int $i0, i1, i2, i3;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        i2 = lengthof $r0;

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        i1 = $r0[i3];

        if i1 != $i0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }
    private android.content.res.ColorStateList createButtonColorStateList(android.content.Context)
    {
        android.support.v7.internal.widget.TintManager r0;
        android.content.Context $r1;
        int[] r2, $r4;
        int[][] r3;
        int $i0, $i1, $i2, $i3;
        android.content.res.ColorStateList $r5;

        r0 := @this: android.support.v7.internal.widget.TintManager;

        $r1 := @parameter0: android.content.Context;

        r3 = newarray (int[])[4];

        r2 = newarray (int)[4];

        $i0 = <android.support.v7.appcompat.R$attr: int colorButtonNormal>;

        $i0 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlHighlight>;

        $i1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r3[0] = $r4;

        $i2 = <android.support.v7.appcompat.R$attr: int colorButtonNormal>;

        $i2 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i2);

        r2[0] = $i2;

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] PRESSED_STATE_SET>;

        r3[1] = $r4;

        $i3 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeColors(int,int)>($i1, $i0);

        r2[1] = $i3;

        $i2 = 1 + 1;

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] FOCUSED_STATE_SET>;

        r3[$i2] = $r4;

        $i1 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeColors(int,int)>($i1, $i0);

        r2[$i2] = $i1;

        $i1 = $i2 + 1;

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r3[$i1] = $r4;

        r2[$i1] = $i0;

        $r5 = new android.content.res.ColorStateList;

        specialinvoke $r5.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r3, r2);

        return $r5;
    }
    private android.content.res.ColorStateList createCheckableButtonColorStateList(android.content.Context)
    {
        android.support.v7.internal.widget.TintManager r0;
        android.content.Context $r1;
        int[] r2, $r4;
        int[][] r3;
        int $i0, $i1;
        android.content.res.ColorStateList $r5;

        r0 := @this: android.support.v7.internal.widget.TintManager;

        $r1 := @parameter0: android.content.Context;

        r3 = newarray (int[])[3];

        r2 = newarray (int)[3];

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r3[0] = $r4;

        $i0 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i0 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i0);

        r2[0] = $i0;

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] CHECKED_STATE_SET>;

        r3[1] = $r4;

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        r2[1] = $i1;

        $i0 = 1 + 1;

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r3[$i0] = $r4;

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        r2[$i0] = $i1;

        $r5 = new android.content.res.ColorStateList;

        specialinvoke $r5.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r3, r2);

        return $r5;
    }
    private android.content.res.ColorStateList createEditTextColorStateList(android.content.Context)
    {
        android.support.v7.internal.widget.TintManager r0;
        android.content.Context $r1;
        int[] r2, $r4;
        int[][] r3;
        int $i0, $i1;
        android.content.res.ColorStateList $r5;

        r0 := @this: android.support.v7.internal.widget.TintManager;

        $r1 := @parameter0: android.content.Context;

        r3 = newarray (int[])[3];

        r2 = newarray (int)[3];

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r3[0] = $r4;

        $i0 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i0 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i0);

        r2[0] = $i0;

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] NOT_PRESSED_OR_FOCUSED_STATE_SET>;

        r3[1] = $r4;

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        r2[1] = $i1;

        $i0 = 1 + 1;

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r3[$i0] = $r4;

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        r2[$i0] = $i1;

        $r5 = new android.content.res.ColorStateList;

        specialinvoke $r5.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r3, r2);

        return $r5;
    }
    private android.content.res.ColorStateList createSpinnerColorStateList(android.content.Context)
    {
        android.support.v7.internal.widget.TintManager r0;
        android.content.Context $r1;
        int[] r2, $r4;
        int[][] r3;
        int $i0, $i1;
        android.content.res.ColorStateList $r5;

        r0 := @this: android.support.v7.internal.widget.TintManager;

        $r1 := @parameter0: android.content.Context;

        r3 = newarray (int[])[3];

        r2 = newarray (int)[3];

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r3[0] = $r4;

        $i0 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i0 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i0);

        r2[0] = $i0;

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] NOT_PRESSED_OR_FOCUSED_STATE_SET>;

        r3[1] = $r4;

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        r2[1] = $i1;

        $i0 = 1 + 1;

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r3[$i0] = $r4;

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        r2[$i0] = $i1;

        $r5 = new android.content.res.ColorStateList;

        specialinvoke $r5.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r3, r2);

        return $r5;
    }
    private android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
    {
        android.support.v7.internal.widget.TintManager r0;
        android.content.Context $r1;
        int[] r2, $r5;
        int[][] r3;
        int $i0, $i1;
        android.content.res.ColorStateList $r4;
        boolean $z0;

        r0 := @this: android.support.v7.internal.widget.TintManager;

        $r1 := @parameter0: android.content.Context;

        r3 = newarray (int[])[3];

        r2 = newarray (int)[3];

        $i0 = <android.support.v7.appcompat.R$attr: int colorSwitchThumbNormal>;

        $r4 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($r1, $i0);

        if $r4 == null goto label2;

        $z0 = virtualinvoke $r4.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z0 == 0 goto label2;

        $r5 = <android.support.v7.internal.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r3[0] = $r5;

        $r5 = r3[0];

        $i0 = virtualinvoke $r4.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r5, 0);

        r2[0] = $i0;

        $r5 = <android.support.v7.internal.widget.ThemeUtils: int[] CHECKED_STATE_SET>;

        r3[1] = $r5;

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        r2[1] = $i1;

        $i0 = 1 + 1;

        $r5 = <android.support.v7.internal.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r3[$i0] = $r5;

        $i1 = virtualinvoke $r4.<android.content.res.ColorStateList: int getDefaultColor()>();

        r2[$i0] = $i1;

     label1:
        $r4 = new android.content.res.ColorStateList;

        specialinvoke $r4.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r3, r2);

        return $r4;

     label2:
        $r5 = <android.support.v7.internal.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r3[0] = $r5;

        $i0 = <android.support.v7.appcompat.R$attr: int colorSwitchThumbNormal>;

        $i0 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i0);

        r2[0] = $i0;

        $r5 = <android.support.v7.internal.widget.ThemeUtils: int[] CHECKED_STATE_SET>;

        r3[1] = $r5;

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        r2[1] = $i1;

        $i0 = 1 + 1;

        $r5 = <android.support.v7.internal.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r3[$i0] = $r5;

        $i1 = <android.support.v7.appcompat.R$attr: int colorSwitchThumbNormal>;

        $i1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        r2[$i0] = $i1;

        goto label1;
    }
    private android.content.res.ColorStateList createSwitchTrackColorStateList(android.content.Context)
    {
        android.support.v7.internal.widget.TintManager r0;
        android.content.Context $r1;
        int[] r2, $r4;
        int[][] r3;
        int $i0, $i1;
        android.content.res.ColorStateList $r5;

        r0 := @this: android.support.v7.internal.widget.TintManager;

        $r1 := @parameter0: android.content.Context;

        r3 = newarray (int[])[3];

        r2 = newarray (int)[3];

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r3[0] = $r4;

        $i0 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)>($r1, 16842800, 0.1F);

        r2[0] = $i0;

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] CHECKED_STATE_SET>;

        r3[1] = $r4;

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)>($r1, $i1, 0.3F);

        r2[1] = $i1;

        $i0 = 1 + 1;

        $r4 = <android.support.v7.internal.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r3[$i0] = $r4;

        $i1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)>($r1, 16842800, 0.3F);

        r2[$i0] = $i1;

        $r5 = new android.content.res.ColorStateList;

        specialinvoke $r5.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r3, r2);

        return $r5;
    }
    public static android.support.v7.internal.widget.TintManager get(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        java.util.WeakHashMap $r2;
        android.support.v7.internal.widget.TintManager r3;

        $r0 := @parameter0: android.content.Context;

        $r2 = <android.support.v7.internal.widget.TintManager: java.util.WeakHashMap INSTANCE_CACHE>;

        $r1 = virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r0);

        r3 = (android.support.v7.internal.widget.TintManager) $r1;

        if r3 != null goto label1;

        r3 = new android.support.v7.internal.widget.TintManager;

        specialinvoke r3.<android.support.v7.internal.widget.TintManager: void <init>(android.content.Context)>($r0);

        $r2 = <android.support.v7.internal.widget.TintManager: java.util.WeakHashMap INSTANCE_CACHE>;

        virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, r3);

     label1:
        return r3;
    }
    private android.content.res.ColorStateList getDefaultColorStateList(android.content.Context)
    {
        android.support.v7.internal.widget.TintManager r0;
        android.content.Context $r1;
        int[] r2, $r5;
        int[][] r3;
        android.content.res.ColorStateList $r4;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.internal.widget.TintManager;

        $r1 := @parameter0: android.content.Context;

        $r4 = r0.<android.support.v7.internal.widget.TintManager: android.content.res.ColorStateList mDefaultColorStateList>;

        if $r4 != null goto label1;

        $i0 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i0 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        r3 = newarray (int[])[7];

        r2 = newarray (int)[7];

        $r5 = <android.support.v7.internal.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        r3[0] = $r5;

        $i2 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        $i2 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i2);

        r2[0] = $i2;

        $r5 = <android.support.v7.internal.widget.ThemeUtils: int[] FOCUSED_STATE_SET>;

        r3[1] = $r5;

        r2[1] = $i1;

        $i2 = 1 + 1;

        $r5 = <android.support.v7.internal.widget.ThemeUtils: int[] ACTIVATED_STATE_SET>;

        r3[$i2] = $r5;

        r2[$i2] = $i1;

        $i2 = $i2 + 1;

        $r5 = <android.support.v7.internal.widget.ThemeUtils: int[] PRESSED_STATE_SET>;

        r3[$i2] = $r5;

        r2[$i2] = $i1;

        $i2 = $i2 + 1;

        $r5 = <android.support.v7.internal.widget.ThemeUtils: int[] CHECKED_STATE_SET>;

        r3[$i2] = $r5;

        r2[$i2] = $i1;

        $i2 = $i2 + 1;

        $r5 = <android.support.v7.internal.widget.ThemeUtils: int[] SELECTED_STATE_SET>;

        r3[$i2] = $r5;

        r2[$i2] = $i1;

        $i1 = $i2 + 1;

        $r5 = <android.support.v7.internal.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        r3[$i1] = $r5;

        r2[$i1] = $i0;

        $r4 = new android.content.res.ColorStateList;

        specialinvoke $r4.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r3, r2);

        r0.<android.support.v7.internal.widget.TintManager: android.content.res.ColorStateList mDefaultColorStateList> = $r4;

     label1:
        $r4 = r0.<android.support.v7.internal.widget.TintManager: android.content.res.ColorStateList mDefaultColorStateList>;

        return $r4;
    }
    public static android.graphics.drawable.Drawable getDrawable(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        boolean $z0;
        android.support.v7.internal.widget.TintManager $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 = staticinvoke <android.support.v7.internal.widget.TintManager: boolean isInTintList(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <android.support.v7.internal.widget.TintManager: android.support.v7.internal.widget.TintManager get(android.content.Context)>($r0);

        $r2 = virtualinvoke $r1.<android.support.v7.internal.widget.TintManager: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        return $r2;

     label1:
        $r2 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r0, $i0);

        return $r2;
    }
    private static boolean isInTintList(int)
    {
        int $i0, $i1;
        int[] $r0;
        boolean $z0;

        $i0 := @parameter0: int;

        $r0 = <android.support.v7.internal.widget.TintManager: int[] TINT_COLOR_CONTROL_NORMAL>;

        $z0 = staticinvoke <android.support.v7.internal.widget.TintManager: boolean arrayContains(int[],int)>($r0, $i0);

        if $z0 != 0 goto label1;

        $r0 = <android.support.v7.internal.widget.TintManager: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL>;

        $z0 = staticinvoke <android.support.v7.internal.widget.TintManager: boolean arrayContains(int[],int)>($r0, $i0);

        if $z0 != 0 goto label1;

        $r0 = <android.support.v7.internal.widget.TintManager: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED>;

        $z0 = staticinvoke <android.support.v7.internal.widget.TintManager: boolean arrayContains(int[],int)>($r0, $i0);

        if $z0 != 0 goto label1;

        $r0 = <android.support.v7.internal.widget.TintManager: int[] TINT_COLOR_CONTROL_STATE_LIST>;

        $z0 = staticinvoke <android.support.v7.internal.widget.TintManager: boolean arrayContains(int[],int)>($r0, $i0);

        if $z0 != 0 goto label1;

        $r0 = <android.support.v7.internal.widget.TintManager: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY>;

        $z0 = staticinvoke <android.support.v7.internal.widget.TintManager: boolean arrayContains(int[],int)>($r0, $i0);

        if $z0 != 0 goto label1;

        $r0 = <android.support.v7.internal.widget.TintManager: int[] TINT_CHECKABLE_BUTTON_LIST>;

        $z0 = staticinvoke <android.support.v7.internal.widget.TintManager: boolean arrayContains(int[],int)>($r0, $i0);

        if $z0 != 0 goto label1;

        $i1 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_top_material>;

        if $i0 != $i1 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
    private static void setPorterDuffColorFilter(android.graphics.drawable.Drawable, int, android.graphics.PorterDuff$Mode)
    {
        android.graphics.drawable.Drawable $r0;
        int $i0;
        android.graphics.PorterDuffColorFilter $r1, r4;
        android.graphics.PorterDuff$Mode $r2;
        android.support.v7.internal.widget.TintManager$ColorFilterLruCache $r3;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.graphics.PorterDuff$Mode;

        if $r2 != null goto label1;

        $r2 = <android.support.v7.internal.widget.TintManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

     label1:
        $r3 = <android.support.v7.internal.widget.TintManager: android.support.v7.internal.widget.TintManager$ColorFilterLruCache COLOR_FILTER_CACHE>;

        $r1 = virtualinvoke $r3.<android.support.v7.internal.widget.TintManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)>($i0, $r2);

        r4 = $r1;

        if $r1 != null goto label2;

        r4 = new android.graphics.PorterDuffColorFilter;

        specialinvoke r4.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>($i0, $r2);

        $r3 = <android.support.v7.internal.widget.TintManager: android.support.v7.internal.widget.TintManager$ColorFilterLruCache COLOR_FILTER_CACHE>;

        virtualinvoke $r3.<android.support.v7.internal.widget.TintManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)>($i0, $r2, r4);

     label2:
        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>(r4);

        return;
    }
    public static void tintViewBackground(android.view.View, android.support.v7.internal.widget.TintInfo)
    {
        android.view.View $r0;
        android.support.v7.internal.widget.TintInfo $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;
        android.content.res.ColorStateList $r3, $r5;
        int[] $r4;
        int $i0;
        android.graphics.PorterDuff$Mode $r6;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: android.support.v7.internal.widget.TintInfo;

        $r2 = virtualinvoke $r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        $z0 = $r1.<android.support.v7.internal.widget.TintInfo: boolean mHasTintList>;

        if $z0 == 0 goto label4;

        $r3 = $r1.<android.support.v7.internal.widget.TintInfo: android.content.res.ColorStateList mTintList>;

        $r4 = virtualinvoke $r0.<android.view.View: int[] getDrawableState()>();

        $r5 = $r1.<android.support.v7.internal.widget.TintInfo: android.content.res.ColorStateList mTintList>;

        $i0 = virtualinvoke $r5.<android.content.res.ColorStateList: int getDefaultColor()>();

        $i0 = virtualinvoke $r3.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r4, $i0);

        $z0 = $r1.<android.support.v7.internal.widget.TintInfo: boolean mHasTintMode>;

        if $z0 == 0 goto label3;

        $r6 = $r1.<android.support.v7.internal.widget.TintInfo: android.graphics.PorterDuff$Mode mTintMode>;

     label1:
        staticinvoke <android.support.v7.internal.widget.TintManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r2, $i0, $r6);

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 10 goto label5;

        virtualinvoke $r0.<android.view.View: void invalidate()>();

        return;

     label3:
        $r6 = null;

        goto label1;

     label4:
        virtualinvoke $r2.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        goto label2;

     label5:
        return;
    }
    public android.graphics.drawable.Drawable getDrawable(int)
    {
        android.support.v7.internal.widget.TintManager r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.support.v7.internal.widget.TintManager;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v7.internal.widget.TintManager: android.graphics.drawable.Drawable getDrawable(int,boolean)>($i0, 0);

        return $r1;
    }
    public android.graphics.drawable.Drawable getDrawable(int, boolean)
    {
        android.support.v7.internal.widget.TintManager r0;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        android.content.Context r3;
        android.graphics.drawable.Drawable $r4, r5;
        android.content.res.ColorStateList $r6;
        android.graphics.PorterDuff$Mode $r7;
        android.graphics.drawable.LayerDrawable r8;
        android.graphics.drawable.Drawable[] $r9;

        r0 := @this: android.support.v7.internal.widget.TintManager;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = r0.<android.support.v7.internal.widget.TintManager: java.lang.ref.WeakReference mContextRef>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.content.Context) $r2;

        if r3 != null goto label1;

        return null;

     label1:
        $r4 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>(r3, $i0);

        r5 = $r4;

        if $r4 == null goto label5;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 8 goto label2;

        r5 = virtualinvoke $r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label2:
        $r6 = virtualinvoke r0.<android.support.v7.internal.widget.TintManager: android.content.res.ColorStateList getTintList(int)>($i0);

        if $r6 == null goto label3;

        $r4 = staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>(r5);

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r4, $r6);

        $r7 = virtualinvoke r0.<android.support.v7.internal.widget.TintManager: android.graphics.PorterDuff$Mode getTintMode(int)>($i0);

        if $r7 == null goto label5;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r4, $r7);

        return $r4;

     label3:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_top_material>;

        if $i0 != $i1 goto label4;

        r8 = new android.graphics.drawable.LayerDrawable;

        $r9 = newarray (android.graphics.drawable.Drawable)[2];

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_internal_bg>;

        $r4 = virtualinvoke r0.<android.support.v7.internal.widget.TintManager: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        $r9[0] = $r4;

        $i0 = <android.support.v7.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha>;

        $r4 = virtualinvoke r0.<android.support.v7.internal.widget.TintManager: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        $r9[1] = $r4;

        specialinvoke r8.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r9);

        return r8;

     label4:
        $z1 = virtualinvoke r0.<android.support.v7.internal.widget.TintManager: boolean tintDrawableUsingColorFilter(int,android.graphics.drawable.Drawable)>($i0, r5);

        if $z1 != 0 goto label6;

        if $z0 == 0 goto label6;

        return null;

     label5:
        return $r4;

     label6:
        return r5;
    }
    public final android.content.res.ColorStateList getTintList(int)
    {
        android.support.v7.internal.widget.TintManager r0;
        int $i0, $i1;
        android.content.res.ColorStateList r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        android.content.Context r4;
        android.util.SparseArray $r5;
        int[] $r6;
        boolean $z0;

        r0 := @this: android.support.v7.internal.widget.TintManager;

        $i0 := @parameter0: int;

        r1 = null;

        $r2 = r0.<android.support.v7.internal.widget.TintManager: java.lang.ref.WeakReference mContextRef>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.content.Context) $r3;

        if r4 != null goto label01;

        return null;

     label01:
        $r5 = r0.<android.support.v7.internal.widget.TintManager: android.util.SparseArray mTintLists>;

        if $r5 == null goto label02;

        $r5 = r0.<android.support.v7.internal.widget.TintManager: android.util.SparseArray mTintLists>;

        $r3 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r1 = (android.content.res.ColorStateList) $r3;

     label02:
        if r1 != null goto label14;

        $i1 = <android.support.v7.appcompat.R$drawable: int abc_edit_text_material>;

        if $i0 != $i1 goto label05;

        r1 = specialinvoke r0.<android.support.v7.internal.widget.TintManager: android.content.res.ColorStateList createEditTextColorStateList(android.content.Context)>(r4);

     label03:
        if r1 == null goto label14;

        $r5 = r0.<android.support.v7.internal.widget.TintManager: android.util.SparseArray mTintLists>;

        if $r5 != null goto label04;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<android.support.v7.internal.widget.TintManager: android.util.SparseArray mTintLists> = $r5;

     label04:
        $r5 = r0.<android.support.v7.internal.widget.TintManager: android.util.SparseArray mTintLists>;

        virtualinvoke $r5.<android.util.SparseArray: void append(int,java.lang.Object)>($i0, r1);

        return r1;

     label05:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_switch_track_mtrl_alpha>;

        if $i0 != $i1 goto label06;

        r1 = specialinvoke r0.<android.support.v7.internal.widget.TintManager: android.content.res.ColorStateList createSwitchTrackColorStateList(android.content.Context)>(r4);

        goto label03;

     label06:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_switch_thumb_material>;

        if $i0 != $i1 goto label07;

        r1 = specialinvoke r0.<android.support.v7.internal.widget.TintManager: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)>(r4);

        goto label03;

     label07:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_btn_default_mtrl_shape>;

        if $i0 == $i1 goto label08;

        $i1 = <android.support.v7.appcompat.R$drawable: int abc_btn_borderless_material>;

        if $i0 != $i1 goto label09;

     label08:
        r1 = specialinvoke r0.<android.support.v7.internal.widget.TintManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context)>(r4);

        goto label03;

     label09:
        $i1 = <android.support.v7.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha>;

        if $i0 == $i1 goto label10;

        $i1 = <android.support.v7.appcompat.R$drawable: int abc_spinner_textfield_background_material>;

        if $i0 != $i1 goto label11;

     label10:
        r1 = specialinvoke r0.<android.support.v7.internal.widget.TintManager: android.content.res.ColorStateList createSpinnerColorStateList(android.content.Context)>(r4);

        goto label03;

     label11:
        $r6 = <android.support.v7.internal.widget.TintManager: int[] TINT_COLOR_CONTROL_NORMAL>;

        $z0 = staticinvoke <android.support.v7.internal.widget.TintManager: boolean arrayContains(int[],int)>($r6, $i0);

        if $z0 == 0 goto label12;

        $i1 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        r1 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>(r4, $i1);

        goto label03;

     label12:
        $r6 = <android.support.v7.internal.widget.TintManager: int[] TINT_COLOR_CONTROL_STATE_LIST>;

        $z0 = staticinvoke <android.support.v7.internal.widget.TintManager: boolean arrayContains(int[],int)>($r6, $i0);

        if $z0 == 0 goto label13;

        r1 = specialinvoke r0.<android.support.v7.internal.widget.TintManager: android.content.res.ColorStateList getDefaultColorStateList(android.content.Context)>(r4);

        goto label03;

     label13:
        $r6 = <android.support.v7.internal.widget.TintManager: int[] TINT_CHECKABLE_BUTTON_LIST>;

        $z0 = staticinvoke <android.support.v7.internal.widget.TintManager: boolean arrayContains(int[],int)>($r6, $i0);

        if $z0 == 0 goto label03;

        r1 = specialinvoke r0.<android.support.v7.internal.widget.TintManager: android.content.res.ColorStateList createCheckableButtonColorStateList(android.content.Context)>(r4);

        goto label03;

     label14:
        return r1;
    }
    final android.graphics.PorterDuff$Mode getTintMode(int)
    {
        android.support.v7.internal.widget.TintManager r0;
        int $i0, $i1;
        android.graphics.PorterDuff$Mode r1;

        r0 := @this: android.support.v7.internal.widget.TintManager;

        $i0 := @parameter0: int;

        $i1 = <android.support.v7.appcompat.R$drawable: int abc_switch_thumb_material>;

        if $i0 != $i1 goto label1;

        r1 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        return r1;

     label1:
        return null;
    }
    public final boolean tintDrawableUsingColorFilter(int, android.graphics.drawable.Drawable)
    {
        android.support.v7.internal.widget.TintManager r0;
        int $i0, i1, i2, $i3;
        android.graphics.drawable.Drawable $r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;
        android.content.Context r4;
        android.graphics.PorterDuff$Mode r5;
        boolean z0, $z1;
        int[] $r6;

        r0 := @this: android.support.v7.internal.widget.TintManager;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.drawable.Drawable;

        $r2 = r0.<android.support.v7.internal.widget.TintManager: java.lang.ref.WeakReference mContextRef>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.content.Context) $r3;

        if r4 != null goto label1;

        return 0;

     label1:
        r5 = null;

        z0 = 0;

        i1 = 0;

        i2 = -1;

        $r6 = <android.support.v7.internal.widget.TintManager: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL>;

        $z1 = staticinvoke <android.support.v7.internal.widget.TintManager: boolean arrayContains(int[],int)>($r6, $i0);

        if $z1 == 0 goto label4;

        i1 = <android.support.v7.appcompat.R$attr: int colorControlNormal>;

        z0 = 1;

     label2:
        if z0 == 0 goto label7;

        $i0 = staticinvoke <android.support.v7.internal.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>(r4, i1);

        staticinvoke <android.support.v7.internal.widget.TintManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r1, $i0, r5);

        if i2 == -1 goto label3;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>(i2);

     label3:
        return 1;

     label4:
        $r6 = <android.support.v7.internal.widget.TintManager: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED>;

        $z1 = staticinvoke <android.support.v7.internal.widget.TintManager: boolean arrayContains(int[],int)>($r6, $i0);

        if $z1 == 0 goto label5;

        i1 = <android.support.v7.appcompat.R$attr: int colorControlActivated>;

        z0 = 1;

        goto label2;

     label5:
        $r6 = <android.support.v7.internal.widget.TintManager: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY>;

        $z1 = staticinvoke <android.support.v7.internal.widget.TintManager: boolean arrayContains(int[],int)>($r6, $i0);

        if $z1 == 0 goto label6;

        i1 = 16842801;

        z0 = 1;

        r5 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        goto label2;

     label6:
        $i3 = <android.support.v7.appcompat.R$drawable: int abc_list_divider_mtrl_alpha>;

        if $i0 != $i3 goto label2;

        i1 = 16842800;

        z0 = 1;

        i2 = staticinvoke <java.lang.Math: int round(float)>(40.8F);

        goto label2;

     label7:
        return 0;
    }
