android.support.v7.widget.LinearSmoothScroller extends android.support.v7.widget.RecyclerView$SmoothScroller
private static final boolean DEBUG
private static final float MILLISECONDS_PER_INCH
public static final int SNAP_TO_ANY
public static final int SNAP_TO_END
public static final int SNAP_TO_START
private static final java.lang.String TAG
private static final float TARGET_SEEK_EXTRA_SCROLL_RATIO
private static final int TARGET_SEEK_SCROLL_DISTANCE_PX
private final float MILLISECONDS_PER_PX
protected final android.view.animation.DecelerateInterpolator mDecelerateInterpolator
protected int mInterimTargetDx
protected int mInterimTargetDy
protected final android.view.animation.LinearInterpolator mLinearInterpolator
protected android.graphics.PointF mTargetVector
    public void <init>(android.content.Context)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.content.Context $r1;
        android.view.animation.LinearInterpolator $r2;
        android.view.animation.DecelerateInterpolator $r3;
        android.content.res.Resources $r4;
        android.util.DisplayMetrics $r5;
        float $f0;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$SmoothScroller: void <init>()>();

        $r2 = new android.view.animation.LinearInterpolator;

        specialinvoke $r2.<android.view.animation.LinearInterpolator: void <init>()>();

        r0.<android.support.v7.widget.LinearSmoothScroller: android.view.animation.LinearInterpolator mLinearInterpolator> = $r2;

        $r3 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r3.<android.view.animation.DecelerateInterpolator: void <init>()>();

        r0.<android.support.v7.widget.LinearSmoothScroller: android.view.animation.DecelerateInterpolator mDecelerateInterpolator> = $r3;

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx> = 0;

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy> = 0;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: float calculateSpeedPerPixel(android.util.DisplayMetrics)>($r5);

        r0.<android.support.v7.widget.LinearSmoothScroller: float MILLISECONDS_PER_PX> = $f0;

        return;
    }
    private int clampApplyScroll(int, int)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i0 = $i1 - $i0;

        $i1 = $i1 * $i0;

        if $i1 > 0 goto label1;

        return 0;

     label1:
        return $i0;
    }
    public int calculateDtToFit(int, int, int, int, int)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        lookupswitch($i4)
        {
            case -1: goto label2;
            case 0: goto label4;
            case 1: goto label3;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("snap preference should be one of the constants defined in SmoothScroller, starting with SNAP_");

        throw $r1;

     label2:
        $i0 = $i2 - $i0;

        return $i0;

     label3:
        $i0 = $i3 - $i1;

        return $i0;

     label4:
        $i0 = $i2 - $i0;

        if $i0 > 0 goto label6;

        $i0 = $i3 - $i1;

        if $i0 >= 0 goto label5;

        return $i0;

     label5:
        return 0;

     label6:
        return $i0;
    }
    public int calculateDxToMakeVisible(android.view.View, int)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.view.View $r1;
        int $i0, i1, i2, i3, $i4, $i5;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.RecyclerView$LayoutParams r4;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager()>();

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.v7.widget.RecyclerView$LayoutParams) $r3;

        i1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getDecoratedLeft(android.view.View)>($r1);

        i2 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int leftMargin>;

        i1 = i1 - i2;

        i2 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getDecoratedRight(android.view.View)>($r1);

        $i4 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int rightMargin>;

        i2 = i2 + $i4;

        $i4 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        i3 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i5 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i3 = i3 - $i5;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateDtToFit(int,int,int,int,int)>(i1, i2, $i4, i3, $i0);

        return $i0;
    }
    public int calculateDyToMakeVisible(android.view.View, int)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.view.View $r1;
        int $i0, i1, i2, i3, $i4, $i5;
        android.support.v7.widget.RecyclerView$LayoutManager $r2;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.RecyclerView$LayoutParams r4;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager()>();

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.v7.widget.RecyclerView$LayoutParams) $r3;

        i1 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getDecoratedTop(android.view.View)>($r1);

        i2 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int topMargin>;

        i1 = i1 - i2;

        i2 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getDecoratedBottom(android.view.View)>($r1);

        $i4 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int bottomMargin>;

        i2 = i2 + $i4;

        $i4 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        i3 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i5 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        i3 = i3 - $i5;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateDtToFit(int,int,int,int,int)>(i1, i2, $i4, i3, $i0);

        return $i0;
    }
    protected float calculateSpeedPerPixel(android.util.DisplayMetrics)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.util.DisplayMetrics $r1;
        int $i0;
        float $f0;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $r1 := @parameter0: android.util.DisplayMetrics;

        $i0 = $r1.<android.util.DisplayMetrics: int densityDpi>;

        $f0 = (float) $i0;

        $f0 = 25.0F / $f0;

        return $f0;
    }
    protected int calculateTimeForDeceleration(int)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        int $i0;
        double $d0;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $i0 := @parameter0: int;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateTimeForScrolling(int)>($i0);

        $d0 = (double) $i0;

        $d0 = $d0 / 0.3356;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        return $i0;
    }
    protected int calculateTimeForScrolling(int)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        int $i0;
        float $f0, $f1;
        double $d0;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $f1 = (float) $i0;

        $f0 = r0.<android.support.v7.widget.LinearSmoothScroller: float MILLISECONDS_PER_PX>;

        $f0 = $f1 * $f0;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        return $i0;
    }
public abstract android.graphics.PointF computeScrollVectorForPosition(int) { 
// no body
} 
    protected int getHorizontalSnapPreference()
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.graphics.PointF $r1;
        float $f0;
        byte $b0;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $r1 = r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector>;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector>;

        $f0 = $r1.<android.graphics.PointF: float x>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label3;

        return 1;

     label3:
        return -1;
    }
    protected int getVerticalSnapPreference()
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.graphics.PointF $r1;
        float $f0;
        byte $b0;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $r1 = r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector>;

        $f0 = $r1.<android.graphics.PointF: float y>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector>;

        $f0 = $r1.<android.graphics.PointF: float y>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label3;

        return 1;

     label3:
        return -1;
    }
    protected void onSeekTargetStep(int, int, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.RecyclerView$SmoothScroller$Action)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        int $i0, $i1, $i2;
        android.support.v7.widget.RecyclerView$State $r1;
        android.support.v7.widget.RecyclerView$SmoothScroller$Action $r2;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.support.v7.widget.RecyclerView$State;

        $r2 := @parameter3: android.support.v7.widget.RecyclerView$SmoothScroller$Action;

        $i2 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int getChildCount()>();

        if $i2 != 0 goto label1;

        virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: void stop()>();

        return;

     label1:
        $i2 = r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx>;

        $i0 = specialinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int clampApplyScroll(int,int)>($i2, $i0);

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx> = $i0;

        $i0 = r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy>;

        $i0 = specialinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int clampApplyScroll(int,int)>($i0, $i1);

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy> = $i0;

        $i0 = r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx>;

        if $i0 != 0 goto label2;

        $i0 = r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy>;

        if $i0 != 0 goto label2;

        virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: void updateActionForInterimTarget(android.support.v7.widget.RecyclerView$SmoothScroller$Action)>($r2);

     label2:
        return;
    }
    protected void onStart()
    {
        android.support.v7.widget.LinearSmoothScroller r0;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        return;
    }
    protected void onStop()
    {
        android.support.v7.widget.LinearSmoothScroller r0;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy> = 0;

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx> = 0;

        r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector> = null;

        return;
    }
    protected void onTargetFound(android.view.View, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.RecyclerView$SmoothScroller$Action)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.view.View $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.support.v7.widget.RecyclerView$SmoothScroller$Action $r3;
        int i0, $i1, $i2, $i3;
        android.view.animation.DecelerateInterpolator $r4;
        double $d0;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.support.v7.widget.RecyclerView$SmoothScroller$Action;

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int getHorizontalSnapPreference()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateDxToMakeVisible(android.view.View,int)>($r1, $i1);

        $i2 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int getVerticalSnapPreference()>();

        $i2 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateDyToMakeVisible(android.view.View,int)>($r1, $i2);

        i0 = $i1 * $i1;

        $i3 = $i2 * $i2;

        i0 = i0 + $i3;

        $d0 = (double) i0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        i0 = (int) $d0;

        i0 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateTimeForDeceleration(int)>(i0);

        if i0 <= 0 goto label1;

        $i1 = neg $i1;

        $i2 = neg $i2;

        $r4 = r0.<android.support.v7.widget.LinearSmoothScroller: android.view.animation.DecelerateInterpolator mDecelerateInterpolator>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView$SmoothScroller$Action: void update(int,int,int,android.view.animation.Interpolator)>($i1, $i2, i0, $r4);

     label1:
        return;
    }
    protected void updateActionForInterimTarget(android.support.v7.widget.RecyclerView$SmoothScroller$Action)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.support.v7.widget.RecyclerView$SmoothScroller$Action $r1;
        int $i0, $i2, $i3;
        android.graphics.PointF $r2;
        float $f0;
        byte $b1;
        android.view.animation.LinearInterpolator $r3;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$SmoothScroller$Action;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int getTargetPosition()>();

        $r2 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF computeScrollVectorForPosition(int)>($i0);

        if $r2 == null goto label1;

        $f0 = $r2.<android.graphics.PointF: float x>;

        $b1 = $f0 cmpl 0.0F;

        if $b1 != 0 goto label2;

        $f0 = $r2.<android.graphics.PointF: float y>;

        $b1 = $f0 cmpl 0.0F;

        if $b1 != 0 goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LinearSmoothScroller", "To support smooth scrolling, you should override \nLayoutManager#computeScrollVectorForPosition.\nFalling back to instant scroll");

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int getTargetPosition()>();

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$SmoothScroller$Action: void jumpTo(int)>($i0);

        virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: void stop()>();

        return;

     label2:
        virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: void normalize(android.graphics.PointF)>($r2);

        r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector> = $r2;

        $f0 = $r2.<android.graphics.PointF: float x>;

        $f0 = $f0 * 10000.0F;

        $i0 = (int) $f0;

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx> = $i0;

        $f0 = $r2.<android.graphics.PointF: float y>;

        $f0 = $f0 * 10000.0F;

        $i0 = (int) $f0;

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy> = $i0;

        $i0 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateTimeForScrolling(int)>(10000);

        $i2 = r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx>;

        $f0 = (float) $i2;

        $f0 = $f0 * 1.2F;

        $i2 = (int) $f0;

        $i3 = r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy>;

        $f0 = (float) $i3;

        $f0 = $f0 * 1.2F;

        $i3 = (int) $f0;

        $f0 = (float) $i0;

        $f0 = $f0 * 1.2F;

        $i0 = (int) $f0;

        $r3 = r0.<android.support.v7.widget.LinearSmoothScroller: android.view.animation.LinearInterpolator mLinearInterpolator>;

        virtualinvoke $r1.<android.support.v7.widget.RecyclerView$SmoothScroller$Action: void update(int,int,int,android.view.animation.Interpolator)>($i2, $i3, $i0, $r3);

        return;
    }
