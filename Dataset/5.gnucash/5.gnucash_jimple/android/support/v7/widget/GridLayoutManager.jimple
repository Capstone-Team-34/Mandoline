android.support.v7.widget.GridLayoutManager extends android.support.v7.widget.LinearLayoutManager
private static final boolean DEBUG
public static final int DEFAULT_SPAN_COUNT
static final int MAIN_DIR_SPEC
private static final java.lang.String TAG
int[] mCachedBorders
final android.graphics.Rect mDecorInsets
boolean mPendingSpanCountChange
final android.util.SparseIntArray mPreLayoutSpanIndexCache
final android.util.SparseIntArray mPreLayoutSpanSizeCache
android.view.View[] mSet
int mSpanCount
android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup
    static void <clinit>()
    {
        int $i0;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        <android.support.v7.widget.GridLayoutManager: int MAIN_DIR_SPEC> = $i0;

        return;
    }
    public void <init>(android.content.Context, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.content.Context $r1;
        int $i0;
        android.util.SparseIntArray $r2;
        android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup $r3;
        android.graphics.Rect $r4;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void <init>(android.content.Context)>($r1);

        r0.<android.support.v7.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 0;

        r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount> = -1;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache> = $r2;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache> = $r2;

        $r3 = new android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup;

        specialinvoke $r3.<android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets> = $r4;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void setSpanCount(int)>($i0);

        return;
    }
    public void <init>(android.content.Context, int, int, boolean)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.content.Context $r1;
        int $i0, $i1;
        boolean $z0;
        android.util.SparseIntArray $r2;
        android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup $r3;
        android.graphics.Rect $r4;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void <init>(android.content.Context,int,boolean)>($r1, $i1, $z0);

        r0.<android.support.v7.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 0;

        r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount> = -1;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache> = $r2;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache> = $r2;

        $r3 = new android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup;

        specialinvoke $r3.<android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets> = $r4;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void setSpanCount(int)>($i0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1;
        android.support.v7.widget.RecyclerView$LayoutManager$Properties $r3;
        android.util.SparseIntArray $r4;
        android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup $r5;
        android.graphics.Rect $r6;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($r1, $r2, $i0, $i1);

        r0.<android.support.v7.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 0;

        r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount> = -1;

        $r4 = new android.util.SparseIntArray;

        specialinvoke $r4.<android.util.SparseIntArray: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache> = $r4;

        $r4 = new android.util.SparseIntArray;

        specialinvoke $r4.<android.util.SparseIntArray: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache> = $r4;

        $r5 = new android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup;

        specialinvoke $r5.<android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = $r5;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets> = $r6;

        $r3 = staticinvoke <android.support.v7.widget.GridLayoutManager: android.support.v7.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int)>($r1, $r2, $i0, $i1);

        $i0 = $r3.<android.support.v7.widget.RecyclerView$LayoutManager$Properties: int spanCount>;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void setSpanCount(int)>($i0);

        return;
    }
    private void assignSpans(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int, int, boolean)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0, $i1, i2, $i5;
        boolean $z0;
        android.view.View r3;
        byte b3, b4;
        android.view.View[] $r4;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.v7.widget.GridLayoutManager$LayoutParams r6;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $z0 := @parameter4: boolean;

        if $z0 == 0 goto label4;

        i2 = 0;

        b3 = 1;

     label1:
        $i1 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i1 != 1 goto label5;

        $z0 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: boolean isLayoutRTL()>();

        if $z0 == 0 goto label5;

        $i1 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $i1 = $i1 + -1;

        b4 = -1;

     label2:
        if i2 == $i0 goto label7;

        $r4 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        r3 = $r4[i2];

        $r5 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.v7.widget.GridLayoutManager$LayoutParams) $r5;

        $i5 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPosition(android.view.View)>(r3);

        $i5 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>($r1, $r2, $i5);

        staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$102(android.support.v7.widget.GridLayoutManager$LayoutParams,int)>(r6, $i5);

        if b4 != -1 goto label6;

        $i5 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$100(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r6);

        if $i5 <= 1 goto label6;

        $i5 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$100(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r6);

        $i5 = $i5 + -1;

        $i5 = $i1 - $i5;

        staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$002(android.support.v7.widget.GridLayoutManager$LayoutParams,int)>(r6, $i5);

     label3:
        $i5 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$100(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r6);

        $i5 = $i5 * b4;

        $i1 = $i1 + $i5;

        i2 = i2 + b3;

        goto label2;

     label4:
        i2 = $i0 + -1;

        $i0 = -1;

        b3 = -1;

        goto label1;

     label5:
        $i1 = 0;

        b4 = 1;

        goto label2;

     label6:
        staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$002(android.support.v7.widget.GridLayoutManager$LayoutParams,int)>(r6, $i1);

        goto label3;

     label7:
        return;
    }
    private void cachePreLayoutSpanMapping()
    {
        android.support.v7.widget.GridLayoutManager r0;
        int $i0, i1, $i2, $i3;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.GridLayoutManager$LayoutParams r3;
        android.util.SparseIntArray $r4;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $i0 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r1 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: android.view.View getChildAt(int)>(i1);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v7.widget.GridLayoutManager$LayoutParams) $r2;

        $i2 = virtualinvoke r3.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getViewLayoutPosition()>();

        $r4 = r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache>;

        $i3 = virtualinvoke r3.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        virtualinvoke $r4.<android.util.SparseIntArray: void put(int,int)>($i2, $i3);

        $r4 = r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache>;

        $i3 = virtualinvoke r3.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanIndex()>();

        virtualinvoke $r4.<android.util.SparseIntArray: void put(int,int)>($i2, $i3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
    private void calculateItemBorders(int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        int $i0, i1, $i2, i3, i4, $i5, $i6;
        int[] $r1, $r2;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.GridLayoutManager: int[] mCachedBorders>;

        if $r1 == null goto label1;

        $r1 = r0.<android.support.v7.widget.GridLayoutManager: int[] mCachedBorders>;

        i1 = lengthof $r1;

        $i2 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $i2 = $i2 + 1;

        if i1 != $i2 goto label1;

        $r1 = r0.<android.support.v7.widget.GridLayoutManager: int[] mCachedBorders>;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: int[] mCachedBorders>;

        i1 = lengthof $r2;

        i1 = i1 + -1;

        i1 = $r1[i1];

        if i1 == $i0 goto label2;

     label1:
        i1 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        i1 = i1 + 1;

        $r1 = newarray (int)[i1];

        r0.<android.support.v7.widget.GridLayoutManager: int[] mCachedBorders> = $r1;

     label2:
        $r1 = r0.<android.support.v7.widget.GridLayoutManager: int[] mCachedBorders>;

        $r1[0] = 0;

        i1 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        i1 = $i0 / i1;

        $i2 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $i0 = $i0 % $i2;

        $i2 = 0;

        i3 = 0;

        i4 = 1;

     label3:
        $i5 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if i4 > $i5 goto label5;

        $i5 = i1;

        i3 = i3 + $i0;

        if i3 <= 0 goto label4;

        $i6 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $i6 = $i6 - i3;

        if $i6 >= $i0 goto label4;

        $i5 = i1 + 1;

        $i6 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        i3 = i3 - $i6;

     label4:
        $i2 = $i2 + $i5;

        $r1 = r0.<android.support.v7.widget.GridLayoutManager: int[] mCachedBorders>;

        $r1[i4] = $i2;

        i4 = i4 + 1;

        goto label3;

     label5:
        return;
    }
    private void clearPreLayoutSpanMappingCache()
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.util.SparseIntArray $r1;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 = r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache>;

        virtualinvoke $r1.<android.util.SparseIntArray: void clear()>();

        $r1 = r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache>;

        virtualinvoke $r1.<android.util.SparseIntArray: void clear()>();

        return;
    }
    private void ensureAnchorIsInFirstSpan(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.LinearLayoutManager$AnchorInfo)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo $r3;
        int $i0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.support.v7.widget.LinearLayoutManager$AnchorInfo;

        $i0 = $r3.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        $i0 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>($r1, $r2, $i0);

     label1:
        if $i0 <= 0 goto label2;

        $i0 = $r3.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        if $i0 <= 0 goto label2;

        $i0 = $r3.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        $i0 = $i0 + -1;

        $r3.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition> = $i0;

        $i0 = $r3.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        $i0 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>($r1, $r2, $i0);

        goto label1;

     label2:
        return;
    }
    private int getMainDirSpec(int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        int $i0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $i0 = <android.support.v7.widget.GridLayoutManager: int MAIN_DIR_SPEC>;

        return $i0;

     label1:
        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, 1073741824);

        return $i0;
    }
    private int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0, $i1;
        boolean $z0;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 := @parameter2: int;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i1 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getSpanGroupIndex(int,int)>($i0, $i1);

        return $i0;

     label1:
        $i1 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)>($i0);

        if $i1 != -1 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find span size for pre layout position. ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GridLayoutManager", $r5);

        return 0;

     label2:
        $r3 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i0 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getSpanGroupIndex(int,int)>($i1, $i0);

        return $i0;
    }
    private int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0, $i1;
        boolean $z0;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r3;
        android.util.SparseIntArray $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 := @parameter2: int;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i1 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)>($i0, $i1);

        return $i0;

     label1:
        $r4 = r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache>;

        $i1 = virtualinvoke $r4.<android.util.SparseIntArray: int get(int,int)>($i0, -1);

        if $i1 != -1 goto label3;

        $i1 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)>($i0);

        if $i1 != -1 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find span size for pre layout position. It is not cached, not in the adapter. Pos:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GridLayoutManager", $r6);

        return 0;

     label2:
        $r3 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i0 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)>($i1, $i0);

        return $i0;

     label3:
        return $i1;
    }
    private int getSpanSize(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0, $i1;
        boolean $z0;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r3;
        android.util.SparseIntArray $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 := @parameter2: int;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>($i0);

        return $i0;

     label1:
        $r4 = r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache>;

        $i1 = virtualinvoke $r4.<android.util.SparseIntArray: int get(int,int)>($i0, -1);

        if $i1 != -1 goto label3;

        $i1 = virtualinvoke $r1.<android.support.v7.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)>($i0);

        if $i1 != -1 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find span size for pre layout position. It is not cached, not in the adapter. Pos:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GridLayoutManager", $r6);

        return 1;

     label2:
        $r3 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>($i1);

        return $i0;

     label3:
        return $i1;
    }
    private void measureChildWithDecorationsAndMargin(android.view.View, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Rect $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.RecyclerView$LayoutParams r4;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets>;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)>($r1, $r2);

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.v7.widget.RecyclerView$LayoutParams) $r3;

        $i2 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int leftMargin>;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets>;

        $i3 = $r2.<android.graphics.Rect: int left>;

        $i2 = $i2 + $i3;

        $i3 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int rightMargin>;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets>;

        $i4 = $r2.<android.graphics.Rect: int right>;

        $i3 = $i3 + $i4;

        $i0 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int updateSpecWithExtra(int,int,int)>($i0, $i2, $i3);

        $i2 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int topMargin>;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets>;

        $i3 = $r2.<android.graphics.Rect: int top>;

        $i2 = $i2 + $i3;

        $i3 = r4.<android.support.v7.widget.RecyclerView$LayoutParams: int bottomMargin>;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets>;

        $i4 = $r2.<android.graphics.Rect: int bottom>;

        $i3 = $i3 + $i4;

        $i1 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int updateSpecWithExtra(int,int,int)>($i1, $i2, $i3);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);

        return;
    }
    private void updateMeasurements()
    {
        android.support.v7.widget.GridLayoutManager r0;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $i0 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getOrientation()>();

        if $i0 != 1 goto label2;

        $i0 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getWidth()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPaddingLeft()>();

        $i0 = $i0 - $i1;

     label1:
        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void calculateItemBorders(int)>($i0);

        return;

     label2:
        $i0 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getHeight()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPaddingBottom()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPaddingTop()>();

        $i0 = $i0 - $i1;

        goto label1;
    }
    private int updateSpecWithExtra(int, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        int $i0, $i1, i2, $i3;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i0 != 0 goto label1;

        if $i1 != 0 goto label1;

        return i2;

     label1:
        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i2);

        if $i3 == -2147483648 goto label2;

        if $i3 != 1073741824 goto label3;

     label2:
        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i2);

        i2 = i2 - $i0;

        i2 = i2 - $i1;

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i2, $i3);

     label3:
        return i2;
    }
    public boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$LayoutParams $r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$LayoutParams;

        $z0 = $r1 instanceof android.support.v7.widget.GridLayoutManager$LayoutParams;

        return $z0;
    }
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        android.view.View r3, r4, $r6;
        android.support.v7.widget.OrientationHelper $r5;
        byte b5;
        android.view.ViewGroup$LayoutParams $r7;
        android.support.v7.widget.RecyclerView$LayoutParams $r8;
        boolean $z0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void ensureLayoutState()>();

        r3 = null;

        r4 = null;

        $r5 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i3 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getStartAfterPadding()>();

        $r5 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i4 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getEndAfterPadding()>();

        if $i1 <= $i0 goto label03;

        b5 = 1;

     label01:
        if $i0 == $i1 goto label07;

        $r6 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: android.view.View getChildAt(int)>($i0);

        $i6 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPosition(android.view.View)>($r6);

        if $i6 < 0 goto label02;

        if $i6 >= $i2 goto label02;

        $i6 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>($r1, $r2, $i6);

        if $i6 == 0 goto label04;

     label02:
        $i0 = $i0 + b5;

        goto label01;

     label03:
        b5 = -1;

        goto label01;

     label04:
        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (android.support.v7.widget.RecyclerView$LayoutParams) $r7;

        $z0 = virtualinvoke $r8.<android.support.v7.widget.RecyclerView$LayoutParams: boolean isItemRemoved()>();

        if $z0 == 0 goto label05;

        if r3 != null goto label02;

        r3 = $r6;

        goto label02;

     label05:
        $r5 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i6 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getDecoratedStart(android.view.View)>($r6);

        if $i6 >= $i4 goto label06;

        $r5 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i6 = virtualinvoke $r5.<android.support.v7.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>($r6);

        if $i6 >= $i3 goto label10;

     label06:
        if r4 != null goto label02;

        r4 = $r6;

        goto label02;

     label07:
        if r4 == null goto label09;

     label08:
        return r4;

     label09:
        r4 = r3;

        goto label08;

     label10:
        return $r6;
    }
    public android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.GridLayoutManager$LayoutParams $r1;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 = new android.support.v7.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r1.<android.support.v7.widget.GridLayoutManager$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }
    public android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.support.v7.widget.GridLayoutManager$LayoutParams $r3;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 = new android.support.v7.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r3.<android.support.v7.widget.GridLayoutManager$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return $r3;
    }
    public android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;
        android.support.v7.widget.GridLayoutManager$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams r3;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label1;

        $r2 = new android.support.v7.widget.GridLayoutManager$LayoutParams;

        r3 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r2.<android.support.v7.widget.GridLayoutManager$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>(r3);

        return $r2;

     label1:
        $r2 = new android.support.v7.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r2.<android.support.v7.widget.GridLayoutManager$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }
    public int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 1 goto label1;

        $i0 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        return $i0;

     label1:
        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        if $i0 >= 1 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        $i0 = $i0 + -1;

        $i0 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>($r1, $r2, $i0);

        return $i0;
    }
    public int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 0 goto label1;

        $i0 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        return $i0;

     label1:
        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        if $i0 >= 1 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        $i0 = $i0 + -1;

        $i0 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>($r1, $r2, $i0);

        return $i0;
    }
    public int getSpanCount()
    {
        android.support.v7.widget.GridLayoutManager r0;
        int i0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        i0 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        return i0;
    }
    public android.support.v7.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup()
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup r1;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        return r1;
    }
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.LinearLayoutManager$LayoutState, android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.support.v7.widget.LinearLayoutManager$LayoutState $r3;
        android.support.v7.widget.LinearLayoutManager$LayoutChunkResult $r4;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9;
        boolean z0, $z1;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        android.view.View $r8;
        android.view.View[] $r9;
        java.util.List $r10;
        android.view.ViewGroup$LayoutParams $r11;
        android.support.v7.widget.GridLayoutManager$LayoutParams r12;
        int[] $r13;
        android.support.v7.widget.OrientationHelper $r14;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.support.v7.widget.LinearLayoutManager$LayoutState;

        $r4 := @parameter3: android.support.v7.widget.LinearLayoutManager$LayoutChunkResult;

        $i4 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        if $i4 != 1 goto label03;

        z0 = 1;

     label01:
        $i4 = 0;

        i5 = 0;

        $i6 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if z0 != 0 goto label02;

        $i6 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $i6 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>($r1, $r2, $i6);

        $i7 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $i7 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>($r1, $r2, $i7);

        $i6 = $i6 + $i7;

     label02:
        $i7 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if $i4 >= $i7 goto label05;

        $z1 = virtualinvoke $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: boolean hasMore(android.support.v7.widget.RecyclerView$State)>($r2);

        if $z1 == 0 goto label05;

        if $i6 <= 0 goto label05;

        $i7 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $i8 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>($r1, $r2, $i7);

        $i9 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if $i8 <= $i9 goto label04;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Item at position ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" spans but GridLayoutManager has only ");

        $i4 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" spans.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label03:
        z0 = 0;

        goto label01;

     label04:
        $i6 = $i6 - $i8;

        if $i6 >= 0 goto label06;

     label05:
        if $i4 != 0 goto label07;

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished> = 1;

        return;

     label06:
        $r8 = virtualinvoke $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: android.view.View next(android.support.v7.widget.RecyclerView$Recycler)>($r1);

        if $r8 == null goto label05;

        i5 = i5 + $i8;

        $r9 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        $r9[$i4] = $r8;

        $i4 = $i4 + 1;

        goto label02;

     label07:
        $i6 = 0;

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void assignSpans(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,boolean)>($r1, $r2, $i4, i5, z0);

        i5 = 0;

     label08:
        if i5 >= $i4 goto label16;

        $r9 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        $r8 = $r9[i5];

        $r10 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>;

        if $r10 != null goto label13;

        if z0 == 0 goto label12;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void addView(android.view.View)>($r8);

     label09:
        $r11 = virtualinvoke $r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r12 = (android.support.v7.widget.GridLayoutManager$LayoutParams) $r11;

        $r13 = r0.<android.support.v7.widget.GridLayoutManager: int[] mCachedBorders>;

        $i7 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$000(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r12);

        $i8 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$100(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r12);

        $i7 = $i7 + $i8;

        $i7 = $r13[$i7];

        $r13 = r0.<android.support.v7.widget.GridLayoutManager: int[] mCachedBorders>;

        $i8 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$000(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r12);

        $i8 = $r13[$i8];

        $i7 = $i7 - $i8;

        $i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i7, 1073741824);

        $i8 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i8 != 1 goto label15;

        $i8 = r12.<android.support.v7.widget.GridLayoutManager$LayoutParams: int height>;

        $i8 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getMainDirSpec(int)>($i8);

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int)>($r8, $i7, $i8);

     label10:
        $r14 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i7 = virtualinvoke $r14.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>($r8);

        if $i7 <= $i6 goto label11;

        $i6 = $i7;

     label11:
        i5 = i5 + 1;

        goto label08;

     label12:
        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void addView(android.view.View,int)>($r8, 0);

        goto label09;

     label13:
        if z0 == 0 goto label14;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void addDisappearingView(android.view.View)>($r8);

        goto label09;

     label14:
        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void addDisappearingView(android.view.View,int)>($r8, 0);

        goto label09;

     label15:
        $i8 = r12.<android.support.v7.widget.GridLayoutManager$LayoutParams: int width>;

        $i8 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getMainDirSpec(int)>($i8);

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int)>($r8, $i8, $i7);

        goto label10;

     label16:
        i5 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getMainDirSpec(int)>($i6);

        $i7 = 0;

     label17:
        if $i7 >= $i4 goto label20;

        $r9 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        $r8 = $r9[$i7];

        $r14 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i8 = virtualinvoke $r14.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>($r8);

        if $i8 == $i6 goto label18;

        $r11 = virtualinvoke $r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r12 = (android.support.v7.widget.GridLayoutManager$LayoutParams) $r11;

        $r13 = r0.<android.support.v7.widget.GridLayoutManager: int[] mCachedBorders>;

        $i8 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$000(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r12);

        $i9 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$100(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r12);

        $i8 = $i8 + $i9;

        $i8 = $r13[$i8];

        $r13 = r0.<android.support.v7.widget.GridLayoutManager: int[] mCachedBorders>;

        $i9 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$000(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r12);

        $i9 = $r13[$i9];

        $i8 = $i8 - $i9;

        $i8 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i8, 1073741824);

        $i9 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i9 != 1 goto label19;

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int)>($r8, $i8, i5);

     label18:
        $i7 = $i7 + 1;

        goto label17;

     label19:
        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int)>($r8, i5, $i8);

        goto label18;

     label20:
        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed> = $i6;

        i5 = 0;

        $i8 = 0;

        $i7 = 0;

        $i9 = 0;

        $i0 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 1 goto label27;

        $i7 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i7 != -1 goto label26;

        $i7 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i9 = $i7;

        $i7 = $i7 - $i6;

     label21:
        $i6 = 0;

     label22:
        if $i6 >= $i4 goto label30;

        $r9 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        $r8 = $r9[$i6];

        $r11 = virtualinvoke $r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r12 = (android.support.v7.widget.GridLayoutManager$LayoutParams) $r11;

        $i0 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 1 goto label29;

        i5 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPaddingLeft()>();

        $r13 = r0.<android.support.v7.widget.GridLayoutManager: int[] mCachedBorders>;

        $i8 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$000(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r12);

        $i8 = $r13[$i8];

        i5 = i5 + $i8;

        $r14 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i8 = virtualinvoke $r14.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>($r8);

        $i8 = i5 + $i8;

     label23:
        $i0 = r12.<android.support.v7.widget.GridLayoutManager$LayoutParams: int leftMargin>;

        $i0 = i5 + $i0;

        $i1 = r12.<android.support.v7.widget.GridLayoutManager$LayoutParams: int topMargin>;

        $i1 = $i7 + $i1;

        $i2 = r12.<android.support.v7.widget.GridLayoutManager$LayoutParams: int rightMargin>;

        $i2 = $i8 - $i2;

        $i3 = r12.<android.support.v7.widget.GridLayoutManager$LayoutParams: int bottomMargin>;

        $i3 = $i9 - $i3;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void layoutDecorated(android.view.View,int,int,int,int)>($r8, $i0, $i1, $i2, $i3);

        z0 = virtualinvoke r12.<android.support.v7.widget.GridLayoutManager$LayoutParams: boolean isItemRemoved()>();

        if z0 != 0 goto label24;

        z0 = virtualinvoke r12.<android.support.v7.widget.GridLayoutManager$LayoutParams: boolean isItemChanged()>();

        if z0 == 0 goto label25;

     label24:
        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed> = 1;

     label25:
        z0 = $r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable>;

        $z1 = virtualinvoke $r8.<android.view.View: boolean isFocusable()>();

        z0 = z0 | $z1;

        $r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable> = z0;

        $i6 = $i6 + 1;

        goto label22;

     label26:
        $i9 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i7 = $i9;

        $i9 = $i9 + $i6;

        goto label21;

     label27:
        i5 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if i5 != -1 goto label28;

        i5 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        $i8 = i5;

        i5 = i5 - $i6;

        goto label21;

     label28:
        $i8 = $r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i5 = $i8;

        $i8 = $i8 + $i6;

        goto label21;

     label29:
        $i7 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPaddingTop()>();

        $r13 = r0.<android.support.v7.widget.GridLayoutManager: int[] mCachedBorders>;

        $i9 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$000(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r12);

        $i9 = $r13[$i9];

        $i7 = $i7 + $i9;

        $r14 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i9 = virtualinvoke $r14.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>($r8);

        $i9 = $i7 + $i9;

        goto label23;

     label30:
        $r9 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r9, null);

        return;
    }
    void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.LinearLayoutManager$AnchorInfo)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo $r3;
        int $i0, $i1;
        boolean $z0;
        android.view.View[] $r4;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.support.v7.widget.LinearLayoutManager$AnchorInfo;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)>($r1, $r2, $r3);

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void updateMeasurements()>();

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        if $i0 <= 0 goto label1;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void ensureAnchorIsInFirstSpan(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)>($r1, $r2, $r3);

     label1:
        $r4 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        if $r4 == null goto label2;

        $r4 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        $i1 = lengthof $r4;

        $i0 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if $i1 == $i0 goto label3;

     label2:
        $i0 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $r4 = newarray (android.view.View)[$i0];

        r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet> = $r4;

     label3:
        return;
    }
    public void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        android.view.View $r3;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat $r4;
        android.view.ViewGroup$LayoutParams $r5;
        boolean $z0;
        android.support.v7.widget.GridLayoutManager$LayoutParams r6;
        int $i0, $i1, $i2, $i3, $i4;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat $r7;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 := @parameter2: android.view.View;

        $r4 := @parameter3: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r5 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = $r5 instanceof android.support.v7.widget.GridLayoutManager$LayoutParams;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void onInitializeAccessibilityNodeInfoForItem(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r3, $r4);

        return;

     label1:
        r6 = (android.support.v7.widget.GridLayoutManager$LayoutParams) $r5;

        $i0 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getViewLayoutPosition()>();

        $i0 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>($r1, $r2, $i0);

        $i1 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i1 != 0 goto label4;

        $i1 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanIndex()>();

        $i2 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        $i3 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if $i3 <= 1 goto label3;

        $i3 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        $i4 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if $i3 != $i4 goto label3;

        $z0 = 1;

     label2:
        $r7 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>($i1, $i2, $i0, 1, $z0, 0);

        virtualinvoke $r4.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)>($r7);

        return;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        $i1 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanIndex()>();

        $i2 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        $i3 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if $i3 <= 1 goto label6;

        $i3 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        $i4 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if $i3 != $i4 goto label6;

        $z0 = 1;

     label5:
        $r7 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>($i0, 1, $i1, $i2, $z0, 0);

        virtualinvoke $r4.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)>($r7);

        return;

     label6:
        $z0 = 0;

        goto label5;
    }
    public void onItemsAdded(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0, $i1;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }
    public void onItemsChanged(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }
    public void onItemsMoved(android.support.v7.widget.RecyclerView, int, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0, $i1, $i2;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }
    public void onItemsRemoved(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0, $i1;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }
    public void onItemsUpdated(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0, $i1;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }
    public void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler $r1;
        android.support.v7.widget.RecyclerView$State $r2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void cachePreLayoutSpanMapping()>();

     label1:
        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>($r1, $r2);

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void clearPreLayoutSpanMappingCache()>();

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label2;

        r0.<android.support.v7.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 0;

     label2:
        return;
    }
    public void setSpanCount(int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r4;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $i0 := @parameter0: int;

        $i1 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if $i0 != $i1 goto label1;

        return;

     label1:
        r0.<android.support.v7.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 1;

        if $i0 >= 1 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Span count should be at least 1. Provided ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount> = $i0;

        $r4 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r4.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }
    public void setSpanSizeLookup(android.support.v7.widget.GridLayoutManager$SpanSizeLookup)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r1;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 := @parameter0: android.support.v7.widget.GridLayoutManager$SpanSizeLookup;

        r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = $r1;

        return;
    }
    public void setStackFromEnd(boolean)
    {
        android.support.v7.widget.GridLayoutManager r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("GridLayoutManager does not support stack from end. Consider using reverse layout");

        throw $r1;

     label1:
        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void setStackFromEnd(boolean)>(0);

        return;
    }
    public boolean supportsPredictiveItemAnimations()
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.LinearLayoutManager$SavedState $r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r1 != null goto label1;

        $z0 = r0.<android.support.v7.widget.GridLayoutManager: boolean mPendingSpanCountChange>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
