android.support.v7.widget.AdapterHelper extends java.lang.Object implements android.support.v7.widget.OpReorderer$Callback
private static final boolean DEBUG
static final int POSITION_TYPE_INVISIBLE
static final int POSITION_TYPE_NEW_OR_LAID_OUT
private static final java.lang.String TAG
final android.support.v7.widget.AdapterHelper$Callback mCallback
final boolean mDisableRecycler
java.lang.Runnable mOnItemProcessedCallback
final android.support.v7.widget.OpReorderer mOpReorderer
final java.util.ArrayList mPendingUpdates
final java.util.ArrayList mPostponedList
private android.support.v4.util.Pools$Pool mUpdateOpPool
    void <init>(android.support.v7.widget.AdapterHelper$Callback)
    {
        android.support.v7.widget.AdapterHelper r0;
        android.support.v7.widget.AdapterHelper$Callback $r1;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r1 := @parameter0: android.support.v7.widget.AdapterHelper$Callback;

        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void <init>(android.support.v7.widget.AdapterHelper$Callback,boolean)>($r1, 0);

        return;
    }
    void <init>(android.support.v7.widget.AdapterHelper$Callback, boolean)
    {
        android.support.v7.widget.AdapterHelper r0;
        android.support.v7.widget.AdapterHelper$Callback $r1;
        boolean $z0;
        android.support.v4.util.Pools$SimplePool $r2;
        java.util.ArrayList $r3;
        android.support.v7.widget.OpReorderer $r4;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r1 := @parameter0: android.support.v7.widget.AdapterHelper$Callback;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.support.v4.util.Pools$SimplePool;

        specialinvoke $r2.<android.support.v4.util.Pools$SimplePool: void <init>(int)>(30);

        r0.<android.support.v7.widget.AdapterHelper: android.support.v4.util.Pools$Pool mUpdateOpPool> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList> = $r3;

        r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback> = $r1;

        r0.<android.support.v7.widget.AdapterHelper: boolean mDisableRecycler> = $z0;

        $r4 = new android.support.v7.widget.OpReorderer;

        specialinvoke $r4.<android.support.v7.widget.OpReorderer: void <init>(android.support.v7.widget.OpReorderer$Callback)>(r0);

        r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.OpReorderer mOpReorderer> = $r4;

        return;
    }
    private void applyAdd(android.support.v7.widget.AdapterHelper$UpdateOp)
    {
        android.support.v7.widget.AdapterHelper r0;
        android.support.v7.widget.AdapterHelper$UpdateOp $r1;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r1 := @parameter0: android.support.v7.widget.AdapterHelper$UpdateOp;

        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)>($r1);

        return;
    }
    private void applyMove(android.support.v7.widget.AdapterHelper$UpdateOp)
    {
        android.support.v7.widget.AdapterHelper r0;
        android.support.v7.widget.AdapterHelper$UpdateOp $r1;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r1 := @parameter0: android.support.v7.widget.AdapterHelper$UpdateOp;

        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)>($r1);

        return;
    }
    private void applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp)
    {
        android.support.v7.widget.AdapterHelper r0;
        int i0, $i1, i2, $i3;
        android.support.v7.widget.AdapterHelper$UpdateOp $r1, $r4;
        byte b4;
        boolean z0, $z1;
        android.support.v7.widget.AdapterHelper$Callback $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r1 := @parameter0: android.support.v7.widget.AdapterHelper$UpdateOp;

        i0 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        i2 = 0;

        $i3 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i1 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        $i1 = $i3 + $i1;

        b4 = -1;

        $i3 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

     label01:
        if $i3 >= $i1 goto label09;

        z0 = 0;

        $r2 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        $r3 = interfaceinvoke $r2.<android.support.v7.widget.AdapterHelper$Callback: android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int)>($i3);

        if $r3 != null goto label02;

        $z1 = specialinvoke r0.<android.support.v7.widget.AdapterHelper: boolean canFindInPreLayout(int)>($i3);

        if $z1 == 0 goto label06;

     label02:
        if b4 != 0 goto label03;

        $r4 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int)>(1, i0, i2);

        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)>($r4);

        z0 = 1;

     label03:
        b4 = 1;

     label04:
        if z0 == 0 goto label08;

        $i3 = $i3 - i2;

        $i1 = $i1 - i2;

        i2 = 1;

     label05:
        $i3 = $i3 + 1;

        goto label01;

     label06:
        if b4 != 1 goto label07;

        $r4 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int)>(1, i0, i2);

        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)>($r4);

        z0 = 1;

     label07:
        b4 = 0;

        goto label04;

     label08:
        i2 = i2 + 1;

        goto label05;

     label09:
        $i1 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        if i2 == $i1 goto label10;

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp)>($r1);

        $r1 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int)>(1, i0, i2);

     label10:
        if b4 != 0 goto label11;

        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)>($r1);

        return;

     label11:
        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)>($r1);

        return;
    }
    private void applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp)
    {
        android.support.v7.widget.AdapterHelper r0;
        int i0, i1, i2, $i3;
        android.support.v7.widget.AdapterHelper$UpdateOp $r1, $r4;
        byte b4;
        android.support.v7.widget.AdapterHelper$Callback $r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r1 := @parameter0: android.support.v7.widget.AdapterHelper$UpdateOp;

        i1 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        i2 = 0;

        $i3 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        i0 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        i0 = $i3 + i0;

        b4 = -1;

        $i3 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

     label1:
        if $i3 >= i0 goto label7;

        $r2 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        $r3 = interfaceinvoke $r2.<android.support.v7.widget.AdapterHelper$Callback: android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int)>($i3);

        if $r3 != null goto label2;

        $z0 = specialinvoke r0.<android.support.v7.widget.AdapterHelper: boolean canFindInPreLayout(int)>($i3);

        if $z0 == 0 goto label5;

     label2:
        if b4 != 0 goto label3;

        $r4 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int)>(2, i1, i2);

        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)>($r4);

        i2 = 0;

        i1 = $i3;

     label3:
        b4 = 1;

     label4:
        i2 = i2 + 1;

        $i3 = $i3 + 1;

        goto label1;

     label5:
        if b4 != 1 goto label6;

        $r4 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int)>(2, i1, i2);

        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)>($r4);

        i2 = 0;

        i1 = $i3;

     label6:
        b4 = 0;

        goto label4;

     label7:
        i0 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        if i2 == i0 goto label8;

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp)>($r1);

        $r1 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int)>(2, i1, i2);

     label8:
        if b4 != 0 goto label9;

        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)>($r1);

        return;

     label9:
        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)>($r1);

        return;
    }
    private boolean canFindInPreLayout(int)
    {
        android.support.v7.widget.AdapterHelper r0;
        int $i0, i1, $i2, i3, $i4, $i5;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.support.v7.widget.AdapterHelper$UpdateOp r3;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= $i2 goto label5;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (android.support.v7.widget.AdapterHelper$UpdateOp) $r2;

        i1 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        if i1 != 3 goto label2;

        i1 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        $i4 = i3 + 1;

        i1 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: int findPositionOffset(int,int)>(i1, $i4);

        if i1 != $i0 goto label4;

        return 1;

     label2:
        i1 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        if i1 != 0 goto label4;

        i1 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i4 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        i1 = i1 + $i4;

        $i4 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

     label3:
        if $i4 >= i1 goto label4;

        $i5 = i3 + 1;

        $i5 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: int findPositionOffset(int,int)>($i4, $i5);

        if $i5 == $i0 goto label6;

        $i4 = $i4 + 1;

        goto label3;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return 0;

     label6:
        return 1;
    }
    private void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)
    {
        android.support.v7.widget.AdapterHelper r0;
        android.support.v7.widget.AdapterHelper$UpdateOp $r1, $r5;
        int i0, $i1, $i2, i3, $i4, $i6;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        byte b5;
        boolean z0;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r1 := @parameter0: android.support.v7.widget.AdapterHelper$UpdateOp;

        $i1 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        if $i1 == 0 goto label01;

        $i1 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        if $i1 != 3 goto label02;

     label01:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("should not dispatch add or move for pre layout");

        throw $r2;

     label02:
        $i1 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i2 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        i3 = specialinvoke r0.<android.support.v7.widget.AdapterHelper: int updatePositionWithPostponed(int,int)>($i1, $i2);

        $i1 = 1;

        $i2 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i4 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        lookupswitch($i4)
        {
            case 1: goto label09;
            case 2: goto label04;
            default: goto label03;
        };

     label03:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("op should be remove or update.");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label04:
        b5 = 1;

     label05:
        $i4 = 1;

     label06:
        i0 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        if $i4 >= i0 goto label16;

        i0 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i6 = b5 * $i4;

        i0 = i0 + $i6;

        $i6 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        i0 = specialinvoke r0.<android.support.v7.widget.AdapterHelper: int updatePositionWithPostponed(int,int)>(i0, $i6);

        z0 = 0;

        $i6 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        lookupswitch($i6)
        {
            case 1: goto label12;
            case 2: goto label10;
            default: goto label07;
        };

     label07:
        if z0 == 0 goto label14;

        $i1 = $i1 + 1;

     label08:
        $i4 = $i4 + 1;

        goto label06;

     label09:
        b5 = 0;

        goto label05;

     label10:
        $i6 = i3 + 1;

        if i0 != $i6 goto label11;

        z0 = 1;

        goto label07;

     label11:
        z0 = 0;

        goto label07;

     label12:
        if i0 != i3 goto label13;

        z0 = 1;

        goto label07;

     label13:
        z0 = 0;

        goto label07;

     label14:
        $i6 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        $r5 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int)>($i6, i3, $i1);

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int)>($r5, $i2);

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp)>($r5);

        i3 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        if i3 != 2 goto label15;

        $i2 = $i2 + $i1;

     label15:
        i3 = i0;

        $i1 = 1;

        goto label08;

     label16:
        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp)>($r1);

        if $i1 <= 0 goto label17;

        $i4 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        $r1 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int)>($i4, i3, $i1);

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int)>($r1, $i2);

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp)>($r1);

     label17:
        return;
    }
    private void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp)
    {
        android.support.v7.widget.AdapterHelper r0;
        android.support.v7.widget.AdapterHelper$UpdateOp $r1;
        java.util.ArrayList $r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.support.v7.widget.AdapterHelper$Callback $r6;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r1 := @parameter0: android.support.v7.widget.AdapterHelper$UpdateOp;

        $r2 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i0 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label3;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown update op type for ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label2:
        $r6 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        $i0 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i1 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        interfaceinvoke $r6.<android.support.v7.widget.AdapterHelper$Callback: void offsetPositionsForAdd(int,int)>($i0, $i1);

        return;

     label3:
        $r6 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        $i0 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i1 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        interfaceinvoke $r6.<android.support.v7.widget.AdapterHelper$Callback: void offsetPositionsForMove(int,int)>($i0, $i1);

        return;

     label4:
        $r6 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        $i0 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i1 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        interfaceinvoke $r6.<android.support.v7.widget.AdapterHelper$Callback: void offsetPositionsForRemovingLaidOutOrNewView(int,int)>($i0, $i1);

        return;

     label5:
        $r6 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        $i0 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i1 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        interfaceinvoke $r6.<android.support.v7.widget.AdapterHelper$Callback: void markViewHoldersUpdated(int,int)>($i0, $i1);

        return;
    }
    private int updatePositionWithPostponed(int, int)
    {
        android.support.v7.widget.AdapterHelper r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.support.v7.widget.AdapterHelper$UpdateOp r3;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i2 = $i2 + -1;

     label01:
        if $i2 < 0 goto label16;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        r3 = (android.support.v7.widget.AdapterHelper$UpdateOp) $r2;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        if $i3 != 3 goto label12;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i4 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        if $i3 >= $i4 goto label05;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i4 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

     label02:
        if $i1 < $i3 goto label10;

        if $i1 > $i4 goto label10;

        $i4 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        if $i3 != $i4 goto label07;

        if $i0 != 0 goto label06;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        $i3 = $i3 + 1;

        r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount> = $i3;

     label03:
        $i1 = $i1 + 1;

     label04:
        $i2 = $i2 + -1;

        goto label01;

     label05:
        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        $i4 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        goto label02;

     label06:
        if $i0 != 1 goto label03;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        $i3 = $i3 + -1;

        r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount> = $i3;

        goto label03;

     label07:
        if $i0 != 0 goto label09;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i3 = $i3 + 1;

        r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart> = $i3;

     label08:
        $i1 = $i1 + -1;

        goto label04;

     label09:
        if $i0 != 1 goto label08;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i3 = $i3 + -1;

        r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart> = $i3;

        goto label08;

     label10:
        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        if $i1 >= $i3 goto label04;

        if $i0 != 0 goto label11;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i3 = $i3 + 1;

        r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart> = $i3;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        $i3 = $i3 + 1;

        r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount> = $i3;

        goto label04;

     label11:
        if $i0 != 1 goto label04;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i3 = $i3 + -1;

        r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart> = $i3;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        $i3 = $i3 + -1;

        r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount> = $i3;

        goto label04;

     label12:
        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        if $i3 > $i1 goto label14;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        if $i3 != 0 goto label13;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        $i1 = $i1 - $i3;

        goto label04;

     label13:
        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        if $i3 != 1 goto label04;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        $i1 = $i1 + $i3;

        goto label04;

     label14:
        if $i0 != 0 goto label15;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i3 = $i3 + 1;

        r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart> = $i3;

        goto label04;

     label15:
        if $i0 != 1 goto label04;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i3 = $i3 + -1;

        r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart> = $i3;

        goto label04;

     label16:
        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

     label17:
        if $i0 < 0 goto label21;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r3 = (android.support.v7.widget.AdapterHelper$UpdateOp) $r2;

        $i2 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        if $i2 != 3 goto label20;

        $i2 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        if $i2 == $i3 goto label18;

        $i2 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        if $i2 >= 0 goto label19;

     label18:
        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp)>(r3);

     label19:
        $i0 = $i0 + -1;

        goto label17;

     label20:
        $i2 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        if $i2 > 0 goto label19;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp)>(r3);

        goto label19;

     label21:
        return $i1;
    }
    transient android.support.v7.widget.AdapterHelper addUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp[])
    {
        android.support.v7.widget.AdapterHelper r0;
        android.support.v7.widget.AdapterHelper$UpdateOp[] $r1;
        java.util.ArrayList $r2;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r1 := @parameter0: android.support.v7.widget.AdapterHelper$UpdateOp[];

        $r2 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r2, $r1);

        return r0;
    }
    public int applyPendingUpdatesToPosition(int)
    {
        android.support.v7.widget.AdapterHelper r0;
        int i0, i1, $i2, i3, $i4;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.support.v7.widget.AdapterHelper$UpdateOp r3;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        i1 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= $i2 goto label9;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (android.support.v7.widget.AdapterHelper$UpdateOp) $r2;

        i0 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        lookupswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label6;
            default: goto label2;
        };

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        i0 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        if i0 > i1 goto label2;

        i0 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        i1 = i1 + i0;

        goto label2;

     label4:
        i0 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        if i0 > i1 goto label2;

        $i4 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        i0 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        i0 = $i4 + i0;

        if i0 <= i1 goto label5;

        return -1;

     label5:
        i0 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        i1 = i1 - i0;

        goto label2;

     label6:
        i0 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        if i0 != i1 goto label7;

        i1 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        goto label2;

     label7:
        i0 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        if i0 >= i1 goto label8;

        i1 = i1 + -1;

     label8:
        i0 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        if i0 > i1 goto label2;

        i1 = i1 + 1;

        goto label2;

     label9:
        return i1;
    }
    void consumePostponedUpdates()
    {
        android.support.v7.widget.AdapterHelper r0;
        android.support.v7.widget.AdapterHelper$Callback $r1;
        java.util.ArrayList $r2;
        int $i0, i1;
        java.lang.Object $r3;
        android.support.v7.widget.AdapterHelper$UpdateOp $r4;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r2 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        $r2 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (android.support.v7.widget.AdapterHelper$UpdateOp) $r3;

        interfaceinvoke $r1.<android.support.v7.widget.AdapterHelper$Callback: void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void recycleUpdateOpsAndClearList(java.util.List)>($r2);

        return;
    }
    void consumeUpdatesInOnePass()
    {
        android.support.v7.widget.AdapterHelper r0;
        java.util.ArrayList $r1;
        int $i0, i1, $i2, $i3;
        java.lang.Object $r2;
        android.support.v7.widget.AdapterHelper$UpdateOp r3;
        java.lang.Runnable $r4;
        android.support.v7.widget.AdapterHelper$Callback $r5;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void consumePostponedUpdates()>();

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label8;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.support.v7.widget.AdapterHelper$UpdateOp) $r2;

        $i2 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        lookupswitch($i2)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label2;
        };

     label2:
        $r4 = r0.<android.support.v7.widget.AdapterHelper: java.lang.Runnable mOnItemProcessedCallback>;

        if $r4 == null goto label3;

        $r4 = r0.<android.support.v7.widget.AdapterHelper: java.lang.Runnable mOnItemProcessedCallback>;

        interfaceinvoke $r4.<java.lang.Runnable: void run()>();

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r5 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        interfaceinvoke $r5.<android.support.v7.widget.AdapterHelper$Callback: void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp)>(r3);

        $r5 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        $i2 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        interfaceinvoke $r5.<android.support.v7.widget.AdapterHelper$Callback: void offsetPositionsForAdd(int,int)>($i2, $i3);

        goto label2;

     label5:
        $r5 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        interfaceinvoke $r5.<android.support.v7.widget.AdapterHelper$Callback: void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp)>(r3);

        $r5 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        $i2 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        interfaceinvoke $r5.<android.support.v7.widget.AdapterHelper$Callback: void offsetPositionsForRemovingInvisible(int,int)>($i2, $i3);

        goto label2;

     label6:
        $r5 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        interfaceinvoke $r5.<android.support.v7.widget.AdapterHelper$Callback: void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp)>(r3);

        $r5 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        $i2 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        interfaceinvoke $r5.<android.support.v7.widget.AdapterHelper$Callback: void markViewHoldersUpdated(int,int)>($i2, $i3);

        goto label2;

     label7:
        $r5 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        interfaceinvoke $r5.<android.support.v7.widget.AdapterHelper$Callback: void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp)>(r3);

        $r5 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        $i2 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        interfaceinvoke $r5.<android.support.v7.widget.AdapterHelper$Callback: void offsetPositionsForMove(int,int)>($i2, $i3);

        goto label2;

     label8:
        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void recycleUpdateOpsAndClearList(java.util.List)>($r1);

        return;
    }
    void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp, int)
    {
        android.support.v7.widget.AdapterHelper r0;
        android.support.v7.widget.AdapterHelper$UpdateOp $r1;
        int $i0, $i1;
        android.support.v7.widget.AdapterHelper$Callback $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r1 := @parameter0: android.support.v7.widget.AdapterHelper$UpdateOp;

        $i0 := @parameter1: int;

        $r2 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        interfaceinvoke $r2.<android.support.v7.widget.AdapterHelper$Callback: void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp)>($r1);

        $i1 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only remove and update ops can be dispatched in first pass");

        throw $r3;

     label2:
        $r2 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        $i1 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        interfaceinvoke $r2.<android.support.v7.widget.AdapterHelper$Callback: void offsetPositionsForRemovingInvisible(int,int)>($i0, $i1);

        return;

     label3:
        $r2 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$Callback mCallback>;

        $i1 = $r1.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        interfaceinvoke $r2.<android.support.v7.widget.AdapterHelper$Callback: void markViewHoldersUpdated(int,int)>($i0, $i1);

        return;
    }
    int findPositionOffset(int)
    {
        android.support.v7.widget.AdapterHelper r0;
        int $i0;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $i0 := @parameter0: int;

        $i0 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: int findPositionOffset(int,int)>($i0, 0);

        return $i0;
    }
    int findPositionOffset(int, int)
    {
        android.support.v7.widget.AdapterHelper r0;
        int $i0, i1, $i2, $i3, $i4;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.support.v7.widget.AdapterHelper$UpdateOp r3;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label1:
        if $i0 >= $i2 goto label8;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        r3 = (android.support.v7.widget.AdapterHelper$UpdateOp) $r2;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        if $i3 != 3 goto label5;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        if $i3 != i1 goto label3;

        i1 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        if $i3 >= i1 goto label4;

        i1 = i1 + -1;

     label4:
        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        if $i3 > i1 goto label2;

        i1 = i1 + 1;

        goto label2;

     label5:
        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        if $i3 > i1 goto label2;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        if $i3 != 1 goto label7;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart>;

        $i4 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        $i3 = $i3 + $i4;

        if i1 >= $i3 goto label6;

        return -1;

     label6:
        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        i1 = i1 - $i3;

        goto label2;

     label7:
        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        if $i3 != 0 goto label2;

        $i3 = r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount>;

        i1 = i1 + $i3;

        goto label2;

     label8:
        return i1;
    }
    boolean hasPendingUpdates()
    {
        android.support.v7.widget.AdapterHelper r0;
        int $i0;
        java.util.ArrayList $r1;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int, int, int)
    {
        android.support.v7.widget.AdapterHelper r0;
        int $i0, $i1, $i2;
        android.support.v4.util.Pools$Pool $r1;
        java.lang.Object $r2;
        android.support.v7.widget.AdapterHelper$UpdateOp r3;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: android.support.v4.util.Pools$Pool mUpdateOpPool>;

        $r2 = interfaceinvoke $r1.<android.support.v4.util.Pools$Pool: java.lang.Object acquire()>();

        r3 = (android.support.v7.widget.AdapterHelper$UpdateOp) $r2;

        if r3 != null goto label1;

        r3 = new android.support.v7.widget.AdapterHelper$UpdateOp;

        specialinvoke r3.<android.support.v7.widget.AdapterHelper$UpdateOp: void <init>(int,int,int)>($i0, $i1, $i2);

        return r3;

     label1:
        r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd> = $i0;

        r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int positionStart> = $i1;

        r3.<android.support.v7.widget.AdapterHelper$UpdateOp: int itemCount> = $i2;

        return r3;
    }
    boolean onItemRangeChanged(int, int)
    {
        android.support.v7.widget.AdapterHelper r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        android.support.v7.widget.AdapterHelper$UpdateOp $r2;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $r2 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int)>(2, $i0, $i1);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean onItemRangeInserted(int, int)
    {
        android.support.v7.widget.AdapterHelper r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        android.support.v7.widget.AdapterHelper$UpdateOp $r2;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $r2 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int)>(0, $i0, $i1);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }
    boolean onItemRangeMoved(int, int, int)
    {
        android.support.v7.widget.AdapterHelper r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        java.util.ArrayList $r2;
        android.support.v7.widget.AdapterHelper$UpdateOp $r3;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $z0 = 1;

        if $i0 != $i1 goto label1;

        return 0;

     label1:
        if $i2 == 1 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Moving more than 1 item is not supported yet");

        throw $r1;

     label2:
        $r2 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $r3 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int)>(3, $i0, $i1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r2 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label4;

     label3:
        return $z0;

     label4:
        $z0 = 0;

        goto label3;
    }
    boolean onItemRangeRemoved(int, int)
    {
        android.support.v7.widget.AdapterHelper r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        android.support.v7.widget.AdapterHelper$UpdateOp $r2;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $r2 = virtualinvoke r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int)>(1, $i0, $i1);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }
    void preProcess()
    {
        android.support.v7.widget.AdapterHelper r0;
        java.util.ArrayList $r1;
        android.support.v7.widget.OpReorderer $r2;
        int $i0, i1, $i2;
        java.lang.Object $r3;
        android.support.v7.widget.AdapterHelper$UpdateOp r4;
        java.lang.Runnable $r5;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r2 = r0.<android.support.v7.widget.AdapterHelper: android.support.v7.widget.OpReorderer mOpReorderer>;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        virtualinvoke $r2.<android.support.v7.widget.OpReorderer: void reorderOps(java.util.List)>($r1);

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label8;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (android.support.v7.widget.AdapterHelper$UpdateOp) $r3;

        $i2 = r4.<android.support.v7.widget.AdapterHelper$UpdateOp: int cmd>;

        lookupswitch($i2)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label2;
        };

     label2:
        $r5 = r0.<android.support.v7.widget.AdapterHelper: java.lang.Runnable mOnItemProcessedCallback>;

        if $r5 == null goto label3;

        $r5 = r0.<android.support.v7.widget.AdapterHelper: java.lang.Runnable mOnItemProcessedCallback>;

        interfaceinvoke $r5.<java.lang.Runnable: void run()>();

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void applyAdd(android.support.v7.widget.AdapterHelper$UpdateOp)>(r4);

        goto label2;

     label5:
        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp)>(r4);

        goto label2;

     label6:
        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp)>(r4);

        goto label2;

     label7:
        specialinvoke r0.<android.support.v7.widget.AdapterHelper: void applyMove(android.support.v7.widget.AdapterHelper$UpdateOp)>(r4);

        goto label2;

     label8:
        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }
    public void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp)
    {
        android.support.v7.widget.AdapterHelper r0;
        android.support.v7.widget.AdapterHelper$UpdateOp $r1;
        boolean $z0;
        android.support.v4.util.Pools$Pool $r2;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r1 := @parameter0: android.support.v7.widget.AdapterHelper$UpdateOp;

        $z0 = r0.<android.support.v7.widget.AdapterHelper: boolean mDisableRecycler>;

        if $z0 != 0 goto label1;

        $r2 = r0.<android.support.v7.widget.AdapterHelper: android.support.v4.util.Pools$Pool mUpdateOpPool>;

        interfaceinvoke $r2.<android.support.v4.util.Pools$Pool: boolean release(java.lang.Object)>($r1);

     label1:
        return;
    }
    void recycleUpdateOpsAndClearList(java.util.List)
    {
        android.support.v7.widget.AdapterHelper r0;
        java.util.List r1;
        int $i0, i1;
        java.lang.Object $r2;
        android.support.v7.widget.AdapterHelper$UpdateOp $r3;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (android.support.v7.widget.AdapterHelper$UpdateOp) $r2;

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        interfaceinvoke r1.<java.util.List: void clear()>();

        return;
    }
    void reset()
    {
        android.support.v7.widget.AdapterHelper r0;
        java.util.ArrayList $r1;

        r0 := @this: android.support.v7.widget.AdapterHelper;

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPendingUpdates>;

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void recycleUpdateOpsAndClearList(java.util.List)>($r1);

        $r1 = r0.<android.support.v7.widget.AdapterHelper: java.util.ArrayList mPostponedList>;

        virtualinvoke r0.<android.support.v7.widget.AdapterHelper: void recycleUpdateOpsAndClearList(java.util.List)>($r1);

        return;
    }
