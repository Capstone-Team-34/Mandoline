butterknife.internal.ButterKnifeProcessor extends javax.annotation.processing.AbstractProcessor
static final boolean $assertionsDisabled
public static final java.lang.String ANDROID_PREFIX
private static final java.lang.String COLOR_STATE_LIST_TYPE
private static final java.lang.String DRAWABLE_TYPE
private static final java.lang.String ITERABLE_TYPE
public static final java.lang.String JAVA_PREFIX
private static final java.util.List LISTENERS
private static final java.lang.String LIST_TYPE
private static final java.lang.String NULLABLE_ANNOTATION_NAME
public static final java.lang.String SUFFIX
static final java.lang.String VIEW_TYPE
private javax.lang.model.util.Elements elementUtils
private javax.'annotation'.processing.Filer filer
private javax.lang.model.util.Types typeUtils
    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;
        java.lang.String $r1;
        java.lang.Class[] $r2;
        java.util.List $r3;

        $r0 = class "Lbutterknife/internal/ButterKnifeProcessor;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <butterknife.internal.ButterKnifeProcessor: boolean $assertionsDisabled> = $z0;

        $r0 = class "Ljava/util/List;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getCanonicalName()>();

        <butterknife.internal.ButterKnifeProcessor: java.lang.String LIST_TYPE> = $r1;

        $r2 = newarray (java.lang.Class)[11];

        $r2[0] = class "Lbutterknife/OnCheckedChanged;";

        $r2[1] = class "Lbutterknife/OnClick;";

        $r2[2] = class "Lbutterknife/OnEditorAction;";

        $r2[3] = class "Lbutterknife/OnFocusChange;";

        $r2[4] = class "Lbutterknife/OnItemClick;";

        $r2[5] = class "Lbutterknife/OnItemLongClick;";

        $r2[6] = class "Lbutterknife/OnItemSelected;";

        $r2[7] = class "Lbutterknife/OnLongClick;";

        $r2[8] = class "Lbutterknife/OnPageChange;";

        $r2[9] = class "Lbutterknife/OnTextChanged;";

        $r2[10] = class "Lbutterknife/OnTouch;";

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        <butterknife.internal.ButterKnifeProcessor: java.util.List LISTENERS> = $r3;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    public void <init>()
    {
        butterknife.internal.ButterKnifeProcessor r0;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        specialinvoke r0.<javax.'annotation'.processing.AbstractProcessor: void <init>()>();

        return;
    }
    private java.lang.String doubleErasure(javax.lang.model.type.TypeMirror)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.type.TypeMirror $r1;
        javax.lang.model.util.Types $r2;
        java.lang.String $r3;
        int $i0;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.type.TypeMirror;

        $r2 = r0.<butterknife.internal.ButterKnifeProcessor: javax.lang.model.util.Types typeUtils>;

        $r1 = interfaceinvoke $r2.<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror erasure(javax.lang.model.type.TypeMirror)>($r1);

        $r3 = interfaceinvoke $r1.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(60);

        if $i0 == -1 goto label1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        return $r3;
    }
    private transient void error(javax.lang.model.element.Element, java.lang.String, java.lang.Object[])
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.element.Element $r1;
        java.lang.Object[] $r2;
        javax.tools.Diagnostic$Kind $r3;
        java.lang.String $r4;
        int $i0;
        javax.'annotation'.processing.ProcessingEnvironment $r5;
        javax.'annotation'.processing.Messager $r6;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.element.Element;

        $r4 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Object[];

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label1;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r4, $r2);

     label1:
        $r5 = r0.<butterknife.internal.ButterKnifeProcessor: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r6 = interfaceinvoke $r5.<javax.'annotation'.processing.ProcessingEnvironment: javax.'annotation'.processing.Messager getMessager()>();

        $r3 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind ERROR>;

        interfaceinvoke $r6.<javax.'annotation'.processing.Messager: void printMessage(javax.tools.Diagnostic$Kind,java.lang.CharSequence,javax.lang.model.element.Element)>($r3, $r4, $r1);

        return;
    }
    private void findAndParseListener(javax.'annotation'.processing.RoundEnvironment, java.lang.Class, java.util.Map, java.util.Set)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.'annotation'.processing.RoundEnvironment $r1;
        java.lang.Class r2;
        java.util.Map r3;
        java.util.Set r4, $r7;
        java.lang.Exception r5;
        java.io.StringWriter r6;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        javax.lang.model.element.Element r10;
        java.io.PrintWriter $r11;
        java.lang.Object[] $r12;
        java.lang.String $r13;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.'annotation'.processing.RoundEnvironment;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: java.util.Set;

        $r7 = interfaceinvoke $r1.<javax.'annotation'.processing.RoundEnvironment: java.util.Set getElementsAnnotatedWith(java.lang.Class)>(r2);

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (javax.lang.model.element.Element) $r9;

     label2:
        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void parseListenerAnnotation(java.lang.Class,javax.lang.model.element.Element,java.util.Map,java.util.Set)>(r2, r10, r3, r4);

     label3:
        goto label1;

     label4:
        r5 := @caughtexception;

        r6 = new java.io.StringWriter;

        specialinvoke r6.<java.io.StringWriter: void <init>()>();

        $r11 = new java.io.PrintWriter;

        specialinvoke $r11.<java.io.PrintWriter: void <init>(java.io.Writer)>(r6);

        virtualinvoke r5.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>($r11);

        $r12 = newarray (java.lang.Object)[2];

        $r13 = virtualinvoke r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = $r13;

        $r13 = virtualinvoke r6.<java.io.StringWriter: java.lang.String toString()>();

        $r12[1] = $r13;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>(r10, "Unable to generate view binder for @%s.\n\n%s", $r12);

        goto label1;

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }
    private java.util.Map findAndParseTargets(javax.'annotation'.processing.RoundEnvironment)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.'annotation'.processing.RoundEnvironment $r1;
        java.util.LinkedHashSet r2;
        java.util.LinkedHashMap r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        javax.lang.model.element.Element r7;
        java.lang.Exception r8, r11, r12, r13, r14, r15, r16;
        java.util.List $r9;
        java.lang.Class r10;
        java.util.Map$Entry r17;
        javax.lang.model.element.TypeElement $r18;
        java.lang.String $r19;
        butterknife.internal.BindingClass $r20;
        java.lang.StringBuilder $r21;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.'annotation'.processing.RoundEnvironment;

        r3 = new java.util.LinkedHashMap;

        specialinvoke r3.<java.util.LinkedHashMap: void <init>()>();

        r2 = new java.util.LinkedHashSet;

        specialinvoke r2.<java.util.LinkedHashSet: void <init>()>();

        $r4 = interfaceinvoke $r1.<javax.'annotation'.processing.RoundEnvironment: java.util.Set getElementsAnnotatedWith(java.lang.Class)>(class "Lbutterknife/Bind;");

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.lang.model.element.Element) $r6;

     label02:
        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void parseBind(javax.lang.model.element.Element,java.util.Map,java.util.Set)>(r7, r3, r2);

     label03:
        goto label01;

     label04:
        r8 := @caughtexception;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void logParsingError(javax.lang.model.element.Element,java.lang.Class,java.lang.Exception)>(r7, class "Lbutterknife/Bind;", r8);

        goto label01;

     label05:
        $r9 = <butterknife.internal.ButterKnifeProcessor: java.util.List LISTENERS>;

        $r5 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.Class) $r6;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void findAndParseListener(javax.'annotation'.processing.RoundEnvironment,java.lang.Class,java.util.Map,java.util.Set)>($r1, r10, r3, r2);

        goto label06;

     label07:
        $r4 = interfaceinvoke $r1.<javax.'annotation'.processing.RoundEnvironment: java.util.Set getElementsAnnotatedWith(java.lang.Class)>(class "Lbutterknife/BindBool;");

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.lang.model.element.Element) $r6;

     label09:
        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void parseResourceBool(javax.lang.model.element.Element,java.util.Map,java.util.Set)>(r7, r3, r2);

     label10:
        goto label08;

     label11:
        r11 := @caughtexception;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void logParsingError(javax.lang.model.element.Element,java.lang.Class,java.lang.Exception)>(r7, class "Lbutterknife/BindBool;", r11);

        goto label08;

     label12:
        $r4 = interfaceinvoke $r1.<javax.'annotation'.processing.RoundEnvironment: java.util.Set getElementsAnnotatedWith(java.lang.Class)>(class "Lbutterknife/BindColor;");

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.lang.model.element.Element) $r6;

     label14:
        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void parseResourceColor(javax.lang.model.element.Element,java.util.Map,java.util.Set)>(r7, r3, r2);

     label15:
        goto label13;

     label16:
        r12 := @caughtexception;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void logParsingError(javax.lang.model.element.Element,java.lang.Class,java.lang.Exception)>(r7, class "Lbutterknife/BindColor;", r12);

        goto label13;

     label17:
        $r4 = interfaceinvoke $r1.<javax.'annotation'.processing.RoundEnvironment: java.util.Set getElementsAnnotatedWith(java.lang.Class)>(class "Lbutterknife/BindDimen;");

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label22;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.lang.model.element.Element) $r6;

     label19:
        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void parseResourceDimen(javax.lang.model.element.Element,java.util.Map,java.util.Set)>(r7, r3, r2);

     label20:
        goto label18;

     label21:
        r13 := @caughtexception;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void logParsingError(javax.lang.model.element.Element,java.lang.Class,java.lang.Exception)>(r7, class "Lbutterknife/BindDimen;", r13);

        goto label18;

     label22:
        $r4 = interfaceinvoke $r1.<javax.'annotation'.processing.RoundEnvironment: java.util.Set getElementsAnnotatedWith(java.lang.Class)>(class "Lbutterknife/BindDrawable;");

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label23:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label27;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.lang.model.element.Element) $r6;

     label24:
        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void parseResourceDrawable(javax.lang.model.element.Element,java.util.Map,java.util.Set)>(r7, r3, r2);

     label25:
        goto label23;

     label26:
        r14 := @caughtexception;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void logParsingError(javax.lang.model.element.Element,java.lang.Class,java.lang.Exception)>(r7, class "Lbutterknife/BindDrawable;", r14);

        goto label23;

     label27:
        $r4 = interfaceinvoke $r1.<javax.'annotation'.processing.RoundEnvironment: java.util.Set getElementsAnnotatedWith(java.lang.Class)>(class "Lbutterknife/BindInt;");

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label28:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label32;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.lang.model.element.Element) $r6;

     label29:
        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void parseResourceInt(javax.lang.model.element.Element,java.util.Map,java.util.Set)>(r7, r3, r2);

     label30:
        goto label28;

     label31:
        r15 := @caughtexception;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void logParsingError(javax.lang.model.element.Element,java.lang.Class,java.lang.Exception)>(r7, class "Lbutterknife/BindInt;", r15);

        goto label28;

     label32:
        $r4 = interfaceinvoke $r1.<javax.'annotation'.processing.RoundEnvironment: java.util.Set getElementsAnnotatedWith(java.lang.Class)>(class "Lbutterknife/BindString;");

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label33:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label37;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.lang.model.element.Element) $r6;

     label34:
        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void parseResourceString(javax.lang.model.element.Element,java.util.Map,java.util.Set)>(r7, r3, r2);

     label35:
        goto label33;

     label36:
        r16 := @caughtexception;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void logParsingError(javax.lang.model.element.Element,java.lang.Class,java.lang.Exception)>(r7, class "Lbutterknife/BindString;", r16);

        goto label33;

     label37:
        $r4 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label38:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label39;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (javax.lang.model.element.TypeElement) $r6;

        $r19 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: java.lang.String findParentFqcn(javax.lang.model.element.TypeElement,java.util.Set)>($r18, r2);

        if $r19 == null goto label38;

        $r6 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (butterknife.internal.BindingClass) $r6;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$$ViewBinder");

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<butterknife.internal.BindingClass: void setParentViewBinder(java.lang.String)>($r19);

        goto label38;

     label39:
        return r3;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Exception from label24 to label25 with label26;
        catch java.lang.Exception from label29 to label30 with label31;
        catch java.lang.Exception from label34 to label35 with label36;
    }
    private static java.lang.Integer findDuplicate(int[])
    {
        int[] $r0;
        int i0, $i1, $i2;
        java.util.LinkedHashSet r1;
        java.lang.Integer $r2;
        boolean $z0;

        $r0 := @parameter0: int[];

        r1 = new java.util.LinkedHashSet;

        specialinvoke r1.<java.util.LinkedHashSet: void <init>()>();

        $i1 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        i0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        return $r2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return null;
    }
    private java.lang.String findParentFqcn(javax.lang.model.element.TypeElement, java.util.Set)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        java.util.Set r1;
        javax.lang.model.element.TypeElement r2;
        javax.lang.model.type.TypeMirror $r3;
        javax.lang.model.type.TypeKind $r4, $r5;
        javax.lang.model.type.DeclaredType r6;
        javax.lang.model.element.Element $r7;
        java.lang.String $r8;
        boolean $z0;
        java.lang.StringBuilder $r9;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        r2 := @parameter0: javax.lang.model.element.TypeElement;

        r1 := @parameter1: java.util.Set;

     label1:
        $r3 = interfaceinvoke r2.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror getSuperclass()>();

        $r4 = interfaceinvoke $r3.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r5 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind NONE>;

        if $r4 != $r5 goto label2;

        return null;

     label2:
        r6 = (javax.lang.model.type.DeclaredType) $r3;

        $r7 = interfaceinvoke r6.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();

        r2 = (javax.lang.model.element.TypeElement) $r7;

        $r8 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        $r8 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: java.lang.String getPackageName(javax.lang.model.element.TypeElement)>(r2);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = staticinvoke <butterknife.internal.ButterKnifeProcessor: java.lang.String getClassName(javax.lang.model.element.TypeElement,java.lang.String)>(r2, $r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
    private static java.lang.String getClassName(javax.lang.model.element.TypeElement, java.lang.String)
    {
        javax.lang.model.element.TypeElement $r0;
        java.lang.String $r1;
        int i0;
        javax.lang.model.element.Name $r2;

        $r0 := @parameter0: javax.lang.model.element.TypeElement;

        $r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i0 = i0 + 1;

        $r2 = interfaceinvoke $r0.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(i0);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(46, 36);

        return $r1;
    }
    private butterknife.internal.BindingClass getOrCreateTargetClass(java.util.Map, javax.lang.model.element.TypeElement)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        java.util.Map r1;
        javax.lang.model.element.TypeElement $r2;
        java.lang.Object $r3;
        butterknife.internal.BindingClass r4;
        javax.lang.model.element.Name $r5;
        java.lang.String $r6, $r7, $r9;
        java.lang.StringBuilder $r8;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: javax.lang.model.element.TypeElement;

        $r3 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (butterknife.internal.BindingClass) $r3;

        if r4 != null goto label1;

        $r5 = interfaceinvoke $r2.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: java.lang.String getPackageName(javax.lang.model.element.TypeElement)>($r2);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = staticinvoke <butterknife.internal.ButterKnifeProcessor: java.lang.String getClassName(javax.lang.model.element.TypeElement,java.lang.String)>($r2, $r7);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$$ViewBinder");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = new butterknife.internal.BindingClass;

        specialinvoke r4.<butterknife.internal.BindingClass: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r7, $r9, $r6);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r4);

     label1:
        return r4;
    }
    private java.lang.String getPackageName(javax.lang.model.element.TypeElement)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.element.TypeElement $r1;
        javax.lang.model.util.Elements $r2;
        javax.lang.model.element.PackageElement $r3;
        javax.lang.model.element.Name $r4;
        java.lang.String $r5;
        javax.lang.model.element.Element $r6;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.element.TypeElement;

        $r2 = r0.<butterknife.internal.ButterKnifeProcessor: javax.lang.model.util.Elements elementUtils>;

        $r6 = (javax.lang.model.element.Element) $r1;

        $r3 = interfaceinvoke $r2.<javax.lang.model.util.Elements: javax.lang.model.element.PackageElement getPackageOf(javax.lang.model.element.Element)>($r6);

        $r4 = interfaceinvoke $r3.<javax.lang.model.element.PackageElement: javax.lang.model.element.Name getQualifiedName()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        return $r5;
    }
    private static boolean hasAnnotationWithName(javax.lang.model.element.Element, java.lang.String)
    {
        javax.lang.model.element.Element $r0;
        java.lang.String $r1, $r8;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        javax.lang.model.element.AnnotationMirror r5;
        javax.lang.model.type.DeclaredType $r6;
        javax.lang.model.element.Name $r7;

        $r0 := @parameter0: javax.lang.model.element.Element;

        $r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke $r0.<javax.lang.model.element.Element: java.util.List getAnnotationMirrors()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (javax.lang.model.element.AnnotationMirror) $r4;

        $r6 = interfaceinvoke r5.<javax.lang.model.element.AnnotationMirror: javax.lang.model.type.DeclaredType getAnnotationType()>();

        $r0 = interfaceinvoke $r6.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();

        $r7 = interfaceinvoke $r0.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    private boolean isBindingInWrongPackage(java.lang.Class, javax.lang.model.element.Element)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        java.lang.Class r1;
        javax.lang.model.element.Element $r2, $r3;
        javax.lang.model.element.TypeElement r4;
        javax.lang.model.element.Name $r5;
        java.lang.String $r6, $r8;
        boolean $z0;
        java.lang.Object[] $r7;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: javax.lang.model.element.Element;

        $r3 = interfaceinvoke $r2.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        r4 = (javax.lang.model.element.TypeElement) $r3;

        $r5 = interfaceinvoke r4.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("android.");

        if $z0 == 0 goto label1;

        $r7 = newarray (java.lang.Object)[2];

        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7[0] = $r8;

        $r7[1] = $r6;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r2, "@%s-annotated class incorrectly in Android framework package. (%s)", $r7);

        return 1;

     label1:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("java.");

        if $z0 == 0 goto label2;

        $r7 = newarray (java.lang.Object)[2];

        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7[0] = $r8;

        $r7[1] = $r6;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r2, "@%s-annotated class incorrectly in Java framework package. (%s)", $r7);

        return 1;

     label2:
        return 0;
    }
    private boolean isInaccessibleViaGeneratedCode(java.lang.Class, java.lang.String, javax.lang.model.element.Element)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        java.lang.Class r1;
        java.lang.String $r2, $r9;
        javax.lang.model.element.Element $r3, $r4;
        boolean z0, $z1;
        javax.lang.model.element.TypeElement r5;
        java.util.Set $r6;
        javax.lang.model.element.Modifier $r7;
        java.lang.Object[] $r8;
        javax.lang.model.element.Name $r10;
        javax.lang.model.element.ElementKind $r11, $r12;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: javax.lang.model.element.Element;

        z0 = 0;

        $r4 = interfaceinvoke $r3.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        r5 = (javax.lang.model.element.TypeElement) $r4;

        $r6 = interfaceinvoke $r3.<javax.lang.model.element.Element: java.util.Set getModifiers()>();

        $r7 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PRIVATE>;

        $z1 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z1 != 0 goto label1;

        $r7 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier STATIC>;

        $z1 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

     label1:
        $r8 = newarray (java.lang.Object)[4];

        $r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8[0] = $r9;

        $r8[1] = $r2;

        $r10 = interfaceinvoke r5.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r8[2] = $r10;

        $r10 = interfaceinvoke $r3.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r8[3] = $r10;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r3, "@%s %s must not be private or static. (%s.%s)", $r8);

        z0 = 1;

     label2:
        $r11 = interfaceinvoke r5.<javax.lang.model.element.TypeElement: javax.lang.model.element.ElementKind getKind()>();

        $r12 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind CLASS>;

        if $r11 == $r12 goto label3;

        $r8 = newarray (java.lang.Object)[4];

        $r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8[0] = $r9;

        $r8[1] = $r2;

        $r10 = interfaceinvoke r5.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r8[2] = $r10;

        $r10 = interfaceinvoke $r3.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r8[3] = $r10;

        $r4 = (javax.lang.model.element.Element) r5;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r4, "@%s %s may only be contained in classes. (%s.%s)", $r8);

        z0 = 1;

     label3:
        $r6 = interfaceinvoke r5.<javax.lang.model.element.TypeElement: java.util.Set getModifiers()>();

        $r7 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PRIVATE>;

        $z1 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z1 == 0 goto label4;

        $r8 = newarray (java.lang.Object)[4];

        $r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8[0] = $r9;

        $r8[1] = $r2;

        $r10 = interfaceinvoke r5.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r8[2] = $r10;

        $r10 = interfaceinvoke $r3.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r8[3] = $r10;

        $r3 = (javax.lang.model.element.Element) r5;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r3, "@%s %s may not be contained in private classes. (%s.%s)", $r8);

        return 1;

     label4:
        return z0;
    }
    private boolean isInterface(javax.lang.model.type.TypeMirror)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.element.ElementKind $r1, $r5;
        javax.lang.model.type.TypeMirror r2;
        boolean $z0;
        javax.lang.model.type.DeclaredType r3;
        javax.lang.model.element.Element $r4;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        r2 := @parameter0: javax.lang.model.type.TypeMirror;

        $z0 = r2 instanceof javax.lang.model.type.DeclaredType;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r3 = (javax.lang.model.type.DeclaredType) r2;

        $r4 = interfaceinvoke r3.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();

        $r5 = interfaceinvoke $r4.<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>();

        $r1 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind INTERFACE>;

        if $r5 != $r1 goto label2;

        return 1;

     label2:
        return 0;
    }
    private static boolean isRequiredBinding(javax.lang.model.element.Element)
    {
        javax.lang.model.element.Element $r0;
        boolean $z0;

        $r0 := @parameter0: javax.lang.model.element.Element;

        $z0 = staticinvoke <butterknife.internal.ButterKnifeProcessor: boolean hasAnnotationWithName(javax.lang.model.element.Element,java.lang.String)>($r0, "Nullable");

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private boolean isSubtypeOfType(javax.lang.model.type.TypeMirror, java.lang.String)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.type.TypeMirror $r1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder r3;
        boolean $z0;
        javax.lang.model.type.TypeKind $r5, $r6;
        javax.lang.model.type.DeclaredType r7;
        java.util.List $r8;
        int $i0, $i1;
        javax.lang.model.element.Element $r9;
        javax.lang.model.element.TypeElement r10;
        java.util.Iterator $r11;
        java.lang.Object $r12;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.type.TypeMirror;

        $r2 := @parameter1: java.lang.String;

        $r4 = interfaceinvoke $r1.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $r5 = interfaceinvoke $r1.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r6 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind DECLARED>;

        if $r5 == $r6 goto label02;

        return 0;

     label02:
        r7 = (javax.lang.model.type.DeclaredType) $r1;

        $r8 = interfaceinvoke r7.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>();

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 <= 0 goto label06;

        r3 = new java.lang.StringBuilder;

        $r9 = interfaceinvoke r7.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();

        $r4 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);

        $i0 = 0;

     label03:
        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i0 >= $i1 goto label05;

        if $i0 <= 0 goto label04;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label04:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        $i0 = $i0 + 1;

        goto label03;

     label05:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label10;

     label06:
        $r9 = interfaceinvoke r7.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();

        $z0 = $r9 instanceof javax.lang.model.element.TypeElement;

        if $z0 != 0 goto label07;

        return 0;

     label07:
        r10 = (javax.lang.model.element.TypeElement) $r9;

        $r1 = interfaceinvoke r10.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror getSuperclass()>();

        $z0 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isSubtypeOfType(javax.lang.model.type.TypeMirror,java.lang.String)>($r1, $r2);

        if $z0 != 0 goto label10;

        $r8 = interfaceinvoke r10.<javax.lang.model.element.TypeElement: java.util.List getInterfaces()>();

        $r11 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (javax.lang.model.type.TypeMirror) $r12;

        $z0 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isSubtypeOfType(javax.lang.model.type.TypeMirror,java.lang.String)>($r1, $r2);

        if $z0 == 0 goto label08;

        return 1;

     label09:
        return 0;

     label10:
        return 1;
    }
    private void logParsingError(javax.lang.model.element.Element, java.lang.Class, java.lang.Exception)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.element.Element $r1;
        java.lang.Class r2;
        java.lang.Exception $r3;
        java.io.StringWriter r4;
        java.lang.String $r5;
        java.io.PrintWriter $r6;
        java.lang.Object[] $r7;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: java.lang.Exception;

        r4 = new java.io.StringWriter;

        specialinvoke r4.<java.io.StringWriter: void <init>()>();

        $r6 = new java.io.PrintWriter;

        specialinvoke $r6.<java.io.PrintWriter: void <init>(java.io.Writer)>(r4);

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>($r6);

        $r7 = newarray (java.lang.Object)[2];

        $r5 = virtualinvoke r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7[0] = $r5;

        $r7[1] = r4;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "Unable to parse @%s binding.\n\n%s", $r7);

        return;
    }
    private void parseBind(javax.lang.model.element.Element, java.util.Map, java.util.Set)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.element.Element $r1, $r11;
        java.util.Map r2;
        java.util.Set r3;
        java.lang.Object[] $r4;
        boolean $z0;
        javax.lang.model.type.TypeMirror $r5;
        javax.lang.model.type.TypeKind $r6, $r7;
        java.lang.String $r8, $r9;
        java.lang.Class $r10;
        javax.lang.model.element.TypeElement $r12;
        javax.lang.model.element.Name $r13;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Set;

        $z0 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isInaccessibleViaGeneratedCode(java.lang.Class,java.lang.String,javax.lang.model.element.Element)>(class "Lbutterknife/Bind;", "fields", $r1);

        if $z0 != 0 goto label5;

        $z0 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isBindingInWrongPackage(java.lang.Class,javax.lang.model.element.Element)>(class "Lbutterknife/Bind;", $r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>();

        $r6 = interfaceinvoke $r5.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r7 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind ARRAY>;

        if $r6 != $r7 goto label2;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void parseBindMany(javax.lang.model.element.Element,java.util.Map,java.util.Set)>($r1, r2, r3);

        return;

     label2:
        $r8 = <butterknife.internal.ButterKnifeProcessor: java.lang.String LIST_TYPE>;

        $r9 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: java.lang.String doubleErasure(javax.lang.model.type.TypeMirror)>($r5);

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label3;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void parseBindMany(javax.lang.model.element.Element,java.util.Map,java.util.Set)>($r1, r2, r3);

        return;

     label3:
        $z0 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isSubtypeOfType(javax.lang.model.type.TypeMirror,java.lang.String)>($r5, "java.lang.Iterable<?>");

        if $z0 == 0 goto label4;

        $r4 = newarray (java.lang.Object)[3];

        $r10 = class "Lbutterknife/Bind;";

        $r8 = virtualinvoke $r10.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4[0] = $r8;

        $r11 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        $r12 = (javax.lang.model.element.TypeElement) $r11;

        $r13 = interfaceinvoke $r12.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r4[1] = $r13;

        $r13 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r4[2] = $r13;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "@%s must be a List or array. (%s.%s)", $r4);

        return;

     label4:
        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void parseBindOne(javax.lang.model.element.Element,java.util.Map,java.util.Set)>($r1, r2, r3);

     label5:
        return;
    }
    private void parseBindMany(javax.lang.model.element.Element, java.util.Map, java.util.Set)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.element.Element $r1, $r5;
        java.util.Map r2;
        java.util.Set r3;
        butterknife.internal.FieldCollectionViewBinding r4;
        boolean z0, $z1;
        javax.lang.model.element.TypeElement r6;
        javax.lang.model.type.TypeMirror $r7, r9;
        java.lang.String $r8, $r18;
        javax.lang.model.type.TypeKind $r10, $r11;
        javax.lang.model.type.ArrayType r12;
        butterknife.internal.FieldCollectionViewBinding$Kind r13;
        javax.lang.model.type.TypeVariable r14;
        java.lang.Object[] $r15;
        java.lang.Class $r16;
        javax.lang.model.element.Name $r17;
        javax.lang.model.type.DeclaredType r19;
        java.util.List $r20;
        int $i0;
        java.lang.Object $r21;
        java.lang.AssertionError $r22;
        java.lang.'annotation'.Annotation $r23;
        butterknife.Bind $r24;
        int[] $r25;
        java.lang.Integer $r26;
        butterknife.internal.BindingClass $r27;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Set;

        z0 = 0;

        $r5 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        r6 = (javax.lang.model.element.TypeElement) $r5;

        $r7 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>();

        $r8 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: java.lang.String doubleErasure(javax.lang.model.type.TypeMirror)>($r7);

        r9 = null;

        $r10 = interfaceinvoke $r7.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r11 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind ARRAY>;

        if $r10 != $r11 goto label04;

        r12 = (javax.lang.model.type.ArrayType) $r7;

        r9 = interfaceinvoke r12.<javax.lang.model.type.ArrayType: javax.lang.model.type.TypeMirror getComponentType()>();

        r13 = <butterknife.internal.FieldCollectionViewBinding$Kind: butterknife.internal.FieldCollectionViewBinding$Kind ARRAY>;

     label01:
        if r9 == null goto label02;

        $r10 = interfaceinvoke r9.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r11 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind TYPEVAR>;

        if $r10 != $r11 goto label02;

        r14 = (javax.lang.model.type.TypeVariable) r9;

        r9 = interfaceinvoke r14.<javax.lang.model.type.TypeVariable: javax.lang.model.type.TypeMirror getUpperBound()>();

     label02:
        if r9 == null goto label03;

        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isSubtypeOfType(javax.lang.model.type.TypeMirror,java.lang.String)>(r9, "android.view.View");

        if $z1 != 0 goto label03;

        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isInterface(javax.lang.model.type.TypeMirror)>(r9);

        if $z1 != 0 goto label03;

        $r15 = newarray (java.lang.Object)[3];

        $r16 = class "Lbutterknife/Bind;";

        $r8 = virtualinvoke $r16.<java.lang.Class: java.lang.String getSimpleName()>();

        $r15[0] = $r8;

        $r17 = interfaceinvoke r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r15[1] = $r17;

        $r17 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r15[2] = $r17;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "@%s List or array type must extend from View or be an interface. (%s.%s)", $r15);

        z0 = 1;

     label03:
        if z0 == 0 goto label08;

        return;

     label04:
        $r18 = <butterknife.internal.ButterKnifeProcessor: java.lang.String LIST_TYPE>;

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label07;

        r19 = (javax.lang.model.type.DeclaredType) $r7;

        $r20 = interfaceinvoke r19.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>();

        $i0 = interfaceinvoke $r20.<java.util.List: int size()>();

        if $i0 == 1 goto label06;

        $r15 = newarray (java.lang.Object)[3];

        $r16 = class "Lbutterknife/Bind;";

        $r8 = virtualinvoke $r16.<java.lang.Class: java.lang.String getSimpleName()>();

        $r15[0] = $r8;

        $r17 = interfaceinvoke r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r15[1] = $r17;

        $r17 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r15[2] = $r17;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "@%s List must have a generic component. (%s.%s)", $r15);

        z0 = 1;

     label05:
        r13 = <butterknife.internal.FieldCollectionViewBinding$Kind: butterknife.internal.FieldCollectionViewBinding$Kind LIST>;

        goto label01;

     label06:
        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(0);

        r9 = (javax.lang.model.type.TypeMirror) $r21;

        goto label05;

     label07:
        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label08:
        $r17 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r8 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        $r23 = interfaceinvoke $r1.<javax.lang.model.element.Element: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lbutterknife/Bind;");

        $r24 = (butterknife.Bind) $r23;

        $r25 = interfaceinvoke $r24.<butterknife.Bind: int[] value()>();

        $i0 = lengthof $r25;

        if $i0 != 0 goto label09;

        $r15 = newarray (java.lang.Object)[3];

        $r16 = class "Lbutterknife/Bind;";

        $r8 = virtualinvoke $r16.<java.lang.Class: java.lang.String getSimpleName()>();

        $r15[0] = $r8;

        $r17 = interfaceinvoke r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r15[1] = $r17;

        $r17 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r15[2] = $r17;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "@%s must specify at least one ID. (%s.%s)", $r15);

        return;

     label09:
        $r26 = staticinvoke <butterknife.internal.ButterKnifeProcessor: java.lang.Integer findDuplicate(int[])>($r25);

        if $r26 == null goto label10;

        $r15 = newarray (java.lang.Object)[4];

        $r16 = class "Lbutterknife/Bind;";

        $r18 = virtualinvoke $r16.<java.lang.Class: java.lang.String getSimpleName()>();

        $r15[0] = $r18;

        $r15[1] = $r26;

        $r17 = interfaceinvoke r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r15[2] = $r17;

        $r17 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r15[3] = $r17;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "@%s annotation contains duplicate ID %d. (%s.%s)", $r15);

     label10:
        z0 = <butterknife.internal.ButterKnifeProcessor: boolean $assertionsDisabled>;

        if z0 != 0 goto label11;

        if r9 != null goto label11;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label11:
        $r18 = interfaceinvoke r9.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        z0 = staticinvoke <butterknife.internal.ButterKnifeProcessor: boolean isRequiredBinding(javax.lang.model.element.Element)>($r1);

        $r27 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: butterknife.internal.BindingClass getOrCreateTargetClass(java.util.Map,javax.lang.model.element.TypeElement)>(r2, r6);

        r4 = new butterknife.internal.FieldCollectionViewBinding;

        specialinvoke r4.<butterknife.internal.FieldCollectionViewBinding: void <init>(java.lang.String,java.lang.String,butterknife.internal.FieldCollectionViewBinding$Kind,boolean)>($r8, $r18, r13, z0);

        virtualinvoke $r27.<butterknife.internal.BindingClass: void addFieldCollection(int[],butterknife.internal.FieldCollectionViewBinding)>($r25, r4);

        $r8 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r8);

        return;
    }
    private void parseBindOne(javax.lang.model.element.Element, java.util.Map, java.util.Set)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.element.Element $r1, $r5;
        java.util.Map r2;
        java.util.Set r3;
        butterknife.internal.FieldViewBinding r4;
        int i0;
        boolean z0, $z1;
        javax.lang.model.element.TypeElement r6;
        javax.lang.model.type.TypeMirror $r7, r8;
        javax.lang.model.type.TypeKind $r9, $r10;
        javax.lang.model.type.TypeVariable r11;
        java.lang.Object[] $r12;
        java.lang.Class $r13;
        java.lang.String $r14, $r25;
        javax.lang.model.element.Name $r15;
        java.lang.'annotation'.Annotation $r16;
        butterknife.Bind $r17;
        int[] $r18;
        java.lang.Object $r19;
        butterknife.internal.BindingClass r20;
        butterknife.internal.ViewBindings $r21;
        java.util.Collection $r22;
        java.util.Iterator $r23;
        java.lang.Integer $r24;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Set;

        z0 = 0;

        $r5 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        r6 = (javax.lang.model.element.TypeElement) $r5;

        $r7 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>();

        r8 = $r7;

        $r9 = interfaceinvoke $r7.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r10 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind TYPEVAR>;

        if $r9 != $r10 goto label1;

        r11 = (javax.lang.model.type.TypeVariable) $r7;

        r8 = interfaceinvoke r11.<javax.lang.model.type.TypeVariable: javax.lang.model.type.TypeMirror getUpperBound()>();

     label1:
        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isSubtypeOfType(javax.lang.model.type.TypeMirror,java.lang.String)>(r8, "android.view.View");

        if $z1 != 0 goto label2;

        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isInterface(javax.lang.model.type.TypeMirror)>(r8);

        if $z1 != 0 goto label2;

        $r12 = newarray (java.lang.Object)[3];

        $r13 = class "Lbutterknife/Bind;";

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = $r14;

        $r15 = interfaceinvoke r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r12[1] = $r15;

        $r15 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12[2] = $r15;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "@%s fields must extend from View or be an interface. (%s.%s)", $r12);

        z0 = 1;

     label2:
        $r16 = interfaceinvoke $r1.<javax.lang.model.element.Element: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lbutterknife/Bind;");

        $r17 = (butterknife.Bind) $r16;

        $r18 = interfaceinvoke $r17.<butterknife.Bind: int[] value()>();

        i0 = lengthof $r18;

        if i0 == 1 goto label3;

        $r12 = newarray (java.lang.Object)[4];

        $r13 = class "Lbutterknife/Bind;";

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = $r14;

        $r14 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r18);

        $r12[1] = $r14;

        $r15 = interfaceinvoke r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r12[2] = $r15;

        $r15 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12[3] = $r15;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "@%s for a view must only specify one ID. Found: %s. (%s.%s)", $r12);

        z0 = 1;

     label3:
        if z0 == 0 goto label4;

        return;

     label4:
        i0 = $r18[0];

        $r19 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r20 = (butterknife.internal.BindingClass) $r19;

        if r20 == null goto label5;

        $r21 = virtualinvoke r20.<butterknife.internal.BindingClass: butterknife.internal.ViewBindings getViewBinding(int)>(i0);

        if $r21 == null goto label6;

        $r22 = virtualinvoke $r21.<butterknife.internal.ViewBindings: java.util.Collection getFieldBindings()>();

        $r23 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();

        z0 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label6;

        $r19 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r4 = (butterknife.internal.FieldViewBinding) $r19;

        $r12 = newarray (java.lang.Object)[5];

        $r13 = class "Lbutterknife/Bind;";

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = $r14;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r12[1] = $r24;

        $r14 = virtualinvoke r4.<butterknife.internal.FieldViewBinding: java.lang.String getName()>();

        $r12[2] = $r14;

        $r15 = interfaceinvoke r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r12[3] = $r15;

        $r15 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12[4] = $r15;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "Attempt to use @%s for an already bound ID %d on \'%s\'. (%s.%s)", $r12);

        return;

     label5:
        r20 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: butterknife.internal.BindingClass getOrCreateTargetClass(java.util.Map,javax.lang.model.element.TypeElement)>(r2, r6);

     label6:
        $r15 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r14 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        $r25 = interfaceinvoke r8.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        z0 = staticinvoke <butterknife.internal.ButterKnifeProcessor: boolean isRequiredBinding(javax.lang.model.element.Element)>($r1);

        r4 = new butterknife.internal.FieldViewBinding;

        specialinvoke r4.<butterknife.internal.FieldViewBinding: void <init>(java.lang.String,java.lang.String,boolean)>($r14, $r25, z0);

        virtualinvoke r20.<butterknife.internal.BindingClass: void addField(int,butterknife.internal.FieldViewBinding)>(i0, r4);

        $r14 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r14);

        return;
    }
    private void parseListenerAnnotation(java.lang.Class, javax.lang.model.element.Element, java.util.Map, java.util.Set) throws java.lang.Exception
    {
        butterknife.internal.ButterKnifeProcessor r0;
        java.lang.Class r1, $r19;
        javax.lang.model.element.Element $r2, $r14;
        java.util.Map r3;
        java.util.Set r4;
        java.lang.StringBuilder r6, $r40;
        butterknife.internal.Parameter r8, $r44;
        java.lang.String r9, $r24, $r28;
        boolean $z0, $z1, $z2;
        javax.lang.model.element.ElementKind $r10, $r11;
        java.lang.Object[] $r12;
        javax.lang.model.element.ExecutableElement r13;
        javax.lang.model.element.TypeElement r15;
        java.lang.'annotation'.Annotation $r16, $r25;
        java.lang.Class[] $r17;
        java.lang.reflect.Method $r18;
        java.lang.Object $r20;
        int[] $r21;
        javax.lang.model.element.Name $r22;
        java.lang.Integer $r23;
        butterknife.internal.ListenerClass r26;
        int $i0, $i1, i2, $i3;
        javax.lang.model.type.TypeMirror $r27, r33;
        butterknife.internal.ListenerMethod[] $r29;
        butterknife.internal.ListenerMethod r30;
        java.util.List $r31;
        java.lang.String[] $r32;
        javax.lang.model.type.TypeVariable r34;
        java.lang.Enum r35;
        java.lang.reflect.Field $r36;
        butterknife.internal.Parameter[] r37, $r38;
        javax.lang.model.element.VariableElement r39;
        butterknife.internal.BindingClass $r41;
        java.lang.IllegalStateException $r42;
        java.util.BitSet $r43;
        butterknife.internal.MethodViewBinding $r45;
        java.lang.CharSequence $r46;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: javax.lang.model.element.Element;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: java.util.Set;

        $z0 = $r2 instanceof javax.lang.model.element.ExecutableElement;

        if $z0 == 0 goto label01;

        $r10 = interfaceinvoke $r2.<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>();

        $r11 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind METHOD>;

        if $r10 == $r11 goto label02;

     label01:
        $r42 = new java.lang.IllegalStateException;

        $r12 = newarray (java.lang.Object)[1];

        r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = r9;

        r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("@%s annotation must be on a method.", $r12);

        specialinvoke $r42.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r9);

        throw $r42;

     label02:
        r13 = (javax.lang.model.element.ExecutableElement) $r2;

        $r14 = interfaceinvoke $r2.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        r15 = (javax.lang.model.element.TypeElement) $r14;

        $r16 = interfaceinvoke $r2.<javax.lang.model.element.Element: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r1);

        $r17 = newarray (java.lang.Class)[0];

        $r18 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("value", $r17);

        $r19 = virtualinvoke $r18.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        if $r19 == class "[I" goto label03;

        $r42 = new java.lang.IllegalStateException;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r1;

        r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("@%s annotation value() type not int[].", $r12);

        specialinvoke $r42.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r9);

        throw $r42;

     label03:
        $r12 = newarray (java.lang.Object)[0];

        $r20 = virtualinvoke $r18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r16, $r12);

        $r21 = (int[]) $r20;

        $r22 = interfaceinvoke r13.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>();

        r9 = virtualinvoke $r22.<java.lang.Object: java.lang.String toString()>();

        $z0 = staticinvoke <butterknife.internal.ButterKnifeProcessor: boolean isRequiredBinding(javax.lang.model.element.Element)>($r2);

        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isInaccessibleViaGeneratedCode(java.lang.Class,java.lang.String,javax.lang.model.element.Element)>(r1, "methods", $r2);

        $z2 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isBindingInWrongPackage(java.lang.Class,javax.lang.model.element.Element)>(r1, $r2);

        $z1 = $z1 | $z2;

        $r23 = staticinvoke <butterknife.internal.ButterKnifeProcessor: java.lang.Integer findDuplicate(int[])>($r21);

        if $r23 == null goto label04;

        $r12 = newarray (java.lang.Object)[4];

        $r24 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = $r24;

        $r12[1] = $r23;

        $r22 = interfaceinvoke r15.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r12[2] = $r22;

        $r22 = interfaceinvoke $r2.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12[3] = $r22;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r2, "@%s annotation for method contains duplicate ID %d. (%s.%s)", $r12);

        $z1 = 1;

     label04:
        $r25 = virtualinvoke r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lbutterknife/internal/ListenerClass;");

        r26 = (butterknife.internal.ListenerClass) $r25;

        if r26 != null goto label05;

        $r42 = new java.lang.IllegalStateException;

        $r12 = newarray (java.lang.Object)[2];

        $r19 = class "Lbutterknife/internal/ListenerClass;";

        r9 = virtualinvoke $r19.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = r9;

        r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[1] = r9;

        r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No @%s defined on @%s.", $r12);

        specialinvoke $r42.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r9);

        throw $r42;

     label05:
        $i0 = lengthof $r21;

        $i1 = 0;

     label06:
        if $i1 >= $i0 goto label10;

        i2 = $r21[$i1];

        if i2 != -1 goto label08;

        $i3 = lengthof $r21;

        if $i3 != 1 goto label09;

        if $z0 != 0 goto label07;

        $r12 = newarray (java.lang.Object)[2];

        $r22 = interfaceinvoke r15.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r12[0] = $r22;

        $r22 = interfaceinvoke $r2.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12[1] = $r22;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r2, "ID-free binding must not be annotated with @Nullable. (%s.%s)", $r12);

        $z1 = 1;

     label07:
        $r24 = interfaceinvoke r26.<butterknife.internal.ListenerClass: java.lang.String targetType()>();

        $r27 = interfaceinvoke r15.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror asType()>();

        $z2 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isSubtypeOfType(javax.lang.model.type.TypeMirror,java.lang.String)>($r27, $r24);

        if $z2 != 0 goto label08;

        $r27 = interfaceinvoke r15.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror asType()>();

        $z2 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isInterface(javax.lang.model.type.TypeMirror)>($r27);

        if $z2 != 0 goto label08;

        $r12 = newarray (java.lang.Object)[4];

        $r28 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = $r28;

        $r12[1] = $r24;

        $r22 = interfaceinvoke r15.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r12[2] = $r22;

        $r22 = interfaceinvoke $r2.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12[3] = $r22;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r2, "@%s annotation without an ID may only be used with an object of type \"%s\" or an interface. (%s.%s)", $r12);

        $z1 = 1;

     label08:
        $i1 = $i1 + 1;

        goto label06;

     label09:
        $r12 = newarray (java.lang.Object)[4];

        $r24 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = $r24;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r12[1] = $r23;

        $r22 = interfaceinvoke r15.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r12[2] = $r22;

        $r22 = interfaceinvoke $r2.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12[3] = $r22;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r2, "@%s annotation contains invalid ID %d. (%s.%s)", $r12);

        $z1 = 1;

        goto label08;

     label10:
        $r29 = interfaceinvoke r26.<butterknife.internal.ListenerClass: butterknife.internal.ListenerMethod[] method()>();

        $i0 = lengthof $r29;

        if $i0 <= 1 goto label11;

        $r42 = new java.lang.IllegalStateException;

        $r12 = newarray (java.lang.Object)[1];

        r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = r9;

        r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Multiple listener methods specified on @%s.", $r12);

        specialinvoke $r42.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r9);

        throw $r42;

     label11:
        $i0 = lengthof $r29;

        if $i0 != 1 goto label17;

        $r19 = interfaceinvoke r26.<butterknife.internal.ListenerClass: java.lang.Class callbacks()>();

        if $r19 == class "Lbutterknife/internal/ListenerClass$NONE;" goto label12;

        $r42 = new java.lang.IllegalStateException;

        $r12 = newarray (java.lang.Object)[1];

        r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = r9;

        r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Both method() and callback() defined on @%s.", $r12);

        specialinvoke $r42.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r9);

        throw $r42;

     label12:
        r30 = $r29[0];

     label13:
        $r31 = interfaceinvoke r13.<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>();

        $i0 = interfaceinvoke $r31.<java.util.List: int size()>();

        $r32 = interfaceinvoke r30.<butterknife.internal.ListenerMethod: java.lang.String[] parameters()>();

        $i1 = lengthof $r32;

        if $i0 <= $i1 goto label14;

        $r12 = newarray (java.lang.Object)[4];

        $r24 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = $r24;

        $r32 = interfaceinvoke r30.<butterknife.internal.ListenerMethod: java.lang.String[] parameters()>();

        $i0 = lengthof $r32;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r12[1] = $r23;

        $r22 = interfaceinvoke r15.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r12[2] = $r22;

        $r22 = interfaceinvoke $r2.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12[3] = $r22;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r2, "@%s methods can have at most %s parameter(s). (%s.%s)", $r12);

        $z1 = 1;

     label14:
        $r27 = interfaceinvoke r13.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>();

        r33 = $r27;

        $z2 = $r27 instanceof javax.lang.model.type.TypeVariable;

        if $z2 == 0 goto label15;

        r34 = (javax.lang.model.type.TypeVariable) $r27;

        r33 = interfaceinvoke r34.<javax.lang.model.type.TypeVariable: javax.lang.model.type.TypeMirror getUpperBound()>();

     label15:
        $r24 = interfaceinvoke r33.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $r28 = interfaceinvoke r30.<butterknife.internal.ListenerMethod: java.lang.String returnType()>();

        $z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z2 != 0 goto label16;

        $r12 = newarray (java.lang.Object)[4];

        $r24 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = $r24;

        $r24 = interfaceinvoke r30.<butterknife.internal.ListenerMethod: java.lang.String returnType()>();

        $r12[1] = $r24;

        $r22 = interfaceinvoke r15.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r12[2] = $r22;

        $r22 = interfaceinvoke $r2.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12[3] = $r22;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r2, "@%s methods must have a \'%s\' return type. (%s.%s)", $r12);

        $z1 = 1;

     label16:
        if $z1 == 0 goto label18;

        return;

     label17:
        $r17 = newarray (java.lang.Class)[0];

        $r18 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("callback", $r17);

        $r12 = newarray (java.lang.Object)[0];

        $r20 = virtualinvoke $r18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r16, $r12);

        r35 = (java.lang.Enum) $r20;

        $r19 = virtualinvoke r35.<java.lang.Enum: java.lang.Class getDeclaringClass()>();

        $r24 = virtualinvoke r35.<java.lang.Enum: java.lang.String name()>();

        $r36 = virtualinvoke $r19.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r24);

        $r16 = virtualinvoke $r36.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lbutterknife/internal/ListenerMethod;");

        r30 = (butterknife.internal.ListenerMethod) $r16;

        if r30 != null goto label13;

        $r42 = new java.lang.IllegalStateException;

        $r12 = newarray (java.lang.Object)[4];

        $r19 = class "Lbutterknife/internal/ListenerMethod;";

        r9 = virtualinvoke $r19.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = r9;

        r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[1] = r9;

        r1 = virtualinvoke r35.<java.lang.Enum: java.lang.Class getDeclaringClass()>();

        r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[2] = r9;

        r9 = virtualinvoke r35.<java.lang.Enum: java.lang.String name()>();

        $r12[3] = r9;

        r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No @%s defined on @%s\'s %s.%s.", $r12);

        specialinvoke $r42.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r9);

        throw $r42;

     label18:
        r37 = <butterknife.internal.Parameter: butterknife.internal.Parameter[] NONE>;

        $z1 = interfaceinvoke $r31.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label33;

        $i0 = interfaceinvoke $r31.<java.util.List: int size()>();

        $r38 = newarray (butterknife.internal.Parameter)[$i0];

        r37 = $r38;

        $r43 = new java.util.BitSet;

        $i0 = interfaceinvoke $r31.<java.util.List: int size()>();

        specialinvoke $r43.<java.util.BitSet: void <init>(int)>($i0);

        $r32 = interfaceinvoke r30.<butterknife.internal.ListenerMethod: java.lang.String[] parameters()>();

        $i0 = 0;

     label19:
        $i1 = interfaceinvoke $r31.<java.util.List: int size()>();

        if $i0 >= $i1 goto label33;

        $r20 = interfaceinvoke $r31.<java.util.List: java.lang.Object get(int)>($i0);

        r39 = (javax.lang.model.element.VariableElement) $r20;

        $r27 = interfaceinvoke r39.<javax.lang.model.element.VariableElement: javax.lang.model.type.TypeMirror asType()>();

        r33 = $r27;

        $z1 = $r27 instanceof javax.lang.model.type.TypeVariable;

        if $z1 == 0 goto label20;

        r34 = (javax.lang.model.type.TypeVariable) $r27;

        r33 = interfaceinvoke r34.<javax.lang.model.type.TypeVariable: javax.lang.model.type.TypeMirror getUpperBound()>();

     label20:
        $i1 = 0;

     label21:
        i2 = lengthof $r32;

        if $i1 >= i2 goto label25;

        $z1 = virtualinvoke $r43.<java.util.BitSet: boolean get(int)>($i1);

        if $z1 == 0 goto label23;

     label22:
        $i1 = $i1 + 1;

        goto label21;

     label23:
        $r24 = $r32[$i1];

        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isSubtypeOfType(javax.lang.model.type.TypeMirror,java.lang.String)>(r33, $r24);

        if $z1 != 0 goto label24;

        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isInterface(javax.lang.model.type.TypeMirror)>(r33);

        if $z1 == 0 goto label22;

     label24:
        $r44 = new butterknife.internal.Parameter;

        $r24 = interfaceinvoke r33.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        specialinvoke $r44.<butterknife.internal.Parameter: void <init>(int,java.lang.String)>($i1, $r24);

        $r38[$i0] = $r44;

        virtualinvoke $r43.<java.util.BitSet: void set(int)>($i1);

     label25:
        r8 = $r38[$i0];

        if r8 != null goto label32;

        $r40 = new java.lang.StringBuilder;

        r6 = $r40;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to match @");

        r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r40 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r40 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" method arguments. (");

        $r22 = interfaceinvoke r15.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r46 = (java.lang.CharSequence) $r22;

        $r40 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r46);

        $r40 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r22 = interfaceinvoke $r2.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r46 = (java.lang.CharSequence) $r22;

        $r40 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r46);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $i0 = 0;

     label26:
        $i1 = lengthof $r38;

        if $i0 >= $i1 goto label29;

        r8 = $r38[$i0];

        $r40 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n  Parameter #");

        $i1 = $i0 + 1;

        $r40 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r40 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r20 = interfaceinvoke $r31.<java.util.List: java.lang.Object get(int)>($i0);

        r39 = (javax.lang.model.element.VariableElement) $r20;

        $r27 = interfaceinvoke r39.<javax.lang.model.element.VariableElement: javax.lang.model.type.TypeMirror asType()>();

        r9 = interfaceinvoke $r27.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $r40 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    ");

        if r8 != null goto label28;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("did not match any listener parameters");

     label27:
        $i0 = $i0 + 1;

        goto label26;

     label28:
        $r40 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("matched listener parameter #");

        $i1 = virtualinvoke r8.<butterknife.internal.Parameter: int getListenerPosition()>();

        $i1 = $i1 + 1;

        $r40 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r40 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        r9 = virtualinvoke r8.<butterknife.internal.Parameter: java.lang.String getType()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        goto label27;

     label29:
        $r40 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\nMethods may have up to ");

        $r32 = interfaceinvoke r30.<butterknife.internal.ListenerMethod: java.lang.String[] parameters()>();

        $i0 = lengthof $r32;

        $r40 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parameter(s):\n");

        $r32 = interfaceinvoke r30.<butterknife.internal.ListenerMethod: java.lang.String[] parameters()>();

        $i0 = lengthof $r32;

        $i1 = 0;

     label30:
        if $i1 >= $i0 goto label31;

        r9 = $r32[$i1];

        $r40 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  ");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $i1 = $i1 + 1;

        goto label30;

     label31:
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\nThese may be listed in any order but will be searched for from top to bottom.");

        r9 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        $r2 = (javax.lang.model.element.Element) r13;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r2, r9, $r12);

        return;

     label32:
        $i0 = $i0 + 1;

        goto label19;

     label33:
        $r45 = new butterknife.internal.MethodViewBinding;

        $r31 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r37);

        specialinvoke $r45.<butterknife.internal.MethodViewBinding: void <init>(java.lang.String,java.util.List,boolean)>(r9, $r31, $z0);

        $r41 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: butterknife.internal.BindingClass getOrCreateTargetClass(java.util.Map,javax.lang.model.element.TypeElement)>(r3, r15);

        $i0 = lengthof $r21;

        $i1 = 0;

     label34:
        if $i1 >= $i0 goto label36;

        i2 = $r21[$i1];

        $z0 = virtualinvoke $r41.<butterknife.internal.BindingClass: boolean addMethod(int,butterknife.internal.ListenerClass,butterknife.internal.ListenerMethod,butterknife.internal.MethodViewBinding)>(i2, r26, r30, $r45);

        if $z0 != 0 goto label35;

        $r12 = newarray (java.lang.Object)[3];

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r12[0] = $r23;

        $r22 = interfaceinvoke r15.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r12[1] = $r22;

        $r22 = interfaceinvoke $r2.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12[2] = $r22;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r2, "Multiple listener methods with return value specified for ID %d. (%s.%s)", $r12);

        return;

     label35:
        $i1 = $i1 + 1;

        goto label34;

     label36:
        r9 = virtualinvoke r15.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r9);

        return;
    }
    private void parseResourceBool(javax.lang.model.element.Element, java.util.Map, java.util.Set)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.element.Element $r1, $r5;
        java.util.Map r2;
        java.util.Set r3;
        butterknife.internal.FieldResourceBinding r4;
        boolean z0, $z1;
        javax.lang.model.element.TypeElement r6;
        javax.lang.model.type.TypeMirror $r7;
        javax.lang.model.type.TypeKind $r8, $r9;
        java.lang.Object[] $r10;
        java.lang.Class $r11;
        java.lang.String $r12;
        javax.lang.model.element.Name $r13;
        java.lang.'annotation'.Annotation $r14;
        butterknife.BindBool $r15;
        int $i0;
        butterknife.internal.BindingClass $r16;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Set;

        z0 = 0;

        $r5 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        r6 = (javax.lang.model.element.TypeElement) $r5;

        $r7 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>();

        $r8 = interfaceinvoke $r7.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r9 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind BOOLEAN>;

        if $r8 == $r9 goto label1;

        $r10 = newarray (java.lang.Object)[3];

        $r11 = class "Lbutterknife/BindBool;";

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getSimpleName()>();

        $r10[0] = $r12;

        $r13 = interfaceinvoke r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r10[1] = $r13;

        $r13 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r10[2] = $r13;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "@%s field type must be \'boolean\'. (%s.%s)", $r10);

        z0 = 1;

     label1:
        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isInaccessibleViaGeneratedCode(java.lang.Class,java.lang.String,javax.lang.model.element.Element)>(class "Lbutterknife/BindBool;", "fields", $r1);

        z0 = z0 | $z1;

        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isBindingInWrongPackage(java.lang.Class,javax.lang.model.element.Element)>(class "Lbutterknife/BindBool;", $r1);

        z0 = z0 | $z1;

        if z0 == 0 goto label2;

        return;

     label2:
        $r13 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        $r14 = interfaceinvoke $r1.<javax.lang.model.element.Element: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lbutterknife/BindBool;");

        $r15 = (butterknife.BindBool) $r14;

        $i0 = interfaceinvoke $r15.<butterknife.BindBool: int value()>();

        $r16 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: butterknife.internal.BindingClass getOrCreateTargetClass(java.util.Map,javax.lang.model.element.TypeElement)>(r2, r6);

        r4 = new butterknife.internal.FieldResourceBinding;

        specialinvoke r4.<butterknife.internal.FieldResourceBinding: void <init>(int,java.lang.String,java.lang.String)>($i0, $r12, "getBoolean");

        virtualinvoke $r16.<butterknife.internal.BindingClass: void addResource(butterknife.internal.FieldResourceBinding)>(r4);

        $r12 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r12);

        return;
    }
    private void parseResourceColor(javax.lang.model.element.Element, java.util.Map, java.util.Set)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.element.Element $r1, $r5;
        java.util.Map r2;
        java.util.Set r3;
        butterknife.internal.FieldResourceBinding r4;
        boolean z0, z1, $z2;
        javax.lang.model.element.TypeElement r6;
        javax.lang.model.type.TypeMirror $r7;
        java.lang.String $r8, $r9;
        javax.lang.model.type.TypeKind $r10, $r11;
        java.lang.Object[] $r12;
        java.lang.Class $r13;
        javax.lang.model.element.Name $r14;
        java.lang.'annotation'.Annotation $r15;
        butterknife.BindColor $r16;
        int $i0;
        butterknife.internal.BindingClass $r17;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Set;

        z0 = 0;

        $r5 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        r6 = (javax.lang.model.element.TypeElement) $r5;

        z1 = 0;

        $r7 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>();

        $r8 = "android.content.res.ColorStateList";

        $r9 = interfaceinvoke $r7.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label2;

        z1 = 1;

     label1:
        $z2 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isInaccessibleViaGeneratedCode(java.lang.Class,java.lang.String,javax.lang.model.element.Element)>(class "Lbutterknife/BindColor;", "fields", $r1);

        z0 = z0 | $z2;

        $z2 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isBindingInWrongPackage(java.lang.Class,javax.lang.model.element.Element)>(class "Lbutterknife/BindColor;", $r1);

        z0 = z0 | $z2;

        if z0 == 0 goto label3;

        return;

     label2:
        $r10 = interfaceinvoke $r7.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r11 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind INT>;

        if $r10 == $r11 goto label1;

        $r12 = newarray (java.lang.Object)[3];

        $r13 = class "Lbutterknife/BindColor;";

        $r8 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12[0] = $r8;

        $r14 = interfaceinvoke r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r12[1] = $r14;

        $r14 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12[2] = $r14;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "@%s field type must be \'int\' or \'ColorStateList\'. (%s.%s)", $r12);

        z0 = 1;

        goto label1;

     label3:
        $r14 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r8 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        $r15 = interfaceinvoke $r1.<javax.lang.model.element.Element: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lbutterknife/BindColor;");

        $r16 = (butterknife.BindColor) $r15;

        $i0 = interfaceinvoke $r16.<butterknife.BindColor: int value()>();

        $r17 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: butterknife.internal.BindingClass getOrCreateTargetClass(java.util.Map,javax.lang.model.element.TypeElement)>(r2, r6);

        r4 = new butterknife.internal.FieldResourceBinding;

        if z1 == 0 goto label5;

        $r9 = "getColorStateList";

     label4:
        specialinvoke r4.<butterknife.internal.FieldResourceBinding: void <init>(int,java.lang.String,java.lang.String)>($i0, $r8, $r9);

        virtualinvoke $r17.<butterknife.internal.BindingClass: void addResource(butterknife.internal.FieldResourceBinding)>(r4);

        $r8 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r8);

        return;

     label5:
        $r9 = "getColor";

        goto label4;
    }
    private void parseResourceDimen(javax.lang.model.element.Element, java.util.Map, java.util.Set)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.element.Element $r1, $r5;
        java.util.Map r2;
        java.util.Set r3;
        butterknife.internal.FieldResourceBinding r4;
        boolean z0, z1, $z2;
        javax.lang.model.element.TypeElement r6;
        javax.lang.model.type.TypeMirror $r7;
        javax.lang.model.type.TypeKind $r8, $r9;
        java.lang.Object[] $r10;
        java.lang.Class $r11;
        java.lang.String $r12, $r17;
        javax.lang.model.element.Name $r13;
        java.lang.'annotation'.Annotation $r14;
        butterknife.BindDimen $r15;
        int $i0;
        butterknife.internal.BindingClass $r16;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Set;

        z0 = 0;

        $r5 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        r6 = (javax.lang.model.element.TypeElement) $r5;

        z1 = 0;

        $r7 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>();

        $r8 = interfaceinvoke $r7.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r9 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind INT>;

        if $r8 != $r9 goto label2;

        z1 = 1;

     label1:
        $z2 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isInaccessibleViaGeneratedCode(java.lang.Class,java.lang.String,javax.lang.model.element.Element)>(class "Lbutterknife/BindDimen;", "fields", $r1);

        z0 = z0 | $z2;

        $z2 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isBindingInWrongPackage(java.lang.Class,javax.lang.model.element.Element)>(class "Lbutterknife/BindDimen;", $r1);

        z0 = z0 | $z2;

        if z0 == 0 goto label3;

        return;

     label2:
        $r8 = interfaceinvoke $r7.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r9 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind FLOAT>;

        if $r8 == $r9 goto label1;

        $r10 = newarray (java.lang.Object)[3];

        $r11 = class "Lbutterknife/BindDimen;";

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getSimpleName()>();

        $r10[0] = $r12;

        $r13 = interfaceinvoke r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r10[1] = $r13;

        $r13 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r10[2] = $r13;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "@%s field type must be \'int\' or \'float\'. (%s.%s)", $r10);

        z0 = 1;

        goto label1;

     label3:
        $r13 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        $r14 = interfaceinvoke $r1.<javax.lang.model.element.Element: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lbutterknife/BindDimen;");

        $r15 = (butterknife.BindDimen) $r14;

        $i0 = interfaceinvoke $r15.<butterknife.BindDimen: int value()>();

        $r16 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: butterknife.internal.BindingClass getOrCreateTargetClass(java.util.Map,javax.lang.model.element.TypeElement)>(r2, r6);

        r4 = new butterknife.internal.FieldResourceBinding;

        if z1 == 0 goto label5;

        $r17 = "getDimensionPixelSize";

     label4:
        specialinvoke r4.<butterknife.internal.FieldResourceBinding: void <init>(int,java.lang.String,java.lang.String)>($i0, $r12, $r17);

        virtualinvoke $r16.<butterknife.internal.BindingClass: void addResource(butterknife.internal.FieldResourceBinding)>(r4);

        $r12 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r12);

        return;

     label5:
        $r17 = "getDimension";

        goto label4;
    }
    private void parseResourceDrawable(javax.lang.model.element.Element, java.util.Map, java.util.Set)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.element.Element $r1, $r5;
        java.util.Map r2;
        java.util.Set r3;
        butterknife.internal.FieldResourceBinding r4;
        boolean z0, $z1;
        javax.lang.model.element.TypeElement r6;
        java.lang.String $r7, $r9;
        javax.lang.model.type.TypeMirror $r8;
        java.lang.Object[] $r10;
        java.lang.Class $r11;
        javax.lang.model.element.Name $r12;
        java.lang.'annotation'.Annotation $r13;
        butterknife.BindDrawable $r14;
        int $i0;
        butterknife.internal.BindingClass $r15;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Set;

        z0 = 0;

        $r5 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        r6 = (javax.lang.model.element.TypeElement) $r5;

        $r7 = "android.graphics.drawable.Drawable";

        $r8 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>();

        $r9 = interfaceinvoke $r8.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label1;

        $r10 = newarray (java.lang.Object)[3];

        $r11 = class "Lbutterknife/BindDrawable;";

        $r7 = virtualinvoke $r11.<java.lang.Class: java.lang.String getSimpleName()>();

        $r10[0] = $r7;

        $r12 = interfaceinvoke r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r10[1] = $r12;

        $r12 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r10[2] = $r12;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "@%s field type must be \'Drawable\'. (%s.%s)", $r10);

        z0 = 1;

     label1:
        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isInaccessibleViaGeneratedCode(java.lang.Class,java.lang.String,javax.lang.model.element.Element)>(class "Lbutterknife/BindDrawable;", "fields", $r1);

        z0 = z0 | $z1;

        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isBindingInWrongPackage(java.lang.Class,javax.lang.model.element.Element)>(class "Lbutterknife/BindDrawable;", $r1);

        z0 = z0 | $z1;

        if z0 == 0 goto label2;

        return;

     label2:
        $r12 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r7 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        $r13 = interfaceinvoke $r1.<javax.lang.model.element.Element: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lbutterknife/BindDrawable;");

        $r14 = (butterknife.BindDrawable) $r13;

        $i0 = interfaceinvoke $r14.<butterknife.BindDrawable: int value()>();

        $r15 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: butterknife.internal.BindingClass getOrCreateTargetClass(java.util.Map,javax.lang.model.element.TypeElement)>(r2, r6);

        r4 = new butterknife.internal.FieldResourceBinding;

        specialinvoke r4.<butterknife.internal.FieldResourceBinding: void <init>(int,java.lang.String,java.lang.String)>($i0, $r7, "getDrawable");

        virtualinvoke $r15.<butterknife.internal.BindingClass: void addResource(butterknife.internal.FieldResourceBinding)>(r4);

        $r7 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r7);

        return;
    }
    private void parseResourceInt(javax.lang.model.element.Element, java.util.Map, java.util.Set)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.element.Element $r1, $r5;
        java.util.Map r2;
        java.util.Set r3;
        butterknife.internal.FieldResourceBinding r4;
        boolean z0, $z1;
        javax.lang.model.element.TypeElement r6;
        javax.lang.model.type.TypeMirror $r7;
        javax.lang.model.type.TypeKind $r8, $r9;
        java.lang.Object[] $r10;
        java.lang.Class $r11;
        java.lang.String $r12;
        javax.lang.model.element.Name $r13;
        java.lang.'annotation'.Annotation $r14;
        butterknife.BindInt $r15;
        int $i0;
        butterknife.internal.BindingClass $r16;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Set;

        z0 = 0;

        $r5 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        r6 = (javax.lang.model.element.TypeElement) $r5;

        $r7 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>();

        $r8 = interfaceinvoke $r7.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r9 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind INT>;

        if $r8 == $r9 goto label1;

        $r10 = newarray (java.lang.Object)[3];

        $r11 = class "Lbutterknife/BindInt;";

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getSimpleName()>();

        $r10[0] = $r12;

        $r13 = interfaceinvoke r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r10[1] = $r13;

        $r13 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r10[2] = $r13;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "@%s field type must be \'int\'. (%s.%s)", $r10);

        z0 = 1;

     label1:
        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isInaccessibleViaGeneratedCode(java.lang.Class,java.lang.String,javax.lang.model.element.Element)>(class "Lbutterknife/BindInt;", "fields", $r1);

        z0 = z0 | $z1;

        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isBindingInWrongPackage(java.lang.Class,javax.lang.model.element.Element)>(class "Lbutterknife/BindInt;", $r1);

        z0 = z0 | $z1;

        if z0 == 0 goto label2;

        return;

     label2:
        $r13 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r12 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        $r14 = interfaceinvoke $r1.<javax.lang.model.element.Element: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lbutterknife/BindInt;");

        $r15 = (butterknife.BindInt) $r14;

        $i0 = interfaceinvoke $r15.<butterknife.BindInt: int value()>();

        $r16 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: butterknife.internal.BindingClass getOrCreateTargetClass(java.util.Map,javax.lang.model.element.TypeElement)>(r2, r6);

        r4 = new butterknife.internal.FieldResourceBinding;

        specialinvoke r4.<butterknife.internal.FieldResourceBinding: void <init>(int,java.lang.String,java.lang.String)>($i0, $r12, "getInteger");

        virtualinvoke $r16.<butterknife.internal.BindingClass: void addResource(butterknife.internal.FieldResourceBinding)>(r4);

        $r12 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r12);

        return;
    }
    private void parseResourceString(javax.lang.model.element.Element, java.util.Map, java.util.Set)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.element.Element $r1, $r5;
        java.util.Map r2;
        java.util.Set r3;
        butterknife.internal.FieldResourceBinding r4;
        boolean z0, $z1;
        javax.lang.model.element.TypeElement r6;
        java.lang.String $r7, $r9;
        javax.lang.model.type.TypeMirror $r8;
        java.lang.Object[] $r10;
        java.lang.Class $r11;
        javax.lang.model.element.Name $r12;
        java.lang.'annotation'.Annotation $r13;
        butterknife.BindString $r14;
        int $i0;
        butterknife.internal.BindingClass $r15;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Set;

        z0 = 0;

        $r5 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        r6 = (javax.lang.model.element.TypeElement) $r5;

        $r7 = "java.lang.String";

        $r8 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>();

        $r9 = interfaceinvoke $r8.<javax.lang.model.type.TypeMirror: java.lang.String toString()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label1;

        $r10 = newarray (java.lang.Object)[3];

        $r11 = class "Lbutterknife/BindString;";

        $r7 = virtualinvoke $r11.<java.lang.Class: java.lang.String getSimpleName()>();

        $r10[0] = $r7;

        $r12 = interfaceinvoke r6.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r10[1] = $r12;

        $r12 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r10[2] = $r12;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r1, "@%s field type must be \'String\'. (%s.%s)", $r10);

        z0 = 1;

     label1:
        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isInaccessibleViaGeneratedCode(java.lang.Class,java.lang.String,javax.lang.model.element.Element)>(class "Lbutterknife/BindString;", "fields", $r1);

        z0 = z0 | $z1;

        $z1 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: boolean isBindingInWrongPackage(java.lang.Class,javax.lang.model.element.Element)>(class "Lbutterknife/BindString;", $r1);

        z0 = z0 | $z1;

        if z0 == 0 goto label2;

        return;

     label2:
        $r12 = interfaceinvoke $r1.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r7 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        $r13 = interfaceinvoke $r1.<javax.lang.model.element.Element: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lbutterknife/BindString;");

        $r14 = (butterknife.BindString) $r13;

        $i0 = interfaceinvoke $r14.<butterknife.BindString: int value()>();

        $r15 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: butterknife.internal.BindingClass getOrCreateTargetClass(java.util.Map,javax.lang.model.element.TypeElement)>(r2, r6);

        r4 = new butterknife.internal.FieldResourceBinding;

        specialinvoke r4.<butterknife.internal.FieldResourceBinding: void <init>(int,java.lang.String,java.lang.String)>($i0, $r7, "getString");

        virtualinvoke $r15.<butterknife.internal.BindingClass: void addResource(butterknife.internal.FieldResourceBinding)>(r4);

        $r7 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r7);

        return;
    }
    public java.util.Set getSupportedAnnotationTypes()
    {
        butterknife.internal.ButterKnifeProcessor r0;
        java.util.LinkedHashSet r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        r1 = new java.util.LinkedHashSet;

        specialinvoke r1.<java.util.LinkedHashSet: void <init>()>();

        $r2 = class "Lbutterknife/Bind;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r4 = <butterknife.internal.ButterKnifeProcessor: java.util.List LISTENERS>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.Class) $r6;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        $r2 = class "Lbutterknife/BindBool;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r2 = class "Lbutterknife/BindColor;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r2 = class "Lbutterknife/BindDimen;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r2 = class "Lbutterknife/BindDrawable;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r2 = class "Lbutterknife/BindInt;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r2 = class "Lbutterknife/BindString;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        return r1;
    }
    public javax.lang.model.SourceVersion getSupportedSourceVersion()
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.lang.model.SourceVersion $r1;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 = staticinvoke <javax.lang.model.SourceVersion: javax.lang.model.SourceVersion latestSupported()>();

        return $r1;
    }
    public void init(javax.'annotation'.processing.ProcessingEnvironment)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        javax.'annotation'.processing.ProcessingEnvironment $r1;
        javax.lang.model.util.Elements $r2;
        javax.lang.model.util.Types $r3;
        javax.'annotation'.processing.Filer $r4;
        java.lang.Throwable $r5;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        $r1 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;

        entermonitor r0;

     label1:
        specialinvoke r0.<javax.'annotation'.processing.AbstractProcessor: void init(javax.'annotation'.processing.ProcessingEnvironment)>($r1);

        $r2 = interfaceinvoke $r1.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        r0.<butterknife.internal.ButterKnifeProcessor: javax.lang.model.util.Elements elementUtils> = $r2;

        $r3 = interfaceinvoke $r1.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Types getTypeUtils()>();

        r0.<butterknife.internal.ButterKnifeProcessor: javax.lang.model.util.Types typeUtils> = $r3;

        $r4 = interfaceinvoke $r1.<javax.'annotation'.processing.ProcessingEnvironment: javax.'annotation'.processing.Filer getFiler()>();

        r0.<butterknife.internal.ButterKnifeProcessor: javax.'annotation'.processing.Filer filer> = $r4;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public boolean process(java.util.Set, javax.'annotation'.processing.RoundEnvironment)
    {
        butterknife.internal.ButterKnifeProcessor r0;
        java.util.Set r1;
        javax.'annotation'.processing.RoundEnvironment $r2;
        java.io.IOException r3;
        java.util.Map $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.util.Map$Entry r7;
        javax.lang.model.element.TypeElement r8;
        butterknife.internal.BindingClass r9;
        javax.'annotation'.processing.Filer $r10;
        java.lang.String $r11;
        java.lang.Object[] $r12;
        javax.tools.JavaFileObject $r13;
        java.io.Writer $r14;
        javax.lang.model.element.Element[] $r15;
        javax.lang.model.element.Element $r16;

        r0 := @this: butterknife.internal.ButterKnifeProcessor;

        r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: javax.'annotation'.processing.RoundEnvironment;

        $r4 = specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: java.util.Map findAndParseTargets(javax.'annotation'.processing.RoundEnvironment)>($r2);

        r1 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (javax.lang.model.element.TypeElement) $r6;

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (butterknife.internal.BindingClass) $r6;

        $r10 = r0.<butterknife.internal.ButterKnifeProcessor: javax.'annotation'.processing.Filer filer>;

     label2:
        $r11 = virtualinvoke r9.<butterknife.internal.BindingClass: java.lang.String getFqcn()>();

     label3:
        $r12 = newarray (javax.lang.model.element.Element)[1];

        $r12[0] = r8;

        $r15 = (javax.lang.model.element.Element[]) $r12;

     label4:
        $r13 = interfaceinvoke $r10.<javax.'annotation'.processing.Filer: javax.tools.JavaFileObject createSourceFile(java.lang.CharSequence,javax.lang.model.element.Element[])>($r11, $r15);

        $r14 = interfaceinvoke $r13.<javax.tools.JavaFileObject: java.io.Writer openWriter()>();

        $r11 = virtualinvoke r9.<butterknife.internal.BindingClass: java.lang.String brewJava()>();

        virtualinvoke $r14.<java.io.Writer: void write(java.lang.String)>($r11);

        virtualinvoke $r14.<java.io.Writer: void flush()>();

        virtualinvoke $r14.<java.io.Writer: void close()>();

     label5:
        goto label1;

     label6:
        r3 := @caughtexception;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = r8;

        $r11 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();

        $r12[1] = $r11;

        $r16 = (javax.lang.model.element.Element) r8;

        specialinvoke r0.<butterknife.internal.ButterKnifeProcessor: void error(javax.lang.model.element.Element,java.lang.String,java.lang.Object[])>($r16, "Unable to write view binder for type %s: %s", $r12);

        goto label1;

     label7:
        return 1;

        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }
