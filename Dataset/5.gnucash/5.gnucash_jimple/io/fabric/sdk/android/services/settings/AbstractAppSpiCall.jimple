io.fabric.sdk.android.services.settings.AbstractAppSpiCall extends io.fabric.sdk.android.services.common.AbstractSpiCall implements io.fabric.sdk.android.services.settings.AppSpiCall
public static final java.lang.String APP_BUILD_VERSION_PARAM
public static final java.lang.String APP_BUILT_SDK_VERSION_PARAM
public static final java.lang.String APP_DISPLAY_VERSION_PARAM
public static final java.lang.String APP_ICON_DATA_PARAM
public static final java.lang.String APP_ICON_HASH_PARAM
public static final java.lang.String APP_ICON_HEIGHT_PARAM
public static final java.lang.String APP_ICON_PRERENDERED_PARAM
public static final java.lang.String APP_ICON_WIDTH_PARAM
public static final java.lang.String APP_IDENTIFIER_PARAM
public static final java.lang.String APP_INSTANCE_IDENTIFIER_PARAM
public static final java.lang.String APP_MIN_SDK_VERSION_PARAM
public static final java.lang.String APP_NAME_PARAM
public static final java.lang.String APP_SDK_MODULES_PARAM_BUILD_TYPE
public static final java.lang.String APP_SDK_MODULES_PARAM_PREFIX
public static final java.lang.String APP_SDK_MODULES_PARAM_VERSION
public static final java.lang.String APP_SOURCE_PARAM
static final java.lang.String ICON_CONTENT_TYPE
static final java.lang.String ICON_FILE_NAME
    public void <init>(io.fabric.sdk.android.Kit, java.lang.String, java.lang.String, io.fabric.sdk.android.services.network.HttpRequestFactory, io.fabric.sdk.android.services.network.HttpMethod)
    {
        io.fabric.sdk.android.services.settings.AbstractAppSpiCall r0;
        io.fabric.sdk.android.Kit $r1;
        java.lang.String $r2, $r3;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r4;
        io.fabric.sdk.android.services.network.HttpMethod $r5;

        r0 := @this: io.fabric.sdk.android.services.settings.AbstractAppSpiCall;

        $r1 := @parameter0: io.fabric.sdk.android.Kit;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: io.fabric.sdk.android.services.network.HttpRequestFactory;

        $r5 := @parameter4: io.fabric.sdk.android.services.network.HttpMethod;

        specialinvoke r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: void <init>(io.fabric.sdk.android.Kit,java.lang.String,java.lang.String,io.fabric.sdk.android.services.network.HttpRequestFactory,io.fabric.sdk.android.services.network.HttpMethod)>($r1, $r2, $r3, $r4, $r5);

        return;
    }
    private io.fabric.sdk.android.services.network.HttpRequest applyHeadersTo(io.fabric.sdk.android.services.network.HttpRequest, io.fabric.sdk.android.services.settings.AppRequestData)
    {
        io.fabric.sdk.android.services.settings.AbstractAppSpiCall r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;
        io.fabric.sdk.android.services.settings.AppRequestData $r2;
        java.lang.String $r3;
        io.fabric.sdk.android.Kit $r4;

        r0 := @this: io.fabric.sdk.android.services.settings.AbstractAppSpiCall;

        $r1 := @parameter0: io.fabric.sdk.android.services.network.HttpRequest;

        $r2 := @parameter1: io.fabric.sdk.android.services.settings.AppRequestData;

        $r3 = $r2.<io.fabric.sdk.android.services.settings.AppRequestData: java.lang.String apiKey>;

        $r1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("X-CRASHLYTICS-API-KEY", $r3);

        $r1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("X-CRASHLYTICS-API-CLIENT-TYPE", "android");

        $r4 = r0.<io.fabric.sdk.android.services.settings.AbstractAppSpiCall: io.fabric.sdk.android.Kit kit>;

        $r3 = virtualinvoke $r4.<io.fabric.sdk.android.Kit: java.lang.String getVersion()>();

        $r1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("X-CRASHLYTICS-API-CLIENT-VERSION", $r3);

        return $r1;
    }
    private io.fabric.sdk.android.services.network.HttpRequest applyMultipartDataTo(io.fabric.sdk.android.services.network.HttpRequest, io.fabric.sdk.android.services.settings.AppRequestData)
    {
        io.fabric.sdk.android.services.settings.AbstractAppSpiCall r0;
        io.fabric.sdk.android.services.settings.AppRequestData $r1;
        android.content.res.Resources$NotFoundException r2;
        io.fabric.sdk.android.services.network.HttpRequest $r3, $r12;
        java.lang.String $r4, $r17;
        int $i0;
        java.lang.Integer $r5;
        boolean $z0;
        io.fabric.sdk.android.services.settings.IconRequest $r6;
        java.io.InputStream r7, $r11;
        io.fabric.sdk.android.Kit $r8;
        android.content.Context $r9;
        android.content.res.Resources $r10;
        java.util.Collection $r13;
        java.util.Iterator $r14;
        java.lang.Object $r15;
        io.fabric.sdk.android.KitInfo r16;
        io.fabric.sdk.android.Logger $r18;
        java.lang.StringBuilder $r19;
        java.lang.Throwable $r20;

        r0 := @this: io.fabric.sdk.android.services.settings.AbstractAppSpiCall;

        $r3 := @parameter0: io.fabric.sdk.android.services.network.HttpRequest;

        $r1 := @parameter1: io.fabric.sdk.android.services.settings.AppRequestData;

        $r4 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: java.lang.String appId>;

        $r3 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String)>("app[identifier]", $r4);

        $r4 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: java.lang.String name>;

        $r3 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String)>("app[name]", $r4);

        $r4 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: java.lang.String displayVersion>;

        $r3 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String)>("app[display_version]", $r4);

        $r4 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: java.lang.String buildVersion>;

        $r3 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String)>("app[build_version]", $r4);

        $i0 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: int source>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.Number)>("app[source]", $r5);

        $r4 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: java.lang.String minSdkVersion>;

        $r3 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String)>("app[minimum_sdk_version]", $r4);

        $r4 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: java.lang.String builtSdkVersion>;

        $r3 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String)>("app[built_sdk_version]", $r4);

        $r4 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: java.lang.String instanceIdentifier>;

        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean isNullOrEmpty(java.lang.String)>($r4);

        if $z0 != 0 goto label01;

        $r4 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: java.lang.String instanceIdentifier>;

        virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String)>("app[instance_identifier]", $r4);

     label01:
        $r6 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: io.fabric.sdk.android.services.settings.IconRequest icon>;

        if $r6 == null goto label14;

        r7 = null;

     label02:
        $r8 = r0.<io.fabric.sdk.android.services.settings.AbstractAppSpiCall: io.fabric.sdk.android.Kit kit>;

     label03:
        $r9 = virtualinvoke $r8.<io.fabric.sdk.android.Kit: android.content.Context getContext()>();

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.res.Resources getResources()>();

     label04:
        $r6 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: io.fabric.sdk.android.services.settings.IconRequest icon>;

        $i0 = $r6.<io.fabric.sdk.android.services.settings.IconRequest: int iconResourceId>;

     label05:
        $r11 = virtualinvoke $r10.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

     label06:
        r7 = $r11;

     label07:
        $r6 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: io.fabric.sdk.android.services.settings.IconRequest icon>;

        $r4 = $r6.<io.fabric.sdk.android.services.settings.IconRequest: java.lang.String hash>;

     label08:
        $r12 = virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String)>("app[icon][hash]", $r4);

        $r12 = virtualinvoke $r12.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>("app[icon][data]", "icon.png", "application/octet-stream", $r11);

     label09:
        $r6 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: io.fabric.sdk.android.services.settings.IconRequest icon>;

        $i0 = $r6.<io.fabric.sdk.android.services.settings.IconRequest: int width>;

     label10:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r12 = virtualinvoke $r12.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.Number)>("app[icon][width]", $r5);

     label11:
        $r6 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: io.fabric.sdk.android.services.settings.IconRequest icon>;

        $i0 = $r6.<io.fabric.sdk.android.services.settings.IconRequest: int height>;

     label12:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r12.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.Number)>("app[icon][height]", $r5);

     label13:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>($r11, "Failed to close app icon InputStream.");

     label14:
        $r13 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: java.util.Collection sdkKits>;

        if $r13 == null goto label20;

        $r13 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: java.util.Collection sdkKits>;

        $r14 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (io.fabric.sdk.android.KitInfo) $r15;

        $r4 = virtualinvoke r0.<io.fabric.sdk.android.services.settings.AbstractAppSpiCall: java.lang.String getKitVersionKey(io.fabric.sdk.android.KitInfo)>(r16);

        $r17 = virtualinvoke r16.<io.fabric.sdk.android.KitInfo: java.lang.String getVersion()>();

        virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String)>($r4, $r17);

        $r4 = virtualinvoke r0.<io.fabric.sdk.android.services.settings.AbstractAppSpiCall: java.lang.String getKitBuildTypeKey(io.fabric.sdk.android.KitInfo)>(r16);

        $r17 = virtualinvoke r16.<io.fabric.sdk.android.KitInfo: java.lang.String getBuildType()>();

        virtualinvoke $r3.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest part(java.lang.String,java.lang.String)>($r4, $r17);

        goto label15;

     label16:
        r2 := @caughtexception;

     label17:
        $r18 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find app icon with resource ID: ");

        $r6 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: io.fabric.sdk.android.services.settings.IconRequest icon>;

        $i0 = $r6.<io.fabric.sdk.android.services.settings.IconRequest: int iconResourceId>;

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", $r4, r2);

     label18:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r7, "Failed to close app icon InputStream.");

        goto label14;

     label19:
        $r20 := @caughtexception;

        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r7, "Failed to close app icon InputStream.");

        throw $r20;

     label20:
        return $r3;

        catch android.content.res.Resources$NotFoundException from label03 to label04 with label16;
        catch android.content.res.Resources$NotFoundException from label05 to label06 with label16;
        catch android.content.res.Resources$NotFoundException from label08 to label09 with label16;
        catch android.content.res.Resources$NotFoundException from label10 to label11 with label16;
        catch android.content.res.Resources$NotFoundException from label12 to label13 with label16;
        catch java.lang.Throwable from label02 to label06 with label19;
        catch java.lang.Throwable from label07 to label13 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
    }
    java.lang.String getKitBuildTypeKey(io.fabric.sdk.android.KitInfo)
    {
        io.fabric.sdk.android.services.settings.AbstractAppSpiCall r0;
        io.fabric.sdk.android.KitInfo $r1;
        java.util.Locale $r2;
        java.lang.Object[] $r3;
        java.lang.String $r4;

        r0 := @this: io.fabric.sdk.android.services.settings.AbstractAppSpiCall;

        $r1 := @parameter0: io.fabric.sdk.android.KitInfo;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke $r1.<io.fabric.sdk.android.KitInfo: java.lang.String getIdentifier()>();

        $r3[0] = $r4;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "app[build][libraries][%s][type]", $r3);

        return $r4;
    }
    java.lang.String getKitVersionKey(io.fabric.sdk.android.KitInfo)
    {
        io.fabric.sdk.android.services.settings.AbstractAppSpiCall r0;
        io.fabric.sdk.android.KitInfo $r1;
        java.util.Locale $r2;
        java.lang.Object[] $r3;
        java.lang.String $r4;

        r0 := @this: io.fabric.sdk.android.services.settings.AbstractAppSpiCall;

        $r1 := @parameter0: io.fabric.sdk.android.KitInfo;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke $r1.<io.fabric.sdk.android.KitInfo: java.lang.String getIdentifier()>();

        $r3[0] = $r4;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "app[build][libraries][%s][version]", $r3);

        return $r4;
    }
    public boolean invoke(io.fabric.sdk.android.services.settings.AppRequestData)
    {
        io.fabric.sdk.android.services.settings.AbstractAppSpiCall r0;
        io.fabric.sdk.android.services.settings.AppRequestData $r1;
        io.fabric.sdk.android.services.network.HttpRequest $r2;
        io.fabric.sdk.android.Logger $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r7;
        io.fabric.sdk.android.services.settings.IconRequest $r6;
        int $i0;
        boolean $z0;

        r0 := @this: io.fabric.sdk.android.services.settings.AbstractAppSpiCall;

        $r1 := @parameter0: io.fabric.sdk.android.services.settings.AppRequestData;

        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.settings.AbstractAppSpiCall: io.fabric.sdk.android.services.network.HttpRequest getHttpRequest()>();

        $r2 = specialinvoke r0.<io.fabric.sdk.android.services.settings.AbstractAppSpiCall: io.fabric.sdk.android.services.network.HttpRequest applyHeadersTo(io.fabric.sdk.android.services.network.HttpRequest,io.fabric.sdk.android.services.settings.AppRequestData)>($r2, $r1);

        $r2 = specialinvoke r0.<io.fabric.sdk.android.services.settings.AbstractAppSpiCall: io.fabric.sdk.android.services.network.HttpRequest applyMultipartDataTo(io.fabric.sdk.android.services.network.HttpRequest,io.fabric.sdk.android.services.settings.AppRequestData)>($r2, $r1);

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending app info to ");

        $r5 = virtualinvoke r0.<io.fabric.sdk.android.services.settings.AbstractAppSpiCall: java.lang.String getUrl()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r5);

        $r6 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: io.fabric.sdk.android.services.settings.IconRequest icon>;

        if $r6 == null goto label1;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("App icon hash is ");

        $r6 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: io.fabric.sdk.android.services.settings.IconRequest icon>;

        $r5 = $r6.<io.fabric.sdk.android.services.settings.IconRequest: java.lang.String hash>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r5);

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("App icon size is ");

        $r6 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: io.fabric.sdk.android.services.settings.IconRequest icon>;

        $i0 = $r6.<io.fabric.sdk.android.services.settings.IconRequest: int width>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r6 = $r1.<io.fabric.sdk.android.services.settings.AppRequestData: io.fabric.sdk.android.services.settings.IconRequest icon>;

        $i0 = $r6.<io.fabric.sdk.android.services.settings.IconRequest: int height>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r5);

     label1:
        $i0 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        $r5 = "POST";

        $r7 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String method()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label3;

        $r5 = "Create";

     label2:
        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" app request ID: ");

        $r5 = virtualinvoke $r2.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("X-REQUEST-ID");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r5);

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Result was ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r5);

        $i0 = staticinvoke <io.fabric.sdk.android.services.common.ResponseParser: int parse(int)>($i0);

        if $i0 != 0 goto label4;

        return 1;

     label3:
        $r5 = "Update";

        goto label2;

     label4:
        return 0;
    }
