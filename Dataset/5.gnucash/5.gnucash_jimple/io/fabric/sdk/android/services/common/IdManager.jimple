io.fabric.sdk.android.services.common.IdManager extends java.lang.Object
public static final java.lang.String APPLICATION_INSTALL_ID_FIELD
private static final java.lang.String BAD_ANDROID_ID
public static final java.lang.String BETA_DEVICE_TOKEN_FIELD
private static final java.lang.String BLUETOOTH_ERROR_MESSAGE
public static final java.lang.String COLLECT_DEVICE_IDENTIFIERS
public static final java.lang.String COLLECT_USER_IDENTIFIERS
public static final java.lang.String DEFAULT_VERSION_NAME
private static final java.lang.String FORWARD_SLASH_REGEX
private static final java.util.regex.Pattern ID_PATTERN
public static final java.lang.String MODEL_FIELD
public static final java.lang.String OS_VERSION_FIELD
private static final java.lang.String PREFKEY_INSTALLATION_UUID
private static final java.lang.String SDK_ASSETS_ROOT
io.fabric.sdk.android.services.common.AdvertisingInfo advertisingInfo
io.fabric.sdk.android.services.common.AdvertisingInfoProvider advertisingInfoProvider
private final android.content.Context appContext
private final java.lang.String appIdentifier
private final java.lang.String appInstallIdentifier
private final boolean collectHardwareIds
private final boolean collectUserIds
boolean fetchedAdvertisingInfo
private final java.util.concurrent.locks.ReentrantLock installationIdLock
private final io.fabric.sdk.android.services.common.InstallerPackageNameProvider installerPackageNameProvider
private final java.util.Collection kits
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        java.lang.String $r1;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[^\\p{Alnum}]");

        <io.fabric.sdk.android.services.common.IdManager: java.util.regex.Pattern ID_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>("/");

        <io.fabric.sdk.android.services.common.IdManager: java.lang.String FORWARD_SLASH_REGEX> = $r1;

        return;
    }
    public void <init>(android.content.Context, java.lang.String, java.lang.String, java.util.Collection)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        android.content.Context $r1;
        java.lang.String $r2, $r3;
        java.util.Collection r4;
        java.util.concurrent.locks.ReentrantLock $r5;
        java.lang.IllegalArgumentException $r6;
        io.fabric.sdk.android.services.common.InstallerPackageNameProvider $r7;
        io.fabric.sdk.android.services.common.AdvertisingInfoProvider $r8;
        boolean $z0;
        io.fabric.sdk.android.Logger $r9;
        java.lang.StringBuilder $r10;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<io.fabric.sdk.android.services.common.IdManager: java.util.concurrent.locks.ReentrantLock installationIdLock> = $r5;

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("appContext must not be null");

        throw $r6;

     label1:
        if $r2 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("appIdentifier must not be null");

        throw $r6;

     label2:
        if r4 != null goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("kits must not be null");

        throw $r6;

     label3:
        r0.<io.fabric.sdk.android.services.common.IdManager: android.content.Context appContext> = $r1;

        r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String appIdentifier> = $r2;

        r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String appInstallIdentifier> = $r3;

        r0.<io.fabric.sdk.android.services.common.IdManager: java.util.Collection kits> = r4;

        $r7 = new io.fabric.sdk.android.services.common.InstallerPackageNameProvider;

        specialinvoke $r7.<io.fabric.sdk.android.services.common.InstallerPackageNameProvider: void <init>()>();

        r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.InstallerPackageNameProvider installerPackageNameProvider> = $r7;

        $r8 = new io.fabric.sdk.android.services.common.AdvertisingInfoProvider;

        specialinvoke $r8.<io.fabric.sdk.android.services.common.AdvertisingInfoProvider: void <init>(android.content.Context)>($r1);

        r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfoProvider advertisingInfoProvider> = $r8;

        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean getBooleanResourceValue(android.content.Context,java.lang.String,boolean)>($r1, "com.crashlytics.CollectDeviceIdentifiers", 1);

        r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectHardwareIds> = $z0;

        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectHardwareIds>;

        if $z0 != 0 goto label4;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Device ID collection disabled for ");

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r2);

     label4:
        $z0 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: boolean getBooleanResourceValue(android.content.Context,java.lang.String,boolean)>($r1, "com.crashlytics.CollectUserIdentifiers", 1);

        r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectUserIds> = $z0;

        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectUserIds>;

        if $z0 != 0 goto label5;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User information collection disabled for ");

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r2);

     label5:
        return;
    }
    private void addAppInstallIdTo(org.json.JSONObject)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        org.json.JSONObject $r1;
        java.lang.Exception r2;
        java.lang.String $r3, $r5;
        java.util.Locale $r4;
        io.fabric.sdk.android.Logger $r6;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: org.json.JSONObject;

        $r3 = "APPLICATION_INSTALLATION_UUID";

        $r4 = <java.util.Locale: java.util.Locale US>;

     label1:
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $r5 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAppInstallIdentifier()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r3, $r5);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Could not write application id to JSON", r2);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private void addDeviceIdentifiersTo(org.json.JSONObject)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        org.json.JSONObject $r1;
        java.lang.Exception r2;
        java.util.Map $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.util.Map$Entry r7;
        io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType $r8;
        java.lang.String $r9;
        java.util.Locale $r10;
        io.fabric.sdk.android.Logger $r11;
        java.lang.StringBuilder $r12;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: org.json.JSONObject;

        $r3 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.util.Map getDeviceIdentifiers()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

     label2:
        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType) $r6;

        $r9 = virtualinvoke $r8.<io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType: java.lang.String name()>();

     label3:
        $r10 = <java.util.Locale: java.util.Locale US>;

     label4:
        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r10);

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r9, $r6);

     label5:
        goto label1;

     label6:
        r2 := @caughtexception;

        $r11 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not write value to JSON: ");

        $r6 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType) $r6;

        $r9 = virtualinvoke $r8.<io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType: java.lang.String name()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", $r9, r2);

        goto label1;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }
    private void addModelName(org.json.JSONObject)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        org.json.JSONObject $r1;
        java.lang.Exception r2;
        java.lang.String $r3;
        io.fabric.sdk.android.Logger $r4;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: org.json.JSONObject;

     label1:
        $r3 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getModelName()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("model", $r3);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Could not write model to JSON", r2);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private void addOsVersionTo(org.json.JSONObject)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        org.json.JSONObject $r1;
        java.lang.Exception r2;
        java.lang.String $r3;
        io.fabric.sdk.android.Logger $r4;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: org.json.JSONObject;

     label1:
        $r3 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getOsVersionString()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("os_version", $r3);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Could not write OS version to JSON", r2);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    private java.lang.String createInstallationUUID(android.content.SharedPreferences)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        android.content.SharedPreferences $r1;
        java.util.concurrent.locks.ReentrantLock $r2;
        java.lang.String $r3, r4;
        java.util.UUID $r5;
        android.content.SharedPreferences$Editor $r6;
        java.lang.Throwable $r7;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: android.content.SharedPreferences;

        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: java.util.concurrent.locks.ReentrantLock installationIdLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null);

     label2:
        r4 = $r3;

        if $r3 != null goto label6;

     label3:
        $r5 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        r4 = virtualinvoke $r5.<java.util.UUID: java.lang.String toString()>();

        $r3 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String formatId(java.lang.String)>(r4);

     label4:
        r4 = $r3;

     label5:
        $r6 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r6 = interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("crashlytics.installation.id", $r3);

        interfaceinvoke $r6.<android.content.SharedPreferences$Editor: boolean commit()>();

     label6:
        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: java.util.concurrent.locks.ReentrantLock installationIdLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return r4;

     label7:
        $r7 := @caughtexception;

        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: java.util.concurrent.locks.ReentrantLock installationIdLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
    private java.lang.String formatId(java.lang.String)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        java.util.Locale $r4;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = <io.fabric.sdk.android.services.common.IdManager: java.util.regex.Pattern ID_PATTERN>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $r1 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        return $r1;
    }
    private java.lang.String[] getTwitterSdkAssetsList()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String[] $r1;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 = newarray (java.lang.String)[0];

        return $r1;
    }
    private boolean hasPermission(java.lang.String)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String $r1;
        int $i0;
        android.content.Context $r2;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: android.content.Context appContext>;

        $i0 = virtualinvoke $r2.<android.content.Context: int checkCallingPermission(java.lang.String)>($r1);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    private void putNonNullIdInto(java.util.Map, io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType, java.lang.String)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.util.Map r1;
        io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType $r2;
        java.lang.String $r3;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType;

        $r3 := @parameter2: java.lang.String;

        if $r3 == null goto label1;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

     label1:
        return;
    }
    private java.lang.String removeForwardSlashesIn(java.lang.String)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String $r1, $r2;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = <io.fabric.sdk.android.services.common.IdManager: java.lang.String FORWARD_SLASH_REGEX>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r2, "");

        return $r1;
    }
    public boolean canCollectUserIds()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        boolean z0;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectUserIds>;

        return z0;
    }
    public java.lang.String createIdHeaderValue(java.lang.String, java.lang.String)
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String $r1, $r2, r5;
        org.json.JSONObject r3;
        java.lang.StringBuilder r4;
        char[] $r6;
        javax.crypto.Cipher $r7;
        int $i0;
        byte[] $r8;
        java.security.GeneralSecurityException r9, r11;
        io.fabric.sdk.android.Logger $r10;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r5 = new java.lang.String;

        $r6 = newarray (char)[3];

        $r6[0] = 115;

        $r6[1] = 108;

        $r6[2] = 99;

     label01:
        specialinvoke r5.<java.lang.String: void <init>(char[])>($r6);

     label02:
        r4 = new java.lang.StringBuilder;

     label03:
        specialinvoke r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r5);

        r4 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>();

        r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\.", r5);

     label04:
        r4 = new java.lang.StringBuilder;

     label05:
        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        r4 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        r4 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String sha1(java.lang.String)>($r1);

        $r7 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: javax.crypto.Cipher createCipher(int,java.lang.String)>(1, $r1);

     label06:
        r3 = new org.json.JSONObject;

        specialinvoke r3.<org.json.JSONObject: void <init>()>();

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void addAppInstallIdTo(org.json.JSONObject)>(r3);

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void addDeviceIdentifiersTo(org.json.JSONObject)>(r3);

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void addOsVersionTo(org.json.JSONObject)>(r3);

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void addModelName(org.json.JSONObject)>(r3);

        $i0 = virtualinvoke r3.<org.json.JSONObject: int length()>();

        if $i0 <= 0 goto label11;

     label07:
        $r1 = virtualinvoke r3.<org.json.JSONObject: java.lang.String toString()>();

        $r8 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r8 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r8);

        $r1 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String hexify(byte[])>($r8);

     label08:
        return $r1;

     label09:
        r9 := @caughtexception;

        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Could not create cipher to encrypt headers.", r9);

        return "";

     label10:
        r11 := @caughtexception;

        $r10 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r10.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Could not encrypt IDs", r11);

     label11:
        return "";

        catch java.security.GeneralSecurityException from label01 to label02 with label09;
        catch java.security.GeneralSecurityException from label03 to label04 with label09;
        catch java.security.GeneralSecurityException from label05 to label06 with label09;
        catch java.security.GeneralSecurityException from label07 to label08 with label10;
    }
    public java.lang.String getAdvertisingId()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        boolean $z0;
        io.fabric.sdk.android.services.common.AdvertisingInfo $r1;
        java.lang.String r2;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectHardwareIds>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>();

        if $r1 == null goto label1;

        r2 = $r1.<io.fabric.sdk.android.services.common.AdvertisingInfo: java.lang.String advertisingId>;

        return r2;

     label1:
        return null;
    }
    io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        io.fabric.sdk.android.services.common.AdvertisingInfo $r1;
        boolean $z0;
        io.fabric.sdk.android.services.common.AdvertisingInfoProvider $r2;
        java.lang.Throwable $r3;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        entermonitor r0;

     label1:
        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean fetchedAdvertisingInfo>;

        if $z0 != 0 goto label2;

        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfoProvider advertisingInfoProvider>;

        $r1 = virtualinvoke $r2.<io.fabric.sdk.android.services.common.AdvertisingInfoProvider: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>();

        r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo advertisingInfo> = $r1;

        r0.<io.fabric.sdk.android.services.common.IdManager: boolean fetchedAdvertisingInfo> = 1;

     label2:
        $r1 = r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo advertisingInfo>;

     label3:
        exitmonitor r0;

        return $r1;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
    public java.lang.String getAndroidId()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        boolean $z0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        java.lang.String $r3, $r4;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectHardwareIds>;

        if $z0 == 0 goto label1;

        $r1 = r0.<io.fabric.sdk.android.services.common.IdManager: android.content.Context appContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "android_id");

        $r4 = "9774d56d682e549c";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r3 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String formatId(java.lang.String)>($r3);

        return $r3;

     label1:
        return null;
    }
    public java.lang.String getAppIdentifier()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String r1;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        r1 = r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String appIdentifier>;

        return r1;
    }
    public java.lang.String getAppInstallIdentifier()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.String r1;
        android.content.Context $r2;
        android.content.SharedPreferences $r3;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        r1 = r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String appInstallIdentifier>;

        if r1 != null goto label1;

        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: android.content.Context appContext>;

        $r3 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r2);

        r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null);

        if r1 != null goto label1;

        r1 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>($r3);

     label1:
        return r1;
    }
    public java.lang.String getBluetoothMacAddress()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.Exception r1;
        boolean $z0;
        android.bluetooth.BluetoothAdapter $r2;
        java.lang.String $r3;
        io.fabric.sdk.android.Logger $r4;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectHardwareIds>;

        if $z0 == 0 goto label4;

        $z0 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: boolean hasPermission(java.lang.String)>("android.permission.BLUETOOTH");

        if $z0 == 0 goto label4;

     label1:
        $r2 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

     label2:
        if $r2 == null goto label4;

     label3:
        $r3 = virtualinvoke $r2.<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()>();

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String formatId(java.lang.String)>($r3);

     label4:
        return null;

     label5:
        r1 := @caughtexception;

        $r4 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r4.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Utils#getBluetoothMacAddress failed, returning null. Requires prior call to BluetoothAdatpter.getDefaultAdapter() on thread that has called Looper.prepare()", r1);

        goto label4;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
    public java.util.Map getDeviceIdentifiers()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.util.HashMap r1;
        java.util.Collection $r2;
        java.util.Iterator $r3, $r9;
        boolean $z0;
        java.lang.Object $r4;
        io.fabric.sdk.android.Kit r5;
        io.fabric.sdk.android.services.common.DeviceIdentifierProvider r6;
        java.util.Map $r7;
        java.util.Set $r8;
        java.util.Map$Entry r10;
        io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType $r11;
        java.lang.String $r12;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: java.util.Collection kits>;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (io.fabric.sdk.android.Kit) $r4;

        $z0 = r5 instanceof io.fabric.sdk.android.services.common.DeviceIdentifierProvider;

        if $z0 == 0 goto label1;

        r6 = (io.fabric.sdk.android.services.common.DeviceIdentifierProvider) r5;

        $r7 = interfaceinvoke r6.<io.fabric.sdk.android.services.common.DeviceIdentifierProvider: java.util.Map getDeviceIdentifiers()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType) $r4;

        $r4 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.lang.String) $r4;

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void putNonNullIdInto(java.util.Map,io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType,java.lang.String)>(r1, $r11, $r12);

        goto label2;

     label3:
        $r11 = <io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType: io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType ANDROID_ID>;

        $r12 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAndroidId()>();

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void putNonNullIdInto(java.util.Map,io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType,java.lang.String)>(r1, $r11, $r12);

        $r11 = <io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType: io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType ANDROID_DEVICE_ID>;

        $r12 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getTelephonyId()>();

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void putNonNullIdInto(java.util.Map,io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType,java.lang.String)>(r1, $r11, $r12);

        $r11 = <io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType: io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType ANDROID_SERIAL>;

        $r12 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getSerialNumber()>();

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void putNonNullIdInto(java.util.Map,io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType,java.lang.String)>(r1, $r11, $r12);

        $r11 = <io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType: io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType WIFI_MAC_ADDRESS>;

        $r12 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getWifiMacAddress()>();

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void putNonNullIdInto(java.util.Map,io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType,java.lang.String)>(r1, $r11, $r12);

        $r11 = <io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType: io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType BLUETOOTH_MAC_ADDRESS>;

        $r12 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getBluetoothMacAddress()>();

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void putNonNullIdInto(java.util.Map,io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType,java.lang.String)>(r1, $r11, $r12);

        $r11 = <io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType: io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType ANDROID_ADVERTISING_ID>;

        $r12 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAdvertisingId()>();

        specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: void putNonNullIdInto(java.util.Map,io.fabric.sdk.android.services.common.IdManager$DeviceIdentifierType,java.lang.String)>(r1, $r11, $r12);

        $r7 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r1);

        return $r7;
    }
    public java.lang.String getDeviceUUID()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        boolean $z0;
        java.lang.String $r1;
        android.content.Context $r2;
        android.content.SharedPreferences $r3;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectHardwareIds>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String getAndroidId()>();

        if $r1 != null goto label2;

        $r2 = r0.<io.fabric.sdk.android.services.common.IdManager: android.content.Context appContext>;

        $r3 = staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: android.content.SharedPreferences getSharedPrefs(android.content.Context)>($r2);

        $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("crashlytics.installation.id", null);

        if $r1 != null goto label2;

        $r1 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String createInstallationUUID(android.content.SharedPreferences)>($r3);

        return $r1;

     label1:
        return "";

     label2:
        return $r1;
    }
    public java.lang.String getInstallerPackageName()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        android.content.Context $r1;
        java.lang.String $r2;
        io.fabric.sdk.android.services.common.InstallerPackageNameProvider $r3;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r3 = r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.InstallerPackageNameProvider installerPackageNameProvider>;

        $r1 = r0.<io.fabric.sdk.android.services.common.IdManager: android.content.Context appContext>;

        $r2 = virtualinvoke $r3.<io.fabric.sdk.android.services.common.InstallerPackageNameProvider: java.lang.String getInstallerPackageName(android.content.Context)>($r1);

        return $r2;
    }
    public java.lang.String getModelName()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.util.Locale $r1;
        java.lang.Object[] $r2;
        java.lang.String $r3;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r3 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String removeForwardSlashesIn(java.lang.String)>($r3);

        $r2[0] = $r3;

        $r3 = <android.os.Build: java.lang.String MODEL>;

        $r3 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String removeForwardSlashesIn(java.lang.String)>($r3);

        $r2[1] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "%s/%s", $r2);

        return $r3;
    }
    public java.lang.String getOsVersionString()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.util.Locale $r1;
        java.lang.Object[] $r2;
        java.lang.String $r3;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r3 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String removeForwardSlashesIn(java.lang.String)>($r3);

        $r2[0] = $r3;

        $r3 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        $r3 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String removeForwardSlashesIn(java.lang.String)>($r3);

        $r2[1] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "%s/%s", $r2);

        return $r3;
    }
    public java.lang.String getSerialNumber()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        java.lang.Exception r1;
        boolean $z0;
        int $i0;
        java.lang.Class $r2;
        java.lang.reflect.Field $r3;
        java.lang.Object $r4;
        java.lang.String $r5;
        io.fabric.sdk.android.Logger $r6;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectHardwareIds>;

        if $z0 == 0 goto label4;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 9 goto label4;

        $r2 = class "Landroid/os/Build;";

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("SERIAL");

        $r4 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r5 = (java.lang.String) $r4;

        $r5 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String formatId(java.lang.String)>($r5);

     label2:
        return $r5;

     label3:
        r1 := @caughtexception;

        $r6 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r6.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Fabric", "Could not retrieve android.os.Build.SERIAL value", r1);

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
    public java.lang.String getTelephonyId()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        boolean $z0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.telephony.TelephonyManager r3;
        java.lang.String $r4;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectHardwareIds>;

        if $z0 == 0 goto label1;

        $z0 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: boolean hasPermission(java.lang.String)>("android.permission.READ_PHONE_STATE");

        if $z0 == 0 goto label1;

        $r1 = r0.<io.fabric.sdk.android.services.common.IdManager: android.content.Context appContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r3 = (android.telephony.TelephonyManager) $r2;

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        $r4 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String formatId(java.lang.String)>($r4);

        return $r4;

     label1:
        return null;
    }
    public java.lang.String getWifiMacAddress()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        boolean $z0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.net.wifi.WifiManager r3;
        android.net.wifi.WifiInfo $r4;
        java.lang.String $r5;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectHardwareIds>;

        if $z0 == 0 goto label1;

        $z0 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: boolean hasPermission(java.lang.String)>("android.permission.ACCESS_WIFI_STATE");

        if $z0 == 0 goto label1;

        $r1 = r0.<io.fabric.sdk.android.services.common.IdManager: android.content.Context appContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        r3 = (android.net.wifi.WifiManager) $r2;

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

        $r5 = specialinvoke r0.<io.fabric.sdk.android.services.common.IdManager: java.lang.String formatId(java.lang.String)>($r5);

        return $r5;

     label1:
        return null;
    }
    public java.lang.Boolean isLimitAdTrackingEnabled()
    {
        io.fabric.sdk.android.services.common.IdManager r0;
        boolean $z0;
        io.fabric.sdk.android.services.common.AdvertisingInfo $r1;
        java.lang.Boolean $r2;

        r0 := @this: io.fabric.sdk.android.services.common.IdManager;

        $z0 = r0.<io.fabric.sdk.android.services.common.IdManager: boolean collectHardwareIds>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<io.fabric.sdk.android.services.common.IdManager: io.fabric.sdk.android.services.common.AdvertisingInfo getAdvertisingInfo()>();

        if $r1 == null goto label1;

        $z0 = $r1.<io.fabric.sdk.android.services.common.AdvertisingInfo: boolean limitAdTrackingEnabled>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;

     label1:
        return null;
    }
