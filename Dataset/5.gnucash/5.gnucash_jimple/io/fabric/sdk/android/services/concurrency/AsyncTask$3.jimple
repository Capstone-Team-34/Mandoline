io.fabric.sdk.android.services.concurrency.AsyncTask$3 extends java.util.concurrent.FutureTask
final io.fabric.sdk.android.services.concurrency.AsyncTask this$0
    void <init>(io.fabric.sdk.android.services.concurrency.AsyncTask, java.util.concurrent.Callable)
    {
        io.fabric.sdk.android.services.concurrency.AsyncTask$3 r0;
        io.fabric.sdk.android.services.concurrency.AsyncTask $r1;
        java.util.concurrent.Callable r2;

        r0 := @this: io.fabric.sdk.android.services.concurrency.AsyncTask$3;

        $r1 := @parameter0: io.fabric.sdk.android.services.concurrency.AsyncTask;

        r2 := @parameter1: java.util.concurrent.Callable;

        r0.<io.fabric.sdk.android.services.concurrency.AsyncTask$3: io.fabric.sdk.android.services.concurrency.AsyncTask this$0> = $r1;

        specialinvoke r0.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(r2);

        return;
    }
    protected void done()
    {
        io.fabric.sdk.android.services.concurrency.AsyncTask$3 r0;
        io.fabric.sdk.android.services.concurrency.AsyncTask $r1;
        java.lang.Object $r2;
        java.lang.InterruptedException r3;
        java.util.concurrent.ExecutionException r4;
        java.lang.RuntimeException $r5;
        java.lang.Throwable $r6;
        java.util.concurrent.CancellationException r7;

        r0 := @this: io.fabric.sdk.android.services.concurrency.AsyncTask$3;

        $r1 = r0.<io.fabric.sdk.android.services.concurrency.AsyncTask$3: io.fabric.sdk.android.services.concurrency.AsyncTask this$0>;

     label1:
        $r2 = virtualinvoke r0.<io.fabric.sdk.android.services.concurrency.AsyncTask$3: java.lang.Object get()>();

        staticinvoke <io.fabric.sdk.android.services.concurrency.AsyncTask: void access$400(io.fabric.sdk.android.services.concurrency.AsyncTask,java.lang.Object)>($r1, $r2);

     label2:
        return;

     label3:
        r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("AsyncTask", r3);

        return;

     label4:
        r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke r4.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("An error occured while executing doInBackground()", $r6);

        throw $r5;

     label5:
        r7 := @caughtexception;

        $r1 = r0.<io.fabric.sdk.android.services.concurrency.AsyncTask$3: io.fabric.sdk.android.services.concurrency.AsyncTask this$0>;

        staticinvoke <io.fabric.sdk.android.services.concurrency.AsyncTask: void access$400(io.fabric.sdk.android.services.concurrency.AsyncTask,java.lang.Object)>($r1, null);

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
        catch java.util.concurrent.CancellationException from label1 to label2 with label5;
    }
