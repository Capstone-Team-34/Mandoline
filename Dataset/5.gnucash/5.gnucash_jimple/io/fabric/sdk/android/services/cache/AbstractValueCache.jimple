io.fabric.sdk.android.services.cache.AbstractValueCache extends java.lang.Object implements io.fabric.sdk.android.services.cache.ValueCache
private final io.fabric.sdk.android.services.cache.ValueCache childCache
    public void <init>()
    {
        io.fabric.sdk.android.services.cache.AbstractValueCache r0;

        r0 := @this: io.fabric.sdk.android.services.cache.AbstractValueCache;

        specialinvoke r0.<io.fabric.sdk.android.services.cache.AbstractValueCache: void <init>(io.fabric.sdk.android.services.cache.ValueCache)>(null);

        return;
    }
    public void <init>(io.fabric.sdk.android.services.cache.ValueCache)
    {
        io.fabric.sdk.android.services.cache.AbstractValueCache r0;
        io.fabric.sdk.android.services.cache.ValueCache r1;

        r0 := @this: io.fabric.sdk.android.services.cache.AbstractValueCache;

        r1 := @parameter0: io.fabric.sdk.android.services.cache.ValueCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<io.fabric.sdk.android.services.cache.AbstractValueCache: io.fabric.sdk.android.services.cache.ValueCache childCache> = r1;

        return;
    }
    private void cache(android.content.Context, java.lang.Object)
    {
        io.fabric.sdk.android.services.cache.AbstractValueCache r0;
        android.content.Context $r1;
        java.lang.Object r2;
        java.lang.NullPointerException $r3;

        r0 := @this: io.fabric.sdk.android.services.cache.AbstractValueCache;

        $r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        if r2 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        virtualinvoke r0.<io.fabric.sdk.android.services.cache.AbstractValueCache: void cacheValue(android.content.Context,java.lang.Object)>($r1, r2);

        return;
    }
protected abstract void cacheValue(android.content.Context, java.lang.Object) { 
// no body
} 
protected abstract void doInvalidate(android.content.Context) { 
// no body
} 
    public final java.lang.Object get(android.content.Context, io.fabric.sdk.android.services.cache.ValueLoader) throws java.lang.Exception
    {
        io.fabric.sdk.android.services.cache.AbstractValueCache r0;
        android.content.Context $r1;
        io.fabric.sdk.android.services.cache.ValueLoader r2;
        java.lang.Object $r3, r4;
        io.fabric.sdk.android.services.cache.ValueCache $r5;
        java.lang.Throwable $r6;

        r0 := @this: io.fabric.sdk.android.services.cache.AbstractValueCache;

        $r1 := @parameter0: android.content.Context;

        r2 := @parameter1: io.fabric.sdk.android.services.cache.ValueLoader;

        entermonitor r0;

     label1:
        $r3 = virtualinvoke r0.<io.fabric.sdk.android.services.cache.AbstractValueCache: java.lang.Object getCached(android.content.Context)>($r1);

        r4 = $r3;

        if $r3 != null goto label3;

        $r5 = r0.<io.fabric.sdk.android.services.cache.AbstractValueCache: io.fabric.sdk.android.services.cache.ValueCache childCache>;

        if $r5 == null goto label4;

        $r5 = r0.<io.fabric.sdk.android.services.cache.AbstractValueCache: io.fabric.sdk.android.services.cache.ValueCache childCache>;

        r4 = interfaceinvoke $r5.<io.fabric.sdk.android.services.cache.ValueCache: java.lang.Object get(android.content.Context,io.fabric.sdk.android.services.cache.ValueLoader)>($r1, r2);

     label2:
        specialinvoke r0.<io.fabric.sdk.android.services.cache.AbstractValueCache: void cache(android.content.Context,java.lang.Object)>($r1, r4);

     label3:
        exitmonitor r0;

        return r4;

     label4:
        $r3 = interfaceinvoke r2.<io.fabric.sdk.android.services.cache.ValueLoader: java.lang.Object load(android.content.Context)>($r1);

     label5:
        r4 = $r3;

        goto label2;

     label6:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
protected abstract java.lang.Object getCached(android.content.Context) { 
// no body
} 
    public final void invalidate(android.content.Context)
    {
        io.fabric.sdk.android.services.cache.AbstractValueCache r0;
        android.content.Context $r1;
        java.lang.Throwable $r2;

        r0 := @this: io.fabric.sdk.android.services.cache.AbstractValueCache;

        $r1 := @parameter0: android.content.Context;

        entermonitor r0;

     label1:
        virtualinvoke r0.<io.fabric.sdk.android.services.cache.AbstractValueCache: void doInvalidate(android.content.Context)>($r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
