io.fabric.sdk.android.services.common.ExecutorUtils$2 extends io.fabric.sdk.android.services.common.BackgroundPriorityRunnable
final java.util.concurrent.ExecutorService val$service
final java.lang.String val$serviceName
final long val$terminationTimeout
final java.util.concurrent.TimeUnit val$timeUnit
    void <init>(java.lang.String, java.util.concurrent.ExecutorService, long, java.util.concurrent.TimeUnit)
    {
        io.fabric.sdk.android.services.common.ExecutorUtils$2 r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        long $l0;
        java.util.concurrent.TimeUnit $r3;

        r0 := @this: io.fabric.sdk.android.services.common.ExecutorUtils$2;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.concurrent.ExecutorService;

        $l0 := @parameter2: long;

        $r3 := @parameter3: java.util.concurrent.TimeUnit;

        r0.<io.fabric.sdk.android.services.common.ExecutorUtils$2: java.lang.String val$serviceName> = $r1;

        r0.<io.fabric.sdk.android.services.common.ExecutorUtils$2: java.util.concurrent.ExecutorService val$service> = $r2;

        r0.<io.fabric.sdk.android.services.common.ExecutorUtils$2: long val$terminationTimeout> = $l0;

        r0.<io.fabric.sdk.android.services.common.ExecutorUtils$2: java.util.concurrent.TimeUnit val$timeUnit> = $r3;

        specialinvoke r0.<io.fabric.sdk.android.services.common.BackgroundPriorityRunnable: void <init>()>();

        return;
    }
    public void onRun()
    {
        io.fabric.sdk.android.services.common.ExecutorUtils$2 r0;
        java.lang.InterruptedException r1;
        java.lang.String $r2;
        io.fabric.sdk.android.Logger $r3;
        java.lang.StringBuilder $r4;
        java.util.concurrent.ExecutorService $r5;
        long $l0;
        java.util.concurrent.TimeUnit $r6;
        boolean $z0;
        java.util.Locale $r7;
        java.lang.Object[] $r8;

        r0 := @this: io.fabric.sdk.android.services.common.ExecutorUtils$2;

     label01:
        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label02:
        $r4 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Executing shutdown hook for ");

     label04:
        $r2 = r0.<io.fabric.sdk.android.services.common.ExecutorUtils$2: java.lang.String val$serviceName>;

     label05:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r2);

     label06:
        $r5 = r0.<io.fabric.sdk.android.services.common.ExecutorUtils$2: java.util.concurrent.ExecutorService val$service>;

     label07:
        interfaceinvoke $r5.<java.util.concurrent.ExecutorService: void shutdown()>();

     label08:
        $r5 = r0.<io.fabric.sdk.android.services.common.ExecutorUtils$2: java.util.concurrent.ExecutorService val$service>;

        $l0 = r0.<io.fabric.sdk.android.services.common.ExecutorUtils$2: long val$terminationTimeout>;

        $r6 = r0.<io.fabric.sdk.android.services.common.ExecutorUtils$2: java.util.concurrent.TimeUnit val$timeUnit>;

     label09:
        $z0 = interfaceinvoke $r5.<java.util.concurrent.ExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>($l0, $r6);

     label10:
        if $z0 != 0 goto label20;

     label11:
        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label12:
        $r4 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

     label14:
        $r2 = r0.<io.fabric.sdk.android.services.common.ExecutorUtils$2: java.lang.String val$serviceName>;

     label15:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not shut down in the");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" allocated time. Requesting immediate shutdown.");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r2);

     label16:
        $r5 = r0.<io.fabric.sdk.android.services.common.ExecutorUtils$2: java.util.concurrent.ExecutorService val$service>;

     label17:
        interfaceinvoke $r5.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>();

     label18:
        return;

     label19:
        r1 := @caughtexception;

        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r7 = <java.util.Locale: java.util.Locale US>;

        $r8 = newarray (java.lang.Object)[1];

        $r2 = r0.<io.fabric.sdk.android.services.common.ExecutorUtils$2: java.lang.String val$serviceName>;

        $r8[0] = $r2;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "Interrupted while waiting for %s to shut down. Requesting immediate shutdown.", $r8);

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r2);

        $r5 = r0.<io.fabric.sdk.android.services.common.ExecutorUtils$2: java.util.concurrent.ExecutorService val$service>;

        interfaceinvoke $r5.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>();

     label20:
        return;

        catch java.lang.InterruptedException from label01 to label02 with label19;
        catch java.lang.InterruptedException from label03 to label04 with label19;
        catch java.lang.InterruptedException from label05 to label06 with label19;
        catch java.lang.InterruptedException from label07 to label08 with label19;
        catch java.lang.InterruptedException from label09 to label10 with label19;
        catch java.lang.InterruptedException from label11 to label12 with label19;
        catch java.lang.InterruptedException from label13 to label14 with label19;
        catch java.lang.InterruptedException from label15 to label16 with label19;
        catch java.lang.InterruptedException from label17 to label18 with label19;
    }
