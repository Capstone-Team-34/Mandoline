org.gnucash.android.db.DatabaseHelper extends android.database.sqlite.SQLiteOpenHelper
private static final java.lang.String ACCOUNTS_TABLE_CREATE
public static final java.lang.String COMMODITIES_TABLE_CREATE
private static final java.lang.String DATABASE_NAME
public static final java.lang.String LOG_TAG
private static final java.lang.String PRICES_TABLE_CREATE
public static final java.lang.String SCHEDULED_ACTIONS_TABLE_CREATE
private static final java.lang.String SPLITS_TABLE_CREATE
private static final java.lang.String TRANSACTIONS_TABLE_CREATE
    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        org.gnucash.android.model.Commodity$Namespace $r3;

        $r0 = class "Lorg/gnucash/android/db/DatabaseHelper;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <org.gnucash.android.db.DatabaseHelper: java.lang.String LOG_TAG> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("create table accounts (_id integer primary key autoincrement, uid varchar(255) not null UNIQUE, name varchar(255) not null, type varchar(255) not null, currency_code varchar(255) not null, commodity_uid varchar(255) not null, description varchar(255), color_code varchar(255), favorite tinyint default 0, is_hidden tinyint default 0, full_name varchar(255), is_placeholder tinyint default 0, parent_account_uid varchar(255), default_transfer_account_uid varchar(255), created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, modified_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (commodity_uid) REFERENCES commodities (uid) );");

        $r1 = staticinvoke <org.gnucash.android.db.DatabaseHelper: java.lang.String createUpdatedAtTrigger(java.lang.String)>("accounts");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.gnucash.android.db.DatabaseHelper: java.lang.String ACCOUNTS_TABLE_CREATE> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("create table transactions (_id integer primary key autoincrement, uid varchar(255) not null UNIQUE, name varchar(255), description text, timestamp integer not null, is_exported tinyint default 0, is_template tinyint default 0, currency_code varchar(255) not null, commodity_uid varchar(255) not null, scheduled_action_uid varchar(255), created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, modified_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (scheduled_action_uid) REFERENCES scheduled_actions (uid) ON DELETE SET NULL, FOREIGN KEY (commodity_uid) REFERENCES commodities (uid) );");

        $r1 = staticinvoke <org.gnucash.android.db.DatabaseHelper: java.lang.String createUpdatedAtTrigger(java.lang.String)>("transactions");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.gnucash.android.db.DatabaseHelper: java.lang.String TRANSACTIONS_TABLE_CREATE> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE splits (_id integer primary key autoincrement, uid varchar(255) not null UNIQUE, memo text, type varchar(255) not null, value_num integer not null, value_denom integer not null, quantity_num integer not null, quantity_denom integer not null, account_uid varchar(255) not null, transaction_uid varchar(255) not null, created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, modified_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (account_uid) REFERENCES accounts (uid) ON DELETE CASCADE, FOREIGN KEY (transaction_uid) REFERENCES transactions (uid) ON DELETE CASCADE );");

        $r1 = staticinvoke <org.gnucash.android.db.DatabaseHelper: java.lang.String createUpdatedAtTrigger(java.lang.String)>("splits");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.gnucash.android.db.DatabaseHelper: java.lang.String SPLITS_TABLE_CREATE> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE scheduled_actions (_id integer primary key autoincrement, uid varchar(255) not null UNIQUE, action_uid varchar(255) not null, type varchar(255) not null, period integer not null, last_run integer default 0, start_time integer not null, end_time integer default 0, tag text, is_enabled tinyint default 1, total_frequency integer default 0, execution_count integer default 0, created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, modified_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP );");

        $r1 = staticinvoke <org.gnucash.android.db.DatabaseHelper: java.lang.String createUpdatedAtTrigger(java.lang.String)>("scheduled_actions");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.gnucash.android.db.DatabaseHelper: java.lang.String SCHEDULED_ACTIONS_TABLE_CREATE> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE commodities (_id integer primary key autoincrement, uid varchar(255) not null UNIQUE, namespace varchar(255) not null default ");

        $r3 = <org.gnucash.android.model.Commodity$Namespace: org.gnucash.android.model.Commodity$Namespace ISO4217>;

        $r1 = virtualinvoke $r3.<org.gnucash.android.model.Commodity$Namespace: java.lang.String name()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fullname");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" varchar(255) not null, ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mnemonic");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" varchar(255) not null, ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("local_symbol");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" varchar(255) not null default \'\', ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cusip");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" varchar(255), ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fraction");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" integer not null, ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quote_flag");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" integer not null, ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("created_at");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("modified_at");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");");

        $r1 = staticinvoke <org.gnucash.android.db.DatabaseHelper: java.lang.String createUpdatedAtTrigger(java.lang.String)>("commodities");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.gnucash.android.db.DatabaseHelper: java.lang.String COMMODITIES_TABLE_CREATE> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE prices (_id integer primary key autoincrement, uid varchar(255) not null UNIQUE, commodity_guid varchar(255) not null, currency_guid varchar(255) not null, type varchar(255), date TIMESTAMP not null, source text, value_num integer not null, value_denom integer not null, created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, modified_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, UNIQUE (commodity_guid, currency_guid) ON CONFLICT REPLACE, FOREIGN KEY (commodity_guid) REFERENCES commodities (uid) ON DELETE CASCADE, FOREIGN KEY (currency_guid) REFERENCES commodities (uid) ON DELETE CASCADE );");

        $r1 = staticinvoke <org.gnucash.android.db.DatabaseHelper: java.lang.String createUpdatedAtTrigger(java.lang.String)>("prices");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.gnucash.android.db.DatabaseHelper: java.lang.String PRICES_TABLE_CREATE> = $r1;

        return;
    }
    public void <init>(android.content.Context)
    {
        org.gnucash.android.db.DatabaseHelper r0;
        android.content.Context $r1;

        r0 := @this: org.gnucash.android.db.DatabaseHelper;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, "gnucash_db", null, 11);

        return;
    }
    private void createDatabaseTables(android.database.sqlite.SQLiteDatabase)
    {
        org.gnucash.android.db.DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2;
        java.lang.Exception r3;
        java.lang.RuntimeException $r4;

        r0 := @this: org.gnucash.android.db.DatabaseHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = <org.gnucash.android.db.DatabaseHelper: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "Creating database tables");

        $r2 = <org.gnucash.android.db.DatabaseHelper: java.lang.String ACCOUNTS_TABLE_CREATE>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2);

        $r2 = <org.gnucash.android.db.DatabaseHelper: java.lang.String TRANSACTIONS_TABLE_CREATE>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2);

        $r2 = <org.gnucash.android.db.DatabaseHelper: java.lang.String SPLITS_TABLE_CREATE>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2);

        $r2 = <org.gnucash.android.db.DatabaseHelper: java.lang.String SCHEDULED_ACTIONS_TABLE_CREATE>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2);

        $r2 = <org.gnucash.android.db.DatabaseHelper: java.lang.String COMMODITIES_TABLE_CREATE>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2);

        $r2 = <org.gnucash.android.db.DatabaseHelper: java.lang.String PRICES_TABLE_CREATE>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE UNIQUE INDEX \'account_uid_index\' ON accounts(uid)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE UNIQUE INDEX \'transaction_uid_index\' ON transactions(uid)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE UNIQUE INDEX \'split_uid_index\' ON splits(uid)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE UNIQUE INDEX \'scheduled_action_uid_index\' ON scheduled_actions(uid)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE UNIQUE INDEX \'commodities_uid_index\' ON commodities(uid)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE UNIQUE INDEX \'prices_uid_index\' ON prices(uid)");

     label1:
        staticinvoke <org.gnucash.android.db.MigrationHelper: void importCommodities(android.database.sqlite.SQLiteDatabase)>($r1);

     label2:
        return;

     label3:
        r3 := @caughtexception;

     label4:
        $r2 = <org.gnucash.android.db.DatabaseHelper: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Error loading currencies into the database");

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r4;

     label5:
        r3 := @caughtexception;

        goto label4;

     label6:
        r3 := @caughtexception;

        goto label4;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label5;
        catch java.io.IOException from label1 to label2 with label6;
    }
    static java.lang.String createUpdatedAtTrigger(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TRIGGER update_time_trigger   AFTER UPDATE ON ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FOR EACH ROW");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  BEGIN ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UPDATE ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  SET ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("modified_at");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = CURRENT_TIMESTAMP");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  WHERE OLD.");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uid");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = NEW.");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uid");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  END;");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        org.gnucash.android.db.DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase $r1;

        r0 := @this: org.gnucash.android.db.DatabaseHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        specialinvoke r0.<org.gnucash.android.db.DatabaseHelper: void createDatabaseTables(android.database.sqlite.SQLiteDatabase)>($r1);

        return;
    }
    public void onOpen(android.database.sqlite.SQLiteDatabase)
    {
        org.gnucash.android.db.DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase $r1;

        r0 := @this: org.gnucash.android.db.DatabaseHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>($r1);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("PRAGMA foreign_keys=ON");

        return;
    }
    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        org.gnucash.android.db.DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        java.lang.String $r2, $r4;
        java.lang.StringBuilder $r3;
        android.content.Context $r5;
        android.widget.Toast $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.Class $r8;
        java.lang.Class[] $r9;
        java.lang.reflect.Method $r10;
        java.lang.Object[] $r11;
        java.lang.Object $r12;
        java.lang.NoSuchMethodException r13;
        java.lang.Integer $r14;
        java.lang.RuntimeException $r15;
        java.lang.IllegalAccessException r16;
        java.lang.reflect.InvocationTargetException r17;

        r0 := @this: org.gnucash.android.db.DatabaseHelper;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 = <org.gnucash.android.db.DatabaseHelper: java.lang.String LOG_TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrading database from version ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, $r4);

        $r5 = staticinvoke <org.gnucash.android.app.GnuCashApplication: android.content.Context getAppContext()>();

        $r6 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r5, "Upgrading GnuCash database", 0);

        virtualinvoke $r6.<android.widget.Toast: void show()>();

        if $i1 <= $i0 goto label01;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Database downgrades are not supported at the moment");

        throw $r7;

     label01:
        if $i1 >= $i0 goto label13;

        $r8 = class "Lorg/gnucash/android/db/MigrationHelper;";

        $r3 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("upgradeDbToVersion");

     label03:
        $i1 = $i1 + 1;

     label04:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r9 = newarray (java.lang.Class)[1];

        $r9[0] = class "Landroid/database/sqlite/SQLiteDatabase;";

     label06:
        $r10 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r2, $r9);

     label07:
        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r1;

     label08:
        $r12 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r11);

        $r2 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label09:
        goto label01;

     label10:
        r13 := @caughtexception;

        $r11 = newarray (java.lang.Object)[1];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r11[0] = $r14;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Database upgrade method upgradeToVersion%d(SQLiteDatabase) definition not found ", $r11);

        $r4 = <org.gnucash.android.db.DatabaseHelper: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, $r2, r13);

        staticinvoke <com.crashlytics.android.Crashlytics: void log(java.lang.String)>($r2);

        staticinvoke <com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>(r13);

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r13);

        throw $r15;

     label11:
        r16 := @caughtexception;

        $r11 = newarray (java.lang.Object)[1];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r11[0] = $r14;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Database upgrade to version %d failed. The upgrade method is inaccessible ", $r11);

        $r4 = <org.gnucash.android.db.DatabaseHelper: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, $r2, r16);

        staticinvoke <com.crashlytics.android.Crashlytics: void log(java.lang.String)>($r2);

        staticinvoke <com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>(r16);

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r16);

        throw $r15;

     label12:
        r17 := @caughtexception;

        staticinvoke <com.crashlytics.android.Crashlytics: void logException(java.lang.Throwable)>(r17);

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r17);

        throw $r15;

     label13:
        return;

        catch java.lang.NoSuchMethodException from label02 to label03 with label10;
        catch java.lang.NoSuchMethodException from label04 to label05 with label10;
        catch java.lang.NoSuchMethodException from label06 to label07 with label10;
        catch java.lang.NoSuchMethodException from label08 to label09 with label10;
        catch java.lang.IllegalAccessException from label02 to label03 with label11;
        catch java.lang.IllegalAccessException from label04 to label05 with label11;
        catch java.lang.IllegalAccessException from label06 to label07 with label11;
        catch java.lang.IllegalAccessException from label08 to label09 with label11;
        catch java.lang.reflect.InvocationTargetException from label02 to label03 with label12;
        catch java.lang.reflect.InvocationTargetException from label04 to label05 with label12;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label12;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label12;
    }
