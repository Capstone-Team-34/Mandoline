org.gnucash.android.db.DatabaseCursorLoader extends android.support.v4.content.AsyncTaskLoader
private android.database.Cursor mCursor
protected org.gnucash.android.db.DatabaseAdapter mDatabaseAdapter
protected final android.support.v4.content.Loader$ForceLoadContentObserver mObserver
    public void <init>(android.content.Context)
    {
        org.gnucash.android.db.DatabaseCursorLoader r0;
        android.content.Context $r1;
        android.support.v4.content.Loader$ForceLoadContentObserver $r2;

        r0 := @this: org.gnucash.android.db.DatabaseCursorLoader;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v4.content.AsyncTaskLoader: void <init>(android.content.Context)>($r1);

        r0.<org.gnucash.android.db.DatabaseCursorLoader: android.database.Cursor mCursor> = null;

        r0.<org.gnucash.android.db.DatabaseCursorLoader: org.gnucash.android.db.DatabaseAdapter mDatabaseAdapter> = null;

        $r2 = new android.support.v4.content.Loader$ForceLoadContentObserver;

        specialinvoke $r2.<android.support.v4.content.Loader$ForceLoadContentObserver: void <init>(android.support.v4.content.Loader)>(r0);

        r0.<org.gnucash.android.db.DatabaseCursorLoader: android.support.v4.content.Loader$ForceLoadContentObserver mObserver> = $r2;

        return;
    }
    public void deliverResult(android.database.Cursor)
    {
        org.gnucash.android.db.DatabaseCursorLoader r0;
        android.database.Cursor $r1, r2;
        boolean $z0;

        r0 := @this: org.gnucash.android.db.DatabaseCursorLoader;

        $r1 := @parameter0: android.database.Cursor;

        $z0 = virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: boolean isReset()>();

        if $z0 == 0 goto label1;

        if $r1 == null goto label3;

        virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: void onReleaseResources(android.database.Cursor)>($r1);

        return;

     label1:
        r2 = r0.<org.gnucash.android.db.DatabaseCursorLoader: android.database.Cursor mCursor>;

        r0.<org.gnucash.android.db.DatabaseCursorLoader: android.database.Cursor mCursor> = $r1;

        $z0 = virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: boolean isStarted()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<android.support.v4.content.AsyncTaskLoader: void deliverResult(java.lang.Object)>($r1);

     label2:
        if r2 == null goto label3;

        if r2 == $r1 goto label3;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label3;

        virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: void onReleaseResources(android.database.Cursor)>(r2);

     label3:
        return;
    }
    public volatile void deliverResult(java.lang.Object)
    {
        org.gnucash.android.db.DatabaseCursorLoader r0;
        java.lang.Object $r1;
        android.database.Cursor $r2;

        r0 := @this: org.gnucash.android.db.DatabaseCursorLoader;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (android.database.Cursor) $r1;

        virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: void deliverResult(android.database.Cursor)>($r2);

        return;
    }
public abstract android.database.Cursor loadInBackground() { 
// no body
} 
    public volatile java.lang.Object loadInBackground()
    {
        org.gnucash.android.db.DatabaseCursorLoader r0;
        android.database.Cursor $r1;

        r0 := @this: org.gnucash.android.db.DatabaseCursorLoader;

        $r1 = virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: android.database.Cursor loadInBackground()>();

        return $r1;
    }
    public void onCanceled(android.database.Cursor)
    {
        org.gnucash.android.db.DatabaseCursorLoader r0;
        android.database.Cursor $r1;

        r0 := @this: org.gnucash.android.db.DatabaseCursorLoader;

        $r1 := @parameter0: android.database.Cursor;

        specialinvoke r0.<android.support.v4.content.AsyncTaskLoader: void onCanceled(java.lang.Object)>($r1);

        virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: void onReleaseResources(android.database.Cursor)>($r1);

        return;
    }
    public volatile void onCanceled(java.lang.Object)
    {
        org.gnucash.android.db.DatabaseCursorLoader r0;
        java.lang.Object $r1;
        android.database.Cursor $r2;

        r0 := @this: org.gnucash.android.db.DatabaseCursorLoader;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (android.database.Cursor) $r1;

        virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: void onCanceled(android.database.Cursor)>($r2);

        return;
    }
    protected void onReleaseResources(android.database.Cursor)
    {
        org.gnucash.android.db.DatabaseCursorLoader r0;
        android.database.Cursor $r1;

        r0 := @this: org.gnucash.android.db.DatabaseCursorLoader;

        $r1 := @parameter0: android.database.Cursor;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<android.database.Cursor: void close()>();

     label1:
        return;
    }
    protected void onReset()
    {
        org.gnucash.android.db.DatabaseCursorLoader r0;
        boolean $z0;
        android.database.Cursor $r1;

        r0 := @this: org.gnucash.android.db.DatabaseCursorLoader;

        specialinvoke r0.<android.support.v4.content.AsyncTaskLoader: void onReset()>();

        virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: void onStopLoading()>();

        $r1 = r0.<org.gnucash.android.db.DatabaseCursorLoader: android.database.Cursor mCursor>;

        if $r1 == null goto label1;

        $r1 = r0.<org.gnucash.android.db.DatabaseCursorLoader: android.database.Cursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<org.gnucash.android.db.DatabaseCursorLoader: android.database.Cursor mCursor>;

        virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: void onReleaseResources(android.database.Cursor)>($r1);

     label1:
        r0.<org.gnucash.android.db.DatabaseCursorLoader: android.database.Cursor mCursor> = null;

        return;
    }
    protected void onStartLoading()
    {
        org.gnucash.android.db.DatabaseCursorLoader r0;
        boolean $z0;
        android.database.Cursor $r1;

        r0 := @this: org.gnucash.android.db.DatabaseCursorLoader;

        $r1 = r0.<org.gnucash.android.db.DatabaseCursorLoader: android.database.Cursor mCursor>;

        if $r1 == null goto label1;

        $r1 = r0.<org.gnucash.android.db.DatabaseCursorLoader: android.database.Cursor mCursor>;

        virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: void deliverResult(android.database.Cursor)>($r1);

     label1:
        $z0 = virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: boolean takeContentChanged()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<org.gnucash.android.db.DatabaseCursorLoader: android.database.Cursor mCursor>;

        if $r1 != null goto label3;

     label2:
        virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: void forceLoad()>();

     label3:
        return;
    }
    protected void onStopLoading()
    {
        org.gnucash.android.db.DatabaseCursorLoader r0;

        r0 := @this: org.gnucash.android.db.DatabaseCursorLoader;

        virtualinvoke r0.<org.gnucash.android.db.DatabaseCursorLoader: boolean cancelLoad()>();

        return;
    }
    protected void registerContentObserver(android.database.Cursor)
    {
        org.gnucash.android.db.DatabaseCursorLoader r0;
        android.database.Cursor $r1;
        android.support.v4.content.Loader$ForceLoadContentObserver $r2;

        r0 := @this: org.gnucash.android.db.DatabaseCursorLoader;

        $r1 := @parameter0: android.database.Cursor;

        $r2 = r0.<org.gnucash.android.db.DatabaseCursorLoader: android.support.v4.content.Loader$ForceLoadContentObserver mObserver>;

        interfaceinvoke $r1.<android.database.Cursor: void registerContentObserver(android.database.ContentObserver)>($r2);

        return;
    }
