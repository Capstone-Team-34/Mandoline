org.gnucash.android.ui.util.widget.CalculatorKeyboard extends java.lang.Object
public static final int KEY_CODE_DECIMAL_SEPARATOR
public static final java.lang.String LOCALE_DECIMAL_SEPARATOR
private boolean hapticFeedback
private android.content.Context mContext
private android.inputmethodservice.KeyboardView mKeyboardView
private android.inputmethodservice.KeyboardView$OnKeyboardActionListener mOnKeyboardActionListener
    static void <clinit>()
    {
        java.text.DecimalFormatSymbols $r0;
        char $c0;
        java.lang.String $r1;

        $r0 = staticinvoke <java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance()>();

        $c0 = virtualinvoke $r0.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>();

        $r1 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($c0);

        <org.gnucash.android.ui.util.widget.CalculatorKeyboard: java.lang.String LOCALE_DECIMAL_SEPARATOR> = $r1;

        return;
    }
    public void <init>(android.content.Context, android.inputmethodservice.KeyboardView, int)
    {
        org.gnucash.android.ui.util.widget.CalculatorKeyboard r0;
        android.content.Context $r1;
        android.inputmethodservice.KeyboardView $r2;
        int $i0;
        android.inputmethodservice.Keyboard r3;
        org.gnucash.android.ui.util.widget.CalculatorKeyboard$1 $r4;
        java.util.List $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        android.inputmethodservice.Keyboard$Key r8;
        int[] $r9;
        java.lang.String $r10;
        android.inputmethodservice.KeyboardView$OnKeyboardActionListener $r11;
        android.app.Activity $r12;
        android.view.Window $r13;

        r0 := @this: org.gnucash.android.ui.util.widget.CalculatorKeyboard;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.inputmethodservice.KeyboardView;

        $i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new org.gnucash.android.ui.util.widget.CalculatorKeyboard$1;

        specialinvoke $r4.<org.gnucash.android.ui.util.widget.CalculatorKeyboard$1: void <init>(org.gnucash.android.ui.util.widget.CalculatorKeyboard)>(r0);

        r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.inputmethodservice.KeyboardView$OnKeyboardActionListener mOnKeyboardActionListener> = $r4;

        r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.content.Context mContext> = $r1;

        r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.inputmethodservice.KeyboardView mKeyboardView> = $r2;

        r3 = new android.inputmethodservice.Keyboard;

        $r1 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.content.Context mContext>;

        specialinvoke r3.<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int)>($r1, $i0);

        $r5 = virtualinvoke r3.<android.inputmethodservice.Keyboard: java.util.List getKeys()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.inputmethodservice.Keyboard$Key) $r7;

        $r9 = r8.<android.inputmethodservice.Keyboard$Key: int[] codes>;

        $i0 = $r9[0];

        if $i0 != 46 goto label1;

        $r10 = <org.gnucash.android.ui.util.widget.CalculatorKeyboard: java.lang.String LOCALE_DECIMAL_SEPARATOR>;

        r8.<android.inputmethodservice.Keyboard$Key: java.lang.CharSequence label> = $r10;

     label2:
        $r2 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.inputmethodservice.KeyboardView mKeyboardView>;

        virtualinvoke $r2.<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>(r3);

        $r2 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.inputmethodservice.KeyboardView mKeyboardView>;

        virtualinvoke $r2.<android.inputmethodservice.KeyboardView: void setPreviewEnabled(boolean)>(0);

        $r2 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.inputmethodservice.KeyboardView mKeyboardView>;

        $r11 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.inputmethodservice.KeyboardView$OnKeyboardActionListener mOnKeyboardActionListener>;

        virtualinvoke $r2.<android.inputmethodservice.KeyboardView: void setOnKeyboardActionListener(android.inputmethodservice.KeyboardView$OnKeyboardActionListener)>($r11);

        $r1 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.content.Context mContext>;

        $r12 = (android.app.Activity) $r1;

        $r13 = virtualinvoke $r12.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r13.<android.view.Window: void setSoftInputMode(int)>(3);

        return;
    }
    static android.content.Context access$000(org.gnucash.android.ui.util.widget.CalculatorKeyboard)
    {
        org.gnucash.android.ui.util.widget.CalculatorKeyboard $r0;
        android.content.Context r1;

        $r0 := @parameter0: org.gnucash.android.ui.util.widget.CalculatorKeyboard;

        r1 = $r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.content.Context mContext>;

        return r1;
    }
    static boolean access$100(org.gnucash.android.ui.util.widget.CalculatorKeyboard)
    {
        org.gnucash.android.ui.util.widget.CalculatorKeyboard $r0;
        boolean $z0;

        $r0 := @parameter0: org.gnucash.android.ui.util.widget.CalculatorKeyboard;

        $z0 = specialinvoke $r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: boolean isHapticFeedbackEnabled()>();

        return $z0;
    }
    static android.inputmethodservice.KeyboardView access$200(org.gnucash.android.ui.util.widget.CalculatorKeyboard)
    {
        org.gnucash.android.ui.util.widget.CalculatorKeyboard $r0;
        android.inputmethodservice.KeyboardView r1;

        $r0 := @parameter0: org.gnucash.android.ui.util.widget.CalculatorKeyboard;

        r1 = $r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.inputmethodservice.KeyboardView mKeyboardView>;

        return r1;
    }
    private boolean isHapticFeedbackEnabled()
    {
        org.gnucash.android.ui.util.widget.CalculatorKeyboard r0;
        android.inputmethodservice.KeyboardView $r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        int $i0;

        r0 := @this: org.gnucash.android.ui.util.widget.CalculatorKeyboard;

        $r1 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.inputmethodservice.KeyboardView mKeyboardView>;

        $r2 = virtualinvoke $r1.<android.inputmethodservice.KeyboardView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "haptic_feedback_enabled", 0);

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public android.content.Context getContext()
    {
        org.gnucash.android.ui.util.widget.CalculatorKeyboard r0;
        android.content.Context r1;

        r0 := @this: org.gnucash.android.ui.util.widget.CalculatorKeyboard;

        r1 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.content.Context mContext>;

        return r1;
    }
    public void hideCustomKeyboard()
    {
        org.gnucash.android.ui.util.widget.CalculatorKeyboard r0;
        android.inputmethodservice.KeyboardView $r1;

        r0 := @this: org.gnucash.android.ui.util.widget.CalculatorKeyboard;

        $r1 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.inputmethodservice.KeyboardView mKeyboardView>;

        virtualinvoke $r1.<android.inputmethodservice.KeyboardView: void setVisibility(int)>(8);

        $r1 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.inputmethodservice.KeyboardView mKeyboardView>;

        virtualinvoke $r1.<android.inputmethodservice.KeyboardView: void setEnabled(boolean)>(0);

        return;
    }
    public boolean isCustomKeyboardVisible()
    {
        org.gnucash.android.ui.util.widget.CalculatorKeyboard r0;
        int $i0;
        android.inputmethodservice.KeyboardView $r1;

        r0 := @this: org.gnucash.android.ui.util.widget.CalculatorKeyboard;

        $r1 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.inputmethodservice.KeyboardView mKeyboardView>;

        $i0 = virtualinvoke $r1.<android.inputmethodservice.KeyboardView: int getVisibility()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean onBackPressed()
    {
        org.gnucash.android.ui.util.widget.CalculatorKeyboard r0;
        boolean $z0;

        r0 := @this: org.gnucash.android.ui.util.widget.CalculatorKeyboard;

        $z0 = virtualinvoke r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: boolean isCustomKeyboardVisible()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: void hideCustomKeyboard()>();

        return 1;

     label1:
        return 0;
    }
    public void showCustomKeyboard(android.view.View)
    {
        org.gnucash.android.ui.util.widget.CalculatorKeyboard r0;
        android.view.View $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.view.inputmethod.InputMethodManager $r4;
        android.os.IBinder $r5;
        android.inputmethodservice.KeyboardView $r6;

        r0 := @this: org.gnucash.android.ui.util.widget.CalculatorKeyboard;

        $r1 := @parameter0: android.view.View;

        if $r1 == null goto label1;

        $r2 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r4 = (android.view.inputmethod.InputMethodManager) $r3;

        $r5 = virtualinvoke $r1.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke $r4.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r5, 0);

     label1:
        $r6 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.inputmethodservice.KeyboardView mKeyboardView>;

        virtualinvoke $r6.<android.inputmethodservice.KeyboardView: void setVisibility(int)>(0);

        $r6 = r0.<org.gnucash.android.ui.util.widget.CalculatorKeyboard: android.inputmethodservice.KeyboardView mKeyboardView>;

        virtualinvoke $r6.<android.inputmethodservice.KeyboardView: void setEnabled(boolean)>(1);

        return;
    }
