org.gnucash.android.ui.util.RecurrenceParser extends java.lang.Object
public static final long DAY_MILLIS
public static final long MINUTE_MILLIS
public static final long MONTH_MILLIS
public static final long SECOND_MILLIS
public static final long WEEK_MILLIS
public static final long YEAR_MILLIS
    public void <init>()
    {
        org.gnucash.android.ui.util.RecurrenceParser r0;

        r0 := @this: org.gnucash.android.ui.util.RecurrenceParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static int day2CalendarDay(int)
    {
        int $i0;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 65536: goto label2;
            case 131072: goto label3;
            case 262144: goto label4;
            case 524288: goto label5;
            case 1048576: goto label6;
            case 2097152: goto label7;
            case 4194304: goto label8;
            default: goto label1;
        };

     label1:
        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad day of week: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return 3;

     label5:
        return 4;

     label6:
        return 5;

     label7:
        return 6;

     label8:
        return 7;
    }
    private static java.util.Calendar nextDayOfWeek(int)
    {
        int $i0, $i1;
        java.util.Calendar $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $i1 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(7);

        $i0 = $i0 - $i1;

        if $i0 > 0 goto label1;

        $i0 = $i0 + 7;

     label1:
        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(5, $i0);

        return $r0;
    }
    public static java.util.List parse(com.codetroopers.betterpickers.recurrencepicker.EventRecurrence, org.gnucash.android.model.ScheduledAction$ActionType)
    {
        com.codetroopers.betterpickers.recurrencepicker.EventRecurrence $r0;
        org.gnucash.android.model.ScheduledAction$ActionType $r1;
        int[] r2;
        int i0, i1, i3;
        java.util.ArrayList r3;
        long l2, $l4;
        org.gnucash.android.model.ScheduledAction r4;
        java.util.Calendar $r5;

        $r0 := @parameter0: com.codetroopers.betterpickers.recurrencepicker.EventRecurrence;

        $r1 := @parameter1: org.gnucash.android.model.ScheduledAction$ActionType;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        if $r0 != null goto label01;

        return r3;

     label01:
        i1 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int freq>;

        lookupswitch(i1)
        {
            case 4: goto label03;
            case 5: goto label06;
            case 6: goto label10;
            case 7: goto label13;
            default: goto label02;
        };

     label02:
        return r3;

     label03:
        i1 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int interval>;

        if i1 != 0 goto label05;

        l2 = 86400000L;

     label04:
        r4 = new org.gnucash.android.model.ScheduledAction;

        specialinvoke r4.<org.gnucash.android.model.ScheduledAction: void <init>(org.gnucash.android.model.ScheduledAction$ActionType)>($r1);

        virtualinvoke r4.<org.gnucash.android.model.ScheduledAction: void setPeriod(long)>(l2);

        staticinvoke <org.gnucash.android.ui.util.RecurrenceParser: void parseEndTime(com.codetroopers.betterpickers.recurrencepicker.EventRecurrence,org.gnucash.android.model.ScheduledAction)>($r0, r4);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4);

        return r3;

     label05:
        i1 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int interval>;

        l2 = (long) i1;

        l2 = l2 * 86400000L;

        goto label04;

     label06:
        i1 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int interval>;

        if i1 != 0 goto label09;

        l2 = 604800000L;

     label07:
        r2 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int[] byday>;

        i1 = lengthof r2;

        i3 = 0;

     label08:
        if i3 >= i1 goto label16;

        i0 = r2[i3];

        r4 = new org.gnucash.android.model.ScheduledAction;

        specialinvoke r4.<org.gnucash.android.model.ScheduledAction: void <init>(org.gnucash.android.model.ScheduledAction$ActionType)>($r1);

        virtualinvoke r4.<org.gnucash.android.model.ScheduledAction: void setPeriod(long)>(l2);

        i0 = staticinvoke <org.gnucash.android.ui.util.RecurrenceParser: int day2CalendarDay(int)>(i0);

        $r5 = staticinvoke <org.gnucash.android.ui.util.RecurrenceParser: java.util.Calendar nextDayOfWeek(int)>(i0);

        $l4 = virtualinvoke $r5.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke r4.<org.gnucash.android.model.ScheduledAction: void setStartTime(long)>($l4);

        staticinvoke <org.gnucash.android.ui.util.RecurrenceParser: void parseEndTime(com.codetroopers.betterpickers.recurrencepicker.EventRecurrence,org.gnucash.android.model.ScheduledAction)>($r0, r4);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4);

        i3 = i3 + 1;

        goto label08;

     label09:
        i1 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int interval>;

        l2 = (long) i1;

        l2 = l2 * 604800000L;

        goto label07;

     label10:
        i1 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int interval>;

        if i1 != 0 goto label12;

        l2 = 2592000000L;

     label11:
        r4 = new org.gnucash.android.model.ScheduledAction;

        specialinvoke r4.<org.gnucash.android.model.ScheduledAction: void <init>(org.gnucash.android.model.ScheduledAction$ActionType)>($r1);

        virtualinvoke r4.<org.gnucash.android.model.ScheduledAction: void setPeriod(long)>(l2);

        $r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r5.<java.util.Calendar: void add(int,int)>(2, 1);

        l2 = virtualinvoke $r5.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke r4.<org.gnucash.android.model.ScheduledAction: void setStartTime(long)>(l2);

        staticinvoke <org.gnucash.android.ui.util.RecurrenceParser: void parseEndTime(com.codetroopers.betterpickers.recurrencepicker.EventRecurrence,org.gnucash.android.model.ScheduledAction)>($r0, r4);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4);

        return r3;

     label12:
        i1 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int interval>;

        l2 = (long) i1;

        l2 = l2 * 2592000000L;

        goto label11;

     label13:
        i1 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int interval>;

        if i1 != 0 goto label15;

        l2 = 31104000000L;

     label14:
        r4 = new org.gnucash.android.model.ScheduledAction;

        specialinvoke r4.<org.gnucash.android.model.ScheduledAction: void <init>(org.gnucash.android.model.ScheduledAction$ActionType)>($r1);

        virtualinvoke r4.<org.gnucash.android.model.ScheduledAction: void setPeriod(long)>(l2);

        $r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r5.<java.util.Calendar: void add(int,int)>(1, 1);

        l2 = virtualinvoke $r5.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke r4.<org.gnucash.android.model.ScheduledAction: void setStartTime(long)>(l2);

        staticinvoke <org.gnucash.android.ui.util.RecurrenceParser: void parseEndTime(com.codetroopers.betterpickers.recurrencepicker.EventRecurrence,org.gnucash.android.model.ScheduledAction)>($r0, r4);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4);

        return r3;

     label15:
        i1 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int interval>;

        l2 = (long) i1;

        l2 = l2 * 31104000000L;

        goto label14;

     label16:
        return r3;
    }
    private static void parseEndTime(com.codetroopers.betterpickers.recurrencepicker.EventRecurrence, org.gnucash.android.model.ScheduledAction)
    {
        com.codetroopers.betterpickers.recurrencepicker.EventRecurrence $r0;
        org.gnucash.android.model.ScheduledAction $r1;
        android.text.format.Time r2;
        java.lang.String $r3;
        int $i0;
        long $l1;

        $r0 := @parameter0: com.codetroopers.betterpickers.recurrencepicker.EventRecurrence;

        $r1 := @parameter1: org.gnucash.android.model.ScheduledAction;

        $r3 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: java.lang.String until>;

        if $r3 == null goto label1;

        $r3 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: java.lang.String until>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        r2 = new android.text.format.Time;

        specialinvoke r2.<android.text.format.Time: void <init>()>();

        $r3 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: java.lang.String until>;

        virtualinvoke r2.<android.text.format.Time: boolean parse(java.lang.String)>($r3);

        $l1 = virtualinvoke r2.<android.text.format.Time: long toMillis(boolean)>(0);

        virtualinvoke $r1.<org.gnucash.android.model.ScheduledAction: void setEndTime(long)>($l1);

        return;

     label1:
        $i0 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int count>;

        if $i0 <= 0 goto label2;

        $i0 = $r0.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: int count>;

        virtualinvoke $r1.<org.gnucash.android.model.ScheduledAction: void setTotalFrequency(int)>($i0);

     label2:
        return;
    }
