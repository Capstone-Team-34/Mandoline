org.gnucash.android.ui.export.ExportFormFragment extends android.support.v4.app.Fragment implements com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$OnRecurrenceSetListener com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialog$OnTimeSetListener
static final boolean $assertionsDisabled
private static final java.lang.String TAG
android.widget.CheckBox mDeleteAllCheckBox
android.widget.Spinner mDestinationSpinner
com.codetroopers.betterpickers.recurrencepicker.EventRecurrence mEventRecurrence
android.support.v7.widget.SwitchCompat mExportAllSwitch
android.widget.LinearLayout mExportDateLayout
private org.gnucash.android.export.ExportFormat mExportFormat
java.util.Calendar mExportStartCalendar
android.widget.TextView mExportStartDate
android.widget.TextView mExportStartTime
private org.gnucash.android.export.ExportParams$ExportTarget mExportTarget
android.widget.TextView mExportWarningTextView
android.widget.RadioButton mOfxRadioButton
android.widget.RadioButton mQifRadioButton
java.lang.String mRecurrenceRule
android.widget.TextView mRecurrenceTextView
android.widget.RadioButton mXmlRadioButton
    static void <clinit>()
    {
        boolean $z0;
        java.lang.Class $r0;

        $r0 = class "Lorg/gnucash/android/ui/export/ExportFormFragment;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <org.gnucash.android.ui.export.ExportFormFragment: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    public void <init>()
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        java.util.Calendar $r1;
        com.codetroopers.betterpickers.recurrencepicker.EventRecurrence $r2;
        org.gnucash.android.export.ExportFormat $r3;
        org.gnucash.android.export.ExportParams$ExportTarget $r4;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        specialinvoke r0.<android.support.v4.app.Fragment: void <init>()>();

        $r2 = new com.codetroopers.betterpickers.recurrencepicker.EventRecurrence;

        specialinvoke $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: void <init>()>();

        r0.<org.gnucash.android.ui.export.ExportFormFragment: com.codetroopers.betterpickers.recurrencepicker.EventRecurrence mEventRecurrence> = $r2;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0.<org.gnucash.android.ui.export.ExportFormFragment: java.util.Calendar mExportStartCalendar> = $r1;

        $r3 = <org.gnucash.android.export.ExportFormat: org.gnucash.android.export.ExportFormat QIF>;

        r0.<org.gnucash.android.ui.export.ExportFormFragment: org.gnucash.android.export.ExportFormat mExportFormat> = $r3;

        $r4 = <org.gnucash.android.export.ExportParams$ExportTarget: org.gnucash.android.export.ExportParams$ExportTarget SD_CARD>;

        r0.<org.gnucash.android.ui.export.ExportFormFragment: org.gnucash.android.export.ExportParams$ExportTarget mExportTarget> = $r4;

        return;
    }
    static org.gnucash.android.export.ExportParams$ExportTarget access$002(org.gnucash.android.ui.export.ExportFormFragment, org.gnucash.android.export.ExportParams$ExportTarget)
    {
        org.gnucash.android.ui.export.ExportFormFragment $r0;
        org.gnucash.android.export.ExportParams$ExportTarget $r1;

        $r0 := @parameter0: org.gnucash.android.ui.export.ExportFormFragment;

        $r1 := @parameter1: org.gnucash.android.export.ExportParams$ExportTarget;

        $r0.<org.gnucash.android.ui.export.ExportFormFragment: org.gnucash.android.export.ExportParams$ExportTarget mExportTarget> = $r1;

        return $r1;
    }
    private void bindViewListeners()
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        java.util.Date r1;
        org.gnucash.android.ui.export.ExportFormFragment$6 r2;
        android.support.v4.app.FragmentActivity $r3;
        android.widget.ArrayAdapter $r4;
        android.widget.Spinner $r5;
        org.gnucash.android.ui.export.ExportFormFragment$1 $r6;
        android.content.SharedPreferences $r7;
        java.lang.String $r8, $r20;
        int $i0;
        java.sql.Timestamp $r9;
        java.util.Calendar $r10;
        long $l1;
        android.widget.TextView $r11;
        java.text.DateFormat $r12;
        org.gnucash.android.ui.export.ExportFormFragment$2 $r13;
        org.gnucash.android.ui.export.ExportFormFragment$3 $r14;
        android.support.v7.widget.SwitchCompat $r15;
        org.gnucash.android.ui.export.ExportFormFragment$4 $r16;
        boolean $z0;
        android.widget.CheckBox $r17;
        org.gnucash.android.ui.export.ExportFormFragment$5 $r18;
        org.gnucash.android.export.ExportFormat $r19;
        android.view.View $r21;
        java.lang.AssertionError $r22;
        android.widget.RadioButton $r23;
        int[] $r24;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        $r3 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r4 = staticinvoke <android.widget.ArrayAdapter: android.widget.ArrayAdapter createFromResource(android.content.Context,int,int)>($r3, 2131165185, 17367048);

        virtualinvoke $r4.<android.widget.ArrayAdapter: void setDropDownViewResource(int)>(17367049);

        $r5 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.Spinner mDestinationSpinner>;

        virtualinvoke $r5.<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>($r4);

        $r5 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.Spinner mDestinationSpinner>;

        $r6 = new org.gnucash.android.ui.export.ExportFormFragment$1;

        specialinvoke $r6.<org.gnucash.android.ui.export.ExportFormFragment$1: void <init>(org.gnucash.android.ui.export.ExportFormFragment)>(r0);

        virtualinvoke $r5.<android.widget.Spinner: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>($r6);

        $r3 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r7 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r3);

        $r8 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: java.lang.String getString(int)>(2131296800);

        $i0 = interfaceinvoke $r7.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r8, 0);

        $r5 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.Spinner mDestinationSpinner>;

        virtualinvoke $r5.<android.widget.Spinner: void setSelection(int)>($i0);

        $r3 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r7 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r3);

        $r8 = <org.gnucash.android.export.Exporter: java.lang.String TIMESTAMP_ZERO>;

        $r8 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("last_export_time", $r8);

        $r9 = staticinvoke <java.sql.Timestamp: java.sql.Timestamp valueOf(java.lang.String)>($r8);

        $r10 = r0.<org.gnucash.android.ui.export.ExportFormFragment: java.util.Calendar mExportStartCalendar>;

        $l1 = virtualinvoke $r9.<java.sql.Timestamp: long getTime()>();

        virtualinvoke $r10.<java.util.Calendar: void setTimeInMillis(long)>($l1);

        r1 = new java.util.Date;

        $l1 = virtualinvoke $r9.<java.sql.Timestamp: long getTime()>();

        specialinvoke r1.<java.util.Date: void <init>(long)>($l1);

        $r11 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mExportStartDate>;

        $r12 = <org.gnucash.android.ui.transaction.TransactionFormFragment: java.text.DateFormat DATE_FORMATTER>;

        $r8 = virtualinvoke $r12.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r1);

        virtualinvoke $r11.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);

        $r11 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mExportStartTime>;

        $r12 = <org.gnucash.android.ui.transaction.TransactionFormFragment: java.text.DateFormat TIME_FORMATTER>;

        $r8 = virtualinvoke $r12.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r1);

        virtualinvoke $r11.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);

        $r11 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mExportStartDate>;

        $r13 = new org.gnucash.android.ui.export.ExportFormFragment$2;

        specialinvoke $r13.<org.gnucash.android.ui.export.ExportFormFragment$2: void <init>(org.gnucash.android.ui.export.ExportFormFragment)>(r0);

        virtualinvoke $r11.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r13);

        $r11 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mExportStartTime>;

        $r14 = new org.gnucash.android.ui.export.ExportFormFragment$3;

        specialinvoke $r14.<org.gnucash.android.ui.export.ExportFormFragment$3: void <init>(org.gnucash.android.ui.export.ExportFormFragment)>(r0);

        virtualinvoke $r11.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r14);

        $r3 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r7 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r3);

        $r15 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v7.widget.SwitchCompat mExportAllSwitch>;

        $r16 = new org.gnucash.android.ui.export.ExportFormFragment$4;

        specialinvoke $r16.<org.gnucash.android.ui.export.ExportFormFragment$4: void <init>(org.gnucash.android.ui.export.ExportFormFragment)>(r0);

        virtualinvoke $r15.<android.support.v7.widget.SwitchCompat: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>($r16);

        $r15 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v7.widget.SwitchCompat mExportAllSwitch>;

        $r8 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: java.lang.String getString(int)>(2131296795);

        $z0 = interfaceinvoke $r7.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>($r8, 0);

        virtualinvoke $r15.<android.support.v7.widget.SwitchCompat: void setChecked(boolean)>($z0);

        $r17 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.CheckBox mDeleteAllCheckBox>;

        $r8 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: java.lang.String getString(int)>(2131296791);

        $z0 = interfaceinvoke $r7.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>($r8, 0);

        virtualinvoke $r17.<android.widget.CheckBox: void setChecked(boolean)>($z0);

        $r11 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mRecurrenceTextView>;

        $r18 = new org.gnucash.android.ui.export.ExportFormFragment$5;

        specialinvoke $r18.<org.gnucash.android.ui.export.ExportFormFragment$5: void <init>(org.gnucash.android.ui.export.ExportFormFragment)>(r0);

        virtualinvoke $r11.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r18);

        $r8 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: java.lang.String getString(int)>(2131296787);

        $r19 = <org.gnucash.android.export.ExportFormat: org.gnucash.android.export.ExportFormat QIF>;

        $r20 = virtualinvoke $r19.<org.gnucash.android.export.ExportFormat: java.lang.String name()>();

        $r8 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r8, $r20);

        $r19 = staticinvoke <org.gnucash.android.export.ExportFormat: org.gnucash.android.export.ExportFormat valueOf(java.lang.String)>($r8);

        r0.<org.gnucash.android.ui.export.ExportFormFragment: org.gnucash.android.export.ExportFormat mExportFormat> = $r19;

        r2 = new org.gnucash.android.ui.export.ExportFormFragment$6;

        specialinvoke r2.<org.gnucash.android.ui.export.ExportFormFragment$6: void <init>(org.gnucash.android.ui.export.ExportFormFragment)>(r0);

        $r21 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.view.View getView()>();

        $z0 = <org.gnucash.android.ui.export.ExportFormFragment: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r21 != null goto label1;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label1:
        $r23 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.RadioButton mOfxRadioButton>;

        virtualinvoke $r23.<android.widget.RadioButton: void setOnClickListener(android.view.View$OnClickListener)>(r2);

        $r23 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.RadioButton mQifRadioButton>;

        virtualinvoke $r23.<android.widget.RadioButton: void setOnClickListener(android.view.View$OnClickListener)>(r2);

        $r23 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.RadioButton mXmlRadioButton>;

        virtualinvoke $r23.<android.widget.RadioButton: void setOnClickListener(android.view.View$OnClickListener)>(r2);

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String toUpperCase()>();

        $r19 = staticinvoke <org.gnucash.android.export.ExportFormat: org.gnucash.android.export.ExportFormat valueOf(java.lang.String)>($r8);

        $r24 = <org.gnucash.android.ui.export.ExportFormFragment$7: int[] $SwitchMap$org$gnucash$android$export$ExportFormat>;

        $i0 = virtualinvoke $r19.<org.gnucash.android.export.ExportFormat: int ordinal()>();

        $i0 = $r24[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label2;
        };

     label2:
        $z0 = staticinvoke <org.gnucash.android.app.GnuCashApplication: boolean isDoubleEntryEnabled()>();

        if $z0 == 0 goto label6;

        $r23 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.RadioButton mOfxRadioButton>;

        virtualinvoke $r23.<android.widget.RadioButton: void setVisibility(int)>(8);

        return;

     label3:
        $r23 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.RadioButton mQifRadioButton>;

        virtualinvoke $r23.<android.widget.RadioButton: boolean performClick()>();

        goto label2;

     label4:
        $r23 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.RadioButton mOfxRadioButton>;

        virtualinvoke $r23.<android.widget.RadioButton: boolean performClick()>();

        goto label2;

     label5:
        $r23 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.RadioButton mXmlRadioButton>;

        virtualinvoke $r23.<android.widget.RadioButton: boolean performClick()>();

        goto label2;

     label6:
        $r23 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.RadioButton mXmlRadioButton>;

        virtualinvoke $r23.<android.widget.RadioButton: void setVisibility(int)>(8);

        return;
    }
    private void getSDWritePermission()
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        int $i0;
        android.support.v4.app.FragmentActivity $r1;
        java.lang.String[] $r2;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $i0 = virtualinvoke $r1.<android.support.v4.app.FragmentActivity: int checkSelfPermission(java.lang.String)>("android.permission.WRITE_EXTERNAL_STORAGE");

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "android.permission.WRITE_EXTERNAL_STORAGE";

        $r2[1] = "android.permission.READ_EXTERNAL_STORAGE";

        virtualinvoke $r1.<android.support.v4.app.FragmentActivity: void requestPermissions(java.lang.String[],int)>($r2, 171);

     label1:
        return;
    }
    private void startExport()
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        org.gnucash.android.export.ExportParams r1;
        org.gnucash.android.export.ExportFormat $r2;
        android.support.v7.widget.SwitchCompat $r3;
        boolean $z0;
        java.lang.String $r4;
        java.sql.Timestamp $r5;
        org.gnucash.android.export.ExportParams$ExportTarget $r6;
        android.widget.CheckBox $r7;
        com.codetroopers.betterpickers.recurrencepicker.EventRecurrence $r8;
        org.gnucash.android.model.ScheduledAction$ActionType $r9;
        java.util.List $r10;
        java.util.Iterator $r11;
        java.lang.Object $r12;
        org.gnucash.android.model.ScheduledAction r13;
        org.gnucash.android.db.ScheduledActionDbAdapter $r14;
        java.util.Calendar $r15;
        long $l0;
        org.gnucash.android.export.ExportAsyncTask $r16;
        android.support.v4.app.FragmentActivity $r17;
        org.gnucash.android.export.ExportParams[] $r18;
        android.widget.Spinner $r19;
        int $i1;
        android.content.SharedPreferences $r20;
        android.content.SharedPreferences$Editor $r21;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        r1 = new org.gnucash.android.export.ExportParams;

        $r2 = r0.<org.gnucash.android.ui.export.ExportFormFragment: org.gnucash.android.export.ExportFormat mExportFormat>;

        specialinvoke r1.<org.gnucash.android.export.ExportParams: void <init>(org.gnucash.android.export.ExportFormat)>($r2);

        $r3 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v7.widget.SwitchCompat mExportAllSwitch>;

        $z0 = virtualinvoke $r3.<android.support.v7.widget.SwitchCompat: boolean isChecked()>();

        if $z0 == 0 goto label3;

        $r4 = <org.gnucash.android.export.Exporter: java.lang.String TIMESTAMP_ZERO>;

        $r5 = staticinvoke <java.sql.Timestamp: java.sql.Timestamp valueOf(java.lang.String)>($r4);

        virtualinvoke r1.<org.gnucash.android.export.ExportParams: void setExportStartTime(java.sql.Timestamp)>($r5);

     label1:
        $r6 = r0.<org.gnucash.android.ui.export.ExportFormFragment: org.gnucash.android.export.ExportParams$ExportTarget mExportTarget>;

        virtualinvoke r1.<org.gnucash.android.export.ExportParams: void setExportTarget(org.gnucash.android.export.ExportParams$ExportTarget)>($r6);

        $r7 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.CheckBox mDeleteAllCheckBox>;

        $z0 = virtualinvoke $r7.<android.widget.CheckBox: boolean isChecked()>();

        virtualinvoke r1.<org.gnucash.android.export.ExportParams: void setDeleteTransactionsAfterExport(boolean)>($z0);

        $r8 = r0.<org.gnucash.android.ui.export.ExportFormFragment: com.codetroopers.betterpickers.recurrencepicker.EventRecurrence mEventRecurrence>;

        $r9 = <org.gnucash.android.model.ScheduledAction$ActionType: org.gnucash.android.model.ScheduledAction$ActionType BACKUP>;

        $r10 = staticinvoke <org.gnucash.android.ui.util.RecurrenceParser: java.util.List parse(com.codetroopers.betterpickers.recurrencepicker.EventRecurrence,org.gnucash.android.model.ScheduledAction$ActionType)>($r8, $r9);

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.gnucash.android.model.ScheduledAction) $r12;

        $r4 = virtualinvoke r1.<org.gnucash.android.export.ExportParams: java.lang.String toCsv()>();

        virtualinvoke r13.<org.gnucash.android.model.ScheduledAction: void setTag(java.lang.String)>($r4);

        $r4 = staticinvoke <org.gnucash.android.model.BaseModel: java.lang.String generateUID()>();

        virtualinvoke r13.<org.gnucash.android.model.ScheduledAction: void setActionUID(java.lang.String)>($r4);

        $r14 = staticinvoke <org.gnucash.android.db.ScheduledActionDbAdapter: org.gnucash.android.db.ScheduledActionDbAdapter getInstance()>();

        virtualinvoke $r14.<org.gnucash.android.db.ScheduledActionDbAdapter: void addRecord(org.gnucash.android.model.BaseModel)>(r13);

        goto label2;

     label3:
        $r5 = new java.sql.Timestamp;

        $r15 = r0.<org.gnucash.android.ui.export.ExportFormFragment: java.util.Calendar mExportStartCalendar>;

        $l0 = virtualinvoke $r15.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke $r5.<java.sql.Timestamp: void <init>(long)>($l0);

        virtualinvoke r1.<org.gnucash.android.export.ExportParams: void setExportStartTime(java.sql.Timestamp)>($r5);

        goto label1;

     label4:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ExportFormFragment", "Commencing async export of transactions");

        $r16 = new org.gnucash.android.export.ExportAsyncTask;

        $r17 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        specialinvoke $r16.<org.gnucash.android.export.ExportAsyncTask: void <init>(android.content.Context)>($r17);

        $r18 = newarray (org.gnucash.android.export.ExportParams)[1];

        $r18[0] = r1;

        virtualinvoke $r16.<org.gnucash.android.export.ExportAsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r18);

        $r19 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.Spinner mDestinationSpinner>;

        $i1 = virtualinvoke $r19.<android.widget.Spinner: int getSelectedItemPosition()>();

        $r17 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r20 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r17);

        $r21 = interfaceinvoke $r20.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: java.lang.String getString(int)>(2131296800);

        $r21 = interfaceinvoke $r21.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r4, $i1);

        interfaceinvoke $r21.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }
    public void onActivityCreated(android.os.Bundle)
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        android.os.Bundle $r1;
        android.support.v4.app.FragmentActivity $r2;
        android.support.v7.app.AppCompatActivity $r3;
        android.support.v7.app.ActionBar $r4;
        boolean $z0;
        java.lang.AssertionError $r5;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)>($r1);

        $r2 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r3 = (android.support.v7.app.AppCompatActivity) $r2;

        $r4 = virtualinvoke $r3.<android.support.v7.app.AppCompatActivity: android.support.v7.app.ActionBar getSupportActionBar()>();

        $z0 = <org.gnucash.android.ui.export.ExportFormFragment: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r4 != null goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        virtualinvoke $r4.<android.support.v7.app.ActionBar: void setTitle(int)>(2131296475);

        virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: void setHasOptionsMenu(boolean)>(1);

        specialinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: void getSDWritePermission()>();

        return;
    }
    public void onActivityResult(int, int, android.content.Intent)
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        int $i0, $i1;
        android.content.Intent $r1;
        com.google.android.gms.common.api.GoogleApiClient $r2;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.content.Intent;

        if $i0 != 18 goto label1;

        if $i1 != -1 goto label1;

        $r2 = <org.gnucash.android.ui.settings.SettingsActivity: com.google.android.gms.common.api.GoogleApiClient mGoogleApiClient>;

        interfaceinvoke $r2.<com.google.android.gms.common.api.GoogleApiClient: void connect()>();

     label1:
        return;
    }
    public void onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        android.view.Menu $r1;
        android.view.MenuInflater $r2;
        android.view.MenuItem $r3;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        $r1 := @parameter0: android.view.Menu;

        $r2 := @parameter1: android.view.MenuInflater;

        virtualinvoke $r2.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(2131755011, $r1);

        $r3 = interfaceinvoke $r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131689940);

        interfaceinvoke $r3.<android.view.MenuItem: android.view.MenuItem setTitle(int)>(2131296264);

        return;
    }
    public android.view.View onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        android.view.LayoutInflater $r1;
        android.view.ViewGroup $r2;
        android.os.Bundle $r3;
        android.view.View $r4;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        $r1 := @parameter0: android.view.LayoutInflater;

        $r2 := @parameter1: android.view.ViewGroup;

        $r3 := @parameter2: android.os.Bundle;

        $r4 = virtualinvoke $r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2130903105, $r2, 0);

        staticinvoke <butterknife.ButterKnife: void bind(java.lang.Object,android.view.View)>(r0, $r4);

        specialinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: void bindViewListeners()>();

        return $r4;
    }
    public void onDateSet(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog, int, int, int)
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog $r1;
        int $i0, $i1, $i2;
        java.util.GregorianCalendar r2;
        android.widget.TextView $r3;
        java.text.DateFormat $r4;
        java.util.Date $r5;
        java.lang.String $r6;
        java.util.Calendar $r7;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        r2 = new java.util.GregorianCalendar;

        specialinvoke r2.<java.util.GregorianCalendar: void <init>(int,int,int)>($i0, $i1, $i2);

        $r3 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mExportStartDate>;

        $r4 = <org.gnucash.android.ui.transaction.TransactionFormFragment: java.text.DateFormat DATE_FORMATTER>;

        $r5 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();

        $r6 = virtualinvoke $r4.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r5);

        virtualinvoke $r3.<android.widget.TextView: void setText(java.lang.CharSequence)>($r6);

        $r7 = r0.<org.gnucash.android.ui.export.ExportFormFragment: java.util.Calendar mExportStartCalendar>;

        virtualinvoke $r7.<java.util.Calendar: void set(int,int)>(1, $i0);

        $r7 = r0.<org.gnucash.android.ui.export.ExportFormFragment: java.util.Calendar mExportStartCalendar>;

        virtualinvoke $r7.<java.util.Calendar: void set(int,int)>(2, $i1);

        $r7 = r0.<org.gnucash.android.ui.export.ExportFormFragment: java.util.Calendar mExportStartCalendar>;

        virtualinvoke $r7.<java.util.Calendar: void set(int,int)>(5, $i2);

        return;
    }
    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        android.view.MenuItem $r1;
        int $i0;
        boolean $z0;
        android.support.v4.app.FragmentActivity $r2;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        $r1 := @parameter0: android.view.MenuItem;

        $i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 16908332: goto label3;
            case 2131689940: goto label2;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke r0.<android.support.v4.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)>($r1);

        return $z0;

     label2:
        specialinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: void startExport()>();

        return 1;

     label3:
        $r2 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        virtualinvoke $r2.<android.support.v4.app.FragmentActivity: void finish()>();

        return 1;
    }
    public void onPause()
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        android.support.v4.app.FragmentActivity $r1;
        android.content.SharedPreferences $r2;
        android.content.SharedPreferences$Editor $r3;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        specialinvoke r0.<android.support.v4.app.Fragment: void onPause()>();

        $r1 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r1);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("skip_passcode_screen", 1);

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }
    public void onRadioButtonClicked(android.view.View)
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        android.view.View $r1;
        int $i0;
        org.gnucash.android.export.ExportFormat $r2;
        boolean $z0;
        android.widget.TextView $r3;
        android.support.v4.app.FragmentActivity $r4;
        java.lang.String $r5;
        android.widget.LinearLayout $r6;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getId()>();

        lookupswitch($i0)
        {
            case 2131689697: goto label5;
            case 2131689698: goto label2;
            case 2131689699: goto label8;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r2 = <org.gnucash.android.export.ExportFormat: org.gnucash.android.export.ExportFormat OFX>;

        r0.<org.gnucash.android.ui.export.ExportFormFragment: org.gnucash.android.export.ExportFormat mExportFormat> = $r2;

        $z0 = staticinvoke <org.gnucash.android.app.GnuCashApplication: boolean isDoubleEntryEnabled()>();

        if $z0 == 0 goto label4;

        $r3 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mExportWarningTextView>;

        $r4 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r5 = virtualinvoke $r4.<android.support.v4.app.FragmentActivity: java.lang.String getString(int)>(2131296282);

        virtualinvoke $r3.<android.widget.TextView: void setText(java.lang.CharSequence)>($r5);

        $r3 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mExportWarningTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setVisibility(int)>(0);

     label3:
        $r6 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.LinearLayout mExportDateLayout>;

        virtualinvoke $r6.<android.widget.LinearLayout: void setVisibility(int)>(0);

        return;

     label4:
        $r3 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mExportWarningTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setVisibility(int)>(8);

        goto label3;

     label5:
        $r2 = <org.gnucash.android.export.ExportFormat: org.gnucash.android.export.ExportFormat QIF>;

        r0.<org.gnucash.android.ui.export.ExportFormFragment: org.gnucash.android.export.ExportFormat mExportFormat> = $r2;

        $z0 = staticinvoke <org.gnucash.android.app.GnuCashApplication: boolean isDoubleEntryEnabled()>();

        if $z0 == 0 goto label7;

        $r3 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mExportWarningTextView>;

        $r4 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r5 = virtualinvoke $r4.<android.support.v4.app.FragmentActivity: java.lang.String getString(int)>(2131296283);

        virtualinvoke $r3.<android.widget.TextView: void setText(java.lang.CharSequence)>($r5);

        $r3 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mExportWarningTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setVisibility(int)>(0);

     label6:
        $r6 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.LinearLayout mExportDateLayout>;

        virtualinvoke $r6.<android.widget.LinearLayout: void setVisibility(int)>(0);

        return;

     label7:
        $r3 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mExportWarningTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setVisibility(int)>(8);

        goto label6;

     label8:
        $r2 = <org.gnucash.android.export.ExportFormat: org.gnucash.android.export.ExportFormat XML>;

        r0.<org.gnucash.android.ui.export.ExportFormFragment: org.gnucash.android.export.ExportFormat mExportFormat> = $r2;

        $r3 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mExportWarningTextView>;

        virtualinvoke $r3.<android.widget.TextView: void setText(int)>(2131296284);

        $r6 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.LinearLayout mExportDateLayout>;

        virtualinvoke $r6.<android.widget.LinearLayout: void setVisibility(int)>(8);

        return;
    }
    public void onRecurrenceSet(java.lang.String)
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        java.lang.String $r1, $r3;
        com.codetroopers.betterpickers.recurrencepicker.EventRecurrence $r2;
        android.support.v4.app.FragmentActivity $r4;
        android.content.res.Resources $r5;
        android.widget.TextView $r6;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        $r1 := @parameter0: java.lang.String;

        r0.<org.gnucash.android.ui.export.ExportFormFragment: java.lang.String mRecurrenceRule> = $r1;

        $r1 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: java.lang.String getString(int)>(2131296373);

        $r3 = r0.<org.gnucash.android.ui.export.ExportFormFragment: java.lang.String mRecurrenceRule>;

        if $r3 == null goto label1;

        $r2 = r0.<org.gnucash.android.ui.export.ExportFormFragment: com.codetroopers.betterpickers.recurrencepicker.EventRecurrence mEventRecurrence>;

        $r1 = r0.<org.gnucash.android.ui.export.ExportFormFragment: java.lang.String mRecurrenceRule>;

        virtualinvoke $r2.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence: void parse(java.lang.String)>($r1);

        $r4 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.support.v4.app.FragmentActivity getActivity()>();

        $r5 = virtualinvoke r0.<org.gnucash.android.ui.export.ExportFormFragment: android.content.res.Resources getResources()>();

        $r2 = r0.<org.gnucash.android.ui.export.ExportFormFragment: com.codetroopers.betterpickers.recurrencepicker.EventRecurrence mEventRecurrence>;

        $r1 = staticinvoke <com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter: java.lang.String getRepeatString(android.content.Context,android.content.res.Resources,com.codetroopers.betterpickers.recurrencepicker.EventRecurrence,boolean)>($r4, $r5, $r2, 1);

     label1:
        $r6 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mRecurrenceTextView>;

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

        return;
    }
    public void onTimeSet(com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialog, int, int)
    {
        org.gnucash.android.ui.export.ExportFormFragment r0;
        com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialog $r1;
        int $i0, $i1;
        java.util.GregorianCalendar r2;
        android.widget.TextView $r3;
        java.text.DateFormat $r4;
        java.util.Date $r5;
        java.lang.String $r6;
        java.util.Calendar $r7;

        r0 := @this: org.gnucash.android.ui.export.ExportFormFragment;

        $r1 := @parameter0: com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialog;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 = new java.util.GregorianCalendar;

        specialinvoke r2.<java.util.GregorianCalendar: void <init>(int,int,int,int,int)>(0, 0, 0, $i0, $i1);

        $r3 = r0.<org.gnucash.android.ui.export.ExportFormFragment: android.widget.TextView mExportStartTime>;

        $r4 = <org.gnucash.android.ui.transaction.TransactionFormFragment: java.text.DateFormat TIME_FORMATTER>;

        $r5 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();

        $r6 = virtualinvoke $r4.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r5);

        virtualinvoke $r3.<android.widget.TextView: void setText(java.lang.CharSequence)>($r6);

        $r7 = r0.<org.gnucash.android.ui.export.ExportFormFragment: java.util.Calendar mExportStartCalendar>;

        virtualinvoke $r7.<java.util.Calendar: void set(int,int)>(11, $i0);

        $r7 = r0.<org.gnucash.android.ui.export.ExportFormFragment: java.util.Calendar mExportStartCalendar>;

        virtualinvoke $r7.<java.util.Calendar: void set(int,int)>(12, $i1);

        return;
    }
