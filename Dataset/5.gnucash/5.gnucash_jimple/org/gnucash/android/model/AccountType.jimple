org.gnucash.android.model.AccountType extends java.lang.Enum
private static final org.gnucash.android.model.AccountType[] $VALUES
public static final enum org.gnucash.android.model.AccountType ASSET
public static final enum org.gnucash.android.model.AccountType BANK
public static final enum org.gnucash.android.model.AccountType CASH
public static final enum org.gnucash.android.model.AccountType CREDIT
public static final enum org.gnucash.android.model.AccountType CURRENCY
public static final enum org.gnucash.android.model.AccountType EQUITY
public static final enum org.gnucash.android.model.AccountType EXPENSE
public static final enum org.gnucash.android.model.AccountType INCOME
public static final enum org.gnucash.android.model.AccountType LIABILITY
public static final enum org.gnucash.android.model.AccountType MUTUAL
public static final enum org.gnucash.android.model.AccountType PAYABLE
public static final enum org.gnucash.android.model.AccountType RECEIVABLE
public static final enum org.gnucash.android.model.AccountType ROOT
public static final enum org.gnucash.android.model.AccountType STOCK
public static final enum org.gnucash.android.model.AccountType TRADING
private org.gnucash.android.model.TransactionType mNormalBalance
    static void <clinit>()
    {
        org.gnucash.android.model.AccountType $r0;
        org.gnucash.android.model.TransactionType $r1;
        org.gnucash.android.model.AccountType[] $r2;

        $r0 = new org.gnucash.android.model.AccountType;

        $r1 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int,org.gnucash.android.model.TransactionType)>("CASH", 0, $r1);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType CASH> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        $r1 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int,org.gnucash.android.model.TransactionType)>("BANK", 1, $r1);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType BANK> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int)>("CREDIT", 2);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType CREDIT> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        $r1 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int,org.gnucash.android.model.TransactionType)>("ASSET", 3, $r1);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType ASSET> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int)>("LIABILITY", 4);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType LIABILITY> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int)>("INCOME", 5);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType INCOME> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        $r1 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int,org.gnucash.android.model.TransactionType)>("EXPENSE", 6, $r1);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType EXPENSE> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int)>("PAYABLE", 7);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType PAYABLE> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        $r1 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int,org.gnucash.android.model.TransactionType)>("RECEIVABLE", 8, $r1);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType RECEIVABLE> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int)>("EQUITY", 9);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType EQUITY> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int)>("CURRENCY", 10);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType CURRENCY> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        $r1 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int,org.gnucash.android.model.TransactionType)>("STOCK", 11, $r1);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType STOCK> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        $r1 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int,org.gnucash.android.model.TransactionType)>("MUTUAL", 12, $r1);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType MUTUAL> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int)>("TRADING", 13);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType TRADING> = $r0;

        $r0 = new org.gnucash.android.model.AccountType;

        specialinvoke $r0.<org.gnucash.android.model.AccountType: void <init>(java.lang.String,int)>("ROOT", 14);

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType ROOT> = $r0;

        $r2 = newarray (org.gnucash.android.model.AccountType)[15];

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType CASH>;

        $r2[0] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType BANK>;

        $r2[1] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType CREDIT>;

        $r2[2] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType ASSET>;

        $r2[3] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType LIABILITY>;

        $r2[4] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType INCOME>;

        $r2[5] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType EXPENSE>;

        $r2[6] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType PAYABLE>;

        $r2[7] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType RECEIVABLE>;

        $r2[8] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType EQUITY>;

        $r2[9] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType CURRENCY>;

        $r2[10] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType STOCK>;

        $r2[11] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType MUTUAL>;

        $r2[12] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType TRADING>;

        $r2[13] = $r0;

        $r0 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType ROOT>;

        $r2[14] = $r0;

        <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType[] $VALUES> = $r2;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        org.gnucash.android.model.AccountType r0;
        java.lang.String $r1;
        int $i0;
        org.gnucash.android.model.TransactionType $r2;

        r0 := @this: org.gnucash.android.model.AccountType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        $r2 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        r0.<org.gnucash.android.model.AccountType: org.gnucash.android.model.TransactionType mNormalBalance> = $r2;

        return;
    }
    private void <init>(java.lang.String, int, org.gnucash.android.model.TransactionType)
    {
        org.gnucash.android.model.AccountType r0;
        java.lang.String $r1;
        int $i0;
        org.gnucash.android.model.TransactionType $r2, $r3;

        r0 := @this: org.gnucash.android.model.AccountType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.gnucash.android.model.TransactionType;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        $r3 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        r0.<org.gnucash.android.model.AccountType: org.gnucash.android.model.TransactionType mNormalBalance> = $r3;

        r0.<org.gnucash.android.model.AccountType: org.gnucash.android.model.TransactionType mNormalBalance> = $r2;

        return;
    }
    public static org.gnucash.android.model.AccountType valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.gnucash.android.model.AccountType $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/gnucash/android/model/AccountType;", $r0);

        $r2 = (org.gnucash.android.model.AccountType) $r1;

        return $r2;
    }
    public static org.gnucash.android.model.AccountType[] values()
    {
        java.lang.Object $r0;
        org.gnucash.android.model.AccountType[] $r1;

        $r1 = <org.gnucash.android.model.AccountType: org.gnucash.android.model.AccountType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.gnucash.android.model.AccountType[]) $r0;

        return $r1;
    }
    public org.gnucash.android.model.TransactionType getNormalBalanceType()
    {
        org.gnucash.android.model.AccountType r0;
        org.gnucash.android.model.TransactionType r1;

        r0 := @this: org.gnucash.android.model.AccountType;

        r1 = r0.<org.gnucash.android.model.AccountType: org.gnucash.android.model.TransactionType mNormalBalance>;

        return r1;
    }
    public boolean hasDebitNormalBalance()
    {
        org.gnucash.android.model.AccountType r0;
        org.gnucash.android.model.TransactionType $r1, $r2;

        r0 := @this: org.gnucash.android.model.AccountType;

        $r2 = r0.<org.gnucash.android.model.AccountType: org.gnucash.android.model.TransactionType mNormalBalance>;

        $r1 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
