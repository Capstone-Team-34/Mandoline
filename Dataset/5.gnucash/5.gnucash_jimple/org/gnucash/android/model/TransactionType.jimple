org.gnucash.android.model.TransactionType extends java.lang.Enum
private static final org.gnucash.android.model.TransactionType[] $VALUES
public static final enum org.gnucash.android.model.TransactionType CREDIT
public static final enum org.gnucash.android.model.TransactionType DEBIT
private org.gnucash.android.model.TransactionType opposite
    static void <clinit>()
    {
        org.gnucash.android.model.TransactionType $r0, $r2;
        org.gnucash.android.model.TransactionType[] $r1;

        $r0 = new org.gnucash.android.model.TransactionType;

        specialinvoke $r0.<org.gnucash.android.model.TransactionType: void <init>(java.lang.String,int)>("DEBIT", 0);

        <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT> = $r0;

        $r0 = new org.gnucash.android.model.TransactionType;

        specialinvoke $r0.<org.gnucash.android.model.TransactionType: void <init>(java.lang.String,int)>("CREDIT", 1);

        <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT> = $r0;

        $r1 = newarray (org.gnucash.android.model.TransactionType)[2];

        $r0 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        $r1[0] = $r0;

        $r0 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        $r1[1] = $r0;

        <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType[] $VALUES> = $r1;

        $r0 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        $r2 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        $r0.<org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType opposite> = $r2;

        $r0 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        $r2 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        $r0.<org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType opposite> = $r2;

        return;
    }
    private void <init>(java.lang.String, int)
    {
        org.gnucash.android.model.TransactionType r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.gnucash.android.model.TransactionType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }
    public static org.gnucash.android.model.TransactionType valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.gnucash.android.model.TransactionType $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/gnucash/android/model/TransactionType;", $r0);

        $r2 = (org.gnucash.android.model.TransactionType) $r1;

        return $r2;
    }
    public static org.gnucash.android.model.TransactionType[] values()
    {
        java.lang.Object $r0;
        org.gnucash.android.model.TransactionType[] $r1;

        $r1 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.gnucash.android.model.TransactionType[]) $r0;

        return $r1;
    }
    public org.gnucash.android.model.TransactionType invert()
    {
        org.gnucash.android.model.TransactionType r0;

        r0 := @this: org.gnucash.android.model.TransactionType;

        r0 = r0.<org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType opposite>;

        return r0;
    }
