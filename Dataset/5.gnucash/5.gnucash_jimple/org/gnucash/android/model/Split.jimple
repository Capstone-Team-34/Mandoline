org.gnucash.android.model.Split extends org.gnucash.android.model.BaseModel
private java.lang.String mAccountUID
private java.lang.String mMemo
private org.gnucash.android.model.Money mQuantity
private org.gnucash.android.model.TransactionType mSplitType
private java.lang.String mTransactionUID
private org.gnucash.android.model.Money mValue
    public void <init>(org.gnucash.android.model.Money, java.lang.String)
    {
        org.gnucash.android.model.Split r0;
        org.gnucash.android.model.Money $r1;
        java.lang.String $r2;
        boolean $z0;
        org.gnucash.android.model.TransactionType $r3;

        r0 := @this: org.gnucash.android.model.Split;

        $r1 := @parameter0: org.gnucash.android.model.Money;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.gnucash.android.model.BaseModel: void <init>()>();

        r0.<org.gnucash.android.model.Split: java.lang.String mTransactionUID> = "";

        $r3 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType> = $r3;

        virtualinvoke r0.<org.gnucash.android.model.Split: void setQuantity(org.gnucash.android.model.Money)>($r1);

        virtualinvoke r0.<org.gnucash.android.model.Split: void setValue(org.gnucash.android.model.Money)>($r1);

        virtualinvoke r0.<org.gnucash.android.model.Split: void setAccountUID(java.lang.String)>($r2);

        $z0 = virtualinvoke $r1.<org.gnucash.android.model.Money: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r3 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

     label1:
        r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType> = $r3;

        return;

     label2:
        $r3 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        goto label1;
    }
    public void <init>(org.gnucash.android.model.Money, org.gnucash.android.model.Money, java.lang.String)
    {
        org.gnucash.android.model.Split r0;
        org.gnucash.android.model.Money $r1, $r2;
        java.lang.String $r3;
        boolean $z0;
        org.gnucash.android.model.TransactionType $r4;

        r0 := @this: org.gnucash.android.model.Split;

        $r1 := @parameter0: org.gnucash.android.model.Money;

        $r2 := @parameter1: org.gnucash.android.model.Money;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.gnucash.android.model.BaseModel: void <init>()>();

        r0.<org.gnucash.android.model.Split: java.lang.String mTransactionUID> = "";

        $r4 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType> = $r4;

        virtualinvoke r0.<org.gnucash.android.model.Split: void setQuantity(org.gnucash.android.model.Money)>($r2);

        virtualinvoke r0.<org.gnucash.android.model.Split: void setValue(org.gnucash.android.model.Money)>($r1);

        virtualinvoke r0.<org.gnucash.android.model.Split: void setAccountUID(java.lang.String)>($r3);

        $z0 = virtualinvoke $r1.<org.gnucash.android.model.Money: boolean isNegative()>();

        if $z0 == 0 goto label2;

        $r4 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

     label1:
        r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType> = $r4;

        return;

     label2:
        $r4 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        goto label1;
    }
    public void <init>(org.gnucash.android.model.Split, boolean)
    {
        org.gnucash.android.model.Split r0, $r1;
        boolean $z0;
        java.lang.String $r2;
        org.gnucash.android.model.TransactionType $r3;
        org.gnucash.android.model.Money $r4, $r5;

        r0 := @this: org.gnucash.android.model.Split;

        $r1 := @parameter0: org.gnucash.android.model.Split;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<org.gnucash.android.model.BaseModel: void <init>()>();

        r0.<org.gnucash.android.model.Split: java.lang.String mTransactionUID> = "";

        $r3 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType CREDIT>;

        r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType> = $r3;

        $r2 = $r1.<org.gnucash.android.model.Split: java.lang.String mMemo>;

        r0.<org.gnucash.android.model.Split: java.lang.String mMemo> = $r2;

        $r2 = $r1.<org.gnucash.android.model.Split: java.lang.String mAccountUID>;

        r0.<org.gnucash.android.model.Split: java.lang.String mAccountUID> = $r2;

        $r3 = $r1.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType>;

        r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType> = $r3;

        $r2 = $r1.<org.gnucash.android.model.Split: java.lang.String mTransactionUID>;

        r0.<org.gnucash.android.model.Split: java.lang.String mTransactionUID> = $r2;

        $r4 = new org.gnucash.android.model.Money;

        $r5 = $r1.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mValue>;

        specialinvoke $r4.<org.gnucash.android.model.Money: void <init>(org.gnucash.android.model.Money)>($r5);

        r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mValue> = $r4;

        $r4 = new org.gnucash.android.model.Money;

        $r5 = $r1.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mQuantity>;

        specialinvoke $r4.<org.gnucash.android.model.Money: void <init>(org.gnucash.android.model.Money)>($r5);

        r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mQuantity> = $r4;

        if $z0 == 0 goto label1;

        staticinvoke <org.gnucash.android.model.Split: java.lang.String generateUID()>();

        return;

     label1:
        $r2 = virtualinvoke $r1.<org.gnucash.android.model.Split: java.lang.String getUID()>();

        virtualinvoke r0.<org.gnucash.android.model.Split: void setUID(java.lang.String)>($r2);

        return;
    }
    public static org.gnucash.android.model.Money getFormattedAmount(org.gnucash.android.model.Money, java.lang.String, org.gnucash.android.model.TransactionType)
    {
        org.gnucash.android.model.Money $r0;
        java.lang.String $r1;
        org.gnucash.android.model.TransactionType $r2, $r5;
        org.gnucash.android.db.AccountsDbAdapter $r3;
        org.gnucash.android.model.AccountType $r4;
        boolean $z0, z1;

        $r0 := @parameter0: org.gnucash.android.model.Money;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.gnucash.android.model.TransactionType;

        $r3 = staticinvoke <org.gnucash.android.db.AccountsDbAdapter: org.gnucash.android.db.AccountsDbAdapter getInstance()>();

        $r4 = virtualinvoke $r3.<org.gnucash.android.db.AccountsDbAdapter: org.gnucash.android.model.AccountType getAccountType(java.lang.String)>($r1);

        $z0 = virtualinvoke $r4.<org.gnucash.android.model.AccountType: boolean hasDebitNormalBalance()>();

        $r0 = virtualinvoke $r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Money absolute()>();

        $r5 = <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType DEBIT>;

        if $r2 != $r5 goto label2;

        z1 = 1;

     label1:
        if $z0 == 0 goto label4;

        if z1 == 0 goto label3;

        return $r0;

     label2:
        z1 = 0;

        goto label1;

     label3:
        $r0 = virtualinvoke $r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Money negate()>();

        return $r0;

     label4:
        if z1 == 0 goto label5;

        $r0 = virtualinvoke $r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Money negate()>();

     label5:
        return $r0;
    }
    public static org.gnucash.android.model.Split parseSplit(java.lang.String)
    {
        java.lang.String $r0, r3;
        org.gnucash.android.model.Money r1, r2;
        java.lang.String[] $r4;
        int $i0;
        org.gnucash.android.model.Split r5;
        org.gnucash.android.model.TransactionType $r6;
        long $l1, $l2, $l3, $l4;

        $r0 := @parameter0: java.lang.String;

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $i0 = lengthof $r4;

        if $i0 >= 8 goto label1;

        r1 = new org.gnucash.android.model.Money;

        $r0 = $r4[0];

        r3 = $r4[1];

        specialinvoke r1.<org.gnucash.android.model.Money: void <init>(java.lang.String,java.lang.String)>($r0, r3);

        r5 = new org.gnucash.android.model.Split;

        $r0 = $r4[2];

        specialinvoke r5.<org.gnucash.android.model.Split: void <init>(org.gnucash.android.model.Money,java.lang.String)>(r1, $r0);

        $r0 = $r4[3];

        virtualinvoke r5.<org.gnucash.android.model.Split: void setTransactionUID(java.lang.String)>($r0);

        $r0 = $r4[4];

        $r6 = staticinvoke <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType valueOf(java.lang.String)>($r0);

        virtualinvoke r5.<org.gnucash.android.model.Split: void setType(org.gnucash.android.model.TransactionType)>($r6);

        $i0 = lengthof $r4;

        if $i0 != 6 goto label2;

        $r0 = $r4[5];

        virtualinvoke r5.<org.gnucash.android.model.Split: void setMemo(java.lang.String)>($r0);

        return r5;

     label1:
        $r0 = $r4[1];

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        $r0 = $r4[2];

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        $r0 = $r4[3];

        r3 = $r4[4];

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

        r3 = $r4[5];

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

        r3 = $r4[6];

        r1 = new org.gnucash.android.model.Money;

        specialinvoke r1.<org.gnucash.android.model.Money: void <init>(long,long,java.lang.String)>($l1, $l2, $r0);

        r2 = new org.gnucash.android.model.Money;

        specialinvoke r2.<org.gnucash.android.model.Money: void <init>(long,long,java.lang.String)>($l3, $l4, r3);

        r5 = new org.gnucash.android.model.Split;

        $r0 = $r4[8];

        specialinvoke r5.<org.gnucash.android.model.Split: void <init>(org.gnucash.android.model.Money,java.lang.String)>(r1, $r0);

        $r0 = $r4[0];

        virtualinvoke r5.<org.gnucash.android.model.Split: void setUID(java.lang.String)>($r0);

        virtualinvoke r5.<org.gnucash.android.model.Split: void setQuantity(org.gnucash.android.model.Money)>(r2);

        $r0 = $r4[7];

        virtualinvoke r5.<org.gnucash.android.model.Split: void setTransactionUID(java.lang.String)>($r0);

        $r0 = $r4[9];

        $r6 = staticinvoke <org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType valueOf(java.lang.String)>($r0);

        virtualinvoke r5.<org.gnucash.android.model.Split: void setType(org.gnucash.android.model.TransactionType)>($r6);

        $i0 = lengthof $r4;

        if $i0 != 11 goto label2;

        $r0 = $r4[10];

        virtualinvoke r5.<org.gnucash.android.model.Split: void setMemo(java.lang.String)>($r0);

     label2:
        return r5;
    }
    protected volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.gnucash.android.model.Split r0;

        r0 := @this: org.gnucash.android.model.Split;

        r0 = virtualinvoke r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Split clone()>();

        return r0;
    }
    protected org.gnucash.android.model.Split clone() throws java.lang.CloneNotSupportedException
    {
        org.gnucash.android.model.Split r0, r1;
        java.lang.String $r2;
        org.gnucash.android.model.Money $r3;
        org.gnucash.android.model.TransactionType $r4;

        r0 := @this: org.gnucash.android.model.Split;

        specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = new org.gnucash.android.model.Split;

        $r3 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mValue>;

        $r2 = r0.<org.gnucash.android.model.Split: java.lang.String mAccountUID>;

        specialinvoke r1.<org.gnucash.android.model.Split: void <init>(org.gnucash.android.model.Money,java.lang.String)>($r3, $r2);

        $r2 = virtualinvoke r0.<org.gnucash.android.model.Split: java.lang.String getUID()>();

        virtualinvoke r1.<org.gnucash.android.model.Split: void setUID(java.lang.String)>($r2);

        $r4 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType>;

        virtualinvoke r1.<org.gnucash.android.model.Split: void setType(org.gnucash.android.model.TransactionType)>($r4);

        $r2 = r0.<org.gnucash.android.model.Split: java.lang.String mMemo>;

        virtualinvoke r1.<org.gnucash.android.model.Split: void setMemo(java.lang.String)>($r2);

        $r2 = r0.<org.gnucash.android.model.Split: java.lang.String mTransactionUID>;

        virtualinvoke r1.<org.gnucash.android.model.Split: void setTransactionUID(java.lang.String)>($r2);

        $r3 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mQuantity>;

        virtualinvoke r1.<org.gnucash.android.model.Split: void setQuantity(org.gnucash.android.model.Money)>($r3);

        return r1;
    }
    public org.gnucash.android.model.Split createPair(java.lang.String)
    {
        org.gnucash.android.model.Split r0, r2;
        java.lang.String $r1;
        org.gnucash.android.model.Money $r3;
        org.gnucash.android.model.TransactionType $r4;

        r0 := @this: org.gnucash.android.model.Split;

        $r1 := @parameter0: java.lang.String;

        r2 = new org.gnucash.android.model.Split;

        $r3 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mValue>;

        $r3 = virtualinvoke $r3.<org.gnucash.android.model.Money: org.gnucash.android.model.Money absolute()>();

        specialinvoke r2.<org.gnucash.android.model.Split: void <init>(org.gnucash.android.model.Money,java.lang.String)>($r3, $r1);

        $r4 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType>;

        $r4 = virtualinvoke $r4.<org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType invert()>();

        virtualinvoke r2.<org.gnucash.android.model.Split: void setType(org.gnucash.android.model.TransactionType)>($r4);

        $r1 = r0.<org.gnucash.android.model.Split: java.lang.String mMemo>;

        virtualinvoke r2.<org.gnucash.android.model.Split: void setMemo(java.lang.String)>($r1);

        $r1 = r0.<org.gnucash.android.model.Split: java.lang.String mTransactionUID>;

        virtualinvoke r2.<org.gnucash.android.model.Split: void setTransactionUID(java.lang.String)>($r1);

        $r3 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mQuantity>;

        virtualinvoke r2.<org.gnucash.android.model.Split: void setQuantity(org.gnucash.android.model.Money)>($r3);

        return r2;
    }
    public java.lang.String getAccountUID()
    {
        org.gnucash.android.model.Split r0;
        java.lang.String r1;

        r0 := @this: org.gnucash.android.model.Split;

        r1 = r0.<org.gnucash.android.model.Split: java.lang.String mAccountUID>;

        return r1;
    }
    public org.gnucash.android.model.Money getFormattedQuantity()
    {
        org.gnucash.android.model.Split r0;
        java.lang.String $r1;
        org.gnucash.android.model.TransactionType $r2;
        org.gnucash.android.model.Money $r3;

        r0 := @this: org.gnucash.android.model.Split;

        $r3 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mQuantity>;

        $r1 = r0.<org.gnucash.android.model.Split: java.lang.String mAccountUID>;

        $r2 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType>;

        $r3 = staticinvoke <org.gnucash.android.model.Split: org.gnucash.android.model.Money getFormattedAmount(org.gnucash.android.model.Money,java.lang.String,org.gnucash.android.model.TransactionType)>($r3, $r1, $r2);

        return $r3;
    }
    public org.gnucash.android.model.Money getFormattedValue()
    {
        org.gnucash.android.model.Split r0;
        java.lang.String $r1;
        org.gnucash.android.model.TransactionType $r2;
        org.gnucash.android.model.Money $r3;

        r0 := @this: org.gnucash.android.model.Split;

        $r3 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mValue>;

        $r1 = r0.<org.gnucash.android.model.Split: java.lang.String mAccountUID>;

        $r2 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType>;

        $r3 = staticinvoke <org.gnucash.android.model.Split: org.gnucash.android.model.Money getFormattedAmount(org.gnucash.android.model.Money,java.lang.String,org.gnucash.android.model.TransactionType)>($r3, $r1, $r2);

        return $r3;
    }
    public java.lang.String getMemo()
    {
        org.gnucash.android.model.Split r0;
        java.lang.String r1;

        r0 := @this: org.gnucash.android.model.Split;

        r1 = r0.<org.gnucash.android.model.Split: java.lang.String mMemo>;

        return r1;
    }
    public org.gnucash.android.model.Money getQuantity()
    {
        org.gnucash.android.model.Split r0;
        org.gnucash.android.model.Money r1;

        r0 := @this: org.gnucash.android.model.Split;

        r1 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mQuantity>;

        return r1;
    }
    public java.lang.String getTransactionUID()
    {
        org.gnucash.android.model.Split r0;
        java.lang.String r1;

        r0 := @this: org.gnucash.android.model.Split;

        r1 = r0.<org.gnucash.android.model.Split: java.lang.String mTransactionUID>;

        return r1;
    }
    public org.gnucash.android.model.TransactionType getType()
    {
        org.gnucash.android.model.Split r0;
        org.gnucash.android.model.TransactionType r1;

        r0 := @this: org.gnucash.android.model.Split;

        r1 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType>;

        return r1;
    }
    public org.gnucash.android.model.Money getValue()
    {
        org.gnucash.android.model.Split r0;
        org.gnucash.android.model.Money r1;

        r0 := @this: org.gnucash.android.model.Split;

        r1 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mValue>;

        return r1;
    }
    public boolean isPairOf(org.gnucash.android.model.Split)
    {
        org.gnucash.android.model.Split r0, $r1;
        org.gnucash.android.model.Money $r2, $r3;
        boolean $z0;
        org.gnucash.android.model.TransactionType $r4, $r5;

        r0 := @this: org.gnucash.android.model.Split;

        $r1 := @parameter0: org.gnucash.android.model.Split;

        $r2 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mValue>;

        $r2 = virtualinvoke $r2.<org.gnucash.android.model.Money: org.gnucash.android.model.Money absolute()>();

        $r3 = $r1.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mValue>;

        $r3 = virtualinvoke $r3.<org.gnucash.android.model.Money: org.gnucash.android.model.Money absolute()>();

        $z0 = virtualinvoke $r2.<org.gnucash.android.model.Money: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType>;

        $r4 = virtualinvoke $r4.<org.gnucash.android.model.TransactionType: org.gnucash.android.model.TransactionType invert()>();

        $r5 = $r1.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType>;

        $z0 = virtualinvoke $r4.<org.gnucash.android.model.TransactionType: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void setAccountUID(java.lang.String)
    {
        org.gnucash.android.model.Split r0;
        java.lang.String $r1;

        r0 := @this: org.gnucash.android.model.Split;

        $r1 := @parameter0: java.lang.String;

        r0.<org.gnucash.android.model.Split: java.lang.String mAccountUID> = $r1;

        return;
    }
    public void setMemo(java.lang.String)
    {
        org.gnucash.android.model.Split r0;
        java.lang.String $r1;

        r0 := @this: org.gnucash.android.model.Split;

        $r1 := @parameter0: java.lang.String;

        r0.<org.gnucash.android.model.Split: java.lang.String mMemo> = $r1;

        return;
    }
    public void setQuantity(org.gnucash.android.model.Money)
    {
        org.gnucash.android.model.Split r0;
        org.gnucash.android.model.Money $r1;

        r0 := @this: org.gnucash.android.model.Split;

        $r1 := @parameter0: org.gnucash.android.model.Money;

        r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mQuantity> = $r1;

        return;
    }
    public void setTransactionUID(java.lang.String)
    {
        org.gnucash.android.model.Split r0;
        java.lang.String $r1;

        r0 := @this: org.gnucash.android.model.Split;

        $r1 := @parameter0: java.lang.String;

        r0.<org.gnucash.android.model.Split: java.lang.String mTransactionUID> = $r1;

        return;
    }
    public void setType(org.gnucash.android.model.TransactionType)
    {
        org.gnucash.android.model.Split r0;
        org.gnucash.android.model.TransactionType $r1;

        r0 := @this: org.gnucash.android.model.Split;

        $r1 := @parameter0: org.gnucash.android.model.TransactionType;

        r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType> = $r1;

        return;
    }
    public void setValue(org.gnucash.android.model.Money)
    {
        org.gnucash.android.model.Split r0;
        org.gnucash.android.model.Money $r1;

        r0 := @this: org.gnucash.android.model.Split;

        $r1 := @parameter0: org.gnucash.android.model.Money;

        r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mValue> = $r1;

        return;
    }
    public java.lang.String toCsv()
    {
        org.gnucash.android.model.Split r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r6;
        org.gnucash.android.model.Money $r3;
        long $l0;
        java.util.Currency $r4;
        org.gnucash.android.model.TransactionType $r5;

        r0 := @this: org.gnucash.android.model.Split;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<org.gnucash.android.model.Split: java.lang.String getUID()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r3 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mValue>;

        $l0 = virtualinvoke $r3.<org.gnucash.android.model.Money: long getNumerator()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r3 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mValue>;

        $l0 = virtualinvoke $r3.<org.gnucash.android.model.Money: long getDenominator()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r3 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mValue>;

        $r4 = virtualinvoke $r3.<org.gnucash.android.model.Money: java.util.Currency getCurrency()>();

        $r2 = virtualinvoke $r4.<java.util.Currency: java.lang.String getCurrencyCode()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r3 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mQuantity>;

        $l0 = virtualinvoke $r3.<org.gnucash.android.model.Money: long getNumerator()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r3 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mQuantity>;

        $l0 = virtualinvoke $r3.<org.gnucash.android.model.Money: long getDenominator()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r3 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mQuantity>;

        $r4 = virtualinvoke $r3.<org.gnucash.android.model.Money: java.util.Currency getCurrency()>();

        $r2 = virtualinvoke $r4.<java.util.Currency: java.lang.String getCurrencyCode()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r2 = r0.<org.gnucash.android.model.Split: java.lang.String mTransactionUID>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r2 = r0.<org.gnucash.android.model.Split: java.lang.String mAccountUID>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r5 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType>;

        $r2 = virtualinvoke $r5.<org.gnucash.android.model.TransactionType: java.lang.String name()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r0.<org.gnucash.android.model.Split: java.lang.String mMemo>;

        if $r6 == null goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r2 = r0.<org.gnucash.android.model.Split: java.lang.String mMemo>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return $r2;
    }
    public java.lang.String toString()
    {
        org.gnucash.android.model.Split r0;
        java.lang.StringBuilder $r1;
        org.gnucash.android.model.TransactionType $r2;
        java.lang.String $r3;
        org.gnucash.android.model.Money $r4;

        r0 := @this: org.gnucash.android.model.Split;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.TransactionType mSplitType>;

        $r3 = virtualinvoke $r2.<org.gnucash.android.model.TransactionType: java.lang.String name()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        $r4 = r0.<org.gnucash.android.model.Split: org.gnucash.android.model.Money mValue>;

        $r3 = virtualinvoke $r4.<org.gnucash.android.model.Money: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in account: ");

        $r3 = r0.<org.gnucash.android.model.Split: java.lang.String mAccountUID>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
