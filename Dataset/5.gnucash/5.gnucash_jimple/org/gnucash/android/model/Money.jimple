org.gnucash.android.model.Money extends java.lang.Object implements java.lang.Comparable
public static java.lang.String DEFAULT_CURRENCY_CODE
private static org.gnucash.android.model.Money sDefaultZero
protected java.math.RoundingMode ROUNDING_MODE
private java.math.BigDecimal mAmount
private org.gnucash.android.model.Commodity mCommodity
    static void <clinit>()
    {
        <org.gnucash.android.model.Money: java.lang.String DEFAULT_CURRENCY_CODE> = "USD";

        return;
    }
    public void <init>(long, long, java.lang.String)
    {
        org.gnucash.android.model.Money r0;
        long $l0, $l1;
        java.lang.String $r1;
        java.math.BigDecimal $r2;
        java.math.RoundingMode $r3;

        r0 := @this: org.gnucash.android.model.Money;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;

        r0.<org.gnucash.android.model.Money: java.math.RoundingMode ROUNDING_MODE> = $r3;

        $r2 = staticinvoke <org.gnucash.android.model.Money: java.math.BigDecimal getBigDecimal(long,long)>($l0, $l1);

        r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount> = $r2;

        specialinvoke r0.<org.gnucash.android.model.Money: void setCommodity(java.lang.String)>($r1);

        return;
    }
    public void <init>(java.lang.String, java.lang.String)
    {
        org.gnucash.android.model.Money r0;
        java.lang.String $r1, $r2;
        org.gnucash.android.model.Commodity $r3;
        java.math.RoundingMode $r4;
        java.math.BigDecimal $r5;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;

        r0.<org.gnucash.android.model.Money: java.math.RoundingMode ROUNDING_MODE> = $r4;

        $r3 = staticinvoke <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity getInstance(java.lang.String)>($r2);

        r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity> = $r3;

        $r5 = new java.math.BigDecimal;

        specialinvoke $r5.<java.math.BigDecimal: void <init>(java.lang.String)>($r1);

        specialinvoke r0.<org.gnucash.android.model.Money: void setAmount(java.math.BigDecimal)>($r5);

        return;
    }
    public void <init>(java.math.BigDecimal, org.gnucash.android.model.Commodity)
    {
        org.gnucash.android.model.Money r0;
        java.math.BigDecimal $r1;
        org.gnucash.android.model.Commodity $r2;
        java.math.RoundingMode $r3;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: java.math.BigDecimal;

        $r2 := @parameter1: org.gnucash.android.model.Commodity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;

        r0.<org.gnucash.android.model.Money: java.math.RoundingMode ROUNDING_MODE> = $r3;

        r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity> = $r2;

        specialinvoke r0.<org.gnucash.android.model.Money: void setAmount(java.math.BigDecimal)>($r1);

        return;
    }
    public void <init>(org.gnucash.android.model.Money)
    {
        org.gnucash.android.model.Money r0, $r1;
        java.math.RoundingMode $r2;
        org.gnucash.android.model.Commodity $r3;
        java.math.BigDecimal $r4;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: org.gnucash.android.model.Money;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;

        r0.<org.gnucash.android.model.Money: java.math.RoundingMode ROUNDING_MODE> = $r2;

        $r3 = virtualinvoke $r1.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity getCommodity()>();

        specialinvoke r0.<org.gnucash.android.model.Money: void setCommodity(org.gnucash.android.model.Commodity)>($r3);

        $r4 = virtualinvoke $r1.<org.gnucash.android.model.Money: java.math.BigDecimal asBigDecimal()>();

        specialinvoke r0.<org.gnucash.android.model.Money: void setAmount(java.math.BigDecimal)>($r4);

        return;
    }
    public static org.gnucash.android.model.Money createZeroInstance(java.lang.String)
    {
        java.lang.String $r0;
        org.gnucash.android.model.Money $r1;
        java.math.BigDecimal $r2;
        org.gnucash.android.model.Commodity $r3;

        $r0 := @parameter0: java.lang.String;

        $r3 = staticinvoke <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity getInstance(java.lang.String)>($r0);

        $r1 = new org.gnucash.android.model.Money;

        $r2 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;

        specialinvoke $r1.<org.gnucash.android.model.Money: void <init>(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r2, $r3);

        return $r1;
    }
    public static java.math.BigDecimal getBigDecimal(long, long)
    {
        long $l0, $l1;
        byte $b2;
        int $i3;
        java.math.BigDecimal $r0;
        java.math.BigInteger $r1;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $b2 = $l0 cmp 0L;

        if $b2 != 0 goto label1;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $l1 = 1L;

     label1:
        $i3 = (int) $l1;

        $i3 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>($i3);

        $r0 = new java.math.BigDecimal;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        specialinvoke $r0.<java.math.BigDecimal: void <init>(java.math.BigInteger,int)>($r1, $i3);

        return $r0;
    }
    private int getScale()
    {
        org.gnucash.android.model.Money r0;
        org.gnucash.android.model.Commodity $r1;
        int $i0, i1;
        java.math.BigDecimal $r2;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $i0 = virtualinvoke $r1.<org.gnucash.android.model.Commodity: int getSmallestFractionDigits()>();

        i1 = $i0;

        if $i0 >= 0 goto label1;

        $r2 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        i1 = virtualinvoke $r2.<java.math.BigDecimal: int scale()>();

     label1:
        if i1 >= 0 goto label2;

        return 0;

     label2:
        return i1;
    }
    public static org.gnucash.android.model.Money getZeroInstance()
    {
        java.math.BigDecimal $r0;
        org.gnucash.android.model.Money $r1;
        java.lang.String $r2;
        org.gnucash.android.model.Commodity $r3;

        $r1 = <org.gnucash.android.model.Money: org.gnucash.android.model.Money sDefaultZero>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <org.gnucash.android.app.GnuCashApplication: java.lang.String getDefaultCurrencyCode()>();

        $r1 = new org.gnucash.android.model.Money;

        $r0 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;

        $r3 = staticinvoke <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity getInstance(java.lang.String)>($r2);

        specialinvoke $r1.<org.gnucash.android.model.Money: void <init>(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r0, $r3);

        <org.gnucash.android.model.Money: org.gnucash.android.model.Money sDefaultZero> = $r1;

     label1:
        $r1 = <org.gnucash.android.model.Money: org.gnucash.android.model.Money sDefaultZero>;

        return $r1;
    }
    private void setAmount(java.math.BigDecimal)
    {
        org.gnucash.android.model.Money r0;
        java.math.BigDecimal $r1;
        java.math.RoundingMode $r2;
        org.gnucash.android.model.Commodity $r3;
        int $i0;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: java.math.BigDecimal;

        $r3 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $i0 = virtualinvoke $r3.<org.gnucash.android.model.Commodity: int getSmallestFractionDigits()>();

        $r2 = r0.<org.gnucash.android.model.Money: java.math.RoundingMode ROUNDING_MODE>;

        $r1 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>($i0, $r2);

        r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount> = $r1;

        return;
    }
    private void setCommodity(java.lang.String)
    {
        org.gnucash.android.model.Money r0;
        java.lang.String $r1;
        org.gnucash.android.model.Commodity $r2;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity getInstance(java.lang.String)>($r1);

        r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity> = $r2;

        return;
    }
    private void setCommodity(org.gnucash.android.model.Commodity)
    {
        org.gnucash.android.model.Money r0;
        org.gnucash.android.model.Commodity $r1;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: org.gnucash.android.model.Commodity;

        r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity> = $r1;

        return;
    }
    public org.gnucash.android.model.Money absolute()
    {
        org.gnucash.android.model.Money r0, $r1;
        org.gnucash.android.model.Commodity $r2;
        java.math.BigDecimal $r3;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 = new org.gnucash.android.model.Money;

        $r3 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r3 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigDecimal abs()>();

        $r2 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        specialinvoke $r1.<org.gnucash.android.model.Money: void <init>(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r3, $r2);

        return $r1;
    }
    public org.gnucash.android.model.Money add(org.gnucash.android.model.Money)
    {
        org.gnucash.android.model.Money r0, $r1;
        org.gnucash.android.model.Commodity $r2, $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.math.BigDecimal $r5, $r6;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: org.gnucash.android.model.Money;

        $r2 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $r3 = $r1.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $z0 = virtualinvoke $r2.<org.gnucash.android.model.Commodity: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only Money with same currency can be added");

        throw $r4;

     label1:
        $r5 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r6 = $r1.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r5 = virtualinvoke $r5.<java.math.BigDecimal: java.math.BigDecimal add(java.math.BigDecimal)>($r6);

        $r1 = new org.gnucash.android.model.Money;

        $r2 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        specialinvoke $r1.<org.gnucash.android.model.Money: void <init>(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r5, $r2);

        return $r1;
    }
    public java.math.BigDecimal asBigDecimal()
    {
        org.gnucash.android.model.Money r0;
        java.math.BigDecimal r1;

        r0 := @this: org.gnucash.android.model.Money;

        r1 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        return r1;
    }
    public double asDouble()
    {
        org.gnucash.android.model.Money r0;
        double $d0;
        java.math.BigDecimal $r1;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $d0 = virtualinvoke $r1.<java.math.BigDecimal: double doubleValue()>();

        return $d0;
    }
    public java.lang.String asString()
    {
        org.gnucash.android.model.Money r0;
        java.lang.String $r1;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 = virtualinvoke r0.<org.gnucash.android.model.Money: java.lang.String toPlainString()>();

        return $r1;
    }
    public volatile int compareTo(java.lang.Object)
    {
        org.gnucash.android.model.Money r0, $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (org.gnucash.android.model.Money) $r1;

        $i0 = virtualinvoke r0.<org.gnucash.android.model.Money: int compareTo(org.gnucash.android.model.Money)>($r2);

        return $i0;
    }
    public int compareTo(org.gnucash.android.model.Money)
    {
        org.gnucash.android.model.Money r0, $r1;
        org.gnucash.android.model.Commodity $r2, $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.math.BigDecimal $r5, $r6;
        int $i0;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: org.gnucash.android.model.Money;

        $r2 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $r3 = $r1.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $z0 = virtualinvoke $r2.<org.gnucash.android.model.Commodity: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot compare different currencies yet");

        throw $r4;

     label1:
        $r5 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r6 = $r1.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $i0 = virtualinvoke $r5.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r6);

        return $i0;
    }
    public org.gnucash.android.model.Money divide(int)
    {
        org.gnucash.android.model.Money r0, r1;
        int $i0;
        org.gnucash.android.model.Commodity $r2;
        java.math.BigDecimal $r3;

        r0 := @this: org.gnucash.android.model.Money;

        $i0 := @parameter0: int;

        r1 = new org.gnucash.android.model.Money;

        $r3 = new java.math.BigDecimal;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(int)>($i0);

        $r2 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        specialinvoke r1.<org.gnucash.android.model.Money: void <init>(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r3, $r2);

        r0 = virtualinvoke r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Money divide(org.gnucash.android.model.Money)>(r1);

        return r0;
    }
    public org.gnucash.android.model.Money divide(org.gnucash.android.model.Money)
    {
        org.gnucash.android.model.Money r0, $r1;
        java.math.RoundingMode $r2;
        org.gnucash.android.model.Commodity $r3, $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.math.BigDecimal $r6, $r7;
        int $i0;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: org.gnucash.android.model.Money;

        $r3 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $r4 = $r1.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $z0 = virtualinvoke $r3.<org.gnucash.android.model.Commodity: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Operation can only be performed on money with same currency");

        throw $r5;

     label1:
        $r6 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r7 = $r1.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r3 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $i0 = virtualinvoke $r3.<org.gnucash.android.model.Commodity: int getSmallestFractionDigits()>();

        $r2 = r0.<org.gnucash.android.model.Money: java.math.RoundingMode ROUNDING_MODE>;

        $r6 = virtualinvoke $r6.<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal,int,java.math.RoundingMode)>($r7, $i0, $r2);

        $r1 = new org.gnucash.android.model.Money;

        $r3 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        specialinvoke $r1.<org.gnucash.android.model.Money: void <init>(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r6, $r3);

        return $r1;
    }
    public boolean equals(java.lang.Object)
    {
        org.gnucash.android.model.Money r0, r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        java.math.BigDecimal $r5, $r6;
        boolean $z0;
        org.gnucash.android.model.Commodity $r7, $r8;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        if $r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.gnucash.android.model.Money) $r1;

        $r5 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r6 = r4.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $z0 = virtualinvoke $r5.<java.math.BigDecimal: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r7 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $r8 = r4.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $z0 = virtualinvoke $r7.<org.gnucash.android.model.Commodity: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }
    public java.lang.String formattedString()
    {
        org.gnucash.android.model.Money r0;
        java.util.Locale $r1;
        java.lang.String $r2;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke r0.<org.gnucash.android.model.Money: java.lang.String formattedString(java.util.Locale)>($r1);

        return $r2;
    }
    public java.lang.String formattedString(java.util.Locale)
    {
        org.gnucash.android.model.Money r0;
        java.util.Locale $r1, $r7;
        java.text.NumberFormat $r2;
        org.gnucash.android.model.Commodity $r3, $r6;
        java.lang.String $r4;
        java.util.Currency $r5;
        boolean $z0;
        java.text.DecimalFormat $r8;
        java.text.DecimalFormatSymbols $r9;
        int $i0;
        double $d0;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: java.util.Locale;

        $r2 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance(java.util.Locale)>($r1);

        $r3 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $r4 = virtualinvoke $r3.<org.gnucash.android.model.Commodity: java.lang.String getCurrencyCode()>();

        $r5 = staticinvoke <java.util.Currency: java.util.Currency getInstance(java.lang.String)>($r4);

        $r3 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $r6 = <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity USD>;

        $z0 = virtualinvoke $r3.<org.gnucash.android.model.Commodity: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r7 = <java.util.Locale: java.util.Locale US>;

        $z0 = virtualinvoke $r1.<java.util.Locale: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label2;

        $r4 = "US$";

     label1:
        $r8 = (java.text.DecimalFormat) $r2;

        $r9 = virtualinvoke $r8.<java.text.DecimalFormat: java.text.DecimalFormatSymbols getDecimalFormatSymbols()>();

        virtualinvoke $r9.<java.text.DecimalFormatSymbols: void setCurrencySymbol(java.lang.String)>($r4);

        $r8 = (java.text.DecimalFormat) $r2;

        virtualinvoke $r8.<java.text.DecimalFormat: void setDecimalFormatSymbols(java.text.DecimalFormatSymbols)>($r9);

        $r3 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $i0 = virtualinvoke $r3.<org.gnucash.android.model.Commodity: int getSmallestFractionDigits()>();

        virtualinvoke $r2.<java.text.NumberFormat: void setMinimumFractionDigits(int)>($i0);

        $r3 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $i0 = virtualinvoke $r3.<org.gnucash.android.model.Commodity: int getSmallestFractionDigits()>();

        virtualinvoke $r2.<java.text.NumberFormat: void setMaximumFractionDigits(int)>($i0);

        $d0 = virtualinvoke r0.<org.gnucash.android.model.Money: double asDouble()>();

        $r4 = virtualinvoke $r2.<java.text.NumberFormat: java.lang.String format(double)>($d0);

        return $r4;

     label2:
        $r3 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $r6 = <org.gnucash.android.model.Commodity: org.gnucash.android.model.Commodity EUR>;

        $z0 = virtualinvoke $r3.<org.gnucash.android.model.Commodity: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label3;

        $r1 = <java.util.Locale: java.util.Locale GERMANY>;

        $r4 = virtualinvoke $r5.<java.util.Currency: java.lang.String getSymbol(java.util.Locale)>($r1);

        goto label1;

     label3:
        $r1 = <java.util.Locale: java.util.Locale US>;

        $r4 = virtualinvoke $r5.<java.util.Currency: java.lang.String getSymbol(java.util.Locale)>($r1);

        goto label1;
    }
    public org.gnucash.android.model.Commodity getCommodity()
    {
        org.gnucash.android.model.Money r0;
        org.gnucash.android.model.Commodity r1;

        r0 := @this: org.gnucash.android.model.Money;

        r1 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        return r1;
    }
    public java.util.Currency getCurrency()
    {
        org.gnucash.android.model.Money r0;
        org.gnucash.android.model.Commodity $r1;
        java.lang.String $r2;
        java.util.Currency $r3;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $r2 = virtualinvoke $r1.<org.gnucash.android.model.Commodity: java.lang.String getCurrencyCode()>();

        $r3 = staticinvoke <java.util.Currency: java.util.Currency getInstance(java.lang.String)>($r2);

        return $r3;
    }
    public long getDenominator()
    {
        org.gnucash.android.model.Money r0;
        int $i0;
        java.math.BigDecimal $r1;
        long $l1;

        r0 := @this: org.gnucash.android.model.Money;

        $i0 = specialinvoke r0.<org.gnucash.android.model.Money: int getScale()>();

        $r1 = <java.math.BigDecimal: java.math.BigDecimal ONE>;

        $r1 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)>($i0);

        $l1 = virtualinvoke $r1.<java.math.BigDecimal: long longValueExact()>();

        return $l1;
    }
    public long getNumerator()
    {
        org.gnucash.android.model.Money r0;
        java.lang.ArithmeticException r1;
        java.math.BigDecimal $r2;
        int $i0;
        long $l1;
        java.lang.StringBuilder $r3;
        org.gnucash.android.model.Commodity $r4;
        java.lang.String $r5, $r7;
        java.lang.Class $r6;

        r0 := @this: org.gnucash.android.model.Money;

        $r2 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

     label1:
        $i0 = specialinvoke r0.<org.gnucash.android.model.Money: int getScale()>();

        $r2 = virtualinvoke $r2.<java.math.BigDecimal: java.math.BigDecimal scaleByPowerOfTen(int)>($i0);

        $l1 = virtualinvoke $r2.<java.math.BigDecimal: long longValueExact()>();

     label2:
        return $l1;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Currency ");

        $r4 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $r5 = virtualinvoke $r4.<org.gnucash.android.model.Commodity: java.lang.String getCurrencyCode()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with scale ");

        $i0 = specialinvoke r0.<org.gnucash.android.model.Money: int getScale()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has amount ");

        $r2 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r5 = virtualinvoke $r2.<java.math.BigDecimal: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.crashlytics.android.Crashlytics: void log(java.lang.String)>($r5);

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r7, $r5);

        throw r1;

        catch java.lang.ArithmeticException from label1 to label2 with label3;
    }
    public int hashCode()
    {
        org.gnucash.android.model.Money r0;
        java.math.BigDecimal $r1;
        int $i0, $i1;
        org.gnucash.android.model.Commodity $r2;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $i0 = virtualinvoke $r1.<java.math.BigDecimal: int hashCode()>();

        $i0 = $i0 + 31;

        $i0 = $i0 * 31;

        $r2 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $i1 = virtualinvoke $r2.<org.gnucash.android.model.Commodity: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    public boolean isAmountZero()
    {
        org.gnucash.android.model.Money r0;
        java.math.BigDecimal $r1, $r2;
        int $i0;

        r0 := @this: org.gnucash.android.model.Money;

        $r2 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r1 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;

        $i0 = virtualinvoke $r2.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r1);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isNegative()
    {
        org.gnucash.android.model.Money r0;
        int $i0;
        java.math.BigDecimal $r1, $r2;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r2 = <java.math.BigDecimal: java.math.BigDecimal ZERO>;

        $i0 = virtualinvoke $r1.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r2);

        if $i0 != -1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public org.gnucash.android.model.Money multiply(int)
    {
        org.gnucash.android.model.Money r0, r1;
        int $i0;
        org.gnucash.android.model.Commodity $r2;
        java.math.BigDecimal $r3;

        r0 := @this: org.gnucash.android.model.Money;

        $i0 := @parameter0: int;

        r1 = new org.gnucash.android.model.Money;

        $r3 = new java.math.BigDecimal;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(int)>($i0);

        $r2 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        specialinvoke r1.<org.gnucash.android.model.Money: void <init>(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r3, $r2);

        r0 = virtualinvoke r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Money multiply(org.gnucash.android.model.Money)>(r1);

        return r0;
    }
    public org.gnucash.android.model.Money multiply(java.math.BigDecimal)
    {
        org.gnucash.android.model.Money r0, $r2;
        java.math.BigDecimal $r1, $r4;
        org.gnucash.android.model.Commodity $r3;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: java.math.BigDecimal;

        $r2 = new org.gnucash.android.model.Money;

        $r4 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r1 = virtualinvoke $r4.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r1);

        $r3 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        specialinvoke $r2.<org.gnucash.android.model.Money: void <init>(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r1, $r3);

        return $r2;
    }
    public org.gnucash.android.model.Money multiply(org.gnucash.android.model.Money)
    {
        org.gnucash.android.model.Money r0, $r1;
        org.gnucash.android.model.Commodity $r2, $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.math.BigDecimal $r5, $r6;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: org.gnucash.android.model.Money;

        $r2 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $r3 = $r1.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $z0 = virtualinvoke $r2.<org.gnucash.android.model.Commodity: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Operation can only be performed on money with same currency");

        throw $r4;

     label1:
        $r5 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r6 = $r1.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r5 = virtualinvoke $r5.<java.math.BigDecimal: java.math.BigDecimal multiply(java.math.BigDecimal)>($r6);

        $r1 = new org.gnucash.android.model.Money;

        $r2 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        specialinvoke $r1.<org.gnucash.android.model.Money: void <init>(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r5, $r2);

        return $r1;
    }
    public org.gnucash.android.model.Money negate()
    {
        org.gnucash.android.model.Money r0, $r1;
        org.gnucash.android.model.Commodity $r2;
        java.math.BigDecimal $r3;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 = new org.gnucash.android.model.Money;

        $r3 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r3 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigDecimal negate()>();

        $r2 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        specialinvoke $r1.<org.gnucash.android.model.Money: void <init>(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r3, $r2);

        return $r1;
    }
    public org.gnucash.android.model.Money subtract(org.gnucash.android.model.Money)
    {
        org.gnucash.android.model.Money r0, $r1;
        org.gnucash.android.model.Commodity $r2, $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.math.BigDecimal $r5, $r6;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: org.gnucash.android.model.Money;

        $r2 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $r3 = $r1.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $z0 = virtualinvoke $r2.<org.gnucash.android.model.Commodity: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Operation can only be performed on money with same currency");

        throw $r4;

     label1:
        $r5 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r6 = $r1.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r5 = virtualinvoke $r5.<java.math.BigDecimal: java.math.BigDecimal subtract(java.math.BigDecimal)>($r6);

        $r1 = new org.gnucash.android.model.Money;

        $r2 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        specialinvoke $r1.<org.gnucash.android.model.Money: void <init>(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r5, $r2);

        return $r1;
    }
    public java.lang.String toPlainString()
    {
        org.gnucash.android.model.Money r0;
        java.math.RoundingMode $r1;
        java.math.BigDecimal $r2;
        org.gnucash.android.model.Commodity $r3;
        int $i0;
        java.lang.String $r4;

        r0 := @this: org.gnucash.android.model.Money;

        $r2 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        $r3 = r0.<org.gnucash.android.model.Money: org.gnucash.android.model.Commodity mCommodity>;

        $i0 = virtualinvoke $r3.<org.gnucash.android.model.Commodity: int getSmallestFractionDigits()>();

        $r1 = r0.<org.gnucash.android.model.Money: java.math.RoundingMode ROUNDING_MODE>;

        $r2 = virtualinvoke $r2.<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)>($i0, $r1);

        $r4 = virtualinvoke $r2.<java.math.BigDecimal: java.lang.String toPlainString()>();

        return $r4;
    }
    public java.lang.String toString()
    {
        org.gnucash.android.model.Money r0;
        java.util.Locale $r1;
        java.lang.String $r2;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke r0.<org.gnucash.android.model.Money: java.lang.String formattedString(java.util.Locale)>($r1);

        return $r2;
    }
    public org.gnucash.android.model.Money withCurrency(org.gnucash.android.model.Commodity)
    {
        org.gnucash.android.model.Money r0, $r2;
        org.gnucash.android.model.Commodity $r1;
        java.math.BigDecimal $r3;

        r0 := @this: org.gnucash.android.model.Money;

        $r1 := @parameter0: org.gnucash.android.model.Commodity;

        $r2 = new org.gnucash.android.model.Money;

        $r3 = r0.<org.gnucash.android.model.Money: java.math.BigDecimal mAmount>;

        specialinvoke $r2.<org.gnucash.android.model.Money: void <init>(java.math.BigDecimal,org.gnucash.android.model.Commodity)>($r3, $r1);

        return $r2;
    }
