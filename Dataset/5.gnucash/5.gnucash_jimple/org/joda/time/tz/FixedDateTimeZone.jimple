org.joda.time.tz.FixedDateTimeZone extends org.joda.time.DateTimeZone
private static final long serialVersionUID
private final java.lang.String iNameKey
private final int iStandardOffset
private final int iWallOffset
    public void <init>(java.lang.String, java.lang.String, int, int)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        java.lang.String $r1, $r2;
        int $i0, $i1;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke r0.<org.joda.time.DateTimeZone: void <init>(java.lang.String)>($r1);

        r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String iNameKey> = $r2;

        r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset> = $i0;

        r0.<org.joda.time.tz.FixedDateTimeZone: int iStandardOffset> = $i1;

        return;
    }
    public boolean equals(java.lang.Object)
    {
        org.joda.time.tz.FixedDateTimeZone r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.String $r3, $r4;
        int $i0, $i1;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof org.joda.time.tz.FixedDateTimeZone;

        if $z0 == 0 goto label2;

        $r2 = (org.joda.time.tz.FixedDateTimeZone) $r1;

        $r3 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>();

        $r4 = virtualinvoke $r2.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $i0 = r0.<org.joda.time.tz.FixedDateTimeZone: int iStandardOffset>;

        $i1 = $r2.<org.joda.time.tz.FixedDateTimeZone: int iStandardOffset>;

        if $i0 != $i1 goto label2;

        $i0 = r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset>;

        $i1 = $r2.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset>;

        if $i0 == $i1 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    public java.lang.String getNameKey(long)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        long $l0;
        java.lang.String r1;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        $l0 := @parameter0: long;

        r1 = r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String iNameKey>;

        return r1;
    }
    public int getOffset(long)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        long $l0;
        int i1;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        $l0 := @parameter0: long;

        i1 = r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset>;

        return i1;
    }
    public int getOffsetFromLocal(long)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        long $l0;
        int i1;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        $l0 := @parameter0: long;

        i1 = r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset>;

        return i1;
    }
    public int getStandardOffset(long)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        long $l0;
        int i1;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        $l0 := @parameter0: long;

        i1 = r0.<org.joda.time.tz.FixedDateTimeZone: int iStandardOffset>;

        return i1;
    }
    public int hashCode()
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        java.lang.String $r1;
        int $i0, $i1;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        $r1 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = r0.<org.joda.time.tz.FixedDateTimeZone: int iStandardOffset>;

        $i1 = $i1 * 37;

        $i0 = $i0 + $i1;

        $i1 = r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset>;

        $i1 = $i1 * 31;

        $i0 = $i0 + $i1;

        return $i0;
    }
    public boolean isFixed()
    {
        org.joda.time.tz.FixedDateTimeZone r0;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        return 1;
    }
    public long nextTransition(long)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        long $l0;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        $l0 := @parameter0: long;

        return $l0;
    }
    public long previousTransition(long)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        long $l0;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        $l0 := @parameter0: long;

        return $l0;
    }
    public java.util.TimeZone toTimeZone()
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.util.TimeZone $r3;
        java.util.SimpleTimeZone $r4;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        $r1 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 6 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("+");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 == 0 goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT");

        $r1 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r1);

        return $r3;

     label2:
        $r4 = new java.util.SimpleTimeZone;

        $i0 = r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset>;

        $r1 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>();

        specialinvoke $r4.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>($i0, $r1);

        return $r4;
    }
