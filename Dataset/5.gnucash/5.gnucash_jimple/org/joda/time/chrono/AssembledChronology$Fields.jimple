org.joda.time.chrono.AssembledChronology$Fields extends java.lang.Object
public org.joda.time.DurationField centuries
public org.joda.time.DateTimeField centuryOfEra
public org.joda.time.DateTimeField clockhourOfDay
public org.joda.time.DateTimeField clockhourOfHalfday
public org.joda.time.DateTimeField dayOfMonth
public org.joda.time.DateTimeField dayOfWeek
public org.joda.time.DateTimeField dayOfYear
public org.joda.time.DurationField days
public org.joda.time.DateTimeField era
public org.joda.time.DurationField eras
public org.joda.time.DateTimeField halfdayOfDay
public org.joda.time.DurationField halfdays
public org.joda.time.DateTimeField hourOfDay
public org.joda.time.DateTimeField hourOfHalfday
public org.joda.time.DurationField hours
public org.joda.time.DurationField millis
public org.joda.time.DateTimeField millisOfDay
public org.joda.time.DateTimeField millisOfSecond
public org.joda.time.DateTimeField minuteOfDay
public org.joda.time.DateTimeField minuteOfHour
public org.joda.time.DurationField minutes
public org.joda.time.DateTimeField monthOfYear
public org.joda.time.DurationField months
public org.joda.time.DateTimeField secondOfDay
public org.joda.time.DateTimeField secondOfMinute
public org.joda.time.DurationField seconds
public org.joda.time.DateTimeField weekOfWeekyear
public org.joda.time.DurationField weeks
public org.joda.time.DateTimeField weekyear
public org.joda.time.DateTimeField weekyearOfCentury
public org.joda.time.DurationField weekyears
public org.joda.time.DateTimeField year
public org.joda.time.DateTimeField yearOfCentury
public org.joda.time.DateTimeField yearOfEra
public org.joda.time.DurationField years
    void <init>()
    {
        org.joda.time.chrono.AssembledChronology$Fields r0;

        r0 := @this: org.joda.time.chrono.AssembledChronology$Fields;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static boolean isSupported(org.joda.time.DateTimeField)
    {
        org.joda.time.DateTimeField $r0;
        boolean $z0;

        $r0 := @parameter0: org.joda.time.DateTimeField;

        if $r0 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r0.<org.joda.time.DateTimeField: boolean isSupported()>();

        return $z0;
    }
    private static boolean isSupported(org.joda.time.DurationField)
    {
        org.joda.time.DurationField $r0;
        boolean $z0;

        $r0 := @parameter0: org.joda.time.DurationField;

        if $r0 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r0.<org.joda.time.DurationField: boolean isSupported()>();

        return $z0;
    }
    public void copyFieldsFrom(org.joda.time.Chronology)
    {
        org.joda.time.chrono.AssembledChronology$Fields r0;
        org.joda.time.Chronology $r1;
        org.joda.time.DurationField $r2;
        boolean $z0;
        org.joda.time.DateTimeField $r3;

        r0 := @this: org.joda.time.chrono.AssembledChronology$Fields;

        $r1 := @parameter0: org.joda.time.Chronology;

        $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField millis()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r2);

        if $z0 == 0 goto label01;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField millis> = $r2;

     label01:
        $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField seconds()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r2);

        if $z0 == 0 goto label02;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField seconds> = $r2;

     label02:
        $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField minutes()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r2);

        if $z0 == 0 goto label03;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField minutes> = $r2;

     label03:
        $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField hours()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r2);

        if $z0 == 0 goto label04;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField hours> = $r2;

     label04:
        $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField halfdays()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r2);

        if $z0 == 0 goto label05;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField halfdays> = $r2;

     label05:
        $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField days()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r2);

        if $z0 == 0 goto label06;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField days> = $r2;

     label06:
        $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField weeks()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r2);

        if $z0 == 0 goto label07;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField weeks> = $r2;

     label07:
        $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField weekyears()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r2);

        if $z0 == 0 goto label08;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField weekyears> = $r2;

     label08:
        $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField months()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r2);

        if $z0 == 0 goto label09;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField months> = $r2;

     label09:
        $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField years()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r2);

        if $z0 == 0 goto label10;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField years> = $r2;

     label10:
        $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField centuries()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r2);

        if $z0 == 0 goto label11;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField centuries> = $r2;

     label11:
        $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DurationField eras()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r2);

        if $z0 == 0 goto label12;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField eras> = $r2;

     label12:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfSecond()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label13;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField millisOfSecond> = $r3;

     label13:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label14;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField millisOfDay> = $r3;

     label14:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField secondOfMinute()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label15;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField secondOfMinute> = $r3;

     label15:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField secondOfDay()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label16;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField secondOfDay> = $r3;

     label16:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField minuteOfHour()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label17;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField minuteOfHour> = $r3;

     label17:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField minuteOfDay()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label18;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField minuteOfDay> = $r3;

     label18:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField hourOfDay()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label19;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField hourOfDay> = $r3;

     label19:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField clockhourOfDay()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label20;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField clockhourOfDay> = $r3;

     label20:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField hourOfHalfday()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label21;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField hourOfHalfday> = $r3;

     label21:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField clockhourOfHalfday()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label22;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField clockhourOfHalfday> = $r3;

     label22:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField halfdayOfDay()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label23;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField halfdayOfDay> = $r3;

     label23:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfWeek()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label24;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfWeek> = $r3;

     label24:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfMonth()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label25;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfMonth> = $r3;

     label25:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfYear()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label26;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfYear> = $r3;

     label26:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField weekOfWeekyear()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label27;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekOfWeekyear> = $r3;

     label27:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField weekyear()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label28;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyear> = $r3;

     label28:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField weekyearOfCentury()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label29;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyearOfCentury> = $r3;

     label29:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField monthOfYear()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label30;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField monthOfYear> = $r3;

     label30:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label31;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField year> = $r3;

     label31:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField yearOfEra()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label32;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfEra> = $r3;

     label32:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField yearOfCentury()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label33;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfCentury> = $r3;

     label33:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField centuryOfEra()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label34;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra> = $r3;

     label34:
        $r3 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeField era()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r3);

        if $z0 == 0 goto label35;

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField era> = $r3;

     label35:
        return;
    }
