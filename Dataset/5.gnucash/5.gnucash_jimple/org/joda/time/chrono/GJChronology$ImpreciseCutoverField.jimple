org.joda.time.chrono.GJChronology$ImpreciseCutoverField extends org.joda.time.chrono.GJChronology$CutoverField
private static final long serialVersionUID
final org.joda.time.chrono.GJChronology this$0
    void <init>(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        org.joda.time.chrono.GJChronology $r1;
        org.joda.time.DateTimeField $r2, $r3;
        long $l0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        $r1 := @parameter0: org.joda.time.chrono.GJChronology;

        $r2 := @parameter1: org.joda.time.DateTimeField;

        $r3 := @parameter2: org.joda.time.DateTimeField;

        $l0 := @parameter3: long;

        specialinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: void <init>(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean)>($r1, $r2, $r3, null, $l0, 0);

        return;
    }
    void <init>(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, org.joda.time.DurationField, long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        org.joda.time.chrono.GJChronology $r1;
        org.joda.time.DateTimeField $r2, $r3;
        org.joda.time.DurationField $r4;
        long $l0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        $r1 := @parameter0: org.joda.time.chrono.GJChronology;

        $r2 := @parameter1: org.joda.time.DateTimeField;

        $r3 := @parameter2: org.joda.time.DateTimeField;

        $r4 := @parameter3: org.joda.time.DurationField;

        $l0 := @parameter4: long;

        specialinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: void <init>(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean)>($r1, $r2, $r3, $r4, $l0, 0);

        return;
    }
    void <init>(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, org.joda.time.DurationField, long, boolean)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        org.joda.time.chrono.GJChronology $r1;
        org.joda.time.DateTimeField $r2, $r3;
        long $l0;
        boolean $z0;
        org.joda.time.DurationField $r4, $r5;
        org.joda.time.chrono.GJChronology$LinkedDurationField $r6;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        $r1 := @parameter0: org.joda.time.chrono.GJChronology;

        $r2 := @parameter1: org.joda.time.DateTimeField;

        $r3 := @parameter2: org.joda.time.DateTimeField;

        $r4 := @parameter3: org.joda.time.DurationField;

        $l0 := @parameter4: long;

        $z0 := @parameter5: boolean;

        r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0> = $r1;

        specialinvoke r0.<org.joda.time.chrono.GJChronology$CutoverField: void <init>(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,long,boolean)>($r1, $r2, $r3, $l0, $z0);

        if $r4 != null goto label1;

        $r6 = new org.joda.time.chrono.GJChronology$LinkedDurationField;

        $r4 = $r6;

        $r5 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DurationField iDurationField>;

        specialinvoke $r6.<org.joda.time.chrono.GJChronology$LinkedDurationField: void <init>(org.joda.time.DurationField,org.joda.time.chrono.GJChronology$ImpreciseCutoverField)>($r5, r0);

     label1:
        r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DurationField iDurationField> = $r4;

        return;
    }
    void <init>(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, org.joda.time.DurationField, org.joda.time.DurationField, long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        org.joda.time.chrono.GJChronology $r1;
        org.joda.time.DateTimeField $r2, $r3;
        org.joda.time.DurationField $r4, $r5;
        long $l0;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        $r1 := @parameter0: org.joda.time.chrono.GJChronology;

        $r2 := @parameter1: org.joda.time.DateTimeField;

        $r3 := @parameter2: org.joda.time.DateTimeField;

        $r4 := @parameter3: org.joda.time.DurationField;

        $r5 := @parameter4: org.joda.time.DurationField;

        $l0 := @parameter5: long;

        specialinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: void <init>(org.joda.time.chrono.GJChronology,org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean)>($r1, $r2, $r3, $r4, $l0, 0);

        r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DurationField iRangeDurationField> = $r5;

        return;
    }
    public long add(long, int)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        long $l0, $l2, $l4, $l5;
        int $i1;
        byte $b3;
        org.joda.time.DateTimeField $r1;
        org.joda.time.chrono.GJChronology $r2;
        boolean $z0;
        org.joda.time.chrono.GregorianChronology $r3;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $l2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l0 cmp $l2;

        if $b3 < 0 goto label3;

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $l0 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,int)>($l0, $i1);

        $l2 = $l0;

        $l4 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l0 cmp $l4;

        if $b3 >= 0 goto label4;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $l4 = staticinvoke <org.joda.time.chrono.GJChronology: long access$000(org.joda.time.chrono.GJChronology)>($r2);

        $l4 = $l4 + $l0;

        $l5 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l4 cmp $l5;

        if $b3 >= 0 goto label4;

        $z0 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: boolean iConvertByWeekyear>;

        if $z0 == 0 goto label2;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r3 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r2);

        $r1 = virtualinvoke $r3.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField weekyear()>();

        $i1 = virtualinvoke $r1.<org.joda.time.DateTimeField: int get(long)>($l0);

        if $i1 > 0 goto label1;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r3 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r2);

        $r1 = virtualinvoke $r3.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField weekyear()>();

        $l2 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,int)>($l0, -1);

     label1:
        $l0 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long gregorianToJulian(long)>($l2);

        return $l0;

     label2:
        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r3 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r2);

        $r1 = virtualinvoke $r3.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField year()>();

        $i1 = virtualinvoke $r1.<org.joda.time.DateTimeField: int get(long)>($l0);

        if $i1 > 0 goto label1;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r3 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r2);

        $r1 = virtualinvoke $r3.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField year()>();

        $l2 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,int)>($l0, -1);

        goto label1;

     label3:
        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $l0 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,int)>($l0, $i1);

        $l2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l0 cmp $l2;

        if $b3 < 0 goto label4;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $l2 = staticinvoke <org.joda.time.chrono.GJChronology: long access$000(org.joda.time.chrono.GJChronology)>($r2);

        $l2 = $l0 - $l2;

        $l4 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l2 cmp $l4;

        if $b3 < 0 goto label4;

        $l0 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long julianToGregorian(long)>($l0);

     label4:
        return $l0;
    }
    public long add(long, long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        long $l0, $l1, $l2, $l4;
        byte $b3;
        org.joda.time.DateTimeField $r1;
        org.joda.time.chrono.GJChronology $r2;
        boolean $z0;
        org.joda.time.chrono.GregorianChronology $r3;
        int $i5;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l0 cmp $l2;

        if $b3 < 0 goto label3;

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $l0 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,long)>($l0, $l1);

        $l1 = $l0;

        $l2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l0 cmp $l2;

        if $b3 >= 0 goto label4;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $l2 = staticinvoke <org.joda.time.chrono.GJChronology: long access$000(org.joda.time.chrono.GJChronology)>($r2);

        $l2 = $l2 + $l0;

        $l4 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l2 cmp $l4;

        if $b3 >= 0 goto label4;

        $z0 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: boolean iConvertByWeekyear>;

        if $z0 == 0 goto label2;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r3 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r2);

        $r1 = virtualinvoke $r3.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField weekyear()>();

        $i5 = virtualinvoke $r1.<org.joda.time.DateTimeField: int get(long)>($l0);

        if $i5 > 0 goto label1;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r3 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r2);

        $r1 = virtualinvoke $r3.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField weekyear()>();

        $l1 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,int)>($l0, -1);

     label1:
        $l0 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long gregorianToJulian(long)>($l1);

        return $l0;

     label2:
        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r3 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r2);

        $r1 = virtualinvoke $r3.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField year()>();

        $i5 = virtualinvoke $r1.<org.joda.time.DateTimeField: int get(long)>($l0);

        if $i5 > 0 goto label1;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $r3 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology access$100(org.joda.time.chrono.GJChronology)>($r2);

        $r1 = virtualinvoke $r3.<org.joda.time.chrono.GregorianChronology: org.joda.time.DateTimeField year()>();

        $l1 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,int)>($l0, -1);

        goto label1;

     label3:
        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $l0 = virtualinvoke $r1.<org.joda.time.DateTimeField: long add(long,long)>($l0, $l1);

        $l1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l0 cmp $l1;

        if $b3 < 0 goto label4;

        $r2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.chrono.GJChronology this$0>;

        $l1 = staticinvoke <org.joda.time.chrono.GJChronology: long access$000(org.joda.time.chrono.GJChronology)>($r2);

        $l1 = $l0 - $l1;

        $l2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l1 cmp $l2;

        if $b3 < 0 goto label4;

        $l0 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long julianToGregorian(long)>($l0);

     label4:
        return $l0;
    }
    public int getDifference(long, long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        long $l0, $l1, $l2;
        byte $b3;
        org.joda.time.DateTimeField $r1;
        int $i4;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l0 cmp $l2;

        if $b3 < 0 goto label2;

        $l2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l1 cmp $l2;

        if $b3 < 0 goto label1;

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $i4 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getDifference(long,long)>($l0, $l1);

        return $i4;

     label1:
        $l0 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long gregorianToJulian(long)>($l0);

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $i4 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getDifference(long,long)>($l0, $l1);

        return $i4;

     label2:
        $l2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l1 cmp $l2;

        if $b3 >= 0 goto label3;

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $i4 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getDifference(long,long)>($l0, $l1);

        return $i4;

     label3:
        $l0 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long julianToGregorian(long)>($l0);

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $i4 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getDifference(long,long)>($l0, $l1);

        return $i4;
    }
    public long getDifferenceAsLong(long, long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        long $l0, $l1, $l2;
        byte $b3;
        org.joda.time.DateTimeField $r1;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l0 cmp $l2;

        if $b3 < 0 goto label2;

        $l2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l1 cmp $l2;

        if $b3 < 0 goto label1;

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $l0 = virtualinvoke $r1.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>($l0, $l1);

        return $l0;

     label1:
        $l0 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long gregorianToJulian(long)>($l0);

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $l0 = virtualinvoke $r1.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>($l0, $l1);

        return $l0;

     label2:
        $l2 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b3 = $l1 cmp $l2;

        if $b3 >= 0 goto label3;

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $l0 = virtualinvoke $r1.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>($l0, $l1);

        return $l0;

     label3:
        $l0 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long julianToGregorian(long)>($l0);

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $l0 = virtualinvoke $r1.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>($l0, $l1);

        return $l0;
    }
    public int getMaximumValue(long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        long $l0, $l1;
        byte $b2;
        org.joda.time.DateTimeField $r1;
        int $i3;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        $l0 := @parameter0: long;

        $l1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b2 = $l0 cmp $l1;

        if $b2 < 0 goto label1;

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $i3 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getMaximumValue(long)>($l0);

        return $i3;

     label1:
        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $i3 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getMaximumValue(long)>($l0);

        return $i3;
    }
    public int getMinimumValue(long)
    {
        org.joda.time.chrono.GJChronology$ImpreciseCutoverField r0;
        long $l0, $l1;
        byte $b2;
        org.joda.time.DateTimeField $r1;
        int $i3;

        r0 := @this: org.joda.time.chrono.GJChronology$ImpreciseCutoverField;

        $l0 := @parameter0: long;

        $l1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: long iCutover>;

        $b2 = $l0 cmp $l1;

        if $b2 < 0 goto label1;

        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iGregorianField>;

        $i3 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getMinimumValue(long)>($l0);

        return $i3;

     label1:
        $r1 = r0.<org.joda.time.chrono.GJChronology$ImpreciseCutoverField: org.joda.time.DateTimeField iJulianField>;

        $i3 = virtualinvoke $r1.<org.joda.time.DateTimeField: int getMinimumValue(long)>($l0);

        return $i3;
    }
