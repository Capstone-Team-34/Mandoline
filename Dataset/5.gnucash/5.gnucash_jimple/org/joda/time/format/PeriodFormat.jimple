org.joda.time.format.PeriodFormat extends java.lang.Object
private static final java.lang.String BUNDLE_NAME
private static final java.util.concurrent.ConcurrentMap FORMATTERS
    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <org.joda.time.format.PeriodFormat: java.util.concurrent.ConcurrentMap FORMATTERS> = $r0;

        return;
    }
    protected void <init>()
    {
        org.joda.time.format.PeriodFormat r0;

        r0 := @this: org.joda.time.format.PeriodFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static org.joda.time.format.PeriodFormatter buildNonRegExFormatter(java.util.ResourceBundle, java.util.Locale)
    {
        java.util.ResourceBundle $r0;
        java.util.Locale $r1;
        java.lang.String[] $r2;
        org.joda.time.format.PeriodFormatterBuilder $r3;
        java.lang.String $r4, $r5;
        org.joda.time.format.PeriodFormatter $r6;

        $r0 := @parameter0: java.util.ResourceBundle;

        $r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <org.joda.time.format.PeriodFormat: java.lang.String[] retrieveVariants(java.util.ResourceBundle)>($r0);

        $r3 = new org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendYears()>();

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.year");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.years");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r4, $r5);

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r4, $r5, $r2);

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMonths()>();

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.month");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.months");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r4, $r5);

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r4, $r5, $r2);

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendWeeks()>();

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.week");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.weeks");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r4, $r5);

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r4, $r5, $r2);

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendDays()>();

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.day");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.days");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r4, $r5);

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r4, $r5, $r2);

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendHours()>();

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hour");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hours");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r4, $r5);

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r4, $r5, $r2);

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMinutes()>();

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minute");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minutes");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r4, $r5);

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r4, $r5, $r2);

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeconds()>();

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.second");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.seconds");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r4, $r5);

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r4, $r5, $r2);

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMillis()>();

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.millisecond");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.milliseconds");

        $r3 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r4, $r5);

        $r6 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>();

        $r6 = virtualinvoke $r6.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodFormatter withLocale(java.util.Locale)>($r1);

        return $r6;
    }
    private static org.joda.time.format.PeriodFormatter buildRegExFormatter(java.util.ResourceBundle, java.util.Locale)
    {
        java.util.ResourceBundle $r0;
        java.util.Locale $r1;
        org.joda.time.format.PeriodFormatterBuilder $r2;
        java.lang.String[] $r3, $r6, $r7;
        java.lang.String $r4, $r5, $r8;
        boolean $z0;
        org.joda.time.format.PeriodFormatter $r9;

        $r0 := @parameter0: java.util.ResourceBundle;

        $r1 := @parameter1: java.util.Locale;

        $r3 = staticinvoke <org.joda.time.format.PeriodFormat: java.lang.String[] retrieveVariants(java.util.ResourceBundle)>($r0);

        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.regex.separator");

        $r2 = new org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: void <init>()>();

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendYears()>();

        $z0 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>($r0, "PeriodFormat.years.regex");

        if $z0 == 0 goto label09;

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.years.regex");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.years.list");

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r6, $r7);

     label01:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r5, $r8, $r3);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMonths()>();

        $z0 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>($r0, "PeriodFormat.months.regex");

        if $z0 == 0 goto label10;

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.months.regex");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.months.list");

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r6, $r7);

     label02:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r5, $r8, $r3);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendWeeks()>();

        $z0 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>($r0, "PeriodFormat.weeks.regex");

        if $z0 == 0 goto label11;

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.weeks.regex");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.weeks.list");

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r6, $r7);

     label03:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r5, $r8, $r3);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendDays()>();

        $z0 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>($r0, "PeriodFormat.days.regex");

        if $z0 == 0 goto label12;

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.days.regex");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.days.list");

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r6, $r7);

     label04:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r5, $r8, $r3);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendHours()>();

        $z0 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>($r0, "PeriodFormat.hours.regex");

        if $z0 == 0 goto label13;

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hours.regex");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hours.list");

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r6, $r7);

     label05:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r5, $r8, $r3);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMinutes()>();

        $z0 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>($r0, "PeriodFormat.minutes.regex");

        if $z0 == 0 goto label14;

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minutes.regex");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minutes.list");

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r6, $r7);

     label06:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r5, $r8, $r3);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeconds()>();

        $z0 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>($r0, "PeriodFormat.seconds.regex");

        if $z0 == 0 goto label15;

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.seconds.regex");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.seconds.list");

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r6, $r7);

     label07:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r5, $r8, $r3);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMillis()>();

        $z0 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>($r0, "PeriodFormat.milliseconds.regex");

        if $z0 == 0 goto label16;

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.milliseconds.regex");

        $r3 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.milliseconds.list");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String)>($r4);

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r3, $r6);

     label08:
        $r9 = virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>();

        $r9 = virtualinvoke $r9.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodFormatter withLocale(java.util.Locale)>($r1);

        return $r9;

     label09:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.year");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.years");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r5, $r8);

        goto label01;

     label10:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.month");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.months");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r5, $r8);

        goto label02;

     label11:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.week");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.weeks");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r5, $r8);

        goto label03;

     label12:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.day");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.days");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r5, $r8);

        goto label04;

     label13:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hour");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hours");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r5, $r8);

        goto label05;

     label14:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minute");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minutes");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r5, $r8);

        goto label06;

     label15:
        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.second");

        $r8 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.seconds");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r5, $r8);

        goto label07;

     label16:
        $r4 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.millisecond");

        $r5 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.milliseconds");

        virtualinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r4, $r5);

        goto label08;
    }
    private static org.joda.time.format.PeriodFormatter buildWordBased(java.util.Locale)
    {
        java.util.Locale $r0;
        java.util.ResourceBundle $r1;
        boolean $z0;
        org.joda.time.format.PeriodFormatter $r2;

        $r0 := @parameter0: java.util.Locale;

        $r1 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("org.joda.time.format.messages", $r0);

        $z0 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>($r1, "PeriodFormat.regex.separator");

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <org.joda.time.format.PeriodFormat: org.joda.time.format.PeriodFormatter buildRegExFormatter(java.util.ResourceBundle,java.util.Locale)>($r1, $r0);

        return $r2;

     label1:
        $r2 = staticinvoke <org.joda.time.format.PeriodFormat: org.joda.time.format.PeriodFormatter buildNonRegExFormatter(java.util.ResourceBundle,java.util.Locale)>($r1, $r0);

        return $r2;
    }
    private static boolean containsKey(java.util.ResourceBundle, java.lang.String)
    {
        java.util.ResourceBundle $r0;
        java.lang.String $r1, $r4;
        java.util.Enumeration $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r0 := @parameter0: java.util.ResourceBundle;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.util.ResourceBundle: java.util.Enumeration getKeys()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }
    public static org.joda.time.format.PeriodFormatter getDefault()
    {
        org.joda.time.format.PeriodFormatter $r0;
        java.util.Locale $r1;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r0 = staticinvoke <org.joda.time.format.PeriodFormat: org.joda.time.format.PeriodFormatter wordBased(java.util.Locale)>($r1);

        return $r0;
    }
    private static java.lang.String[] retrieveVariants(java.util.ResourceBundle)
    {
        java.util.ResourceBundle $r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.util.ResourceBundle;

        $r1 = newarray (java.lang.String)[4];

        $r2 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.space");

        $r1[0] = $r2;

        $r2 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.comma");

        $r1[1] = $r2;

        $r2 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commandand");

        $r1[2] = $r2;

        $r2 = virtualinvoke $r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspaceand");

        $r1[3] = $r2;

        return $r1;
    }
    public static org.joda.time.format.PeriodFormatter wordBased()
    {
        java.util.Locale $r0;
        org.joda.time.format.PeriodFormatter $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <org.joda.time.format.PeriodFormat: org.joda.time.format.PeriodFormatter wordBased(java.util.Locale)>($r0);

        return $r1;
    }
    public static org.joda.time.format.PeriodFormatter wordBased(java.util.Locale)
    {
        java.util.Locale $r0;
        java.util.concurrent.ConcurrentMap $r1;
        java.lang.Object $r2;
        org.joda.time.format.PeriodFormatter $r3, $r5;
        org.joda.time.format.PeriodFormat$DynamicWordBased $r4;

        $r0 := @parameter0: java.util.Locale;

        $r1 = <org.joda.time.format.PeriodFormat: java.util.concurrent.ConcurrentMap FORMATTERS>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>($r0);

        $r3 = (org.joda.time.format.PeriodFormatter) $r2;

        if $r3 != null goto label1;

        $r4 = new org.joda.time.format.PeriodFormat$DynamicWordBased;

        $r3 = staticinvoke <org.joda.time.format.PeriodFormat: org.joda.time.format.PeriodFormatter buildWordBased(java.util.Locale)>($r0);

        specialinvoke $r4.<org.joda.time.format.PeriodFormat$DynamicWordBased: void <init>(org.joda.time.format.PeriodFormatter)>($r3);

        $r3 = new org.joda.time.format.PeriodFormatter;

        specialinvoke $r3.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,java.util.Locale,org.joda.time.PeriodType)>($r4, $r4, $r0, null);

        $r1 = <org.joda.time.format.PeriodFormat: java.util.concurrent.ConcurrentMap FORMATTERS>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r0, $r3);

        $r5 = (org.joda.time.format.PeriodFormatter) $r2;

        if $r5 == null goto label1;

        return $r5;

     label1:
        return $r3;
    }
