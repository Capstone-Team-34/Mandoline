org.joda.time.format.PeriodFormatterBuilder$CompositeAffix extends org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix
private final org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft
private final java.lang.String[] iLeftRightCombinations
private final org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight
    void <init>(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix, org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r1, $r2;
        java.util.HashSet $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4, $r7;
        java.lang.String[] $r5, $r6;
        java.lang.StringBuilder $r8;
        java.lang.Object[] $r9;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        $r1 := @parameter0: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        $r2 := @parameter1: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix;

        specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft> = $r1;

        r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        $r5 = interfaceinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: java.lang.String[] getAffixes()>();

        $i0 = lengthof $r5;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label4;

        $r4 = $r5[$i2];

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        $r6 = interfaceinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: java.lang.String[] getAffixes()>();

        $i1 = lengthof $r6;

        $i3 = 0;

     label2:
        if $i3 >= $i1 goto label3;

        $r7 = $r6[$i3];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r7);

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        $i0 = interfaceinvoke $r3.<java.util.Set: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r9 = interfaceinvoke $r3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r5 = (java.lang.String[]) $r9;

        r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: java.lang.String[] iLeftRightCombinations> = $r5;

        return;
    }
    public int calculatePrintedLength(int)
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        int $i0, $i1;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r1;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        $i0 := @parameter0: int;

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        $i1 = interfaceinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int calculatePrintedLength(int)>($i0);

        $r1 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        $i0 = interfaceinvoke $r1.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int calculatePrintedLength(int)>($i0);

        $i0 = $i1 + $i0;

        return $i0;
    }
    public java.lang.String[] getAffixes()
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        java.lang.Object $r1;
        java.lang.String[] $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: java.lang.String[] iLeftRightCombinations>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (java.lang.String[]) $r1;

        return $r2;
    }
    public int parse(java.lang.String, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        $i1 = interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>($r1, $i0);

        if $i1 < 0 goto label1;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        $i1 = interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>($r1, $i1);

        if $i1 < 0 goto label1;

        $i2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: int parse(java.lang.String,int)>($r1, $i1);

        $i2 = $i2 - $i1;

        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: boolean matchesOtherAffix(int,java.lang.String,int)>($i2, $r1, $i0);

        if $z0 == 0 goto label1;

        $i0 = $i0 ^ -1;

        return $i0;

     label1:
        return $i1;
    }
    public void printTo(java.io.Writer, int) throws java.io.IOException
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        java.io.Writer $r1;
        int $i0;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        $r1 := @parameter0: java.io.Writer;

        $i0 := @parameter1: int;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.io.Writer,int)>($r1, $i0);

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.io.Writer,int)>($r1, $i0);

        return;
    }
    public void printTo(java.lang.StringBuffer, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        java.lang.StringBuffer $r1;
        int $i0;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        $r1 := @parameter0: java.lang.StringBuffer;

        $i0 := @parameter1: int;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.lang.StringBuffer,int)>($r1, $i0);

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: void printTo(java.lang.StringBuffer,int)>($r1, $i0);

        return;
    }
    public int scan(java.lang.String, int)
    {
        org.joda.time.format.PeriodFormatterBuilder$CompositeAffix r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3;
        org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix $r2, $r3;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatterBuilder$CompositeAffix;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        $i1 = interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int scan(java.lang.String,int)>($r1, $i0);

        if $i1 < 0 goto label3;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft>;

        $i2 = interfaceinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>($r1, $i1);

        $i2 = interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int scan(java.lang.String,int)>($r1, $i2);

        if $i2 < 0 goto label1;

        $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>;

        $i3 = interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>($r1, $i2);

        $i3 = $i3 - $i1;

        $z0 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: boolean matchesOtherAffix(int,java.lang.String,int)>($i3, $r1, $i0);

        if $z0 != 0 goto label3;

     label1:
        if $i1 <= 0 goto label2;

        return $i1;

     label2:
        return $i2;

     label3:
        $i0 = $i0 ^ -1;

        return $i0;
    }
