org.joda.time.format.PeriodFormatter extends java.lang.Object
private final java.util.Locale iLocale
private final org.joda.time.PeriodType iParseType
private final org.joda.time.format.PeriodParser iParser
private final org.joda.time.format.PeriodPrinter iPrinter
    public void <init>(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser)
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodPrinter $r1;
        org.joda.time.format.PeriodParser $r2;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 := @parameter0: org.joda.time.format.PeriodPrinter;

        $r2 := @parameter1: org.joda.time.format.PeriodParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter> = $r1;

        r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser> = $r2;

        r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale> = null;

        r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType> = null;

        return;
    }
    void <init>(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser, java.util.Locale, org.joda.time.PeriodType)
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodPrinter $r1;
        org.joda.time.format.PeriodParser $r2;
        java.util.Locale $r3;
        org.joda.time.PeriodType $r4;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 := @parameter0: org.joda.time.format.PeriodPrinter;

        $r2 := @parameter1: org.joda.time.format.PeriodParser;

        $r3 := @parameter2: java.util.Locale;

        $r4 := @parameter3: org.joda.time.PeriodType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter> = $r1;

        r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser> = $r2;

        r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale> = $r3;

        r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType> = $r4;

        return;
    }
    private void checkParser()
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodParser $r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>;

        if $r1 != null goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Parsing not supported");

        throw $r2;

     label1:
        return;
    }
    private void checkPeriod(org.joda.time.ReadablePeriod)
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.ReadablePeriod $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 := @parameter0: org.joda.time.ReadablePeriod;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Period must not be null");

        throw $r2;

     label1:
        return;
    }
    private void checkPrinter()
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodPrinter $r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>;

        if $r1 != null goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Printing not supported");

        throw $r2;

     label1:
        return;
    }
    public java.util.Locale getLocale()
    {
        org.joda.time.format.PeriodFormatter r0;
        java.util.Locale r1;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        r1 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        return r1;
    }
    public org.joda.time.PeriodType getParseType()
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.PeriodType r1;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType>;

        return r1;
    }
    public org.joda.time.format.PeriodParser getParser()
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodParser r1;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>;

        return r1;
    }
    public org.joda.time.format.PeriodPrinter getPrinter()
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodPrinter r1;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>;

        return r1;
    }
    public boolean isParser()
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodParser $r1;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isPrinter()
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodPrinter $r1;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public int parseInto(org.joda.time.ReadWritablePeriod, java.lang.String, int)
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.ReadWritablePeriod $r1;
        java.lang.String $r2;
        int $i0;
        java.util.Locale $r3;
        org.joda.time.format.PeriodParser $r4;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 := @parameter0: org.joda.time.ReadWritablePeriod;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkParser()>();

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPeriod(org.joda.time.ReadablePeriod)>($r1);

        $r4 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>();

        $r3 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        $i0 = interfaceinvoke $r4.<org.joda.time.format.PeriodParser: int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)>($r1, $r2, $i0, $r3);

        return $i0;
    }
    public org.joda.time.MutablePeriod parseMutablePeriod(java.lang.String)
    {
        org.joda.time.format.PeriodFormatter r0;
        java.lang.String $r1;
        java.util.Locale $r2;
        org.joda.time.MutablePeriod $r3;
        org.joda.time.PeriodType $r4;
        org.joda.time.format.PeriodParser $r5;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkParser()>();

        $r3 = new org.joda.time.MutablePeriod;

        $r4 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType>;

        specialinvoke $r3.<org.joda.time.MutablePeriod: void <init>(long,org.joda.time.PeriodType)>(0L, $r4);

        $r5 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>();

        $r2 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        $i0 = interfaceinvoke $r5.<org.joda.time.format.PeriodParser: int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)>($r3, $r1, 0, $r2);

        $i1 = $i0;

        if $i0 < 0 goto label1;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 < $i2 goto label2;

        return $r3;

     label1:
        $i1 = $i0 ^ -1;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        $r1 = staticinvoke <org.joda.time.format.FormatUtils: java.lang.String createErrorMessage(java.lang.String,int)>($r1, $i1);

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r6;
    }
    public org.joda.time.Period parsePeriod(java.lang.String)
    {
        org.joda.time.format.PeriodFormatter r0;
        java.lang.String $r1;
        org.joda.time.MutablePeriod $r2;
        org.joda.time.Period $r3;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkParser()>();

        $r2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.MutablePeriod parseMutablePeriod(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<org.joda.time.MutablePeriod: org.joda.time.Period toPeriod()>();

        return $r3;
    }
    public java.lang.String print(org.joda.time.ReadablePeriod)
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.ReadablePeriod $r1;
        java.lang.StringBuffer $r2;
        org.joda.time.format.PeriodPrinter $r3;
        java.util.Locale $r4;
        int $i0;
        java.lang.String $r5;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 := @parameter0: org.joda.time.ReadablePeriod;

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPrinter()>();

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPeriod(org.joda.time.ReadablePeriod)>($r1);

        $r3 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>();

        $r2 = new java.lang.StringBuffer;

        $r4 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        $i0 = interfaceinvoke $r3.<org.joda.time.format.PeriodPrinter: int calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)>($r1, $r4);

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i0);

        $r4 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        interfaceinvoke $r3.<org.joda.time.format.PeriodPrinter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)>($r2, $r1, $r4);

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
    public void printTo(java.io.Writer, org.joda.time.ReadablePeriod) throws java.io.IOException
    {
        org.joda.time.format.PeriodFormatter r0;
        java.io.Writer $r1;
        org.joda.time.ReadablePeriod $r2;
        java.util.Locale $r3;
        org.joda.time.format.PeriodPrinter $r4;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 := @parameter0: java.io.Writer;

        $r2 := @parameter1: org.joda.time.ReadablePeriod;

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPrinter()>();

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPeriod(org.joda.time.ReadablePeriod)>($r2);

        $r4 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>();

        $r3 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        interfaceinvoke $r4.<org.joda.time.format.PeriodPrinter: void printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)>($r1, $r2, $r3);

        return;
    }
    public void printTo(java.lang.StringBuffer, org.joda.time.ReadablePeriod)
    {
        org.joda.time.format.PeriodFormatter r0;
        java.lang.StringBuffer $r1;
        org.joda.time.ReadablePeriod $r2;
        java.util.Locale $r3;
        org.joda.time.format.PeriodPrinter $r4;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 := @parameter0: java.lang.StringBuffer;

        $r2 := @parameter1: org.joda.time.ReadablePeriod;

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPrinter()>();

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPeriod(org.joda.time.ReadablePeriod)>($r2);

        $r4 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>();

        $r3 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        interfaceinvoke $r4.<org.joda.time.format.PeriodPrinter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)>($r1, $r2, $r3);

        return;
    }
    public org.joda.time.format.PeriodFormatter withLocale(java.util.Locale)
    {
        java.util.Locale $r0, $r5;
        org.joda.time.format.PeriodPrinter $r1;
        org.joda.time.format.PeriodParser $r2;
        org.joda.time.PeriodType $r3;
        org.joda.time.format.PeriodFormatter r4, $r6;
        boolean $z0;

        r4 := @this: org.joda.time.format.PeriodFormatter;

        $r0 := @parameter0: java.util.Locale;

        $r5 = virtualinvoke r4.<org.joda.time.format.PeriodFormatter: java.util.Locale getLocale()>();

        if $r0 == $r5 goto label2;

        if $r0 == null goto label1;

        $r5 = virtualinvoke r4.<org.joda.time.format.PeriodFormatter: java.util.Locale getLocale()>();

        $z0 = virtualinvoke $r0.<java.util.Locale: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        return r4;

     label1:
        $r6 = new org.joda.time.format.PeriodFormatter;

        $r1 = r4.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>;

        $r2 = r4.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>;

        $r3 = r4.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType>;

        specialinvoke $r6.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,java.util.Locale,org.joda.time.PeriodType)>($r1, $r2, $r0, $r3);

        return $r6;

     label2:
        return r4;
    }
    public org.joda.time.format.PeriodFormatter withParseType(org.joda.time.PeriodType)
    {
        org.joda.time.PeriodType $r0, $r5;
        org.joda.time.format.PeriodPrinter $r1;
        org.joda.time.format.PeriodParser $r2;
        java.util.Locale $r3;
        org.joda.time.format.PeriodFormatter r4, $r6;

        r4 := @this: org.joda.time.format.PeriodFormatter;

        $r0 := @parameter0: org.joda.time.PeriodType;

        $r5 = r4.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType>;

        if $r0 != $r5 goto label1;

        return r4;

     label1:
        $r6 = new org.joda.time.format.PeriodFormatter;

        $r1 = r4.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>;

        $r2 = r4.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>;

        $r3 = r4.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        specialinvoke $r6.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,java.util.Locale,org.joda.time.PeriodType)>($r1, $r2, $r3, $r0);

        return $r6;
    }
