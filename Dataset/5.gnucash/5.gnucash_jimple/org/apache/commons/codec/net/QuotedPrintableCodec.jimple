org.apache.commons.codec.net.QuotedPrintableCodec extends java.lang.Object implements org.apache.commons.codec.BinaryEncoder org.apache.commons.codec.BinaryDecoder org.apache.commons.codec.StringEncoder org.apache.commons.codec.StringDecoder
private static final byte ESCAPE_CHAR
private static final java.util.BitSet PRINTABLE_CHARS
private static final byte SPACE
private static final byte TAB
private final java.nio.charset.Charset charset
    static void <clinit>()
    {
        java.util.BitSet $r0;
        int i0;

        $r0 = new java.util.BitSet;

        specialinvoke $r0.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS> = $r0;

        i0 = 33;

     label1:
        if i0 > 60 goto label2;

        $r0 = <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS>;

        virtualinvoke $r0.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label1;

     label2:
        i0 = 62;

     label3:
        if i0 > 126 goto label4;

        $r0 = <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS>;

        virtualinvoke $r0.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label3;

     label4:
        $r0 = <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS>;

        virtualinvoke $r0.<java.util.BitSet: void set(int)>(9);

        $r0 = <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS>;

        virtualinvoke $r0.<java.util.BitSet: void set(int)>(32);

        return;
    }
    public void <init>()
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.nio.charset.Charset $r1;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 = <org.apache.commons.codec.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: void <init>(java.nio.charset.Charset)>($r1);

        return;
    }
    public void <init>(java.lang.String) throws java.nio.charset.IllegalCharsetNameException, java.lang.IllegalArgumentException, java.nio.charset.UnsupportedCharsetException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r1);

        specialinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: void <init>(java.nio.charset.Charset)>($r2);

        return;
    }
    public void <init>(java.nio.charset.Charset)
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.nio.charset.Charset $r1;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 := @parameter0: java.nio.charset.Charset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.nio.charset.Charset charset> = $r1;

        return;
    }
    public static final byte[] decodeQuotedPrintable(byte[]) throws org.apache.commons.codec.DecoderException
    {
        byte[] $r0;
        byte b0;
        java.io.ByteArrayOutputStream r1;
        java.lang.ArrayIndexOutOfBoundsException r2;
        int i1, $i2, $i3;
        char $c4;
        org.apache.commons.codec.DecoderException $r3;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label01;

        return null;

     label01:
        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        i1 = 0;

     label02:
        $i2 = lengthof $r0;

        if i1 >= $i2 goto label11;

        b0 = $r0[i1];

        if b0 != 61 goto label10;

        i1 = i1 + 1;

     label03:
        b0 = $r0[i1];

        $i2 = staticinvoke <org.apache.commons.codec.net.Utils: int digit16(byte)>(b0);

     label04:
        i1 = i1 + 1;

     label05:
        b0 = $r0[i1];

        $i3 = staticinvoke <org.apache.commons.codec.net.Utils: int digit16(byte)>(b0);

     label06:
        $i2 = $i2 << 4;

        $i2 = $i2 + $i3;

        $c4 = (char) $i2;

     label07:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($c4);

     label08:
        i1 = i1 + 1;

        goto label02;

     label09:
        r2 := @caughtexception;

        $r3 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r3.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid quoted-printable encoding", r2);

        throw $r3;

     label10:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(b0);

        goto label08;

     label11:
        $r0 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;

        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label09;
        catch java.lang.ArrayIndexOutOfBoundsException from label05 to label06 with label09;
        catch java.lang.ArrayIndexOutOfBoundsException from label07 to label08 with label09;
    }
    private static final void encodeQuotedPrintable(int, java.io.ByteArrayOutputStream)
    {
        int $i0, $i1;
        java.io.ByteArrayOutputStream $r0;
        char $c2, $c3;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.io.ByteArrayOutputStream;

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(int)>(61);

        $i1 = $i0 >> 4;

        $i1 = $i1 & 15;

        $c2 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i1, 16);

        $c2 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c2);

        $i0 = $i0 & 15;

        $c3 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i0, 16);

        $c3 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c3);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(int)>($c2);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(int)>($c3);

        return;
    }
    public static final byte[] encodeQuotedPrintable(java.util.BitSet, byte[])
    {
        byte[] $r0;
        java.io.ByteArrayOutputStream r1;
        byte b0;
        int i1, i2, i3;
        java.util.BitSet $r2;
        boolean $z0;

        $r2 := @parameter0: java.util.BitSet;

        $r0 := @parameter1: byte[];

        if $r0 != null goto label1;

        return null;

     label1:
        if $r2 != null goto label2;

        $r2 = <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS>;

     label2:
        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        i1 = lengthof $r0;

        i2 = 0;

     label3:
        if i2 >= i1 goto label7;

        b0 = $r0[i2];

        i3 = b0;

        if b0 >= 0 goto label4;

        i3 = b0 + 256;

     label4:
        $z0 = virtualinvoke $r2.<java.util.BitSet: boolean get(int)>(i3);

        if $z0 == 0 goto label6;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(i3);

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: void encodeQuotedPrintable(int,java.io.ByteArrayOutputStream)>(i3, r1);

        goto label5;

     label7:
        $r0 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;
    }
    public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.Object r1;
        boolean $z0;
        byte[] r2;
        java.lang.String r3;
        org.apache.commons.codec.DecoderException $r4;
        java.lang.StringBuilder $r5;
        java.lang.Class $r6;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label2;

        r2 = (byte[]) r1;

        r2 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] decode(byte[])>(r2);

        return r2;

     label2:
        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label3;

        r3 = (java.lang.String) r1;

        r3 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String decode(java.lang.String)>(r3);

        return r3;

     label3:
        $r4 = new org.apache.commons.codec.DecoderException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Objects of type ");

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r3 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be quoted-printable decoded");

        r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>(r3);

        throw $r4;
    }
    public java.lang.String decode(java.lang.String) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.nio.charset.Charset getCharset()>();

        $r1 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String decode(java.lang.String,java.nio.charset.Charset)>($r1, $r2);

        return $r1;
    }
    public java.lang.String decode(java.lang.String, java.lang.String) throws org.apache.commons.codec.DecoderException, java.io.UnsupportedEncodingException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String $r1, $r2, $r3;
        byte[] $r4;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = new java.lang.String;

        $r4 = staticinvoke <org.apache.commons.codec.binary.StringUtils: byte[] getBytesUsAscii(java.lang.String)>($r1);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] decode(byte[])>($r4);

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, $r2);

        return $r3;
    }
    public java.lang.String decode(java.lang.String, java.nio.charset.Charset) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String $r1, $r3;
        java.nio.charset.Charset $r2;
        byte[] $r4;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.nio.charset.Charset;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = new java.lang.String;

        $r4 = staticinvoke <org.apache.commons.codec.binary.StringUtils: byte[] getBytesUsAscii(java.lang.String)>($r1);

        $r4 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] decode(byte[])>($r4);

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r4, $r2);

        return $r3;
    }
    public byte[] decode(byte[]) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        byte[] $r1;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 := @parameter0: byte[];

        $r1 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: byte[] decodeQuotedPrintable(byte[])>($r1);

        return $r1;
    }
    public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.Object r1;
        boolean $z0;
        byte[] r2;
        java.lang.String r3;
        org.apache.commons.codec.EncoderException $r4;
        java.lang.StringBuilder $r5;
        java.lang.Class $r6;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label2;

        r2 = (byte[]) r1;

        r2 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] encode(byte[])>(r2);

        return r2;

     label2:
        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label3;

        r3 = (java.lang.String) r1;

        r3 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String encode(java.lang.String)>(r3);

        return r3;

     label3:
        $r4 = new org.apache.commons.codec.EncoderException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Objects of type ");

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r3 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be quoted-printable encoded");

        r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String)>(r3);

        throw $r4;
    }
    public java.lang.String encode(java.lang.String) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.nio.charset.Charset getCharset()>();

        $r1 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String encode(java.lang.String,java.nio.charset.Charset)>($r1, $r2);

        return $r1;
    }
    public java.lang.String encode(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String $r1, $r2;
        byte[] $r3;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r2);

        $r3 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] encode(byte[])>($r3);

        $r1 = staticinvoke <org.apache.commons.codec.binary.StringUtils: java.lang.String newStringUsAscii(byte[])>($r3);

        return $r1;
    }
    public java.lang.String encode(java.lang.String, java.nio.charset.Charset)
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;
        byte[] $r3;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.nio.charset.Charset;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $r3 = virtualinvoke r0.<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] encode(byte[])>($r3);

        $r1 = staticinvoke <org.apache.commons.codec.binary.StringUtils: java.lang.String newStringUsAscii(byte[])>($r3);

        return $r1;
    }
    public byte[] encode(byte[])
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        byte[] $r1;
        java.util.BitSet $r2;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r1 := @parameter0: byte[];

        $r2 = <org.apache.commons.codec.net.QuotedPrintableCodec: java.util.BitSet PRINTABLE_CHARS>;

        $r1 = staticinvoke <org.apache.commons.codec.net.QuotedPrintableCodec: byte[] encodeQuotedPrintable(java.util.BitSet,byte[])>($r2, $r1);

        return $r1;
    }
    public java.nio.charset.Charset getCharset()
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.nio.charset.Charset r1;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        r1 = r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.nio.charset.Charset charset>;

        return r1;
    }
    public java.lang.String getDefaultCharset()
    {
        org.apache.commons.codec.net.QuotedPrintableCodec r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.commons.codec.net.QuotedPrintableCodec;

        $r2 = r0.<org.apache.commons.codec.net.QuotedPrintableCodec: java.nio.charset.Charset charset>;

        $r1 = virtualinvoke $r2.<java.nio.charset.Charset: java.lang.String name()>();

        return $r1;
    }
