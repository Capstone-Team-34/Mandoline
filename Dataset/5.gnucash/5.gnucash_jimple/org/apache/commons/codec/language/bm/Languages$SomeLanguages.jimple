org.apache.commons.codec.language.bm.Languages$SomeLanguages extends org.apache.commons.codec.language.bm.Languages$LanguageSet
private final java.util.Set languages
    private void <init>(java.util.Set)
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        java.util.Set r1;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<org.apache.commons.codec.language.bm.Languages$LanguageSet: void <init>()>();

        r1 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r1);

        r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages> = r1;

        return;
    }
    void <init>(java.util.Set, org.apache.commons.codec.language.bm.Languages$1)
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        java.util.Set $r1;
        org.apache.commons.codec.language.bm.Languages$1 $r2;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: org.apache.commons.codec.language.bm.Languages$1;

        specialinvoke r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: void <init>(java.util.Set)>($r1);

        return;
    }
    public boolean contains(java.lang.String)
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        java.lang.String $r1;
        boolean $z0;
        java.util.Set $r2;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        return $z0;
    }
    public java.lang.String getAny()
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        java.util.Set $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        $r1 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        return $r4;
    }
    public java.util.Set getLanguages()
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        java.util.Set r1;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        r1 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        return r1;
    }
    public boolean isEmpty()
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        boolean $z0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        $r1 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        return $z0;
    }
    public boolean isSingleton()
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        int $i0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        $r1 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)
    {
        org.apache.commons.codec.language.bm.Languages$LanguageSet $r0, $r4;
        java.util.HashSet r1;
        java.util.Set $r2, $r6;
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r3, r5;
        boolean $z0;

        r3 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        $r0 := @parameter0: org.apache.commons.codec.language.bm.Languages$LanguageSet;

        $r4 = <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages$LanguageSet NO_LANGUAGES>;

        if $r0 != $r4 goto label1;

        return $r0;

     label1:
        $r4 = <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages$LanguageSet ANY_LANGUAGE>;

        if $r0 == $r4 goto label2;

        r5 = (org.apache.commons.codec.language.bm.Languages$SomeLanguages) $r0;

        $r6 = r5.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $r2 = r3.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean containsAll(java.util.Collection)>($r2);

        if $z0 != 0 goto label2;

        r1 = new java.util.HashSet;

        $r2 = r3.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        specialinvoke r1.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        $r2 = r5.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        interfaceinvoke r1.<java.util.Set: boolean retainAll(java.util.Collection)>($r2);

        $r0 = staticinvoke <org.apache.commons.codec.language.bm.Languages$SomeLanguages: org.apache.commons.codec.language.bm.Languages$LanguageSet 'from'(java.util.Set)>(r1);

        return $r0;

     label2:
        return r3;
    }
    public java.lang.String toString()
    {
        org.apache.commons.codec.language.bm.Languages$SomeLanguages r0;
        java.lang.StringBuilder $r1;
        java.util.Set $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Languages(");

        $r2 = r0.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.util.Set languages>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
