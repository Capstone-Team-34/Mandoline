org.apache.commons.codec.language.SoundexUtils extends java.lang.Object
    void <init>()
    {
        org.apache.commons.codec.language.SoundexUtils r0;

        r0 := @this: org.apache.commons.codec.language.SoundexUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    static java.lang.String clean(java.lang.String)
    {
        char[] r0;
        java.lang.String r1;
        int $i0, i1, i2, i4;
        char $c3;
        boolean $z0;
        java.util.Locale $r2;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label7;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return r1;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        r0 = newarray (char)[$i0];

        i1 = 0;

        i2 = 0;

     label2:
        if i1 >= $i0 goto label4;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c3);

        if $z0 == 0 goto label6;

        i4 = i2 + 1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        r0[i2] = $c3;

     label3:
        i1 = i1 + 1;

        i2 = i4;

        goto label2;

     label4:
        if i2 != $i0 goto label5;

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);

        return r1;

     label5:
        r1 = new java.lang.String;

        specialinvoke r1.<java.lang.String: void <init>(char[],int,int)>(r0, 0, i2);

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);

        return r1;

     label6:
        i4 = i2;

        goto label3;

     label7:
        return r1;
    }
    static int difference(org.apache.commons.codec.StringEncoder, java.lang.String, java.lang.String) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.StringEncoder $r0;
        java.lang.String $r1, $r2;
        int $i0;

        $r0 := @parameter0: org.apache.commons.codec.StringEncoder;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r1 = interfaceinvoke $r0.<org.apache.commons.codec.StringEncoder: java.lang.String encode(java.lang.String)>($r1);

        $r2 = interfaceinvoke $r0.<org.apache.commons.codec.StringEncoder: java.lang.String encode(java.lang.String)>($r2);

        $i0 = staticinvoke <org.apache.commons.codec.language.SoundexUtils: int differenceEncoded(java.lang.String,java.lang.String)>($r1, $r2);

        return $i0;
    }
    static int differenceEncoded(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1, i2;
        char $c3, $c4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label1;

        if $r1 != null goto label2;

     label1:
        return 0;

     label2:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i1 = 0;

        i2 = 0;

     label3:
        if i2 >= $i0 goto label5;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i2);

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i2);

        if $c3 != $c4 goto label4;

        $i1 = $i1 + 1;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return $i1;
    }
