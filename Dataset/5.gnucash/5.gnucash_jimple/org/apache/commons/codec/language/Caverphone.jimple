org.apache.commons.codec.language.Caverphone extends java.lang.Object implements org.apache.commons.codec.StringEncoder
private final org.apache.commons.codec.language.Caverphone2 encoder
    public void <init>()
    {
        org.apache.commons.codec.language.Caverphone r0;
        org.apache.commons.codec.language.Caverphone2 $r1;

        r0 := @this: org.apache.commons.codec.language.Caverphone;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.commons.codec.language.Caverphone2;

        specialinvoke $r1.<org.apache.commons.codec.language.Caverphone2: void <init>()>();

        r0.<org.apache.commons.codec.language.Caverphone: org.apache.commons.codec.language.Caverphone2 encoder> = $r1;

        return;
    }
    public java.lang.String caverphone(java.lang.String)
    {
        org.apache.commons.codec.language.Caverphone r0;
        java.lang.String $r1;
        org.apache.commons.codec.language.Caverphone2 $r2;

        r0 := @this: org.apache.commons.codec.language.Caverphone;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.codec.language.Caverphone: org.apache.commons.codec.language.Caverphone2 encoder>;

        $r1 = virtualinvoke $r2.<org.apache.commons.codec.language.Caverphone2: java.lang.String encode(java.lang.String)>($r1);

        return $r1;
    }
    public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.Caverphone r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        boolean $z0;
        org.apache.commons.codec.EncoderException $r3;

        r0 := @this: org.apache.commons.codec.language.Caverphone;

        $r2 := @parameter0: java.lang.Object;

        $z0 = $r2 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $r3 = new org.apache.commons.codec.EncoderException;

        specialinvoke $r3.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String)>("Parameter supplied to Caverphone encode is not of type java.lang.String");

        throw $r3;

     label1:
        $r1 = (java.lang.String) $r2;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.Caverphone: java.lang.String caverphone(java.lang.String)>($r1);

        return $r1;
    }
    public java.lang.String encode(java.lang.String)
    {
        org.apache.commons.codec.language.Caverphone r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.codec.language.Caverphone;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.Caverphone: java.lang.String caverphone(java.lang.String)>($r1);

        return $r1;
    }
    public boolean isCaverphoneEqual(java.lang.String, java.lang.String)
    {
        org.apache.commons.codec.language.Caverphone r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.codec.language.Caverphone;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.Caverphone: java.lang.String caverphone(java.lang.String)>($r1);

        $r2 = virtualinvoke r0.<org.apache.commons.codec.language.Caverphone: java.lang.String caverphone(java.lang.String)>($r2);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }
