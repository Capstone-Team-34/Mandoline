org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder extends java.lang.Object
private final java.util.Set phonemes
    private void <init>(java.util.Set)
    {
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;
        java.util.Set r1;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes> = r1;

        return;
    }
    void <init>(java.util.Set, org.apache.commons.codec.language.bm.PhoneticEngine$1)
    {
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;
        java.util.Set $r1;
        org.apache.commons.codec.language.bm.PhoneticEngine$1 $r2;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: org.apache.commons.codec.language.bm.PhoneticEngine$1;

        specialinvoke r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: void <init>(java.util.Set)>($r1);

        return;
    }
    public static org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder empty(org.apache.commons.codec.language.bm.Languages$LanguageSet)
    {
        org.apache.commons.codec.language.bm.Languages$LanguageSet $r0;
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder $r1;
        java.util.Set $r2;
        org.apache.commons.codec.language.bm.Rule$Phoneme $r3;

        $r0 := @parameter0: org.apache.commons.codec.language.bm.Languages$LanguageSet;

        $r1 = new org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        $r3 = new org.apache.commons.codec.language.bm.Rule$Phoneme;

        specialinvoke $r3.<org.apache.commons.codec.language.bm.Rule$Phoneme: void <init>(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)>("", $r0);

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3);

        specialinvoke $r1.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: void <init>(java.util.Set)>($r2);

        return $r1;
    }
    public org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder append(java.lang.CharSequence)
    {
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;
        java.lang.CharSequence $r1;
        java.util.LinkedHashSet r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.apache.commons.codec.language.bm.Rule$Phoneme r6;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        $r1 := @parameter0: java.lang.CharSequence;

        r2 = new java.util.LinkedHashSet;

        specialinvoke r2.<java.util.LinkedHashSet: void <init>()>();

        $r3 = r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.codec.language.bm.Rule$Phoneme) $r5;

        r6 = virtualinvoke r6.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Rule$Phoneme append(java.lang.CharSequence)>($r1);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        r0 = new org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        specialinvoke r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: void <init>(java.util.Set)>(r2);

        return r0;
    }
    public org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr, int)
    {
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;
        org.apache.commons.codec.language.bm.Rule$PhonemeExpr $r1;
        int $i0, $i1;
        java.util.LinkedHashSet r2;
        java.util.Set $r3;
        java.util.Iterator $r4, $r8;
        boolean $z0;
        java.lang.Object $r5;
        org.apache.commons.codec.language.bm.Rule$Phoneme r6, r9;
        java.lang.Iterable $r7;
        org.apache.commons.codec.language.bm.Languages$LanguageSet $r10;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        $r1 := @parameter0: org.apache.commons.codec.language.bm.Rule$PhonemeExpr;

        $i0 := @parameter1: int;

        r2 = new java.util.LinkedHashSet;

        specialinvoke r2.<java.util.LinkedHashSet: void <init>()>();

        $r3 = r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.codec.language.bm.Rule$Phoneme) $r5;

        $r7 = interfaceinvoke $r1.<org.apache.commons.codec.language.bm.Rule$PhonemeExpr: java.lang.Iterable getPhonemes()>();

        $r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.commons.codec.language.bm.Rule$Phoneme) $r5;

        r9 = virtualinvoke r6.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Rule$Phoneme join(org.apache.commons.codec.language.bm.Rule$Phoneme)>(r9);

        $r10 = virtualinvoke r9.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet getLanguages()>();

        $z0 = virtualinvoke $r10.<org.apache.commons.codec.language.bm.Languages$LanguageSet: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $i1 = interfaceinvoke r2.<java.util.Set: int size()>();

        if $i1 >= $i0 goto label3;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r9);

        goto label2;

     label3:
        r0 = new org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        specialinvoke r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: void <init>(java.util.Set)>(r2);

        return r0;
    }
    public java.util.Set getPhonemes()
    {
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;
        java.util.Set r1;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        r1 = r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        return r1;
    }
    public java.lang.String makeString()
    {
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;
        java.lang.StringBuilder r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.apache.commons.codec.language.bm.Rule$Phoneme r5;
        int $i0;
        java.lang.CharSequence $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.commons.codec.language.bm.Rule$Phoneme) $r4;

        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

     label2:
        $r6 = virtualinvoke r5.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence getPhonemeText()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r6);

        goto label1;

     label3:
        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
