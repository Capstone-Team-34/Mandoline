org.apache.commons.codec.language.bm.Rule$Phoneme extends java.lang.Object implements org.apache.commons.codec.language.bm.Rule$PhonemeExpr
public static final java.util.Comparator COMPARATOR
private final org.apache.commons.codec.language.bm.Languages$LanguageSet languages
private final java.lang.CharSequence phonemeText
    static void <clinit>()
    {
        org.apache.commons.codec.language.bm.Rule$Phoneme$1 $r0;

        $r0 = new org.apache.commons.codec.language.bm.Rule$Phoneme$1;

        specialinvoke $r0.<org.apache.commons.codec.language.bm.Rule$Phoneme$1: void <init>()>();

        <org.apache.commons.codec.language.bm.Rule$Phoneme: java.util.Comparator COMPARATOR> = $r0;

        return;
    }
    public void <init>(java.lang.CharSequence, org.apache.commons.codec.language.bm.Languages$LanguageSet)
    {
        org.apache.commons.codec.language.bm.Rule$Phoneme r0;
        java.lang.CharSequence $r1;
        org.apache.commons.codec.language.bm.Languages$LanguageSet $r2;

        r0 := @this: org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: org.apache.commons.codec.language.bm.Languages$LanguageSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence phonemeText> = $r1;

        r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet languages> = $r2;

        return;
    }
    static java.lang.CharSequence access$000(org.apache.commons.codec.language.bm.Rule$Phoneme)
    {
        org.apache.commons.codec.language.bm.Rule$Phoneme $r0;
        java.lang.CharSequence r1;

        $r0 := @parameter0: org.apache.commons.codec.language.bm.Rule$Phoneme;

        r1 = $r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence phonemeText>;

        return r1;
    }
    public org.apache.commons.codec.language.bm.Rule$Phoneme append(java.lang.CharSequence)
    {
        org.apache.commons.codec.language.bm.Rule$Phoneme r0, $r2;
        java.lang.CharSequence $r1, $r4;
        java.lang.StringBuilder $r3;
        java.lang.String $r5;
        org.apache.commons.codec.language.bm.Languages$LanguageSet $r6;

        r0 := @this: org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = new org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence phonemeText>;

        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet languages>;

        specialinvoke $r2.<org.apache.commons.codec.language.bm.Rule$Phoneme: void <init>(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)>($r5, $r6);

        return $r2;
    }
    public org.apache.commons.codec.language.bm.Languages$LanguageSet getLanguages()
    {
        org.apache.commons.codec.language.bm.Rule$Phoneme r0;
        org.apache.commons.codec.language.bm.Languages$LanguageSet r1;

        r0 := @this: org.apache.commons.codec.language.bm.Rule$Phoneme;

        r1 = r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet languages>;

        return r1;
    }
    public java.lang.CharSequence getPhonemeText()
    {
        org.apache.commons.codec.language.bm.Rule$Phoneme r0;
        java.lang.CharSequence r1;

        r0 := @this: org.apache.commons.codec.language.bm.Rule$Phoneme;

        r1 = r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence phonemeText>;

        return r1;
    }
    public java.lang.Iterable getPhonemes()
    {
        org.apache.commons.codec.language.bm.Rule$Phoneme r0;
        java.util.Set $r1;

        r0 := @this: org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r0);

        return $r1;
    }
    public org.apache.commons.codec.language.bm.Rule$Phoneme join(org.apache.commons.codec.language.bm.Rule$Phoneme)
    {
        org.apache.commons.codec.language.bm.Rule$Phoneme r0, $r1, $r2;
        org.apache.commons.codec.language.bm.Languages$LanguageSet $r3, $r7;
        java.lang.StringBuilder $r4;
        java.lang.CharSequence $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r1 := @parameter0: org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r2 = new org.apache.commons.codec.language.bm.Rule$Phoneme;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence phonemeText>;

        $r6 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = $r1.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence phonemeText>;

        $r6 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = r0.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet languages>;

        $r3 = $r1.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet languages>;

        $r3 = virtualinvoke $r7.<org.apache.commons.codec.language.bm.Languages$LanguageSet: org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)>($r3);

        specialinvoke $r2.<org.apache.commons.codec.language.bm.Rule$Phoneme: void <init>(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)>($r6, $r3);

        return $r2;
    }
