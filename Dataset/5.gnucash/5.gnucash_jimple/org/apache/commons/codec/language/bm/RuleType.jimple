org.apache.commons.codec.language.bm.RuleType extends java.lang.Enum
private static final org.apache.commons.codec.language.bm.RuleType[] $VALUES
public static final enum org.apache.commons.codec.language.bm.RuleType APPROX
public static final enum org.apache.commons.codec.language.bm.RuleType EXACT
public static final enum org.apache.commons.codec.language.bm.RuleType RULES
private final java.lang.String name
    static void <clinit>()
    {
        org.apache.commons.codec.language.bm.RuleType $r0;
        org.apache.commons.codec.language.bm.RuleType[] $r1;

        $r0 = new org.apache.commons.codec.language.bm.RuleType;

        specialinvoke $r0.<org.apache.commons.codec.language.bm.RuleType: void <init>(java.lang.String,int,java.lang.String)>("APPROX", 0, "approx");

        <org.apache.commons.codec.language.bm.RuleType: org.apache.commons.codec.language.bm.RuleType APPROX> = $r0;

        $r0 = new org.apache.commons.codec.language.bm.RuleType;

        specialinvoke $r0.<org.apache.commons.codec.language.bm.RuleType: void <init>(java.lang.String,int,java.lang.String)>("EXACT", 1, "exact");

        <org.apache.commons.codec.language.bm.RuleType: org.apache.commons.codec.language.bm.RuleType EXACT> = $r0;

        $r0 = new org.apache.commons.codec.language.bm.RuleType;

        specialinvoke $r0.<org.apache.commons.codec.language.bm.RuleType: void <init>(java.lang.String,int,java.lang.String)>("RULES", 2, "rules");

        <org.apache.commons.codec.language.bm.RuleType: org.apache.commons.codec.language.bm.RuleType RULES> = $r0;

        $r1 = newarray (org.apache.commons.codec.language.bm.RuleType)[3];

        $r0 = <org.apache.commons.codec.language.bm.RuleType: org.apache.commons.codec.language.bm.RuleType APPROX>;

        $r1[0] = $r0;

        $r0 = <org.apache.commons.codec.language.bm.RuleType: org.apache.commons.codec.language.bm.RuleType EXACT>;

        $r1[1] = $r0;

        $r0 = <org.apache.commons.codec.language.bm.RuleType: org.apache.commons.codec.language.bm.RuleType RULES>;

        $r1[2] = $r0;

        <org.apache.commons.codec.language.bm.RuleType: org.apache.commons.codec.language.bm.RuleType[] $VALUES> = $r1;

        return;
    }
    private void <init>(java.lang.String, int, java.lang.String)
    {
        org.apache.commons.codec.language.bm.RuleType r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.codec.language.bm.RuleType;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<org.apache.commons.codec.language.bm.RuleType: java.lang.String name> = $r2;

        return;
    }
    public static org.apache.commons.codec.language.bm.RuleType valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        org.apache.commons.codec.language.bm.RuleType $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/commons/codec/language/bm/RuleType;", $r0);

        $r2 = (org.apache.commons.codec.language.bm.RuleType) $r1;

        return $r2;
    }
    public static org.apache.commons.codec.language.bm.RuleType[] values()
    {
        java.lang.Object $r0;
        org.apache.commons.codec.language.bm.RuleType[] $r1;

        $r1 = <org.apache.commons.codec.language.bm.RuleType: org.apache.commons.codec.language.bm.RuleType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (org.apache.commons.codec.language.bm.RuleType[]) $r0;

        return $r1;
    }
    public java.lang.String getName()
    {
        org.apache.commons.codec.language.bm.RuleType r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.codec.language.bm.RuleType;

        r1 = r0.<org.apache.commons.codec.language.bm.RuleType: java.lang.String name>;

        return r1;
    }
