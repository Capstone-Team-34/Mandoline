org.apache.commons.codec.language.bm.Languages$LanguageSet extends java.lang.Object
    public void <init>()
    {
        org.apache.commons.codec.language.bm.Languages$LanguageSet r0;

        r0 := @this: org.apache.commons.codec.language.bm.Languages$LanguageSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static org.apache.commons.codec.language.bm.Languages$LanguageSet 'from'(java.util.Set)
    {
        java.util.Set r0;
        boolean $z0;
        org.apache.commons.codec.language.bm.Languages$SomeLanguages $r1;
        org.apache.commons.codec.language.bm.Languages$LanguageSet r2;

        r0 := @parameter0: java.util.Set;

        $z0 = interfaceinvoke r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r2 = <org.apache.commons.codec.language.bm.Languages: org.apache.commons.codec.language.bm.Languages$LanguageSet NO_LANGUAGES>;

        return r2;

     label1:
        $r1 = new org.apache.commons.codec.language.bm.Languages$SomeLanguages;

        specialinvoke $r1.<org.apache.commons.codec.language.bm.Languages$SomeLanguages: void <init>(java.util.Set,org.apache.commons.codec.language.bm.Languages$1)>(r0, null);

        return $r1;
    }
public abstract boolean contains(java.lang.String) { 
// no body
} 
public abstract java.lang.String getAny() { 
// no body
} 
public abstract boolean isEmpty() { 
// no body
} 
public abstract boolean isSingleton() { 
// no body
} 
public abstract org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet) { 
// no body
} 
