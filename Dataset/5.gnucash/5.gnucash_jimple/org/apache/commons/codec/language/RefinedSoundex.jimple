org.apache.commons.codec.language.RefinedSoundex extends java.lang.Object implements org.apache.commons.codec.StringEncoder
public static final org.apache.commons.codec.language.RefinedSoundex US_ENGLISH
private static final char[] US_ENGLISH_MAPPING
public static final java.lang.String US_ENGLISH_MAPPING_STRING
private final char[] soundexMapping
    static void <clinit>()
    {
        char[] $r0;
        java.lang.String $r1;
        org.apache.commons.codec.language.RefinedSoundex $r2;

        $r1 = "01360240043788015936020505";

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        <org.apache.commons.codec.language.RefinedSoundex: char[] US_ENGLISH_MAPPING> = $r0;

        $r2 = new org.apache.commons.codec.language.RefinedSoundex;

        specialinvoke $r2.<org.apache.commons.codec.language.RefinedSoundex: void <init>()>();

        <org.apache.commons.codec.language.RefinedSoundex: org.apache.commons.codec.language.RefinedSoundex US_ENGLISH> = $r2;

        return;
    }
    public void <init>()
    {
        org.apache.commons.codec.language.RefinedSoundex r0;
        char[] $r1;

        r0 := @this: org.apache.commons.codec.language.RefinedSoundex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.apache.commons.codec.language.RefinedSoundex: char[] US_ENGLISH_MAPPING>;

        r0.<org.apache.commons.codec.language.RefinedSoundex: char[] soundexMapping> = $r1;

        return;
    }
    public void <init>(java.lang.String)
    {
        org.apache.commons.codec.language.RefinedSoundex r0;
        java.lang.String $r1;
        char[] $r2;

        r0 := @this: org.apache.commons.codec.language.RefinedSoundex;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.codec.language.RefinedSoundex: char[] soundexMapping> = $r2;

        return;
    }
    public void <init>(char[])
    {
        org.apache.commons.codec.language.RefinedSoundex r0;
        char[] $r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.codec.language.RefinedSoundex;

        $r1 := @parameter0: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof $r1;

        $r2 = newarray (char)[$i0];

        r0.<org.apache.commons.codec.language.RefinedSoundex: char[] soundexMapping> = $r2;

        $r2 = r0.<org.apache.commons.codec.language.RefinedSoundex: char[] soundexMapping>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }
    public int difference(java.lang.String, java.lang.String) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.RefinedSoundex r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.codec.language.RefinedSoundex;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = staticinvoke <org.apache.commons.codec.language.SoundexUtils: int difference(org.apache.commons.codec.StringEncoder,java.lang.String,java.lang.String)>(r0, $r1, $r2);

        return $i0;
    }
    public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.RefinedSoundex r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        boolean $z0;
        org.apache.commons.codec.EncoderException $r3;

        r0 := @this: org.apache.commons.codec.language.RefinedSoundex;

        $r2 := @parameter0: java.lang.Object;

        $z0 = $r2 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $r3 = new org.apache.commons.codec.EncoderException;

        specialinvoke $r3.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String)>("Parameter supplied to RefinedSoundex encode is not of type java.lang.String");

        throw $r3;

     label1:
        $r1 = (java.lang.String) $r2;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.RefinedSoundex: java.lang.String soundex(java.lang.String)>($r1);

        return $r1;
    }
    public java.lang.String encode(java.lang.String)
    {
        org.apache.commons.codec.language.RefinedSoundex r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.codec.language.RefinedSoundex;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.codec.language.RefinedSoundex: java.lang.String soundex(java.lang.String)>($r1);

        return $r1;
    }
    char getMappingCode(char)
    {
        org.apache.commons.codec.language.RefinedSoundex r0;
        char $c0;
        boolean $z0;
        char[] $r1;
        int $i1;

        r0 := @this: org.apache.commons.codec.language.RefinedSoundex;

        $c0 := @parameter0: char;

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.apache.commons.codec.language.RefinedSoundex: char[] soundexMapping>;

        $c0 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c0);

        $i1 = $c0 + -65;

        $c0 = $r1[$i1];

        return $c0;
    }
    public java.lang.String soundex(java.lang.String)
    {
        org.apache.commons.codec.language.RefinedSoundex r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2;
        int $i0, $i2;
        char $c1, $c3;

        r0 := @this: org.apache.commons.codec.language.RefinedSoundex;

        $r2 := @parameter0: java.lang.String;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <org.apache.commons.codec.language.SoundexUtils: java.lang.String clean(java.lang.String)>($r2);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        return $r2;

     label2:
        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $c1 = 42;

        $i0 = 0;

     label3:
        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= $i2 goto label7;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $c3 = virtualinvoke r0.<org.apache.commons.codec.language.RefinedSoundex: char getMappingCode(char)>($c3);

        if $c3 != $c1 goto label5;

     label4:
        $i0 = $i0 + 1;

        goto label3;

     label5:
        if $c3 == 0 goto label6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

     label6:
        $c1 = $c3;

        goto label4;

     label7:
        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
