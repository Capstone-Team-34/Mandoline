com.crashlytics.android.beta.CheckForUpdatesRequest extends io.fabric.sdk.android.services.common.AbstractSpiCall
static final java.lang.String BETA_SOURCE
static final java.lang.String BUILD_VERSION
static final java.lang.String DISPLAY_VERSION
static final java.lang.String INSTANCE
static final java.lang.String SOURCE
private final com.crashlytics.android.beta.CheckForUpdatesResponseTransform responseTransform
    public void <init>(io.fabric.sdk.android.Kit, java.lang.String, java.lang.String, io.fabric.sdk.android.services.network.HttpRequestFactory, com.crashlytics.android.beta.CheckForUpdatesResponseTransform)
    {
        com.crashlytics.android.beta.CheckForUpdatesRequest r0;
        io.fabric.sdk.android.Kit $r1;
        java.lang.String $r2, $r3;
        io.fabric.sdk.android.services.network.HttpRequestFactory $r4;
        com.crashlytics.android.beta.CheckForUpdatesResponseTransform $r5;
        io.fabric.sdk.android.services.network.HttpMethod $r6;

        r0 := @this: com.crashlytics.android.beta.CheckForUpdatesRequest;

        $r1 := @parameter0: io.fabric.sdk.android.Kit;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: io.fabric.sdk.android.services.network.HttpRequestFactory;

        $r5 := @parameter4: com.crashlytics.android.beta.CheckForUpdatesResponseTransform;

        $r6 = <io.fabric.sdk.android.services.network.HttpMethod: io.fabric.sdk.android.services.network.HttpMethod GET>;

        specialinvoke r0.<io.fabric.sdk.android.services.common.AbstractSpiCall: void <init>(io.fabric.sdk.android.Kit,java.lang.String,java.lang.String,io.fabric.sdk.android.services.network.HttpRequestFactory,io.fabric.sdk.android.services.network.HttpMethod)>($r1, $r2, $r3, $r4, $r6);

        r0.<com.crashlytics.android.beta.CheckForUpdatesRequest: com.crashlytics.android.beta.CheckForUpdatesResponseTransform responseTransform> = $r5;

        return;
    }
    private io.fabric.sdk.android.services.network.HttpRequest applyHeadersTo(io.fabric.sdk.android.services.network.HttpRequest, java.lang.String, java.lang.String)
    {
        com.crashlytics.android.beta.CheckForUpdatesRequest r0;
        io.fabric.sdk.android.services.network.HttpRequest $r1;
        java.lang.String $r2, $r3, $r6;
        java.lang.StringBuilder $r4;
        io.fabric.sdk.android.Kit $r5;

        r0 := @this: com.crashlytics.android.beta.CheckForUpdatesRequest;

        $r1 := @parameter0: io.fabric.sdk.android.services.network.HttpRequest;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("Accept", "application/json");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashlytics Android SDK/");

        $r5 = r0.<com.crashlytics.android.beta.CheckForUpdatesRequest: io.fabric.sdk.android.Kit kit>;

        $r6 = virtualinvoke $r5.<io.fabric.sdk.android.Kit: java.lang.String getVersion()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("User-Agent", $r6);

        $r1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("X-CRASHLYTICS-DEVELOPER-TOKEN", "470fa2b4ae81cd56ecbcda9735803434cec591fa");

        $r1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("X-CRASHLYTICS-API-CLIENT-TYPE", "android");

        $r5 = r0.<com.crashlytics.android.beta.CheckForUpdatesRequest: io.fabric.sdk.android.Kit kit>;

        $r6 = virtualinvoke $r5.<io.fabric.sdk.android.Kit: java.lang.String getVersion()>();

        $r1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("X-CRASHLYTICS-API-CLIENT-VERSION", $r6);

        $r1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("X-CRASHLYTICS-API-KEY", $r2);

        $r1 = virtualinvoke $r1.<io.fabric.sdk.android.services.network.HttpRequest: io.fabric.sdk.android.services.network.HttpRequest header(java.lang.String,java.lang.String)>("X-CRASHLYTICS-D", $r3);

        return $r1;
    }
    private java.util.Map getQueryParamsFor(com.crashlytics.android.beta.BuildProperties)
    {
        com.crashlytics.android.beta.CheckForUpdatesRequest r0;
        com.crashlytics.android.beta.BuildProperties $r1;
        java.util.HashMap r2;
        java.lang.String $r3;

        r0 := @this: com.crashlytics.android.beta.CheckForUpdatesRequest;

        $r1 := @parameter0: com.crashlytics.android.beta.BuildProperties;

        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>()>();

        $r3 = $r1.<com.crashlytics.android.beta.BuildProperties: java.lang.String versionCode>;

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("build_version", $r3);

        $r3 = $r1.<com.crashlytics.android.beta.BuildProperties: java.lang.String versionName>;

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("display_version", $r3);

        $r3 = $r1.<com.crashlytics.android.beta.BuildProperties: java.lang.String buildId>;

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("instance", $r3);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("source", "3");

        return r2;
    }
    public com.crashlytics.android.beta.CheckForUpdatesResponse invoke(java.lang.String, java.lang.String, com.crashlytics.android.beta.BuildProperties)
    {
        com.crashlytics.android.beta.CheckForUpdatesRequest r0;
        java.lang.String $r1, $r2;
        com.crashlytics.android.beta.BuildProperties $r3;
        java.lang.Exception r4;
        org.json.JSONObject r5;
        io.fabric.sdk.android.services.network.HttpRequest r6, $r8;
        java.util.Map $r7;
        io.fabric.sdk.android.Logger $r9;
        java.lang.StringBuilder $r10;
        boolean $z0;
        com.crashlytics.android.beta.CheckForUpdatesResponseTransform $r11;
        com.crashlytics.android.beta.CheckForUpdatesResponse $r12;
        int $i0;
        java.lang.Throwable $r13;

        r0 := @this: com.crashlytics.android.beta.CheckForUpdatesRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.crashlytics.android.beta.BuildProperties;

        r6 = null;

     label01:
        $r7 = specialinvoke r0.<com.crashlytics.android.beta.CheckForUpdatesRequest: java.util.Map getQueryParamsFor(com.crashlytics.android.beta.BuildProperties)>($r3);

        $r8 = virtualinvoke r0.<com.crashlytics.android.beta.CheckForUpdatesRequest: io.fabric.sdk.android.services.network.HttpRequest getHttpRequest(java.util.Map)>($r7);

     label02:
        r6 = $r8;

     label03:
        $r8 = specialinvoke r0.<com.crashlytics.android.beta.CheckForUpdatesRequest: io.fabric.sdk.android.services.network.HttpRequest applyHeadersTo(io.fabric.sdk.android.services.network.HttpRequest,java.lang.String,java.lang.String)>($r8, $r1, $r2);

     label04:
        r6 = $r8;

     label05:
        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label06:
        $r10 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for updates from ");

        $r1 = virtualinvoke r0.<com.crashlytics.android.beta.CheckForUpdatesRequest: java.lang.String getUrl()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", $r1);

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label08:
        $r10 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for updates query params are: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", $r1);

        $z0 = virtualinvoke $r8.<io.fabric.sdk.android.services.network.HttpRequest: boolean ok()>();

     label10:
        if $z0 == 0 goto label15;

     label11:
        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Beta", "Checking for updates was successful");

     label12:
        r5 = new org.json.JSONObject;

     label13:
        $r1 = virtualinvoke $r8.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String body()>();

        specialinvoke r5.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        $r11 = r0.<com.crashlytics.android.beta.CheckForUpdatesRequest: com.crashlytics.android.beta.CheckForUpdatesResponseTransform responseTransform>;

        $r12 = virtualinvoke $r11.<com.crashlytics.android.beta.CheckForUpdatesResponseTransform: com.crashlytics.android.beta.CheckForUpdatesResponse fromJson(org.json.JSONObject)>(r5);

     label14:
        if $r8 == null goto label25;

        $r1 = virtualinvoke $r8.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("X-REQUEST-ID");

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for updates request ID: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r1);

        return $r12;

     label15:
        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

     label16:
        $r10 = new java.lang.StringBuilder;

     label17:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for updates failed. Response code: ");

        $i0 = virtualinvoke $r8.<io.fabric.sdk.android.services.network.HttpRequest: int code()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String)>("Beta", $r1);

     label18:
        if $r8 == null goto label19;

        $r1 = virtualinvoke $r8.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("X-REQUEST-ID");

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for updates request ID: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r1);

     label19:
        return null;

     label20:
        r4 := @caughtexception;

     label21:
        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while checking for updates from ");

        $r1 = virtualinvoke r0.<com.crashlytics.android.beta.CheckForUpdatesRequest: java.lang.String getUrl()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Beta", $r1, r4);

     label22:
        if r6 == null goto label19;

        $r1 = virtualinvoke r6.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("X-REQUEST-ID");

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for updates request ID: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r1);

        goto label19;

     label23:
        $r13 := @caughtexception;

        if r6 == null goto label24;

        $r1 = virtualinvoke r6.<io.fabric.sdk.android.services.network.HttpRequest: java.lang.String header(java.lang.String)>("X-REQUEST-ID");

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for updates request ID: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void d(java.lang.String,java.lang.String)>("Fabric", $r1);

     label24:
        throw $r13;

     label25:
        return $r12;

        catch java.lang.Exception from label01 to label02 with label20;
        catch java.lang.Exception from label03 to label04 with label20;
        catch java.lang.Exception from label05 to label06 with label20;
        catch java.lang.Exception from label07 to label08 with label20;
        catch java.lang.Exception from label09 to label10 with label20;
        catch java.lang.Exception from label11 to label12 with label20;
        catch java.lang.Exception from label13 to label14 with label20;
        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label05 to label10 with label23;
        catch java.lang.Throwable from label11 to label14 with label23;
        catch java.lang.Exception from label15 to label16 with label20;
        catch java.lang.Exception from label17 to label18 with label20;
        catch java.lang.Throwable from label15 to label18 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
    }
