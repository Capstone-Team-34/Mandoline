com.crashlytics.android.answers.AnswersFilesManagerProvider extends java.lang.Object
static final java.lang.String SESSION_ANALYTICS_FILE_NAME
static final java.lang.String SESSION_ANALYTICS_TO_SEND_DIR
final android.content.Context context
final io.fabric.sdk.android.services.persistence.FileStore fileStore
    public void <init>(android.content.Context, io.fabric.sdk.android.services.persistence.FileStore)
    {
        com.crashlytics.android.answers.AnswersFilesManagerProvider r0;
        android.content.Context $r1;
        io.fabric.sdk.android.services.persistence.FileStore $r2;

        r0 := @this: com.crashlytics.android.answers.AnswersFilesManagerProvider;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: io.fabric.sdk.android.services.persistence.FileStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.crashlytics.android.answers.AnswersFilesManagerProvider: android.content.Context context> = $r1;

        r0.<com.crashlytics.android.answers.AnswersFilesManagerProvider: io.fabric.sdk.android.services.persistence.FileStore fileStore> = $r2;

        return;
    }
    public com.crashlytics.android.answers.SessionAnalyticsFilesManager getAnalyticsFilesManager() throws java.io.IOException
    {
        com.crashlytics.android.answers.AnswersFilesManagerProvider r0;
        io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage r1;
        io.fabric.sdk.android.services.common.SystemCurrentTimeProvider r2;
        com.crashlytics.android.answers.SessionEventTransform r3;
        android.os.Looper $r4, $r5;
        java.lang.IllegalStateException $r6;
        io.fabric.sdk.android.services.persistence.FileStore $r7;
        java.io.File $r8;
        android.content.Context $r9;
        com.crashlytics.android.answers.SessionAnalyticsFilesManager $r10;

        r0 := @this: com.crashlytics.android.answers.AnswersFilesManagerProvider;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r4 != $r5 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AnswersFilesManagerProvider cannot be called on the main thread");

        throw $r6;

     label1:
        r3 = new com.crashlytics.android.answers.SessionEventTransform;

        specialinvoke r3.<com.crashlytics.android.answers.SessionEventTransform: void <init>()>();

        r2 = new io.fabric.sdk.android.services.common.SystemCurrentTimeProvider;

        specialinvoke r2.<io.fabric.sdk.android.services.common.SystemCurrentTimeProvider: void <init>()>();

        $r7 = r0.<com.crashlytics.android.answers.AnswersFilesManagerProvider: io.fabric.sdk.android.services.persistence.FileStore fileStore>;

        $r8 = interfaceinvoke $r7.<io.fabric.sdk.android.services.persistence.FileStore: java.io.File getFilesDir()>();

        r1 = new io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage;

        $r9 = r0.<com.crashlytics.android.answers.AnswersFilesManagerProvider: android.content.Context context>;

        specialinvoke r1.<io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage: void <init>(android.content.Context,java.io.File,java.lang.String,java.lang.String)>($r9, $r8, "session_analytics.tap", "session_analytics_to_send");

        $r10 = new com.crashlytics.android.answers.SessionAnalyticsFilesManager;

        $r9 = r0.<com.crashlytics.android.answers.AnswersFilesManagerProvider: android.content.Context context>;

        specialinvoke $r10.<com.crashlytics.android.answers.SessionAnalyticsFilesManager: void <init>(android.content.Context,com.crashlytics.android.answers.SessionEventTransform,io.fabric.sdk.android.services.common.CurrentTimeProvider,io.fabric.sdk.android.services.events.EventsStorage)>($r9, r3, r2, r1);

        return $r10;
    }
