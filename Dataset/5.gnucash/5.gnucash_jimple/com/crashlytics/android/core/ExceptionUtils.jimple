com.crashlytics.android.core.ExceptionUtils extends java.lang.Object
    private void <init>()
    {
        com.crashlytics.android.core.ExceptionUtils r0;

        r0 := @this: com.crashlytics.android.core.ExceptionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    private static java.lang.String getMessage(java.lang.Throwable)
    {
        java.lang.Throwable $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 = virtualinvoke $r0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("(\r\n|\n|\f)", " ");

        return $r1;
    }
    public static void writeStackTrace(android.content.Context, java.lang.Throwable, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1, $r8;
        java.lang.String $r2;
        java.io.PrintWriter r3, r4;
        java.io.FileOutputStream $r5;
        java.lang.Exception r6;
        io.fabric.sdk.android.Logger $r7;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.Throwable;

        $r2 := @parameter2: java.lang.String;

        r4 = null;

     label01:
        r3 = new java.io.PrintWriter;

     label02:
        $r5 = virtualinvoke $r0.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>($r2, 0);

        specialinvoke r3.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r5);

     label03:
        staticinvoke <com.crashlytics.android.core.ExceptionUtils: void writeStackTrace(java.lang.Throwable,java.io.Writer)>($r1, r3);

     label04:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r3, "Failed to close stack trace writer.");

        return;

     label05:
        r6 := @caughtexception;

     label06:
        $r7 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r7.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Failed to create PrintWriter", r6);

     label07:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r4, "Failed to close stack trace writer.");

        return;

     label08:
        $r8 := @caughtexception;

     label09:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r4, "Failed to close stack trace writer.");

        throw $r8;

     label10:
        $r8 := @caughtexception;

        r4 = r3;

        goto label09;

     label11:
        r6 := @caughtexception;

        r4 = r3;

        goto label06;

        catch java.lang.Exception from label02 to label03 with label05;
        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label08;
    }
    private static void writeStackTrace(java.lang.Throwable, java.io.OutputStream)
    {
        java.lang.Throwable $r0, $r6;
        java.io.OutputStream $r1;
        java.io.PrintWriter r2, r4;
        io.fabric.sdk.android.Logger $r3;
        java.lang.Exception r5;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.io.OutputStream;

        r4 = null;

     label01:
        r2 = new java.io.PrintWriter;

     label02:
        specialinvoke r2.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r1);

     label03:
        staticinvoke <com.crashlytics.android.core.ExceptionUtils: void writeStackTrace(java.lang.Throwable,java.io.Writer)>($r0, r2);

     label04:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r2, "Failed to close stack trace writer.");

        return;

     label05:
        r5 := @caughtexception;

     label06:
        $r3 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r3.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Failed to create PrintWriter", r5);

     label07:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r4, "Failed to close stack trace writer.");

        return;

     label08:
        $r6 := @caughtexception;

     label09:
        staticinvoke <io.fabric.sdk.android.services.common.CommonUtils: void closeOrLog(java.io.Closeable,java.lang.String)>(r4, "Failed to close stack trace writer.");

        throw $r6;

     label10:
        $r6 := @caughtexception;

        r4 = r2;

        goto label09;

     label11:
        r5 := @caughtexception;

        r4 = r2;

        goto label06;

        catch java.lang.Exception from label02 to label03 with label05;
        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label08;
    }
    private static void writeStackTrace(java.lang.Throwable, java.io.Writer)
    {
        java.io.Writer $r0;
        java.lang.Exception r1;
        java.lang.StackTraceElement r2;
        int i0, i1;
        java.lang.Throwable $r3;
        boolean z0;
        java.lang.String $r4, r5;
        java.lang.StringBuilder $r6;
        java.lang.Class $r7;
        java.lang.StackTraceElement[] $r8;
        io.fabric.sdk.android.Logger $r9;

        $r3 := @parameter0: java.lang.Throwable;

        $r0 := @parameter1: java.io.Writer;

        z0 = 1;

     label01:
        if $r3 == null goto label20;

     label02:
        $r4 = staticinvoke <com.crashlytics.android.core.ExceptionUtils: java.lang.String getMessage(java.lang.Throwable)>($r3);

     label03:
        r5 = $r4;

        if $r4 == null goto label15;

     label04:
        if z0 == 0 goto label16;

        $r4 = "";

     label05:
        $r6 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String)>(r5);

     label07:
        z0 = 0;

     label08:
        $r8 = virtualinvoke $r3.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        i0 = lengthof $r8;

     label09:
        i1 = 0;

     label10:
        if i1 >= i0 goto label17;

     label11:
        r2 = $r8[i1];

     label12:
        $r6 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tat ");

        r5 = virtualinvoke r2.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String)>(r5);

     label14:
        i1 = i1 + 1;

        goto label10;

     label15:
        r5 = "";

        goto label04;

     label16:
        $r4 = "Caused by: ";

        goto label05;

     label17:
        $r3 = virtualinvoke $r3.<java.lang.Throwable: java.lang.Throwable getCause()>();

     label18:
        goto label01;

     label19:
        r1 := @caughtexception;

        $r9 = staticinvoke <io.fabric.sdk.android.Fabric: io.fabric.sdk.android.Logger getLogger()>();

        interfaceinvoke $r9.<io.fabric.sdk.android.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CrashlyticsCore", "Could not write stack trace", r1);

     label20:
        return;

        catch java.lang.Exception from label02 to label03 with label19;
        catch java.lang.Exception from label06 to label07 with label19;
        catch java.lang.Exception from label08 to label09 with label19;
        catch java.lang.Exception from label11 to label12 with label19;
        catch java.lang.Exception from label13 to label14 with label19;
        catch java.lang.Exception from label17 to label18 with label19;
    }
    public static void writeStackTraceIfNotNull(java.lang.Throwable, java.io.OutputStream)
    {
        java.lang.Throwable $r0;
        java.io.OutputStream $r1;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.io.OutputStream;

        if $r1 == null goto label1;

        staticinvoke <com.crashlytics.android.core.ExceptionUtils: void writeStackTrace(java.lang.Throwable,java.io.OutputStream)>($r0, $r1);

     label1:
        return;
    }
