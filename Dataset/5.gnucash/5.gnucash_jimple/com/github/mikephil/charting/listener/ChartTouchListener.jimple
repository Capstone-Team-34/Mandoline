com.github.mikephil.charting.listener.ChartTouchListener extends android.view.GestureDetector$SimpleOnGestureListener implements android.view.View$OnTouchListener
protected static final int DRAG
protected static final int NONE
protected static final int PINCH_ZOOM
protected static final int POST_ZOOM
protected static final int ROTATE
protected static final int X_ZOOM
protected static final int Y_ZOOM
protected com.github.mikephil.charting.charts.Chart mChart
protected android.view.GestureDetector mGestureDetector
protected com.github.mikephil.charting.highlight.Highlight mLastHighlighted
protected int mTouchMode
    public void <init>(com.github.mikephil.charting.charts.Chart)
    {
        com.github.mikephil.charting.listener.ChartTouchListener r0;
        com.github.mikephil.charting.charts.Chart r1;
        android.content.Context $r2;
        android.view.GestureDetector $r3;

        r0 := @this: com.github.mikephil.charting.listener.ChartTouchListener;

        r1 := @parameter0: com.github.mikephil.charting.charts.Chart;

        specialinvoke r0.<android.view.GestureDetector$SimpleOnGestureListener: void <init>()>();

        r0.<com.github.mikephil.charting.listener.ChartTouchListener: int mTouchMode> = 0;

        r0.<com.github.mikephil.charting.listener.ChartTouchListener: com.github.mikephil.charting.charts.Chart mChart> = r1;

        $r3 = new android.view.GestureDetector;

        $r2 = virtualinvoke r1.<com.github.mikephil.charting.charts.Chart: android.content.Context getContext()>();

        specialinvoke $r3.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>($r2, r0);

        r0.<com.github.mikephil.charting.listener.ChartTouchListener: android.view.GestureDetector mGestureDetector> = $r3;

        return;
    }
    protected static float distance(float, float, float, float)
    {
        float $f0, $f1, $f2, $f3;
        double $d0;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $f0 = $f0 - $f1;

        $f1 = $f2 - $f3;

        $f0 = $f0 * $f0;

        $f1 = $f1 * $f1;

        $f0 = $f0 + $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f0 = (float) $d0;

        return $f0;
    }
    public int getTouchMode()
    {
        com.github.mikephil.charting.listener.ChartTouchListener r0;
        int i0;

        r0 := @this: com.github.mikephil.charting.listener.ChartTouchListener;

        i0 = r0.<com.github.mikephil.charting.listener.ChartTouchListener: int mTouchMode>;

        return i0;
    }
    public void setLastHighlighted(com.github.mikephil.charting.highlight.Highlight)
    {
        com.github.mikephil.charting.listener.ChartTouchListener r0;
        com.github.mikephil.charting.highlight.Highlight $r1;

        r0 := @this: com.github.mikephil.charting.listener.ChartTouchListener;

        $r1 := @parameter0: com.github.mikephil.charting.highlight.Highlight;

        r0.<com.github.mikephil.charting.listener.ChartTouchListener: com.github.mikephil.charting.highlight.Highlight mLastHighlighted> = $r1;

        return;
    }
