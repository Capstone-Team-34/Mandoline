com.github.mikephil.charting.charts.BarChart extends com.github.mikephil.charting.charts.BarLineChartBase implements com.github.mikephil.charting.interfaces.BarDataProvider
private boolean mDrawBarShadow
private boolean mDrawHighlightArrow
private boolean mDrawValueAboveBar
    public void <init>(android.content.Context)
    {
        com.github.mikephil.charting.charts.BarChart r0;
        android.content.Context $r1;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void <init>(android.content.Context)>($r1);

        r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawHighlightArrow> = 0;

        r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawValueAboveBar> = 1;

        r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawBarShadow> = 0;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.github.mikephil.charting.charts.BarChart r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawHighlightArrow> = 0;

        r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawValueAboveBar> = 1;

        r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawBarShadow> = 0;

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.github.mikephil.charting.charts.BarChart r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawHighlightArrow> = 0;

        r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawValueAboveBar> = 1;

        r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawBarShadow> = 0;

        return;
    }
    protected void calcMinMax()
    {
        com.github.mikephil.charting.charts.BarChart r0;
        float $f0, $f1, $f2;
        com.github.mikephil.charting.data.ChartData $r1;
        com.github.mikephil.charting.data.BarData $r2;
        int $i0;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        specialinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void calcMinMax()>();

        $f0 = r0.<com.github.mikephil.charting.charts.BarChart: float mDeltaX>;

        $f0 = $f0 + 0.5F;

        r0.<com.github.mikephil.charting.charts.BarChart: float mDeltaX> = $f0;

        $f0 = r0.<com.github.mikephil.charting.charts.BarChart: float mDeltaX>;

        $r1 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.BarData) $r1;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.data.BarData: int getDataSetCount()>();

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        r0.<com.github.mikephil.charting.charts.BarChart: float mDeltaX> = $f0;

        $r1 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.BarData) $r1;

        $f1 = virtualinvoke $r2.<com.github.mikephil.charting.data.BarData: float getGroupSpace()>();

        $f0 = r0.<com.github.mikephil.charting.charts.BarChart: float mDeltaX>;

        $r1 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.BarData) $r1;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.data.BarData: int getXValCount()>();

        $f2 = (float) $i0;

        $f1 = $f2 * $f1;

        $f0 = $f1 + $f0;

        r0.<com.github.mikephil.charting.charts.BarChart: float mDeltaX> = $f0;

        $f0 = r0.<com.github.mikephil.charting.charts.BarChart: float mDeltaX>;

        $f1 = r0.<com.github.mikephil.charting.charts.BarChart: float mXChartMin>;

        $f0 = $f0 - $f1;

        r0.<com.github.mikephil.charting.charts.BarChart: float mXChartMax> = $f0;

        return;
    }
    public android.graphics.RectF getBarBounds(com.github.mikephil.charting.data.BarEntry)
    {
        com.github.mikephil.charting.charts.BarChart r0;
        com.github.mikephil.charting.data.BarEntry $r1;
        float f0, f1, f2, f3, $f4;
        com.github.mikephil.charting.data.ChartData $r2;
        com.github.mikephil.charting.data.BarData $r3;
        com.github.mikephil.charting.data.DataSet $r4;
        com.github.mikephil.charting.data.BarDataSet r5;
        int $i0;
        byte $b1;
        android.graphics.RectF r6;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r7;
        com.github.mikephil.charting.utils.Transformer $r8;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        $r1 := @parameter0: com.github.mikephil.charting.data.BarEntry;

        f3 = 0.0F;

        $r2 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r3 = (com.github.mikephil.charting.data.BarData) $r2;

        $r4 = virtualinvoke $r3.<com.github.mikephil.charting.data.BarData: com.github.mikephil.charting.data.DataSet getDataSetForEntry(com.github.mikephil.charting.data.Entry)>($r1);

        r5 = (com.github.mikephil.charting.data.BarDataSet) $r4;

        if r5 != null goto label1;

        return null;

     label1:
        f0 = virtualinvoke r5.<com.github.mikephil.charting.data.BarDataSet: float getBarSpace()>();

        $f4 = virtualinvoke $r1.<com.github.mikephil.charting.data.BarEntry: float getVal()>();

        $i0 = virtualinvoke $r1.<com.github.mikephil.charting.data.BarEntry: int getXIndex()>();

        f2 = (float) $i0;

        f1 = f0 / 2.0F;

        f0 = f2 - 0.5F;

        f0 = f0 + f1;

        f2 = f2 + 0.5F;

        f1 = f2 - f1;

        $b1 = $f4 cmpl 0.0F;

        if $b1 < 0 goto label4;

        f2 = $f4;

     label2:
        $b1 = $f4 cmpg 0.0F;

        if $b1 > 0 goto label3;

        f3 = $f4;

     label3:
        r6 = new android.graphics.RectF;

        specialinvoke r6.<android.graphics.RectF: void <init>(float,float,float,float)>(f0, f2, f1, f3);

        $r7 = virtualinvoke r5.<com.github.mikephil.charting.data.BarDataSet: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $r8 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r7);

        virtualinvoke $r8.<com.github.mikephil.charting.utils.Transformer: void rectValueToPixel(android.graphics.RectF)>(r6);

        return r6;

     label4:
        f2 = 0.0F;

        goto label2;
    }
    public com.github.mikephil.charting.data.BarData getBarData()
    {
        com.github.mikephil.charting.charts.BarChart r0;
        com.github.mikephil.charting.data.ChartData $r1;
        com.github.mikephil.charting.data.BarData $r2;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        $r1 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r2 = (com.github.mikephil.charting.data.BarData) $r1;

        return $r2;
    }
    public int getHighestVisibleXIndex()
    {
        com.github.mikephil.charting.charts.BarChart r0;
        float[] r1;
        float f0, f1, $f2;
        com.github.mikephil.charting.data.ChartData $r2;
        com.github.mikephil.charting.data.BarData $r3;
        int $i0;
        byte $b1;
        com.github.mikephil.charting.utils.ViewPortHandler $r4;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r5;
        com.github.mikephil.charting.utils.Transformer $r6;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        f1 = 1.0F;

        $r2 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r3 = (com.github.mikephil.charting.data.BarData) $r2;

        $i0 = virtualinvoke $r3.<com.github.mikephil.charting.data.BarData: int getDataSetCount()>();

        f0 = (float) $i0;

        $b1 = f0 cmpg 1.0F;

        if $b1 > 0 goto label3;

     label1:
        r1 = newarray (float)[2];

        $r4 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f0 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: float contentRight()>();

        r1[0] = f0;

        $r4 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        f0 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        r1[1] = f0;

        $r5 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        $r6 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r5);

        virtualinvoke $r6.<com.github.mikephil.charting.utils.Transformer: void pixelsToValue(float[])>(r1);

        f0 = r1[0];

        $f2 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarChart: float getXChartMax()>();

        $b1 = f0 cmpl $f2;

        if $b1 < 0 goto label4;

        f0 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarChart: float getXChartMax()>();

        f1 = f0 / f1;

     label2:
        $i0 = (int) f1;

        return $i0;

     label3:
        $r2 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r3 = (com.github.mikephil.charting.data.BarData) $r2;

        f1 = virtualinvoke $r3.<com.github.mikephil.charting.data.BarData: float getGroupSpace()>();

        f1 = f0 + f1;

        goto label1;

     label4:
        f0 = r1[0];

        f1 = f0 / f1;

        goto label2;
    }
    public com.github.mikephil.charting.highlight.Highlight getHighlightByTouchPoint(float, float)
    {
        com.github.mikephil.charting.charts.BarChart r0;
        float $f0, $f1;
        com.github.mikephil.charting.highlight.Highlight $r1;
        boolean $z0;
        com.github.mikephil.charting.data.ChartData $r2;
        com.github.mikephil.charting.highlight.ChartHighlighter $r3;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $z0 = r0.<com.github.mikephil.charting.charts.BarChart: boolean mDataNotSet>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.data.ChartData mData>;

        if $r2 != null goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MPAndroidChart", "Can\'t select by touch. No data set.");

        return null;

     label2:
        $r3 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.highlight.ChartHighlighter mHighlighter>;

        $r1 = virtualinvoke $r3.<com.github.mikephil.charting.highlight.ChartHighlighter: com.github.mikephil.charting.highlight.Highlight getHighlight(float,float)>($f0, $f1);

        return $r1;
    }
    public int getLowestVisibleXIndex()
    {
        com.github.mikephil.charting.charts.BarChart r0;
        float[] r1;
        float f0, $f1, $f2;
        com.github.mikephil.charting.data.ChartData $r2;
        com.github.mikephil.charting.data.BarData $r3;
        int $i0;
        byte $b1;
        com.github.mikephil.charting.utils.ViewPortHandler $r4;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r5;
        com.github.mikephil.charting.utils.Transformer $r6;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        $r2 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r3 = (com.github.mikephil.charting.data.BarData) $r2;

        $i0 = virtualinvoke $r3.<com.github.mikephil.charting.data.BarData: int getDataSetCount()>();

        f0 = (float) $i0;

        $b1 = f0 cmpg 1.0F;

        if $b1 > 0 goto label3;

        f0 = 1.0F;

     label1:
        r1 = newarray (float)[2];

        $r4 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: float contentLeft()>();

        r1[0] = $f1;

        $r4 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f1 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: float contentBottom()>();

        r1[1] = $f1;

        $r5 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        $r6 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r5);

        virtualinvoke $r6.<com.github.mikephil.charting.utils.Transformer: void pixelsToValue(float[])>(r1);

        $f1 = r1[0];

        $f2 = virtualinvoke r0.<com.github.mikephil.charting.charts.BarChart: float getXChartMin()>();

        $b1 = $f1 cmpg $f2;

        if $b1 > 0 goto label4;

        f0 = 0.0F;

     label2:
        $i0 = (int) f0;

        return $i0;

     label3:
        $r2 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.data.ChartData mData>;

        $r3 = (com.github.mikephil.charting.data.BarData) $r2;

        $f1 = virtualinvoke $r3.<com.github.mikephil.charting.data.BarData: float getGroupSpace()>();

        f0 = f0 + $f1;

        goto label1;

     label4:
        $f1 = r1[0];

        f0 = $f1 / f0;

        f0 = f0 + 1.0F;

        goto label2;
    }
    protected void init()
    {
        com.github.mikephil.charting.charts.BarChart r0;
        com.github.mikephil.charting.utils.Transformer $r1;
        com.github.mikephil.charting.renderer.BarChartRenderer $r2;
        com.github.mikephil.charting.animation.ChartAnimator $r3;
        com.github.mikephil.charting.utils.ViewPortHandler $r4;
        com.github.mikephil.charting.renderer.XAxisRendererBarChart $r5;
        com.github.mikephil.charting.components.XAxis $r6;
        com.github.mikephil.charting.highlight.BarHighlighter $r7;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        specialinvoke r0.<com.github.mikephil.charting.charts.BarLineChartBase: void init()>();

        $r2 = new com.github.mikephil.charting.renderer.BarChartRenderer;

        $r3 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $r4 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        specialinvoke $r2.<com.github.mikephil.charting.renderer.BarChartRenderer: void <init>(com.github.mikephil.charting.interfaces.BarDataProvider,com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>(r0, $r3, $r4);

        r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.renderer.DataRenderer mRenderer> = $r2;

        $r5 = new com.github.mikephil.charting.renderer.XAxisRendererBarChart;

        $r4 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r6 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.components.XAxis mXAxis>;

        $r1 = r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.utils.Transformer mLeftAxisTransformer>;

        specialinvoke $r5.<com.github.mikephil.charting.renderer.XAxisRendererBarChart: void <init>(com.github.mikephil.charting.utils.ViewPortHandler,com.github.mikephil.charting.components.XAxis,com.github.mikephil.charting.utils.Transformer,com.github.mikephil.charting.charts.BarChart)>($r4, $r6, $r1, r0);

        r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.renderer.XAxisRenderer mXAxisRenderer> = $r5;

        $r7 = new com.github.mikephil.charting.highlight.BarHighlighter;

        specialinvoke $r7.<com.github.mikephil.charting.highlight.BarHighlighter: void <init>(com.github.mikephil.charting.interfaces.BarDataProvider)>(r0);

        r0.<com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.highlight.ChartHighlighter mHighlighter> = $r7;

        r0.<com.github.mikephil.charting.charts.BarChart: float mXChartMin> = -0.5F;

        return;
    }
    public boolean isDrawBarShadowEnabled()
    {
        com.github.mikephil.charting.charts.BarChart r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        z0 = r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawBarShadow>;

        return z0;
    }
    public boolean isDrawHighlightArrowEnabled()
    {
        com.github.mikephil.charting.charts.BarChart r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        z0 = r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawHighlightArrow>;

        return z0;
    }
    public boolean isDrawValueAboveBarEnabled()
    {
        com.github.mikephil.charting.charts.BarChart r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        z0 = r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawValueAboveBar>;

        return z0;
    }
    public void setDrawBarShadow(boolean)
    {
        com.github.mikephil.charting.charts.BarChart r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawBarShadow> = $z0;

        return;
    }
    public void setDrawHighlightArrow(boolean)
    {
        com.github.mikephil.charting.charts.BarChart r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawHighlightArrow> = $z0;

        return;
    }
    public void setDrawValueAboveBar(boolean)
    {
        com.github.mikephil.charting.charts.BarChart r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.charts.BarChart;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.charts.BarChart: boolean mDrawValueAboveBar> = $z0;

        return;
    }
