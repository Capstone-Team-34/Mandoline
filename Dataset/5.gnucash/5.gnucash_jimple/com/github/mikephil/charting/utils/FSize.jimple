com.github.mikephil.charting.utils.FSize extends java.lang.Object
public final float height
public final float width
    public void <init>(float, float)
    {
        com.github.mikephil.charting.utils.FSize r0;
        float $f0, $f1;

        r0 := @this: com.github.mikephil.charting.utils.FSize;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.github.mikephil.charting.utils.FSize: float width> = $f0;

        r0.<com.github.mikephil.charting.utils.FSize: float height> = $f1;

        return;
    }
    public boolean equals(java.lang.Object)
    {
        com.github.mikephil.charting.utils.FSize r0, r2;
        java.lang.Object $r1;
        boolean $z0, $z1;
        float $f0, $f1;
        byte $b0;

        r0 := @this: com.github.mikephil.charting.utils.FSize;

        $r1 := @parameter0: java.lang.Object;

        $z0 = 1;

        if $r1 != null goto label1;

        return 0;

     label1:
        if r0 != $r1 goto label2;

        return 1;

     label2:
        $z1 = $r1 instanceof com.github.mikephil.charting.utils.FSize;

        if $z1 == 0 goto label5;

        r2 = (com.github.mikephil.charting.utils.FSize) $r1;

        $f0 = r0.<com.github.mikephil.charting.utils.FSize: float width>;

        $f1 = r2.<com.github.mikephil.charting.utils.FSize: float width>;

        $b0 = $f0 cmpl $f1;

        if $b0 != 0 goto label4;

        $f0 = r0.<com.github.mikephil.charting.utils.FSize: float height>;

        $f1 = r2.<com.github.mikephil.charting.utils.FSize: float height>;

        $b0 = $f0 cmpl $f1;

        if $b0 != 0 goto label4;

     label3:
        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        return 0;
    }
    public int hashCode()
    {
        com.github.mikephil.charting.utils.FSize r0;
        float $f0;
        int $i0, $i1;

        r0 := @this: com.github.mikephil.charting.utils.FSize;

        $f0 = r0.<com.github.mikephil.charting.utils.FSize: float width>;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $f0 = r0.<com.github.mikephil.charting.utils.FSize: float height>;

        $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $i0 = $i0 ^ $i1;

        return $i0;
    }
    public java.lang.String toString()
    {
        com.github.mikephil.charting.utils.FSize r0;
        java.lang.StringBuilder $r1;
        float $f0;
        java.lang.String $r2;

        r0 := @this: com.github.mikephil.charting.utils.FSize;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $f0 = r0.<com.github.mikephil.charting.utils.FSize: float width>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $f0 = r0.<com.github.mikephil.charting.utils.FSize: float height>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
