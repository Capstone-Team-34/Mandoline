com.github.mikephil.charting.buffer.AbstractBuffer extends java.lang.Object
public final float[] buffer
protected int index
protected int mFrom
protected int mTo
protected float phaseX
protected float phaseY
    public void <init>(int)
    {
        com.github.mikephil.charting.buffer.AbstractBuffer r0;
        int $i0;
        float[] $r1;

        r0 := @this: com.github.mikephil.charting.buffer.AbstractBuffer;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.github.mikephil.charting.buffer.AbstractBuffer: int index> = 0;

        r0.<com.github.mikephil.charting.buffer.AbstractBuffer: float phaseX> = 1.0F;

        r0.<com.github.mikephil.charting.buffer.AbstractBuffer: float phaseY> = 1.0F;

        r0.<com.github.mikephil.charting.buffer.AbstractBuffer: int mFrom> = 0;

        r0.<com.github.mikephil.charting.buffer.AbstractBuffer: int mTo> = 0;

        r0.<com.github.mikephil.charting.buffer.AbstractBuffer: int index> = 0;

        $r1 = newarray (float)[$i0];

        r0.<com.github.mikephil.charting.buffer.AbstractBuffer: float[] buffer> = $r1;

        return;
    }
public abstract void feed(java.util.List) { 
// no body
} 
    public void limitFrom(int)
    {
        com.github.mikephil.charting.buffer.AbstractBuffer r0;
        int $i0;

        r0 := @this: com.github.mikephil.charting.buffer.AbstractBuffer;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $i0 = 0;

     label1:
        r0.<com.github.mikephil.charting.buffer.AbstractBuffer: int mFrom> = $i0;

        return;
    }
    public void limitTo(int)
    {
        com.github.mikephil.charting.buffer.AbstractBuffer r0;
        int $i0;

        r0 := @this: com.github.mikephil.charting.buffer.AbstractBuffer;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $i0 = 0;

     label1:
        r0.<com.github.mikephil.charting.buffer.AbstractBuffer: int mTo> = $i0;

        return;
    }
    public void reset()
    {
        com.github.mikephil.charting.buffer.AbstractBuffer r0;

        r0 := @this: com.github.mikephil.charting.buffer.AbstractBuffer;

        r0.<com.github.mikephil.charting.buffer.AbstractBuffer: int index> = 0;

        return;
    }
    public void setPhases(float, float)
    {
        com.github.mikephil.charting.buffer.AbstractBuffer r0;
        float $f0, $f1;

        r0 := @this: com.github.mikephil.charting.buffer.AbstractBuffer;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        r0.<com.github.mikephil.charting.buffer.AbstractBuffer: float phaseX> = $f0;

        r0.<com.github.mikephil.charting.buffer.AbstractBuffer: float phaseY> = $f1;

        return;
    }
    public int size()
    {
        com.github.mikephil.charting.buffer.AbstractBuffer r0;
        float[] $r1;
        int $i0;

        r0 := @this: com.github.mikephil.charting.buffer.AbstractBuffer;

        $r1 = r0.<com.github.mikephil.charting.buffer.AbstractBuffer: float[] buffer>;

        $i0 = lengthof $r1;

        return $i0;
    }
