com.github.mikephil.charting.buffer.BarBuffer extends com.github.mikephil.charting.buffer.AbstractBuffer
protected float mBarSpace
protected boolean mContainsStacks
protected int mDataSetCount
protected int mDataSetIndex
protected float mGroupSpace
protected boolean mInverted
    public void <init>(int, float, int, boolean)
    {
        com.github.mikephil.charting.buffer.BarBuffer r0;
        int $i0, $i1;
        float $f0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.buffer.BarBuffer;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<com.github.mikephil.charting.buffer.AbstractBuffer: void <init>(int)>($i0);

        r0.<com.github.mikephil.charting.buffer.BarBuffer: float mBarSpace> = 0.0F;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: float mGroupSpace> = 0.0F;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: int mDataSetIndex> = 0;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: int mDataSetCount> = 1;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: boolean mContainsStacks> = 0;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: boolean mInverted> = 0;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: float mGroupSpace> = $f0;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: int mDataSetCount> = $i1;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: boolean mContainsStacks> = $z0;

        return;
    }
    protected void addBar(float, float, float, float)
    {
        com.github.mikephil.charting.buffer.BarBuffer r0;
        float $f0, $f1, $f2, $f3;
        float[] $r1;
        int $i0, $i1;

        r0 := @this: com.github.mikephil.charting.buffer.BarBuffer;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r1 = r0.<com.github.mikephil.charting.buffer.BarBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.BarBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: int index> = $i1;

        $r1[$i0] = $f0;

        $r1 = r0.<com.github.mikephil.charting.buffer.BarBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.BarBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: int index> = $i1;

        $r1[$i0] = $f1;

        $r1 = r0.<com.github.mikephil.charting.buffer.BarBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.BarBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: int index> = $i1;

        $r1[$i0] = $f2;

        $r1 = r0.<com.github.mikephil.charting.buffer.BarBuffer: float[] buffer>;

        $i0 = r0.<com.github.mikephil.charting.buffer.BarBuffer: int index>;

        $i1 = $i0 + 1;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: int index> = $i1;

        $r1[$i0] = $f3;

        return;
    }
    public void feed(java.util.List)
    {
        com.github.mikephil.charting.buffer.BarBuffer r0;
        java.util.List r1;
        float f0, f1, f2, f3, f4, $f5, $f6, f7, f8, $f9, f10, f11;
        int i0, i1, $i3, $i4;
        byte $b2;
        java.lang.Object $r2;
        com.github.mikephil.charting.data.BarEntry r3;
        float[] $r4;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.buffer.BarBuffer;

        r1 := @parameter0: java.util.List;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        f2 = (float) i0;

        f0 = r0.<com.github.mikephil.charting.buffer.BarBuffer: float phaseX>;

        f2 = f2 * f0;

        i0 = r0.<com.github.mikephil.charting.buffer.BarBuffer: int mDataSetCount>;

        i0 = i0 + -1;

        f0 = r0.<com.github.mikephil.charting.buffer.BarBuffer: float mBarSpace>;

        f0 = f0 / 2.0F;

        f1 = r0.<com.github.mikephil.charting.buffer.BarBuffer: float mGroupSpace>;

        f1 = f1 / 2.0F;

        i1 = 0;

     label01:
        f4 = (float) i1;

        $b2 = f4 cmpg f2;

        if $b2 >= 0 goto label26;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (com.github.mikephil.charting.data.BarEntry) $r2;

        $i3 = virtualinvoke r3.<com.github.mikephil.charting.data.BarEntry: int getXIndex()>();

        $i4 = virtualinvoke r3.<com.github.mikephil.charting.data.BarEntry: int getXIndex()>();

        $i4 = $i4 * i0;

        $i3 = $i3 + $i4;

        $i4 = r0.<com.github.mikephil.charting.buffer.BarBuffer: int mDataSetIndex>;

        $i3 = $i3 + $i4;

        f4 = (float) $i3;

        $f5 = r0.<com.github.mikephil.charting.buffer.BarBuffer: float mGroupSpace>;

        $i3 = virtualinvoke r3.<com.github.mikephil.charting.data.BarEntry: int getXIndex()>();

        $f6 = (float) $i3;

        $f5 = $f5 * $f6;

        f4 = f4 + $f5;

        f4 = f4 + f1;

        $f6 = virtualinvoke r3.<com.github.mikephil.charting.data.BarEntry: float getVal()>();

        $r4 = virtualinvoke r3.<com.github.mikephil.charting.data.BarEntry: float[] getVals()>();

        $z0 = r0.<com.github.mikephil.charting.buffer.BarBuffer: boolean mContainsStacks>;

        if $z0 == 0 goto label02;

        if $r4 != null goto label14;

     label02:
        $f5 = f4 - 0.5F;

        $f5 = $f5 + f0;

        f4 = f4 + 0.5F;

        f4 = f4 - f0;

        $z0 = r0.<com.github.mikephil.charting.buffer.BarBuffer: boolean mInverted>;

        if $z0 == 0 goto label09;

        $b2 = $f6 cmpl 0.0F;

        if $b2 < 0 goto label07;

        f7 = $f6;

     label03:
        $b2 = $f6 cmpg 0.0F;

        if $b2 > 0 goto label08;

        f3 = $f6;

     label04:
        $b2 = f3 cmpl 0.0F;

        if $b2 <= 0 goto label13;

        $f6 = r0.<com.github.mikephil.charting.buffer.BarBuffer: float phaseY>;

        f3 = f3 * $f6;

     label05:
        virtualinvoke r0.<com.github.mikephil.charting.buffer.BarBuffer: void addBar(float,float,float,float)>($f5, f3, f4, f7);

     label06:
        i1 = i1 + 1;

        goto label01;

     label07:
        f7 = 0.0F;

        goto label03;

     label08:
        f3 = 0.0F;

        goto label04;

     label09:
        $b2 = $f6 cmpl 0.0F;

        if $b2 < 0 goto label11;

        f3 = $f6;

     label10:
        $b2 = $f6 cmpg 0.0F;

        if $b2 > 0 goto label12;

        f7 = $f6;

        goto label04;

     label11:
        f3 = 0.0F;

        goto label10;

     label12:
        f7 = 0.0F;

        goto label04;

     label13:
        $f6 = r0.<com.github.mikephil.charting.buffer.BarBuffer: float phaseY>;

        f7 = f7 * $f6;

        goto label05;

     label14:
        $f5 = 0.0F;

        $f6 = virtualinvoke r3.<com.github.mikephil.charting.data.BarEntry: float getNegativeSum()>();

        $f6 = neg $f6;

        $i3 = 0;

     label15:
        $i4 = lengthof $r4;

        if $i3 >= $i4 goto label06;

        f3 = $r4[$i3];

        $b2 = f3 cmpl 0.0F;

        if $b2 < 0 goto label19;

        f7 = $f5;

        f8 = $f5 + f3;

        $f5 = f8;

     label16:
        f3 = f4 - 0.5F;

        f3 = f3 + f0;

        $f9 = f4 + 0.5F;

        $f9 = $f9 - f0;

        $z0 = r0.<com.github.mikephil.charting.buffer.BarBuffer: boolean mInverted>;

        if $z0 == 0 goto label22;

        $b2 = f7 cmpl f8;

        if $b2 < 0 goto label20;

        f10 = f7;

     label17:
        $b2 = f7 cmpg f8;

        if $b2 > 0 goto label21;

        f11 = f7;

     label18:
        f7 = r0.<com.github.mikephil.charting.buffer.BarBuffer: float phaseY>;

        f7 = f11 * f7;

        f8 = r0.<com.github.mikephil.charting.buffer.BarBuffer: float phaseY>;

        f8 = f10 * f8;

        virtualinvoke r0.<com.github.mikephil.charting.buffer.BarBuffer: void addBar(float,float,float,float)>(f3, f7, $f9, f8);

        $i3 = $i3 + 1;

        goto label15;

     label19:
        f7 = $f6;

        f8 = staticinvoke <java.lang.Math: float abs(float)>(f3);

        f8 = $f6 + f8;

        f3 = staticinvoke <java.lang.Math: float abs(float)>(f3);

        $f6 = $f6 + f3;

        goto label16;

     label20:
        f10 = f8;

        goto label17;

     label21:
        f11 = f8;

        goto label18;

     label22:
        $b2 = f7 cmpl f8;

        if $b2 < 0 goto label24;

        f11 = f7;

     label23:
        $b2 = f7 cmpg f8;

        if $b2 > 0 goto label25;

        f10 = f7;

        goto label18;

     label24:
        f11 = f8;

        goto label23;

     label25:
        f10 = f8;

        goto label18;

     label26:
        virtualinvoke r0.<com.github.mikephil.charting.buffer.BarBuffer: void reset()>();

        return;
    }
    public void setBarSpace(float)
    {
        com.github.mikephil.charting.buffer.BarBuffer r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.buffer.BarBuffer;

        $f0 := @parameter0: float;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: float mBarSpace> = $f0;

        return;
    }
    public void setDataSet(int)
    {
        com.github.mikephil.charting.buffer.BarBuffer r0;
        int $i0;

        r0 := @this: com.github.mikephil.charting.buffer.BarBuffer;

        $i0 := @parameter0: int;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: int mDataSetIndex> = $i0;

        return;
    }
    public void setInverted(boolean)
    {
        com.github.mikephil.charting.buffer.BarBuffer r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.buffer.BarBuffer;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.buffer.BarBuffer: boolean mInverted> = $z0;

        return;
    }
