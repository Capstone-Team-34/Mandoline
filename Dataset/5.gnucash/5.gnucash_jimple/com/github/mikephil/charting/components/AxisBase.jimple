com.github.mikephil.charting.components.AxisBase extends com.github.mikephil.charting.components.ComponentBase
private int mAxisLineColor
private float mAxisLineWidth
protected boolean mDrawAxisLine
protected boolean mDrawGridLines
protected boolean mDrawLabels
protected boolean mDrawLimitLineBehindData
private int mGridColor
private android.graphics.DashPathEffect mGridDashPathEffect
private float mGridLineWidth
protected java.util.List mLimitLines
    public void <init>()
    {
        com.github.mikephil.charting.components.AxisBase r0;
        float $f0;
        java.util.ArrayList $r1;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        specialinvoke r0.<com.github.mikephil.charting.components.ComponentBase: void <init>()>();

        r0.<com.github.mikephil.charting.components.AxisBase: int mGridColor> = -7829368;

        r0.<com.github.mikephil.charting.components.AxisBase: float mGridLineWidth> = 1.0F;

        r0.<com.github.mikephil.charting.components.AxisBase: int mAxisLineColor> = -7829368;

        r0.<com.github.mikephil.charting.components.AxisBase: float mAxisLineWidth> = 1.0F;

        r0.<com.github.mikephil.charting.components.AxisBase: boolean mDrawGridLines> = 1;

        r0.<com.github.mikephil.charting.components.AxisBase: boolean mDrawAxisLine> = 1;

        r0.<com.github.mikephil.charting.components.AxisBase: boolean mDrawLabels> = 1;

        r0.<com.github.mikephil.charting.components.AxisBase: android.graphics.DashPathEffect mGridDashPathEffect> = null;

        r0.<com.github.mikephil.charting.components.AxisBase: boolean mDrawLimitLineBehindData> = 0;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(10.0F);

        r0.<com.github.mikephil.charting.components.AxisBase: float mTextSize> = $f0;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(5.0F);

        r0.<com.github.mikephil.charting.components.AxisBase: float mXOffset> = $f0;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(5.0F);

        r0.<com.github.mikephil.charting.components.AxisBase: float mYOffset> = $f0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.github.mikephil.charting.components.AxisBase: java.util.List mLimitLines> = $r1;

        return;
    }
    public void addLimitLine(com.github.mikephil.charting.components.LimitLine)
    {
        com.github.mikephil.charting.components.AxisBase r0;
        com.github.mikephil.charting.components.LimitLine $r1;
        int $i0;
        java.util.List $r2;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        $r1 := @parameter0: com.github.mikephil.charting.components.LimitLine;

        $r2 = r0.<com.github.mikephil.charting.components.AxisBase: java.util.List mLimitLines>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r2 = r0.<com.github.mikephil.charting.components.AxisBase: java.util.List mLimitLines>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 6 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MPAndroiChart", "Warning! You have more than 6 LimitLines on your axis, do you really want that?");

     label1:
        return;
    }
    public void disableGridDashedLine()
    {
        com.github.mikephil.charting.components.AxisBase r0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        r0.<com.github.mikephil.charting.components.AxisBase: android.graphics.DashPathEffect mGridDashPathEffect> = null;

        return;
    }
    public void enableGridDashedLine(float, float, float)
    {
        com.github.mikephil.charting.components.AxisBase r0;
        float $f0, $f1, $f2;
        android.graphics.DashPathEffect $r1;
        float[] $r2;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $r1 = new android.graphics.DashPathEffect;

        $r2 = newarray (float)[2];

        $r2[0] = $f0;

        $r2[1] = $f1;

        specialinvoke $r1.<android.graphics.DashPathEffect: void <init>(float[],float)>($r2, $f2);

        r0.<com.github.mikephil.charting.components.AxisBase: android.graphics.DashPathEffect mGridDashPathEffect> = $r1;

        return;
    }
    public int getAxisLineColor()
    {
        com.github.mikephil.charting.components.AxisBase r0;
        int i0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        i0 = r0.<com.github.mikephil.charting.components.AxisBase: int mAxisLineColor>;

        return i0;
    }
    public float getAxisLineWidth()
    {
        com.github.mikephil.charting.components.AxisBase r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        f0 = r0.<com.github.mikephil.charting.components.AxisBase: float mAxisLineWidth>;

        return f0;
    }
    public int getGridColor()
    {
        com.github.mikephil.charting.components.AxisBase r0;
        int i0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        i0 = r0.<com.github.mikephil.charting.components.AxisBase: int mGridColor>;

        return i0;
    }
    public android.graphics.DashPathEffect getGridDashPathEffect()
    {
        com.github.mikephil.charting.components.AxisBase r0;
        android.graphics.DashPathEffect r1;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        r1 = r0.<com.github.mikephil.charting.components.AxisBase: android.graphics.DashPathEffect mGridDashPathEffect>;

        return r1;
    }
    public float getGridLineWidth()
    {
        com.github.mikephil.charting.components.AxisBase r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        f0 = r0.<com.github.mikephil.charting.components.AxisBase: float mGridLineWidth>;

        return f0;
    }
    public java.util.List getLimitLines()
    {
        com.github.mikephil.charting.components.AxisBase r0;
        java.util.List r1;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        r1 = r0.<com.github.mikephil.charting.components.AxisBase: java.util.List mLimitLines>;

        return r1;
    }
public abstract java.lang.String getLongestLabel() { 
// no body
} 
    public boolean isDrawAxisLineEnabled()
    {
        com.github.mikephil.charting.components.AxisBase r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        z0 = r0.<com.github.mikephil.charting.components.AxisBase: boolean mDrawAxisLine>;

        return z0;
    }
    public boolean isDrawGridLinesEnabled()
    {
        com.github.mikephil.charting.components.AxisBase r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        z0 = r0.<com.github.mikephil.charting.components.AxisBase: boolean mDrawGridLines>;

        return z0;
    }
    public boolean isDrawLabelsEnabled()
    {
        com.github.mikephil.charting.components.AxisBase r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        z0 = r0.<com.github.mikephil.charting.components.AxisBase: boolean mDrawLabels>;

        return z0;
    }
    public boolean isDrawLimitLinesBehindDataEnabled()
    {
        com.github.mikephil.charting.components.AxisBase r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        z0 = r0.<com.github.mikephil.charting.components.AxisBase: boolean mDrawLimitLineBehindData>;

        return z0;
    }
    public boolean isGridDashedLineEnabled()
    {
        com.github.mikephil.charting.components.AxisBase r0;
        android.graphics.DashPathEffect $r1;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        $r1 = r0.<com.github.mikephil.charting.components.AxisBase: android.graphics.DashPathEffect mGridDashPathEffect>;

        if $r1 != null goto label1;

        return 0;

     label1:
        return 1;
    }
    public void removeAllLimitLines()
    {
        com.github.mikephil.charting.components.AxisBase r0;
        java.util.List $r1;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        $r1 = r0.<com.github.mikephil.charting.components.AxisBase: java.util.List mLimitLines>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }
    public void removeLimitLine(com.github.mikephil.charting.components.LimitLine)
    {
        com.github.mikephil.charting.components.AxisBase r0;
        com.github.mikephil.charting.components.LimitLine $r1;
        java.util.List $r2;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        $r1 := @parameter0: com.github.mikephil.charting.components.LimitLine;

        $r2 = r0.<com.github.mikephil.charting.components.AxisBase: java.util.List mLimitLines>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>($r1);

        return;
    }
    public void setAxisLineColor(int)
    {
        com.github.mikephil.charting.components.AxisBase r0;
        int $i0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        $i0 := @parameter0: int;

        r0.<com.github.mikephil.charting.components.AxisBase: int mAxisLineColor> = $i0;

        return;
    }
    public void setAxisLineWidth(float)
    {
        com.github.mikephil.charting.components.AxisBase r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        r0.<com.github.mikephil.charting.components.AxisBase: float mAxisLineWidth> = $f0;

        return;
    }
    public void setDrawAxisLine(boolean)
    {
        com.github.mikephil.charting.components.AxisBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.components.AxisBase: boolean mDrawAxisLine> = $z0;

        return;
    }
    public void setDrawGridLines(boolean)
    {
        com.github.mikephil.charting.components.AxisBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.components.AxisBase: boolean mDrawGridLines> = $z0;

        return;
    }
    public void setDrawLabels(boolean)
    {
        com.github.mikephil.charting.components.AxisBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.components.AxisBase: boolean mDrawLabels> = $z0;

        return;
    }
    public void setDrawLimitLinesBehindData(boolean)
    {
        com.github.mikephil.charting.components.AxisBase r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.components.AxisBase: boolean mDrawLimitLineBehindData> = $z0;

        return;
    }
    public void setGridColor(int)
    {
        com.github.mikephil.charting.components.AxisBase r0;
        int $i0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        $i0 := @parameter0: int;

        r0.<com.github.mikephil.charting.components.AxisBase: int mGridColor> = $i0;

        return;
    }
    public void setGridLineWidth(float)
    {
        com.github.mikephil.charting.components.AxisBase r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.components.AxisBase;

        $f0 := @parameter0: float;

        $f0 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>($f0);

        r0.<com.github.mikephil.charting.components.AxisBase: float mGridLineWidth> = $f0;

        return;
    }
