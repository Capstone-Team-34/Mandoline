com.github.mikephil.charting.components.YAxis extends com.github.mikephil.charting.components.AxisBase
private com.github.mikephil.charting.components.YAxis$AxisDependency mAxisDependency
public float mAxisMaximum
public float mAxisMinimum
public float mAxisRange
protected float mCustomAxisMax
protected float mCustomAxisMin
public int mDecimals
private boolean mDrawTopYLabelEntry
public float[] mEntries
public int mEntryCount
protected boolean mForceLabels
protected boolean mInverted
private int mLabelCount
private com.github.mikephil.charting.components.YAxis$YAxisLabelPosition mPosition
protected boolean mShowOnlyMinMax
protected float mSpacePercentBottom
protected float mSpacePercentTop
protected boolean mStartAtZero
protected com.github.mikephil.charting.utils.ValueFormatter mValueFormatter
    public void <init>()
    {
        com.github.mikephil.charting.components.YAxis r0;
        float[] $r1;
        com.github.mikephil.charting.components.YAxis$YAxisLabelPosition $r2;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r3;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        specialinvoke r0.<com.github.mikephil.charting.components.AxisBase: void <init>()>();

        $r1 = newarray (float)[0];

        r0.<com.github.mikephil.charting.components.YAxis: float[] mEntries> = $r1;

        r0.<com.github.mikephil.charting.components.YAxis: int mLabelCount> = 6;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mDrawTopYLabelEntry> = 1;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mShowOnlyMinMax> = 0;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mInverted> = 0;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mStartAtZero> = 1;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mForceLabels> = 0;

        r0.<com.github.mikephil.charting.components.YAxis: float mCustomAxisMin> = #NaNF;

        r0.<com.github.mikephil.charting.components.YAxis: float mCustomAxisMax> = #NaNF;

        r0.<com.github.mikephil.charting.components.YAxis: float mSpacePercentTop> = 10.0F;

        r0.<com.github.mikephil.charting.components.YAxis: float mSpacePercentBottom> = 10.0F;

        r0.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum> = 0.0F;

        r0.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum> = 0.0F;

        r0.<com.github.mikephil.charting.components.YAxis: float mAxisRange> = 0.0F;

        $r2 = <com.github.mikephil.charting.components.YAxis$YAxisLabelPosition: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition OUTSIDE_CHART>;

        r0.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition mPosition> = $r2;

        $r3 = <com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency LEFT>;

        r0.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.components.YAxis$AxisDependency mAxisDependency> = $r3;

        r0.<com.github.mikephil.charting.components.YAxis: float mYOffset> = 0.0F;

        return;
    }
    public void <init>(com.github.mikephil.charting.components.YAxis$AxisDependency)
    {
        com.github.mikephil.charting.components.YAxis r0;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r1;
        float[] $r2;
        com.github.mikephil.charting.components.YAxis$YAxisLabelPosition $r3;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $r1 := @parameter0: com.github.mikephil.charting.components.YAxis$AxisDependency;

        specialinvoke r0.<com.github.mikephil.charting.components.AxisBase: void <init>()>();

        $r2 = newarray (float)[0];

        r0.<com.github.mikephil.charting.components.YAxis: float[] mEntries> = $r2;

        r0.<com.github.mikephil.charting.components.YAxis: int mLabelCount> = 6;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mDrawTopYLabelEntry> = 1;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mShowOnlyMinMax> = 0;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mInverted> = 0;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mStartAtZero> = 1;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mForceLabels> = 0;

        r0.<com.github.mikephil.charting.components.YAxis: float mCustomAxisMin> = #NaNF;

        r0.<com.github.mikephil.charting.components.YAxis: float mCustomAxisMax> = #NaNF;

        r0.<com.github.mikephil.charting.components.YAxis: float mSpacePercentTop> = 10.0F;

        r0.<com.github.mikephil.charting.components.YAxis: float mSpacePercentBottom> = 10.0F;

        r0.<com.github.mikephil.charting.components.YAxis: float mAxisMaximum> = 0.0F;

        r0.<com.github.mikephil.charting.components.YAxis: float mAxisMinimum> = 0.0F;

        r0.<com.github.mikephil.charting.components.YAxis: float mAxisRange> = 0.0F;

        $r3 = <com.github.mikephil.charting.components.YAxis$YAxisLabelPosition: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition OUTSIDE_CHART>;

        r0.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition mPosition> = $r3;

        r0.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.components.YAxis$AxisDependency mAxisDependency> = $r1;

        r0.<com.github.mikephil.charting.components.YAxis: float mYOffset> = 0.0F;

        return;
    }
    public com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()
    {
        com.github.mikephil.charting.components.YAxis r0;
        com.github.mikephil.charting.components.YAxis$AxisDependency r1;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        r1 = r0.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.components.YAxis$AxisDependency mAxisDependency>;

        return r1;
    }
    public float getAxisMaxValue()
    {
        com.github.mikephil.charting.components.YAxis r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        f0 = r0.<com.github.mikephil.charting.components.YAxis: float mCustomAxisMax>;

        return f0;
    }
    public float getAxisMinValue()
    {
        com.github.mikephil.charting.components.YAxis r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        f0 = r0.<com.github.mikephil.charting.components.YAxis: float mCustomAxisMin>;

        return f0;
    }
    public java.lang.String getFormattedLabel(int)
    {
        com.github.mikephil.charting.components.YAxis r0;
        int $i0, $i1;
        float[] $r1;
        com.github.mikephil.charting.utils.ValueFormatter $r2;
        float $f0;
        java.lang.String $r3;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = r0.<com.github.mikephil.charting.components.YAxis: float[] mEntries>;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label2;

     label1:
        return "";

     label2:
        $r2 = virtualinvoke r0.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.utils.ValueFormatter getValueFormatter()>();

        $r1 = r0.<com.github.mikephil.charting.components.YAxis: float[] mEntries>;

        $f0 = $r1[$i0];

        $r3 = interfaceinvoke $r2.<com.github.mikephil.charting.utils.ValueFormatter: java.lang.String getFormattedValue(float)>($f0);

        return $r3;
    }
    public int getLabelCount()
    {
        com.github.mikephil.charting.components.YAxis r0;
        int i0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        i0 = r0.<com.github.mikephil.charting.components.YAxis: int mLabelCount>;

        return i0;
    }
    public com.github.mikephil.charting.components.YAxis$YAxisLabelPosition getLabelPosition()
    {
        com.github.mikephil.charting.components.YAxis r0;
        com.github.mikephil.charting.components.YAxis$YAxisLabelPosition r1;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        r1 = r0.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition mPosition>;

        return r1;
    }
    public java.lang.String getLongestLabel()
    {
        com.github.mikephil.charting.components.YAxis r0;
        java.lang.String r1, $r3;
        int i0, $i1, $i2;
        float[] $r2;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        r1 = "";

        i0 = 0;

     label1:
        $r2 = r0.<com.github.mikephil.charting.components.YAxis: float[] mEntries>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label3;

        $r3 = virtualinvoke r0.<com.github.mikephil.charting.components.YAxis: java.lang.String getFormattedLabel(int)>(i0);

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label2;

        r1 = $r3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return r1;
    }
    public float getRequiredHeightSpace(android.graphics.Paint)
    {
        com.github.mikephil.charting.components.YAxis r0;
        android.graphics.Paint $r1;
        float $f0, $f1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $r1 := @parameter0: android.graphics.Paint;

        $f0 = r0.<com.github.mikephil.charting.components.YAxis: float mTextSize>;

        virtualinvoke $r1.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r2 = virtualinvoke r0.<com.github.mikephil.charting.components.YAxis: java.lang.String getLongestLabel()>();

        $i0 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextHeight(android.graphics.Paint,java.lang.String)>($r1, $r2);

        $f0 = (float) $i0;

        $f1 = staticinvoke <com.github.mikephil.charting.utils.Utils: float convertDpToPixel(float)>(2.5F);

        $f1 = $f1 * 2.0F;

        $f0 = $f0 + $f1;

        $f1 = virtualinvoke r0.<com.github.mikephil.charting.components.YAxis: float getYOffset()>();

        $f0 = $f0 + $f1;

        return $f0;
    }
    public float getRequiredWidthSpace(android.graphics.Paint)
    {
        com.github.mikephil.charting.components.YAxis r0;
        android.graphics.Paint $r1;
        float $f0, $f1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $r1 := @parameter0: android.graphics.Paint;

        $f0 = r0.<com.github.mikephil.charting.components.YAxis: float mTextSize>;

        virtualinvoke $r1.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r2 = virtualinvoke r0.<com.github.mikephil.charting.components.YAxis: java.lang.String getLongestLabel()>();

        $i0 = staticinvoke <com.github.mikephil.charting.utils.Utils: int calcTextWidth(android.graphics.Paint,java.lang.String)>($r1, $r2);

        $f0 = (float) $i0;

        $f1 = virtualinvoke r0.<com.github.mikephil.charting.components.YAxis: float getXOffset()>();

        $f1 = $f1 * 2.0F;

        $f0 = $f0 + $f1;

        return $f0;
    }
    public float getSpaceBottom()
    {
        com.github.mikephil.charting.components.YAxis r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        f0 = r0.<com.github.mikephil.charting.components.YAxis: float mSpacePercentBottom>;

        return f0;
    }
    public float getSpaceTop()
    {
        com.github.mikephil.charting.components.YAxis r0;
        float f0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        f0 = r0.<com.github.mikephil.charting.components.YAxis: float mSpacePercentTop>;

        return f0;
    }
    public com.github.mikephil.charting.utils.ValueFormatter getValueFormatter()
    {
        com.github.mikephil.charting.components.YAxis r0;
        com.github.mikephil.charting.utils.ValueFormatter r1;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        r1 = r0.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.utils.ValueFormatter mValueFormatter>;

        return r1;
    }
    public boolean isDrawTopYLabelEntryEnabled()
    {
        com.github.mikephil.charting.components.YAxis r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        z0 = r0.<com.github.mikephil.charting.components.YAxis: boolean mDrawTopYLabelEntry>;

        return z0;
    }
    public boolean isForceLabelsEnabled()
    {
        com.github.mikephil.charting.components.YAxis r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        z0 = r0.<com.github.mikephil.charting.components.YAxis: boolean mForceLabels>;

        return z0;
    }
    public boolean isInverted()
    {
        com.github.mikephil.charting.components.YAxis r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        z0 = r0.<com.github.mikephil.charting.components.YAxis: boolean mInverted>;

        return z0;
    }
    public boolean isShowOnlyMinMaxEnabled()
    {
        com.github.mikephil.charting.components.YAxis r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        z0 = r0.<com.github.mikephil.charting.components.YAxis: boolean mShowOnlyMinMax>;

        return z0;
    }
    public boolean isStartAtZeroEnabled()
    {
        com.github.mikephil.charting.components.YAxis r0;
        boolean z0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        z0 = r0.<com.github.mikephil.charting.components.YAxis: boolean mStartAtZero>;

        return z0;
    }
    public boolean needsDefaultFormatter()
    {
        com.github.mikephil.charting.components.YAxis r0;
        com.github.mikephil.charting.utils.ValueFormatter $r1;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $r1 = r0.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.utils.ValueFormatter mValueFormatter>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r1 = r0.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.utils.ValueFormatter mValueFormatter>;

        $z0 = $r1 instanceof com.github.mikephil.charting.utils.DefaultValueFormatter;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }
    public boolean needsOffset()
    {
        com.github.mikephil.charting.components.YAxis r0;
        com.github.mikephil.charting.components.YAxis$YAxisLabelPosition $r1, $r2;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $z0 = virtualinvoke r0.<com.github.mikephil.charting.components.YAxis: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r0.<com.github.mikephil.charting.components.YAxis: boolean isDrawLabelsEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition getLabelPosition()>();

        $r1 = <com.github.mikephil.charting.components.YAxis$YAxisLabelPosition: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition OUTSIDE_CHART>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }
    public void resetAxisMaxValue()
    {
        com.github.mikephil.charting.components.YAxis r0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        r0.<com.github.mikephil.charting.components.YAxis: float mCustomAxisMax> = #NaNF;

        return;
    }
    public void resetAxisMinValue()
    {
        com.github.mikephil.charting.components.YAxis r0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        r0.<com.github.mikephil.charting.components.YAxis: float mCustomAxisMin> = #NaNF;

        return;
    }
    public void setAxisMaxValue(float)
    {
        com.github.mikephil.charting.components.YAxis r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $f0 := @parameter0: float;

        r0.<com.github.mikephil.charting.components.YAxis: float mCustomAxisMax> = $f0;

        return;
    }
    public void setAxisMinValue(float)
    {
        com.github.mikephil.charting.components.YAxis r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $f0 := @parameter0: float;

        r0.<com.github.mikephil.charting.components.YAxis: float mCustomAxisMin> = $f0;

        return;
    }
    public void setDrawTopYLabelEntry(boolean)
    {
        com.github.mikephil.charting.components.YAxis r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mDrawTopYLabelEntry> = $z0;

        return;
    }
    public void setInverted(boolean)
    {
        com.github.mikephil.charting.components.YAxis r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mInverted> = $z0;

        return;
    }
    public void setLabelCount(int, boolean)
    {
        com.github.mikephil.charting.components.YAxis r0;
        boolean $z0;
        int $i0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        if $i0 <= 25 goto label1;

        $i0 = 25;

     label1:
        if $i0 >= 2 goto label2;

        $i0 = 2;

     label2:
        r0.<com.github.mikephil.charting.components.YAxis: int mLabelCount> = $i0;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mForceLabels> = $z0;

        return;
    }
    public void setPosition(com.github.mikephil.charting.components.YAxis$YAxisLabelPosition)
    {
        com.github.mikephil.charting.components.YAxis r0;
        com.github.mikephil.charting.components.YAxis$YAxisLabelPosition $r1;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $r1 := @parameter0: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition;

        r0.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition mPosition> = $r1;

        return;
    }
    public void setShowOnlyMinMax(boolean)
    {
        com.github.mikephil.charting.components.YAxis r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mShowOnlyMinMax> = $z0;

        return;
    }
    public void setSpaceBottom(float)
    {
        com.github.mikephil.charting.components.YAxis r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $f0 := @parameter0: float;

        r0.<com.github.mikephil.charting.components.YAxis: float mSpacePercentBottom> = $f0;

        return;
    }
    public void setSpaceTop(float)
    {
        com.github.mikephil.charting.components.YAxis r0;
        float $f0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $f0 := @parameter0: float;

        r0.<com.github.mikephil.charting.components.YAxis: float mSpacePercentTop> = $f0;

        return;
    }
    public void setStartAtZero(boolean)
    {
        com.github.mikephil.charting.components.YAxis r0;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $z0 := @parameter0: boolean;

        r0.<com.github.mikephil.charting.components.YAxis: boolean mStartAtZero> = $z0;

        return;
    }
    public void setValueFormatter(com.github.mikephil.charting.utils.ValueFormatter)
    {
        com.github.mikephil.charting.components.YAxis r0;
        com.github.mikephil.charting.utils.ValueFormatter $r1;

        r0 := @this: com.github.mikephil.charting.components.YAxis;

        $r1 := @parameter0: com.github.mikephil.charting.utils.ValueFormatter;

        if $r1 != null goto label1;

        return;

     label1:
        r0.<com.github.mikephil.charting.components.YAxis: com.github.mikephil.charting.utils.ValueFormatter mValueFormatter> = $r1;

        return;
    }
