com.github.mikephil.charting.renderer.LineChartRenderer extends com.github.mikephil.charting.renderer.LineScatterCandleRadarRenderer
protected android.graphics.Path cubicFillPath
protected android.graphics.Path cubicPath
protected android.graphics.Canvas mBitmapCanvas
protected com.github.mikephil.charting.interfaces.LineDataProvider mChart
protected com.github.mikephil.charting.buffer.CircleBuffer[] mCircleBuffers
protected android.graphics.Paint mCirclePaintInner
protected android.graphics.Bitmap mDrawBitmap
protected com.github.mikephil.charting.buffer.LineBuffer[] mLineBuffers
    public void <init>(com.github.mikephil.charting.interfaces.LineDataProvider, com.github.mikephil.charting.animation.ChartAnimator, com.github.mikephil.charting.utils.ViewPortHandler)
    {
        com.github.mikephil.charting.renderer.LineChartRenderer r0;
        com.github.mikephil.charting.interfaces.LineDataProvider $r1;
        com.github.mikephil.charting.animation.ChartAnimator $r2;
        com.github.mikephil.charting.utils.ViewPortHandler $r3;
        android.graphics.Path $r4;
        android.graphics.Paint $r5;
        android.graphics.Paint$Style $r6;

        r0 := @this: com.github.mikephil.charting.renderer.LineChartRenderer;

        $r1 := @parameter0: com.github.mikephil.charting.interfaces.LineDataProvider;

        $r2 := @parameter1: com.github.mikephil.charting.animation.ChartAnimator;

        $r3 := @parameter2: com.github.mikephil.charting.utils.ViewPortHandler;

        specialinvoke r0.<com.github.mikephil.charting.renderer.LineScatterCandleRadarRenderer: void <init>(com.github.mikephil.charting.animation.ChartAnimator,com.github.mikephil.charting.utils.ViewPortHandler)>($r2, $r3);

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path cubicPath> = $r4;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path cubicFillPath> = $r4;

        r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart> = $r1;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mCirclePaintInner> = $r5;

        $r5 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mCirclePaintInner>;

        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

        $r5 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mCirclePaintInner>;

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>(-1);

        return;
    }
    private android.graphics.Path generateFilledPath(java.util.List, float, int, int)
    {
        com.github.mikephil.charting.renderer.LineChartRenderer r0;
        java.util.List r1;
        float $f0, $f1, $f2, $f3, $f4;
        int $i0, $i1, i2, $i3, $i4;
        android.graphics.Path r2;
        com.github.mikephil.charting.animation.ChartAnimator $r3;
        java.lang.Object $r4;
        com.github.mikephil.charting.data.Entry $r5;
        double $d0;

        r0 := @this: com.github.mikephil.charting.renderer.LineChartRenderer;

        r1 := @parameter0: java.util.List;

        $f0 := @parameter1: float;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f1 = virtualinvoke $r3.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f2 = virtualinvoke $r3.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        r2 = new android.graphics.Path;

        specialinvoke r2.<android.graphics.Path: void <init>()>();

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (com.github.mikephil.charting.data.Entry) $r4;

        $i3 = virtualinvoke $r5.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f3 = (float) $i3;

        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>($f3, $f0);

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (com.github.mikephil.charting.data.Entry) $r4;

        $i3 = virtualinvoke $r5.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f3 = (float) $i3;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (com.github.mikephil.charting.data.Entry) $r4;

        $f4 = virtualinvoke $r5.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f4 = $f4 * $f2;

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>($f3, $f4);

        $i3 = $i0 + 1;

        i2 = $i1 - $i0;

        $f3 = (float) i2;

        $f3 = $f3 * $f1;

        $f4 = (float) $i0;

        $f3 = $f3 + $f4;

        $d0 = (double) $f3;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i2 = (int) $d0;

     label1:
        if $i3 >= i2 goto label2;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i3);

        $r5 = (com.github.mikephil.charting.data.Entry) $r4;

        $i4 = virtualinvoke $r5.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f3 = (float) $i4;

        $f4 = virtualinvoke $r5.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f4 = $f4 * $f2;

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>($f3, $f4);

        $i3 = $i3 + 1;

        goto label1;

     label2:
        $i1 = $i1 - $i0;

        $f2 = (float) $i1;

        $f1 = $f2 * $f1;

        $f2 = (float) $i0;

        $f1 = $f1 + $f2;

        $d0 = (double) $f1;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $i0 = $i0 + -1;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = $i1 + -1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (com.github.mikephil.charting.data.Entry) $r4;

        $i0 = virtualinvoke $r5.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f1 = (float) $i0;

        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>($f1, $f0);

        virtualinvoke r2.<android.graphics.Path: void close()>();

        return r2;
    }
    protected void drawCircles(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.LineChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.buffer.CircleBuffer r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        float f0, f1, f2, $f3, $f4, $f5;
        android.graphics.Paint $r3;
        android.graphics.Paint$Style $r4;
        com.github.mikephil.charting.animation.ChartAnimator $r5;
        com.github.mikephil.charting.interfaces.LineDataProvider $r6;
        com.github.mikephil.charting.data.LineData $r7;
        java.util.List $r8, $r13;
        java.lang.Object $r9;
        com.github.mikephil.charting.data.LineDataSet r10;
        boolean $z0;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r11;
        com.github.mikephil.charting.utils.Transformer $r12;
        com.github.mikephil.charting.data.Entry $r14, $r15;
        com.github.mikephil.charting.buffer.CircleBuffer[] $r16;
        float[] $r17;
        double $d0;
        com.github.mikephil.charting.utils.ViewPortHandler $r18;

        r0 := @this: com.github.mikephil.charting.renderer.LineChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r5 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f3 = virtualinvoke $r5.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        $r5 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f4 = virtualinvoke $r5.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        $r6 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r7 = interfaceinvoke $r6.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.data.LineData getLineData()>();

        $r8 = virtualinvoke $r7.<com.github.mikephil.charting.data.LineData: java.util.List getDataSets()>();

        i1 = 0;

     label1:
        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i1 >= $i2 goto label9;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i1);

        r10 = (com.github.mikephil.charting.data.LineDataSet) $r9;

        $z0 = virtualinvoke r10.<com.github.mikephil.charting.data.LineDataSet: boolean isVisible()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r10.<com.github.mikephil.charting.data.LineDataSet: boolean isDrawCirclesEnabled()>();

        if $z0 != 0 goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mCirclePaintInner>;

        $i2 = virtualinvoke r10.<com.github.mikephil.charting.data.LineDataSet: int getCircleHoleColor()>();

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i2);

        $r6 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r11 = virtualinvoke r10.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $r12 = interfaceinvoke $r6.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r11);

        $r13 = virtualinvoke r10.<com.github.mikephil.charting.data.LineDataSet: java.util.List getYVals()>();

        $i2 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: int mMinX>;

        if $i2 >= 0 goto label7;

        $i2 = 0;

     label4:
        $r14 = virtualinvoke r10.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.data.Entry getEntryForXIndex(int)>($i2);

        $i2 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: int mMaxX>;

        $r15 = virtualinvoke r10.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.data.Entry getEntryForXIndex(int)>($i2);

        $i2 = virtualinvoke r10.<com.github.mikephil.charting.data.LineDataSet: int getEntryPosition(com.github.mikephil.charting.data.Entry)>($r14);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, 0);

        $i3 = virtualinvoke r10.<com.github.mikephil.charting.data.LineDataSet: int getEntryPosition(com.github.mikephil.charting.data.Entry)>($r15);

        $i3 = $i3 + 1;

        i0 = interfaceinvoke $r13.<java.util.List: int size()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i3, i0);

        $r16 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.buffer.CircleBuffer[] mCircleBuffers>;

        r2 = $r16[i1];

        virtualinvoke r2.<com.github.mikephil.charting.buffer.CircleBuffer: void setPhases(float,float)>($f3, $f4);

        virtualinvoke r2.<com.github.mikephil.charting.buffer.CircleBuffer: void limitFrom(int)>($i2);

        virtualinvoke r2.<com.github.mikephil.charting.buffer.CircleBuffer: void limitTo(int)>(i0);

        virtualinvoke r2.<com.github.mikephil.charting.buffer.CircleBuffer: void feed(java.util.List)>($r13);

        $r17 = r2.<com.github.mikephil.charting.buffer.CircleBuffer: float[] buffer>;

        virtualinvoke $r12.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>($r17);

        f0 = virtualinvoke r10.<com.github.mikephil.charting.data.LineDataSet: float getCircleSize()>();

        f0 = f0 / 2.0F;

        $i3 = 0;

        i0 = i0 - $i2;

        f1 = (float) i0;

        f1 = f1 * $f3;

        f2 = (float) $i2;

        f1 = f1 + f2;

        $d0 = (double) f1;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i0 = (int) $d0;

        i0 = i0 * 2;

     label5:
        if $i3 >= i0 goto label2;

        $r17 = r2.<com.github.mikephil.charting.buffer.CircleBuffer: float[] buffer>;

        f1 = $r17[$i3];

        $r17 = r2.<com.github.mikephil.charting.buffer.CircleBuffer: float[] buffer>;

        $i4 = $i3 + 1;

        f2 = $r17[$i4];

        $r18 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $z0 = virtualinvoke $r18.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsRight(float)>(f1);

        if $z0 == 0 goto label2;

        $r18 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $z0 = virtualinvoke $r18.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsLeft(float)>(f1);

        if $z0 == 0 goto label6;

        $r18 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $z0 = virtualinvoke $r18.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsY(float)>(f2);

        if $z0 != 0 goto label8;

     label6:
        $i3 = $i3 + 2;

        goto label5;

     label7:
        $i2 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: int mMinX>;

        goto label4;

     label8:
        $i4 = $i3 / 2;

        $i4 = $i4 + $i2;

        $i4 = virtualinvoke r10.<com.github.mikephil.charting.data.LineDataSet: int getCircleColor(int)>($i4);

        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i4);

        $f5 = virtualinvoke r10.<com.github.mikephil.charting.data.LineDataSet: float getCircleSize()>();

        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f1, f2, $f5, $r3);

        $z0 = virtualinvoke r10.<com.github.mikephil.charting.data.LineDataSet: boolean isDrawCircleHoleEnabled()>();

        if $z0 == 0 goto label6;

        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mCirclePaintInner>;

        $i5 = virtualinvoke $r3.<android.graphics.Paint: int getColor()>();

        if $i4 == $i5 goto label6;

        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mCirclePaintInner>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f1, f2, f0, $r3);

        goto label6;

     label9:
        return;
    }
    protected void drawCubic(android.graphics.Canvas, com.github.mikephil.charting.data.LineDataSet, java.util.List)
    {
        com.github.mikephil.charting.renderer.LineChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.data.LineDataSet $r2;
        java.util.List r3;
        com.github.mikephil.charting.interfaces.LineDataProvider $r4;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r5;
        com.github.mikephil.charting.utils.Transformer $r6;
        int $i0, $i1, $i2, $i3, $i4;
        com.github.mikephil.charting.data.Entry $r7, $r8, r12, r13, r14;
        com.github.mikephil.charting.animation.ChartAnimator $r9;
        float $f0, $f1, $f2, $f3, $f4, f5, $f6, $f7;
        android.graphics.Path $r10, $r15;
        double $d0;
        java.lang.Object $r11;
        boolean $z0;
        android.graphics.Paint $r16;
        android.graphics.Paint$Style $r17;

        r0 := @this: com.github.mikephil.charting.renderer.LineChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.github.mikephil.charting.data.LineDataSet;

        r3 := @parameter2: java.util.List;

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r5 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $r6 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r5);

        $i0 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: int mMinX>;

        $r7 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.data.Entry getEntryForXIndex(int)>($i0);

        $i0 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: int mMaxX>;

        $r8 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.data.Entry getEntryForXIndex(int)>($i0);

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: int getEntryPosition(com.github.mikephil.charting.data.Entry)>($r7);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, 0);

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: int getEntryPosition(com.github.mikephil.charting.data.Entry)>($r8);

        $i0 = $i0 + 1;

        $i2 = interfaceinvoke r3.<java.util.List: int size()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        $r9 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f0 = virtualinvoke $r9.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        $r9 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f1 = virtualinvoke $r9.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        $f2 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: float getCubicIntensity()>();

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path cubicPath>;

        virtualinvoke $r10.<android.graphics.Path: void reset()>();

        $i0 = $i0 - $i1;

        $f3 = (float) $i0;

        $f0 = $f3 * $f0;

        $f3 = (float) $i1;

        $f0 = $f0 + $f3;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $i2 = $i0 - $i1;

        if $i2 < 2 goto label6;

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r8 = (com.github.mikephil.charting.data.Entry) $r11;

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r8 = (com.github.mikephil.charting.data.Entry) $r11;

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i1);

        r12 = (com.github.mikephil.charting.data.Entry) $r11;

        $i2 = $i1 + 1;

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i2);

        r13 = (com.github.mikephil.charting.data.Entry) $r11;

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path cubicPath>;

        $i2 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f0 = (float) $i2;

        $f3 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f3 = $f3 * $f1;

        virtualinvoke $r10.<android.graphics.Path: void moveTo(float,float)>($f0, $f3);

        $i2 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i3 = virtualinvoke $r8.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i2 = $i2 - $i3;

        $f0 = (float) $i2;

        $f0 = $f0 * $f2;

        $f3 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f4 = virtualinvoke $r8.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f3 = $f3 - $f4;

        f5 = $f3 * $f2;

        $i2 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i3 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i2 = $i2 - $i3;

        $f3 = (float) $i2;

        $f3 = $f3 * $f2;

        $f4 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f6 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f4 = $f4 - $f6;

        $f4 = $f4 * $f2;

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path cubicPath>;

        $i2 = virtualinvoke $r8.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f6 = (float) $i2;

        $f0 = $f6 + $f0;

        $f6 = virtualinvoke $r8.<com.github.mikephil.charting.data.Entry: float getVal()>();

        f5 = $f6 + f5;

        f5 = f5 * $f1;

        $i2 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f6 = (float) $i2;

        $f3 = $f6 - $f3;

        $f6 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f4 = $f6 - $f4;

        $f4 = $f4 * $f1;

        $i2 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f6 = (float) $i2;

        $f7 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f7 = $f7 * $f1;

        virtualinvoke $r10.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f0, f5, $f3, $f4, $f6, $f7);

        $i1 = $i1 + 1;

        $i2 = interfaceinvoke r3.<java.util.List: int size()>();

        $i2 = $i2 + -1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

     label1:
        if $i1 >= $i2 goto label4;

        if $i1 != 1 goto label3;

        $i3 = 0;

     label2:
        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i3);

        $r8 = (com.github.mikephil.charting.data.Entry) $r11;

        $i3 = $i1 + -1;

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i3);

        r12 = (com.github.mikephil.charting.data.Entry) $r11;

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i1);

        r13 = (com.github.mikephil.charting.data.Entry) $r11;

        $i3 = $i1 + 1;

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i3);

        r14 = (com.github.mikephil.charting.data.Entry) $r11;

        $i3 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i4 = virtualinvoke $r8.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i3 = $i3 - $i4;

        $f0 = (float) $i3;

        $f0 = $f0 * $f2;

        $f3 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f4 = virtualinvoke $r8.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f3 = $f3 - $f4;

        f5 = $f3 * $f2;

        $i3 = virtualinvoke r14.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i4 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i3 = $i3 - $i4;

        $f3 = (float) $i3;

        $f3 = $f3 * $f2;

        $f4 = virtualinvoke r14.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f6 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f4 = $f4 - $f6;

        $f4 = $f4 * $f2;

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path cubicPath>;

        $i3 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f6 = (float) $i3;

        $f0 = $f6 + $f0;

        $f6 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: float getVal()>();

        f5 = $f6 + f5;

        f5 = f5 * $f1;

        $i3 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f6 = (float) $i3;

        $f3 = $f6 - $f3;

        $f6 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f4 = $f6 - $f4;

        $f4 = $f4 * $f1;

        $i3 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f6 = (float) $i3;

        $f7 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f7 = $f7 * $f1;

        virtualinvoke $r10.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f0, f5, $f3, $f4, $f6, $f7);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i3 = $i1 + -2;

        goto label2;

     label4:
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        $i1 = $i1 + -1;

        if $i0 <= $i1 goto label6;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i1 < 3 goto label8;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        $i1 = $i1 + -3;

     label5:
        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r8 = (com.github.mikephil.charting.data.Entry) $r11;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        $i1 = $i1 + -2;

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i1);

        r12 = (com.github.mikephil.charting.data.Entry) $r11;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        $i1 = $i1 + -1;

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>($i1);

        r13 = (com.github.mikephil.charting.data.Entry) $r11;

        $i1 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i2 = virtualinvoke $r8.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i1 = $i1 - $i2;

        $f0 = (float) $i1;

        $f3 = $f0 * $f2;

        $f0 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f4 = virtualinvoke $r8.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f0 = $f0 - $f4;

        $f4 = $f0 * $f2;

        $i1 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i2 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i1 = $i1 - $i2;

        $f0 = (float) $i1;

        $f0 = $f0 * $f2;

        f5 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f6 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: float getVal()>();

        f5 = f5 - $f6;

        f5 = f5 * $f2;

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path cubicPath>;

        $i1 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f2 = (float) $i1;

        $f2 = $f2 + $f3;

        $f3 = virtualinvoke r12.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f3 = $f3 + $f4;

        $f3 = $f3 * $f1;

        $i1 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $f4 = (float) $i1;

        $f0 = $f4 - $f0;

        $f4 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f4 = $f4 - f5;

        $f4 = $f4 * $f1;

        $i1 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        f5 = (float) $i1;

        $f6 = virtualinvoke r13.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $f1 = $f6 * $f1;

        virtualinvoke $r10.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f2, $f3, $f0, $f4, f5, $f1);

     label6:
        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: boolean isDrawFilledEnabled()>();

        if $z0 == 0 goto label7;

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path cubicFillPath>;

        virtualinvoke $r10.<android.graphics.Path: void reset()>();

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path cubicFillPath>;

        $r15 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path cubicPath>;

        virtualinvoke $r10.<android.graphics.Path: void addPath(android.graphics.Path)>($r15);

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path cubicFillPath>;

        $i1 = virtualinvoke $r7.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i2 = virtualinvoke $r7.<com.github.mikephil.charting.data.Entry: int getXIndex()>();

        $i0 = $i2 + $i0;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.LineChartRenderer: void drawCubicFill(com.github.mikephil.charting.data.LineDataSet,android.graphics.Path,com.github.mikephil.charting.utils.Transformer,int,int)>($r2, $r10, $r6, $i1, $i0);

     label7:
        $r16 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: int getColor()>();

        virtualinvoke $r16.<android.graphics.Paint: void setColor(int)>($i0);

        $r16 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $r17 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r16.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r17);

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path cubicPath>;

        virtualinvoke $r6.<com.github.mikephil.charting.utils.Transformer: void pathValueToPixel(android.graphics.Path)>($r10);

        $r1 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Canvas mBitmapCanvas>;

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path cubicPath>;

        $r16 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r10, $r16);

        $r16 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r16.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(null);

        return;

     label8:
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        $i1 = $i1 + -2;

        goto label5;
    }
    protected void drawCubicFill(com.github.mikephil.charting.data.LineDataSet, android.graphics.Path, com.github.mikephil.charting.utils.Transformer, int, int)
    {
        com.github.mikephil.charting.renderer.LineChartRenderer r0;
        com.github.mikephil.charting.data.LineDataSet $r1;
        android.graphics.Path $r2;
        com.github.mikephil.charting.utils.Transformer $r3;
        int $i0, $i1;
        com.github.mikephil.charting.interfaces.LineDataProvider $r4;
        com.github.mikephil.charting.utils.FillFormatter $r5;
        com.github.mikephil.charting.data.LineData $r6;
        float $f0, $f1;
        android.graphics.Paint $r7;
        android.graphics.Paint$Style $r8;
        android.graphics.Canvas $r9;

        r0 := @this: com.github.mikephil.charting.renderer.LineChartRenderer;

        $r1 := @parameter0: com.github.mikephil.charting.data.LineDataSet;

        $r2 := @parameter1: android.graphics.Path;

        $r3 := @parameter2: com.github.mikephil.charting.utils.Transformer;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r5 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.utils.FillFormatter getFillFormatter()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r6 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.data.LineData getLineData()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $f0 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.LineDataProvider: float getYChartMax()>();

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $f1 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.LineDataProvider: float getYChartMin()>();

        $f0 = interfaceinvoke $r5.<com.github.mikephil.charting.utils.FillFormatter: float getFillLinePosition(com.github.mikephil.charting.data.LineDataSet,com.github.mikephil.charting.data.LineData,float,float)>($r1, $r6, $f0, $f1);

        $i1 = $i1 + -1;

        $f1 = (float) $i1;

        virtualinvoke $r2.<android.graphics.Path: void lineTo(float,float)>($f1, $f0);

        $f1 = (float) $i0;

        virtualinvoke $r2.<android.graphics.Path: void lineTo(float,float)>($f1, $f0);

        virtualinvoke $r2.<android.graphics.Path: void close()>();

        $r7 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r7.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        $r7 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $i0 = virtualinvoke $r1.<com.github.mikephil.charting.data.LineDataSet: int getFillColor()>();

        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>($i0);

        $r7 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $i0 = virtualinvoke $r1.<com.github.mikephil.charting.data.LineDataSet: int getFillAlpha()>();

        virtualinvoke $r7.<android.graphics.Paint: void setAlpha(int)>($i0);

        virtualinvoke $r3.<com.github.mikephil.charting.utils.Transformer: void pathValueToPixel(android.graphics.Path)>($r2);

        $r9 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Canvas mBitmapCanvas>;

        $r7 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r9.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r2, $r7);

        $r7 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setAlpha(int)>(255);

        return;
    }
    public void drawData(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.LineChartRenderer r0;
        android.graphics.Canvas $r1, $r5;
        int i0, i1, $i2;
        com.github.mikephil.charting.utils.ViewPortHandler $r2;
        float $f0;
        android.graphics.Bitmap $r3;
        android.graphics.Bitmap$Config $r4;
        com.github.mikephil.charting.interfaces.LineDataProvider $r6;
        com.github.mikephil.charting.data.LineData $r7;
        java.util.List $r8;
        java.util.Iterator $r9;
        boolean $z0;
        java.lang.Object $r10;
        com.github.mikephil.charting.data.LineDataSet r11;
        android.graphics.Paint $r12;

        r0 := @this: com.github.mikephil.charting.renderer.LineChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: float getChartWidth()>();

        i1 = (int) $f0;

        $r2 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f0 = virtualinvoke $r2.<com.github.mikephil.charting.utils.ViewPortHandler: float getChartHeight()>();

        i0 = (int) $f0;

        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Bitmap mDrawBitmap>;

        if $r3 == null goto label1;

        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Bitmap mDrawBitmap>;

        $i2 = virtualinvoke $r3.<android.graphics.Bitmap: int getWidth()>();

        if $i2 != i1 goto label1;

        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Bitmap mDrawBitmap>;

        $i2 = virtualinvoke $r3.<android.graphics.Bitmap: int getHeight()>();

        if $i2 == i0 goto label2;

     label1:
        if i1 <= 0 goto label5;

        if i0 <= 0 goto label5;

        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_4444>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i1, i0, $r4);

        r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Bitmap mDrawBitmap> = $r3;

        $r5 = new android.graphics.Canvas;

        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Bitmap mDrawBitmap>;

        specialinvoke $r5.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r3);

        r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Canvas mBitmapCanvas> = $r5;

     label2:
        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Bitmap mDrawBitmap>;

        virtualinvoke $r3.<android.graphics.Bitmap: void eraseColor(int)>(0);

        $r6 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r7 = interfaceinvoke $r6.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.data.LineData getLineData()>();

        $r8 = virtualinvoke $r7.<com.github.mikephil.charting.data.LineData: java.util.List getDataSets()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.github.mikephil.charting.data.LineDataSet) $r10;

        $z0 = virtualinvoke r11.<com.github.mikephil.charting.data.LineDataSet: boolean isVisible()>();

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.LineChartRenderer: void drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.data.LineDataSet)>($r1, r11);

        goto label3;

     label4:
        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Bitmap mDrawBitmap>;

        $r12 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r3, 0.0F, 0.0F, $r12);

     label5:
        return;
    }
    protected void drawDataSet(android.graphics.Canvas, com.github.mikephil.charting.data.LineDataSet)
    {
        com.github.mikephil.charting.renderer.LineChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.data.LineDataSet $r2;
        java.util.List $r3;
        int $i0;
        android.graphics.Paint $r4;
        float $f0;
        android.graphics.DashPathEffect $r5;
        boolean $z0;

        r0 := @this: com.github.mikephil.charting.renderer.LineChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.github.mikephil.charting.data.LineDataSet;

        $r3 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: java.util.List getYVals()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 >= 1 goto label1;

        return;

     label1:
        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $f0 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: float getLineWidth()>();

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $r5 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: android.graphics.DashPathEffect getDashPathEffect()>();

        virtualinvoke $r4.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>($r5);

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: boolean isDrawCubicEnabled()>();

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.LineChartRenderer: void drawCubic(android.graphics.Canvas,com.github.mikephil.charting.data.LineDataSet,java.util.List)>($r1, $r2, $r3);

     label2:
        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r4.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(null);

        return;

     label3:
        virtualinvoke r0.<com.github.mikephil.charting.renderer.LineChartRenderer: void drawLinear(android.graphics.Canvas,com.github.mikephil.charting.data.LineDataSet,java.util.List)>($r1, $r2, $r3);

        goto label2;
    }
    public void drawExtras(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.LineChartRenderer r0;
        android.graphics.Canvas $r1;

        r0 := @this: com.github.mikephil.charting.renderer.LineChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.LineChartRenderer: void drawCircles(android.graphics.Canvas)>($r1);

        return;
    }
    public void drawHighlighted(android.graphics.Canvas, com.github.mikephil.charting.highlight.Highlight[])
    {
        com.github.mikephil.charting.renderer.LineChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.highlight.Highlight[] $r2;
        float[] r3;
        float f0, $f1, $f2;
        int i0, $i1;
        com.github.mikephil.charting.interfaces.LineDataProvider $r4;
        com.github.mikephil.charting.data.LineData $r5;
        com.github.mikephil.charting.highlight.Highlight $r6;
        com.github.mikephil.charting.data.DataSet $r7;
        com.github.mikephil.charting.data.LineDataSet r8;
        boolean $z0, $z1;
        android.graphics.Paint $r9;
        com.github.mikephil.charting.animation.ChartAnimator $r10;
        byte $b2;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r11;
        com.github.mikephil.charting.utils.Transformer $r12;

        r0 := @this: com.github.mikephil.charting.renderer.LineChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.github.mikephil.charting.highlight.Highlight[];

        i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if i0 >= $i1 goto label4;

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r5 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.data.LineData getLineData()>();

        $r6 = $r2[i0];

        $i1 = virtualinvoke $r6.<com.github.mikephil.charting.highlight.Highlight: int getDataSetIndex()>();

        $r7 = virtualinvoke $r5.<com.github.mikephil.charting.data.LineData: com.github.mikephil.charting.data.DataSet getDataSetByIndex(int)>($i1);

        r8 = (com.github.mikephil.charting.data.LineDataSet) $r7;

        if r8 == null goto label2;

        $z0 = virtualinvoke r8.<com.github.mikephil.charting.data.LineDataSet: boolean isHighlightEnabled()>();

        if $z0 != 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r9 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mHighlightPaint>;

        $i1 = virtualinvoke r8.<com.github.mikephil.charting.data.LineDataSet: int getHighLightColor()>();

        virtualinvoke $r9.<android.graphics.Paint: void setColor(int)>($i1);

        $r9 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mHighlightPaint>;

        f0 = virtualinvoke r8.<com.github.mikephil.charting.data.LineDataSet: float getHighlightLineWidth()>();

        virtualinvoke $r9.<android.graphics.Paint: void setStrokeWidth(float)>(f0);

        $r6 = $r2[i0];

        $i1 = virtualinvoke $r6.<com.github.mikephil.charting.highlight.Highlight: int getXIndex()>();

        f0 = (float) $i1;

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $f1 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.LineDataProvider: float getXChartMax()>();

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f2 = virtualinvoke $r10.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        $f1 = $f1 * $f2;

        $b2 = f0 cmpl $f1;

        if $b2 > 0 goto label2;

        f0 = virtualinvoke r8.<com.github.mikephil.charting.data.LineDataSet: float getYValForXIndex(int)>($i1);

        $b2 = f0 cmpl #NaNF;

        if $b2 == 0 goto label2;

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f1 = virtualinvoke $r10.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        f0 = f0 * $f1;

        r3 = newarray (float)[8];

        $f1 = (float) $i1;

        r3[0] = $f1;

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $f1 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.LineDataProvider: float getYChartMax()>();

        r3[1] = $f1;

        $f1 = (float) $i1;

        r3[2] = $f1;

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $f1 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.LineDataProvider: float getYChartMin()>();

        r3[3] = $f1;

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $f1 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.LineDataProvider: float getXChartMin()>();

        r3[4] = $f1;

        r3[5] = f0;

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $f1 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.LineDataProvider: float getXChartMax()>();

        r3[6] = $f1;

        r3[7] = f0;

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r11 = virtualinvoke r8.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $r12 = interfaceinvoke $r4.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r11);

        virtualinvoke $r12.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>(r3);

        $z0 = virtualinvoke r8.<com.github.mikephil.charting.data.LineDataSet: boolean isHorizontalHighlightIndicatorEnabled()>();

        $z1 = virtualinvoke r8.<com.github.mikephil.charting.data.LineDataSet: boolean isVerticalHighlightIndicatorEnabled()>();

        virtualinvoke r0.<com.github.mikephil.charting.renderer.LineChartRenderer: void drawHighlightLines(android.graphics.Canvas,float[],boolean,boolean)>($r1, r3, $z0, $z1);

        goto label2;

     label4:
        return;
    }
    protected void drawLinear(android.graphics.Canvas, com.github.mikephil.charting.data.LineDataSet, java.util.List)
    {
        com.github.mikephil.charting.renderer.LineChartRenderer r0;
        android.graphics.Canvas $r1, r12;
        com.github.mikephil.charting.data.LineDataSet $r2;
        java.util.List r3, $r17;
        com.github.mikephil.charting.buffer.LineBuffer r4;
        int i0, $i1, $i2, $i3, $i4;
        com.github.mikephil.charting.interfaces.LineDataProvider $r5;
        com.github.mikephil.charting.data.LineData $r6;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r7;
        com.github.mikephil.charting.utils.Transformer $r8;
        com.github.mikephil.charting.animation.ChartAnimator $r9;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r10;
        android.graphics.Paint$Style $r11;
        boolean $z0;
        com.github.mikephil.charting.data.Entry $r13, $r14;
        com.github.mikephil.charting.buffer.LineBuffer[] $r15;
        float[] $r16;
        com.github.mikephil.charting.utils.ViewPortHandler $r18;

        r0 := @this: com.github.mikephil.charting.renderer.LineChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.github.mikephil.charting.data.LineDataSet;

        r3 := @parameter2: java.util.List;

        $r5 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r6 = interfaceinvoke $r5.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.data.LineData getLineData()>();

        $i1 = virtualinvoke $r6.<com.github.mikephil.charting.data.LineData: int getIndexOfDataSet(com.github.mikephil.charting.data.DataSet)>($r2);

        $r5 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r7 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $r8 = interfaceinvoke $r5.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r7);

        $r9 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f0 = virtualinvoke $r9.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        $r9 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        $f1 = virtualinvoke $r9.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $r11 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r10.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r11);

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: boolean isDashedLineEnabled()>();

        if $z0 == 0 goto label04;

        r12 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Canvas mBitmapCanvas>;

     label01:
        $i2 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: int mMinX>;

        $r13 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.data.Entry getEntryForXIndex(int)>($i2);

        $i2 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: int mMaxX>;

        $r14 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.data.Entry getEntryForXIndex(int)>($i2);

        $i2 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: int getEntryPosition(com.github.mikephil.charting.data.Entry)>($r13);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, 0);

        $i3 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: int getEntryPosition(com.github.mikephil.charting.data.Entry)>($r14);

        $i3 = $i3 + 1;

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i3, i0);

        i0 = $i3 - $i2;

        i0 = i0 * 4;

        i0 = i0 + -4;

        $r15 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.buffer.LineBuffer[] mLineBuffers>;

        r4 = $r15[$i1];

        virtualinvoke r4.<com.github.mikephil.charting.buffer.LineBuffer: void setPhases(float,float)>($f0, $f1);

        virtualinvoke r4.<com.github.mikephil.charting.buffer.LineBuffer: void limitFrom(int)>($i2);

        virtualinvoke r4.<com.github.mikephil.charting.buffer.LineBuffer: void limitTo(int)>($i3);

        virtualinvoke r4.<com.github.mikephil.charting.buffer.LineBuffer: void feed(java.util.List)>(r3);

        $r16 = r4.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        virtualinvoke $r8.<com.github.mikephil.charting.utils.Transformer: void pointValuesToPixel(float[])>($r16);

        $r17 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: java.util.List getColors()>();

        $i1 = interfaceinvoke $r17.<java.util.List: int size()>();

        if $i1 <= 1 goto label09;

        $i1 = 0;

     label02:
        if $i1 >= i0 goto label03;

        $r18 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r16 = r4.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $f0 = $r16[$i1];

        $z0 = virtualinvoke $r18.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsRight(float)>($f0);

        if $z0 != 0 goto label05;

     label03:
        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r10.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(null);

        $z0 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: boolean isDrawFilledEnabled()>();

        if $z0 == 0 goto label10;

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if i0 <= 0 goto label10;

        virtualinvoke r0.<com.github.mikephil.charting.renderer.LineChartRenderer: void drawLinearFill(android.graphics.Canvas,com.github.mikephil.charting.data.LineDataSet,java.util.List,int,int,com.github.mikephil.charting.utils.Transformer)>($r1, $r2, r3, $i2, $i3, $r8);

        return;

     label04:
        r12 = $r1;

        goto label01;

     label05:
        $r18 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r16 = r4.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i4 = $i1 + 2;

        $f0 = $r16[$i4];

        $z0 = virtualinvoke $r18.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsLeft(float)>($f0);

        if $z0 == 0 goto label07;

        $r18 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r16 = r4.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i4 = $i1 + 1;

        $f0 = $r16[$i4];

        $z0 = virtualinvoke $r18.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsTop(float)>($f0);

        if $z0 != 0 goto label06;

        $r18 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r16 = r4.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i4 = $i1 + 3;

        $f0 = $r16[$i4];

        $z0 = virtualinvoke $r18.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsBottom(float)>($f0);

        if $z0 == 0 goto label07;

     label06:
        $r18 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r16 = r4.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i4 = $i1 + 1;

        $f0 = $r16[$i4];

        $z0 = virtualinvoke $r18.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsTop(float)>($f0);

        if $z0 != 0 goto label08;

        $r18 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $r16 = r4.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i4 = $i1 + 3;

        $f0 = $r16[$i4];

        $z0 = virtualinvoke $r18.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsBottom(float)>($f0);

        if $z0 != 0 goto label08;

     label07:
        $i1 = $i1 + 4;

        goto label02;

     label08:
        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $i4 = $i1 / 4;

        $i4 = $i4 + $i2;

        $i4 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: int getColor(int)>($i4);

        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>($i4);

        $r16 = r4.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $f0 = $r16[$i1];

        $r16 = r4.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i4 = $i1 + 1;

        $f1 = $r16[$i4];

        $r16 = r4.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i4 = $i1 + 2;

        $f2 = $r16[$i4];

        $r16 = r4.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $i4 = $i1 + 3;

        $f3 = $r16[$i4];

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke r12.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r10);

        goto label07;

     label09:
        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $i1 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: int getColor()>();

        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>($i1);

        $r16 = r4.<com.github.mikephil.charting.buffer.LineBuffer: float[] buffer>;

        $r10 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke r12.<android.graphics.Canvas: void drawLines(float[],int,int,android.graphics.Paint)>($r16, 0, i0, $r10);

        goto label03;

     label10:
        return;
    }
    protected void drawLinearFill(android.graphics.Canvas, com.github.mikephil.charting.data.LineDataSet, java.util.List, int, int, com.github.mikephil.charting.utils.Transformer)
    {
        com.github.mikephil.charting.renderer.LineChartRenderer r0;
        android.graphics.Canvas $r1;
        com.github.mikephil.charting.data.LineDataSet $r2;
        java.util.List r3;
        int $i0, $i1, $i2;
        com.github.mikephil.charting.utils.Transformer $r4;
        android.graphics.Paint $r5;
        android.graphics.Paint$Style $r6;
        com.github.mikephil.charting.interfaces.LineDataProvider $r7;
        com.github.mikephil.charting.utils.FillFormatter $r8;
        com.github.mikephil.charting.data.LineData $r9;
        float $f0, $f1;
        android.graphics.Path $r10;

        r0 := @this: com.github.mikephil.charting.renderer.LineChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: com.github.mikephil.charting.data.LineDataSet;

        r3 := @parameter2: java.util.List;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 := @parameter5: com.github.mikephil.charting.utils.Transformer;

        $r5 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

        $r5 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $i2 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: int getFillColor()>();

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i2);

        $r5 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        $i2 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineDataSet: int getFillAlpha()>();

        virtualinvoke $r5.<android.graphics.Paint: void setAlpha(int)>($i2);

        $r7 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r8 = interfaceinvoke $r7.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.utils.FillFormatter getFillFormatter()>();

        $r7 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r9 = interfaceinvoke $r7.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.data.LineData getLineData()>();

        $r7 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $f0 = interfaceinvoke $r7.<com.github.mikephil.charting.interfaces.LineDataProvider: float getYChartMax()>();

        $r7 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $f1 = interfaceinvoke $r7.<com.github.mikephil.charting.interfaces.LineDataProvider: float getYChartMin()>();

        $f0 = interfaceinvoke $r8.<com.github.mikephil.charting.utils.FillFormatter: float getFillLinePosition(com.github.mikephil.charting.data.LineDataSet,com.github.mikephil.charting.data.LineData,float,float)>($r2, $r9, $f0, $f1);

        $r10 = specialinvoke r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Path generateFilledPath(java.util.List,float,int,int)>(r3, $f0, $i0, $i1);

        virtualinvoke $r4.<com.github.mikephil.charting.utils.Transformer: void pathValueToPixel(android.graphics.Path)>($r10);

        $r5 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r10, $r5);

        $r5 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mRenderPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAlpha(int)>(255);

        return;
    }
    public void drawValues(android.graphics.Canvas)
    {
        com.github.mikephil.charting.renderer.LineChartRenderer r0;
        android.graphics.Canvas $r1;
        float f0, f1, $f2;
        com.github.mikephil.charting.interfaces.LineDataProvider $r2;
        com.github.mikephil.charting.data.LineData $r3;
        int $i0, $i2, $i3, $i4, $i5;
        com.github.mikephil.charting.utils.ViewPortHandler $r4;
        byte $b1;
        java.util.List $r5, $r10;
        java.lang.Object $r6;
        com.github.mikephil.charting.data.LineDataSet r7;
        boolean $z0;
        com.github.mikephil.charting.components.YAxis$AxisDependency $r8;
        com.github.mikephil.charting.utils.Transformer $r9;
        com.github.mikephil.charting.data.Entry $r11, $r12;
        com.github.mikephil.charting.animation.ChartAnimator $r13;
        float[] $r14;
        com.github.mikephil.charting.utils.ValueFormatter $r15;
        java.lang.String $r16;
        android.graphics.Paint $r17;

        r0 := @this: com.github.mikephil.charting.renderer.LineChartRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r3 = interfaceinvoke $r2.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.data.LineData getLineData()>();

        $i0 = virtualinvoke $r3.<com.github.mikephil.charting.data.LineData: int getYValCount()>();

        f0 = (float) $i0;

        $r2 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $i0 = interfaceinvoke $r2.<com.github.mikephil.charting.interfaces.LineDataProvider: int getMaxVisibleCount()>();

        f1 = (float) $i0;

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $f2 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: float getScaleX()>();

        f1 = f1 * $f2;

        $b1 = f0 cmpg f1;

        if $b1 >= 0 goto label8;

        $r2 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r3 = interfaceinvoke $r2.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.data.LineData getLineData()>();

        $r5 = virtualinvoke $r3.<com.github.mikephil.charting.data.LineData: java.util.List getDataSets()>();

        $i0 = 0;

     label1:
        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 >= $i2 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        r7 = (com.github.mikephil.charting.data.LineDataSet) $r6;

        $z0 = virtualinvoke r7.<com.github.mikephil.charting.data.LineDataSet: boolean isDrawValuesEnabled()>();

        if $z0 != 0 goto label3;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<com.github.mikephil.charting.renderer.LineChartRenderer: void applyValueTextStyle(com.github.mikephil.charting.data.DataSet)>(r7);

        $r2 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r8 = virtualinvoke r7.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.components.YAxis$AxisDependency getAxisDependency()>();

        $r9 = interfaceinvoke $r2.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.utils.Transformer getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)>($r8);

        f0 = virtualinvoke r7.<com.github.mikephil.charting.data.LineDataSet: float getCircleSize()>();

        f0 = f0 * 1.75F;

        $i3 = (int) f0;

        $i2 = $i3;

        $z0 = virtualinvoke r7.<com.github.mikephil.charting.data.LineDataSet: boolean isDrawCirclesEnabled()>();

        if $z0 != 0 goto label4;

        $i2 = $i3 / 2;

     label4:
        $r10 = virtualinvoke r7.<com.github.mikephil.charting.data.LineDataSet: java.util.List getYVals()>();

        $i3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: int mMinX>;

        $r11 = virtualinvoke r7.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.data.Entry getEntryForXIndex(int)>($i3);

        $i3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: int mMaxX>;

        $r12 = virtualinvoke r7.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.data.Entry getEntryForXIndex(int)>($i3);

        $i3 = virtualinvoke r7.<com.github.mikephil.charting.data.LineDataSet: int getEntryPosition(com.github.mikephil.charting.data.Entry)>($r11);

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 0);

        $i4 = virtualinvoke r7.<com.github.mikephil.charting.data.LineDataSet: int getEntryPosition(com.github.mikephil.charting.data.Entry)>($r12);

        $i4 = $i4 + 1;

        $i5 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        $r13 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        f0 = virtualinvoke $r13.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseX()>();

        $r13 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.animation.ChartAnimator mAnimator>;

        f1 = virtualinvoke $r13.<com.github.mikephil.charting.animation.ChartAnimator: float getPhaseY()>();

        $r14 = virtualinvoke $r9.<com.github.mikephil.charting.utils.Transformer: float[] generateTransformedValuesLine(java.util.List,float,float,int,int)>($r10, f0, f1, $i3, $i4);

        $i4 = 0;

     label5:
        $i5 = lengthof $r14;

        if $i4 >= $i5 goto label2;

        f0 = $r14[$i4];

        $i5 = $i4 + 1;

        f1 = $r14[$i5];

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsRight(float)>(f0);

        if $z0 == 0 goto label2;

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsLeft(float)>(f0);

        if $z0 == 0 goto label6;

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.utils.ViewPortHandler mViewPortHandler>;

        $z0 = virtualinvoke $r4.<com.github.mikephil.charting.utils.ViewPortHandler: boolean isInBoundsY(float)>(f1);

        if $z0 != 0 goto label7;

     label6:
        $i4 = $i4 + 2;

        goto label5;

     label7:
        $i5 = $i4 / 2;

        $i5 = $i5 + $i3;

        $r6 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i5);

        $r11 = (com.github.mikephil.charting.data.Entry) $r6;

        $f2 = virtualinvoke $r11.<com.github.mikephil.charting.data.Entry: float getVal()>();

        $r15 = virtualinvoke r7.<com.github.mikephil.charting.data.LineDataSet: com.github.mikephil.charting.utils.ValueFormatter getValueFormatter()>();

        $r16 = interfaceinvoke $r15.<com.github.mikephil.charting.utils.ValueFormatter: java.lang.String getFormattedValue(float)>($f2);

        $f2 = (float) $i2;

        f1 = f1 - $f2;

        $r17 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: android.graphics.Paint mValuePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r16, f0, f1, $r17);

        goto label6;

     label8:
        return;
    }
    public void initBuffers()
    {
        com.github.mikephil.charting.renderer.LineChartRenderer r0;
        com.github.mikephil.charting.interfaces.LineDataProvider $r1;
        com.github.mikephil.charting.data.LineData $r2;
        int $i0, $i1;
        com.github.mikephil.charting.buffer.LineBuffer[] $r3;
        com.github.mikephil.charting.buffer.CircleBuffer[] $r4;
        com.github.mikephil.charting.data.DataSet $r5;
        com.github.mikephil.charting.data.LineDataSet r6;
        com.github.mikephil.charting.buffer.LineBuffer $r7;
        com.github.mikephil.charting.buffer.CircleBuffer $r8;

        r0 := @this: com.github.mikephil.charting.renderer.LineChartRenderer;

        $r1 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.interfaces.LineDataProvider mChart>;

        $r2 = interfaceinvoke $r1.<com.github.mikephil.charting.interfaces.LineDataProvider: com.github.mikephil.charting.data.LineData getLineData()>();

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineData: int getDataSetCount()>();

        $r3 = newarray (com.github.mikephil.charting.buffer.LineBuffer)[$i0];

        r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.buffer.LineBuffer[] mLineBuffers> = $r3;

        $i0 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineData: int getDataSetCount()>();

        $r4 = newarray (com.github.mikephil.charting.buffer.CircleBuffer)[$i0];

        r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.buffer.CircleBuffer[] mCircleBuffers> = $r4;

        $i0 = 0;

     label1:
        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.buffer.LineBuffer[] mLineBuffers>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label2;

        $r5 = virtualinvoke $r2.<com.github.mikephil.charting.data.LineData: com.github.mikephil.charting.data.DataSet getDataSetByIndex(int)>($i0);

        r6 = (com.github.mikephil.charting.data.LineDataSet) $r5;

        $r3 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.buffer.LineBuffer[] mLineBuffers>;

        $r7 = new com.github.mikephil.charting.buffer.LineBuffer;

        $i1 = virtualinvoke r6.<com.github.mikephil.charting.data.LineDataSet: int getEntryCount()>();

        $i1 = $i1 * 4;

        $i1 = $i1 + -4;

        specialinvoke $r7.<com.github.mikephil.charting.buffer.LineBuffer: void <init>(int)>($i1);

        $r3[$i0] = $r7;

        $r4 = r0.<com.github.mikephil.charting.renderer.LineChartRenderer: com.github.mikephil.charting.buffer.CircleBuffer[] mCircleBuffers>;

        $r8 = new com.github.mikephil.charting.buffer.CircleBuffer;

        $i1 = virtualinvoke r6.<com.github.mikephil.charting.data.LineDataSet: int getEntryCount()>();

        $i1 = $i1 * 2;

        specialinvoke $r8.<com.github.mikephil.charting.buffer.CircleBuffer: void <init>(int)>($i1);

        $r4[$i0] = $r8;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
