com.github.mikephil.charting.renderer.AxisRenderer extends com.github.mikephil.charting.renderer.Renderer
protected android.graphics.Paint mAxisLabelPaint
protected android.graphics.Paint mAxisLinePaint
protected android.graphics.Paint mGridPaint
protected android.graphics.Paint mLimitLinePaint
protected com.github.mikephil.charting.utils.Transformer mTrans
    public void <init>(com.github.mikephil.charting.utils.ViewPortHandler, com.github.mikephil.charting.utils.Transformer)
    {
        com.github.mikephil.charting.renderer.AxisRenderer r0;
        com.github.mikephil.charting.utils.ViewPortHandler $r1;
        com.github.mikephil.charting.utils.Transformer $r2;
        android.graphics.Paint $r3;
        android.graphics.Paint$Style $r4;

        r0 := @this: com.github.mikephil.charting.renderer.AxisRenderer;

        $r1 := @parameter0: com.github.mikephil.charting.utils.ViewPortHandler;

        $r2 := @parameter1: com.github.mikephil.charting.utils.Transformer;

        specialinvoke r0.<com.github.mikephil.charting.renderer.Renderer: void <init>(com.github.mikephil.charting.utils.ViewPortHandler)>($r1);

        r0.<com.github.mikephil.charting.renderer.AxisRenderer: com.github.mikephil.charting.utils.Transformer mTrans> = $r2;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mAxisLabelPaint> = $r3;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mGridPaint> = $r3;

        $r3 = r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mGridPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(-7829368);

        $r3 = r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mGridPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>(1.0F);

        $r3 = r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mGridPaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r3 = r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mGridPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAlpha(int)>(90);

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mAxisLinePaint> = $r3;

        $r3 = r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mAxisLinePaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(-16777216);

        $r3 = r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mAxisLinePaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>(1.0F);

        $r3 = r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mAxisLinePaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mLimitLinePaint> = $r3;

        $r3 = r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mLimitLinePaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        return;
    }
    public android.graphics.Paint getPaintAxisLabels()
    {
        com.github.mikephil.charting.renderer.AxisRenderer r0;
        android.graphics.Paint r1;

        r0 := @this: com.github.mikephil.charting.renderer.AxisRenderer;

        r1 = r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mAxisLabelPaint>;

        return r1;
    }
    public android.graphics.Paint getPaintAxisLine()
    {
        com.github.mikephil.charting.renderer.AxisRenderer r0;
        android.graphics.Paint r1;

        r0 := @this: com.github.mikephil.charting.renderer.AxisRenderer;

        r1 = r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mAxisLinePaint>;

        return r1;
    }
    public android.graphics.Paint getPaintGrid()
    {
        com.github.mikephil.charting.renderer.AxisRenderer r0;
        android.graphics.Paint r1;

        r0 := @this: com.github.mikephil.charting.renderer.AxisRenderer;

        r1 = r0.<com.github.mikephil.charting.renderer.AxisRenderer: android.graphics.Paint mGridPaint>;

        return r1;
    }
    public com.github.mikephil.charting.utils.Transformer getTransformer()
    {
        com.github.mikephil.charting.renderer.AxisRenderer r0;
        com.github.mikephil.charting.utils.Transformer r1;

        r0 := @this: com.github.mikephil.charting.renderer.AxisRenderer;

        r1 = r0.<com.github.mikephil.charting.renderer.AxisRenderer: com.github.mikephil.charting.utils.Transformer mTrans>;

        return r1;
    }
public abstract void renderAxisLabels(android.graphics.Canvas) { 
// no body
} 
public abstract void renderAxisLine(android.graphics.Canvas) { 
// no body
} 
public abstract void renderGridLines(android.graphics.Canvas) { 
// no body
} 
public abstract void renderLimitLines(android.graphics.Canvas) { 
// no body
} 
