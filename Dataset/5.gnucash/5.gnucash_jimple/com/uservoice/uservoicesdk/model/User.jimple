com.uservoice.uservoicesdk.model.User extends com.uservoice.uservoicesdk.model.BaseModel
private java.lang.String email
private java.lang.String name
    public void <init>()
    {
        com.uservoice.uservoicesdk.model.User r0;

        r0 := @this: com.uservoice.uservoicesdk.model.User;

        specialinvoke r0.<com.uservoice.uservoicesdk.model.BaseModel: void <init>()>();

        return;
    }
    public static void discover(java.lang.String, com.uservoice.uservoicesdk.rest.Callback)
    {
        java.lang.String $r0;
        com.uservoice.uservoicesdk.rest.Callback r1;
        java.util.HashMap r2;
        java.lang.Object[] $r3;
        com.uservoice.uservoicesdk.model.User$1 $r4;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.uservoice.uservoicesdk.rest.Callback;

        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("email", $r0);

        $r3 = newarray (java.lang.Object)[0];

        $r0 = staticinvoke <com.uservoice.uservoicesdk.model.User: java.lang.String apiPath(java.lang.String,java.lang.Object[])>("/users/discover.json", $r3);

        $r4 = new com.uservoice.uservoicesdk.model.User$1;

        specialinvoke $r4.<com.uservoice.uservoicesdk.model.User$1: void <init>(com.uservoice.uservoicesdk.rest.Callback,com.uservoice.uservoicesdk.rest.Callback)>(r1, r1);

        staticinvoke <com.uservoice.uservoicesdk.model.User: com.uservoice.uservoicesdk.rest.RestTask doGet(java.lang.String,java.util.Map,com.uservoice.uservoicesdk.rest.RestTaskCallback)>($r0, r2, $r4);

        return;
    }
    public static void findOrCreate(java.lang.String, java.lang.String, com.uservoice.uservoicesdk.rest.Callback)
    {
        java.lang.String $r0, $r1;
        com.uservoice.uservoicesdk.rest.Callback r2;
        java.util.HashMap r3;
        com.uservoice.uservoicesdk.Session $r4;
        com.uservoice.uservoicesdk.model.RequestToken $r5;
        java.lang.Object[] $r6;
        com.uservoice.uservoicesdk.model.User$4 $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.uservoice.uservoicesdk.rest.Callback;

        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("user[display_name]", $r1);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("user[email]", $r0);

        $r4 = staticinvoke <com.uservoice.uservoicesdk.Session: com.uservoice.uservoicesdk.Session getInstance()>();

        $r5 = virtualinvoke $r4.<com.uservoice.uservoicesdk.Session: com.uservoice.uservoicesdk.model.RequestToken getRequestToken()>();

        $r0 = virtualinvoke $r5.<com.uservoice.uservoicesdk.model.RequestToken: java.lang.String getKey()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("request_token", $r0);

        $r6 = newarray (java.lang.Object)[0];

        $r0 = staticinvoke <com.uservoice.uservoicesdk.model.User: java.lang.String apiPath(java.lang.String,java.lang.Object[])>("/users.json", $r6);

        $r7 = new com.uservoice.uservoicesdk.model.User$4;

        specialinvoke $r7.<com.uservoice.uservoicesdk.model.User$4: void <init>(com.uservoice.uservoicesdk.rest.Callback,com.uservoice.uservoicesdk.rest.Callback)>(r2, r2);

        staticinvoke <com.uservoice.uservoicesdk.model.User: com.uservoice.uservoicesdk.rest.RestTask doPost(java.lang.String,java.util.Map,com.uservoice.uservoicesdk.rest.RestTaskCallback)>($r0, r3, $r7);

        return;
    }
    public static void findOrCreate(java.lang.String, java.lang.String, java.lang.String, com.uservoice.uservoicesdk.rest.Callback)
    {
        java.lang.String $r0, $r1, $r2;
        com.uservoice.uservoicesdk.rest.Callback r3;
        java.util.HashMap r4;
        com.uservoice.uservoicesdk.Session $r5;
        com.uservoice.uservoicesdk.model.RequestToken $r6;
        java.lang.Object[] $r7;
        com.uservoice.uservoicesdk.model.User$3 $r8;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        r3 := @parameter3: com.uservoice.uservoicesdk.rest.Callback;

        r4 = new java.util.HashMap;

        specialinvoke r4.<java.util.HashMap: void <init>()>();

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("user[display_name]", $r1);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("user[email]", $r0);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("user[guid]", $r2);

        $r5 = staticinvoke <com.uservoice.uservoicesdk.Session: com.uservoice.uservoicesdk.Session getInstance()>();

        $r6 = virtualinvoke $r5.<com.uservoice.uservoicesdk.Session: com.uservoice.uservoicesdk.model.RequestToken getRequestToken()>();

        $r0 = virtualinvoke $r6.<com.uservoice.uservoicesdk.model.RequestToken: java.lang.String getKey()>();

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("request_token", $r0);

        $r7 = newarray (java.lang.Object)[0];

        $r0 = staticinvoke <com.uservoice.uservoicesdk.model.User: java.lang.String apiPath(java.lang.String,java.lang.Object[])>("/users/find_or_create.json", $r7);

        $r8 = new com.uservoice.uservoicesdk.model.User$3;

        specialinvoke $r8.<com.uservoice.uservoicesdk.model.User$3: void <init>(com.uservoice.uservoicesdk.rest.Callback,com.uservoice.uservoicesdk.rest.Callback)>(r3, r3);

        staticinvoke <com.uservoice.uservoicesdk.model.User: com.uservoice.uservoicesdk.rest.RestTask doPost(java.lang.String,java.util.Map,com.uservoice.uservoicesdk.rest.RestTaskCallback)>($r0, r4, $r8);

        return;
    }
    public static void loadCurrentUser(com.uservoice.uservoicesdk.rest.Callback)
    {
        com.uservoice.uservoicesdk.rest.Callback r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;
        com.uservoice.uservoicesdk.model.User$2 $r3;

        r0 := @parameter0: com.uservoice.uservoicesdk.rest.Callback;

        $r2 = newarray (java.lang.Object)[0];

        $r1 = staticinvoke <com.uservoice.uservoicesdk.model.User: java.lang.String apiPath(java.lang.String,java.lang.Object[])>("/users/current.json", $r2);

        $r3 = new com.uservoice.uservoicesdk.model.User$2;

        specialinvoke $r3.<com.uservoice.uservoicesdk.model.User$2: void <init>(com.uservoice.uservoicesdk.rest.Callback,com.uservoice.uservoicesdk.rest.Callback)>(r0, r0);

        staticinvoke <com.uservoice.uservoicesdk.model.User: com.uservoice.uservoicesdk.rest.RestTask doGet(java.lang.String,com.uservoice.uservoicesdk.rest.RestTaskCallback)>($r1, $r3);

        return;
    }
    public static void sendForgotPassword(java.lang.String, com.uservoice.uservoicesdk.rest.Callback)
    {
        java.lang.String $r0;
        com.uservoice.uservoicesdk.rest.Callback r1;
        java.util.HashMap r2;
        java.lang.Object[] $r3;
        com.uservoice.uservoicesdk.model.User$5 $r4;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.uservoice.uservoicesdk.rest.Callback;

        r2 = new java.util.HashMap;

        specialinvoke r2.<java.util.HashMap: void <init>()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("user[email]", $r0);

        $r3 = newarray (java.lang.Object)[0];

        $r0 = staticinvoke <com.uservoice.uservoicesdk.model.User: java.lang.String apiPath(java.lang.String,java.lang.Object[])>("/users/forgot_password.json", $r3);

        $r4 = new com.uservoice.uservoicesdk.model.User$5;

        specialinvoke $r4.<com.uservoice.uservoicesdk.model.User$5: void <init>(com.uservoice.uservoicesdk.rest.Callback,com.uservoice.uservoicesdk.rest.Callback)>(r1, r1);

        staticinvoke <com.uservoice.uservoicesdk.model.User: com.uservoice.uservoicesdk.rest.RestTask doGet(java.lang.String,java.util.Map,com.uservoice.uservoicesdk.rest.RestTaskCallback)>($r0, r2, $r4);

        return;
    }
    public java.lang.String getEmail()
    {
        com.uservoice.uservoicesdk.model.User r0;
        java.lang.String r1;

        r0 := @this: com.uservoice.uservoicesdk.model.User;

        r1 = r0.<com.uservoice.uservoicesdk.model.User: java.lang.String email>;

        return r1;
    }
    public java.lang.String getName()
    {
        com.uservoice.uservoicesdk.model.User r0;
        java.lang.String r1;

        r0 := @this: com.uservoice.uservoicesdk.model.User;

        r1 = r0.<com.uservoice.uservoicesdk.model.User: java.lang.String name>;

        return r1;
    }
    public void load(org.json.JSONObject) throws org.json.JSONException
    {
        com.uservoice.uservoicesdk.model.User r0;
        org.json.JSONObject $r1;
        java.lang.String $r2;

        r0 := @this: com.uservoice.uservoicesdk.model.User;

        $r1 := @parameter0: org.json.JSONObject;

        specialinvoke r0.<com.uservoice.uservoicesdk.model.BaseModel: void load(org.json.JSONObject)>($r1);

        $r2 = virtualinvoke r0.<com.uservoice.uservoicesdk.model.User: java.lang.String getString(org.json.JSONObject,java.lang.String)>($r1, "name");

        r0.<com.uservoice.uservoicesdk.model.User: java.lang.String name> = $r2;

        $r2 = virtualinvoke r0.<com.uservoice.uservoicesdk.model.User: java.lang.String getString(org.json.JSONObject,java.lang.String)>($r1, "email");

        r0.<com.uservoice.uservoicesdk.model.User: java.lang.String email> = $r2;

        return;
    }
