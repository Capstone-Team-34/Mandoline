com.dropbox.sync.android.CoreClient extends java.lang.Object
protected final com.dropbox.sync.android.DbxAccount mAcct
private final java.io.File mCacheDir
    protected void <init>(com.dropbox.sync.android.DbxAccount, java.io.File)
    {
        com.dropbox.sync.android.CoreClient r0;
        com.dropbox.sync.android.DbxAccount $r1;
        java.io.File $r2;
        boolean $z0;
        com.dropbox.sync.android.DbxRuntimeException$System $r3;

        r0 := @this: com.dropbox.sync.android.CoreClient;

        $r1 := @parameter0: com.dropbox.sync.android.DbxAccount;

        $r2 := @parameter1: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 == null goto label2;

        $z0 = 1;

     label1:
        staticinvoke <com.dropbox.sync.android.CoreAssert: void isTrue(boolean)>($z0);

        r0.<com.dropbox.sync.android.CoreClient: com.dropbox.sync.android.DbxAccount mAcct> = $r1;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label3;

        $r3 = new com.dropbox.sync.android.DbxRuntimeException$System;

        specialinvoke $r3.<com.dropbox.sync.android.DbxRuntimeException$System: void <init>(java.lang.String)>("Cache dir must exist before constructing a CoreClient");

        throw $r3;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        r0.<com.dropbox.sync.android.CoreClient: java.io.File mCacheDir> = $r2;

        return;
    }
    com.dropbox.sync.android.DbxAccount getAccount()
    {
        com.dropbox.sync.android.CoreClient r0;
        com.dropbox.sync.android.DbxAccount r1;

        r0 := @this: com.dropbox.sync.android.CoreClient;

        r1 = r0.<com.dropbox.sync.android.CoreClient: com.dropbox.sync.android.DbxAccount mAcct>;

        return r1;
    }
    protected java.io.File getCacheDir()
    {
        com.dropbox.sync.android.CoreClient r0;
        java.io.File r1;

        r0 := @this: com.dropbox.sync.android.CoreClient;

        r1 = r0.<com.dropbox.sync.android.CoreClient: java.io.File mCacheDir>;

        return r1;
    }
abstract com.dropbox.sync.android.CoreClient$Factory getFactory() { 
// no body
} 
abstract void shutDown(boolean) { 
// no body
} 
