com.dropbox.sync.android.DbxDatastoreManager extends com.dropbox.sync.android.CoreClient
private static java.lang.String DATASTORES_CACHE_TAG
public static java.lang.String DEFAULT_DATASTORE_ID
private static final com.dropbox.sync.android.DbxDatastoreManager$Factory FACTORY
private static java.lang.String TAG
private final com.dropbox.sync.android.DbxSyncService$ActivityTracker mActivityTracker
private boolean mIsOpen
private final java.util.concurrent.CopyOnWriteArraySet mListListeners
private final com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager
private final java.lang.Object mStatusUpdateLock
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        com.dropbox.sync.android.DbxDatastoreManager$Factory $r2;

        $r1 = class "Lcom/dropbox/sync/android/DbxDatastoreManager;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <com.dropbox.sync.android.DbxDatastoreManager: java.lang.String TAG> = $r0;

        <com.dropbox.sync.android.DbxDatastoreManager: java.lang.String DATASTORES_CACHE_TAG> = "datastores";

        <com.dropbox.sync.android.DbxDatastoreManager: java.lang.String DEFAULT_DATASTORE_ID> = "default";

        $r2 = new com.dropbox.sync.android.DbxDatastoreManager$Factory;

        specialinvoke $r2.<com.dropbox.sync.android.DbxDatastoreManager$Factory: void <init>(com.dropbox.sync.android.DbxDatastoreManager$1)>(null);

        <com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxDatastoreManager$Factory FACTORY> = $r2;

        return;
    }
    private void <init>(com.dropbox.sync.android.DbxAccount, com.dropbox.sync.android.NativeApp, java.io.File) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        com.dropbox.sync.android.DbxAccount $r1;
        com.dropbox.sync.android.NativeApp $r2;
        java.io.File $r3;
        java.lang.Object $r4;
        java.util.concurrent.CopyOnWriteArraySet $r5;
        com.dropbox.sync.android.DbxSyncService$ActivityTracker $r6;
        com.dropbox.sync.android.CoreAccountManager $r7;
        android.content.Context $r8;
        com.dropbox.sync.android.NativeDatastoreManager $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 := @parameter0: com.dropbox.sync.android.DbxAccount;

        $r2 := @parameter1: com.dropbox.sync.android.NativeApp;

        $r3 := @parameter2: java.io.File;

        specialinvoke r0.<com.dropbox.sync.android.CoreClient: void <init>(com.dropbox.sync.android.DbxAccount,java.io.File)>($r1, $r3);

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.dropbox.sync.android.DbxDatastoreManager: java.lang.Object mStatusUpdateLock> = $r4;

        $r5 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r5.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<com.dropbox.sync.android.DbxDatastoreManager: java.util.concurrent.CopyOnWriteArraySet mListListeners> = $r5;

        r0.<com.dropbox.sync.android.DbxDatastoreManager: boolean mIsOpen> = 0;

        $r6 = new com.dropbox.sync.android.DbxSyncService$ActivityTracker;

        $r7 = virtualinvoke $r1.<com.dropbox.sync.android.DbxAccount: com.dropbox.sync.android.CoreAccountManager getCoreAccountManager()>();

        $r8 = virtualinvoke $r7.<com.dropbox.sync.android.CoreAccountManager: android.content.Context getAppContext()>();

        specialinvoke $r6.<com.dropbox.sync.android.DbxSyncService$ActivityTracker: void <init>(android.content.Context)>($r8);

        r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxSyncService$ActivityTracker mActivityTracker> = $r6;

        $r9 = new com.dropbox.sync.android.NativeDatastoreManager;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r3.<java.io.File: java.lang.String getPath()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/datastoresv0.db");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.dropbox.sync.android.NativeDatastoreManager: void <init>(com.dropbox.sync.android.NativeApp,com.dropbox.sync.android.DbxDatastoreManager,java.lang.String)>($r2, r0, $r11);

        r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager> = $r9;

        r0.<com.dropbox.sync.android.DbxDatastoreManager: boolean mIsOpen> = 1;

        $r9 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        virtualinvoke r0.<com.dropbox.sync.android.DbxDatastoreManager: void statusCallback(com.dropbox.sync.android.NativeDatastoreManager)>($r9);

        return;
    }
    void <init>(com.dropbox.sync.android.DbxAccount, com.dropbox.sync.android.NativeApp, java.io.File, com.dropbox.sync.android.DbxDatastoreManager$1) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        com.dropbox.sync.android.DbxAccount $r1;
        com.dropbox.sync.android.NativeApp $r2;
        java.io.File $r3;
        com.dropbox.sync.android.DbxDatastoreManager$1 $r4;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 := @parameter0: com.dropbox.sync.android.DbxAccount;

        $r2 := @parameter1: com.dropbox.sync.android.NativeApp;

        $r3 := @parameter2: java.io.File;

        $r4 := @parameter3: com.dropbox.sync.android.DbxDatastoreManager$1;

        specialinvoke r0.<com.dropbox.sync.android.DbxDatastoreManager: void <init>(com.dropbox.sync.android.DbxAccount,com.dropbox.sync.android.NativeApp,java.io.File)>($r1, $r2, $r3);

        return;
    }
    private void <init>(com.dropbox.sync.android.DbxAccount, com.dropbox.sync.android.NativeEnv, java.io.File) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        com.dropbox.sync.android.DbxAccount $r1;
        com.dropbox.sync.android.NativeEnv $r2;
        java.io.File $r3;
        java.lang.Object $r4;
        java.util.concurrent.CopyOnWriteArraySet $r5;
        com.dropbox.sync.android.DbxSyncService$ActivityTracker $r6;
        com.dropbox.sync.android.CoreAccountManager $r7;
        android.content.Context $r8;
        com.dropbox.sync.android.NativeDatastoreManager $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 := @parameter0: com.dropbox.sync.android.DbxAccount;

        $r2 := @parameter1: com.dropbox.sync.android.NativeEnv;

        $r3 := @parameter2: java.io.File;

        specialinvoke r0.<com.dropbox.sync.android.CoreClient: void <init>(com.dropbox.sync.android.DbxAccount,java.io.File)>($r1, $r3);

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.dropbox.sync.android.DbxDatastoreManager: java.lang.Object mStatusUpdateLock> = $r4;

        $r5 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r5.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<com.dropbox.sync.android.DbxDatastoreManager: java.util.concurrent.CopyOnWriteArraySet mListListeners> = $r5;

        r0.<com.dropbox.sync.android.DbxDatastoreManager: boolean mIsOpen> = 0;

        $r6 = new com.dropbox.sync.android.DbxSyncService$ActivityTracker;

        $r7 = virtualinvoke $r1.<com.dropbox.sync.android.DbxAccount: com.dropbox.sync.android.CoreAccountManager getCoreAccountManager()>();

        $r8 = virtualinvoke $r7.<com.dropbox.sync.android.CoreAccountManager: android.content.Context getAppContext()>();

        specialinvoke $r6.<com.dropbox.sync.android.DbxSyncService$ActivityTracker: void <init>(android.content.Context)>($r8);

        r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxSyncService$ActivityTracker mActivityTracker> = $r6;

        $r9 = new com.dropbox.sync.android.NativeDatastoreManager;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r3.<java.io.File: java.lang.String getPath()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/datastoresv0.db");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.dropbox.sync.android.NativeDatastoreManager: void <init>(com.dropbox.sync.android.NativeEnv,com.dropbox.sync.android.DbxDatastoreManager,java.lang.String)>($r2, r0, $r11);

        r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager> = $r9;

        r0.<com.dropbox.sync.android.DbxDatastoreManager: boolean mIsOpen> = 1;

        $r9 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        virtualinvoke r0.<com.dropbox.sync.android.DbxDatastoreManager: void statusCallback(com.dropbox.sync.android.NativeDatastoreManager)>($r9);

        return;
    }
    void <init>(com.dropbox.sync.android.DbxAccount, com.dropbox.sync.android.NativeEnv, java.io.File, com.dropbox.sync.android.DbxDatastoreManager$1) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        com.dropbox.sync.android.DbxAccount $r1;
        com.dropbox.sync.android.NativeEnv $r2;
        java.io.File $r3;
        com.dropbox.sync.android.DbxDatastoreManager$1 $r4;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 := @parameter0: com.dropbox.sync.android.DbxAccount;

        $r2 := @parameter1: com.dropbox.sync.android.NativeEnv;

        $r3 := @parameter2: java.io.File;

        $r4 := @parameter3: com.dropbox.sync.android.DbxDatastoreManager$1;

        specialinvoke r0.<com.dropbox.sync.android.DbxDatastoreManager: void <init>(com.dropbox.sync.android.DbxAccount,com.dropbox.sync.android.NativeEnv,java.io.File)>($r1, $r2, $r3);

        return;
    }
    static java.lang.String access$000()
    {
        java.lang.String r0;

        r0 = <com.dropbox.sync.android.DbxDatastoreManager: java.lang.String DATASTORES_CACHE_TAG>;

        return r0;
    }
    public static com.dropbox.sync.android.DbxDatastoreManager forAccount(com.dropbox.sync.android.DbxAccount) throws com.dropbox.sync.android.DbxException$Unauthorized
    {
        com.dropbox.sync.android.DbxAccount $r0;
        com.dropbox.sync.android.CoreClient $r1;
        com.dropbox.sync.android.DbxDatastoreManager$Factory $r2;
        com.dropbox.sync.android.DbxDatastoreManager $r3;

        $r0 := @parameter0: com.dropbox.sync.android.DbxAccount;

        $r2 = <com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxDatastoreManager$Factory FACTORY>;

        $r1 = virtualinvoke $r0.<com.dropbox.sync.android.DbxAccount: com.dropbox.sync.android.CoreClient getClient(com.dropbox.sync.android.CoreClient$Factory)>($r2);

        $r3 = (com.dropbox.sync.android.DbxDatastoreManager) $r1;

        return $r3;
    }
    public static com.dropbox.sync.android.DbxDatastoreManager localManager(com.dropbox.sync.android.DbxAccountManager)
    {
        com.dropbox.sync.android.DbxAccountManager $r0;
        com.dropbox.sync.android.DbxException$Unauthorized r1;
        com.dropbox.sync.android.CoreAccountManager $r2;
        com.dropbox.sync.android.DbxAccount $r3;
        com.dropbox.sync.android.DbxDatastoreManager$Factory $r4;
        com.dropbox.sync.android.CoreClient $r5;
        com.dropbox.sync.android.DbxDatastoreManager $r6;
        com.dropbox.sync.android.DbxRuntimeException$Internal $r7;

        $r0 := @parameter0: com.dropbox.sync.android.DbxAccountManager;

     label1:
        $r2 = virtualinvoke $r0.<com.dropbox.sync.android.DbxAccountManager: com.dropbox.sync.android.CoreAccountManager getAccountManager()>();

        $r3 = virtualinvoke $r2.<com.dropbox.sync.android.CoreAccountManager: com.dropbox.sync.android.DbxAccount getLocalAccount()>();

     label2:
        $r4 = <com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxDatastoreManager$Factory FACTORY>;

     label3:
        $r5 = virtualinvoke $r3.<com.dropbox.sync.android.DbxAccount: com.dropbox.sync.android.CoreClient getClient(com.dropbox.sync.android.CoreClient$Factory)>($r4);

     label4:
        $r6 = (com.dropbox.sync.android.DbxDatastoreManager) $r5;

        return $r6;

     label5:
        r1 := @caughtexception;

        $r7 = staticinvoke <com.dropbox.sync.android.CoreAssert: com.dropbox.sync.android.DbxRuntimeException$Internal unrecoverable(java.lang.String,java.lang.Throwable)>("Local datastore manager is unauthorized.", r1);

        throw $r7;

        catch com.dropbox.sync.android.DbxException$Unauthorized from label1 to label2 with label5;
        catch com.dropbox.sync.android.DbxException$Unauthorized from label3 to label4 with label5;
    }
    public void addListListener(com.dropbox.sync.android.DbxDatastoreManager$ListListener)
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        com.dropbox.sync.android.DbxDatastoreManager$ListListener $r1;
        boolean $z0;
        java.lang.NullPointerException $r2;
        java.lang.Throwable $r3;
        java.util.concurrent.CopyOnWriteArraySet $r4;
        com.dropbox.sync.android.NativeDatastoreManager $r5;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 := @parameter0: com.dropbox.sync.android.DbxDatastoreManager$ListListener;

        entermonitor r0;

        if $r1 != null goto label3;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Listener must be non-null.");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label3:
        $z0 = r0.<com.dropbox.sync.android.DbxDatastoreManager: boolean mIsOpen>;

        if $z0 == 0 goto label5;

        $r4 = r0.<com.dropbox.sync.android.DbxDatastoreManager: java.util.concurrent.CopyOnWriteArraySet mListListeners>;

        $z0 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArraySet: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $r5 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        virtualinvoke $r5.<com.dropbox.sync.android.NativeDatastoreManager: void setListCallbackEnabled(boolean)>(1);

     label4:
        $r4 = r0.<com.dropbox.sync.android.DbxDatastoreManager: java.util.concurrent.CopyOnWriteArraySet mListListeners>;

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArraySet: boolean add(java.lang.Object)>($r1);

     label5:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label5 with label2;
    }
    public com.dropbox.sync.android.DbxDatastore createDatastore() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        com.dropbox.sync.android.NativeDatastoreManager $r1;
        com.dropbox.sync.android.NativeDatastore $r2;
        com.dropbox.sync.android.DbxDatastore $r3;
        java.lang.String $r4;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        $r2 = virtualinvoke $r1.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.NativeDatastore createDatastore()>();

        $r3 = new com.dropbox.sync.android.DbxDatastore;

        $r4 = virtualinvoke $r2.<com.dropbox.sync.android.NativeDatastore: java.lang.String getId()>();

        specialinvoke $r3.<com.dropbox.sync.android.DbxDatastore: void <init>(com.dropbox.sync.android.DbxDatastoreManager,java.lang.String,com.dropbox.sync.android.NativeDatastore)>(r0, $r4, $r2);

        return $r3;
    }
    public void deleteDatastore(java.lang.String) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        java.lang.String $r1;
        com.dropbox.sync.android.NativeDatastoreManager $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        $r1 = staticinvoke <com.dropbox.sync.android.DbxDatastore: java.lang.String checkId(java.lang.String)>($r1);

        virtualinvoke $r2.<com.dropbox.sync.android.NativeDatastoreManager: void deleteDatastore(java.lang.String)>($r1);

        return;
    }
    protected void finalize()
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        virtualinvoke r0.<com.dropbox.sync.android.DbxDatastoreManager: void shutDown(boolean)>(0);

        return;
    }
    public com.dropbox.sync.android.DbxAccount getAccount()
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        boolean $z0;
        com.dropbox.sync.android.DbxAccount $r1;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxAccount mAcct>;

        $z0 = virtualinvoke $r1.<com.dropbox.sync.android.DbxAccount: boolean isLocal()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxAccount mAcct>;

        return $r1;
    }
    com.dropbox.sync.android.CoreClient$Factory getFactory()
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        com.dropbox.sync.android.DbxDatastoreManager$Factory r1;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        r1 = <com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxDatastoreManager$Factory FACTORY>;

        return r1;
    }
    public boolean isLocal()
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        boolean $z0;
        com.dropbox.sync.android.DbxAccount $r1;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxAccount mAcct>;

        $z0 = virtualinvoke $r1.<com.dropbox.sync.android.DbxAccount: boolean isLocal()>();

        return $z0;
    }
    public boolean isShutDown()
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        boolean $z0;
        com.dropbox.sync.android.NativeDatastoreManager $r1;
        java.lang.Throwable $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        entermonitor r0;

     label1:
        $r1 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        $z0 = virtualinvoke $r1.<com.dropbox.sync.android.NativeDatastoreManager: boolean isInitialized()>();

     label2:
        if $z0 != 0 goto label4;

        $z0 = 1;

     label3:
        exitmonitor r0;

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
    }
    void listCallback(com.dropbox.sync.android.NativeDatastoreManager)
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        com.dropbox.sync.android.NativeDatastoreManager $r1;
        java.util.concurrent.CopyOnWriteArraySet $r2;
        java.util.Iterator $r3;
        boolean $z0;
        com.dropbox.sync.android.DbxDatastoreManager$1 $r4;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 := @parameter0: com.dropbox.sync.android.NativeDatastoreManager;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastoreManager: java.util.concurrent.CopyOnWriteArraySet mListListeners>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r4 = new com.dropbox.sync.android.DbxDatastoreManager$1;

        specialinvoke $r4.<com.dropbox.sync.android.DbxDatastoreManager$1: void <init>(com.dropbox.sync.android.DbxDatastoreManager,java.util.Iterator)>(r0, $r3);

        staticinvoke <com.dropbox.sync.android.CoreAndroidUtil: void postUserCallback(java.lang.Runnable)>($r4);

     label1:
        return;
    }
    public java.util.Map listDatastoreInfo() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        java.util.Map $r1;
        com.dropbox.sync.android.NativeDatastoreManager $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        $r1 = virtualinvoke $r2.<com.dropbox.sync.android.NativeDatastoreManager: java.util.Map listDatastoreInfo()>();

        return $r1;
    }
    public java.util.Set listDatastores() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        java.util.HashSet $r1;
        java.util.Map $r2;
        java.util.Collection $r3;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 = new java.util.HashSet;

        $r2 = virtualinvoke r0.<com.dropbox.sync.android.DbxDatastoreManager: java.util.Map listDatastoreInfo()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        return $r1;
    }
    public com.dropbox.sync.android.DbxDatastoreManager migrateToAccount(com.dropbox.sync.android.DbxAccount) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        com.dropbox.sync.android.DbxAccount $r1, $r5;
        boolean $z0;
        com.dropbox.sync.android.DbxRuntimeException$BadState $r2;
        java.lang.Throwable $r3;
        com.dropbox.sync.android.DbxRuntimeException$IllegalArgument $r4;
        com.dropbox.sync.android.DbxDatastoreManager$Factory $r6;
        com.dropbox.sync.android.NativeDatastoreManager $r7;
        java.lang.String $r8;
        java.io.File $r9, $r10;
        com.dropbox.sync.android.DbxRuntimeException$System $r11;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 := @parameter0: com.dropbox.sync.android.DbxAccount;

        entermonitor r0;

     label01:
        $z0 = virtualinvoke r0.<com.dropbox.sync.android.DbxDatastoreManager: boolean isLocal()>();

        if $z0 != 0 goto label04;

        $r2 = new com.dropbox.sync.android.DbxRuntimeException$BadState;

        specialinvoke $r2.<com.dropbox.sync.android.DbxRuntimeException$BadState: void <init>(java.lang.String)>("Current DbxDatastoreManager must be local to migrate.");

        throw $r2;

     label02:
        $r3 := @caughtexception;

        exitmonitor r0;

     label03:
        throw $r3;

     label04:
        if $r1 == null goto label06;

     label05:
        $z0 = virtualinvoke $r1.<com.dropbox.sync.android.DbxAccount: boolean isLocal()>();

        if $z0 != 0 goto label06;

        $z0 = virtualinvoke $r1.<com.dropbox.sync.android.DbxAccount: boolean isLinked()>();

        if $z0 != 0 goto label07;

     label06:
        $r4 = new com.dropbox.sync.android.DbxRuntimeException$IllegalArgument;

        specialinvoke $r4.<com.dropbox.sync.android.DbxRuntimeException$IllegalArgument: void <init>(java.lang.String)>("Migration requires a linked target account");

        throw $r4;

     label07:
        $r5 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxAccount mAcct>;

        $z0 = virtualinvoke $r5.<com.dropbox.sync.android.DbxAccount: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label08;

        $r2 = new com.dropbox.sync.android.DbxRuntimeException$BadState;

        specialinvoke $r2.<com.dropbox.sync.android.DbxRuntimeException$BadState: void <init>(java.lang.String)>("Cannot migrate to the same account.");

        throw $r2;

     label08:
        $r6 = <com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxDatastoreManager$Factory FACTORY>;

        $z0 = virtualinvoke $r1.<com.dropbox.sync.android.DbxAccount: boolean hasClient(com.dropbox.sync.android.CoreClient$Factory)>($r6);

        if $z0 == 0 goto label09;

        $r2 = new com.dropbox.sync.android.DbxRuntimeException$BadState;

        specialinvoke $r2.<com.dropbox.sync.android.DbxRuntimeException$BadState: void <init>(java.lang.String)>("Can\'t link to an account with an active datastore manager.");

        throw $r2;

     label09:
        $r7 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        $z0 = virtualinvoke $r7.<com.dropbox.sync.android.NativeDatastoreManager: boolean allDatastoresClosed()>();

        if $z0 != 0 goto label10;

        $r2 = new com.dropbox.sync.android.DbxRuntimeException$BadState;

        specialinvoke $r2.<com.dropbox.sync.android.DbxRuntimeException$BadState: void <init>(java.lang.String)>("Can\'t migrate datastore manager when datastores are open.");

        throw $r2;

     label10:
        $r8 = <com.dropbox.sync.android.DbxDatastoreManager: java.lang.String DATASTORES_CACHE_TAG>;

        $r9 = virtualinvoke $r1.<com.dropbox.sync.android.DbxAccount: java.io.File getCacheDirForLocalClient(java.lang.String)>($r8);

        $r8 = <com.dropbox.sync.android.DbxDatastoreManager: java.lang.String DATASTORES_CACHE_TAG>;

        $r10 = virtualinvoke $r1.<com.dropbox.sync.android.DbxAccount: java.io.File getCacheDirForClient(java.lang.String)>($r8);

        $z0 = virtualinvoke $r10.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label11;

        $z0 = staticinvoke <com.dropbox.sync.android.CoreFileUtil: boolean recursiveDelete(java.io.File)>($r10);

        if $z0 != 0 goto label11;

        $r11 = new com.dropbox.sync.android.DbxRuntimeException$System;

        specialinvoke $r11.<com.dropbox.sync.android.DbxRuntimeException$System: void <init>(java.lang.String)>("Unable to delete Datastore cache before migration.");

        throw $r11;

     label11:
        $z0 = virtualinvoke $r9.<java.io.File: boolean renameTo(java.io.File)>($r10);

        if $z0 != 0 goto label12;

        $r11 = new com.dropbox.sync.android.DbxRuntimeException$System;

        specialinvoke $r11.<com.dropbox.sync.android.DbxRuntimeException$System: void <init>(java.lang.String)>("Unable to migrate Datastore cache.");

        throw $r11;

     label12:
        virtualinvoke r0.<com.dropbox.sync.android.DbxDatastoreManager: void shutDown()>();

        exitmonitor r0;

     label13:
        r0 = staticinvoke <com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxDatastoreManager forAccount(com.dropbox.sync.android.DbxAccount)>($r1);

        return r0;

        catch java.lang.Throwable from label01 to label03 with label02;
        catch java.lang.Throwable from label05 to label13 with label02;
    }
    public com.dropbox.sync.android.DbxDatastore openDatastore(java.lang.String) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        java.lang.String $r1, $r4;
        com.dropbox.sync.android.DbxDatastore $r2;
        com.dropbox.sync.android.NativeDatastoreManager $r3;
        com.dropbox.sync.android.NativeDatastore $r5;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = new com.dropbox.sync.android.DbxDatastore;

        $r3 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        $r4 = staticinvoke <com.dropbox.sync.android.DbxDatastore: java.lang.String checkId(java.lang.String)>($r1);

        $r5 = virtualinvoke $r3.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.NativeDatastore openDatastore(java.lang.String)>($r4);

        specialinvoke $r2.<com.dropbox.sync.android.DbxDatastore: void <init>(com.dropbox.sync.android.DbxDatastoreManager,java.lang.String,com.dropbox.sync.android.NativeDatastore)>(r0, $r1, $r5);

        return $r2;
    }
    public com.dropbox.sync.android.DbxDatastore openDefaultDatastore() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        com.dropbox.sync.android.DbxDatastore $r1;
        java.lang.String $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r2 = <com.dropbox.sync.android.DbxDatastoreManager: java.lang.String DEFAULT_DATASTORE_ID>;

        $r1 = virtualinvoke r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxDatastore openOrCreateDatastore(java.lang.String)>($r2);

        return $r1;
    }
    public com.dropbox.sync.android.DbxDatastore openOrCreateDatastore(java.lang.String) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        java.lang.String $r1, $r4;
        com.dropbox.sync.android.DbxDatastore $r2;
        com.dropbox.sync.android.NativeDatastoreManager $r3;
        com.dropbox.sync.android.NativeDatastore $r5;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = new com.dropbox.sync.android.DbxDatastore;

        $r3 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        $r4 = staticinvoke <com.dropbox.sync.android.DbxDatastore: java.lang.String checkId(java.lang.String)>($r1);

        $r5 = virtualinvoke $r3.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.NativeDatastore openOrCreateDatastore(java.lang.String)>($r4);

        specialinvoke $r2.<com.dropbox.sync.android.DbxDatastore: void <init>(com.dropbox.sync.android.DbxDatastoreManager,java.lang.String,com.dropbox.sync.android.NativeDatastore)>(r0, $r1, $r5);

        return $r2;
    }
    public void removeListListener(com.dropbox.sync.android.DbxDatastoreManager$ListListener)
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        com.dropbox.sync.android.DbxDatastoreManager$ListListener $r1;
        java.lang.NullPointerException $r2;
        java.lang.Throwable $r3;
        boolean $z0;
        java.util.concurrent.CopyOnWriteArraySet $r4;
        com.dropbox.sync.android.NativeDatastoreManager $r5;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 := @parameter0: com.dropbox.sync.android.DbxDatastoreManager$ListListener;

        entermonitor r0;

        if $r1 != null goto label3;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Listener must be non-null.");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label3:
        $z0 = r0.<com.dropbox.sync.android.DbxDatastoreManager: boolean mIsOpen>;

        if $z0 == 0 goto label4;

        $r4 = r0.<com.dropbox.sync.android.DbxDatastoreManager: java.util.concurrent.CopyOnWriteArraySet mListListeners>;

        $z0 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArraySet: boolean isEmpty()>();

        $r4 = r0.<com.dropbox.sync.android.DbxDatastoreManager: java.util.concurrent.CopyOnWriteArraySet mListListeners>;

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArraySet: boolean remove(java.lang.Object)>($r1);

        if $z0 != 0 goto label4;

        $r4 = r0.<com.dropbox.sync.android.DbxDatastoreManager: java.util.concurrent.CopyOnWriteArraySet mListListeners>;

        $z0 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArraySet: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $r5 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        virtualinvoke $r5.<com.dropbox.sync.android.NativeDatastoreManager: void setListCallbackEnabled(boolean)>(0);

     label4:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
    public void shutDown()
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        virtualinvoke r0.<com.dropbox.sync.android.DbxDatastoreManager: void shutDown(boolean)>(0);

        return;
    }
    void shutDown(boolean)
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        boolean $z0, $z1;
        java.lang.String $r1, $r5;
        com.dropbox.sync.android.DbxAccount $r2;
        com.dropbox.sync.android.CoreLogger $r3;
        java.lang.StringBuilder $r4;
        com.dropbox.sync.android.NativeDatastoreManager $r6;
        java.util.concurrent.CopyOnWriteArraySet $r7;
        com.dropbox.sync.android.DbxSyncService$ActivityTracker $r8;
        com.dropbox.sync.android.DbxSyncService$ActivityTracker$State $r9;
        java.lang.Throwable $r10;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        $z1 = r0.<com.dropbox.sync.android.DbxDatastoreManager: boolean mIsOpen>;

        if $z1 != 0 goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        r0.<com.dropbox.sync.android.DbxDatastoreManager: boolean mIsOpen> = 0;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxAccount mAcct>;

        $r3 = virtualinvoke $r2.<com.dropbox.sync.android.DbxAccount: com.dropbox.sync.android.CoreLogger getLogger()>();

        $r1 = <com.dropbox.sync.android.DbxDatastoreManager: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing ");

        $z1 = virtualinvoke r0.<com.dropbox.sync.android.DbxDatastoreManager: boolean isLocal()>();

        if $z1 == 0 goto label6;

        $r5 = "local ";

     label4:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DbxDatastoreManager for uid=\'");

        $r2 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxAccount mAcct>;

        $r5 = virtualinvoke $r2.<com.dropbox.sync.android.DbxAccount: java.lang.String getUserId()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.dropbox.sync.android.CoreLogger: void i(java.lang.String,java.lang.String)>($r1, $r5);

        $r6 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        virtualinvoke $r6.<com.dropbox.sync.android.NativeDatastoreManager: void setListCallbackEnabled(boolean)>(0);

        $r7 = r0.<com.dropbox.sync.android.DbxDatastoreManager: java.util.concurrent.CopyOnWriteArraySet mListListeners>;

        virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArraySet: void clear()>();

        $r6 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        virtualinvoke $r6.<com.dropbox.sync.android.NativeDatastoreManager: void shutDown(boolean)>($z0);

        $r2 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxAccount mAcct>;

        virtualinvoke $r2.<com.dropbox.sync.android.DbxAccount: void onClientStopped(com.dropbox.sync.android.CoreClient)>(r0);

        exitmonitor r0;

     label5:
        $r8 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxSyncService$ActivityTracker mActivityTracker>;

        $r9 = <com.dropbox.sync.android.DbxSyncService$ActivityTracker$State: com.dropbox.sync.android.DbxSyncService$ActivityTracker$State IDLE>;

        virtualinvoke $r8.<com.dropbox.sync.android.DbxSyncService$ActivityTracker: void setState(com.dropbox.sync.android.DbxSyncService$ActivityTracker$State)>($r9);

        return;

     label6:
        $r5 = "";

        goto label4;

     label7:
        $r10 := @caughtexception;

        exitmonitor r0;

     label8:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
        catch java.lang.Throwable from label6 to label8 with label7;
    }
    void statusCallback(com.dropbox.sync.android.NativeDatastoreManager)
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        com.dropbox.sync.android.NativeDatastoreManager $r1;
        java.lang.Object $r2;
        com.dropbox.sync.android.DbxSyncService$ActivityTracker$State $r3;
        com.dropbox.sync.android.DbxSyncService$ActivityTracker $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 := @parameter0: com.dropbox.sync.android.NativeDatastoreManager;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastoreManager: java.lang.Object mStatusUpdateLock>;

        entermonitor $r2;

     label1:
        $r4 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.DbxSyncService$ActivityTracker mActivityTracker>;

        $r3 = virtualinvoke $r1.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.DbxSyncService$ActivityTracker$State getActivityState()>();

        virtualinvoke $r4.<com.dropbox.sync.android.DbxSyncService$ActivityTracker: void setState(com.dropbox.sync.android.DbxSyncService$ActivityTracker$State)>($r3);

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
    public void uncacheDatastore(java.lang.String) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxDatastoreManager r0;
        java.lang.String $r1;
        com.dropbox.sync.android.NativeDatastoreManager $r2;

        r0 := @this: com.dropbox.sync.android.DbxDatastoreManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.dropbox.sync.android.DbxDatastoreManager: com.dropbox.sync.android.NativeDatastoreManager mNativeDatastoreManager>;

        $r1 = staticinvoke <com.dropbox.sync.android.DbxDatastore: java.lang.String checkId(java.lang.String)>($r1);

        virtualinvoke $r2.<com.dropbox.sync.android.NativeDatastoreManager: void uncacheDatastore(java.lang.String)>($r1);

        return;
    }
