com.dropbox.sync.android.NativeDatastoreManager extends java.lang.Object
static final boolean $assertionsDisabled
private static java.lang.String TAG
private final com.dropbox.sync.android.NativeApp mApp
private boolean mIsInitialized
private final com.dropbox.sync.android.CoreLogger mLog
private final long mNativeHandle
private final java.lang.ref.WeakReference mOwner
    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;
        java.lang.String $r1;

        $r0 = class "Lcom/dropbox/sync/android/NativeDatastoreManager;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.dropbox.sync.android.NativeDatastoreManager: boolean $assertionsDisabled> = $z0;

        $r0 = class "Lcom/dropbox/sync/android/NativeDatastoreManager;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <com.dropbox.sync.android.NativeDatastoreManager: java.lang.String TAG> = $r1;

        staticinvoke <com.dropbox.sync.android.NativeLib: void ensureLoaded()>();

        staticinvoke <com.dropbox.sync.android.NativeDatastoreManager: void nativeClassInit()>();

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    void <init>(com.dropbox.sync.android.NativeApp, com.dropbox.sync.android.DbxDatastoreManager, java.lang.String) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        com.dropbox.sync.android.NativeApp $r1;
        com.dropbox.sync.android.DbxDatastoreManager $r2;
        java.lang.String $r3;
        java.lang.NullPointerException $r4;
        java.lang.ref.WeakReference $r5;
        com.dropbox.sync.android.CoreLogger $r6;
        long $l0;
        boolean $z0;
        byte $b1;
        java.lang.AssertionError $r7;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $r1 := @parameter0: com.dropbox.sync.android.NativeApp;

        $r2 := @parameter1: com.dropbox.sync.android.DbxDatastoreManager;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("App must be non-null.");

        throw $r4;

     label1:
        r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.NativeApp mApp> = $r1;

        if $r2 != null goto label2;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Owner must be non-null.");

        throw $r4;

     label2:
        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        r0.<com.dropbox.sync.android.NativeDatastoreManager: java.lang.ref.WeakReference mOwner> = $r5;

        $r6 = new com.dropbox.sync.android.CoreLogger;

        specialinvoke $r6.<com.dropbox.sync.android.CoreLogger: void <init>()>();

        r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.CoreLogger mLog> = $r6;

        $l0 = virtualinvoke $r1.<com.dropbox.sync.android.NativeApp: long getNativeHandle()>();

        $l0 = specialinvoke r0.<com.dropbox.sync.android.NativeDatastoreManager: long nativeInit(long,java.lang.String)>($l0, $r3);

        r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle> = $l0;

        $z0 = <com.dropbox.sync.android.NativeDatastoreManager: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label3;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>("Invalid native DatastoreManager handle.");

        throw $r7;

     label3:
        r0.<com.dropbox.sync.android.NativeDatastoreManager: boolean mIsInitialized> = 1;

        return;
    }
    void <init>(com.dropbox.sync.android.NativeEnv, com.dropbox.sync.android.DbxDatastoreManager, java.lang.String) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        com.dropbox.sync.android.NativeEnv $r1;
        com.dropbox.sync.android.DbxDatastoreManager $r2;
        java.lang.String $r3;
        java.lang.NullPointerException $r4;
        java.lang.ref.WeakReference $r5;
        com.dropbox.sync.android.CoreLogger $r6;
        long $l0;
        boolean $z0;
        byte $b1;
        java.lang.AssertionError $r7;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $r1 := @parameter0: com.dropbox.sync.android.NativeEnv;

        $r2 := @parameter1: com.dropbox.sync.android.DbxDatastoreManager;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("App must be non-null.");

        throw $r4;

     label1:
        r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.NativeApp mApp> = null;

        if $r2 != null goto label2;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Owner must be non-null.");

        throw $r4;

     label2:
        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        r0.<com.dropbox.sync.android.NativeDatastoreManager: java.lang.ref.WeakReference mOwner> = $r5;

        $r6 = new com.dropbox.sync.android.CoreLogger;

        specialinvoke $r6.<com.dropbox.sync.android.CoreLogger: void <init>()>();

        r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.CoreLogger mLog> = $r6;

        $l0 = virtualinvoke $r1.<com.dropbox.sync.android.NativeEnv: long getNativeHandle()>();

        $l0 = specialinvoke r0.<com.dropbox.sync.android.NativeDatastoreManager: long nativeInitLocal(long,java.lang.String)>($l0, $r3);

        r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle> = $l0;

        $z0 = <com.dropbox.sync.android.NativeDatastoreManager: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label3;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>("Invalid native DatastoreManager handle.");

        throw $r7;

     label3:
        r0.<com.dropbox.sync.android.NativeDatastoreManager: boolean mIsInitialized> = 1;

        return;
    }
    private void addDbInfo(java.util.Map, java.lang.String, java.lang.String, long, long)
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        java.util.Map r1;
        java.lang.String $r2, $r3;
        long $l0, $l1;
        com.dropbox.sync.android.DbxDatastore$Role $r4;
        com.dropbox.sync.android.DbxDatastoreInfo $r5;
        java.lang.RuntimeException r6;
        com.dropbox.sync.android.CoreLogger $r7;
        java.lang.Error r8;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $l0 := @parameter3: long;

        $l1 := @parameter4: long;

     label1:
        $r5 = new com.dropbox.sync.android.DbxDatastoreInfo;

     label2:
        $r4 = staticinvoke <com.dropbox.sync.android.NativeDatastore: com.dropbox.sync.android.DbxDatastore$Role fromNativeRole(long)>($l1);

        specialinvoke $r5.<com.dropbox.sync.android.DbxDatastoreInfo: void <init>(java.lang.String,java.lang.String,long,com.dropbox.sync.android.DbxDatastore$Role)>($r2, $r3, $l0, $r4);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r5);

     label3:
        return;

     label4:
        r6 := @caughtexception;

        $r7 = r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.CoreLogger mLog>;

        $r2 = <com.dropbox.sync.android.NativeDatastoreManager: java.lang.String TAG>;

        staticinvoke <com.dropbox.sync.android.CoreAssert: void uncaughtExceptionInCallback(java.lang.Throwable,com.dropbox.sync.android.CoreLogger,java.lang.String)>(r6, $r7, $r2);

        throw r6;

     label5:
        r8 := @caughtexception;

        $r7 = r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.CoreLogger mLog>;

        $r2 = <com.dropbox.sync.android.NativeDatastoreManager: java.lang.String TAG>;

        staticinvoke <com.dropbox.sync.android.CoreAssert: void uncaughtExceptionInCallback(java.lang.Throwable,com.dropbox.sync.android.CoreLogger,java.lang.String)>(r8, $r7, $r2);

        throw r8;

        catch java.lang.RuntimeException from label2 to label3 with label4;
        catch java.lang.Error from label1 to label3 with label5;
    }
    private void listCallback()
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        java.lang.Object $r1;
        java.lang.ref.WeakReference $r2;
        com.dropbox.sync.android.DbxDatastoreManager r3;
        java.lang.RuntimeException r4;
        com.dropbox.sync.android.CoreLogger $r5;
        java.lang.String $r6;
        java.lang.Error r7;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $r2 = r0.<com.dropbox.sync.android.NativeDatastoreManager: java.lang.ref.WeakReference mOwner>;

        $r1 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (com.dropbox.sync.android.DbxDatastoreManager) $r1;

        if r3 == null goto label5;

     label1:
        virtualinvoke r3.<com.dropbox.sync.android.DbxDatastoreManager: void listCallback(com.dropbox.sync.android.NativeDatastoreManager)>(r0);

     label2:
        return;

     label3:
        r4 := @caughtexception;

        $r5 = r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.CoreLogger mLog>;

        $r6 = <com.dropbox.sync.android.NativeDatastoreManager: java.lang.String TAG>;

        staticinvoke <com.dropbox.sync.android.CoreAssert: void uncaughtExceptionInCallback(java.lang.Throwable,com.dropbox.sync.android.CoreLogger,java.lang.String)>(r4, $r5, $r6);

        return;

     label4:
        r7 := @caughtexception;

        $r5 = r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.CoreLogger mLog>;

        $r6 = <com.dropbox.sync.android.NativeDatastoreManager: java.lang.String TAG>;

        staticinvoke <com.dropbox.sync.android.CoreAssert: void uncaughtExceptionInCallback(java.lang.Throwable,com.dropbox.sync.android.CoreLogger,java.lang.String)>(r7, $r5, $r6);

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Error from label1 to label2 with label4;
    }
private static native boolean nativeAllDatastoresClosed(long) { 
// no body
} 
private static native void nativeClassInit() { 
// no body
} 
private static native void nativeDeleteDs(long, java.lang.String) throws com.dropbox.sync.android.DbxException { 
// no body
} 
private static native void nativeFree(long) { 
// no body
} 
private static native int nativeGetSyncStatus(long) { 
// no body
} 
private native long nativeInit(long, java.lang.String) { 
// no body
} 
private native long nativeInitLocal(long, java.lang.String) { 
// no body
} 
private native void nativeListDsInfo(long, java.util.Map) throws com.dropbox.sync.android.DbxException { 
// no body
} 
private static native long nativeOpenDs(long, java.lang.String) throws com.dropbox.sync.android.DbxException { 
// no body
} 
private static native long nativeOpenOrCreateDs(long, java.lang.String) throws com.dropbox.sync.android.DbxException { 
// no body
} 
private static native void nativeSetOrClearListCallback(long, boolean) { 
// no body
} 
private static native void nativeShutDown(long) { 
// no body
} 
private static native void nativeUncacheDs(long, java.lang.String) throws com.dropbox.sync.android.DbxException { 
// no body
} 
    private void statusCallback()
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        java.lang.Object $r1;
        java.lang.ref.WeakReference $r2;
        com.dropbox.sync.android.DbxDatastoreManager r3;
        java.lang.RuntimeException r4;
        com.dropbox.sync.android.CoreLogger $r5;
        java.lang.String $r6;
        java.lang.Error r7;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $r2 = r0.<com.dropbox.sync.android.NativeDatastoreManager: java.lang.ref.WeakReference mOwner>;

        $r1 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (com.dropbox.sync.android.DbxDatastoreManager) $r1;

        if r3 == null goto label5;

     label1:
        virtualinvoke r3.<com.dropbox.sync.android.DbxDatastoreManager: void statusCallback(com.dropbox.sync.android.NativeDatastoreManager)>(r0);

     label2:
        return;

     label3:
        r4 := @caughtexception;

        $r5 = r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.CoreLogger mLog>;

        $r6 = <com.dropbox.sync.android.NativeDatastoreManager: java.lang.String TAG>;

        staticinvoke <com.dropbox.sync.android.CoreAssert: void uncaughtExceptionInCallback(java.lang.Throwable,com.dropbox.sync.android.CoreLogger,java.lang.String)>(r4, $r5, $r6);

        return;

     label4:
        r7 := @caughtexception;

        $r5 = r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.CoreLogger mLog>;

        $r6 = <com.dropbox.sync.android.NativeDatastoreManager: java.lang.String TAG>;

        staticinvoke <com.dropbox.sync.android.CoreAssert: void uncaughtExceptionInCallback(java.lang.Throwable,com.dropbox.sync.android.CoreLogger,java.lang.String)>(r7, $r5, $r6);

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Error from label1 to label2 with label4;
    }
    public boolean allDatastoresClosed()
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        boolean $z0;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle>;

        $z0 = staticinvoke <com.dropbox.sync.android.NativeDatastoreManager: boolean nativeAllDatastoresClosed(long)>($l0);

        return $z0;
    }
    public com.dropbox.sync.android.NativeDatastore createDatastore() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        com.dropbox.sync.android.NativeDatastore $r1;
        long $l0;
        com.dropbox.sync.android.CoreLogger $r2;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $r1 = new com.dropbox.sync.android.NativeDatastore;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle>;

        $l0 = staticinvoke <com.dropbox.sync.android.NativeDatastoreManager: long nativeOpenOrCreateDs(long,java.lang.String)>($l0, null);

        $r2 = r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.CoreLogger mLog>;

        specialinvoke $r1.<com.dropbox.sync.android.NativeDatastore: void <init>(long,com.dropbox.sync.android.CoreLogger)>($l0, $r2);

        return $r1;
    }
    public void deleteDatastore(java.lang.String) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        java.lang.String $r1;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $r1 := @parameter0: java.lang.String;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle>;

        staticinvoke <com.dropbox.sync.android.NativeDatastoreManager: void nativeDeleteDs(long,java.lang.String)>($l0, $r1);

        return;
    }
    protected void finalize()
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        java.lang.String $r1;
        boolean $z0;
        com.dropbox.sync.android.CoreLogger $r2;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $z0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: boolean mIsInitialized>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.CoreLogger mLog>;

        $r1 = <com.dropbox.sync.android.NativeDatastoreManager: java.lang.String TAG>;

        virtualinvoke $r2.<com.dropbox.sync.android.CoreLogger: void e(java.lang.String,java.lang.String)>($r1, "NativeDatastoreManager finalized without being deinitialized.");

        return;

     label1:
        $l0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle>;

        staticinvoke <com.dropbox.sync.android.NativeDatastoreManager: void nativeFree(long)>($l0);

        return;
    }
    com.dropbox.sync.android.DbxSyncService$ActivityTracker$State getActivityState()
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        long $l0;
        int $i1, $i2;
        com.dropbox.sync.android.DbxSyncService$ActivityTracker$State r1;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle>;

        $i1 = staticinvoke <com.dropbox.sync.android.NativeDatastoreManager: int nativeGetSyncStatus(long)>($l0);

        $i2 = $i1 & 17;

        if $i2 == 0 goto label1;

        r1 = <com.dropbox.sync.android.DbxSyncService$ActivityTracker$State: com.dropbox.sync.android.DbxSyncService$ActivityTracker$State FOREGROUND>;

        return r1;

     label1:
        $i1 = $i1 & 32;

        if $i1 == 0 goto label2;

        r1 = <com.dropbox.sync.android.DbxSyncService$ActivityTracker$State: com.dropbox.sync.android.DbxSyncService$ActivityTracker$State BACKGROUND>;

        return r1;

     label2:
        r1 = <com.dropbox.sync.android.DbxSyncService$ActivityTracker$State: com.dropbox.sync.android.DbxSyncService$ActivityTracker$State IDLE>;

        return r1;
    }
    public boolean isInitialized()
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        java.lang.Throwable $r1;
        boolean z0;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        entermonitor r0;

     label1:
        z0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: boolean mIsInitialized>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public java.util.Map listDatastoreInfo() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        java.util.HashMap r1;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        r1 = new java.util.HashMap;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $l0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle>;

        specialinvoke r0.<com.dropbox.sync.android.NativeDatastoreManager: void nativeListDsInfo(long,java.util.Map)>($l0, r1);

        return r1;
    }
    public com.dropbox.sync.android.NativeDatastore openDatastore(java.lang.String) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        java.lang.String $r1;
        com.dropbox.sync.android.NativeDatastore $r2;
        com.dropbox.sync.android.CoreLogger $r3;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = new com.dropbox.sync.android.NativeDatastore;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle>;

        $l0 = staticinvoke <com.dropbox.sync.android.NativeDatastoreManager: long nativeOpenDs(long,java.lang.String)>($l0, $r1);

        $r3 = r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.CoreLogger mLog>;

        specialinvoke $r2.<com.dropbox.sync.android.NativeDatastore: void <init>(long,com.dropbox.sync.android.CoreLogger)>($l0, $r3);

        return $r2;
    }
    public com.dropbox.sync.android.NativeDatastore openOrCreateDatastore(java.lang.String) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        java.lang.String $r1;
        com.dropbox.sync.android.NativeDatastore $r2;
        com.dropbox.sync.android.CoreLogger $r3;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = new com.dropbox.sync.android.NativeDatastore;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle>;

        $l0 = staticinvoke <com.dropbox.sync.android.NativeDatastoreManager: long nativeOpenOrCreateDs(long,java.lang.String)>($l0, $r1);

        $r3 = r0.<com.dropbox.sync.android.NativeDatastoreManager: com.dropbox.sync.android.CoreLogger mLog>;

        specialinvoke $r2.<com.dropbox.sync.android.NativeDatastore: void <init>(long,com.dropbox.sync.android.CoreLogger)>($l0, $r3);

        return $r2;
    }
    public void setListCallbackEnabled(boolean)
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        boolean $z0;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $z0 := @parameter0: boolean;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle>;

        staticinvoke <com.dropbox.sync.android.NativeDatastoreManager: void nativeSetOrClearListCallback(long,boolean)>($l0, $z0);

        return;
    }
    public void shutDown(boolean)
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        boolean $z0;
        long $l0;
        java.lang.Throwable $r1;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        $z0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: boolean mIsInitialized>;

        if $z0 != 0 goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        r0.<com.dropbox.sync.android.NativeDatastoreManager: boolean mIsInitialized> = 0;

        exitmonitor r0;

     label4:
        $l0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle>;

        staticinvoke <com.dropbox.sync.android.NativeDatastoreManager: void nativeShutDown(long)>($l0);

        return;

     label5:
        $r1 := @caughtexception;

     label6:
        exitmonitor r0;

     label7:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
    public void uncacheDatastore(java.lang.String) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.NativeDatastoreManager r0;
        java.lang.String $r1;
        long $l0;

        r0 := @this: com.dropbox.sync.android.NativeDatastoreManager;

        $r1 := @parameter0: java.lang.String;

        $l0 = r0.<com.dropbox.sync.android.NativeDatastoreManager: long mNativeHandle>;

        staticinvoke <com.dropbox.sync.android.NativeDatastoreManager: void nativeUncacheDs(long,java.lang.String)>($l0, $r1);

        return;
    }
