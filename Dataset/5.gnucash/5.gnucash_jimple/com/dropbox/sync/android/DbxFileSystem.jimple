com.dropbox.sync.android.DbxFileSystem extends com.dropbox.sync.android.CoreClient
static final com.dropbox.sync.android.DbxFileSystem$ChooserFactory CHOOSER_FACTORY
private static final com.dropbox.sync.android.DbxFileSystem$Factory FACTORY
private static java.lang.String TAG
private boolean isOpen
private final com.dropbox.sync.android.DbxSyncService$ActivityTracker mActivityTracker
private final com.dropbox.sync.android.CoreLogger mLog
private final com.dropbox.sync.android.NativeFileSystem mNativeFileSystem
private final java.util.Map mPathListeners
private final java.lang.Object mStatusUpdateLock
private final java.util.concurrent.CopyOnWriteArraySet mSyncStatusListeners
    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        com.dropbox.sync.android.DbxFileSystem$Factory $r2;
        com.dropbox.sync.android.DbxFileSystem$ChooserFactory $r3;

        $r1 = class "Lcom/dropbox/sync/android/DbxFileSystem;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG> = $r0;

        $r2 = new com.dropbox.sync.android.DbxFileSystem$Factory;

        specialinvoke $r2.<com.dropbox.sync.android.DbxFileSystem$Factory: void <init>(com.dropbox.sync.android.DbxFileSystem$1)>(null);

        <com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.DbxFileSystem$Factory FACTORY> = $r2;

        $r3 = new com.dropbox.sync.android.DbxFileSystem$ChooserFactory;

        specialinvoke $r3.<com.dropbox.sync.android.DbxFileSystem$ChooserFactory: void <init>(com.dropbox.sync.android.DbxFileSystem$1)>(null);

        <com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.DbxFileSystem$ChooserFactory CHOOSER_FACTORY> = $r3;

        return;
    }
    private void <init>(com.dropbox.sync.android.DbxAccount, com.dropbox.sync.android.NativeApp, java.io.File, java.util.EnumSet) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxAccount $r1;
        com.dropbox.sync.android.NativeApp $r2;
        java.io.File $r3;
        java.util.EnumSet r4;
        java.lang.Object $r5;
        java.util.concurrent.CopyOnWriteArraySet $r6;
        java.util.HashMap $r7;
        com.dropbox.sync.android.CoreLogger $r8;
        com.dropbox.sync.android.DbxSyncService$ActivityTracker $r9;
        com.dropbox.sync.android.CoreAccountManager $r10;
        android.content.Context $r11;
        com.dropbox.sync.android.NativeFileSystem $r12;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxAccount;

        $r2 := @parameter1: com.dropbox.sync.android.NativeApp;

        $r3 := @parameter2: java.io.File;

        r4 := @parameter3: java.util.EnumSet;

        specialinvoke r0.<com.dropbox.sync.android.CoreClient: void <init>(com.dropbox.sync.android.DbxAccount,java.io.File)>($r1, $r3);

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.dropbox.sync.android.DbxFileSystem: java.lang.Object mStatusUpdateLock> = $r5;

        $r6 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r6.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<com.dropbox.sync.android.DbxFileSystem: java.util.concurrent.CopyOnWriteArraySet mSyncStatusListeners> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<com.dropbox.sync.android.DbxFileSystem: java.util.Map mPathListeners> = $r7;

        r0.<com.dropbox.sync.android.DbxFileSystem: boolean isOpen> = 0;

        $r8 = virtualinvoke $r1.<com.dropbox.sync.android.DbxAccount: com.dropbox.sync.android.CoreLogger getLogger()>();

        r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog> = $r8;

        $r9 = new com.dropbox.sync.android.DbxSyncService$ActivityTracker;

        $r10 = virtualinvoke $r1.<com.dropbox.sync.android.DbxAccount: com.dropbox.sync.android.CoreAccountManager getCoreAccountManager()>();

        $r11 = virtualinvoke $r10.<com.dropbox.sync.android.CoreAccountManager: android.content.Context getAppContext()>();

        specialinvoke $r9.<com.dropbox.sync.android.DbxSyncService$ActivityTracker: void <init>(android.content.Context)>($r11);

        r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.DbxSyncService$ActivityTracker mActivityTracker> = $r9;

        $r12 = specialinvoke r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem doInitialize(com.dropbox.sync.android.DbxAccount,com.dropbox.sync.android.NativeApp,java.util.EnumSet)>($r1, $r2, r4);

        r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem> = $r12;

        r0.<com.dropbox.sync.android.DbxFileSystem: boolean isOpen> = 1;

        $r12 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        specialinvoke r0.<com.dropbox.sync.android.DbxFileSystem: void syncStatusCallback(com.dropbox.sync.android.NativeFileSystem)>($r12);

        return;
    }
    void <init>(com.dropbox.sync.android.DbxAccount, com.dropbox.sync.android.NativeApp, java.io.File, java.util.EnumSet, com.dropbox.sync.android.DbxFileSystem$1) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxAccount $r1;
        com.dropbox.sync.android.NativeApp $r2;
        java.io.File $r3;
        java.util.EnumSet $r4;
        com.dropbox.sync.android.DbxFileSystem$1 $r5;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxAccount;

        $r2 := @parameter1: com.dropbox.sync.android.NativeApp;

        $r3 := @parameter2: java.io.File;

        $r4 := @parameter3: java.util.EnumSet;

        $r5 := @parameter4: com.dropbox.sync.android.DbxFileSystem$1;

        specialinvoke r0.<com.dropbox.sync.android.DbxFileSystem: void <init>(com.dropbox.sync.android.DbxAccount,com.dropbox.sync.android.NativeApp,java.io.File,java.util.EnumSet)>($r1, $r2, $r3, $r4);

        return;
    }
    static void access$300(com.dropbox.sync.android.DbxFileSystem, com.dropbox.sync.android.NativeFileSystem)
    {
        com.dropbox.sync.android.DbxFileSystem $r0;
        com.dropbox.sync.android.NativeFileSystem $r1;

        $r0 := @parameter0: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter1: com.dropbox.sync.android.NativeFileSystem;

        specialinvoke $r0.<com.dropbox.sync.android.DbxFileSystem: void syncStatusCallback(com.dropbox.sync.android.NativeFileSystem)>($r1);

        return;
    }
    static void access$400(com.dropbox.sync.android.DbxFileSystem, com.dropbox.sync.android.NativeFileSystem$PathListenerKey)
    {
        com.dropbox.sync.android.DbxFileSystem $r0;
        com.dropbox.sync.android.NativeFileSystem$PathListenerKey $r1;

        $r0 := @parameter0: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter1: com.dropbox.sync.android.NativeFileSystem$PathListenerKey;

        specialinvoke $r0.<com.dropbox.sync.android.DbxFileSystem: void pathCallback(com.dropbox.sync.android.NativeFileSystem$PathListenerKey)>($r1);

        return;
    }
    private com.dropbox.sync.android.NativeFileSystem doInitialize(com.dropbox.sync.android.DbxAccount, com.dropbox.sync.android.NativeApp, java.util.EnumSet) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxAccount $r1;
        com.dropbox.sync.android.NativeApp $r2;
        java.util.EnumSet r3;
        com.dropbox.sync.android.NativeFileSystem r4;
        java.lang.String $r5, $r9;
        java.io.File $r6;
        com.dropbox.sync.android.CoreLogger $r7;
        java.lang.StringBuilder $r8;
        com.dropbox.sync.android.DbxFileSystem$1 $r10;
        java.lang.Throwable $r11;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxAccount;

        $r2 := @parameter1: com.dropbox.sync.android.NativeApp;

        r3 := @parameter2: java.util.EnumSet;

        r4 = new com.dropbox.sync.android.NativeFileSystem;

        $r6 = virtualinvoke r0.<com.dropbox.sync.android.DbxFileSystem: java.io.File getCacheDir()>();

        specialinvoke r4.<com.dropbox.sync.android.NativeFileSystem: void <init>(com.dropbox.sync.android.NativeApp,java.io.File,java.util.EnumSet)>($r2, $r6, r3);

        $r7 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r5 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created DbxFileSystem for uid=\'");

        $r9 = virtualinvoke $r1.<com.dropbox.sync.android.DbxAccount: java.lang.String getUserId()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.dropbox.sync.android.CoreLogger: void i(java.lang.String,java.lang.String)>($r5, $r9);

     label1:
        $r10 = new com.dropbox.sync.android.DbxFileSystem$1;

        specialinvoke $r10.<com.dropbox.sync.android.DbxFileSystem$1: void <init>(com.dropbox.sync.android.DbxFileSystem,com.dropbox.sync.android.NativeFileSystem)>(r0, r4);

        virtualinvoke r4.<com.dropbox.sync.android.NativeFileSystem: void setSyncStatusListener(com.dropbox.sync.android.NativeFileSystem$SyncStatusListener)>($r10);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        virtualinvoke r4.<com.dropbox.sync.android.NativeFileSystem: void deinitialize(boolean)>(0);

        throw $r11;

     label4:
        return r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public static com.dropbox.sync.android.DbxFileSystem forAccount(com.dropbox.sync.android.DbxAccount) throws com.dropbox.sync.android.DbxException$Unauthorized
    {
        com.dropbox.sync.android.DbxAccount $r0;
        com.dropbox.sync.android.CoreClient $r1;
        com.dropbox.sync.android.DbxFileSystem$Factory $r2;
        com.dropbox.sync.android.DbxFileSystem $r3;

        $r0 := @parameter0: com.dropbox.sync.android.DbxAccount;

        $r2 = <com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.DbxFileSystem$Factory FACTORY>;

        $r1 = virtualinvoke $r0.<com.dropbox.sync.android.DbxAccount: com.dropbox.sync.android.CoreClient getClient(com.dropbox.sync.android.CoreClient$Factory)>($r2);

        $r3 = (com.dropbox.sync.android.DbxFileSystem) $r1;

        return $r3;
    }
    private com.dropbox.sync.android.DbxFileSystem$PathListener$Mode fromNativePathListenerMode(int)
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        int $i0;
        java.lang.String $r1, $r5;
        com.dropbox.sync.android.DbxRuntimeException$IllegalArgument $r2;
        com.dropbox.sync.android.CoreLogger $r3;
        java.lang.StringBuilder $r4;
        java.lang.RuntimeException $r6;
        com.dropbox.sync.android.DbxFileSystem$PathListener$Mode r7;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $r3 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r1 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        $r2 = new com.dropbox.sync.android.DbxRuntimeException$IllegalArgument;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled native path listener mode: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.dropbox.sync.android.DbxRuntimeException$IllegalArgument: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke $r3.<com.dropbox.sync.android.CoreLogger: java.lang.RuntimeException logAndThrow(java.lang.String,java.lang.RuntimeException)>($r1, $r2);

        throw $r6;

     label2:
        r7 = <com.dropbox.sync.android.DbxFileSystem$PathListener$Mode: com.dropbox.sync.android.DbxFileSystem$PathListener$Mode PATH_ONLY>;

        return r7;

     label3:
        r7 = <com.dropbox.sync.android.DbxFileSystem$PathListener$Mode: com.dropbox.sync.android.DbxFileSystem$PathListener$Mode PATH_OR_CHILD>;

        return r7;

     label4:
        r7 = <com.dropbox.sync.android.DbxFileSystem$PathListener$Mode: com.dropbox.sync.android.DbxFileSystem$PathListener$Mode PATH_OR_DESCENDANT>;

        return r7;
    }
    private int makeFileOpenFlags(com.dropbox.sync.android.DbxFileSystem$CreatePref, com.dropbox.sync.android.DbxFileSystem$RevPref)
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxFileSystem$CreatePref $r1;
        com.dropbox.sync.android.DbxFileSystem$RevPref $r2;
        int i0, $i1;
        int[] $r3;
        com.dropbox.sync.android.CoreLogger $r4;
        java.lang.String $r5;
        com.dropbox.sync.android.DbxRuntimeException$IllegalArgument $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxFileSystem$CreatePref;

        $r2 := @parameter1: com.dropbox.sync.android.DbxFileSystem$RevPref;

        i0 = 0;

        $r3 = <com.dropbox.sync.android.DbxFileSystem$5: int[] $SwitchMap$com$dropbox$sync$android$DbxFileSystem$CreatePref>;

        $i1 = virtualinvoke $r1.<com.dropbox.sync.android.DbxFileSystem$CreatePref: int ordinal()>();

        $i1 = $r3[$i1];

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        $r4 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r5 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        $r6 = new com.dropbox.sync.android.DbxRuntimeException$IllegalArgument;

        specialinvoke $r6.<com.dropbox.sync.android.DbxRuntimeException$IllegalArgument: void <init>(java.lang.String)>("Unknown CreatePref value.");

        $r7 = virtualinvoke $r4.<com.dropbox.sync.android.CoreLogger: java.lang.RuntimeException logAndThrow(java.lang.String,java.lang.RuntimeException)>($r5, $r6);

        throw $r7;

     label2:
        i0 = <com.dropbox.sync.android.NativeFileSystem: int FILE_OPEN_CREATE_EXCL>;

     label3:
        $r3 = <com.dropbox.sync.android.DbxFileSystem$5: int[] $SwitchMap$com$dropbox$sync$android$DbxFileSystem$RevPref>;

        $i1 = virtualinvoke $r2.<com.dropbox.sync.android.DbxFileSystem$RevPref: int ordinal()>();

        $i1 = $r3[$i1];

        lookupswitch($i1)
        {
            case 1: goto label6;
            case 2: goto label7;
            default: goto label4;
        };

     label4:
        $r4 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r5 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        $r6 = new com.dropbox.sync.android.DbxRuntimeException$IllegalArgument;

        specialinvoke $r6.<com.dropbox.sync.android.DbxRuntimeException$IllegalArgument: void <init>(java.lang.String)>("Unknown CreatePref value.");

        $r7 = virtualinvoke $r4.<com.dropbox.sync.android.CoreLogger: java.lang.RuntimeException logAndThrow(java.lang.String,java.lang.RuntimeException)>($r5, $r6);

        throw $r7;

     label5:
        i0 = 1;

        goto label3;

     label6:
        i0 = i0 | 4;

     label7:
        return i0;
    }
    private int makeThumbnailOpenFlags(com.dropbox.sync.android.DbxFileSystem$ThumbSize, com.dropbox.sync.android.DbxFileSystem$ThumbFormat)
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxFileSystem$ThumbSize $r1;
        com.dropbox.sync.android.DbxFileSystem$ThumbFormat $r2;
        int[] $r3;
        int $i0, $i1;
        com.dropbox.sync.android.CoreLogger $r4;
        java.lang.String $r5;
        com.dropbox.sync.android.DbxRuntimeException$IllegalArgument $r6;
        java.lang.RuntimeException $r7;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxFileSystem$ThumbSize;

        $r2 := @parameter1: com.dropbox.sync.android.DbxFileSystem$ThumbFormat;

        $r3 = <com.dropbox.sync.android.DbxFileSystem$5: int[] $SwitchMap$com$dropbox$sync$android$DbxFileSystem$ThumbSize>;

        $i0 = virtualinvoke $r1.<com.dropbox.sync.android.DbxFileSystem$ThumbSize: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            default: goto label01;
        };

     label01:
        $r4 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r5 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        $r6 = new com.dropbox.sync.android.DbxRuntimeException$IllegalArgument;

        specialinvoke $r6.<com.dropbox.sync.android.DbxRuntimeException$IllegalArgument: void <init>(java.lang.String)>("Unknown ThumbSize value.");

        $r7 = virtualinvoke $r4.<com.dropbox.sync.android.CoreLogger: java.lang.RuntimeException logAndThrow(java.lang.String,java.lang.RuntimeException)>($r5, $r6);

        throw $r7;

     label02:
        $i0 = <com.dropbox.sync.android.NativeFileSystem: int FILE_OPEN_THUMB_XS>;

     label03:
        $r3 = <com.dropbox.sync.android.DbxFileSystem$5: int[] $SwitchMap$com$dropbox$sync$android$DbxFileSystem$ThumbFormat>;

        $i1 = virtualinvoke $r2.<com.dropbox.sync.android.DbxFileSystem$ThumbFormat: int ordinal()>();

        $i1 = $r3[$i1];

        lookupswitch($i1)
        {
            case 1: goto label09;
            case 2: goto label10;
            default: goto label04;
        };

     label04:
        $r4 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r5 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        $r6 = new com.dropbox.sync.android.DbxRuntimeException$IllegalArgument;

        specialinvoke $r6.<com.dropbox.sync.android.DbxRuntimeException$IllegalArgument: void <init>(java.lang.String)>("Unknown ThumbFormat value.");

        $r7 = virtualinvoke $r4.<com.dropbox.sync.android.CoreLogger: java.lang.RuntimeException logAndThrow(java.lang.String,java.lang.RuntimeException)>($r5, $r6);

        throw $r7;

     label05:
        $i0 = <com.dropbox.sync.android.NativeFileSystem: int FILE_OPEN_THUMB_S>;

        goto label03;

     label06:
        $i0 = <com.dropbox.sync.android.NativeFileSystem: int FILE_OPEN_THUMB_M>;

        goto label03;

     label07:
        $i0 = <com.dropbox.sync.android.NativeFileSystem: int FILE_OPEN_THUMB_L>;

        goto label03;

     label08:
        $i0 = <com.dropbox.sync.android.NativeFileSystem: int FILE_OPEN_THUMB_XL>;

        goto label03;

     label09:
        $i1 = <com.dropbox.sync.android.NativeFileSystem: int FILE_OPEN_THUMB_JPG>;

        $i0 = $i0 | $i1;

        return $i0;

     label10:
        $i1 = <com.dropbox.sync.android.NativeFileSystem: int FILE_OPEN_THUMB_PNG>;

        $i0 = $i0 | $i1;

        return $i0;
    }
    private void pathCallback(com.dropbox.sync.android.NativeFileSystem$PathListenerKey)
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.NativeFileSystem$PathListenerKey $r1;
        com.dropbox.sync.android.DbxPath r2;
        com.dropbox.sync.android.DbxFileSystem$4 r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.util.concurrent.CopyOnWriteArraySet $r6;
        java.util.Iterator $r7;
        int $i0;
        com.dropbox.sync.android.DbxFileSystem$PathListener$Mode $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.NativeFileSystem$PathListenerKey;

        entermonitor r0;

     label1:
        $r4 = r0.<com.dropbox.sync.android.DbxFileSystem: java.util.Map mPathListeners>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (java.util.concurrent.CopyOnWriteArraySet) $r5;

        $r7 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>();

        r2 = $r1.<com.dropbox.sync.android.NativeFileSystem$PathListenerKey: com.dropbox.sync.android.DbxPath path>;

        $i0 = $r1.<com.dropbox.sync.android.NativeFileSystem$PathListenerKey: int nativeMode>;

        $r8 = specialinvoke r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.DbxFileSystem$PathListener$Mode fromNativePathListenerMode(int)>($i0);

        r3 = new com.dropbox.sync.android.DbxFileSystem$4;

        specialinvoke r3.<com.dropbox.sync.android.DbxFileSystem$4: void <init>(com.dropbox.sync.android.DbxFileSystem,java.util.Iterator,com.dropbox.sync.android.DbxPath,com.dropbox.sync.android.DbxFileSystem$PathListener$Mode)>(r0, $r7, r2, $r8);

        exitmonitor r0;

     label2:
        staticinvoke <com.dropbox.sync.android.CoreAndroidUtil: void postUserCallback(java.lang.Runnable)>(r3);

        return;

     label3:
        $r9 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
    private void syncStatusCallback(com.dropbox.sync.android.NativeFileSystem)
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.NativeFileSystem $r1;
        com.dropbox.sync.android.DbxException r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        com.dropbox.sync.android.DbxSyncStatus $r5;
        com.dropbox.sync.android.DbxSyncService$ActivityTracker$State r6;
        boolean $z0;
        com.dropbox.sync.android.DbxSyncService$ActivityTracker $r7;
        java.util.concurrent.CopyOnWriteArraySet $r8;
        java.util.Iterator $r9;
        com.dropbox.sync.android.DbxFileSystem$3 $r10;
        com.dropbox.sync.android.CoreLogger $r11;
        java.lang.Throwable $r12;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.NativeFileSystem;

        $r3 = r0.<com.dropbox.sync.android.DbxFileSystem: java.lang.Object mStatusUpdateLock>;

        entermonitor $r3;

     label01:
        $r5 = virtualinvoke $r1.<com.dropbox.sync.android.NativeFileSystem: com.dropbox.sync.android.DbxSyncStatus getSyncStatus()>();

     label02:
        r6 = <com.dropbox.sync.android.DbxSyncService$ActivityTracker$State: com.dropbox.sync.android.DbxSyncService$ActivityTracker$State IDLE>;

     label03:
        $z0 = virtualinvoke $r5.<com.dropbox.sync.android.DbxSyncStatus: boolean anyInProgress()>();

     label04:
        if $z0 == 0 goto label09;

        r6 = <com.dropbox.sync.android.DbxSyncService$ActivityTracker$State: com.dropbox.sync.android.DbxSyncService$ActivityTracker$State FOREGROUND>;

     label05:
        $r7 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.DbxSyncService$ActivityTracker mActivityTracker>;

     label06:
        virtualinvoke $r7.<com.dropbox.sync.android.DbxSyncService$ActivityTracker: void setState(com.dropbox.sync.android.DbxSyncService$ActivityTracker$State)>(r6);

     label07:
        exitmonitor $r3;

     label08:
        $r8 = r0.<com.dropbox.sync.android.DbxFileSystem: java.util.concurrent.CopyOnWriteArraySet mSyncStatusListeners>;

        $r9 = virtualinvoke $r8.<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>();

        $r10 = new com.dropbox.sync.android.DbxFileSystem$3;

        specialinvoke $r10.<com.dropbox.sync.android.DbxFileSystem$3: void <init>(com.dropbox.sync.android.DbxFileSystem,java.util.Iterator)>(r0, $r9);

        staticinvoke <com.dropbox.sync.android.CoreAndroidUtil: void postUserCallback(java.lang.Runnable)>($r10);

        return;

     label09:
        $z0 = $r5.<com.dropbox.sync.android.DbxSyncStatus: boolean isSyncActive>;

        if $z0 == 0 goto label05;

        r6 = <com.dropbox.sync.android.DbxSyncService$ActivityTracker$State: com.dropbox.sync.android.DbxSyncService$ActivityTracker$State BACKGROUND>;

     label10:
        goto label05;

     label11:
        r2 := @caughtexception;

     label12:
        $r11 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r4 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        virtualinvoke $r11.<com.dropbox.sync.android.CoreLogger: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, "Failed to get sync status in callback.", r2);

        goto label07;

     label13:
        $r12 := @caughtexception;

        exitmonitor $r3;

     label14:
        throw $r12;

        catch com.dropbox.sync.android.DbxException from label01 to label02 with label11;
        catch com.dropbox.sync.android.DbxException from label03 to label04 with label11;
        catch com.dropbox.sync.android.DbxException from label06 to label07 with label11;
        catch java.lang.Throwable from label01 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label12 to label14 with label13;
    }
    private int toNative(com.dropbox.sync.android.DbxFileSystem$PathListener$Mode)
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxFileSystem$PathListener$Mode $r1;
        com.dropbox.sync.android.DbxRuntimeException$IllegalArgument $r2;
        int[] $r3;
        int $i0;
        com.dropbox.sync.android.CoreLogger $r4;
        java.lang.String $r5, $r7;
        java.lang.StringBuilder $r6;
        java.lang.RuntimeException $r8;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxFileSystem$PathListener$Mode;

        $r3 = <com.dropbox.sync.android.DbxFileSystem$5: int[] $SwitchMap$com$dropbox$sync$android$DbxFileSystem$PathListener$Mode>;

        $i0 = virtualinvoke $r1.<com.dropbox.sync.android.DbxFileSystem$PathListener$Mode: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        $r4 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r5 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        $r2 = new com.dropbox.sync.android.DbxRuntimeException$IllegalArgument;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled PathListener.Mode: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.dropbox.sync.android.DbxRuntimeException$IllegalArgument: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r4.<com.dropbox.sync.android.CoreLogger: java.lang.RuntimeException logAndThrow(java.lang.String,java.lang.RuntimeException)>($r5, $r2);

        throw $r8;

     label2:
        return 0;

     label3:
        return 1;

     label4:
        return 2;
    }
    public void addPathListener(com.dropbox.sync.android.DbxFileSystem$PathListener, com.dropbox.sync.android.DbxPath, com.dropbox.sync.android.DbxFileSystem$PathListener$Mode)
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxFileSystem$PathListener $r1;
        com.dropbox.sync.android.DbxPath $r2;
        com.dropbox.sync.android.DbxFileSystem$PathListener$Mode $r3;
        com.dropbox.sync.android.NativeFileSystem$PathListenerKey r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.Throwable $r6;
        boolean $z0;
        int $i0;
        java.util.Map $r7;
        java.lang.Object $r8;
        java.util.concurrent.CopyOnWriteArraySet r9;
        com.dropbox.sync.android.NativeFileSystem $r10;
        com.dropbox.sync.android.DbxFileSystem$2 $r11;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxFileSystem$PathListener;

        $r2 := @parameter1: com.dropbox.sync.android.DbxPath;

        $r3 := @parameter2: com.dropbox.sync.android.DbxFileSystem$PathListener$Mode;

        entermonitor r0;

        if $r1 != null goto label03;

     label01:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener must be non-null.");

        throw $r5;

     label02:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

     label03:
        if $r2 != null goto label05;

     label04:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path must be non-null.");

        throw $r5;

     label05:
        if $r3 != null goto label06;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Mode must be non-null.");

        throw $r5;

     label06:
        $z0 = r0.<com.dropbox.sync.android.DbxFileSystem: boolean isOpen>;

     label07:
        if $z0 != 0 goto label09;

     label08:
        exitmonitor r0;

        return;

     label09:
        r4 = new com.dropbox.sync.android.NativeFileSystem$PathListenerKey;

        $i0 = specialinvoke r0.<com.dropbox.sync.android.DbxFileSystem: int toNative(com.dropbox.sync.android.DbxFileSystem$PathListener$Mode)>($r3);

        specialinvoke r4.<com.dropbox.sync.android.NativeFileSystem$PathListenerKey: void <init>(com.dropbox.sync.android.DbxPath,int)>($r2, $i0);

        $r7 = r0.<com.dropbox.sync.android.DbxFileSystem: java.util.Map mPathListeners>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r9 = (java.util.concurrent.CopyOnWriteArraySet) $r8;

        if r9 != null goto label10;

        $r10 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $r11 = new com.dropbox.sync.android.DbxFileSystem$2;

        specialinvoke $r11.<com.dropbox.sync.android.DbxFileSystem$2: void <init>(com.dropbox.sync.android.DbxFileSystem)>(r0);

        virtualinvoke $r10.<com.dropbox.sync.android.NativeFileSystem: void setPathListener(com.dropbox.sync.android.NativeFileSystem$PathListenerKey,com.dropbox.sync.android.NativeFileSystem$PathListener)>(r4, $r11);

        r9 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke r9.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        $r7 = r0.<com.dropbox.sync.android.DbxFileSystem: java.util.Map mPathListeners>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r9);

     label10:
        virtualinvoke r9.<java.util.concurrent.CopyOnWriteArraySet: boolean add(java.lang.Object)>($r1);

     label11:
        goto label08;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label04 to label07 with label02;
        catch java.lang.Throwable from label09 to label11 with label02;
    }
    public void addSyncStatusListener(com.dropbox.sync.android.DbxFileSystem$SyncStatusListener)
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxFileSystem$SyncStatusListener $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;
        boolean $z0;
        java.util.concurrent.CopyOnWriteArraySet $r4;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxFileSystem$SyncStatusListener;

        entermonitor r0;

        if $r1 != null goto label3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener must be non-null.");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label3:
        $z0 = r0.<com.dropbox.sync.android.DbxFileSystem: boolean isOpen>;

        if $z0 == 0 goto label4;

        $r4 = r0.<com.dropbox.sync.android.DbxFileSystem: java.util.concurrent.CopyOnWriteArraySet mSyncStatusListeners>;

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArraySet: boolean add(java.lang.Object)>($r1);

     label4:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
    public void awaitFirstSync() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.NativeFileSystem $r1;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        virtualinvoke $r1.<com.dropbox.sync.android.NativeFileSystem: void awaitFirstSync()>();

        return;
    }
    public com.dropbox.sync.android.DbxFile create(com.dropbox.sync.android.DbxPath) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxPath $r1;
        com.dropbox.sync.android.DbxFileSystem$RevPref $r2;
        com.dropbox.sync.android.DbxFile $r3;
        com.dropbox.sync.android.DbxFileSystem$CreatePref $r4;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPath;

        $r4 = <com.dropbox.sync.android.DbxFileSystem$CreatePref: com.dropbox.sync.android.DbxFileSystem$CreatePref CREATE_NEW>;

        $r2 = <com.dropbox.sync.android.DbxFileSystem$RevPref: com.dropbox.sync.android.DbxFileSystem$RevPref PREFER_CACHED>;

        $r3 = virtualinvoke r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.DbxFile open(com.dropbox.sync.android.DbxPath,com.dropbox.sync.android.DbxFileSystem$CreatePref,com.dropbox.sync.android.DbxFileSystem$RevPref)>($r1, $r4, $r2);

        return $r3;
    }
    public void createFolder(com.dropbox.sync.android.DbxPath) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxPath $r1;
        java.lang.String $r2, $r5;
        com.dropbox.sync.android.CoreLogger $r3;
        java.lang.StringBuilder $r4;
        com.dropbox.sync.android.NativeFileSystem $r6;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPath;

        $r3 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r2 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating folder: ");

        $r5 = virtualinvoke $r1.<com.dropbox.sync.android.DbxPath: java.lang.String log()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.dropbox.sync.android.CoreLogger: void d(java.lang.String,java.lang.String)>($r2, $r5);

        $r6 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        virtualinvoke $r6.<com.dropbox.sync.android.NativeFileSystem: void createFolders(com.dropbox.sync.android.DbxPath)>($r1);

        return;
    }
    public void delete(com.dropbox.sync.android.DbxPath) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxPath $r1;
        java.lang.String $r2, $r5;
        com.dropbox.sync.android.CoreLogger $r3;
        java.lang.StringBuilder $r4;
        com.dropbox.sync.android.NativeFileSystem $r6;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPath;

        $r3 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r2 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting: ");

        $r5 = virtualinvoke $r1.<com.dropbox.sync.android.DbxPath: java.lang.String log()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.dropbox.sync.android.CoreLogger: void d(java.lang.String,java.lang.String)>($r2, $r5);

        $r6 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        virtualinvoke $r6.<com.dropbox.sync.android.NativeFileSystem: void recursiveDelete(com.dropbox.sync.android.DbxPath)>($r1);

        return;
    }
    public boolean exists(com.dropbox.sync.android.DbxPath) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxPath $r1;
        com.dropbox.sync.android.DbxFileInfo $r2;
        com.dropbox.sync.android.NativeFileSystem $r3;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPath;

        $r3 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $r2 = virtualinvoke $r3.<com.dropbox.sync.android.NativeFileSystem: com.dropbox.sync.android.DbxFileInfo getFileInfo(com.dropbox.sync.android.DbxPath)>($r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.net.URL fetchShareLink(com.dropbox.sync.android.DbxPath, boolean) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxPath $r1;
        boolean $z0;
        java.lang.String $r2, $r5;
        com.dropbox.sync.android.CoreLogger $r3;
        java.lang.StringBuilder $r4;
        com.dropbox.sync.android.NativeFileSystem $r6;
        java.net.URL $r7;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPath;

        $z0 := @parameter1: boolean;

        $r3 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r2 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fetching share link: ");

        $r5 = virtualinvoke $r1.<com.dropbox.sync.android.DbxPath: java.lang.String log()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.dropbox.sync.android.CoreLogger: void d(java.lang.String,java.lang.String)>($r2, $r5);

        $r6 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $r7 = virtualinvoke $r6.<com.dropbox.sync.android.NativeFileSystem: java.net.URL fetchShareLink(com.dropbox.sync.android.DbxPath,boolean)>($r1, $z0);

        return $r7;
    }
    protected void finalize()
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        boolean $z0;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $z0 = r0.<com.dropbox.sync.android.DbxFileSystem: boolean isOpen>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.dropbox.sync.android.DbxFileSystem: void shutDown()>();

     label1:
        return;
    }
    public com.dropbox.sync.android.DbxAccount getAccount()
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxAccount r1;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        r1 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.DbxAccount mAcct>;

        return r1;
    }
    com.dropbox.sync.android.CoreClient$Factory getFactory()
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxFileSystem$Factory r1;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        r1 = <com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.DbxFileSystem$Factory FACTORY>;

        return r1;
    }
    public long getFileCacheSize() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        long $l0;
        com.dropbox.sync.android.NativeFileSystem $r1;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $l0 = virtualinvoke $r1.<com.dropbox.sync.android.NativeFileSystem: long getFileCacheSize()>();

        return $l0;
    }
    public com.dropbox.sync.android.DbxFileInfo getFileInfo(com.dropbox.sync.android.DbxPath) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxPath $r1;
        com.dropbox.sync.android.DbxFileInfo $r2;
        com.dropbox.sync.android.NativeFileSystem $r3;
        com.dropbox.sync.android.DbxException$NotFound $r4;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPath;

        $r3 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $r2 = virtualinvoke $r3.<com.dropbox.sync.android.NativeFileSystem: com.dropbox.sync.android.DbxFileInfo getFileInfo(com.dropbox.sync.android.DbxPath)>($r1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r4 = new com.dropbox.sync.android.DbxException$NotFound;

        specialinvoke $r4.<com.dropbox.sync.android.DbxException$NotFound: void <init>(java.lang.String)>("Cannot get file info; file does not exist.");

        throw $r4;
    }
    public long getMaxFileCacheSize() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        long $l0;
        com.dropbox.sync.android.NativeFileSystem $r1;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $l0 = virtualinvoke $r1.<com.dropbox.sync.android.NativeFileSystem: long getMaxFileCacheSize()>();

        return $l0;
    }
    public com.dropbox.sync.android.DbxSyncStatus getSyncStatus() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxSyncStatus $r1;
        com.dropbox.sync.android.NativeFileSystem $r2;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r2 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $r1 = virtualinvoke $r2.<com.dropbox.sync.android.NativeFileSystem: com.dropbox.sync.android.DbxSyncStatus getSyncStatus()>();

        return $r1;
    }
    public boolean hasSynced() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        boolean $z0;
        com.dropbox.sync.android.NativeFileSystem $r1;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $z0 = virtualinvoke $r1.<com.dropbox.sync.android.NativeFileSystem: boolean hasSynced()>();

        return $z0;
    }
    public boolean isFile(com.dropbox.sync.android.DbxPath) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxPath $r1;
        com.dropbox.sync.android.DbxFileInfo $r2;
        com.dropbox.sync.android.NativeFileSystem $r3;
        boolean $z0;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPath;

        $r3 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $r2 = virtualinvoke $r3.<com.dropbox.sync.android.NativeFileSystem: com.dropbox.sync.android.DbxFileInfo getFileInfo(com.dropbox.sync.android.DbxPath)>($r1);

        if $r2 == null goto label1;

        $z0 = $r2.<com.dropbox.sync.android.DbxFileInfo: boolean isFolder>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isFolder(com.dropbox.sync.android.DbxPath) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxPath $r1;
        com.dropbox.sync.android.DbxFileInfo $r2;
        com.dropbox.sync.android.NativeFileSystem $r3;
        boolean $z0;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPath;

        $r3 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $r2 = virtualinvoke $r3.<com.dropbox.sync.android.NativeFileSystem: com.dropbox.sync.android.DbxFileInfo getFileInfo(com.dropbox.sync.android.DbxPath)>($r1);

        if $r2 == null goto label1;

        $z0 = $r2.<com.dropbox.sync.android.DbxFileInfo: boolean isFolder>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public boolean isShutDown()
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        boolean $z0;
        com.dropbox.sync.android.NativeFileSystem $r1;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $z0 = virtualinvoke $r1.<com.dropbox.sync.android.NativeFileSystem: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public java.util.List listFolder(com.dropbox.sync.android.DbxPath) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxPath $r1;
        com.dropbox.sync.android.DbxException r2;
        java.lang.String $r3;
        java.util.List $r4;
        com.dropbox.sync.android.NativeFileSystem $r5;
        com.dropbox.sync.android.CoreLogger $r6;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPath;

        $r5 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

     label1:
        virtualinvoke $r5.<com.dropbox.sync.android.NativeFileSystem: void awaitFirstSync()>();

     label2:
        $r5 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $r4 = virtualinvoke $r5.<com.dropbox.sync.android.NativeFileSystem: java.util.List listFolder(com.dropbox.sync.android.DbxPath)>($r1);

        return $r4;

     label3:
        r2 := @caughtexception;

        $r6 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r3 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        virtualinvoke $r6.<com.dropbox.sync.android.CoreLogger: void w(java.lang.String,java.lang.String)>($r3, "First sync failed.  Listing folder with cached contents.");

        goto label2;

        catch com.dropbox.sync.android.DbxException from label1 to label2 with label3;
    }
    public void move(com.dropbox.sync.android.DbxPath, com.dropbox.sync.android.DbxPath) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxPath $r1, $r2;
        java.lang.String $r3, $r6;
        com.dropbox.sync.android.CoreLogger $r4;
        java.lang.StringBuilder $r5;
        com.dropbox.sync.android.NativeFileSystem $r7;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPath;

        $r2 := @parameter1: com.dropbox.sync.android.DbxPath;

        $r4 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r3 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Moving: ");

        $r6 = virtualinvoke $r1.<com.dropbox.sync.android.DbxPath: java.lang.String log()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r6 = virtualinvoke $r2.<com.dropbox.sync.android.DbxPath: java.lang.String log()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.dropbox.sync.android.CoreLogger: void d(java.lang.String,java.lang.String)>($r3, $r6);

        $r7 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        virtualinvoke $r7.<com.dropbox.sync.android.NativeFileSystem: void recursiveMove(com.dropbox.sync.android.DbxPath,com.dropbox.sync.android.DbxPath)>($r1, $r2);

        return;
    }
    public com.dropbox.sync.android.DbxFile open(com.dropbox.sync.android.DbxPath) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxPath $r1;
        com.dropbox.sync.android.DbxFileSystem$RevPref $r2;
        com.dropbox.sync.android.DbxFile $r3;
        com.dropbox.sync.android.DbxFileSystem$CreatePref $r4;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPath;

        $r4 = <com.dropbox.sync.android.DbxFileSystem$CreatePref: com.dropbox.sync.android.DbxFileSystem$CreatePref OPEN_EXISTING>;

        $r2 = <com.dropbox.sync.android.DbxFileSystem$RevPref: com.dropbox.sync.android.DbxFileSystem$RevPref PREFER_CACHED>;

        $r3 = virtualinvoke r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.DbxFile open(com.dropbox.sync.android.DbxPath,com.dropbox.sync.android.DbxFileSystem$CreatePref,com.dropbox.sync.android.DbxFileSystem$RevPref)>($r1, $r4, $r2);

        return $r3;
    }
    com.dropbox.sync.android.DbxFile open(com.dropbox.sync.android.DbxPath, com.dropbox.sync.android.DbxFileSystem$CreatePref, com.dropbox.sync.android.DbxFileSystem$RevPref) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxPath $r1;
        com.dropbox.sync.android.DbxFileSystem$CreatePref $r2;
        com.dropbox.sync.android.DbxFileSystem$RevPref $r3;
        com.dropbox.sync.android.DbxFile $r4;
        com.dropbox.sync.android.NativeFileSystem $r5;
        int $i0;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPath;

        $r2 := @parameter1: com.dropbox.sync.android.DbxFileSystem$CreatePref;

        $r3 := @parameter2: com.dropbox.sync.android.DbxFileSystem$RevPref;

        $r4 = new com.dropbox.sync.android.DbxFile;

        $r5 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $i0 = specialinvoke r0.<com.dropbox.sync.android.DbxFileSystem: int makeFileOpenFlags(com.dropbox.sync.android.DbxFileSystem$CreatePref,com.dropbox.sync.android.DbxFileSystem$RevPref)>($r2, $r3);

        specialinvoke $r4.<com.dropbox.sync.android.DbxFile: void <init>(com.dropbox.sync.android.NativeFileSystem,com.dropbox.sync.android.DbxPath,int)>($r5, $r1, $i0);

        return $r4;
    }
    public com.dropbox.sync.android.DbxFile openThumbnail(com.dropbox.sync.android.DbxPath, com.dropbox.sync.android.DbxFileSystem$ThumbSize, com.dropbox.sync.android.DbxFileSystem$ThumbFormat) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxPath $r1;
        com.dropbox.sync.android.DbxFileSystem$ThumbSize $r2;
        com.dropbox.sync.android.DbxFileSystem$ThumbFormat $r3;
        com.dropbox.sync.android.DbxFile $r4;
        com.dropbox.sync.android.NativeFileSystem $r5;
        int $i0;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxPath;

        $r2 := @parameter1: com.dropbox.sync.android.DbxFileSystem$ThumbSize;

        $r3 := @parameter2: com.dropbox.sync.android.DbxFileSystem$ThumbFormat;

        $r4 = new com.dropbox.sync.android.DbxFile;

        $r5 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $i0 = specialinvoke r0.<com.dropbox.sync.android.DbxFileSystem: int makeThumbnailOpenFlags(com.dropbox.sync.android.DbxFileSystem$ThumbSize,com.dropbox.sync.android.DbxFileSystem$ThumbFormat)>($r2, $r3);

        specialinvoke $r4.<com.dropbox.sync.android.DbxFile: void <init>(com.dropbox.sync.android.NativeFileSystem,com.dropbox.sync.android.DbxPath,int)>($r5, $r1, $i0);

        return $r4;
    }
    public void removePathListener(com.dropbox.sync.android.DbxFileSystem$PathListener, com.dropbox.sync.android.DbxPath, com.dropbox.sync.android.DbxFileSystem$PathListener$Mode)
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxFileSystem$PathListener $r1;
        com.dropbox.sync.android.DbxPath $r2;
        com.dropbox.sync.android.DbxFileSystem$PathListener$Mode $r3;
        com.dropbox.sync.android.NativeFileSystem$PathListenerKey r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.Throwable $r6;
        boolean $z0;
        int $i0;
        java.util.Map $r7;
        java.lang.Object $r8;
        java.util.concurrent.CopyOnWriteArraySet r9;
        com.dropbox.sync.android.NativeFileSystem $r10;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxFileSystem$PathListener;

        $r2 := @parameter1: com.dropbox.sync.android.DbxPath;

        $r3 := @parameter2: com.dropbox.sync.android.DbxFileSystem$PathListener$Mode;

        entermonitor r0;

        if $r1 != null goto label03;

     label01:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener must be non-null.");

        throw $r5;

     label02:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

     label03:
        if $r2 != null goto label05;

     label04:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Path must be non-null.");

        throw $r5;

     label05:
        if $r3 != null goto label06;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Mode must be non-null.");

        throw $r5;

     label06:
        $z0 = r0.<com.dropbox.sync.android.DbxFileSystem: boolean isOpen>;

     label07:
        if $z0 != 0 goto label09;

     label08:
        exitmonitor r0;

        return;

     label09:
        r4 = new com.dropbox.sync.android.NativeFileSystem$PathListenerKey;

        $i0 = specialinvoke r0.<com.dropbox.sync.android.DbxFileSystem: int toNative(com.dropbox.sync.android.DbxFileSystem$PathListener$Mode)>($r3);

        specialinvoke r4.<com.dropbox.sync.android.NativeFileSystem$PathListenerKey: void <init>(com.dropbox.sync.android.DbxPath,int)>($r2, $i0);

        $r7 = r0.<com.dropbox.sync.android.DbxFileSystem: java.util.Map mPathListeners>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r9 = (java.util.concurrent.CopyOnWriteArraySet) $r8;

        if r9 == null goto label08;

        virtualinvoke r9.<java.util.concurrent.CopyOnWriteArraySet: boolean remove(java.lang.Object)>($r1);

        $z0 = virtualinvoke r9.<java.util.concurrent.CopyOnWriteArraySet: boolean isEmpty()>();

        if $z0 == 0 goto label08;

        $r7 = r0.<com.dropbox.sync.android.DbxFileSystem: java.util.Map mPathListeners>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r4);

        $r10 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        virtualinvoke $r10.<com.dropbox.sync.android.NativeFileSystem: void setPathListener(com.dropbox.sync.android.NativeFileSystem$PathListenerKey,com.dropbox.sync.android.NativeFileSystem$PathListener)>(r4, null);

     label10:
        goto label08;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label04 to label07 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
    }
    public void removePathListenerForAll(com.dropbox.sync.android.DbxFileSystem$PathListener)
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxFileSystem$PathListener $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;
        java.util.Map $r4;
        java.util.Set $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.util.Map$Entry r8;
        com.dropbox.sync.android.NativeFileSystem $r9;
        com.dropbox.sync.android.NativeFileSystem$PathListenerKey $r10;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxFileSystem$PathListener;

        entermonitor r0;

        if $r1 != null goto label3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener must be non-null.");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label3:
        $r4 = r0.<com.dropbox.sync.android.DbxFileSystem: java.util.Map mPathListeners>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (java.util.Set) $r7;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

        $r9 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (com.dropbox.sync.android.NativeFileSystem$PathListenerKey) $r7;

        virtualinvoke $r9.<com.dropbox.sync.android.NativeFileSystem: void setPathListener(com.dropbox.sync.android.NativeFileSystem$PathListenerKey,com.dropbox.sync.android.NativeFileSystem$PathListener)>($r10, null);

     label5:
        goto label4;

     label6:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label5 with label2;
    }
    public void removeSyncStatusListener(com.dropbox.sync.android.DbxFileSystem$SyncStatusListener)
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        com.dropbox.sync.android.DbxFileSystem$SyncStatusListener $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;
        java.util.concurrent.CopyOnWriteArraySet $r4;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r1 := @parameter0: com.dropbox.sync.android.DbxFileSystem$SyncStatusListener;

        entermonitor r0;

        if $r1 != null goto label3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener must be non-null.");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label3:
        $r4 = r0.<com.dropbox.sync.android.DbxFileSystem: java.util.concurrent.CopyOnWriteArraySet mSyncStatusListeners>;

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArraySet: boolean remove(java.lang.Object)>($r1);

     label4:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
    public void setMaxFileCacheSize(long) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        long $l0;
        byte $b1;
        com.dropbox.sync.android.DbxRuntimeException$IllegalArgument $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        com.dropbox.sync.android.NativeFileSystem $r4;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r1 = new com.dropbox.sync.android.DbxRuntimeException$IllegalArgument;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative cache size: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.dropbox.sync.android.DbxRuntimeException$IllegalArgument: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $r4 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        virtualinvoke $r4.<com.dropbox.sync.android.NativeFileSystem: void setMaxFileCacheSize(long)>($l0);

        return;
    }
    public void shutDown()
    {
        com.dropbox.sync.android.DbxFileSystem r0;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        virtualinvoke r0.<com.dropbox.sync.android.DbxFileSystem: void shutDown(boolean)>(0);

        return;
    }
    void shutDown(boolean)
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        boolean $z0, $z1;
        com.dropbox.sync.android.CoreLogger $r1;
        java.lang.String $r2, $r5;
        java.lang.StringBuilder $r3;
        com.dropbox.sync.android.DbxAccount $r4;
        com.dropbox.sync.android.NativeFileSystem $r6;
        com.dropbox.sync.android.DbxSyncService$ActivityTracker $r7;
        com.dropbox.sync.android.DbxSyncService$ActivityTracker$State $r8;
        java.util.concurrent.CopyOnWriteArraySet $r9;
        java.util.Map $r10;
        java.lang.Throwable $r11, $r12;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $z0 := @parameter0: boolean;

        entermonitor r0;

     label01:
        $z1 = r0.<com.dropbox.sync.android.DbxFileSystem: boolean isOpen>;

        if $z1 != 0 goto label03;

        exitmonitor r0;

     label02:
        return;

     label03:
        r0.<com.dropbox.sync.android.DbxFileSystem: boolean isOpen> = 0;

        $r1 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r2 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing DbxFileSystem for uid=\'");

        $r4 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.DbxAccount mAcct>;

        $r5 = virtualinvoke $r4.<com.dropbox.sync.android.DbxAccount: java.lang.String getUserId()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<com.dropbox.sync.android.CoreLogger: void i(java.lang.String,java.lang.String)>($r2, $r5);

        $r6 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        virtualinvoke $r6.<com.dropbox.sync.android.NativeFileSystem: void deinitialize(boolean)>($z0);

        $r4 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.DbxAccount mAcct>;

        virtualinvoke $r4.<com.dropbox.sync.android.DbxAccount: void onClientStopped(com.dropbox.sync.android.CoreClient)>(r0);

        exitmonitor r0;

     label04:
        $r7 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.DbxSyncService$ActivityTracker mActivityTracker>;

        $r8 = <com.dropbox.sync.android.DbxSyncService$ActivityTracker$State: com.dropbox.sync.android.DbxSyncService$ActivityTracker$State IDLE>;

        virtualinvoke $r7.<com.dropbox.sync.android.DbxSyncService$ActivityTracker: void setState(com.dropbox.sync.android.DbxSyncService$ActivityTracker$State)>($r8);

        entermonitor r0;

     label05:
        $r9 = r0.<com.dropbox.sync.android.DbxFileSystem: java.util.concurrent.CopyOnWriteArraySet mSyncStatusListeners>;

        virtualinvoke $r9.<java.util.concurrent.CopyOnWriteArraySet: void clear()>();

        $r10 = r0.<com.dropbox.sync.android.DbxFileSystem: java.util.Map mPathListeners>;

        interfaceinvoke $r10.<java.util.Map: void clear()>();

        exitmonitor r0;

     label06:
        return;

     label07:
        $r11 := @caughtexception;

        exitmonitor r0;

     label08:
        throw $r11;

     label09:
        $r12 := @caughtexception;

     label10:
        exitmonitor r0;

     label11:
        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label10 to label11 with label09;
    }
    public void syncNowAndWait() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxFileSystem r0;
        java.lang.String $r1;
        com.dropbox.sync.android.CoreLogger $r2;
        com.dropbox.sync.android.NativeFileSystem $r3;

        r0 := @this: com.dropbox.sync.android.DbxFileSystem;

        $r2 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.CoreLogger mLog>;

        $r1 = <com.dropbox.sync.android.DbxFileSystem: java.lang.String TAG>;

        virtualinvoke $r2.<com.dropbox.sync.android.CoreLogger: void d(java.lang.String,java.lang.String)>($r1, "Forcing a sync and waiting.");

        $r3 = r0.<com.dropbox.sync.android.DbxFileSystem: com.dropbox.sync.android.NativeFileSystem mNativeFileSystem>;

        virtualinvoke $r3.<com.dropbox.sync.android.NativeFileSystem: void syncNowAndWait()>();

        return;
    }
