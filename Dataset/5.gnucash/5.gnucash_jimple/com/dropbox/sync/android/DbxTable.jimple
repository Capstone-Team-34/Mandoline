com.dropbox.sync.android.DbxTable extends java.lang.Object
private final com.dropbox.sync.android.DbxDatastore mDatastore
private final java.lang.String mId
private final long mNativeHandle
    static void <clinit>()
    {
        staticinvoke <com.dropbox.sync.android.NativeLib: void ensureLoaded()>();

        return;
    }
    void <init>(com.dropbox.sync.android.DbxDatastore, java.lang.String, long)
    {
        com.dropbox.sync.android.DbxTable r0;
        com.dropbox.sync.android.DbxDatastore $r1;
        java.lang.String $r2;
        long $l0;
        java.lang.NullPointerException $r3;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 := @parameter0: com.dropbox.sync.android.DbxDatastore;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Datastore can\'t be null.");

        throw $r3;

     label1:
        r0.<com.dropbox.sync.android.DbxTable: com.dropbox.sync.android.DbxDatastore mDatastore> = $r1;

        if $r2 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("ID can\'t be null.");

        throw $r3;

     label2:
        r0.<com.dropbox.sync.android.DbxTable: java.lang.String mId> = $r2;

        r0.<com.dropbox.sync.android.DbxTable: long mNativeHandle> = $l0;

        return;
    }
    static java.lang.String checkId(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.dropbox.sync.android.DbxTable: boolean isValidId(java.lang.String)>($r0);

        if $z0 != 0 goto label1;

        staticinvoke <com.dropbox.sync.android.DbxTable: void throwIllegalTableId(java.lang.String)>($r0);

     label1:
        return $r0;
    }
    static void checkWriteId(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.dropbox.sync.android.DbxTable: boolean isReservedId(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        staticinvoke <com.dropbox.sync.android.DbxTable: void throwIllegalTableId(java.lang.String)>($r0);

     label1:
        return;
    }
    static boolean isReservedId(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>(":");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static boolean isValidId(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.NullPointerException $r1;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("ID can\'t be null.");

        throw $r1;

     label1:
        $z0 = staticinvoke <com.dropbox.sync.android.DbxTable: boolean nativeIsValidId(java.lang.String)>($r0);

        return $z0;
    }
private static native long nativeFree(long) { 
// no body
} 
private static native long nativeGet(long, java.lang.String) throws com.dropbox.sync.android.DbxException { 
// no body
} 
private static native long nativeGetOrInsert(long, java.lang.String, java.lang.String[], long[]) throws com.dropbox.sync.android.DbxException { 
// no body
} 
private static native long nativeGetOrInsertEmpty(long, java.lang.String) throws com.dropbox.sync.android.DbxException { 
// no body
} 
private static native long nativeInsert(long, java.lang.String[], long[]) { 
// no body
} 
private static native long nativeInsertEmpty(long) { 
// no body
} 
private static native boolean nativeIsValidId(java.lang.String) { 
// no body
} 
private static native long[] nativeQuery(long, java.lang.String[], long[]) throws com.dropbox.sync.android.DbxException { 
// no body
} 
private static native long[] nativeQueryAll(long) throws com.dropbox.sync.android.DbxException { 
// no body
} 
private static native long nativeSetSimplePattern(long, java.lang.String, java.lang.String) { 
// no body
} 
    static void throwIllegalTableId(java.lang.String)
    {
        java.lang.String $r0;
        com.dropbox.sync.android.DbxRuntimeException$IllegalArgument $r1;
        java.lang.StringBuilder $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.dropbox.sync.android.DbxRuntimeException$IllegalArgument;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal table ID \'");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.dropbox.sync.android.DbxRuntimeException$IllegalArgument: void <init>(java.lang.String)>($r0);

        throw $r1;
    }
    void checkBeforeWrite()
    {
        com.dropbox.sync.android.DbxTable r0;
        java.lang.String $r1;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 = r0.<com.dropbox.sync.android.DbxTable: java.lang.String mId>;

        staticinvoke <com.dropbox.sync.android.DbxTable: void checkWriteId(java.lang.String)>($r1);

        return;
    }
    void checkBeforeWrite(java.lang.String)
    {
        com.dropbox.sync.android.DbxTable r0;
        java.lang.String $r1;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.dropbox.sync.android.DbxTable: void checkBeforeWrite()>();

        staticinvoke <com.dropbox.sync.android.DbxRecord: void checkWriteId(java.lang.String)>($r1);

        return;
    }
    void checkBeforeWrite(java.lang.String, java.lang.Iterable)
    {
        com.dropbox.sync.android.DbxTable r0;
        java.lang.String $r1;
        java.lang.Iterable r2;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Iterable;

        virtualinvoke r0.<com.dropbox.sync.android.DbxTable: void checkBeforeWrite(java.lang.String)>($r1);

        staticinvoke <com.dropbox.sync.android.DbxFields: void checkWriteFieldNames(java.lang.Iterable)>(r2);

        return;
    }
    public boolean equals(java.lang.Object)
    {
        com.dropbox.sync.android.DbxTable r0, r2;
        java.lang.Object $r1;
        boolean $z0;
        com.dropbox.sync.android.DbxDatastore $r3, $r4;
        java.lang.String $r5, $r6;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.dropbox.sync.android.DbxTable;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.dropbox.sync.android.DbxTable) $r1;

        $r3 = r0.<com.dropbox.sync.android.DbxTable: com.dropbox.sync.android.DbxDatastore mDatastore>;

        $r4 = r2.<com.dropbox.sync.android.DbxTable: com.dropbox.sync.android.DbxDatastore mDatastore>;

        $z0 = virtualinvoke $r3.<com.dropbox.sync.android.DbxDatastore: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r5 = r0.<com.dropbox.sync.android.DbxTable: java.lang.String mId>;

        $r6 = r2.<com.dropbox.sync.android.DbxTable: java.lang.String mId>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label4;

     label3:
        return 0;

     label4:
        return 1;
    }
    protected void finalize() throws java.lang.Throwable
    {
        com.dropbox.sync.android.DbxTable r0;
        long $l0;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $l0 = r0.<com.dropbox.sync.android.DbxTable: long mNativeHandle>;

        staticinvoke <com.dropbox.sync.android.DbxTable: long nativeFree(long)>($l0);

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }
    public com.dropbox.sync.android.DbxRecord get(java.lang.String) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxTable r0;
        java.lang.String $r1;
        long $l0;
        byte $b1;
        com.dropbox.sync.android.DbxRecord $r2;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 := @parameter0: java.lang.String;

        $l0 = r0.<com.dropbox.sync.android.DbxTable: long mNativeHandle>;

        $r1 = staticinvoke <com.dropbox.sync.android.DbxRecord: java.lang.String checkId(java.lang.String)>($r1);

        $l0 = staticinvoke <com.dropbox.sync.android.DbxTable: long nativeGet(long,java.lang.String)>($l0, $r1);

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r2 = new com.dropbox.sync.android.DbxRecord;

        specialinvoke $r2.<com.dropbox.sync.android.DbxRecord: void <init>(com.dropbox.sync.android.DbxTable,long)>(r0, $l0);

        return $r2;

     label1:
        return null;
    }
    public com.dropbox.sync.android.DbxDatastore getDatastore()
    {
        com.dropbox.sync.android.DbxTable r0;
        com.dropbox.sync.android.DbxDatastore r1;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        r1 = r0.<com.dropbox.sync.android.DbxTable: com.dropbox.sync.android.DbxDatastore mDatastore>;

        return r1;
    }
    public java.lang.String getId()
    {
        com.dropbox.sync.android.DbxTable r0;
        java.lang.String r1;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        r1 = r0.<com.dropbox.sync.android.DbxTable: java.lang.String mId>;

        return r1;
    }
    public com.dropbox.sync.android.DbxRecord getOrInsert(java.lang.String) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxTable r0;
        java.lang.String $r1;
        com.dropbox.sync.android.DbxRecord $r2;
        long $l0;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.dropbox.sync.android.DbxTable: void checkBeforeWrite(java.lang.String)>($r1);

        $r2 = new com.dropbox.sync.android.DbxRecord;

        $l0 = r0.<com.dropbox.sync.android.DbxTable: long mNativeHandle>;

        $r1 = staticinvoke <com.dropbox.sync.android.DbxRecord: java.lang.String checkId(java.lang.String)>($r1);

        $l0 = staticinvoke <com.dropbox.sync.android.DbxTable: long nativeGetOrInsertEmpty(long,java.lang.String)>($l0, $r1);

        specialinvoke $r2.<com.dropbox.sync.android.DbxRecord: void <init>(com.dropbox.sync.android.DbxTable,long)>(r0, $l0);

        return $r2;
    }
    public com.dropbox.sync.android.DbxRecord getOrInsert(java.lang.String, com.dropbox.sync.android.DbxFields) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxTable r0;
        java.lang.String $r1;
        com.dropbox.sync.android.DbxFields $r2;
        java.util.Map $r3;
        com.dropbox.sync.android.DbxRecord $r4;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.dropbox.sync.android.DbxFields;

        $r3 = virtualinvoke $r2.<com.dropbox.sync.android.DbxFields: java.util.Map fieldMap()>();

        $r4 = virtualinvoke r0.<com.dropbox.sync.android.DbxTable: com.dropbox.sync.android.DbxRecord getOrInsert(java.lang.String,java.util.Map)>($r1, $r3);

        return $r4;
    }
    com.dropbox.sync.android.DbxRecord getOrInsert(java.lang.String, java.util.Map) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxTable r0;
        java.lang.String $r1;
        java.util.Map r2;
        java.lang.String[] r3;
        long[] r4;
        java.util.Set $r5;
        int $i0;
        com.dropbox.sync.android.DbxRecord $r6;
        long $l1;
        java.lang.Throwable $r7;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r5 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();

        virtualinvoke r0.<com.dropbox.sync.android.DbxTable: void checkBeforeWrite(java.lang.String,java.lang.Iterable)>($r1, $r5);

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        r4 = newarray (long)[$i0];

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        r3 = newarray (java.lang.String)[$i0];

     label1:
        staticinvoke <com.dropbox.sync.android.NativeValue: void fillFieldMap(java.lang.String[],long[],java.util.Map)>(r3, r4, r2);

        $r6 = new com.dropbox.sync.android.DbxRecord;

        $l1 = r0.<com.dropbox.sync.android.DbxTable: long mNativeHandle>;

        $r1 = staticinvoke <com.dropbox.sync.android.DbxRecord: java.lang.String checkId(java.lang.String)>($r1);

        $l1 = staticinvoke <com.dropbox.sync.android.DbxTable: long nativeGetOrInsert(long,java.lang.String,java.lang.String[],long[])>($l1, $r1, r3, r4);

        specialinvoke $r6.<com.dropbox.sync.android.DbxRecord: void <init>(com.dropbox.sync.android.DbxTable,long)>(r0, $l1);

     label2:
        staticinvoke <com.dropbox.sync.android.NativeValue: void freeNativeValues(long[])>(r4);

        return $r6;

     label3:
        $r7 := @caughtexception;

        staticinvoke <com.dropbox.sync.android.NativeValue: void freeNativeValues(long[])>(r4);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public int hashCode()
    {
        com.dropbox.sync.android.DbxTable r0;
        com.dropbox.sync.android.DbxDatastore $r1;
        int $i0, $i1;
        java.lang.String $r2;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 = r0.<com.dropbox.sync.android.DbxTable: com.dropbox.sync.android.DbxDatastore mDatastore>;

        $i0 = virtualinvoke $r1.<com.dropbox.sync.android.DbxDatastore: int hashCode()>();

        $i0 = $i0 + 31;

        $i0 = $i0 * 31;

        $r2 = r0.<com.dropbox.sync.android.DbxTable: java.lang.String mId>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
    public com.dropbox.sync.android.DbxRecord insert()
    {
        com.dropbox.sync.android.DbxTable r0;
        com.dropbox.sync.android.DbxRecord $r1;
        long $l0;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        virtualinvoke r0.<com.dropbox.sync.android.DbxTable: void checkBeforeWrite()>();

        $r1 = new com.dropbox.sync.android.DbxRecord;

        $l0 = r0.<com.dropbox.sync.android.DbxTable: long mNativeHandle>;

        $l0 = staticinvoke <com.dropbox.sync.android.DbxTable: long nativeInsertEmpty(long)>($l0);

        specialinvoke $r1.<com.dropbox.sync.android.DbxRecord: void <init>(com.dropbox.sync.android.DbxTable,long)>(r0, $l0);

        return $r1;
    }
    public com.dropbox.sync.android.DbxRecord insert(com.dropbox.sync.android.DbxFields)
    {
        com.dropbox.sync.android.DbxTable r0;
        com.dropbox.sync.android.DbxFields $r1;
        java.util.Map $r2;
        com.dropbox.sync.android.DbxRecord $r3;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 := @parameter0: com.dropbox.sync.android.DbxFields;

        $r2 = virtualinvoke $r1.<com.dropbox.sync.android.DbxFields: java.util.Map fieldMap()>();

        $r3 = virtualinvoke r0.<com.dropbox.sync.android.DbxTable: com.dropbox.sync.android.DbxRecord insert(java.util.Map)>($r2);

        return $r3;
    }
    com.dropbox.sync.android.DbxRecord insert(java.util.Map)
    {
        com.dropbox.sync.android.DbxTable r0;
        java.util.Map r1;
        java.lang.String[] r2;
        long[] r3;
        java.util.Set $r4;
        int $i0;
        com.dropbox.sync.android.DbxRecord $r5;
        long $l1;
        java.lang.Throwable $r6;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        r1 := @parameter0: java.util.Map;

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        virtualinvoke r0.<com.dropbox.sync.android.DbxTable: void checkBeforeWrite(java.lang.String,java.lang.Iterable)>(null, $r4);

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        r3 = newarray (long)[$i0];

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        r2 = newarray (java.lang.String)[$i0];

     label1:
        staticinvoke <com.dropbox.sync.android.NativeValue: void fillFieldMap(java.lang.String[],long[],java.util.Map)>(r2, r3, r1);

        $r5 = new com.dropbox.sync.android.DbxRecord;

        $l1 = r0.<com.dropbox.sync.android.DbxTable: long mNativeHandle>;

        $l1 = staticinvoke <com.dropbox.sync.android.DbxTable: long nativeInsert(long,java.lang.String[],long[])>($l1, r2, r3);

        specialinvoke $r5.<com.dropbox.sync.android.DbxRecord: void <init>(com.dropbox.sync.android.DbxTable,long)>(r0, $l1);

     label2:
        staticinvoke <com.dropbox.sync.android.NativeValue: void freeNativeValues(long[])>(r3);

        return $r5;

     label3:
        $r6 := @caughtexception;

        staticinvoke <com.dropbox.sync.android.NativeValue: void freeNativeValues(long[])>(r3);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
    public com.dropbox.sync.android.DbxTable$QueryResult query() throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxTable r0;
        int i0, i2;
        java.util.ArrayList r1;
        long l1;
        long[] $r2;
        com.dropbox.sync.android.DbxRecord $r3;
        com.dropbox.sync.android.DbxTable$QueryResult $r4;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        l1 = r0.<com.dropbox.sync.android.DbxTable: long mNativeHandle>;

        $r2 = staticinvoke <com.dropbox.sync.android.DbxTable: long[] nativeQueryAll(long)>(l1);

        i0 = lengthof $r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        l1 = $r2[i2];

        $r3 = new com.dropbox.sync.android.DbxRecord;

        specialinvoke $r3.<com.dropbox.sync.android.DbxRecord: void <init>(com.dropbox.sync.android.DbxTable,long)>(r0, l1);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = new com.dropbox.sync.android.DbxTable$QueryResult;

        specialinvoke $r4.<com.dropbox.sync.android.DbxTable$QueryResult: void <init>(com.dropbox.sync.android.DbxTable,java.util.List,com.dropbox.sync.android.DbxTable$1)>(r0, r1, null);

        return $r4;
    }
    public com.dropbox.sync.android.DbxTable$QueryResult query(com.dropbox.sync.android.DbxFields) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxTable r0;
        com.dropbox.sync.android.DbxFields $r1;
        java.util.Map $r2;
        boolean $z0;
        com.dropbox.sync.android.DbxTable$QueryResult $r3;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 := @parameter0: com.dropbox.sync.android.DbxFields;

        $r2 = virtualinvoke $r1.<com.dropbox.sync.android.DbxFields: java.util.Map fieldMap()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.dropbox.sync.android.DbxTable: com.dropbox.sync.android.DbxTable$QueryResult query()>();

        return $r3;

     label1:
        $r3 = virtualinvoke r0.<com.dropbox.sync.android.DbxTable: com.dropbox.sync.android.DbxTable$QueryResult query(java.util.Map)>($r2);

        return $r3;
    }
    com.dropbox.sync.android.DbxTable$QueryResult query(java.util.Map) throws com.dropbox.sync.android.DbxException
    {
        com.dropbox.sync.android.DbxTable r0;
        java.util.Map r1;
        int i0, i2;
        java.lang.String[] r2;
        java.util.ArrayList r3;
        long[] r4, $r5;
        long l1;
        com.dropbox.sync.android.DbxRecord $r6;
        com.dropbox.sync.android.DbxTable$QueryResult $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        r1 := @parameter0: java.util.Map;

        i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        r4 = newarray (long)[i0];

        i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        r2 = newarray (java.lang.String)[i0];

     label1:
        staticinvoke <com.dropbox.sync.android.NativeValue: void fillFieldMap(java.lang.String[],long[],java.util.Map)>(r2, r4, r1);

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        l1 = r0.<com.dropbox.sync.android.DbxTable: long mNativeHandle>;

        $r5 = staticinvoke <com.dropbox.sync.android.DbxTable: long[] nativeQuery(long,java.lang.String[],long[])>(l1, r2, r4);

        i0 = lengthof $r5;

     label2:
        i2 = 0;

     label3:
        if i2 >= i0 goto label6;

     label4:
        l1 = $r5[i2];

        $r6 = new com.dropbox.sync.android.DbxRecord;

        specialinvoke $r6.<com.dropbox.sync.android.DbxRecord: void <init>(com.dropbox.sync.android.DbxTable,long)>(r0, l1);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r6);

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        $r7 = new com.dropbox.sync.android.DbxTable$QueryResult;

        specialinvoke $r7.<com.dropbox.sync.android.DbxTable$QueryResult: void <init>(com.dropbox.sync.android.DbxTable,java.util.List,com.dropbox.sync.android.DbxTable$1)>(r0, r3, null);

     label7:
        staticinvoke <com.dropbox.sync.android.NativeValue: void freeNativeValues(long[])>(r4);

        return $r7;

     label8:
        $r8 := @caughtexception;

        staticinvoke <com.dropbox.sync.android.NativeValue: void freeNativeValues(long[])>(r4);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }
    public void setResolutionRule(java.lang.String, com.dropbox.sync.android.DbxTable$ResolutionRule)
    {
        com.dropbox.sync.android.DbxTable r0;
        java.lang.String $r1, $r4;
        com.dropbox.sync.android.DbxTable$ResolutionRule $r2;
        java.lang.NullPointerException $r3;
        long $l0;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.dropbox.sync.android.DbxTable$ResolutionRule;

        if $r2 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Rule name can\'t be null.");

        throw $r3;

     label1:
        $l0 = r0.<com.dropbox.sync.android.DbxTable: long mNativeHandle>;

        $r1 = staticinvoke <com.dropbox.sync.android.DbxFields: java.lang.String checkFieldName(java.lang.String)>($r1);

        $r4 = virtualinvoke $r2.<com.dropbox.sync.android.DbxTable$ResolutionRule: java.lang.String toNativeString()>();

        staticinvoke <com.dropbox.sync.android.DbxTable: long nativeSetSimplePattern(long,java.lang.String,java.lang.String)>($l0, $r1, $r4);

        return;
    }
    public java.lang.String toString()
    {
        com.dropbox.sync.android.DbxTable r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.dropbox.sync.android.DbxTable;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<DbxTable: ");

        $r2 = r0.<com.dropbox.sync.android.DbxTable: java.lang.String mId>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
