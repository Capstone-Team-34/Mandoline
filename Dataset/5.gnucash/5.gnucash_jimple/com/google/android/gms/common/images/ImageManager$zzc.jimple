com.google.android.gms.common.images.ImageManager$zzc extends java.lang.Object implements java.lang.Runnable
private final android.net.Uri mUri
final com.google.android.gms.common.images.ImageManager zzOw
private final android.os.ParcelFileDescriptor zzOx
    public void <init>(com.google.android.gms.common.images.ImageManager, android.net.Uri, android.os.ParcelFileDescriptor)
    {
        com.google.android.gms.common.images.ImageManager$zzc r0;
        com.google.android.gms.common.images.ImageManager $r1;
        android.net.Uri $r2;
        android.os.ParcelFileDescriptor $r3;

        r0 := @this: com.google.android.gms.common.images.ImageManager$zzc;

        $r1 := @parameter0: com.google.android.gms.common.images.ImageManager;

        $r2 := @parameter1: android.net.Uri;

        $r3 := @parameter2: android.os.ParcelFileDescriptor;

        r0.<com.google.android.gms.common.images.ImageManager$zzc: com.google.android.gms.common.images.ImageManager zzOw> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.gms.common.images.ImageManager$zzc: android.net.Uri mUri> = $r2;

        r0.<com.google.android.gms.common.images.ImageManager$zzc: android.os.ParcelFileDescriptor zzOx> = $r3;

        return;
    }
    public void run()
    {
        com.google.android.gms.common.images.ImageManager$zzc r0;
        boolean $z0;
        android.graphics.Bitmap $r1, $r4;
        android.os.ParcelFileDescriptor $r2;
        java.io.FileDescriptor $r3;
        java.util.concurrent.CountDownLatch $r5;
        com.google.android.gms.common.images.ImageManager $r6;
        android.os.Handler $r7;
        com.google.android.gms.common.images.ImageManager$zzf $r8;
        android.net.Uri $r9;
        java.lang.OutOfMemoryError $r10;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;
        java.io.IOException $r13;
        java.lang.InterruptedException $r14;

        r0 := @this: com.google.android.gms.common.images.ImageManager$zzc;

        staticinvoke <com.google.android.gms.common.internal.zzb: void zzbe(java.lang.String)>("LoadBitmapFromDiskRunnable can\'t be executed in the main thread");

        $z0 = 0;

        $r1 = null;

        $r2 = r0.<com.google.android.gms.common.images.ImageManager$zzc: android.os.ParcelFileDescriptor zzOx>;

        if $r2 == null goto label05;

        $r2 = r0.<com.google.android.gms.common.images.ImageManager$zzc: android.os.ParcelFileDescriptor zzOx>;

     label01:
        $r3 = virtualinvoke $r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>($r3);

     label02:
        $r1 = $r4;

     label03:
        $r2 = r0.<com.google.android.gms.common.images.ImageManager$zzc: android.os.ParcelFileDescriptor zzOx>;

     label04:
        virtualinvoke $r2.<android.os.ParcelFileDescriptor: void close()>();

     label05:
        $r5 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r5.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $r6 = r0.<com.google.android.gms.common.images.ImageManager$zzc: com.google.android.gms.common.images.ImageManager zzOw>;

        $r7 = staticinvoke <com.google.android.gms.common.images.ImageManager: android.os.Handler zzg(com.google.android.gms.common.images.ImageManager)>($r6);

        $r8 = new com.google.android.gms.common.images.ImageManager$zzf;

        $r6 = r0.<com.google.android.gms.common.images.ImageManager$zzc: com.google.android.gms.common.images.ImageManager zzOw>;

        $r9 = r0.<com.google.android.gms.common.images.ImageManager$zzc: android.net.Uri mUri>;

        specialinvoke $r8.<com.google.android.gms.common.images.ImageManager$zzf: void <init>(com.google.android.gms.common.images.ImageManager,android.net.Uri,android.graphics.Bitmap,boolean,java.util.concurrent.CountDownLatch)>($r6, $r9, $r1, $z0, $r5);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

     label06:
        virtualinvoke $r5.<java.util.concurrent.CountDownLatch: void await()>();

     label07:
        return;

     label08:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OOM while loading bitmap for uri: ");

        $r9 = r0.<com.google.android.gms.common.images.ImageManager$zzc: android.net.Uri mUri>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageManager", $r12, $r10);

        $z0 = 1;

        goto label03;

     label09:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ImageManager", "closed failed", $r13);

        goto label05;

     label10:
        $r14 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Latch interrupted while posting ");

        $r9 = r0.<com.google.android.gms.common.images.ImageManager$zzc: android.net.Uri mUri>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ImageManager", $r12);

        return;

        catch java.lang.OutOfMemoryError from label01 to label02 with label08;
        catch java.io.IOException from label04 to label05 with label09;
        catch java.lang.InterruptedException from label06 to label07 with label10;
    }
