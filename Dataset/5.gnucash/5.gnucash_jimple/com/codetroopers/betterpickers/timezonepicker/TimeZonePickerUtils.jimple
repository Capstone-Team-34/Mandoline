com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils extends java.lang.Object
public static final int DST_SYMBOL_COLOR
public static final int GMT_TEXT_COLOR
private static final java.lang.String TAG
private static final android.text.Spannable$Factory mSpannableFactory
private java.util.Locale mDefaultLocale
private java.lang.String[] mOverrideIds
private java.lang.String[] mOverrideLabels
    static void <clinit>()
    {
        android.text.Spannable$Factory $r0;

        $r0 = staticinvoke <android.text.Spannable$Factory: android.text.Spannable$Factory getInstance()>();

        <com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: android.text.Spannable$Factory mSpannableFactory> = $r0;

        return;
    }
    public void <init>(android.content.Context)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils r0;
        android.content.Context $r1;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: void cacheOverrides(android.content.Context)>($r1);

        return;
    }
    public static void appendGmtOffset(java.lang.StringBuilder, int)
    {
        java.lang.StringBuilder $r0;
        int $i0;
        long $l1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT");

        if $i0 >= 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label1:
        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $l1 = (long) $i0;

        $l1 = $l1 / 3600000L;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $i0 = $i0 / 60000;

        $i0 = $i0 % 60;

        if $i0 == 0 goto label4;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        if $i0 >= 10 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        return;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

        goto label1;

     label4:
        return;
    }
    private java.lang.CharSequence buildGmtDisplayName(java.util.TimeZone, long, boolean)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils r0;
        java.util.TimeZone $r1;
        long $l0;
        boolean $z0, $z1;
        java.lang.StringBuilder r2;
        android.text.format.Time r3;
        java.lang.String $r4;
        int $i1, $i2, i3, i4;
        char $c5;
        android.text.Spannable$Factory $r5;
        android.text.Spannable $r6;
        android.text.style.ForegroundColorSpan $r7;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils;

        $r1 := @parameter0: java.util.TimeZone;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        r3 = new android.text.format.Time;

        $r4 = virtualinvoke $r1.<java.util.TimeZone: java.lang.String getID()>();

        specialinvoke r3.<android.text.format.Time: void <init>(java.lang.String)>($r4);

        virtualinvoke r3.<android.text.format.Time: void set(long)>($l0);

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $i1 = r3.<android.text.format.Time: int isDst>;

        if $i1 == 0 goto label5;

        $z1 = 1;

     label1:
        $r4 = specialinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.lang.String getDisplayName(java.util.TimeZone,boolean)>($r1, $z1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $i2 = virtualinvoke $r1.<java.util.TimeZone: int getOffset(long)>($l0);

        $i1 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        staticinvoke <com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: void appendGmtOffset(java.lang.StringBuilder,int)>(r2, $i2);

        $i2 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        i3 = 0;

        i4 = 0;

        $z1 = virtualinvoke $r1.<java.util.TimeZone: boolean useDaylightTime()>();

        if $z1 == 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i3 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        $c5 = staticinvoke <com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: char getDstSymbol()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        i4 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

     label2:
        $r5 = <com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: android.text.Spannable$Factory mSpannableFactory>;

        $r6 = virtualinvoke $r5.<android.text.Spannable$Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label3;

        $r7 = new android.text.style.ForegroundColorSpan;

        specialinvoke $r7.<android.text.style.ForegroundColorSpan: void <init>(int)>(-7829368);

        interfaceinvoke $r6.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r7, $i1, $i2, 33);

     label3:
        $z0 = virtualinvoke $r1.<java.util.TimeZone: boolean useDaylightTime()>();

        if $z0 == 0 goto label4;

        $r7 = new android.text.style.ForegroundColorSpan;

        specialinvoke $r7.<android.text.style.ForegroundColorSpan: void <init>(int)>(-4210753);

        interfaceinvoke $r6.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r7, i3, i4, 33);

     label4:
        return $r6;

     label5:
        $z1 = 0;

        goto label1;
    }
    private void cacheOverrides(android.content.Context)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        int $i0;
        java.lang.String[] $r3;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <com.codetroopers.betterpickers.R$array: int timezone_rename_ids>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String[] getStringArray(int)>($i0);

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.lang.String[] mOverrideIds> = $r3;

        $i0 = <com.codetroopers.betterpickers.R$array: int timezone_rename_labels>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String[] getStringArray(int)>($i0);

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.lang.String[] mOverrideLabels> = $r3;

        return;
    }
    private java.lang.String getDisplayName(java.util.TimeZone, boolean)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils r0;
        java.util.TimeZone $r1;
        boolean $z0, $z1;
        java.lang.String[] $r2;
        java.util.Locale $r3;
        java.lang.String $r4, $r5;
        int i0, $i1;
        java.lang.StringBuilder $r6;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils;

        $r1 := @parameter0: java.util.TimeZone;

        $z0 := @parameter1: boolean;

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.lang.String[] mOverrideIds>;

        if $r2 == null goto label1;

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.lang.String[] mOverrideLabels>;

        if $r2 != null goto label2;

     label1:
        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke $r1.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>($z0, 1, $r3);

        return $r4;

     label2:
        i0 = 0;

     label3:
        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.lang.String[] mOverrideIds>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label5;

        $r4 = virtualinvoke $r1.<java.util.TimeZone: java.lang.String getID()>();

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.lang.String[] mOverrideIds>;

        $r5 = $r2[i0];

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label6;

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.lang.String[] mOverrideLabels>;

        $i1 = lengthof $r2;

        if $i1 <= i0 goto label4;

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.lang.String[] mOverrideLabels>;

        $r4 = $r2[i0];

        return $r4;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timezone_rename_ids len=");

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.lang.String[] mOverrideIds>;

        i0 = lengthof $r2;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" timezone_rename_labels len=");

        $r2 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.lang.String[] mOverrideLabels>;

        i0 = lengthof $r2;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TimeZonePickerUtils", $r4);

     label5:
        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke $r1.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>($z0, 1, $r3);

        return $r4;

     label6:
        i0 = i0 + 1;

        goto label3;
    }
    public static char getDstSymbol()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        return 9728;

     label1:
        return 42;
    }
    public java.lang.CharSequence getGmtDisplayName(android.content.Context, java.lang.String, long, boolean)
    {
        com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils r0;
        android.content.Context $r1;
        java.lang.String $r2;
        long $l0;
        boolean $z0, $z1;
        java.util.TimeZone $r3;
        java.util.Locale $r4, $r5;
        java.lang.CharSequence $r6;

        r0 := @this: com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $z0 := @parameter3: boolean;

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r5 = r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.util.Locale mDefaultLocale>;

        $z1 = virtualinvoke $r4.<java.util.Locale: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label2;

        r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.util.Locale mDefaultLocale> = $r4;

        specialinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: void cacheOverrides(android.content.Context)>($r1);

     label2:
        $r6 = specialinvoke r0.<com.codetroopers.betterpickers.timezonepicker.TimeZonePickerUtils: java.lang.CharSequence buildGmtDisplayName(java.util.TimeZone,long,boolean)>($r3, $l0, $z0);

        return $r6;
    }
