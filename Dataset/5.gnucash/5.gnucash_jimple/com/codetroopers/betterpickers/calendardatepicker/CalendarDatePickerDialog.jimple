com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog extends android.support.v4.app.DialogFragment implements android.view.View$OnClickListener com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController
private static final int ANIMATION_DELAY
private static final int ANIMATION_DURATION
private static final java.text.SimpleDateFormat DAY_FORMAT
private static final int DEFAULT_END_YEAR
private static final int DEFAULT_START_YEAR
private static final java.lang.String KEY_CURRENT_VIEW
private static final java.lang.String KEY_LIST_POSITION
private static final java.lang.String KEY_LIST_POSITION_OFFSET
private static final java.lang.String KEY_SELECTED_DAY
private static final java.lang.String KEY_SELECTED_MONTH
private static final java.lang.String KEY_SELECTED_YEAR
private static final java.lang.String KEY_WEEK_START
private static final java.lang.String KEY_YEAR_END
private static final java.lang.String KEY_YEAR_START
private static final int MONTH_AND_DAY_VIEW
private static final java.lang.String TAG
private static final int UNINITIALIZED
private static final java.text.SimpleDateFormat YEAR_FORMAT
private static final int YEAR_VIEW
private com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator
private final java.util.Calendar mCalendar
private com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener mCallBack
private int mCurrentView
private android.widget.TextView mDayOfWeekView
private java.lang.String mDayPickerDescription
private com.codetroopers.betterpickers.calendardatepicker.DayPickerView mDayPickerView
private boolean mDelayAnimation
private com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDialogDismissListener mDimissCallback
private android.widget.Button mDoneButton
private com.codetroopers.betterpickers.HapticFeedbackController mHapticFeedbackController
private java.util.HashSet mListeners
private int mMaxYear
private int mMinYear
private android.widget.LinearLayout mMonthAndDayView
private java.lang.String mSelectDay
private java.lang.String mSelectYear
private android.widget.TextView mSelectedDayTextView
private android.widget.TextView mSelectedMonthTextView
private int mWeekStart
private java.lang.String mYearPickerDescription
private com.codetroopers.betterpickers.calendardatepicker.YearPickerView mYearPickerView
private android.widget.TextView mYearView
    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0;
        java.util.Locale $r1;

        $r0 = new java.text.SimpleDateFormat;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy", $r1);

        <com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.text.SimpleDateFormat YEAR_FORMAT> = $r0;

        $r0 = new java.text.SimpleDateFormat;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("dd", $r1);

        <com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.text.SimpleDateFormat DAY_FORMAT> = $r0;

        return;
    }
    public void <init>()
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        java.util.Calendar $r1;
        java.util.HashSet $r2;
        int $i0;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        specialinvoke r0.<android.support.v4.app.DialogFragment: void <init>()>();

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.HashSet mListeners> = $r2;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mCurrentView> = -1;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int getFirstDayOfWeek()>();

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mWeekStart> = $i0;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mMinYear> = 1900;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mMaxYear> = 2100;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: boolean mDelayAnimation> = 1;

        return;
    }
    static com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener access$000(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog $r0;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener r1;

        $r0 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        r1 = $r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener mCallBack>;

        return r1;
    }
    static java.util.Calendar access$100(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog $r0;
        java.util.Calendar r1;

        $r0 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        r1 = $r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        return r1;
    }
    private void adjustDayInMonthIfNeeded(int, int)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        int $i0, $i1, $i2;
        java.util.Calendar $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $i2 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(5);

        $i0 = staticinvoke <com.codetroopers.betterpickers.Utils: int getDaysInMonth(int,int)>($i0, $i1);

        if $i2 <= $i0 goto label1;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(5, $i0);

     label1:
        return;
    }
    public static com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog newInstance(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener, int, int, int)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener $r0;
        int $i0, $i1, $i2;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r1;

        $r0 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        r1 = new com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        specialinvoke r1.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: void <init>()>();

        virtualinvoke r1.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: void initialize(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener,int,int,int)>($r0, $i0, $i1, $i2);

        return r1;
    }
    private void setCurrentView(int)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        int $i0, $i2;
        java.util.Calendar $r1;
        long $l1;
        android.widget.LinearLayout $r2;
        com.nineoldandroids.animation.ObjectAnimator $r3;
        boolean $z0;
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView $r4;
        android.widget.TextView $r5;
        com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator $r6;
        android.support.v4.app.FragmentActivity $r7;
        java.lang.String $r8, $r10;
        java.lang.StringBuilder $r9;
        com.codetroopers.betterpickers.calendardatepicker.YearPickerView $r11;
        java.text.SimpleDateFormat $r12;
        java.lang.Long $r13;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $i0 := @parameter0: int;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $l1 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label5;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.LinearLayout mMonthAndDayView>;

        $r3 = staticinvoke <com.codetroopers.betterpickers.Utils: com.nineoldandroids.animation.ObjectAnimator getPulseAnimator(android.view.View,float,float)>($r2, 0.9F, 1.05F);

        $z0 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: boolean mDelayAnimation>;

        if $z0 == 0 goto label3;

        virtualinvoke $r3.<com.nineoldandroids.animation.ObjectAnimator: void setStartDelay(long)>(500L);

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: boolean mDelayAnimation> = 0;

     label3:
        $r4 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.DayPickerView mDayPickerView>;

        virtualinvoke $r4.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void onDateChanged()>();

        $i2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mCurrentView>;

        if $i2 == $i0 goto label4;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.LinearLayout mMonthAndDayView>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setSelected(boolean)>(1);

        $r5 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.TextView mYearView>;

        virtualinvoke $r5.<android.widget.TextView: void setSelected(boolean)>(0);

        $r6 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r6.<com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator: void setDisplayedChild(int)>(0);

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mCurrentView> = $i0;

     label4:
        virtualinvoke $r3.<com.nineoldandroids.animation.ObjectAnimator: void start()>();

        $r7 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.support.v4.app.FragmentActivity getActivity()>();

        $r8 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r7, $l1, 16);

        $r6 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.lang.String mDayPickerDescription>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator: void setContentDescription(java.lang.CharSequence)>($r8);

        $r6 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator>;

        $r8 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.lang.String mSelectDay>;

        staticinvoke <com.codetroopers.betterpickers.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r6, $r8);

        return;

     label5:
        $r5 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.TextView mYearView>;

        $r3 = staticinvoke <com.codetroopers.betterpickers.Utils: com.nineoldandroids.animation.ObjectAnimator getPulseAnimator(android.view.View,float,float)>($r5, 0.85F, 1.1F);

        $z0 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: boolean mDelayAnimation>;

        if $z0 == 0 goto label6;

        virtualinvoke $r3.<com.nineoldandroids.animation.ObjectAnimator: void setStartDelay(long)>(500L);

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: boolean mDelayAnimation> = 0;

     label6:
        $r11 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.YearPickerView mYearPickerView>;

        virtualinvoke $r11.<com.codetroopers.betterpickers.calendardatepicker.YearPickerView: void onDateChanged()>();

        $i2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mCurrentView>;

        if $i2 == $i0 goto label7;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.LinearLayout mMonthAndDayView>;

        virtualinvoke $r2.<android.widget.LinearLayout: void setSelected(boolean)>(0);

        $r5 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.TextView mYearView>;

        virtualinvoke $r5.<android.widget.TextView: void setSelected(boolean)>(1);

        $r6 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r6.<com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator: void setDisplayedChild(int)>(1);

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mCurrentView> = $i0;

     label7:
        virtualinvoke $r3.<com.nineoldandroids.animation.ObjectAnimator: void start()>();

        $r12 = <com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.text.SimpleDateFormat YEAR_FORMAT>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r8 = virtualinvoke $r12.<java.text.SimpleDateFormat: java.lang.String format(java.lang.Object)>($r13);

        $r6 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.lang.String mYearPickerDescription>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator: void setContentDescription(java.lang.CharSequence)>($r8);

        $r6 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator>;

        $r8 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.lang.String mSelectYear>;

        staticinvoke <com.codetroopers.betterpickers.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r6, $r8);

        return;
    }
    private void updateDisplay(boolean)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        boolean $z0;
        android.widget.TextView $r1;
        java.util.Calendar $r2;
        java.util.Locale $r3;
        java.lang.String $r4;
        java.text.SimpleDateFormat $r5;
        java.util.Date $r6;
        long $l0;
        com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator $r7;
        android.support.v4.app.FragmentActivity $r8;
        android.widget.LinearLayout $r9;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $z0 := @parameter0: boolean;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.TextView mDayOfWeekView>;

        if $r1 == null goto label1;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.TextView mDayOfWeekView>;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke $r2.<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)>(7, 2, $r3);

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r4);

     label1:
        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.TextView mSelectedMonthTextView>;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke $r2.<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)>(2, 1, $r3);

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r4);

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.TextView mSelectedDayTextView>;

        $r5 = <com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.text.SimpleDateFormat DAY_FORMAT>;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $r6 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

        $r4 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r6);

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r4);

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.TextView mYearView>;

        $r5 = <com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.text.SimpleDateFormat YEAR_FORMAT>;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $r6 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

        $r4 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r6);

        virtualinvoke $r1.<android.widget.TextView: void setText(java.lang.CharSequence)>($r4);

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $l0 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        $r7 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r7.<com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator: void setDateMillis(long)>($l0);

        $r8 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.support.v4.app.FragmentActivity getActivity()>();

        $r4 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r8, $l0, 24);

        $r9 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.LinearLayout mMonthAndDayView>;

        virtualinvoke $r9.<android.widget.LinearLayout: void setContentDescription(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.support.v4.app.FragmentActivity getActivity()>();

        $r4 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r8, $l0, 20);

        $r7 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator>;

        staticinvoke <com.codetroopers.betterpickers.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r7, $r4);

     label2:
        return;
    }
    private void updatePickers()
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        java.util.HashSet $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateChangedListener $r4;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.HashSet mListeners>;

        $r2 = virtualinvoke $r1.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateChangedListener) $r3;

        interfaceinvoke $r4.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateChangedListener: void onDateChanged()>();

        goto label1;

     label2:
        return;
    }
    public int getFirstDayOfWeek()
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        int i0;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        i0 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mWeekStart>;

        return i0;
    }
    public int getMaxYear()
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        int i0;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        i0 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mMaxYear>;

        return i0;
    }
    public int getMinYear()
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        int i0;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        i0 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mMinYear>;

        return i0;
    }
    public com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay getSelectedDay()
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay $r1;
        java.util.Calendar $r2;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $r1 = new com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        specialinvoke $r1.<com.codetroopers.betterpickers.calendardatepicker.MonthAdapter$CalendarDay: void <init>(java.util.Calendar)>($r2);

        return $r1;
    }
    public void initialize(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener, int, int, int)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener $r1;
        int $i0, $i1, $i2;
        java.util.Calendar $r2;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener mCallBack> = $r1;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(1, $i0);

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(2, $i1);

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(5, $i2);

        return;
    }
    public void onClick(android.view.View)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        android.view.View $r1;
        int $i0, $i1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $r1 := @parameter0: android.view.View;

        virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: void tryVibrate()>();

        $i0 = virtualinvoke $r1.<android.view.View: int getId()>();

        $i1 = <com.codetroopers.betterpickers.R$id: int date_picker_year>;

        if $i0 != $i1 goto label1;

        specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: void setCurrentView(int)>(1);

        return;

     label1:
        $i0 = virtualinvoke $r1.<android.view.View: int getId()>();

        $i1 = <com.codetroopers.betterpickers.R$id: int date_picker_month_and_day>;

        if $i0 != $i1 goto label2;

        specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: void setCurrentView(int)>(0);

     label2:
        return;
    }
    public void onCreate(android.os.Bundle)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        android.os.Bundle $r1;
        android.support.v4.app.FragmentActivity $r2;
        android.view.Window $r3;
        java.util.Calendar $r4;
        int $i0;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.support.v4.app.DialogFragment: void onCreate(android.os.Bundle)>($r1);

        $r2 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.support.v4.app.FragmentActivity getActivity()>();

        $r3 = virtualinvoke $r2.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void setSoftInputMode(int)>(3);

        if $r1 == null goto label1;

        $r4 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("year");

        virtualinvoke $r4.<java.util.Calendar: void set(int,int)>(1, $i0);

        $r4 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("month");

        virtualinvoke $r4.<java.util.Calendar: void set(int,int)>(2, $i0);

        $r4 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("day");

        virtualinvoke $r4.<java.util.Calendar: void set(int,int)>(5, $i0);

     label1:
        return;
    }
    public android.view.View onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        android.view.LayoutInflater $r1;
        android.view.ViewGroup $r2;
        android.os.Bundle $r3;
        android.view.animation.AlphaAnimation r4;
        boolean $z0;
        android.app.Dialog $r5;
        android.view.Window $r6;
        int $i0, i1, i2, $i3;
        android.view.View $r7, $r8;
        android.widget.TextView $r9;
        android.widget.LinearLayout $r10;
        android.support.v4.app.FragmentActivity $r11;
        com.codetroopers.betterpickers.calendardatepicker.SimpleDayPickerView $r12;
        com.codetroopers.betterpickers.calendardatepicker.YearPickerView $r13;
        android.content.res.Resources $r14;
        java.lang.String $r15;
        com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator $r16;
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView $r17;
        java.util.Calendar $r18;
        long $l4;
        android.widget.Button $r19;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$1 $r20;
        com.codetroopers.betterpickers.HapticFeedbackController $r21;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $r1 := @parameter0: android.view.LayoutInflater;

        $r2 := @parameter1: android.view.ViewGroup;

        $r3 := @parameter2: android.os.Bundle;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DatePickerDialog", "onCreateView: ");

        $z0 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: boolean getShowsDialog()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.app.Dialog getDialog()>();

        $r6 = virtualinvoke $r5.<android.app.Dialog: android.view.Window getWindow()>();

        virtualinvoke $r6.<android.view.Window: boolean requestFeature(int)>(1);

     label1:
        $i0 = <com.codetroopers.betterpickers.R$layout: int calendar_date_picker_dialog>;

        $r7 = virtualinvoke $r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i0, null);

        $i0 = <com.codetroopers.betterpickers.R$id: int date_picker_header>;

        $r8 = virtualinvoke $r7.<android.view.View: android.view.View findViewById(int)>($i0);

        $r9 = (android.widget.TextView) $r8;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.TextView mDayOfWeekView> = $r9;

        $i0 = <com.codetroopers.betterpickers.R$id: int date_picker_month_and_day>;

        $r8 = virtualinvoke $r7.<android.view.View: android.view.View findViewById(int)>($i0);

        $r10 = (android.widget.LinearLayout) $r8;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.LinearLayout mMonthAndDayView> = $r10;

        $r10 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.LinearLayout mMonthAndDayView>;

        virtualinvoke $r10.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $i0 = <com.codetroopers.betterpickers.R$id: int date_picker_month>;

        $r8 = virtualinvoke $r7.<android.view.View: android.view.View findViewById(int)>($i0);

        $r9 = (android.widget.TextView) $r8;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.TextView mSelectedMonthTextView> = $r9;

        $i0 = <com.codetroopers.betterpickers.R$id: int date_picker_day>;

        $r8 = virtualinvoke $r7.<android.view.View: android.view.View findViewById(int)>($i0);

        $r9 = (android.widget.TextView) $r8;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.TextView mSelectedDayTextView> = $r9;

        $i0 = <com.codetroopers.betterpickers.R$id: int date_picker_year>;

        $r8 = virtualinvoke $r7.<android.view.View: android.view.View findViewById(int)>($i0);

        $r9 = (android.widget.TextView) $r8;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.TextView mYearView> = $r9;

        $r9 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.TextView mYearView>;

        virtualinvoke $r9.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        i1 = -1;

        i2 = 0;

        $i0 = 0;

        if $r3 == null goto label2;

        $i0 = virtualinvoke $r3.<android.os.Bundle: int getInt(java.lang.String)>("week_start");

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mWeekStart> = $i0;

        $i0 = virtualinvoke $r3.<android.os.Bundle: int getInt(java.lang.String)>("year_start");

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mMinYear> = $i0;

        $i0 = virtualinvoke $r3.<android.os.Bundle: int getInt(java.lang.String)>("year_end");

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mMaxYear> = $i0;

        $i0 = virtualinvoke $r3.<android.os.Bundle: int getInt(java.lang.String)>("current_view");

        i1 = virtualinvoke $r3.<android.os.Bundle: int getInt(java.lang.String)>("list_position");

        i2 = virtualinvoke $r3.<android.os.Bundle: int getInt(java.lang.String)>("list_position_offset");

     label2:
        $r11 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.support.v4.app.FragmentActivity getActivity()>();

        $r12 = new com.codetroopers.betterpickers.calendardatepicker.SimpleDayPickerView;

        specialinvoke $r12.<com.codetroopers.betterpickers.calendardatepicker.SimpleDayPickerView: void <init>(android.content.Context,com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController)>($r11, r0);

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.DayPickerView mDayPickerView> = $r12;

        $r13 = new com.codetroopers.betterpickers.calendardatepicker.YearPickerView;

        specialinvoke $r13.<com.codetroopers.betterpickers.calendardatepicker.YearPickerView: void <init>(android.content.Context,com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerController)>($r11, r0);

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.YearPickerView mYearPickerView> = $r13;

        $r14 = virtualinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.content.res.Resources getResources()>();

        $i3 = <com.codetroopers.betterpickers.R$string: int day_picker_description>;

        $r15 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>($i3);

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.lang.String mDayPickerDescription> = $r15;

        $i3 = <com.codetroopers.betterpickers.R$string: int select_day>;

        $r15 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>($i3);

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.lang.String mSelectDay> = $r15;

        $i3 = <com.codetroopers.betterpickers.R$string: int year_picker_description>;

        $r15 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>($i3);

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.lang.String mYearPickerDescription> = $r15;

        $i3 = <com.codetroopers.betterpickers.R$string: int select_year>;

        $r15 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>($i3);

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.lang.String mSelectYear> = $r15;

        $i3 = <com.codetroopers.betterpickers.R$id: int animator>;

        $r8 = virtualinvoke $r7.<android.view.View: android.view.View findViewById(int)>($i3);

        $r16 = (com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator) $r8;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator> = $r16;

        $r16 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator>;

        $r17 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.DayPickerView mDayPickerView>;

        virtualinvoke $r16.<com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator: void addView(android.view.View)>($r17);

        $r16 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator>;

        $r13 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.YearPickerView mYearPickerView>;

        virtualinvoke $r16.<com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator: void addView(android.view.View)>($r13);

        $r16 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator>;

        $r18 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $l4 = virtualinvoke $r18.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r16.<com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator: void setDateMillis(long)>($l4);

        r4 = new android.view.animation.AlphaAnimation;

        specialinvoke r4.<android.view.animation.AlphaAnimation: void <init>(float,float)>(0.0F, 1.0F);

        virtualinvoke r4.<android.view.animation.Animation: void setDuration(long)>(300L);

        $r16 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r16.<com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator: void setInAnimation(android.view.animation.Animation)>(r4);

        r4 = new android.view.animation.AlphaAnimation;

        specialinvoke r4.<android.view.animation.AlphaAnimation: void <init>(float,float)>(1.0F, 0.0F);

        virtualinvoke r4.<android.view.animation.Animation: void setDuration(long)>(300L);

        $r16 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r16.<com.codetroopers.betterpickers.calendardatepicker.AccessibleDateAnimator: void setOutAnimation(android.view.animation.Animation)>(r4);

        $i3 = <com.codetroopers.betterpickers.R$id: int done>;

        $r8 = virtualinvoke $r7.<android.view.View: android.view.View findViewById(int)>($i3);

        $r19 = (android.widget.Button) $r8;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.Button mDoneButton> = $r19;

        $r19 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: android.widget.Button mDoneButton>;

        $r20 = new com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$1;

        specialinvoke $r20.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$1: void <init>(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog)>(r0);

        virtualinvoke $r19.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r20);

        specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: void updateDisplay(boolean)>(0);

        specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: void setCurrentView(int)>($i0);

        if i1 == -1 goto label3;

        if $i0 != 0 goto label4;

        $r17 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.DayPickerView mDayPickerView>;

        virtualinvoke $r17.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void postSetSelection(int)>(i1);

     label3:
        $r21 = new com.codetroopers.betterpickers.HapticFeedbackController;

        specialinvoke $r21.<com.codetroopers.betterpickers.HapticFeedbackController: void <init>(android.content.Context)>($r11);

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.HapticFeedbackController mHapticFeedbackController> = $r21;

        return $r7;

     label4:
        if $i0 != 1 goto label3;

        $r13 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.YearPickerView mYearPickerView>;

        virtualinvoke $r13.<com.codetroopers.betterpickers.calendardatepicker.YearPickerView: void postSetSelectionFromTop(int,int)>(i1, i2);

        goto label3;
    }
    public void onDayOfMonthSelected(int, int, int)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        int $i0, $i1, $i2;
        java.util.Calendar $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(1, $i0);

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(2, $i1);

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(5, $i2);

        specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: void updatePickers()>();

        specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: void updateDisplay(boolean)>(1);

        return;
    }
    public void onDismiss(android.content.DialogInterface)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        android.content.DialogInterface $r1;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDialogDismissListener $r2;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $r1 := @parameter0: android.content.DialogInterface;

        specialinvoke r0.<android.support.v4.app.DialogFragment: void onDismiss(android.content.DialogInterface)>($r1);

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDialogDismissListener mDimissCallback>;

        if $r2 == null goto label1;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDialogDismissListener mDimissCallback>;

        interfaceinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDialogDismissListener: void onDialogDismiss(android.content.DialogInterface)>($r1);

     label1:
        return;
    }
    public void onPause()
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        com.codetroopers.betterpickers.HapticFeedbackController $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        specialinvoke r0.<android.support.v4.app.DialogFragment: void onPause()>();

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.HapticFeedbackController mHapticFeedbackController>;

        virtualinvoke $r1.<com.codetroopers.betterpickers.HapticFeedbackController: void stop()>();

        return;
    }
    public void onResume()
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        com.codetroopers.betterpickers.HapticFeedbackController $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        specialinvoke r0.<android.support.v4.app.DialogFragment: void onResume()>();

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.HapticFeedbackController mHapticFeedbackController>;

        virtualinvoke $r1.<com.codetroopers.betterpickers.HapticFeedbackController: void start()>();

        return;
    }
    public void onSaveInstanceState(android.os.Bundle)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        android.os.Bundle $r1;
        java.util.Calendar $r2;
        int $i0, $i1;
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView $r3;
        com.codetroopers.betterpickers.calendardatepicker.YearPickerView $r4;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.support.v4.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>($r1);

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("year", $i0);

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(2);

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("month", $i0);

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(5);

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("day", $i0);

        $i0 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mWeekStart>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("week_start", $i0);

        $i0 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mMinYear>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("year_start", $i0);

        $i0 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mMaxYear>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("year_end", $i0);

        $i0 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mCurrentView>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("current_view", $i0);

        $i0 = -1;

        $i1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mCurrentView>;

        if $i1 != 0 goto label2;

        $r3 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.DayPickerView mDayPickerView>;

        $i0 = virtualinvoke $r3.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: int getMostVisiblePosition()>();

     label1:
        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("list_position", $i0);

        return;

     label2:
        $i1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mCurrentView>;

        if $i1 != 1 goto label1;

        $r4 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.YearPickerView mYearPickerView>;

        $i0 = virtualinvoke $r4.<com.codetroopers.betterpickers.calendardatepicker.YearPickerView: int getFirstVisiblePosition()>();

        $r4 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.YearPickerView mYearPickerView>;

        $i1 = virtualinvoke $r4.<com.codetroopers.betterpickers.calendardatepicker.YearPickerView: int getFirstPositionOffset()>();

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("list_position_offset", $i1);

        goto label1;
    }
    public void onYearSelected(int)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        int $i0, $i1;
        java.util.Calendar $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $i0 := @parameter0: int;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        $i1 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(2);

        specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: void adjustDayInMonthIfNeeded(int,int)>($i1, $i0);

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(1, $i0);

        specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: void updatePickers()>();

        specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: void setCurrentView(int)>(0);

        specialinvoke r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: void updateDisplay(boolean)>(1);

        return;
    }
    public void registerOnDateChangedListener(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateChangedListener)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateChangedListener $r1;
        java.util.HashSet $r2;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateChangedListener;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.HashSet mListeners>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

        return;
    }
    public void setFirstDayOfWeek(int)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView $r2;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $i0 := @parameter0: int;

        if $i0 < 1 goto label1;

        if $i0 <= 7 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Value must be between Calendar.SUNDAY and Calendar.SATURDAY");

        throw $r1;

     label2:
        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mWeekStart> = $i0;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.DayPickerView mDayPickerView>;

        if $r2 == null goto label3;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.DayPickerView mDayPickerView>;

        virtualinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void onChange()>();

     label3:
        return;
    }
    public void setOnDateSetListener(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateSetListener mCallBack> = $r1;

        return;
    }
    public void setOnDismissListener(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDialogDismissListener)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDialogDismissListener $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDialogDismissListener;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDialogDismissListener mDimissCallback> = $r1;

        return;
    }
    public void setYearRange(int, int)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r1;
        com.codetroopers.betterpickers.calendardatepicker.DayPickerView $r2;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i1 > $i0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Year end must be larger than year start");

        throw $r1;

     label1:
        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mMinYear> = $i0;

        r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: int mMaxYear> = $i1;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.DayPickerView mDayPickerView>;

        if $r2 == null goto label2;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.calendardatepicker.DayPickerView mDayPickerView>;

        virtualinvoke $r2.<com.codetroopers.betterpickers.calendardatepicker.DayPickerView: void onChange()>();

     label2:
        return;
    }
    public void tryVibrate()
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        com.codetroopers.betterpickers.HapticFeedbackController $r1;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $r1 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: com.codetroopers.betterpickers.HapticFeedbackController mHapticFeedbackController>;

        virtualinvoke $r1.<com.codetroopers.betterpickers.HapticFeedbackController: void tryVibrate()>();

        return;
    }
    public void unregisterOnDateChangedListener(com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateChangedListener)
    {
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog r0;
        com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateChangedListener $r1;
        java.util.HashSet $r2;

        r0 := @this: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog;

        $r1 := @parameter0: com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog$OnDateChangedListener;

        $r2 = r0.<com.codetroopers.betterpickers.calendardatepicker.CalendarDatePickerDialog: java.util.HashSet mListeners>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

        return;
    }
