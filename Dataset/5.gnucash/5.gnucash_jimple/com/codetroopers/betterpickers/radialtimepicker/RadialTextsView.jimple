com.codetroopers.betterpickers.radialtimepicker.RadialTextsView extends android.view.View
private static final java.lang.String TAG
private float mAmPmCircleRadiusMultiplier
private float mAnimationRadiusMultiplier
private float mCircleRadius
private float mCircleRadiusMultiplier
com.nineoldandroids.animation.ObjectAnimator mDisappearAnimator
private boolean mDrawValuesReady
private boolean mHasInnerCircle
private float mInnerNumbersRadiusMultiplier
private float[] mInnerTextGridHeights
private float[] mInnerTextGridWidths
private float mInnerTextSize
private float mInnerTextSizeMultiplier
private java.lang.String[] mInnerTexts
private com.codetroopers.betterpickers.radialtimepicker.RadialTextsView$InvalidateUpdateListener mInvalidateUpdateListener
private boolean mIs24HourMode
private boolean mIsInitialized
private float mNumbersRadiusMultiplier
private final android.graphics.Paint mPaint
com.nineoldandroids.animation.ObjectAnimator mReappearAnimator
private float[] mTextGridHeights
private boolean mTextGridValuesDirty
private float[] mTextGridWidths
private float mTextSize
private float mTextSizeMultiplier
private java.lang.String[] mTexts
private float mTransitionEndRadiusMultiplier
private float mTransitionMidRadiusMultiplier
private android.graphics.Typeface mTypefaceLight
private android.graphics.Typeface mTypefaceRegular
private int mXCenter
private int mYCenter
    public void <init>(android.content.Context)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView r0;
        android.content.Context $r1;
        android.graphics.Paint $r2;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>($r1);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint> = $r2;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mIsInitialized> = 0;

        return;
    }
    private void calculateGridSizes(float, float, float, float, float[], float[])
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView r0;
        float $f0, $f1, $f2, f3, f4, $f5, $f6;
        float[] $r1, $r2;
        double $d0;
        android.graphics.Paint $r3;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f5 := @parameter2: float;

        $f2 := @parameter3: float;

        $r1 := @parameter4: float[];

        $r2 := @parameter5: float[];

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>(3.0);

        f3 = (float) $d0;

        f3 = f3 * $f0;

        f3 = f3 / 2.0F;

        f4 = $f0 / 2.0F;

        $r3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setTextSize(float)>($f2);

        $r3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        $f2 = virtualinvoke $r3.<android.graphics.Paint: float descent()>();

        $r3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        $f6 = virtualinvoke $r3.<android.graphics.Paint: float ascent()>();

        $f2 = $f2 + $f6;

        $f2 = $f2 / 2.0F;

        $f5 = $f5 - $f2;

        $f2 = $f5 - $f0;

        $r1[0] = $f2;

        $f2 = $f1 - $f0;

        $r2[0] = $f2;

        $f2 = $f5 - f3;

        $r1[1] = $f2;

        $f2 = $f1 - f3;

        $r2[1] = $f2;

        $f2 = $f5 - f4;

        $r1[2] = $f2;

        $f2 = $f1 - f4;

        $r2[2] = $f2;

        $r1[3] = $f5;

        $r2[3] = $f1;

        $f2 = $f5 + f4;

        $r1[4] = $f2;

        $f2 = $f1 + f4;

        $r2[4] = $f2;

        $f2 = $f5 + f3;

        $r1[5] = $f2;

        $f2 = $f1 + f3;

        $r2[5] = $f2;

        $f5 = $f5 + $f0;

        $r1[6] = $f5;

        $f0 = $f1 + $f0;

        $r2[6] = $f0;

        return;
    }
    private void drawTexts(android.graphics.Canvas, float, android.graphics.Typeface, java.lang.String[], float[], float[])
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView r0;
        android.graphics.Canvas $r1;
        float $f0, $f1;
        android.graphics.Typeface $r2;
        java.lang.String[] $r3;
        float[] $r4, $r5;
        android.graphics.Paint $r6;
        java.lang.String $r7;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView;

        $r1 := @parameter0: android.graphics.Canvas;

        $f0 := @parameter1: float;

        $r2 := @parameter2: android.graphics.Typeface;

        $r3 := @parameter3: java.lang.String[];

        $r4 := @parameter4: float[];

        $r5 := @parameter5: float[];

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r6.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r2);

        $r7 = $r3[0];

        $f0 = $r4[3];

        $f1 = $r5[0];

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, $r6);

        $r7 = $r3[1];

        $f0 = $r4[4];

        $f1 = $r5[1];

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, $r6);

        $r7 = $r3[2];

        $f0 = $r4[5];

        $f1 = $r5[2];

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, $r6);

        $r7 = $r3[3];

        $f0 = $r4[6];

        $f1 = $r5[3];

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, $r6);

        $r7 = $r3[4];

        $f0 = $r4[5];

        $f1 = $r5[4];

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, $r6);

        $r7 = $r3[5];

        $f0 = $r4[4];

        $f1 = $r5[5];

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, $r6);

        $r7 = $r3[6];

        $f0 = $r4[3];

        $f1 = $r5[6];

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, $r6);

        $r7 = $r3[7];

        $f0 = $r4[2];

        $f1 = $r5[5];

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, $r6);

        $r7 = $r3[8];

        $f0 = $r4[1];

        $f1 = $r5[4];

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, $r6);

        $r7 = $r3[9];

        $f0 = $r4[0];

        $f1 = $r5[3];

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, $r6);

        $r7 = $r3[10];

        $f0 = $r4[1];

        $f1 = $r5[2];

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, $r6);

        $r7 = $r3[11];

        $f0 = $r4[2];

        $f1 = $r5[1];

        $r6 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r7, $f0, $f1, $r6);

        return;
    }
    private void renderAnimations()
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView r0;
        float f0, $f1, $f2;
        int i0;
        com.nineoldandroids.animation.Keyframe $r1, $r2, $r3, $r11;
        com.nineoldandroids.animation.Keyframe[] $r4;
        com.nineoldandroids.animation.PropertyValuesHolder $r5, $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.nineoldandroids.animation.PropertyValuesHolder[] $r8;
        com.nineoldandroids.animation.ObjectAnimator $r9;
        long $l1;
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView$InvalidateUpdateListener $r10;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView;

        $r1 = staticinvoke <com.nineoldandroids.animation.Keyframe: com.nineoldandroids.animation.Keyframe ofFloat(float,float)>(0.0F, 1.0F);

        f0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mTransitionMidRadiusMultiplier>;

        $r2 = staticinvoke <com.nineoldandroids.animation.Keyframe: com.nineoldandroids.animation.Keyframe ofFloat(float,float)>(0.2F, f0);

        f0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mTransitionEndRadiusMultiplier>;

        $r3 = staticinvoke <com.nineoldandroids.animation.Keyframe: com.nineoldandroids.animation.Keyframe ofFloat(float,float)>(1.0F, f0);

        $r4 = newarray (com.nineoldandroids.animation.Keyframe)[3];

        $r4[0] = $r1;

        $r4[1] = $r2;

        $r4[2] = $r3;

        $r5 = staticinvoke <com.nineoldandroids.animation.PropertyValuesHolder: com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.nineoldandroids.animation.Keyframe[])>("animationRadiusMultiplier", $r4);

        $r1 = staticinvoke <com.nineoldandroids.animation.Keyframe: com.nineoldandroids.animation.Keyframe ofFloat(float,float)>(0.0F, 1.0F);

        $r2 = staticinvoke <com.nineoldandroids.animation.Keyframe: com.nineoldandroids.animation.Keyframe ofFloat(float,float)>(1.0F, 0.0F);

        $r4 = newarray (com.nineoldandroids.animation.Keyframe)[2];

        $r4[0] = $r1;

        $r4[1] = $r2;

        $r6 = staticinvoke <com.nineoldandroids.animation.PropertyValuesHolder: com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.nineoldandroids.animation.Keyframe[])>("alpha", $r4);

        $z0 = <com.nineoldandroids.view.animation.AnimatorProxy: boolean NEEDS_PROXY>;

        if $z0 == 0 goto label3;

        $r7 = staticinvoke <com.nineoldandroids.view.animation.AnimatorProxy: com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>(r0);

     label1:
        $r8 = newarray (com.nineoldandroids.animation.PropertyValuesHolder)[2];

        $r8[0] = $r5;

        $r8[1] = $r6;

        $r9 = staticinvoke <com.nineoldandroids.animation.ObjectAnimator: com.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.nineoldandroids.animation.PropertyValuesHolder[])>($r7, $r8);

        $l1 = (long) 500;

        $r9 = virtualinvoke $r9.<com.nineoldandroids.animation.ObjectAnimator: com.nineoldandroids.animation.ObjectAnimator setDuration(long)>($l1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.nineoldandroids.animation.ObjectAnimator mDisappearAnimator> = $r9;

        $r9 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.nineoldandroids.animation.ObjectAnimator mDisappearAnimator>;

        $r10 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView$InvalidateUpdateListener mInvalidateUpdateListener>;

        virtualinvoke $r9.<com.nineoldandroids.animation.ObjectAnimator: void addUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener)>($r10);

        f0 = 1.0F + 0.25F;

        f0 = 500.0F * f0;

        i0 = (int) f0;

        f0 = 500.0F * 0.25F;

        $f1 = (float) i0;

        f0 = f0 / $f1;

        $f1 = 1.0F - f0;

        $f1 = $f1 * 0.2F;

        $f1 = 1.0F - $f1;

        $f2 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mTransitionEndRadiusMultiplier>;

        $r1 = staticinvoke <com.nineoldandroids.animation.Keyframe: com.nineoldandroids.animation.Keyframe ofFloat(float,float)>(0.0F, $f2);

        $f2 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mTransitionEndRadiusMultiplier>;

        $r2 = staticinvoke <com.nineoldandroids.animation.Keyframe: com.nineoldandroids.animation.Keyframe ofFloat(float,float)>(f0, $f2);

        $f2 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mTransitionMidRadiusMultiplier>;

        $r3 = staticinvoke <com.nineoldandroids.animation.Keyframe: com.nineoldandroids.animation.Keyframe ofFloat(float,float)>($f1, $f2);

        $r11 = staticinvoke <com.nineoldandroids.animation.Keyframe: com.nineoldandroids.animation.Keyframe ofFloat(float,float)>(1.0F, 1.0F);

        $r4 = newarray (com.nineoldandroids.animation.Keyframe)[4];

        $r4[0] = $r1;

        $r4[1] = $r2;

        $r4[2] = $r3;

        $r4[3] = $r11;

        $r5 = staticinvoke <com.nineoldandroids.animation.PropertyValuesHolder: com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.nineoldandroids.animation.Keyframe[])>("animationRadiusMultiplier", $r4);

        $r1 = staticinvoke <com.nineoldandroids.animation.Keyframe: com.nineoldandroids.animation.Keyframe ofFloat(float,float)>(0.0F, 0.0F);

        $r2 = staticinvoke <com.nineoldandroids.animation.Keyframe: com.nineoldandroids.animation.Keyframe ofFloat(float,float)>(f0, 0.0F);

        $r3 = staticinvoke <com.nineoldandroids.animation.Keyframe: com.nineoldandroids.animation.Keyframe ofFloat(float,float)>(1.0F, 1.0F);

        $r4 = newarray (com.nineoldandroids.animation.Keyframe)[3];

        $r4[0] = $r1;

        $r4[1] = $r2;

        $r4[2] = $r3;

        $r6 = staticinvoke <com.nineoldandroids.animation.PropertyValuesHolder: com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.nineoldandroids.animation.Keyframe[])>("alpha", $r4);

        $z0 = <com.nineoldandroids.view.animation.AnimatorProxy: boolean NEEDS_PROXY>;

        if $z0 == 0 goto label4;

        $r7 = staticinvoke <com.nineoldandroids.view.animation.AnimatorProxy: com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>(r0);

     label2:
        $r8 = newarray (com.nineoldandroids.animation.PropertyValuesHolder)[2];

        $r8[0] = $r5;

        $r8[1] = $r6;

        $r9 = staticinvoke <com.nineoldandroids.animation.ObjectAnimator: com.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.nineoldandroids.animation.PropertyValuesHolder[])>($r7, $r8);

        $l1 = (long) i0;

        $r9 = virtualinvoke $r9.<com.nineoldandroids.animation.ObjectAnimator: com.nineoldandroids.animation.ObjectAnimator setDuration(long)>($l1);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.nineoldandroids.animation.ObjectAnimator mReappearAnimator> = $r9;

        $r9 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.nineoldandroids.animation.ObjectAnimator mReappearAnimator>;

        $r10 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView$InvalidateUpdateListener mInvalidateUpdateListener>;

        virtualinvoke $r9.<com.nineoldandroids.animation.ObjectAnimator: void addUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener)>($r10);

        return;

     label3:
        $r7 = r0;

        goto label1;

     label4:
        $r7 = r0;

        goto label2;
    }
    public com.nineoldandroids.animation.ObjectAnimator getDisappearAnimator()
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView r0;
        boolean $z0;
        com.nineoldandroids.animation.ObjectAnimator $r1;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mIsInitialized>;

        if $z0 == 0 goto label1;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mDrawValuesReady>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.nineoldandroids.animation.ObjectAnimator mDisappearAnimator>;

        if $r1 != null goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RadialTextsView", "RadialTextView was not ready for animation.");

        return null;

     label2:
        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.nineoldandroids.animation.ObjectAnimator mDisappearAnimator>;

        return $r1;
    }
    public com.nineoldandroids.animation.ObjectAnimator getReappearAnimator()
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView r0;
        boolean $z0;
        com.nineoldandroids.animation.ObjectAnimator $r1;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mIsInitialized>;

        if $z0 == 0 goto label1;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mDrawValuesReady>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.nineoldandroids.animation.ObjectAnimator mReappearAnimator>;

        if $r1 != null goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RadialTextsView", "RadialTextView was not ready for animation.");

        return null;

     label2:
        $r1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.nineoldandroids.animation.ObjectAnimator mReappearAnimator>;

        return $r1;
    }
    public boolean hasOverlappingRendering()
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView r0;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView;

        return 0;
    }
    public void initialize(android.content.res.Resources, java.lang.String[], java.lang.String[], boolean, boolean)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView r0;
        android.content.res.Resources $r1;
        java.lang.String[] $r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        android.graphics.Paint$Align $r4;
        byte $b0, $b2;
        int $i1;
        android.graphics.Paint $r5;
        java.lang.String $r6;
        android.graphics.Typeface $r7;
        float $f0;
        float[] $r8;
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView$InvalidateUpdateListener $r9;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String[];

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        $b0 = -1;

        $z2 = 0;

        $z3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mIsInitialized>;

        if $z3 == 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RadialTextsView", "This RadialTextsView may only be initialized once.");

        return;

     label1:
        $i1 = <com.codetroopers.betterpickers.R$color: int numbers_text_color>;

        $i1 = virtualinvoke $r1.<android.content.res.Resources: int getColor(int)>($i1);

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i1);

        $i1 = <com.codetroopers.betterpickers.R$string: int radial_numbers_typeface>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $r7 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>($r6, 0);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Typeface mTypefaceLight> = $r7;

        $i1 = <com.codetroopers.betterpickers.R$string: int sans_serif>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $r7 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>($r6, 0);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Typeface mTypefaceRegular> = $r7;

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        $r4 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r5.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r4);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: java.lang.String[] mTexts> = $r2;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: java.lang.String[] mInnerTexts> = $r3;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mIs24HourMode> = $z0;

        if $r3 == null goto label2;

        $z2 = 1;

     label2:
        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mHasInnerCircle> = $z2;

        if $z0 == 0 goto label7;

        $i1 = <com.codetroopers.betterpickers.R$string: int circle_radius_multiplier_24HourMode>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mCircleRadiusMultiplier> = $f0;

     label3:
        $r8 = newarray (float)[7];

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float[] mTextGridHeights> = $r8;

        $r8 = newarray (float)[7];

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float[] mTextGridWidths> = $r8;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mHasInnerCircle>;

        if $z0 == 0 goto label8;

        $i1 = <com.codetroopers.betterpickers.R$string: int numbers_radius_multiplier_outer>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mNumbersRadiusMultiplier> = $f0;

        $i1 = <com.codetroopers.betterpickers.R$string: int text_size_multiplier_outer>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mTextSizeMultiplier> = $f0;

        $i1 = <com.codetroopers.betterpickers.R$string: int numbers_radius_multiplier_inner>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mInnerNumbersRadiusMultiplier> = $f0;

        $i1 = <com.codetroopers.betterpickers.R$string: int text_size_multiplier_inner>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mInnerTextSizeMultiplier> = $f0;

        $r8 = newarray (float)[7];

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float[] mInnerTextGridHeights> = $r8;

        $r8 = newarray (float)[7];

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float[] mInnerTextGridWidths> = $r8;

     label4:
        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mAnimationRadiusMultiplier> = 1.0F;

        if $z1 == 0 goto label9;

        $b2 = -1;

     label5:
        $f0 = (float) $b2;

        $f0 = $f0 * 0.05F;

        $f0 = $f0 + 1.0F;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mTransitionMidRadiusMultiplier> = $f0;

        if $z1 == 0 goto label6;

        $b0 = 1;

     label6:
        $f0 = (float) $b0;

        $f0 = 0.3F * $f0;

        $f0 = $f0 + 1.0F;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mTransitionEndRadiusMultiplier> = $f0;

        $r9 = new com.codetroopers.betterpickers.radialtimepicker.RadialTextsView$InvalidateUpdateListener;

        specialinvoke $r9.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView$InvalidateUpdateListener: void <init>(com.codetroopers.betterpickers.radialtimepicker.RadialTextsView,com.codetroopers.betterpickers.radialtimepicker.RadialTextsView$1)>(r0, null);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView$InvalidateUpdateListener mInvalidateUpdateListener> = $r9;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mTextGridValuesDirty> = 1;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mIsInitialized> = 1;

        return;

     label7:
        $i1 = <com.codetroopers.betterpickers.R$string: int circle_radius_multiplier>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mCircleRadiusMultiplier> = $f0;

        $i1 = <com.codetroopers.betterpickers.R$string: int ampm_circle_radius_multiplier>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mAmPmCircleRadiusMultiplier> = $f0;

        goto label3;

     label8:
        $i1 = <com.codetroopers.betterpickers.R$string: int numbers_radius_multiplier_normal>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mNumbersRadiusMultiplier> = $f0;

        $i1 = <com.codetroopers.betterpickers.R$string: int text_size_multiplier_normal>;

        $r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mTextSizeMultiplier> = $f0;

        goto label4;

     label9:
        $b2 = 1;

        goto label5;
    }
    public void onDraw(android.graphics.Canvas)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView r0;
        android.graphics.Canvas $r1;
        float f0, f1, f2, $f3;
        int $i0, $i1;
        boolean $z0;
        float[] $r2, $r3;
        android.graphics.Typeface $r4;
        java.lang.String[] $r5;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: int getWidth()>();

        if $i0 == 0 goto label7;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mIsInitialized>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mDrawValuesReady>;

        if $z0 != 0 goto label4;

        $i0 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: int getWidth()>();

        $i0 = $i0 / 2;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: int mXCenter> = $i0;

        $i0 = virtualinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: int getHeight()>();

        $i0 = $i0 / 2;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: int mYCenter> = $i0;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: int mXCenter>;

        $i1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: int mYCenter>;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        f0 = (float) $i0;

        f1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mCircleRadiusMultiplier>;

        f0 = f0 * f1;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mCircleRadius> = f0;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mIs24HourMode>;

        if $z0 != 0 goto label2;

        f0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mCircleRadius>;

        f1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mAmPmCircleRadiusMultiplier>;

        f1 = f0 * f1;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: int mYCenter>;

        f0 = (float) $i0;

        f1 = f1 / 2.0F;

        f0 = f0 - f1;

        $i0 = (int) f0;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: int mYCenter> = $i0;

     label2:
        f0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mCircleRadius>;

        f1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mTextSizeMultiplier>;

        f0 = f0 * f1;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mTextSize> = f0;

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mHasInnerCircle>;

        if $z0 == 0 goto label3;

        f0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mCircleRadius>;

        f1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mInnerTextSizeMultiplier>;

        f0 = f0 * f1;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mInnerTextSize> = f0;

     label3:
        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: void renderAnimations()>();

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mTextGridValuesDirty> = 1;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mDrawValuesReady> = 1;

     label4:
        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mTextGridValuesDirty>;

        if $z0 == 0 goto label6;

        f0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mCircleRadius>;

        f1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mNumbersRadiusMultiplier>;

        f0 = f0 * f1;

        f1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mAnimationRadiusMultiplier>;

        f0 = f0 * f1;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: int mXCenter>;

        f1 = (float) $i0;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: int mYCenter>;

        f2 = (float) $i0;

        $f3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mTextSize>;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float[] mTextGridHeights>;

        $r3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float[] mTextGridWidths>;

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: void calculateGridSizes(float,float,float,float,float[],float[])>(f0, f1, f2, $f3, $r2, $r3);

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mHasInnerCircle>;

        if $z0 == 0 goto label5;

        f0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mCircleRadius>;

        f1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mInnerNumbersRadiusMultiplier>;

        f0 = f0 * f1;

        f1 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mAnimationRadiusMultiplier>;

        f0 = f0 * f1;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: int mXCenter>;

        f1 = (float) $i0;

        $i0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: int mYCenter>;

        f2 = (float) $i0;

        $f3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mInnerTextSize>;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float[] mInnerTextGridHeights>;

        $r3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float[] mInnerTextGridWidths>;

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: void calculateGridSizes(float,float,float,float,float[],float[])>(f0, f1, f2, $f3, $r2, $r3);

     label5:
        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mTextGridValuesDirty> = 0;

     label6:
        f0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mTextSize>;

        $r4 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Typeface mTypefaceLight>;

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: java.lang.String[] mTexts>;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float[] mTextGridWidths>;

        $r3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float[] mTextGridHeights>;

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: void drawTexts(android.graphics.Canvas,float,android.graphics.Typeface,java.lang.String[],float[],float[])>($r1, f0, $r4, $r5, $r2, $r3);

        $z0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mHasInnerCircle>;

        if $z0 == 0 goto label7;

        f0 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mInnerTextSize>;

        $r4 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Typeface mTypefaceRegular>;

        $r5 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: java.lang.String[] mInnerTexts>;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float[] mInnerTextGridWidths>;

        $r3 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float[] mInnerTextGridHeights>;

        specialinvoke r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: void drawTexts(android.graphics.Canvas,float,android.graphics.Typeface,java.lang.String[],float[],float[])>($r1, f0, $r4, $r5, $r2, $r3);

     label7:
        return;
    }
    public void setAnimationRadiusMultiplier(float)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView r0;
        float $f0;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView;

        $f0 := @parameter0: float;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: float mAnimationRadiusMultiplier> = $f0;

        r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: boolean mTextGridValuesDirty> = 1;

        return;
    }
    void setTheme(android.content.res.TypedArray)
    {
        com.codetroopers.betterpickers.radialtimepicker.RadialTextsView r0;
        android.content.res.TypedArray $r1;
        android.graphics.Paint $r2;
        int $i0, $i1;

        r0 := @this: com.codetroopers.betterpickers.radialtimepicker.RadialTextsView;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 = r0.<com.codetroopers.betterpickers.radialtimepicker.RadialTextsView: android.graphics.Paint mPaint>;

        $i1 = <com.codetroopers.betterpickers.R$styleable: int BetterPickersRadialTimePickerDialog_bpMainTextColor>;

        $i0 = <com.codetroopers.betterpickers.R$color: int numbers_text_color>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getColor(int,int)>($i1, $i0);

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i0);

        return;
    }
