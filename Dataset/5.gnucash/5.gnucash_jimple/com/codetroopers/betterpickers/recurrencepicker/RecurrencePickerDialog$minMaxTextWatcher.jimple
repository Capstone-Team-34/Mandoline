com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher extends java.lang.Object implements android.text.TextWatcher
private int mDefault
private int mMax
private int mMin
final com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog this$0
    public void <init>(com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog, int, int, int)
    {
        com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher r0;
        com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher;

        $r1 := @parameter0: com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        r0.<com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mMin> = $i0;

        r0.<com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mMax> = $i2;

        r0.<com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mDefault> = $i1;

        return;
    }
    public void afterTextChanged(android.text.Editable)
    {
        com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher r0;
        android.text.Editable $r1;
        java.lang.NumberFormatException r2;
        boolean z0;
        java.lang.String $r3;
        int $i0, $i1;
        com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog $r4;

        r0 := @this: com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher;

        $r1 := @parameter0: android.text.Editable;

        z0 = 0;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label2:
        $i1 = r0.<com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mMin>;

        if $i0 >= $i1 goto label6;

        $i0 = r0.<com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mMin>;

        z0 = 1;

     label3:
        if z0 == 0 goto label4;

        interfaceinvoke $r1.<android.text.Editable: void clear()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke $r1.<android.text.Editable: android.text.Editable append(java.lang.CharSequence)>($r3);

     label4:
        $r4 = r0.<com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog this$0>;

        staticinvoke <com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog: void access$100(com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog)>($r4);

        virtualinvoke r0.<com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: void onChange(int)>($i0);

        return;

     label5:
        r2 := @caughtexception;

        $i0 = r0.<com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mDefault>;

        goto label2;

     label6:
        $i1 = r0.<com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mMax>;

        if $i0 <= $i1 goto label3;

        z0 = 1;

        $i0 = r0.<com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mMax>;

        goto label3;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
    }
    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        return;
    }
    void onChange(int)
    {
        com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher r0;
        int $i0;

        r0 := @this: com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher;

        $i0 := @parameter0: int;

        return;
    }
    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.codetroopers.betterpickers.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        return;
    }
