com.codetroopers.betterpickers.recurrencepicker.EventRecurrence$PartParser extends java.lang.Object
    void <init>()
    {
        com.codetroopers.betterpickers.recurrencepicker.EventRecurrence$PartParser r0;

        r0 := @this: com.codetroopers.betterpickers.recurrencepicker.EventRecurrence$PartParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static int parseIntRange(java.lang.String, int, int, boolean)
    {
        int $i0, $i1, $i3;
        boolean $z0;
        java.lang.NumberFormatException r0;
        java.lang.String $r1, $r2;
        char $c2;
        com.codetroopers.betterpickers.recurrencepicker.EventRecurrence$InvalidFormatException $r3;
        java.lang.StringBuilder $r4;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

     label01:
        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

     label02:
        if $c2 != 43 goto label05;

     label03:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

     label04:
        $r1 = $r2;

     label05:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label06:
        if $i3 < $i0 goto label07;

        if $i3 > $i1 goto label07;

        if $i3 != 0 goto label11;

        if $z0 != 0 goto label11;

     label07:
        $r3 = new com.codetroopers.betterpickers.recurrencepicker.EventRecurrence$InvalidFormatException;

        $r4 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Integer value out of range: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence$InvalidFormatException: void <init>(java.lang.String)>($r2);

     label09:
        throw $r3;

     label10:
        r0 := @caughtexception;

        $r3 = new com.codetroopers.betterpickers.recurrencepicker.EventRecurrence$InvalidFormatException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid integer value: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.codetroopers.betterpickers.recurrencepicker.EventRecurrence$InvalidFormatException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label11:
        return $i3;

        catch java.lang.NumberFormatException from label01 to label02 with label10;
        catch java.lang.NumberFormatException from label03 to label04 with label10;
        catch java.lang.NumberFormatException from label05 to label06 with label10;
        catch java.lang.NumberFormatException from label08 to label09 with label10;
    }
    public static int[] parseNumberList(java.lang.String, int, int, boolean)
    {
        java.lang.String $r0;
        int $i0, $i1, i2, i3, $i4;
        boolean $z0;
        int[] r1;
        java.lang.String[] $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        i2 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(",");

        if i2 >= 0 goto label1;

        r1 = newarray (int)[1];

        $i0 = staticinvoke <com.codetroopers.betterpickers.recurrencepicker.EventRecurrence$PartParser: int parseIntRange(java.lang.String,int,int,boolean)>($r0, $i0, $i1, $z0);

        r1[0] = $i0;

        return r1;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i2 = lengthof $r2;

        r1 = newarray (int)[i2];

        i3 = 0;

     label2:
        if i3 >= i2 goto label3;

        $r0 = $r2[i3];

        $i4 = staticinvoke <com.codetroopers.betterpickers.recurrencepicker.EventRecurrence$PartParser: int parseIntRange(java.lang.String,int,int,boolean)>($r0, $i0, $i1, $z0);

        r1[i3] = $i4;

        i3 = i3 + 1;

        goto label2;

     label3:
        return r1;
    }
public abstract int parsePart(java.lang.String, com.codetroopers.betterpickers.recurrencepicker.EventRecurrence) { 
// no body
} 
