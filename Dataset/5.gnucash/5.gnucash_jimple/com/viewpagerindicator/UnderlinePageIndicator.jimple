com.viewpagerindicator.UnderlinePageIndicator extends android.view.View implements com.viewpagerindicator.PageIndicator
private static final int FADE_FRAME_MS
private static final int INVALID_POINTER
private int mActivePointerId
private int mCurrentPage
private int mFadeBy
private int mFadeDelay
private int mFadeLength
private final java.lang.Runnable mFadeRunnable
private boolean mFades
private boolean mIsDragging
private float mLastMotionX
private android.support.v4.view.ViewPager$OnPageChangeListener mListener
private final android.graphics.Paint mPaint
private float mPositionOffset
private int mScrollState
private int mTouchSlop
private android.support.v4.view.ViewPager mViewPager
    public void <init>(android.content.Context)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        android.content.Context $r1;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <com.viewpagerindicator.R$attr: int vpiUnderlinePageIndicatorStyle>;

        specialinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.Paint $r3;
        com.viewpagerindicator.UnderlinePageIndicator$1 $r4;
        boolean $z0;
        android.content.res.Resources $r5;
        int[] $r6;
        android.content.res.TypedArray $r7;
        android.graphics.drawable.Drawable $r8;
        android.view.ViewConfiguration $r9;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.viewpagerindicator.UnderlinePageIndicator: android.graphics.Paint mPaint> = $r3;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: float mLastMotionX> = -1.0F;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mActivePointerId> = -1;

        $r4 = new com.viewpagerindicator.UnderlinePageIndicator$1;

        specialinvoke $r4.<com.viewpagerindicator.UnderlinePageIndicator$1: void <init>(com.viewpagerindicator.UnderlinePageIndicator)>(r0);

        r0.<com.viewpagerindicator.UnderlinePageIndicator: java.lang.Runnable mFadeRunnable> = $r4;

        $z0 = virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean isInEditMode()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: android.content.res.Resources getResources()>();

        $i1 = <com.viewpagerindicator.R$bool: int default_underline_indicator_fades>;

        $z0 = virtualinvoke $r5.<android.content.res.Resources: boolean getBoolean(int)>($i1);

        $i1 = <com.viewpagerindicator.R$integer: int default_underline_indicator_fade_delay>;

        $i1 = virtualinvoke $r5.<android.content.res.Resources: int getInteger(int)>($i1);

        $i2 = <com.viewpagerindicator.R$integer: int default_underline_indicator_fade_length>;

        $i2 = virtualinvoke $r5.<android.content.res.Resources: int getInteger(int)>($i2);

        $i3 = <com.viewpagerindicator.R$color: int default_underline_indicator_selected_color>;

        $i3 = virtualinvoke $r5.<android.content.res.Resources: int getColor(int)>($i3);

        $r6 = <com.viewpagerindicator.R$styleable: int[] UnderlinePageIndicator>;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r6, $i0, 0);

        $z0 = virtualinvoke $r7.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, $z0);

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void setFades(boolean)>($z0);

        $i0 = virtualinvoke $r7.<android.content.res.TypedArray: int getColor(int,int)>(1, $i3);

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void setSelectedColor(int)>($i0);

        $i0 = virtualinvoke $r7.<android.content.res.TypedArray: int getInteger(int,int)>(3, $i1);

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void setFadeDelay(int)>($i0);

        $i0 = virtualinvoke $r7.<android.content.res.TypedArray: int getInteger(int,int)>(4, $i2);

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void setFadeLength(int)>($i0);

        $r8 = virtualinvoke $r7.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        if $r8 == null goto label2;

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r8);

     label2:
        virtualinvoke $r7.<android.content.res.TypedArray: void recycle()>();

        $r9 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i0 = staticinvoke <android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>($r9);

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mTouchSlop> = $i0;

        return;
    }
    static boolean access$000(com.viewpagerindicator.UnderlinePageIndicator)
    {
        com.viewpagerindicator.UnderlinePageIndicator $r0;
        boolean z0;

        $r0 := @parameter0: com.viewpagerindicator.UnderlinePageIndicator;

        z0 = $r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean mFades>;

        return z0;
    }
    static android.graphics.Paint access$100(com.viewpagerindicator.UnderlinePageIndicator)
    {
        com.viewpagerindicator.UnderlinePageIndicator $r0;
        android.graphics.Paint r1;

        $r0 := @parameter0: com.viewpagerindicator.UnderlinePageIndicator;

        r1 = $r0.<com.viewpagerindicator.UnderlinePageIndicator: android.graphics.Paint mPaint>;

        return r1;
    }
    static int access$200(com.viewpagerindicator.UnderlinePageIndicator)
    {
        com.viewpagerindicator.UnderlinePageIndicator $r0;
        int i0;

        $r0 := @parameter0: com.viewpagerindicator.UnderlinePageIndicator;

        i0 = $r0.<com.viewpagerindicator.UnderlinePageIndicator: int mFadeBy>;

        return i0;
    }
    static java.lang.Runnable access$300(com.viewpagerindicator.UnderlinePageIndicator)
    {
        com.viewpagerindicator.UnderlinePageIndicator $r0;
        java.lang.Runnable r1;

        $r0 := @parameter0: com.viewpagerindicator.UnderlinePageIndicator;

        r1 = $r0.<com.viewpagerindicator.UnderlinePageIndicator: java.lang.Runnable mFadeRunnable>;

        return r1;
    }
    public int getFadeDelay()
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        int i0;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        i0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mFadeDelay>;

        return i0;
    }
    public int getFadeLength()
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        int i0;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        i0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mFadeLength>;

        return i0;
    }
    public boolean getFades()
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        boolean z0;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        z0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean mFades>;

        return z0;
    }
    public int getSelectedColor()
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $r1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        return $i0;
    }
    public void notifyDataSetChanged()
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void invalidate()>();

        return;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        android.graphics.Canvas $r1;
        float f0, f1, f2, f3;
        android.support.v4.view.ViewPager $r2;
        android.support.v4.view.PagerAdapter $r3;
        int $i0, $i1, $i2, $i3;
        android.graphics.Paint $r4;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>($r1);

        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r2 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r3 = virtualinvoke $r2.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        $i0 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        if $i0 == 0 goto label3;

        $i1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mCurrentPage>;

        if $i1 < $i0 goto label2;

        $i0 = $i0 + -1;

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void setCurrentItem(int)>($i0);

        return;

     label2:
        $i1 = virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: int getPaddingLeft()>();

        $i2 = virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: int getWidth()>();

        $i2 = $i2 - $i1;

        $i3 = virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: int getPaddingRight()>();

        $i2 = $i2 - $i3;

        f1 = (float) $i2;

        f0 = (float) $i0;

        f0 = 1.0F * f0;

        f1 = f1 / f0;

        f0 = (float) $i1;

        $i0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mCurrentPage>;

        f2 = (float) $i0;

        f3 = r0.<com.viewpagerindicator.UnderlinePageIndicator: float mPositionOffset>;

        f2 = f2 + f3;

        f2 = f2 * f1;

        f0 = f0 + f2;

        f2 = f0 + f1;

        $i0 = virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: int getPaddingTop()>();

        f1 = (float) $i0;

        $i0 = virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: int getHeight()>();

        $i1 = virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: int getPaddingBottom()>();

        $i0 = $i0 - $i1;

        f3 = (float) $i0;

        $r4 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(f0, f1, f2, f3, $r4);

     label3:
        return;
    }
    public void onPageScrollStateChanged(int)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        int $i0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $i0 := @parameter0: int;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mScrollState> = $i0;

        $r1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        if $r1 == null goto label1;

        $r1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        interfaceinvoke $r1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)>($i0);

     label1:
        return;
    }
    public void onPageScrolled(int, float, int)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        int $i0, $i1, $i3;
        float $f0;
        long $l2;
        boolean $z0;
        java.lang.Runnable $r1;
        android.graphics.Paint $r2;
        android.support.v4.view.ViewPager$OnPageChangeListener $r3;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 := @parameter2: int;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mCurrentPage> = $i0;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: float mPositionOffset> = $f0;

        $z0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean mFades>;

        if $z0 == 0 goto label1;

        if $i1 <= 0 goto label2;

        $r1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: java.lang.Runnable mFadeRunnable>;

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>(255);

     label1:
        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void invalidate()>();

        $r3 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        if $r3 == null goto label3;

        $r3 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        interfaceinvoke $r3.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>($i0, $f0, $i1);

        return;

     label2:
        $i3 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mScrollState>;

        if $i3 == 1 goto label1;

        $r1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: java.lang.Runnable mFadeRunnable>;

        $i3 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mFadeDelay>;

        $l2 = (long) $i3;

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean postDelayed(java.lang.Runnable,long)>($r1, $l2);

        goto label1;

     label3:
        return;
    }
    public void onPageSelected(int)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        int $i0, $i1;
        java.lang.Runnable $r1;
        android.support.v4.view.ViewPager$OnPageChangeListener $r2;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $i0 := @parameter0: int;

        $i1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mScrollState>;

        if $i1 != 0 goto label1;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mCurrentPage> = $i0;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: float mPositionOffset> = 0.0F;

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void invalidate()>();

        $r1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: java.lang.Runnable mFadeRunnable>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

     label1:
        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        if $r2 == null goto label2;

        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        interfaceinvoke $r2.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>($i0);

     label2:
        return;
    }
    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        android.os.Parcelable $r1;
        com.viewpagerindicator.UnderlinePageIndicator$SavedState r2;
        int $i0;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $r1 := @parameter0: android.os.Parcelable;

        r2 = (com.viewpagerindicator.UnderlinePageIndicator$SavedState) $r1;

        $r1 = virtualinvoke r2.<com.viewpagerindicator.UnderlinePageIndicator$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $i0 = r2.<com.viewpagerindicator.UnderlinePageIndicator$SavedState: int currentPage>;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mCurrentPage> = $i0;

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void requestLayout()>();

        return;
    }
    public android.os.Parcelable onSaveInstanceState()
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        com.viewpagerindicator.UnderlinePageIndicator$SavedState r1;
        int $i0;
        android.os.Parcelable $r2;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $r2 = specialinvoke r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        r1 = new com.viewpagerindicator.UnderlinePageIndicator$SavedState;

        specialinvoke r1.<com.viewpagerindicator.UnderlinePageIndicator$SavedState: void <init>(android.os.Parcelable)>($r2);

        $i0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mCurrentPage>;

        r1.<com.viewpagerindicator.UnderlinePageIndicator$SavedState: int currentPage> = $i0;

        return r1;
    }
    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        android.view.MotionEvent $r1;
        int i0, $i2, $i3;
        float f0, f1, $f2, $f3;
        boolean $z0;
        android.support.v4.view.ViewPager $r2;
        android.support.v4.view.PagerAdapter $r3;
        byte $b1;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r2 == null goto label02;

        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r3 = virtualinvoke $r2.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        i0 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        if i0 != 0 goto label03;

     label02:
        return 0;

     label03:
        i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        i0 = i0 & 255;

        lookupswitch(i0)
        {
            case 0: goto label05;
            case 1: goto label09;
            case 2: goto label06;
            case 3: goto label09;
            case 4: goto label04;
            case 5: goto label14;
            case 6: goto label15;
            default: goto label04;
        };

     label04:
        return 1;

     label05:
        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mActivePointerId> = i0;

        f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        r0.<com.viewpagerindicator.UnderlinePageIndicator: float mLastMotionX> = f1;

        goto label04;

     label06:
        i0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mActivePointerId>;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, i0);

        f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        f0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: float mLastMotionX>;

        f0 = f1 - f0;

        $z0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean mIsDragging>;

        if $z0 != 0 goto label07;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        i0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mTouchSlop>;

        $f3 = (float) i0;

        $b1 = $f2 cmpl $f3;

        if $b1 <= 0 goto label07;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean mIsDragging> = 1;

     label07:
        $z0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean mIsDragging>;

        if $z0 == 0 goto label04;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: float mLastMotionX> = f1;

        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewPager: boolean isFakeDragging()>();

        if $z0 != 0 goto label08;

        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewPager: boolean beginFakeDrag()>();

        if $z0 == 0 goto label04;

     label08:
        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r2.<android.support.v4.view.ViewPager: void fakeDragBy(float)>(f0);

        goto label04;

     label09:
        $z0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean mIsDragging>;

        if $z0 != 0 goto label13;

        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r3 = virtualinvoke $r2.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        $i2 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i3 = virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: int getWidth()>();

        f1 = (float) $i3;

        f1 = f1 / 2.0F;

        f0 = (float) $i3;

        f0 = f0 / 6.0F;

        $i3 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mCurrentPage>;

        if $i3 <= 0 goto label11;

        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f3 = f1 - f0;

        $b1 = $f2 cmpg $f3;

        if $b1 >= 0 goto label11;

        if i0 == 3 goto label10;

        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        i0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mCurrentPage>;

        i0 = i0 + -1;

        virtualinvoke $r2.<android.support.v4.view.ViewPager: void setCurrentItem(int)>(i0);

     label10:
        return 1;

     label11:
        $i3 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mCurrentPage>;

        $i2 = $i2 + -1;

        if $i3 >= $i2 goto label13;

        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        f1 = f1 + f0;

        $b1 = $f2 cmpl f1;

        if $b1 <= 0 goto label13;

        if i0 == 3 goto label12;

        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        i0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mCurrentPage>;

        i0 = i0 + 1;

        virtualinvoke $r2.<android.support.v4.view.ViewPager: void setCurrentItem(int)>(i0);

     label12:
        return 1;

     label13:
        r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean mIsDragging> = 0;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mActivePointerId> = -1;

        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewPager: boolean isFakeDragging()>();

        if $z0 == 0 goto label04;

        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r2.<android.support.v4.view.ViewPager: void endFakeDrag()>();

        goto label04;

     label14:
        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        r0.<com.viewpagerindicator.UnderlinePageIndicator: float mLastMotionX> = f1;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, i0);

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mActivePointerId> = i0;

        goto label04;

     label15:
        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        $i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, i0);

        $i3 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mActivePointerId>;

        if $i2 != $i3 goto label17;

        if i0 != 0 goto label18;

        $b1 = 1;

     label16:
        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $b1);

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mActivePointerId> = i0;

     label17:
        i0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mActivePointerId>;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, i0);

        f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        r0.<com.viewpagerindicator.UnderlinePageIndicator: float mLastMotionX> = f1;

        goto label04;

     label18:
        $b1 = 0;

        goto label16;
    }
    public void setCurrentItem(int)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        int $i0;
        android.support.v4.view.ViewPager $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $i0 := @parameter0: int;

        $r1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ViewPager has not been bound.");

        throw $r2;

     label1:
        $r1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r1.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0);

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mCurrentPage> = $i0;

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void invalidate()>();

        return;
    }
    public void setFadeDelay(int)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        int $i0;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $i0 := @parameter0: int;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mFadeDelay> = $i0;

        return;
    }
    public void setFadeLength(int)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        int $i0;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $i0 := @parameter0: int;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mFadeLength> = $i0;

        $i0 = r0.<com.viewpagerindicator.UnderlinePageIndicator: int mFadeLength>;

        $i0 = $i0 / 30;

        $i0 = 255 / $i0;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: int mFadeBy> = $i0;

        return;
    }
    public void setFades(boolean)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        boolean $z0, $z1;
        java.lang.Runnable $r1;
        android.graphics.Paint $r2;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $z0 := @parameter0: boolean;

        $z1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean mFades>;

        if $z0 == $z1 goto label2;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean mFades> = $z0;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: java.lang.Runnable mFadeRunnable>;

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean post(java.lang.Runnable)>($r1);

        return;

     label1:
        $r1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: java.lang.Runnable mFadeRunnable>;

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r2 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>(255);

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void invalidate()>();

     label2:
        return;
    }
    public void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager$OnPageChangeListener;

        r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener> = $r1;

        return;
    }
    public void setSelectedColor(int)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $i0 := @parameter0: int;

        $r1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void invalidate()>();

        return;
    }
    public void setViewPager(android.support.v4.view.ViewPager)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        android.support.v4.view.ViewPager $r1, $r3;
        android.support.v4.view.PagerAdapter $r2;
        java.lang.IllegalStateException $r4;
        com.viewpagerindicator.UnderlinePageIndicator$2 $r5;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager;

        $r3 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r3 != $r1 goto label1;

        return;

     label1:
        $r3 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r3.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(null);

     label2:
        $r2 = virtualinvoke $r1.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        if $r2 != null goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ViewPager does not have adapter instance.");

        throw $r4;

     label3:
        r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager> = $r1;

        $r1 = r0.<com.viewpagerindicator.UnderlinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r1.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r0);

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void invalidate()>();

        $r5 = new com.viewpagerindicator.UnderlinePageIndicator$2;

        specialinvoke $r5.<com.viewpagerindicator.UnderlinePageIndicator$2: void <init>(com.viewpagerindicator.UnderlinePageIndicator)>(r0);

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: boolean post(java.lang.Runnable)>($r5);

        return;
    }
    public void setViewPager(android.support.v4.view.ViewPager, int)
    {
        com.viewpagerindicator.UnderlinePageIndicator r0;
        android.support.v4.view.ViewPager $r1;
        int $i0;

        r0 := @this: com.viewpagerindicator.UnderlinePageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager;

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void setViewPager(android.support.v4.view.ViewPager)>($r1);

        virtualinvoke r0.<com.viewpagerindicator.UnderlinePageIndicator: void setCurrentItem(int)>($i0);

        return;
    }
