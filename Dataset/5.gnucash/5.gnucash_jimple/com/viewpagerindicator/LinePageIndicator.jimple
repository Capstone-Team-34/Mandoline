com.viewpagerindicator.LinePageIndicator extends android.view.View implements com.viewpagerindicator.PageIndicator
private static final int INVALID_POINTER
private int mActivePointerId
private boolean mCentered
private int mCurrentPage
private float mGapWidth
private boolean mIsDragging
private float mLastMotionX
private float mLineWidth
private android.support.v4.view.ViewPager$OnPageChangeListener mListener
private final android.graphics.Paint mPaintSelected
private final android.graphics.Paint mPaintUnselected
private int mTouchSlop
private android.support.v4.view.ViewPager mViewPager
    public void <init>(android.content.Context)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        android.content.Context $r1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.viewpagerindicator.LinePageIndicator: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <com.viewpagerindicator.R$attr: int vpiLinePageIndicatorStyle>;

        specialinvoke r0.<com.viewpagerindicator.LinePageIndicator: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.Paint $r3;
        boolean $z0;
        android.content.res.Resources $r4;
        float $f0, $f1, $f2;
        int[] $r5;
        android.content.res.TypedArray $r6;
        android.graphics.drawable.Drawable $r7;
        android.view.ViewConfiguration $r8;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintUnselected> = $r3;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected> = $r3;

        r0.<com.viewpagerindicator.LinePageIndicator: float mLastMotionX> = -1.0F;

        r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId> = -1;

        $z0 = virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: boolean isInEditMode()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: android.content.res.Resources getResources()>();

        $i1 = <com.viewpagerindicator.R$color: int default_line_indicator_selected_color>;

        $i1 = virtualinvoke $r4.<android.content.res.Resources: int getColor(int)>($i1);

        $i2 = <com.viewpagerindicator.R$color: int default_line_indicator_unselected_color>;

        $i2 = virtualinvoke $r4.<android.content.res.Resources: int getColor(int)>($i2);

        $i3 = <com.viewpagerindicator.R$dimen: int default_line_indicator_line_width>;

        $f0 = virtualinvoke $r4.<android.content.res.Resources: float getDimension(int)>($i3);

        $i3 = <com.viewpagerindicator.R$dimen: int default_line_indicator_gap_width>;

        $f1 = virtualinvoke $r4.<android.content.res.Resources: float getDimension(int)>($i3);

        $i3 = <com.viewpagerindicator.R$dimen: int default_line_indicator_stroke_width>;

        $f2 = virtualinvoke $r4.<android.content.res.Resources: float getDimension(int)>($i3);

        $i3 = <com.viewpagerindicator.R$bool: int default_line_indicator_centered>;

        $z0 = virtualinvoke $r4.<android.content.res.Resources: boolean getBoolean(int)>($i3);

        $r5 = <com.viewpagerindicator.R$styleable: int[] LinePageIndicator>;

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r5, $i0, 0);

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, $z0);

        r0.<com.viewpagerindicator.LinePageIndicator: boolean mCentered> = $z0;

        $f0 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(5, $f0);

        r0.<com.viewpagerindicator.LinePageIndicator: float mLineWidth> = $f0;

        $f1 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(6, $f1);

        r0.<com.viewpagerindicator.LinePageIndicator: float mGapWidth> = $f1;

        $f2 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(3, $f2);

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void setStrokeWidth(float)>($f2);

        $r3 = r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintUnselected>;

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(4, $i2);

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r3 = r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(2, $i1);

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r7 = virtualinvoke $r6.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        if $r7 == null goto label2;

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r7);

     label2:
        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        $r8 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i0 = staticinvoke <android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>($r8);

        r0.<com.viewpagerindicator.LinePageIndicator: int mTouchSlop> = $i0;

        return;
    }
    private int measureHeight(int)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        int $i0, $i1, $i2;
        float f0, $f1;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        if $i1 != 1073741824 goto label2;

        f0 = (float) $i0;

     label1:
        f0 = staticinvoke <android.util.FloatMath: float ceil(float)>(f0);

        $i0 = (int) f0;

        return $i0;

     label2:
        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

        f0 = virtualinvoke $r1.<android.graphics.Paint: float getStrokeWidth()>();

        $i2 = virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingTop()>();

        $f1 = (float) $i2;

        f0 = f0 + $f1;

        $i2 = virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingBottom()>();

        $f1 = (float) $i2;

        f0 = f0 + $f1;

        if $i1 != -2147483648 goto label1;

        $f1 = (float) $i0;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>(f0, $f1);

        goto label1;
    }
    private int measureWidth(int)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.support.v4.view.ViewPager $r1;
        float f0, $f1, $f2;
        android.support.v4.view.PagerAdapter $r2;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        if $i1 == 1073741824 goto label1;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r1 != null goto label3;

     label1:
        f0 = (float) $i0;

     label2:
        f0 = staticinvoke <android.util.FloatMath: float ceil(float)>(f0);

        $i0 = (int) f0;

        return $i0;

     label3:
        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r2 = virtualinvoke $r1.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        $i2 = virtualinvoke $r2.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i3 = virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingLeft()>();

        $i4 = virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingRight()>();

        $i3 = $i3 + $i4;

        f0 = (float) $i3;

        $f1 = (float) $i2;

        $f2 = r0.<com.viewpagerindicator.LinePageIndicator: float mLineWidth>;

        $f1 = $f1 * $f2;

        f0 = f0 + $f1;

        $i2 = $i2 + -1;

        $f1 = (float) $i2;

        $f2 = r0.<com.viewpagerindicator.LinePageIndicator: float mGapWidth>;

        $f1 = $f1 * $f2;

        f0 = f0 + $f1;

        if $i1 != -2147483648 goto label2;

        $f1 = (float) $i0;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>(f0, $f1);

        goto label2;
    }
    public float getGapWidth()
    {
        com.viewpagerindicator.LinePageIndicator r0;
        float f0;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        f0 = r0.<com.viewpagerindicator.LinePageIndicator: float mGapWidth>;

        return f0;
    }
    public float getLineWidth()
    {
        com.viewpagerindicator.LinePageIndicator r0;
        float f0;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        f0 = r0.<com.viewpagerindicator.LinePageIndicator: float mLineWidth>;

        return f0;
    }
    public int getSelectedColor()
    {
        com.viewpagerindicator.LinePageIndicator r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        return $i0;
    }
    public float getStrokeWidth()
    {
        com.viewpagerindicator.LinePageIndicator r0;
        float $f0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

        $f0 = virtualinvoke $r1.<android.graphics.Paint: float getStrokeWidth()>();

        return $f0;
    }
    public int getUnselectedColor()
    {
        com.viewpagerindicator.LinePageIndicator r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintUnselected>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        return $i0;
    }
    public boolean isCentered()
    {
        com.viewpagerindicator.LinePageIndicator r0;
        boolean z0;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        z0 = r0.<com.viewpagerindicator.LinePageIndicator: boolean mCentered>;

        return z0;
    }
    public void notifyDataSetChanged()
    {
        com.viewpagerindicator.LinePageIndicator r0;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        android.graphics.Canvas $r1;
        float f0, f1, f2, f3, f4, $f5, $f6;
        android.support.v4.view.ViewPager $r2;
        android.support.v4.view.PagerAdapter $r3;
        int $i0, $i1, $i2;
        boolean $z0;
        android.graphics.Paint $r4;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>($r1);

        $r2 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r2 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r3 = virtualinvoke $r2.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        $i0 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        if $i0 == 0 goto label7;

        $i1 = r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

        if $i1 < $i0 goto label2;

        $i0 = $i0 + -1;

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void setCurrentItem(int)>($i0);

        return;

     label2:
        f3 = r0.<com.viewpagerindicator.LinePageIndicator: float mLineWidth>;

        f0 = r0.<com.viewpagerindicator.LinePageIndicator: float mGapWidth>;

        f3 = f3 + f0;

        f0 = (float) $i0;

        f0 = f0 * f3;

        f1 = r0.<com.viewpagerindicator.LinePageIndicator: float mGapWidth>;

        f2 = f0 - f1;

        $i1 = virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingTop()>();

        f1 = (float) $i1;

        $i1 = virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingLeft()>();

        f0 = (float) $i1;

        $i1 = virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingRight()>();

        f4 = (float) $i1;

        $i1 = virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: int getHeight()>();

        $f5 = (float) $i1;

        $f5 = $f5 - f1;

        $i1 = virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: int getPaddingBottom()>();

        $f6 = (float) $i1;

        $f5 = $f5 - $f6;

        $f5 = $f5 / 2.0F;

        f1 = f1 + $f5;

        $f5 = f0;

        $z0 = r0.<com.viewpagerindicator.LinePageIndicator: boolean mCentered>;

        if $z0 == 0 goto label3;

        $i1 = virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: int getWidth()>();

        $f5 = (float) $i1;

        $f5 = $f5 - f0;

        f4 = $f5 - f4;

        f4 = f4 / 2.0F;

        f2 = f2 / 2.0F;

        f2 = f4 - f2;

        $f5 = f0 + f2;

     label3:
        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label7;

        f0 = (float) $i1;

        f0 = f0 * f3;

        f0 = $f5 + f0;

        f2 = r0.<com.viewpagerindicator.LinePageIndicator: float mLineWidth>;

        f2 = f0 + f2;

        $i2 = r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

        if $i1 != $i2 goto label6;

        $r4 = r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

     label5:
        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(f0, f1, f2, f1, $r4);

        $i1 = $i1 + 1;

        goto label4;

     label6:
        $r4 = r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintUnselected>;

        goto label5;

     label7:
        return;
    }
    protected void onMeasure(int, int)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        int $i0, $i1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = specialinvoke r0.<com.viewpagerindicator.LinePageIndicator: int measureWidth(int)>($i0);

        $i1 = specialinvoke r0.<com.viewpagerindicator.LinePageIndicator: int measureHeight(int)>($i1);

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }
    public void onPageScrollStateChanged(int)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        int $i0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        if $r1 == null goto label1;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        interfaceinvoke $r1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)>($i0);

     label1:
        return;
    }
    public void onPageScrolled(int, float, int)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        int $i0, $i1;
        float $f0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 := @parameter2: int;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        if $r1 == null goto label1;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        interfaceinvoke $r1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>($i0, $f0, $i1);

     label1:
        return;
    }
    public void onPageSelected(int)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        int $i0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage> = $i0;

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        if $r1 == null goto label1;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        interfaceinvoke $r1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>($i0);

     label1:
        return;
    }
    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        android.os.Parcelable $r1;
        com.viewpagerindicator.LinePageIndicator$SavedState r2;
        int $i0;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.os.Parcelable;

        r2 = (com.viewpagerindicator.LinePageIndicator$SavedState) $r1;

        $r1 = virtualinvoke r2.<com.viewpagerindicator.LinePageIndicator$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $i0 = r2.<com.viewpagerindicator.LinePageIndicator$SavedState: int currentPage>;

        r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage> = $i0;

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void requestLayout()>();

        return;
    }
    public android.os.Parcelable onSaveInstanceState()
    {
        com.viewpagerindicator.LinePageIndicator r0;
        com.viewpagerindicator.LinePageIndicator$SavedState r1;
        int $i0;
        android.os.Parcelable $r2;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r2 = specialinvoke r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        r1 = new com.viewpagerindicator.LinePageIndicator$SavedState;

        specialinvoke r1.<com.viewpagerindicator.LinePageIndicator$SavedState: void <init>(android.os.Parcelable)>($r2);

        $i0 = r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

        r1.<com.viewpagerindicator.LinePageIndicator$SavedState: int currentPage> = $i0;

        return r1;
    }
    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        android.view.MotionEvent $r1;
        int i0, $i2, $i3;
        float f0, f1, $f2, $f3;
        boolean $z0;
        android.support.v4.view.ViewPager $r2;
        android.support.v4.view.PagerAdapter $r3;
        byte $b1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $r2 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r2 == null goto label02;

        $r2 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r3 = virtualinvoke $r2.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        i0 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        if i0 != 0 goto label03;

     label02:
        return 0;

     label03:
        i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        i0 = i0 & 255;

        lookupswitch(i0)
        {
            case 0: goto label05;
            case 1: goto label09;
            case 2: goto label06;
            case 3: goto label09;
            case 4: goto label04;
            case 5: goto label14;
            case 6: goto label15;
            default: goto label04;
        };

     label04:
        return 1;

     label05:
        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);

        r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId> = i0;

        f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        r0.<com.viewpagerindicator.LinePageIndicator: float mLastMotionX> = f1;

        goto label04;

     label06:
        i0 = r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId>;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, i0);

        f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        f0 = r0.<com.viewpagerindicator.LinePageIndicator: float mLastMotionX>;

        f0 = f1 - f0;

        $z0 = r0.<com.viewpagerindicator.LinePageIndicator: boolean mIsDragging>;

        if $z0 != 0 goto label07;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        i0 = r0.<com.viewpagerindicator.LinePageIndicator: int mTouchSlop>;

        $f3 = (float) i0;

        $b1 = $f2 cmpl $f3;

        if $b1 <= 0 goto label07;

        r0.<com.viewpagerindicator.LinePageIndicator: boolean mIsDragging> = 1;

     label07:
        $z0 = r0.<com.viewpagerindicator.LinePageIndicator: boolean mIsDragging>;

        if $z0 == 0 goto label04;

        r0.<com.viewpagerindicator.LinePageIndicator: float mLastMotionX> = f1;

        $r2 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewPager: boolean isFakeDragging()>();

        if $z0 != 0 goto label08;

        $r2 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewPager: boolean beginFakeDrag()>();

        if $z0 == 0 goto label04;

     label08:
        $r2 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r2.<android.support.v4.view.ViewPager: void fakeDragBy(float)>(f0);

        goto label04;

     label09:
        $z0 = r0.<com.viewpagerindicator.LinePageIndicator: boolean mIsDragging>;

        if $z0 != 0 goto label13;

        $r2 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r3 = virtualinvoke $r2.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        $i2 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i3 = virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: int getWidth()>();

        f1 = (float) $i3;

        f1 = f1 / 2.0F;

        f0 = (float) $i3;

        f0 = f0 / 6.0F;

        $i3 = r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

        if $i3 <= 0 goto label11;

        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f3 = f1 - f0;

        $b1 = $f2 cmpg $f3;

        if $b1 >= 0 goto label11;

        if i0 == 3 goto label10;

        $r2 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        i0 = r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

        i0 = i0 + -1;

        virtualinvoke $r2.<android.support.v4.view.ViewPager: void setCurrentItem(int)>(i0);

     label10:
        return 1;

     label11:
        $i3 = r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

        $i2 = $i2 + -1;

        if $i3 >= $i2 goto label13;

        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        f1 = f1 + f0;

        $b1 = $f2 cmpl f1;

        if $b1 <= 0 goto label13;

        if i0 == 3 goto label12;

        $r2 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        i0 = r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage>;

        i0 = i0 + 1;

        virtualinvoke $r2.<android.support.v4.view.ViewPager: void setCurrentItem(int)>(i0);

     label12:
        return 1;

     label13:
        r0.<com.viewpagerindicator.LinePageIndicator: boolean mIsDragging> = 0;

        r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId> = -1;

        $r2 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewPager: boolean isFakeDragging()>();

        if $z0 == 0 goto label04;

        $r2 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r2.<android.support.v4.view.ViewPager: void endFakeDrag()>();

        goto label04;

     label14:
        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        r0.<com.viewpagerindicator.LinePageIndicator: float mLastMotionX> = f1;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, i0);

        r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId> = i0;

        goto label04;

     label15:
        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        $i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, i0);

        $i3 = r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId>;

        if $i2 != $i3 goto label17;

        if i0 != 0 goto label18;

        $b1 = 1;

     label16:
        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $b1);

        r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId> = i0;

     label17:
        i0 = r0.<com.viewpagerindicator.LinePageIndicator: int mActivePointerId>;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, i0);

        f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        r0.<com.viewpagerindicator.LinePageIndicator: float mLastMotionX> = f1;

        goto label04;

     label18:
        $b1 = 0;

        goto label16;
    }
    public void setCentered(boolean)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        boolean $z0;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $z0 := @parameter0: boolean;

        r0.<com.viewpagerindicator.LinePageIndicator: boolean mCentered> = $z0;

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }
    public void setCurrentItem(int)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        int $i0;
        android.support.v4.view.ViewPager $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ViewPager has not been bound.");

        throw $r2;

     label1:
        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r1.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0);

        r0.<com.viewpagerindicator.LinePageIndicator: int mCurrentPage> = $i0;

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }
    public void setGapWidth(float)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        float $f0;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $f0 := @parameter0: float;

        r0.<com.viewpagerindicator.LinePageIndicator: float mGapWidth> = $f0;

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }
    public void setLineWidth(float)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        float $f0;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $f0 := @parameter0: float;

        r0.<com.viewpagerindicator.LinePageIndicator: float mLineWidth> = $f0;

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }
    public void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager$OnPageChangeListener;

        r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener> = $r1;

        return;
    }
    public void setSelectedColor(int)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }
    public void setStrokeWidth(float)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        float $f0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $f0 := @parameter0: float;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintSelected>;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintUnselected>;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }
    public void setUnselectedColor(int)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $i0 := @parameter0: int;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.graphics.Paint mPaintUnselected>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }
    public void setViewPager(android.support.v4.view.ViewPager)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        android.support.v4.view.ViewPager $r1, $r3;
        android.support.v4.view.PagerAdapter $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager;

        $r3 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r3 != $r1 goto label1;

        return;

     label1:
        $r3 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r3.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(null);

     label2:
        $r2 = virtualinvoke $r1.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        if $r2 != null goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ViewPager does not have adapter instance.");

        throw $r4;

     label3:
        r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager> = $r1;

        $r1 = r0.<com.viewpagerindicator.LinePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r1.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r0);

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void invalidate()>();

        return;
    }
    public void setViewPager(android.support.v4.view.ViewPager, int)
    {
        com.viewpagerindicator.LinePageIndicator r0;
        android.support.v4.view.ViewPager $r1;
        int $i0;

        r0 := @this: com.viewpagerindicator.LinePageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager;

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void setViewPager(android.support.v4.view.ViewPager)>($r1);

        virtualinvoke r0.<com.viewpagerindicator.LinePageIndicator: void setCurrentItem(int)>($i0);

        return;
    }
