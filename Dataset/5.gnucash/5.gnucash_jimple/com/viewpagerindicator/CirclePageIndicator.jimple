com.viewpagerindicator.CirclePageIndicator extends android.view.View implements com.viewpagerindicator.PageIndicator
private static final int INVALID_POINTER
private int mActivePointerId
private boolean mCentered
private int mCurrentPage
private boolean mIsDragging
private float mLastMotionX
private android.support.v4.view.ViewPager$OnPageChangeListener mListener
private int mOrientation
private float mPageOffset
private final android.graphics.Paint mPaintFill
private final android.graphics.Paint mPaintPageFill
private final android.graphics.Paint mPaintStroke
private float mRadius
private int mScrollState
private boolean mSnap
private int mSnapPage
private int mTouchSlop
private android.support.v4.view.ViewPager mViewPager
    public void <init>(android.content.Context)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        android.content.Context $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <com.viewpagerindicator.R$attr: int vpiCirclePageIndicatorStyle>;

        specialinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.Paint $r3;
        boolean $z0, $z1;
        android.content.res.Resources $r4;
        float $f0, $f1;
        int[] $r5;
        android.content.res.TypedArray $r6;
        android.graphics.Paint$Style $r7;
        android.graphics.drawable.Drawable $r8;
        android.view.ViewConfiguration $r9;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintPageFill> = $r3;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintStroke> = $r3;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintFill> = $r3;

        r0.<com.viewpagerindicator.CirclePageIndicator: float mLastMotionX> = -1.0F;

        r0.<com.viewpagerindicator.CirclePageIndicator: int mActivePointerId> = -1;

        $z0 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: boolean isInEditMode()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: android.content.res.Resources getResources()>();

        $i1 = <com.viewpagerindicator.R$color: int default_circle_indicator_page_color>;

        $i2 = virtualinvoke $r4.<android.content.res.Resources: int getColor(int)>($i1);

        $i1 = <com.viewpagerindicator.R$color: int default_circle_indicator_fill_color>;

        $i1 = virtualinvoke $r4.<android.content.res.Resources: int getColor(int)>($i1);

        $i3 = <com.viewpagerindicator.R$integer: int default_circle_indicator_orientation>;

        $i4 = virtualinvoke $r4.<android.content.res.Resources: int getInteger(int)>($i3);

        $i3 = <com.viewpagerindicator.R$color: int default_circle_indicator_stroke_color>;

        $i3 = virtualinvoke $r4.<android.content.res.Resources: int getColor(int)>($i3);

        $i5 = <com.viewpagerindicator.R$dimen: int default_circle_indicator_stroke_width>;

        $f0 = virtualinvoke $r4.<android.content.res.Resources: float getDimension(int)>($i5);

        $i5 = <com.viewpagerindicator.R$dimen: int default_circle_indicator_radius>;

        $f1 = virtualinvoke $r4.<android.content.res.Resources: float getDimension(int)>($i5);

        $i5 = <com.viewpagerindicator.R$bool: int default_circle_indicator_centered>;

        $z1 = virtualinvoke $r4.<android.content.res.Resources: boolean getBoolean(int)>($i5);

        $i5 = <com.viewpagerindicator.R$bool: int default_circle_indicator_snap>;

        $z0 = virtualinvoke $r4.<android.content.res.Resources: boolean getBoolean(int)>($i5);

        $r5 = <com.viewpagerindicator.R$styleable: int[] CirclePageIndicator>;

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r5, $i0, 0);

        $z1 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, $z1);

        r0.<com.viewpagerindicator.CirclePageIndicator: boolean mCentered> = $z1;

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getInt(int,int)>(0, $i4);

        r0.<com.viewpagerindicator.CirclePageIndicator: int mOrientation> = $i0;

        $r3 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintPageFill>;

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r7);

        $r3 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintPageFill>;

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(5, $i2);

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r3 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintStroke>;

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r7);

        $r3 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintStroke>;

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(8, $i3);

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $r3 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintStroke>;

        $f0 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(3, $f0);

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r3 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintFill>;

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r7);

        $r3 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintFill>;

        $i0 = virtualinvoke $r6.<android.content.res.TypedArray: int getColor(int,int)>(4, $i1);

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        $f1 = virtualinvoke $r6.<android.content.res.TypedArray: float getDimension(int,float)>(6, $f1);

        r0.<com.viewpagerindicator.CirclePageIndicator: float mRadius> = $f1;

        $z0 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(7, $z0);

        r0.<com.viewpagerindicator.CirclePageIndicator: boolean mSnap> = $z0;

        $r8 = virtualinvoke $r6.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        if $r8 == null goto label2;

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r8);

     label2:
        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        $r9 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $i0 = staticinvoke <android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>($r9);

        r0.<com.viewpagerindicator.CirclePageIndicator: int mTouchSlop> = $i0;

        return;
    }
    private int measureLong(int)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.support.v4.view.ViewPager $r1;
        android.support.v4.view.PagerAdapter $r2;
        float $f0, $f1, $f2;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        if $i1 == 1073741824 goto label1;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r1 != null goto label2;

     label1:
        return $i0;

     label2:
        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r2 = virtualinvoke $r1.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        $i2 = virtualinvoke $r2.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i3 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int getPaddingLeft()>();

        $i4 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int getPaddingRight()>();

        $i3 = $i3 + $i4;

        $f0 = (float) $i3;

        $i3 = $i2 * 2;

        $f1 = (float) $i3;

        $f2 = r0.<com.viewpagerindicator.CirclePageIndicator: float mRadius>;

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $i2 = $i2 + -1;

        $f1 = (float) $i2;

        $f2 = r0.<com.viewpagerindicator.CirclePageIndicator: float mRadius>;

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $f0 = $f0 + 1.0F;

        $i2 = (int) $f0;

        if $i1 != -2147483648 goto label3;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i0);

        return $i0;

     label3:
        return $i2;
    }
    private int measureShort(int)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0, $i1, $i2;
        float $f0, $f1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        if $i1 != 1073741824 goto label1;

        return $i0;

     label1:
        $f0 = r0.<com.viewpagerindicator.CirclePageIndicator: float mRadius>;

        $f0 = 2.0F * $f0;

        $i2 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int getPaddingTop()>();

        $f1 = (float) $i2;

        $f0 = $f0 + $f1;

        $i2 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int getPaddingBottom()>();

        $f1 = (float) $i2;

        $f0 = $f0 + $f1;

        $f0 = $f0 + 1.0F;

        $i2 = (int) $f0;

        if $i1 != -2147483648 goto label2;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i0);

        return $i0;

     label2:
        return $i2;
    }
    public int getFillColor()
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintFill>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        return $i0;
    }
    public int getOrientation()
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int i0;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        i0 = r0.<com.viewpagerindicator.CirclePageIndicator: int mOrientation>;

        return i0;
    }
    public int getPageColor()
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintPageFill>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        return $i0;
    }
    public float getRadius()
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        float f0;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        f0 = r0.<com.viewpagerindicator.CirclePageIndicator: float mRadius>;

        return f0;
    }
    public int getStrokeColor()
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintStroke>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        return $i0;
    }
    public float getStrokeWidth()
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        float $f0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintStroke>;

        $f0 = virtualinvoke $r1.<android.graphics.Paint: float getStrokeWidth()>();

        return $f0;
    }
    public boolean isCentered()
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        boolean z0;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        z0 = r0.<com.viewpagerindicator.CirclePageIndicator: boolean mCentered>;

        return z0;
    }
    public boolean isSnap()
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        boolean z0;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        z0 = r0.<com.viewpagerindicator.CirclePageIndicator: boolean mSnap>;

        return z0;
    }
    public void notifyDataSetChanged()
    {
        com.viewpagerindicator.CirclePageIndicator r0;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void invalidate()>();

        return;
    }
    protected void onDraw(android.graphics.Canvas)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        android.graphics.Canvas $r1;
        float f0, f1, f2, $f3, $f4, $f5, $f6;
        android.support.v4.view.ViewPager $r2;
        android.support.v4.view.PagerAdapter $r3;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        android.graphics.Paint $r4;
        byte $b5;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>($r1);

        $r2 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r2 != null goto label01;

        return;

     label01:
        $r2 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r3 = virtualinvoke $r2.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        $i0 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        if $i0 == 0 goto label18;

        $i1 = r0.<com.viewpagerindicator.CirclePageIndicator: int mCurrentPage>;

        if $i1 < $i0 goto label02;

        $i0 = $i0 + -1;

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void setCurrentItem(int)>($i0);

        return;

     label02:
        $i1 = r0.<com.viewpagerindicator.CirclePageIndicator: int mOrientation>;

        if $i1 != 0 goto label10;

        $i1 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int getWidth()>();

        $i2 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int getPaddingRight()>();

        $i4 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int getPaddingTop()>();

     label03:
        f1 = r0.<com.viewpagerindicator.CirclePageIndicator: float mRadius>;

        f2 = f1 * 3.0F;

        f1 = (float) $i4;

        $f3 = r0.<com.viewpagerindicator.CirclePageIndicator: float mRadius>;

        f1 = f1 + $f3;

        $f3 = (float) $i2;

        $f4 = r0.<com.viewpagerindicator.CirclePageIndicator: float mRadius>;

        $f3 = $f3 + $f4;

        $z0 = r0.<com.viewpagerindicator.CirclePageIndicator: boolean mCentered>;

        if $z0 == 0 goto label04;

        $i1 = $i1 - $i2;

        $i1 = $i1 - $i3;

        $f4 = (float) $i1;

        $f4 = $f4 / 2.0F;

        $f5 = (float) $i0;

        $f5 = $f5 * f2;

        $f5 = $f5 / 2.0F;

        $f4 = $f4 - $f5;

        $f3 = $f3 + $f4;

     label04:
        $f4 = r0.<com.viewpagerindicator.CirclePageIndicator: float mRadius>;

        $r4 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintStroke>;

        $f5 = virtualinvoke $r4.<android.graphics.Paint: float getStrokeWidth()>();

        $b5 = $f5 cmpl 0.0F;

        if $b5 <= 0 goto label05;

        $r4 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintStroke>;

        $f5 = virtualinvoke $r4.<android.graphics.Paint: float getStrokeWidth()>();

        $f5 = $f5 / 2.0F;

        $f4 = $f4 - $f5;

     label05:
        $i1 = 0;

     label06:
        if $i1 >= $i0 goto label12;

        $f5 = (float) $i1;

        $f5 = $f5 * f2;

        f0 = $f3 + $f5;

        $i2 = r0.<com.viewpagerindicator.CirclePageIndicator: int mOrientation>;

        if $i2 != 0 goto label11;

        $f5 = f0;

        f0 = f1;

     label07:
        $r4 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintPageFill>;

        $i2 = virtualinvoke $r4.<android.graphics.Paint: int getAlpha()>();

        if $i2 <= 0 goto label08;

        $r4 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintPageFill>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f5, f0, $f4, $r4);

     label08:
        $f6 = r0.<com.viewpagerindicator.CirclePageIndicator: float mRadius>;

        $b5 = $f4 cmpl $f6;

        if $b5 == 0 goto label09;

        $f6 = r0.<com.viewpagerindicator.CirclePageIndicator: float mRadius>;

        $r4 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintStroke>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f5, f0, $f6, $r4);

     label09:
        $i1 = $i1 + 1;

        goto label06;

     label10:
        $i1 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int getHeight()>();

        $i2 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int getPaddingTop()>();

        $i3 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int getPaddingBottom()>();

        $i4 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int getPaddingLeft()>();

        goto label03;

     label11:
        $f5 = f1;

        goto label07;

     label12:
        $z0 = r0.<com.viewpagerindicator.CirclePageIndicator: boolean mSnap>;

        if $z0 == 0 goto label16;

        $i0 = r0.<com.viewpagerindicator.CirclePageIndicator: int mSnapPage>;

     label13:
        $f4 = (float) $i0;

        $f4 = $f4 * f2;

        $z0 = r0.<com.viewpagerindicator.CirclePageIndicator: boolean mSnap>;

        if $z0 != 0 goto label14;

        $f5 = r0.<com.viewpagerindicator.CirclePageIndicator: float mPageOffset>;

        f2 = $f5 * f2;

        $f4 = $f4 + f2;

     label14:
        $i0 = r0.<com.viewpagerindicator.CirclePageIndicator: int mOrientation>;

        if $i0 != 0 goto label17;

        f2 = $f3 + $f4;

     label15:
        $f3 = r0.<com.viewpagerindicator.CirclePageIndicator: float mRadius>;

        $r4 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintFill>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(f2, f1, $f3, $r4);

        return;

     label16:
        $i0 = r0.<com.viewpagerindicator.CirclePageIndicator: int mCurrentPage>;

        goto label13;

     label17:
        f2 = f1;

        f1 = $f3 + $f4;

        goto label15;

     label18:
        return;
    }
    protected void onMeasure(int, int)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0, $i1, $i2;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = r0.<com.viewpagerindicator.CirclePageIndicator: int mOrientation>;

        if $i2 != 0 goto label1;

        $i0 = specialinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int measureLong(int)>($i0);

        $i1 = specialinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int measureShort(int)>($i1);

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void setMeasuredDimension(int,int)>($i0, $i1);

        return;

     label1:
        $i0 = specialinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int measureShort(int)>($i0);

        $i1 = specialinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int measureLong(int)>($i1);

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }
    public void onPageScrollStateChanged(int)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $i0 := @parameter0: int;

        r0.<com.viewpagerindicator.CirclePageIndicator: int mScrollState> = $i0;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        if $r1 == null goto label1;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        interfaceinvoke $r1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)>($i0);

     label1:
        return;
    }
    public void onPageScrolled(int, float, int)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0, $i1;
        float $f0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 := @parameter2: int;

        r0.<com.viewpagerindicator.CirclePageIndicator: int mCurrentPage> = $i0;

        r0.<com.viewpagerindicator.CirclePageIndicator: float mPageOffset> = $f0;

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void invalidate()>();

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        if $r1 == null goto label1;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        interfaceinvoke $r1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>($i0, $f0, $i1);

     label1:
        return;
    }
    public void onPageSelected(int)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0, $i1;
        boolean $z0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $i0 := @parameter0: int;

        $z0 = r0.<com.viewpagerindicator.CirclePageIndicator: boolean mSnap>;

        if $z0 != 0 goto label1;

        $i1 = r0.<com.viewpagerindicator.CirclePageIndicator: int mScrollState>;

        if $i1 != 0 goto label2;

     label1:
        r0.<com.viewpagerindicator.CirclePageIndicator: int mCurrentPage> = $i0;

        r0.<com.viewpagerindicator.CirclePageIndicator: int mSnapPage> = $i0;

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void invalidate()>();

     label2:
        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        if $r1 == null goto label3;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener>;

        interfaceinvoke $r1.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>($i0);

     label3:
        return;
    }
    public void onRestoreInstanceState(android.os.Parcelable)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        android.os.Parcelable $r1;
        com.viewpagerindicator.CirclePageIndicator$SavedState r2;
        int $i0;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r1 := @parameter0: android.os.Parcelable;

        r2 = (com.viewpagerindicator.CirclePageIndicator$SavedState) $r1;

        $r1 = virtualinvoke r2.<com.viewpagerindicator.CirclePageIndicator$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $i0 = r2.<com.viewpagerindicator.CirclePageIndicator$SavedState: int currentPage>;

        r0.<com.viewpagerindicator.CirclePageIndicator: int mCurrentPage> = $i0;

        $i0 = r2.<com.viewpagerindicator.CirclePageIndicator$SavedState: int currentPage>;

        r0.<com.viewpagerindicator.CirclePageIndicator: int mSnapPage> = $i0;

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void requestLayout()>();

        return;
    }
    public android.os.Parcelable onSaveInstanceState()
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        com.viewpagerindicator.CirclePageIndicator$SavedState r1;
        int $i0;
        android.os.Parcelable $r2;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r2 = specialinvoke r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        r1 = new com.viewpagerindicator.CirclePageIndicator$SavedState;

        specialinvoke r1.<com.viewpagerindicator.CirclePageIndicator$SavedState: void <init>(android.os.Parcelable)>($r2);

        $i0 = r0.<com.viewpagerindicator.CirclePageIndicator: int mCurrentPage>;

        r1.<com.viewpagerindicator.CirclePageIndicator$SavedState: int currentPage> = $i0;

        return r1;
    }
    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        android.view.MotionEvent $r1;
        int i0, $i2, $i3;
        float f0, f1, $f2, $f3;
        boolean $z0;
        android.support.v4.view.ViewPager $r2;
        android.support.v4.view.PagerAdapter $r3;
        byte $b1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $r2 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r2 == null goto label02;

        $r2 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r3 = virtualinvoke $r2.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        i0 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        if i0 != 0 goto label03;

     label02:
        return 0;

     label03:
        i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        i0 = i0 & 255;

        lookupswitch(i0)
        {
            case 0: goto label05;
            case 1: goto label09;
            case 2: goto label06;
            case 3: goto label09;
            case 4: goto label04;
            case 5: goto label14;
            case 6: goto label15;
            default: goto label04;
        };

     label04:
        return 1;

     label05:
        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);

        r0.<com.viewpagerindicator.CirclePageIndicator: int mActivePointerId> = i0;

        f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        r0.<com.viewpagerindicator.CirclePageIndicator: float mLastMotionX> = f1;

        goto label04;

     label06:
        i0 = r0.<com.viewpagerindicator.CirclePageIndicator: int mActivePointerId>;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, i0);

        f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        f0 = r0.<com.viewpagerindicator.CirclePageIndicator: float mLastMotionX>;

        f0 = f1 - f0;

        $z0 = r0.<com.viewpagerindicator.CirclePageIndicator: boolean mIsDragging>;

        if $z0 != 0 goto label07;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        i0 = r0.<com.viewpagerindicator.CirclePageIndicator: int mTouchSlop>;

        $f3 = (float) i0;

        $b1 = $f2 cmpl $f3;

        if $b1 <= 0 goto label07;

        r0.<com.viewpagerindicator.CirclePageIndicator: boolean mIsDragging> = 1;

     label07:
        $z0 = r0.<com.viewpagerindicator.CirclePageIndicator: boolean mIsDragging>;

        if $z0 == 0 goto label04;

        r0.<com.viewpagerindicator.CirclePageIndicator: float mLastMotionX> = f1;

        $r2 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewPager: boolean isFakeDragging()>();

        if $z0 != 0 goto label08;

        $r2 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewPager: boolean beginFakeDrag()>();

        if $z0 == 0 goto label04;

     label08:
        $r2 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r2.<android.support.v4.view.ViewPager: void fakeDragBy(float)>(f0);

        goto label04;

     label09:
        $z0 = r0.<com.viewpagerindicator.CirclePageIndicator: boolean mIsDragging>;

        if $z0 != 0 goto label13;

        $r2 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $r3 = virtualinvoke $r2.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        $i2 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i3 = virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: int getWidth()>();

        f1 = (float) $i3;

        f1 = f1 / 2.0F;

        f0 = (float) $i3;

        f0 = f0 / 6.0F;

        $i3 = r0.<com.viewpagerindicator.CirclePageIndicator: int mCurrentPage>;

        if $i3 <= 0 goto label11;

        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f3 = f1 - f0;

        $b1 = $f2 cmpg $f3;

        if $b1 >= 0 goto label11;

        if i0 == 3 goto label10;

        $r2 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        i0 = r0.<com.viewpagerindicator.CirclePageIndicator: int mCurrentPage>;

        i0 = i0 + -1;

        virtualinvoke $r2.<android.support.v4.view.ViewPager: void setCurrentItem(int)>(i0);

     label10:
        return 1;

     label11:
        $i3 = r0.<com.viewpagerindicator.CirclePageIndicator: int mCurrentPage>;

        $i2 = $i2 + -1;

        if $i3 >= $i2 goto label13;

        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        f1 = f1 + f0;

        $b1 = $f2 cmpl f1;

        if $b1 <= 0 goto label13;

        if i0 == 3 goto label12;

        $r2 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        i0 = r0.<com.viewpagerindicator.CirclePageIndicator: int mCurrentPage>;

        i0 = i0 + 1;

        virtualinvoke $r2.<android.support.v4.view.ViewPager: void setCurrentItem(int)>(i0);

     label12:
        return 1;

     label13:
        r0.<com.viewpagerindicator.CirclePageIndicator: boolean mIsDragging> = 0;

        r0.<com.viewpagerindicator.CirclePageIndicator: int mActivePointerId> = -1;

        $r2 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        $z0 = virtualinvoke $r2.<android.support.v4.view.ViewPager: boolean isFakeDragging()>();

        if $z0 == 0 goto label04;

        $r2 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r2.<android.support.v4.view.ViewPager: void endFakeDrag()>();

        goto label04;

     label14:
        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        r0.<com.viewpagerindicator.CirclePageIndicator: float mLastMotionX> = f1;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, i0);

        r0.<com.viewpagerindicator.CirclePageIndicator: int mActivePointerId> = i0;

        goto label04;

     label15:
        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);

        $i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, i0);

        $i3 = r0.<com.viewpagerindicator.CirclePageIndicator: int mActivePointerId>;

        if $i2 != $i3 goto label17;

        if i0 != 0 goto label18;

        $b1 = 1;

     label16:
        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $b1);

        r0.<com.viewpagerindicator.CirclePageIndicator: int mActivePointerId> = i0;

     label17:
        i0 = r0.<com.viewpagerindicator.CirclePageIndicator: int mActivePointerId>;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, i0);

        f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, i0);

        r0.<com.viewpagerindicator.CirclePageIndicator: float mLastMotionX> = f1;

        goto label04;

     label18:
        $b1 = 0;

        goto label16;
    }
    public void setCentered(boolean)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        boolean $z0;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $z0 := @parameter0: boolean;

        r0.<com.viewpagerindicator.CirclePageIndicator: boolean mCentered> = $z0;

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void invalidate()>();

        return;
    }
    public void setCurrentItem(int)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0;
        android.support.v4.view.ViewPager $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $i0 := @parameter0: int;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ViewPager has not been bound.");

        throw $r2;

     label1:
        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r1.<android.support.v4.view.ViewPager: void setCurrentItem(int)>($i0);

        r0.<com.viewpagerindicator.CirclePageIndicator: int mCurrentPage> = $i0;

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void invalidate()>();

        return;
    }
    public void setFillColor(int)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $i0 := @parameter0: int;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintFill>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void invalidate()>();

        return;
    }
    public void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        android.support.v4.view.ViewPager$OnPageChangeListener $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager$OnPageChangeListener;

        r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager$OnPageChangeListener mListener> = $r1;

        return;
    }
    public void setOrientation(int)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Orientation must be either HORIZONTAL or VERTICAL.");

        throw $r1;

     label2:
        r0.<com.viewpagerindicator.CirclePageIndicator: int mOrientation> = $i0;

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void requestLayout()>();

        return;
    }
    public void setPageColor(int)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $i0 := @parameter0: int;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintPageFill>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void invalidate()>();

        return;
    }
    public void setRadius(float)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        float $f0;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $f0 := @parameter0: float;

        r0.<com.viewpagerindicator.CirclePageIndicator: float mRadius> = $f0;

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void invalidate()>();

        return;
    }
    public void setSnap(boolean)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        boolean $z0;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $z0 := @parameter0: boolean;

        r0.<com.viewpagerindicator.CirclePageIndicator: boolean mSnap> = $z0;

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void invalidate()>();

        return;
    }
    public void setStrokeColor(int)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        int $i0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $i0 := @parameter0: int;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintStroke>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void invalidate()>();

        return;
    }
    public void setStrokeWidth(float)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        float $f0;
        android.graphics.Paint $r1;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $f0 := @parameter0: float;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.graphics.Paint mPaintStroke>;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void invalidate()>();

        return;
    }
    public void setViewPager(android.support.v4.view.ViewPager)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        android.support.v4.view.ViewPager $r1, $r3;
        android.support.v4.view.PagerAdapter $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager;

        $r3 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r3 != $r1 goto label1;

        return;

     label1:
        $r3 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        if $r3 == null goto label2;

        $r3 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r3.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(null);

     label2:
        $r2 = virtualinvoke $r1.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        if $r2 != null goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ViewPager does not have adapter instance.");

        throw $r4;

     label3:
        r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager> = $r1;

        $r1 = r0.<com.viewpagerindicator.CirclePageIndicator: android.support.v4.view.ViewPager mViewPager>;

        virtualinvoke $r1.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r0);

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void invalidate()>();

        return;
    }
    public void setViewPager(android.support.v4.view.ViewPager, int)
    {
        com.viewpagerindicator.CirclePageIndicator r0;
        android.support.v4.view.ViewPager $r1;
        int $i0;

        r0 := @this: com.viewpagerindicator.CirclePageIndicator;

        $r1 := @parameter0: android.support.v4.view.ViewPager;

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void setViewPager(android.support.v4.view.ViewPager)>($r1);

        virtualinvoke r0.<com.viewpagerindicator.CirclePageIndicator: void setCurrentItem(int)>($i0);

        return;
    }
