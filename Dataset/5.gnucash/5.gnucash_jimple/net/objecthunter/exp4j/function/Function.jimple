net.objecthunter.exp4j.function.Function extends java.lang.Object
protected final java.lang.String name
protected final int numArguments
    public void <init>(java.lang.String)
    {
        net.objecthunter.exp4j.function.Function r0;
        java.lang.String $r1;

        r0 := @this: net.objecthunter.exp4j.function.Function;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<net.objecthunter.exp4j.function.Function: void <init>(java.lang.String,int)>($r1, 1);

        return;
    }
    public void <init>(java.lang.String, int)
    {
        net.objecthunter.exp4j.function.Function r0;
        java.lang.String $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        boolean $z0;

        r0 := @this: net.objecthunter.exp4j.function.Function;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The number of function arguments can not be less than 0 for \'");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label1:
        $z0 = staticinvoke <net.objecthunter.exp4j.function.Function: boolean isValidFunctionName(java.lang.String)>($r1);

        if $z0 != 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The function name \'");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is invalid");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        r0.<net.objecthunter.exp4j.function.Function: java.lang.String name> = $r1;

        r0.<net.objecthunter.exp4j.function.Function: int numArguments> = $i0;

        return;
    }
    public static char[] getAllowedFunctionCharacters()
    {
        char[] r0;
        int i0, i1;
        char $c2;

        r0 = newarray (char)[53];

        i0 = 65;

        i1 = 0;

     label1:
        if i0 >= 91 goto label2;

        $c2 = (char) i0;

        r0[i1] = $c2;

        i0 = i0 + 1;

        i1 = i1 + 1;

        goto label1;

     label2:
        i0 = 97;

     label3:
        if i0 >= 123 goto label4;

        $c2 = (char) i0;

        r0[i1] = $c2;

        i0 = i0 + 1;

        i1 = i1 + 1;

        goto label3;

     label4:
        r0[i1] = 95;

        return r0;
    }
    public static boolean isValidFunctionName(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, i1;
        char $c2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label6;

        i1 = 0;

     label2:
        if i1 >= $i0 goto label5;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c2);

        if $z0 != 0 goto label3;

        if $c2 != 95 goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c2);

        if $z0 == 0 goto label6;

        if i1 <= 0 goto label6;

        goto label3;

     label5:
        return 1;

     label6:
        return 0;
    }
public abstract transient double apply(double[]) { 
// no body
} 
    public java.lang.String getName()
    {
        net.objecthunter.exp4j.function.Function r0;
        java.lang.String r1;

        r0 := @this: net.objecthunter.exp4j.function.Function;

        r1 = r0.<net.objecthunter.exp4j.function.Function: java.lang.String name>;

        return r1;
    }
    public int getNumArguments()
    {
        net.objecthunter.exp4j.function.Function r0;
        int i0;

        r0 := @this: net.objecthunter.exp4j.function.Function;

        i0 = r0.<net.objecthunter.exp4j.function.Function: int numArguments>;

        return i0;
    }
