net.objecthunter.exp4j.tokenizer.NumberToken extends net.objecthunter.exp4j.tokenizer.Token
private final double value
    public void <init>(double)
    {
        net.objecthunter.exp4j.tokenizer.NumberToken r0;
        double $d0;

        r0 := @this: net.objecthunter.exp4j.tokenizer.NumberToken;

        $d0 := @parameter0: double;

        specialinvoke r0.<net.objecthunter.exp4j.tokenizer.Token: void <init>(int)>(1);

        r0.<net.objecthunter.exp4j.tokenizer.NumberToken: double value> = $d0;

        return;
    }
    void <init>(char[], int, int)
    {
        net.objecthunter.exp4j.tokenizer.NumberToken r0;
        char[] $r1;
        int $i0, $i1;
        java.lang.String $r2;
        double $d0;

        r0 := @this: net.objecthunter.exp4j.tokenizer.NumberToken;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(char[],int,int)>($r1, $i0, $i1);

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r2);

        specialinvoke r0.<net.objecthunter.exp4j.tokenizer.NumberToken: void <init>(double)>($d0);

        return;
    }
    public double getValue()
    {
        net.objecthunter.exp4j.tokenizer.NumberToken r0;
        double d0;

        r0 := @this: net.objecthunter.exp4j.tokenizer.NumberToken;

        d0 = r0.<net.objecthunter.exp4j.tokenizer.NumberToken: double value>;

        return d0;
    }
