okhttp3.Cache$2 extends java.lang.Object implements java.util.Iterator
boolean canRemove
final java.util.Iterator delegate
java.lang.String nextUrl
final okhttp3.Cache this$0
    void <init>(okhttp3.Cache) throws java.io.IOException
    {
        okhttp3.Cache$2 r0;
        okhttp3.Cache $r1;
        java.util.Iterator $r2;
        okhttp3.internal.cache.DiskLruCache $r3;

        r0 := @this: okhttp3.Cache$2;

        $r1 := @parameter0: okhttp3.Cache;

        r0.<okhttp3.Cache$2: okhttp3.Cache this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = r0.<okhttp3.Cache$2: okhttp3.Cache this$0>;

        $r3 = $r1.<okhttp3.Cache: okhttp3.internal.cache.DiskLruCache cache>;

        $r2 = virtualinvoke $r3.<okhttp3.internal.cache.DiskLruCache: java.util.Iterator snapshots()>();

        r0.<okhttp3.Cache$2: java.util.Iterator delegate> = $r2;

        return;
    }
    public boolean hasNext()
    {
        okhttp3.Cache$2 r0;
        java.lang.String $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        okhttp3.internal.cache.DiskLruCache$Snapshot r4;
        okio.Source $r5;
        okio.BufferedSource $r6;
        java.io.IOException $r7;
        java.lang.Throwable $r8;

        r0 := @this: okhttp3.Cache$2;

        $r1 = r0.<okhttp3.Cache$2: java.lang.String nextUrl>;

        if $r1 == null goto label1;

        return 1;

     label1:
        r0.<okhttp3.Cache$2: boolean canRemove> = 0;

     label2:
        $r2 = r0.<okhttp3.Cache$2: java.util.Iterator delegate>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r2 = r0.<okhttp3.Cache$2: java.util.Iterator delegate>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (okhttp3.internal.cache.DiskLruCache$Snapshot) $r3;

     label3:
        $r5 = virtualinvoke r4.<okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source getSource(int)>(0);

        $r6 = staticinvoke <okio.Okio: okio.BufferedSource buffer(okio.Source)>($r5);

        $r1 = interfaceinvoke $r6.<okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

     label4:
        r0.<okhttp3.Cache$2: java.lang.String nextUrl> = $r1;

     label5:
        virtualinvoke r4.<okhttp3.internal.cache.DiskLruCache$Snapshot: void close()>();

        return 1;

     label6:
        $r7 := @caughtexception;

        virtualinvoke r4.<okhttp3.internal.cache.DiskLruCache$Snapshot: void close()>();

        goto label2;

     label7:
        $r8 := @caughtexception;

        virtualinvoke r4.<okhttp3.internal.cache.DiskLruCache$Snapshot: void close()>();

        throw $r8;

     label8:
        return 0;

        catch java.io.IOException from label3 to label4 with label6;
        catch java.lang.Throwable from label3 to label5 with label7;
    }
    public volatile java.lang.Object next()
    {
        okhttp3.Cache$2 r0;
        java.lang.String $r1;

        r0 := @this: okhttp3.Cache$2;

        $r1 = virtualinvoke r0.<okhttp3.Cache$2: java.lang.String next()>();

        return $r1;
    }
    public java.lang.String next()
    {
        okhttp3.Cache$2 r0;
        boolean $z0;
        java.util.NoSuchElementException $r1;
        java.lang.String r2;

        r0 := @this: okhttp3.Cache$2;

        $z0 = virtualinvoke r0.<okhttp3.Cache$2: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        r2 = r0.<okhttp3.Cache$2: java.lang.String nextUrl>;

        r0.<okhttp3.Cache$2: java.lang.String nextUrl> = null;

        r0.<okhttp3.Cache$2: boolean canRemove> = 1;

        return r2;
    }
    public void remove()
    {
        okhttp3.Cache$2 r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        java.util.Iterator $r2;

        r0 := @this: okhttp3.Cache$2;

        $z0 = r0.<okhttp3.Cache$2: boolean canRemove>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("remove() before next()");

        throw $r1;

     label1:
        $r2 = r0.<okhttp3.Cache$2: java.util.Iterator delegate>;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        return;
    }
