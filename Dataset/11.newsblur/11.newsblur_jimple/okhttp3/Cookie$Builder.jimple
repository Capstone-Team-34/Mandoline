okhttp3.Cookie$Builder extends java.lang.Object
java.lang.String domain
long expiresAt
boolean hostOnly
boolean httpOnly
java.lang.String name
java.lang.String path
boolean persistent
boolean secure
java.lang.String value
    public void <init>()
    {
        okhttp3.Cookie$Builder r0;

        r0 := @this: okhttp3.Cookie$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<okhttp3.Cookie$Builder: long expiresAt> = 253402300799999L;

        r0.<okhttp3.Cookie$Builder: java.lang.String path> = "/";

        return;
    }
    private okhttp3.Cookie$Builder domain(java.lang.String, boolean)
    {
        okhttp3.Cookie$Builder r0;
        java.lang.String $r1, $r3;
        boolean $z0;
        java.lang.NullPointerException $r2;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: okhttp3.Cookie$Builder;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("domain == null");

        throw $r2;

     label1:
        $r3 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r1);

        if $r3 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected domain: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label2:
        r0.<okhttp3.Cookie$Builder: java.lang.String domain> = $r3;

        r0.<okhttp3.Cookie$Builder: boolean hostOnly> = $z0;

        return r0;
    }
    public okhttp3.Cookie build()
    {
        okhttp3.Cookie$Builder r0;
        okhttp3.Cookie $r1;

        r0 := @this: okhttp3.Cookie$Builder;

        $r1 = new okhttp3.Cookie;

        specialinvoke $r1.<okhttp3.Cookie: void <init>(okhttp3.Cookie$Builder)>(r0);

        return $r1;
    }
    public okhttp3.Cookie$Builder domain(java.lang.String)
    {
        okhttp3.Cookie$Builder r0;
        java.lang.String $r1;

        r0 := @this: okhttp3.Cookie$Builder;

        $r1 := @parameter0: java.lang.String;

        r0 = specialinvoke r0.<okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String,boolean)>($r1, 0);

        return r0;
    }
    public okhttp3.Cookie$Builder expiresAt(long)
    {
        okhttp3.Cookie$Builder r0;
        long $l0;
        byte $b1;

        r0 := @this: okhttp3.Cookie$Builder;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp 0L;

        if $b1 > 0 goto label1;

        $l0 = -9223372036854775808L;

     label1:
        $b1 = $l0 cmp 253402300799999L;

        if $b1 <= 0 goto label2;

        $l0 = 253402300799999L;

     label2:
        r0.<okhttp3.Cookie$Builder: long expiresAt> = $l0;

        r0.<okhttp3.Cookie$Builder: boolean persistent> = 1;

        return r0;
    }
    public okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String)
    {
        okhttp3.Cookie$Builder r0;
        java.lang.String $r1;

        r0 := @this: okhttp3.Cookie$Builder;

        $r1 := @parameter0: java.lang.String;

        r0 = specialinvoke r0.<okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String,boolean)>($r1, 1);

        return r0;
    }
    public okhttp3.Cookie$Builder httpOnly()
    {
        okhttp3.Cookie$Builder r0;

        r0 := @this: okhttp3.Cookie$Builder;

        r0.<okhttp3.Cookie$Builder: boolean httpOnly> = 1;

        return r0;
    }
    public okhttp3.Cookie$Builder name(java.lang.String)
    {
        okhttp3.Cookie$Builder r0;
        java.lang.String $r1, $r3;
        java.lang.NullPointerException $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: okhttp3.Cookie$Builder;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r2;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name is not trimmed");

        throw $r4;

     label2:
        r0.<okhttp3.Cookie$Builder: java.lang.String name> = $r1;

        return r0;
    }
    public okhttp3.Cookie$Builder path(java.lang.String)
    {
        okhttp3.Cookie$Builder r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: okhttp3.Cookie$Builder;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("path must start with \'/\'");

        throw $r2;

     label1:
        r0.<okhttp3.Cookie$Builder: java.lang.String path> = $r1;

        return r0;
    }
    public okhttp3.Cookie$Builder secure()
    {
        okhttp3.Cookie$Builder r0;

        r0 := @this: okhttp3.Cookie$Builder;

        r0.<okhttp3.Cookie$Builder: boolean secure> = 1;

        return r0;
    }
    public okhttp3.Cookie$Builder value(java.lang.String)
    {
        okhttp3.Cookie$Builder r0;
        java.lang.String $r1, $r3;
        java.lang.NullPointerException $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: okhttp3.Cookie$Builder;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("value == null");

        throw $r2;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("value is not trimmed");

        throw $r4;

     label2:
        r0.<okhttp3.Cookie$Builder: java.lang.String value> = $r1;

        return r0;
    }
