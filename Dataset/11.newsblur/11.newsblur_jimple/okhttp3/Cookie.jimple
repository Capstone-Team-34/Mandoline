okhttp3.Cookie extends java.lang.Object
private static final java.util.regex.Pattern DAY_OF_MONTH_PATTERN
private static final java.util.regex.Pattern MONTH_PATTERN
private static final java.util.regex.Pattern TIME_PATTERN
private static final java.util.regex.Pattern YEAR_PATTERN
private final java.lang.String domain
private final long expiresAt
private final boolean hostOnly
private final boolean httpOnly
private final java.lang.String name
private final java.lang.String path
private final boolean persistent
private final boolean secure
private final java.lang.String value
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d{2,4})[^\\d]*");

        <okhttp3.Cookie: java.util.regex.Pattern YEAR_PATTERN> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?i)(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).*");

        <okhttp3.Cookie: java.util.regex.Pattern MONTH_PATTERN> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d{1,2})[^\\d]*");

        <okhttp3.Cookie: java.util.regex.Pattern DAY_OF_MONTH_PATTERN> = $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d{1,2}):(\\d{1,2}):(\\d{1,2})[^\\d]*");

        <okhttp3.Cookie: java.util.regex.Pattern TIME_PATTERN> = $r0;

        return;
    }
    private void <init>(java.lang.String, java.lang.String, long, java.lang.String, java.lang.String, boolean, boolean, boolean, boolean)
    {
        okhttp3.Cookie r0;
        java.lang.String $r1, $r2, $r3, $r4;
        long $l0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: okhttp3.Cookie;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $z0 := @parameter5: boolean;

        $z1 := @parameter6: boolean;

        $z2 := @parameter7: boolean;

        $z3 := @parameter8: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<okhttp3.Cookie: java.lang.String name> = $r1;

        r0.<okhttp3.Cookie: java.lang.String value> = $r2;

        r0.<okhttp3.Cookie: long expiresAt> = $l0;

        r0.<okhttp3.Cookie: java.lang.String domain> = $r3;

        r0.<okhttp3.Cookie: java.lang.String path> = $r4;

        r0.<okhttp3.Cookie: boolean secure> = $z0;

        r0.<okhttp3.Cookie: boolean httpOnly> = $z1;

        r0.<okhttp3.Cookie: boolean hostOnly> = $z2;

        r0.<okhttp3.Cookie: boolean persistent> = $z3;

        return;
    }
    void <init>(okhttp3.Cookie$Builder)
    {
        okhttp3.Cookie r0;
        okhttp3.Cookie$Builder $r1;
        java.lang.String $r2;
        java.lang.NullPointerException $r3;
        long $l0;
        boolean $z0;

        r0 := @this: okhttp3.Cookie;

        $r1 := @parameter0: okhttp3.Cookie$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = $r1.<okhttp3.Cookie$Builder: java.lang.String name>;

        if $r2 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("builder.name == null");

        throw $r3;

     label1:
        $r2 = $r1.<okhttp3.Cookie$Builder: java.lang.String value>;

        if $r2 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("builder.value == null");

        throw $r3;

     label2:
        $r2 = $r1.<okhttp3.Cookie$Builder: java.lang.String domain>;

        if $r2 != null goto label3;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("builder.domain == null");

        throw $r3;

     label3:
        $r2 = $r1.<okhttp3.Cookie$Builder: java.lang.String name>;

        r0.<okhttp3.Cookie: java.lang.String name> = $r2;

        $r2 = $r1.<okhttp3.Cookie$Builder: java.lang.String value>;

        r0.<okhttp3.Cookie: java.lang.String value> = $r2;

        $l0 = $r1.<okhttp3.Cookie$Builder: long expiresAt>;

        r0.<okhttp3.Cookie: long expiresAt> = $l0;

        $r2 = $r1.<okhttp3.Cookie$Builder: java.lang.String domain>;

        r0.<okhttp3.Cookie: java.lang.String domain> = $r2;

        $r2 = $r1.<okhttp3.Cookie$Builder: java.lang.String path>;

        r0.<okhttp3.Cookie: java.lang.String path> = $r2;

        $z0 = $r1.<okhttp3.Cookie$Builder: boolean secure>;

        r0.<okhttp3.Cookie: boolean secure> = $z0;

        $z0 = $r1.<okhttp3.Cookie$Builder: boolean httpOnly>;

        r0.<okhttp3.Cookie: boolean httpOnly> = $z0;

        $z0 = $r1.<okhttp3.Cookie$Builder: boolean persistent>;

        r0.<okhttp3.Cookie: boolean persistent> = $z0;

        $z0 = $r1.<okhttp3.Cookie$Builder: boolean hostOnly>;

        r0.<okhttp3.Cookie: boolean hostOnly> = $z0;

        return;
    }
    private static int dateCharacterOffset(java.lang.String, int, int, boolean)
    {
        java.lang.String $r0;
        int $i0, $i1;
        boolean $z0, z1, $z2;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

     label01:
        if $i0 >= $i1 goto label12;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c2 >= 32 goto label02;

        if $c2 != 9 goto label06;

     label02:
        if $c2 >= 127 goto label06;

        if $c2 < 48 goto label03;

        if $c2 <= 57 goto label06;

     label03:
        if $c2 < 97 goto label04;

        if $c2 <= 122 goto label06;

     label04:
        if $c2 < 65 goto label05;

        if $c2 <= 90 goto label06;

     label05:
        if $c2 != 58 goto label09;

     label06:
        z1 = 1;

     label07:
        if $z0 != 0 goto label10;

        $z2 = 1;

     label08:
        if z1 != $z2 goto label11;

        return $i0;

     label09:
        z1 = 0;

        goto label07;

     label10:
        $z2 = 0;

        goto label08;

     label11:
        $i0 = $i0 + 1;

        goto label01;

     label12:
        return $i1;
    }
    private static boolean domainMatch(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        int $i0, $i1;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 - $i1;

        $i0 = $i0 + -1;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c2 != 46 goto label2;

        $z0 = staticinvoke <okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)>($r0);

        if $z0 == 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    static okhttp3.Cookie parse(long, okhttp3.HttpUrl, java.lang.String)
    {
        long $l0, l5, l6, $l7;
        okhttp3.HttpUrl $r0;
        java.lang.String $r1, $r2, $r3, r4, r5, $r6, $r7;
        int $i1, $i2, $i3, $i4;
        boolean $z0, z1, z2, z3, $z4;
        byte $b8;
        okhttp3.internal.publicsuffix.PublicSuffixDatabase $r8;
        okhttp3.Cookie $r9;
        java.lang.NumberFormatException $r10;
        java.lang.IllegalArgumentException $r11, $r12;

        $l0 := @parameter0: long;

        $r0 := @parameter1: okhttp3.HttpUrl;

        $r1 := @parameter2: java.lang.String;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r1, 0, $i1, 59);

        $i3 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r1, 0, $i2, 61);

        if $i3 != $i2 goto label01;

        return null;

     label01:
        $r2 = staticinvoke <okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)>($r1, 0, $i3);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label02;

        $i4 = staticinvoke <okhttp3.internal.Util: int indexOfControlOrNonAscii(java.lang.String)>($r2);

        if $i4 == -1 goto label03;

     label02:
        return null;

     label03:
        $i3 = $i3 + 1;

        $r3 = staticinvoke <okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)>($r1, $i3, $i2);

        $i3 = staticinvoke <okhttp3.internal.Util: int indexOfControlOrNonAscii(java.lang.String)>($r3);

        if $i3 == -1 goto label04;

        return null;

     label04:
        l5 = 253402300799999L;

        l6 = -1L;

        r4 = null;

        r5 = null;

        $z0 = 0;

        z1 = 0;

        z2 = 1;

        z3 = 0;

        $i3 = $i2 + 1;

     label05:
        if $i3 >= $i1 goto label20;

        $i2 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r1, $i3, $i1, 59);

        $i4 = staticinvoke <okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)>($r1, $i3, $i2, 61);

        $r6 = staticinvoke <okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)>($r1, $i3, $i4);

        if $i4 >= $i2 goto label10;

        $i3 = $i4 + 1;

        $r7 = staticinvoke <okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)>($r1, $i3, $i2);

     label06:
        $z4 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("expires");

        if $z4 == 0 goto label11;

     label07:
        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();

        $l7 = staticinvoke <okhttp3.Cookie: long parseExpires(java.lang.String,int,int)>($r7, 0, $i3);

     label08:
        l5 = $l7;

        z3 = 1;

     label09:
        $i3 = $i2 + 1;

        goto label05;

     label10:
        $r7 = "";

        goto label06;

     label11:
        $z4 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("max-age");

        if $z4 == 0 goto label14;

     label12:
        $l7 = staticinvoke <okhttp3.Cookie: long parseMaxAge(java.lang.String)>($r7);

     label13:
        l6 = $l7;

        z3 = 1;

        goto label09;

     label14:
        $z4 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("domain");

        if $z4 == 0 goto label17;

     label15:
        $r6 = staticinvoke <okhttp3.Cookie: java.lang.String parseDomain(java.lang.String)>($r7);

     label16:
        r4 = $r6;

        z2 = 0;

        goto label09;

     label17:
        $z4 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("path");

        if $z4 == 0 goto label18;

        r5 = $r7;

        goto label09;

     label18:
        $z4 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("secure");

        if $z4 == 0 goto label19;

        $z0 = 1;

        goto label09;

     label19:
        $z4 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("httponly");

        if $z4 == 0 goto label09;

        z1 = 1;

        goto label09;

     label20:
        $b8 = l6 cmp -9223372036854775808L;

        if $b8 != 0 goto label23;

        l5 = -9223372036854775808L;

     label21:
        $r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String host()>();

        if r4 != null goto label27;

        r4 = $r1;

     label22:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i1 == $i2 goto label28;

        $r8 = staticinvoke <okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase get()>();

        $r1 = virtualinvoke $r8.<okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String getEffectiveTldPlusOne(java.lang.String)>(r4);

        if $r1 != null goto label28;

        return null;

     label23:
        $b8 = l6 cmp -1L;

        if $b8 == 0 goto label21;

        $b8 = l6 cmp 9223372036854775L;

        if $b8 > 0 goto label26;

        l5 = l6 * 1000L;

     label24:
        l5 = $l0 + l5;

        $b8 = l5 cmp $l0;

        if $b8 < 0 goto label25;

        $b8 = l5 cmp 253402300799999L;

        if $b8 <= 0 goto label21;

     label25:
        l5 = 253402300799999L;

        goto label21;

     label26:
        l5 = 9223372036854775807L;

        goto label24;

     label27:
        $z4 = staticinvoke <okhttp3.Cookie: boolean domainMatch(java.lang.String,java.lang.String)>($r1, r4);

        if $z4 != 0 goto label22;

        return null;

     label28:
        if r5 == null goto label29;

        $z4 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z4 != 0 goto label30;

     label29:
        $r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(47);

        if $i1 == 0 goto label31;

        r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label30:
        $r9 = new okhttp3.Cookie;

        specialinvoke $r9.<okhttp3.Cookie: void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>($r2, $r3, l5, r4, r5, $z0, z1, z2, z3);

        return $r9;

     label31:
        r5 = "/";

        goto label30;

     label32:
        $r10 := @caughtexception;

        goto label09;

     label33:
        $r11 := @caughtexception;

        goto label09;

     label34:
        $r12 := @caughtexception;

        goto label09;

        catch java.lang.IllegalArgumentException from label07 to label08 with label34;
        catch java.lang.NumberFormatException from label12 to label13 with label32;
        catch java.lang.IllegalArgumentException from label15 to label16 with label33;
    }
    public static okhttp3.Cookie parse(okhttp3.HttpUrl, java.lang.String)
    {
        okhttp3.HttpUrl $r0;
        java.lang.String $r1;
        long $l0;
        okhttp3.Cookie $r2;

        $r0 := @parameter0: okhttp3.HttpUrl;

        $r1 := @parameter1: java.lang.String;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = staticinvoke <okhttp3.Cookie: okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String)>($l0, $r0, $r1);

        return $r2;
    }
    public static java.util.List parseAll(okhttp3.HttpUrl, okhttp3.Headers)
    {
        okhttp3.HttpUrl $r0;
        okhttp3.Headers $r1;
        java.util.List $r2;
        java.util.ArrayList r3;
        int i0, $i1;
        java.lang.Object $r4;
        java.lang.String $r5;
        okhttp3.Cookie $r6;

        $r0 := @parameter0: okhttp3.HttpUrl;

        $r1 := @parameter1: okhttp3.Headers;

        $r2 = virtualinvoke $r1.<okhttp3.Headers: java.util.List values(java.lang.String)>("Set-Cookie");

        r3 = null;

        i0 = 0;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

     label1:
        if i0 >= $i1 goto label5;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (java.lang.String) $r4;

        $r6 = staticinvoke <okhttp3.Cookie: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)>($r0, $r5);

        if $r6 != null goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        if r3 != null goto label4;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

     label4:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label2;

     label5:
        if r3 == null goto label6;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r3);

        return $r2;

     label6:
        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;
    }
    private static java.lang.String parseDomain(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>(".");

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

     label2:
        $r0 = staticinvoke <okhttp3.internal.Util: java.lang.String domainToAscii(java.lang.String)>($r0);

        if $r0 != null goto label3;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label3:
        return $r0;
    }
    private static long parseExpires(java.lang.String, int, int)
    {
        java.lang.String $r0, $r5, $r7;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7, $i8;
        java.util.GregorianCalendar r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3, $r4;
        boolean $z0;
        java.util.Locale $r6;
        java.lang.IllegalArgumentException $r8;
        java.util.TimeZone $r9;
        long $l9;

        $r0 := @parameter0: java.lang.String;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i2 = staticinvoke <okhttp3.Cookie: int dateCharacterOffset(java.lang.String,int,int,boolean)>($r0, $i1, $i0, 0);

        $i1 = -1;

        i3 = -1;

        i4 = -1;

        i5 = -1;

        i6 = -1;

        i7 = -1;

        $r2 = <okhttp3.Cookie: java.util.regex.Pattern TIME_PATTERN>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

     label01:
        if $i2 >= $i0 goto label06;

        $i8 = $i2 + 1;

        $i8 = staticinvoke <okhttp3.Cookie: int dateCharacterOffset(java.lang.String,int,int,boolean)>($r0, $i8, $i0, 1);

        virtualinvoke $r3.<java.util.regex.Matcher: java.util.regex.Matcher region(int,int)>($i2, $i8);

        if $i1 != -1 goto label03;

        $r2 = <okhttp3.Cookie: java.util.regex.Pattern TIME_PATTERN>;

        $r4 = virtualinvoke $r3.<java.util.regex.Matcher: java.util.regex.Matcher usePattern(java.util.regex.Pattern)>($r2);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label03;

        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label02:
        $i8 = $i8 + 1;

        $i2 = staticinvoke <okhttp3.Cookie: int dateCharacterOffset(java.lang.String,int,int,boolean)>($r0, $i8, $i0, 0);

        goto label01;

     label03:
        if i5 != -1 goto label04;

        $r2 = <okhttp3.Cookie: java.util.regex.Pattern DAY_OF_MONTH_PATTERN>;

        $r4 = virtualinvoke $r3.<java.util.regex.Matcher: java.util.regex.Matcher usePattern(java.util.regex.Pattern)>($r2);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label04;

        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        goto label02;

     label04:
        if i6 != -1 goto label05;

        $r2 = <okhttp3.Cookie: java.util.regex.Pattern MONTH_PATTERN>;

        $r4 = virtualinvoke $r3.<java.util.regex.Matcher: java.util.regex.Matcher usePattern(java.util.regex.Pattern)>($r2);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label05;

        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r6 = <java.util.Locale: java.util.Locale US>;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        $r2 = <okhttp3.Cookie: java.util.regex.Pattern MONTH_PATTERN>;

        $r7 = virtualinvoke $r2.<java.util.regex.Pattern: java.lang.String pattern()>();

        i6 = virtualinvoke $r7.<java.lang.String: int indexOf(java.lang.String)>($r5);

        i6 = i6 / 4;

        goto label02;

     label05:
        if i7 != -1 goto label02;

        $r2 = <okhttp3.Cookie: java.util.regex.Pattern YEAR_PATTERN>;

        $r4 = virtualinvoke $r3.<java.util.regex.Matcher: java.util.regex.Matcher usePattern(java.util.regex.Pattern)>($r2);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label02;

        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        goto label02;

     label06:
        if i7 < 70 goto label07;

        if i7 > 99 goto label07;

        i7 = i7 + 1900;

     label07:
        if i7 < 0 goto label08;

        if i7 > 69 goto label08;

        i7 = i7 + 2000;

     label08:
        if i7 >= 1601 goto label09;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label09:
        if i6 != -1 goto label10;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label10:
        if i5 < 1 goto label11;

        if i5 <= 31 goto label12;

     label11:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label12:
        if $i1 < 0 goto label13;

        if $i1 <= 23 goto label14;

     label13:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label14:
        if i3 < 0 goto label15;

        if i3 <= 59 goto label16;

     label15:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label16:
        if i4 < 0 goto label17;

        if i4 <= 59 goto label18;

     label17:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label18:
        r1 = new java.util.GregorianCalendar;

        $r9 = <okhttp3.internal.Util: java.util.TimeZone UTC>;

        specialinvoke r1.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r9);

        virtualinvoke r1.<java.util.Calendar: void setLenient(boolean)>(0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(1, i7);

        $i0 = i6 + -1;

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(2, $i0);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(5, i5);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, $i1);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, i3);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, i4);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0);

        $l9 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        return $l9;
    }
    private static long parseMaxAge(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.NumberFormatException r1;
        long $l0, $l1;
        byte $b2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $l0 = -9223372036854775808L;

     label1:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

     label2:
        $b2 = $l1 cmp 0L;

        if $b2 > 0 goto label7;

        return -9223372036854775808L;

     label3:
        r1 := @caughtexception;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean matches(java.lang.String)>("-?\\d+");

        if $z0 == 0 goto label6;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 == 0 goto label5;

     label4:
        return $l0;

     label5:
        $l0 = 9223372036854775807L;

        goto label4;

     label6:
        throw r1;

     label7:
        return $l1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
    private static boolean pathMatch(okhttp3.HttpUrl, java.lang.String)
    {
        okhttp3.HttpUrl $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        int $i0;
        char $c1;

        $r0 := @parameter0: okhttp3.HttpUrl;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        if $c1 == 47 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    public java.lang.String domain()
    {
        okhttp3.Cookie r0;
        java.lang.String r1;

        r0 := @this: okhttp3.Cookie;

        r1 = r0.<okhttp3.Cookie: java.lang.String domain>;

        return r1;
    }
    public boolean equals(java.lang.Object)
    {
        okhttp3.Cookie r0, r2;
        java.lang.Object $r1;
        long $l0, $l1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;
        byte $b2;

        r0 := @this: okhttp3.Cookie;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof okhttp3.Cookie;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (okhttp3.Cookie) $r1;

        $r3 = r2.<okhttp3.Cookie: java.lang.String name>;

        $r4 = r0.<okhttp3.Cookie: java.lang.String name>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r3 = r2.<okhttp3.Cookie: java.lang.String value>;

        $r4 = r0.<okhttp3.Cookie: java.lang.String value>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r3 = r2.<okhttp3.Cookie: java.lang.String domain>;

        $r4 = r0.<okhttp3.Cookie: java.lang.String domain>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r3 = r2.<okhttp3.Cookie: java.lang.String path>;

        $r4 = r0.<okhttp3.Cookie: java.lang.String path>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $l1 = r2.<okhttp3.Cookie: long expiresAt>;

        $l0 = r0.<okhttp3.Cookie: long expiresAt>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label2;

        $z0 = r2.<okhttp3.Cookie: boolean secure>;

        $z1 = r0.<okhttp3.Cookie: boolean secure>;

        if $z0 != $z1 goto label2;

        $z0 = r2.<okhttp3.Cookie: boolean httpOnly>;

        $z1 = r0.<okhttp3.Cookie: boolean httpOnly>;

        if $z0 != $z1 goto label2;

        $z0 = r2.<okhttp3.Cookie: boolean persistent>;

        $z1 = r0.<okhttp3.Cookie: boolean persistent>;

        if $z0 != $z1 goto label2;

        $z0 = r2.<okhttp3.Cookie: boolean hostOnly>;

        $z1 = r0.<okhttp3.Cookie: boolean hostOnly>;

        if $z0 != $z1 goto label2;

        return 1;

     label2:
        return 0;
    }
    public long expiresAt()
    {
        okhttp3.Cookie r0;
        long l0;

        r0 := @this: okhttp3.Cookie;

        l0 = r0.<okhttp3.Cookie: long expiresAt>;

        return l0;
    }
    public int hashCode()
    {
        okhttp3.Cookie r0;
        byte $b0, $b5;
        java.lang.String $r1;
        int $i1, $i2;
        long $l3, $l4;
        boolean $z0;

        r0 := @this: okhttp3.Cookie;

        $b0 = 0;

        $r1 = r0.<okhttp3.Cookie: java.lang.String name>;

        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = $i1 + 527;

        $i1 = $i1 * 31;

        $r1 = r0.<okhttp3.Cookie: java.lang.String value>;

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r1 = r0.<okhttp3.Cookie: java.lang.String domain>;

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r1 = r0.<okhttp3.Cookie: java.lang.String path>;

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $l3 = r0.<okhttp3.Cookie: long expiresAt>;

        $l4 = r0.<okhttp3.Cookie: long expiresAt>;

        $l4 = $l4 >>> 32;

        $l3 = $l3 ^ $l4;

        $i2 = (int) $l3;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $z0 = r0.<okhttp3.Cookie: boolean secure>;

        if $z0 == 0 goto label5;

        $b5 = 0;

     label1:
        $i1 = $i1 + $b5;

        $i1 = $i1 * 31;

        $z0 = r0.<okhttp3.Cookie: boolean httpOnly>;

        if $z0 == 0 goto label6;

        $b5 = 0;

     label2:
        $i1 = $i1 + $b5;

        $i1 = $i1 * 31;

        $z0 = r0.<okhttp3.Cookie: boolean persistent>;

        if $z0 == 0 goto label7;

        $b5 = 0;

     label3:
        $i1 = $i1 + $b5;

        $i1 = $i1 * 31;

        $z0 = r0.<okhttp3.Cookie: boolean hostOnly>;

        if $z0 == 0 goto label8;

     label4:
        $i1 = $i1 + $b0;

        return $i1;

     label5:
        $b5 = 1;

        goto label1;

     label6:
        $b5 = 1;

        goto label2;

     label7:
        $b5 = 1;

        goto label3;

     label8:
        $b0 = 1;

        goto label4;
    }
    public boolean hostOnly()
    {
        okhttp3.Cookie r0;
        boolean z0;

        r0 := @this: okhttp3.Cookie;

        z0 = r0.<okhttp3.Cookie: boolean hostOnly>;

        return z0;
    }
    public boolean httpOnly()
    {
        okhttp3.Cookie r0;
        boolean z0;

        r0 := @this: okhttp3.Cookie;

        z0 = r0.<okhttp3.Cookie: boolean httpOnly>;

        return z0;
    }
    public boolean matches(okhttp3.HttpUrl)
    {
        okhttp3.Cookie r0;
        okhttp3.HttpUrl $r1;
        boolean $z0;
        java.lang.String $r2, $r3;

        r0 := @this: okhttp3.Cookie;

        $r1 := @parameter0: okhttp3.HttpUrl;

        $z0 = r0.<okhttp3.Cookie: boolean hostOnly>;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String host()>();

        $r3 = r0.<okhttp3.Cookie: java.lang.String domain>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label1:
        if $z0 != 0 goto label3;

        return 0;

     label2:
        $r2 = virtualinvoke $r1.<okhttp3.HttpUrl: java.lang.String host()>();

        $r3 = r0.<okhttp3.Cookie: java.lang.String domain>;

        $z0 = staticinvoke <okhttp3.Cookie: boolean domainMatch(java.lang.String,java.lang.String)>($r2, $r3);

        goto label1;

     label3:
        $r2 = r0.<okhttp3.Cookie: java.lang.String path>;

        $z0 = staticinvoke <okhttp3.Cookie: boolean pathMatch(okhttp3.HttpUrl,java.lang.String)>($r1, $r2);

        if $z0 == 0 goto label5;

        $z0 = r0.<okhttp3.Cookie: boolean secure>;

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke $r1.<okhttp3.HttpUrl: boolean isHttps()>();

        if $z0 == 0 goto label5;

     label4:
        return 1;

     label5:
        return 0;
    }
    public java.lang.String name()
    {
        okhttp3.Cookie r0;
        java.lang.String r1;

        r0 := @this: okhttp3.Cookie;

        r1 = r0.<okhttp3.Cookie: java.lang.String name>;

        return r1;
    }
    public java.lang.String path()
    {
        okhttp3.Cookie r0;
        java.lang.String r1;

        r0 := @this: okhttp3.Cookie;

        r1 = r0.<okhttp3.Cookie: java.lang.String path>;

        return r1;
    }
    public boolean persistent()
    {
        okhttp3.Cookie r0;
        boolean z0;

        r0 := @this: okhttp3.Cookie;

        z0 = r0.<okhttp3.Cookie: boolean persistent>;

        return z0;
    }
    public boolean secure()
    {
        okhttp3.Cookie r0;
        boolean z0;

        r0 := @this: okhttp3.Cookie;

        z0 = r0.<okhttp3.Cookie: boolean secure>;

        return z0;
    }
    public java.lang.String toString()
    {
        okhttp3.Cookie r0;
        java.lang.String $r1;

        r0 := @this: okhttp3.Cookie;

        $r1 = virtualinvoke r0.<okhttp3.Cookie: java.lang.String toString(boolean)>(0);

        return $r1;
    }
    java.lang.String toString(boolean)
    {
        okhttp3.Cookie r0;
        boolean $z0, $z1;
        java.lang.StringBuilder r1, $r3;
        java.lang.String $r2;
        long $l0;
        byte $b1;
        java.util.Date $r4;

        r0 := @this: okhttp3.Cookie;

        $z0 := @parameter0: boolean;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<okhttp3.Cookie: java.lang.String name>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r2 = r0.<okhttp3.Cookie: java.lang.String value>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $z1 = r0.<okhttp3.Cookie: boolean persistent>;

        if $z1 == 0 goto label1;

        $l0 = r0.<okhttp3.Cookie: long expiresAt>;

        $b1 = $l0 cmp -9223372036854775808L;

        if $b1 != 0 goto label6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; max-age=0");

     label1:
        $z1 = r0.<okhttp3.Cookie: boolean hostOnly>;

        if $z1 != 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; domain=");

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

     label2:
        $r2 = r0.<okhttp3.Cookie: java.lang.String domain>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label3:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; path=");

        $r2 = r0.<okhttp3.Cookie: java.lang.String path>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $z0 = r0.<okhttp3.Cookie: boolean secure>;

        if $z0 == 0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; secure");

     label4:
        $z0 = r0.<okhttp3.Cookie: boolean httpOnly>;

        if $z0 == 0 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; httponly");

     label5:
        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label6:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; expires=");

        $r4 = new java.util.Date;

        $l0 = r0.<okhttp3.Cookie: long expiresAt>;

        specialinvoke $r4.<java.util.Date: void <init>(long)>($l0);

        $r2 = staticinvoke <okhttp3.internal.http.HttpDate: java.lang.String format(java.util.Date)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        goto label1;
    }
    public java.lang.String value()
    {
        okhttp3.Cookie r0;
        java.lang.String r1;

        r0 := @this: okhttp3.Cookie;

        r1 = r0.<okhttp3.Cookie: java.lang.String value>;

        return r1;
    }
