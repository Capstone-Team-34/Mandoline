okhttp3.CipherSuite$1 extends java.lang.Object implements java.util.Comparator
    void <init>()
    {
        okhttp3.CipherSuite$1 r0;

        r0 := @this: okhttp3.CipherSuite$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        okhttp3.CipherSuite$1 r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.String $r3, $r4;

        r0 := @this: okhttp3.CipherSuite$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) $r1;

        $r4 = (java.lang.String) $r2;

        $i0 = virtualinvoke r0.<okhttp3.CipherSuite$1: int compare(java.lang.String,java.lang.String)>($r3, $r4);

        return $i0;
    }
    public int compare(java.lang.String, java.lang.String)
    {
        okhttp3.CipherSuite$1 r0;
        java.lang.String $r1, $r2;
        int i0, $i1, $i2;
        char $c3, $c4;

        r0 := @this: okhttp3.CipherSuite$1;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        i0 = 4;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

     label1:
        if i0 >= $i1 goto label4;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i0);

        if $c3 == $c4 goto label3;

        if $c3 >= $c4 goto label2;

        return -1;

     label2:
        return 1;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i0 == $i1 goto label5;

        if i0 < $i1 goto label6;

        return 1;

     label5:
        return 0;

     label6:
        return -1;
    }
