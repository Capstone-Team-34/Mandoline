okhttp3.internal.http2.Http2Stream$StreamTimeout extends okio.AsyncTimeout
final okhttp3.internal.http2.Http2Stream this$0
    void <init>(okhttp3.internal.http2.Http2Stream)
    {
        okhttp3.internal.http2.Http2Stream$StreamTimeout r0;
        okhttp3.internal.http2.Http2Stream $r1;

        r0 := @this: okhttp3.internal.http2.Http2Stream$StreamTimeout;

        $r1 := @parameter0: okhttp3.internal.http2.Http2Stream;

        r0.<okhttp3.internal.http2.Http2Stream$StreamTimeout: okhttp3.internal.http2.Http2Stream this$0> = $r1;

        specialinvoke r0.<okio.AsyncTimeout: void <init>()>();

        return;
    }
    public void exitAndThrowIfTimedOut() throws java.io.IOException
    {
        okhttp3.internal.http2.Http2Stream$StreamTimeout r0;
        boolean $z0;
        java.io.IOException $r1;

        r0 := @this: okhttp3.internal.http2.Http2Stream$StreamTimeout;

        $z0 = virtualinvoke r0.<okhttp3.internal.http2.Http2Stream$StreamTimeout: boolean exit()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<okhttp3.internal.http2.Http2Stream$StreamTimeout: java.io.IOException newTimeoutException(java.io.IOException)>(null);

        throw $r1;

     label1:
        return;
    }
    protected java.io.IOException newTimeoutException(java.io.IOException)
    {
        okhttp3.internal.http2.Http2Stream$StreamTimeout r0;
        java.io.IOException $r1;
        java.net.SocketTimeoutException r2;

        r0 := @this: okhttp3.internal.http2.Http2Stream$StreamTimeout;

        $r1 := @parameter0: java.io.IOException;

        r2 = new java.net.SocketTimeoutException;

        specialinvoke r2.<java.net.SocketTimeoutException: void <init>(java.lang.String)>("timeout");

        if $r1 == null goto label1;

        virtualinvoke r2.<java.net.SocketTimeoutException: java.lang.Throwable initCause(java.lang.Throwable)>($r1);

     label1:
        return r2;
    }
    protected void timedOut()
    {
        okhttp3.internal.http2.Http2Stream$StreamTimeout r0;
        okhttp3.internal.http2.Http2Stream $r1;
        okhttp3.internal.http2.ErrorCode $r2;

        r0 := @this: okhttp3.internal.http2.Http2Stream$StreamTimeout;

        $r1 = r0.<okhttp3.internal.http2.Http2Stream$StreamTimeout: okhttp3.internal.http2.Http2Stream this$0>;

        $r2 = <okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL>;

        virtualinvoke $r1.<okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)>($r2);

        return;
    }
