okhttp3.internal.http2.Http2Stream$FramingSink extends java.lang.Object implements okio.Sink
static final boolean $assertionsDisabled
private static final long EMIT_BUFFER_SIZE
boolean closed
boolean finished
private final okio.Buffer sendBuffer
final okhttp3.internal.http2.Http2Stream this$0
    static void <clinit>()
    {
        boolean $z0;
        java.lang.Class $r0;

        $r0 = class "Lokhttp3/internal/http2/Http2Stream;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <okhttp3.internal.http2.Http2Stream$FramingSink: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }
    void <init>(okhttp3.internal.http2.Http2Stream)
    {
        okhttp3.internal.http2.Http2Stream$FramingSink r0;
        okhttp3.internal.http2.Http2Stream $r1;
        okio.Buffer $r2;

        r0 := @this: okhttp3.internal.http2.Http2Stream$FramingSink;

        $r1 := @parameter0: okhttp3.internal.http2.Http2Stream;

        r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new okio.Buffer;

        specialinvoke $r2.<okio.Buffer: void <init>()>();

        r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer> = $r2;

        return;
    }
    private void emitFrame(boolean) throws java.io.IOException
    {
        okhttp3.internal.http2.Http2Stream$FramingSink r0;
        boolean $z0, $z1;
        okio.Buffer $r1;
        okhttp3.internal.http2.Http2Stream $r2, $r3;
        okhttp3.internal.http2.Http2Stream$StreamTimeout $r4;
        long $l0, $l2;
        byte $b1;
        okhttp3.internal.http2.ErrorCode $r5;
        java.lang.Throwable $r6, $r7, $r9;
        okhttp3.internal.http2.Http2Connection $r8;
        int $i3;

        r0 := @this: okhttp3.internal.http2.Http2Stream$FramingSink;

        $z0 := @parameter0: boolean;

        $r2 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        entermonitor $r2;

     label01:
        $r3 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $r4 = $r3.<okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout>;

        virtualinvoke $r4.<okhttp3.internal.http2.Http2Stream$StreamTimeout: void enter()>();

     label02:
        $r3 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $l0 = $r3.<okhttp3.internal.http2.Http2Stream: long bytesLeftInWriteWindow>;

        $b1 = $l0 cmp 0L;

        if $b1 > 0 goto label08;

        $z1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: boolean finished>;

        if $z1 != 0 goto label08;

        $z1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: boolean closed>;

        if $z1 != 0 goto label08;

        $r3 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $r5 = $r3.<okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode errorCode>;

        if $r5 != null goto label08;

        $r3 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        virtualinvoke $r3.<okhttp3.internal.http2.Http2Stream: void waitForIo()>();

     label03:
        goto label02;

     label04:
        $r6 := @caughtexception;

     label05:
        $r3 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $r4 = $r3.<okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout>;

        virtualinvoke $r4.<okhttp3.internal.http2.Http2Stream$StreamTimeout: void exitAndThrowIfTimedOut()>();

        throw $r6;

     label06:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label07:
        throw $r7;

     label08:
        $r3 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $r4 = $r3.<okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout>;

        virtualinvoke $r4.<okhttp3.internal.http2.Http2Stream$StreamTimeout: void exitAndThrowIfTimedOut()>();

        $r3 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        virtualinvoke $r3.<okhttp3.internal.http2.Http2Stream: void checkOutNotClosed()>();

        $r3 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $l0 = $r3.<okhttp3.internal.http2.Http2Stream: long bytesLeftInWriteWindow>;

        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer>;

        $l2 = virtualinvoke $r1.<okio.Buffer: long size()>();

        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l2);

        $r3 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $l2 = $r3.<okhttp3.internal.http2.Http2Stream: long bytesLeftInWriteWindow>;

        $l2 = $l2 - $l0;

        $r3.<okhttp3.internal.http2.Http2Stream: long bytesLeftInWriteWindow> = $l2;

        exitmonitor $r2;

     label09:
        $r2 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $r4 = $r2.<okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout>;

        virtualinvoke $r4.<okhttp3.internal.http2.Http2Stream$StreamTimeout: void enter()>();

     label10:
        $r2 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $r8 = $r2.<okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection connection>;

        $r2 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $i3 = $r2.<okhttp3.internal.http2.Http2Stream: int id>;

     label11:
        if $z0 == 0 goto label16;

     label12:
        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer>;

        $l2 = virtualinvoke $r1.<okio.Buffer: long size()>();

     label13:
        $b1 = $l0 cmp $l2;

        if $b1 != 0 goto label16;

        $z0 = 1;

     label14:
        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer>;

        virtualinvoke $r8.<okhttp3.internal.http2.Http2Connection: void writeData(int,boolean,okio.Buffer,long)>($i3, $z0, $r1, $l0);

     label15:
        $r2 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $r4 = $r2.<okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout>;

        virtualinvoke $r4.<okhttp3.internal.http2.Http2Stream$StreamTimeout: void exitAndThrowIfTimedOut()>();

        return;

     label16:
        $z0 = 0;

        goto label14;

     label17:
        $r9 := @caughtexception;

        $r2 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $r4 = $r2.<okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout>;

        virtualinvoke $r4.<okhttp3.internal.http2.Http2Stream$StreamTimeout: void exitAndThrowIfTimedOut()>();

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label07 with label06;
        catch java.lang.Throwable from label08 to label09 with label06;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
    }
    public void close() throws java.io.IOException
    {
        okhttp3.internal.http2.Http2Stream$FramingSink r0, $r3;
        boolean $z0;
        okhttp3.internal.http2.Http2Stream $r1;
        java.lang.AssertionError $r2;
        okio.Buffer $r4;
        long $l0;
        byte $b1;
        java.lang.Throwable $r5, $r7;
        okhttp3.internal.http2.Http2Connection $r6;
        int $i2;

        r0 := @this: okhttp3.internal.http2.Http2Stream$FramingSink;

        $z0 = <okhttp3.internal.http2.Http2Stream$FramingSink: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r1);

        if $z0 == 0 goto label01;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label01:
        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        entermonitor $r1;

     label02:
        $z0 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: boolean closed>;

        if $z0 == 0 goto label04;

        exitmonitor $r1;

     label03:
        return;

     label04:
        exitmonitor $r1;

     label05:
        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $r3 = $r1.<okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink sink>;

        $z0 = $r3.<okhttp3.internal.http2.Http2Stream$FramingSink: boolean finished>;

        if $z0 != 0 goto label11;

        $r4 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer>;

        $l0 = virtualinvoke $r4.<okio.Buffer: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label10;

     label06:
        $r4 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer>;

        $l0 = virtualinvoke $r4.<okio.Buffer: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label11;

        specialinvoke r0.<okhttp3.internal.http2.Http2Stream$FramingSink: void emitFrame(boolean)>(1);

        goto label06;

     label07:
        $r5 := @caughtexception;

     label08:
        exitmonitor $r1;

     label09:
        throw $r5;

     label10:
        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $r6 = $r1.<okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection connection>;

        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $i2 = $r1.<okhttp3.internal.http2.Http2Stream: int id>;

        virtualinvoke $r6.<okhttp3.internal.http2.Http2Connection: void writeData(int,boolean,okio.Buffer,long)>($i2, 1, null, 0L);

     label11:
        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        entermonitor $r1;

     label12:
        r0.<okhttp3.internal.http2.Http2Stream$FramingSink: boolean closed> = 1;

        exitmonitor $r1;

     label13:
        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $r6 = $r1.<okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection connection>;

        virtualinvoke $r6.<okhttp3.internal.http2.Http2Connection: void flush()>();

        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        virtualinvoke $r1.<okhttp3.internal.http2.Http2Stream: void cancelStreamIfNecessary()>();

        return;

     label14:
        $r7 := @caughtexception;

     label15:
        exitmonitor $r1;

     label16:
        throw $r7;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }
    public void flush() throws java.io.IOException
    {
        okhttp3.internal.http2.Http2Stream$FramingSink r0;
        okhttp3.internal.http2.Http2Stream $r1, $r3;
        boolean $z0;
        java.lang.AssertionError $r2;
        okio.Buffer $r4;
        long $l0;
        byte $b1;
        okhttp3.internal.http2.Http2Connection $r5;
        java.lang.Throwable $r6;

        r0 := @this: okhttp3.internal.http2.Http2Stream$FramingSink;

        $z0 = <okhttp3.internal.http2.Http2Stream$FramingSink: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        entermonitor $r1;

     label2:
        $r3 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        virtualinvoke $r3.<okhttp3.internal.http2.Http2Stream: void checkOutNotClosed()>();

        exitmonitor $r1;

     label3:
        $r4 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer>;

        $l0 = virtualinvoke $r4.<okio.Buffer: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label7;

        specialinvoke r0.<okhttp3.internal.http2.Http2Stream$FramingSink: void emitFrame(boolean)>(0);

        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $r5 = $r1.<okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection connection>;

        virtualinvoke $r5.<okhttp3.internal.http2.Http2Connection: void flush()>();

        goto label3;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor $r1;

     label6:
        throw $r6;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
    public okio.Timeout timeout()
    {
        okhttp3.internal.http2.Http2Stream$FramingSink r0;
        okhttp3.internal.http2.Http2Stream $r1;
        okhttp3.internal.http2.Http2Stream$StreamTimeout r2;

        r0 := @this: okhttp3.internal.http2.Http2Stream$FramingSink;

        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        r2 = $r1.<okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout>;

        return r2;
    }
    public void write(okio.Buffer, long) throws java.io.IOException
    {
        okhttp3.internal.http2.Http2Stream$FramingSink r0;
        okio.Buffer $r1, $r4;
        long $l0;
        boolean $z0;
        okhttp3.internal.http2.Http2Stream $r2;
        java.lang.AssertionError $r3;
        byte $b1;

        r0 := @this: okhttp3.internal.http2.Http2Stream$FramingSink;

        $r1 := @parameter0: okio.Buffer;

        $l0 := @parameter1: long;

        $z0 = <okhttp3.internal.http2.Http2Stream$FramingSink: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r2 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0>;

        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r4 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer>;

        virtualinvoke $r4.<okio.Buffer: void write(okio.Buffer,long)>($r1, $l0);

     label2:
        $r1 = r0.<okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer>;

        $l0 = virtualinvoke $r1.<okio.Buffer: long size()>();

        $b1 = $l0 cmp 16384L;

        if $b1 < 0 goto label3;

        specialinvoke r0.<okhttp3.internal.http2.Http2Stream$FramingSink: void emitFrame(boolean)>(0);

        goto label2;

     label3:
        return;
    }
