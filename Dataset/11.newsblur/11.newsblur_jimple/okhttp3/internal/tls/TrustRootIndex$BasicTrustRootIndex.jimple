okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex extends okhttp3.internal.tls.TrustRootIndex
private final java.util.Map subjectToCaCerts
    transient void <init>(java.security.cert.X509Certificate[])
    {
        okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex r0;
        java.security.cert.X509Certificate[] $r1;
        java.security.cert.X509Certificate r2;
        int $i0, $i1;
        javax.security.auth.x500.X500Principal $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.util.Set r6;
        java.util.LinkedHashMap $r7;
        java.util.LinkedHashSet $r8;

        r0 := @this: okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex;

        $r1 := @parameter0: java.security.cert.X509Certificate[];

        specialinvoke r0.<okhttp3.internal.tls.TrustRootIndex: void <init>()>();

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        r0.<okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex: java.util.Map subjectToCaCerts> = $r7;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r2 = $r1[$i1];

        $r3 = virtualinvoke r2.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r4 = r0.<okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex: java.util.Map subjectToCaCerts>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r6 = (java.util.Set) $r5;

        if r6 != null goto label2;

        $r8 = new java.util.LinkedHashSet;

        r6 = $r8;

        specialinvoke $r8.<java.util.LinkedHashSet: void <init>(int)>(1);

        $r4 = r0.<okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex: java.util.Map subjectToCaCerts>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r8);

     label2:
        interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>(r2);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }
    public boolean equals(java.lang.Object)
    {
        okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex r0, r3;
        java.util.Map $r1, $r4;
        boolean $z0;
        java.lang.Object r2;

        r0 := @this: okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex;

        r2 := @parameter0: java.lang.Object;

        if r2 != r0 goto label1;

        return 1;

     label1:
        $z0 = r2 instanceof okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex;

        if $z0 == 0 goto label2;

        r3 = (okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex) r2;

        $r4 = r3.<okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex: java.util.Map subjectToCaCerts>;

        $r1 = r0.<okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex: java.util.Map subjectToCaCerts>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
    public java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
    {
        okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex r0;
        java.security.cert.X509Certificate $r1, r7;
        javax.security.auth.x500.X500Principal $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.util.Set r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.security.PublicKey $r8;
        java.lang.Exception $r9;

        r0 := @this: okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = virtualinvoke $r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r3 = r0.<okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex: java.util.Map subjectToCaCerts>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (java.util.Set) $r4;

        if r5 != null goto label1;

        return null;

     label1:
        $r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.security.cert.X509Certificate) $r4;

        $r8 = virtualinvoke r7.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

     label3:
        virtualinvoke $r1.<java.security.cert.X509Certificate: void verify(java.security.PublicKey)>($r8);

     label4:
        return r7;

     label5:
        $r9 := @caughtexception;

        goto label2;

     label6:
        return null;

        catch java.lang.Exception from label3 to label4 with label5;
    }
    public int hashCode()
    {
        okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex r0;
        int $i0;
        java.util.Map $r1;

        r0 := @this: okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex;

        $r1 = r0.<okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex: java.util.Map subjectToCaCerts>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        return $i0;
    }
