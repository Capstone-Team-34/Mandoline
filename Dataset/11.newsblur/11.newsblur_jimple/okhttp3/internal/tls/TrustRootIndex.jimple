okhttp3.internal.tls.TrustRootIndex extends java.lang.Object
    public void <init>()
    {
        okhttp3.internal.tls.TrustRootIndex r0;

        r0 := @this: okhttp3.internal.tls.TrustRootIndex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static okhttp3.internal.tls.TrustRootIndex get(javax.net.ssl.X509TrustManager)
    {
        javax.net.ssl.X509TrustManager $r0;
        java.lang.NoSuchMethodException r1;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r4;
        okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex $r5;
        java.security.cert.X509Certificate[] $r6;
        okhttp3.internal.tls.TrustRootIndex $r7;

        $r0 := @parameter0: javax.net.ssl.X509TrustManager;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Ljava/security/cert/X509Certificate;";

     label3:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("findTrustAnchorByIssuerAndSignature", $r3);

        virtualinvoke $r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label4:
        $r5 = new okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex;

     label5:
        specialinvoke $r5.<okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex: void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)>($r0, $r4);

     label6:
        return $r5;

     label7:
        r1 := @caughtexception;

        $r6 = interfaceinvoke $r0.<javax.net.ssl.X509TrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>();

        $r7 = staticinvoke <okhttp3.internal.tls.TrustRootIndex: okhttp3.internal.tls.TrustRootIndex get(java.security.cert.X509Certificate[])>($r6);

        return $r7;

        catch java.lang.NoSuchMethodException from label1 to label2 with label7;
        catch java.lang.NoSuchMethodException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
    }
    public static transient okhttp3.internal.tls.TrustRootIndex get(java.security.cert.X509Certificate[])
    {
        java.security.cert.X509Certificate[] $r0;
        okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex $r1;

        $r0 := @parameter0: java.security.cert.X509Certificate[];

        $r1 = new okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex;

        specialinvoke $r1.<okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex: void <init>(java.security.cert.X509Certificate[])>($r0);

        return $r1;
    }
public abstract java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) { 
// no body
} 
