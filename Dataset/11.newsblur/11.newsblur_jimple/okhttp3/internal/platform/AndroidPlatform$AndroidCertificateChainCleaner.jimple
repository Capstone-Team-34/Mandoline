okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner extends okhttp3.internal.tls.CertificateChainCleaner
private final java.lang.reflect.Method checkServerTrusted
private final java.lang.Object x509TrustManagerExtensions
    void <init>(java.lang.Object, java.lang.reflect.Method)
    {
        okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner r0;
        java.lang.Object $r1;
        java.lang.reflect.Method $r2;

        r0 := @this: okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.reflect.Method;

        specialinvoke r0.<okhttp3.internal.tls.CertificateChainCleaner: void <init>()>();

        r0.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.lang.Object x509TrustManagerExtensions> = $r1;

        r0.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.lang.reflect.Method checkServerTrusted> = $r2;

        return;
    }
    public java.util.List clean(java.util.List, java.lang.String) throws javax.net.ssl.SSLPeerUnverifiedException
    {
        okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner r0;
        java.util.List r1;
        java.lang.String $r2;
        javax.net.ssl.SSLPeerUnverifiedException r3;
        java.lang.Object $r4;
        int $i0;
        java.security.cert.X509Certificate[] $r5;
        java.lang.Object[] $r6;
        java.lang.reflect.Method $r7;
        java.lang.reflect.InvocationTargetException r8;
        java.lang.IllegalAccessException r9;
        java.lang.AssertionError $r10;

        r0 := @this: okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

     label2:
        $r5 = newarray (java.security.cert.X509Certificate)[$i0];

     label3:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

     label4:
        $r5 = (java.security.cert.X509Certificate[]) $r6;

        $r7 = r0.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.lang.reflect.Method checkServerTrusted>;

        $r4 = r0.<okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.lang.Object x509TrustManagerExtensions>;

        $r6 = newarray (java.lang.Object)[3];

        $r6[0] = $r5;

        $r6[1] = "RSA";

        $r6[2] = $r2;

     label5:
        $r4 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r6);

     label6:
        r1 = (java.util.List) $r4;

        return r1;

     label7:
        r8 := @caughtexception;

        r3 = new javax.net.ssl.SSLPeerUnverifiedException;

        $r2 = virtualinvoke r8.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();

        specialinvoke r3.<javax.net.ssl.SSLPeerUnverifiedException: void <init>(java.lang.String)>($r2);

        virtualinvoke r3.<javax.net.ssl.SSLPeerUnverifiedException: java.lang.Throwable initCause(java.lang.Throwable)>(r8);

        throw r3;

     label8:
        r9 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>(r9);

        throw $r10;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch java.lang.reflect.InvocationTargetException from label5 to label6 with label7;
        catch java.lang.IllegalAccessException from label1 to label2 with label8;
        catch java.lang.IllegalAccessException from label3 to label4 with label8;
        catch java.lang.IllegalAccessException from label5 to label6 with label8;
    }
    public boolean equals(java.lang.Object)
    {
        okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner;

        return $z0;
    }
    public int hashCode()
    {
        okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner r0;

        r0 := @this: okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner;

        return 0;
    }
