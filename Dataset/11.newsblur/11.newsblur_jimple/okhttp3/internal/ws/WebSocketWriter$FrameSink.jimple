okhttp3.internal.ws.WebSocketWriter$FrameSink extends java.lang.Object implements okio.Sink
boolean closed
long contentLength
int formatOpcode
boolean isFirstFrame
final okhttp3.internal.ws.WebSocketWriter this$0
    void <init>(okhttp3.internal.ws.WebSocketWriter)
    {
        okhttp3.internal.ws.WebSocketWriter$FrameSink r0;
        okhttp3.internal.ws.WebSocketWriter $r1;

        r0 := @this: okhttp3.internal.ws.WebSocketWriter$FrameSink;

        $r1 := @parameter0: okhttp3.internal.ws.WebSocketWriter;

        r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void close() throws java.io.IOException
    {
        okhttp3.internal.ws.WebSocketWriter$FrameSink r0;
        boolean $z0;
        okhttp3.internal.ws.WebSocketWriter $r1, $r3, $r4;
        long $l0;
        java.io.IOException $r2;
        int $i1;
        okio.Buffer $r5;
        java.lang.Throwable $r6;

        r0 := @this: okhttp3.internal.ws.WebSocketWriter$FrameSink;

        $z0 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r1 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0>;

        entermonitor $r1;

     label2:
        $r3 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0>;

        $i1 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: int formatOpcode>;

        $r4 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0>;

        $r5 = $r4.<okhttp3.internal.ws.WebSocketWriter: okio.Buffer buffer>;

        $l0 = virtualinvoke $r5.<okio.Buffer: long size()>();

        $z0 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean isFirstFrame>;

        virtualinvoke $r3.<okhttp3.internal.ws.WebSocketWriter: void writeMessageFrameSynchronized(int,long,boolean,boolean)>($i1, $l0, $z0, 1);

        exitmonitor $r1;

     label3:
        r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean closed> = 1;

        $r1 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0>;

        $r1.<okhttp3.internal.ws.WebSocketWriter: boolean activeWriter> = 0;

        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
    public void flush() throws java.io.IOException
    {
        okhttp3.internal.ws.WebSocketWriter$FrameSink r0;
        boolean $z0;
        okhttp3.internal.ws.WebSocketWriter $r1, $r3, $r4;
        long $l0;
        java.io.IOException $r2;
        int $i1;
        okio.Buffer $r5;
        java.lang.Throwable $r6;

        r0 := @this: okhttp3.internal.ws.WebSocketWriter$FrameSink;

        $z0 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r1 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0>;

        entermonitor $r1;

     label2:
        $r3 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0>;

        $i1 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: int formatOpcode>;

        $r4 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0>;

        $r5 = $r4.<okhttp3.internal.ws.WebSocketWriter: okio.Buffer buffer>;

        $l0 = virtualinvoke $r5.<okio.Buffer: long size()>();

        $z0 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean isFirstFrame>;

        virtualinvoke $r3.<okhttp3.internal.ws.WebSocketWriter: void writeMessageFrameSynchronized(int,long,boolean,boolean)>($i1, $l0, $z0, 0);

        exitmonitor $r1;

     label3:
        r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean isFirstFrame> = 0;

        return;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
    public okio.Timeout timeout()
    {
        okhttp3.internal.ws.WebSocketWriter$FrameSink r0;
        okio.Timeout $r1;
        okhttp3.internal.ws.WebSocketWriter $r2;
        okio.BufferedSink $r3;

        r0 := @this: okhttp3.internal.ws.WebSocketWriter$FrameSink;

        $r2 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0>;

        $r3 = $r2.<okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink sink>;

        $r1 = interfaceinvoke $r3.<okio.BufferedSink: okio.Timeout timeout()>();

        return $r1;
    }
    public void write(okio.Buffer, long) throws java.io.IOException
    {
        okhttp3.internal.ws.WebSocketWriter$FrameSink r0;
        okio.Buffer $r1, $r4;
        long $l0, $l2;
        boolean $z0;
        java.io.IOException $r2;
        okhttp3.internal.ws.WebSocketWriter $r3, $r5;
        byte $b1;
        int $i3;
        java.lang.Throwable $r6;

        r0 := @this: okhttp3.internal.ws.WebSocketWriter$FrameSink;

        $r1 := @parameter0: okio.Buffer;

        $l0 := @parameter1: long;

        $z0 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r3 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0>;

        $r4 = $r3.<okhttp3.internal.ws.WebSocketWriter: okio.Buffer buffer>;

        virtualinvoke $r4.<okio.Buffer: void write(okio.Buffer,long)>($r1, $l0);

        $z0 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean isFirstFrame>;

        if $z0 == 0 goto label5;

        $l0 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: long contentLength>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label5;

        $r3 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0>;

        $r1 = $r3.<okhttp3.internal.ws.WebSocketWriter: okio.Buffer buffer>;

        $l0 = virtualinvoke $r1.<okio.Buffer: long size()>();

        $l2 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: long contentLength>;

        $l2 = $l2 - 8192L;

        $b1 = $l0 cmp $l2;

        if $b1 <= 0 goto label5;

        $z0 = 1;

     label2:
        $r3 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0>;

        $r1 = $r3.<okhttp3.internal.ws.WebSocketWriter: okio.Buffer buffer>;

        $l0 = virtualinvoke $r1.<okio.Buffer: long completeSegmentByteCount()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label9;

        if $z0 != 0 goto label9;

        $r3 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0>;

        entermonitor $r3;

     label3:
        $r5 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0>;

        $i3 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: int formatOpcode>;

        $z0 = r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean isFirstFrame>;

        virtualinvoke $r5.<okhttp3.internal.ws.WebSocketWriter: void writeMessageFrameSynchronized(int,long,boolean,boolean)>($i3, $l0, $z0, 0);

        exitmonitor $r3;

     label4:
        r0.<okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean isFirstFrame> = 0;

        return;

     label5:
        $z0 = 0;

        goto label2;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor $r3;

     label8:
        throw $r6;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
