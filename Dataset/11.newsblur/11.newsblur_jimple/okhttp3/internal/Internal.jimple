okhttp3.internal.Internal extends java.lang.Object
public static okhttp3.internal.Internal instance
    public void <init>()
    {
        okhttp3.internal.Internal r0;

        r0 := @this: okhttp3.internal.Internal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static void initializeInstanceForTests()
    {
        okhttp3.OkHttpClient $r0;

        $r0 = new okhttp3.OkHttpClient;

        specialinvoke $r0.<okhttp3.OkHttpClient: void <init>()>();

        return;
    }
public abstract void addLenient(okhttp3.Headers$Builder, java.lang.String) { 
// no body
} 
public abstract void addLenient(okhttp3.Headers$Builder, java.lang.String, java.lang.String) { 
// no body
} 
public abstract void apply(okhttp3.ConnectionSpec, javax.net.ssl.SSLSocket, boolean) { 
// no body
} 
public abstract int code(okhttp3.Response$Builder) { 
// no body
} 
public abstract boolean connectionBecameIdle(okhttp3.ConnectionPool, okhttp3.internal.connection.RealConnection) { 
// no body
} 
public abstract java.net.Socket deduplicate(okhttp3.ConnectionPool, okhttp3.Address, okhttp3.internal.connection.StreamAllocation) { 
// no body
} 
public abstract boolean equalsNonHost(okhttp3.Address, okhttp3.Address) { 
// no body
} 
public abstract okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool, okhttp3.Address, okhttp3.internal.connection.StreamAllocation, okhttp3.Route) { 
// no body
} 
public abstract okhttp3.HttpUrl getHttpUrlChecked(java.lang.String) throws java.net.MalformedURLException, java.net.UnknownHostException { 
// no body
} 
public abstract okhttp3.Call newWebSocketCall(okhttp3.OkHttpClient, okhttp3.Request) { 
// no body
} 
public abstract void put(okhttp3.ConnectionPool, okhttp3.internal.connection.RealConnection) { 
// no body
} 
public abstract okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool) { 
// no body
} 
public abstract void setCache(okhttp3.OkHttpClient$Builder, okhttp3.internal.cache.InternalCache) { 
// no body
} 
public abstract okhttp3.internal.connection.StreamAllocation streamAllocation(okhttp3.Call) { 
// no body
} 
