okhttp3.internal.http.RealResponseBody extends okhttp3.ResponseBody
private final okhttp3.Headers headers
private final okio.BufferedSource source
    public void <init>(okhttp3.Headers, okio.BufferedSource)
    {
        okhttp3.internal.http.RealResponseBody r0;
        okhttp3.Headers $r1;
        okio.BufferedSource $r2;

        r0 := @this: okhttp3.internal.http.RealResponseBody;

        $r1 := @parameter0: okhttp3.Headers;

        $r2 := @parameter1: okio.BufferedSource;

        specialinvoke r0.<okhttp3.ResponseBody: void <init>()>();

        r0.<okhttp3.internal.http.RealResponseBody: okhttp3.Headers headers> = $r1;

        r0.<okhttp3.internal.http.RealResponseBody: okio.BufferedSource source> = $r2;

        return;
    }
    public long contentLength()
    {
        okhttp3.internal.http.RealResponseBody r0;
        long $l0;
        okhttp3.Headers $r1;

        r0 := @this: okhttp3.internal.http.RealResponseBody;

        $r1 = r0.<okhttp3.internal.http.RealResponseBody: okhttp3.Headers headers>;

        $l0 = staticinvoke <okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)>($r1);

        return $l0;
    }
    public okhttp3.MediaType contentType()
    {
        okhttp3.internal.http.RealResponseBody r0;
        okhttp3.Headers $r1;
        java.lang.String $r2;
        okhttp3.MediaType $r3;

        r0 := @this: okhttp3.internal.http.RealResponseBody;

        $r1 = r0.<okhttp3.internal.http.RealResponseBody: okhttp3.Headers headers>;

        $r2 = virtualinvoke $r1.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Type");

        if $r2 == null goto label1;

        $r3 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>($r2);

        return $r3;

     label1:
        return null;
    }
    public okio.BufferedSource source()
    {
        okhttp3.internal.http.RealResponseBody r0;
        okio.BufferedSource r1;

        r0 := @this: okhttp3.internal.http.RealResponseBody;

        r1 = r0.<okhttp3.internal.http.RealResponseBody: okio.BufferedSource source>;

        return r1;
    }
