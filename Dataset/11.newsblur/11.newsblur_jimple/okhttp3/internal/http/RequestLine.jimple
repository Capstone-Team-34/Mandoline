okhttp3.internal.http.RequestLine extends java.lang.Object
    private void <init>()
    {
        okhttp3.internal.http.RequestLine r0;

        r0 := @this: okhttp3.internal.http.RequestLine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public static java.lang.String get(okhttp3.Request, java.net.Proxy$Type)
    {
        okhttp3.Request $r0;
        java.net.Proxy$Type $r1;
        java.lang.StringBuilder r2;
        java.lang.String $r3;
        boolean $z0;
        okhttp3.HttpUrl $r4;

        $r0 := @parameter0: okhttp3.Request;

        $r1 := @parameter1: java.net.Proxy$Type;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r0.<okhttp3.Request: java.lang.String method()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $z0 = staticinvoke <okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)>($r0, $r1);

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

     label1:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" HTTP/1.1");

        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        $r4 = virtualinvoke $r0.<okhttp3.Request: okhttp3.HttpUrl url()>();

        $r3 = staticinvoke <okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)>($r4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label1;
    }
    private static boolean includeAuthorityInRequestLine(okhttp3.Request, java.net.Proxy$Type)
    {
        okhttp3.Request $r0;
        java.net.Proxy$Type $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: okhttp3.Request;

        $r1 := @parameter1: java.net.Proxy$Type;

        $z0 = virtualinvoke $r0.<okhttp3.Request: boolean isHttps()>();

        if $z0 != 0 goto label1;

        $r2 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        if $r1 != $r2 goto label1;

        return 1;

     label1:
        return 0;
    }
    public static java.lang.String requestPath(okhttp3.HttpUrl)
    {
        okhttp3.HttpUrl $r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: okhttp3.HttpUrl;

        $r1 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedPath()>();

        $r2 = virtualinvoke $r0.<okhttp3.HttpUrl: java.lang.String encodedQuery()>();

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return $r1;
    }
