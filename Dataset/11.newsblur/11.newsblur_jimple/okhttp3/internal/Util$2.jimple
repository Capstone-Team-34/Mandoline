okhttp3.internal.Util$2 extends java.lang.Object implements java.util.concurrent.ThreadFactory
final boolean val$daemon
final java.lang.String val$name
    void <init>(java.lang.String, boolean)
    {
        okhttp3.internal.Util$2 r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: okhttp3.internal.Util$2;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        r0.<okhttp3.internal.Util$2: java.lang.String val$name> = $r1;

        r0.<okhttp3.internal.Util$2: boolean val$daemon> = $z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public java.lang.Thread newThread(java.lang.Runnable)
    {
        okhttp3.internal.Util$2 r0;
        java.lang.Runnable $r1;
        java.lang.Thread r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: okhttp3.internal.Util$2;

        $r1 := @parameter0: java.lang.Runnable;

        r2 = new java.lang.Thread;

        $r3 = r0.<okhttp3.internal.Util$2: java.lang.String val$name>;

        specialinvoke r2.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r1, $r3);

        $z0 = r0.<okhttp3.internal.Util$2: boolean val$daemon>;

        virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>($z0);

        return r2;
    }
