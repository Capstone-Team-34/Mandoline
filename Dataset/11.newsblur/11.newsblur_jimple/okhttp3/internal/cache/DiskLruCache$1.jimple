okhttp3.internal.cache.DiskLruCache$1 extends java.lang.Object implements java.lang.Runnable
final okhttp3.internal.cache.DiskLruCache this$0
    void <init>(okhttp3.internal.cache.DiskLruCache)
    {
        okhttp3.internal.cache.DiskLruCache$1 r0;
        okhttp3.internal.cache.DiskLruCache $r1;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$1;

        $r1 := @parameter0: okhttp3.internal.cache.DiskLruCache;

        r0.<okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
    public void run()
    {
        okhttp3.internal.cache.DiskLruCache$1 r0;
        java.io.IOException r1, r2;
        okhttp3.internal.cache.DiskLruCache $r3, $r4;
        boolean $z0, $z1;
        java.lang.Throwable $r5;
        okio.Sink $r6;
        okio.BufferedSink $r7;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$1;

        $z0 = 1;

        $r3 = r0.<okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0>;

        entermonitor $r3;

     label01:
        $r4 = r0.<okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0>;

        $z1 = $r4.<okhttp3.internal.cache.DiskLruCache: boolean initialized>;

        if $z1 != 0 goto label04;

     label02:
        $r4 = r0.<okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0>;

        $z1 = $r4.<okhttp3.internal.cache.DiskLruCache: boolean closed>;

        $z0 = $z0 | $z1;

        if $z0 == 0 goto label05;

        exitmonitor $r3;

     label03:
        return;

     label04:
        $z0 = 0;

        goto label02;

     label05:
        $r4 = r0.<okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0>;

     label06:
        virtualinvoke $r4.<okhttp3.internal.cache.DiskLruCache: void trimToSize()>();

     label07:
        $r4 = r0.<okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0>;

     label08:
        $z0 = virtualinvoke $r4.<okhttp3.internal.cache.DiskLruCache: boolean journalRebuildRequired()>();

     label09:
        if $z0 == 0 goto label12;

        $r4 = r0.<okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0>;

     label10:
        virtualinvoke $r4.<okhttp3.internal.cache.DiskLruCache: void rebuildJournal()>();

     label11:
        $r4 = r0.<okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0>;

        $r4.<okhttp3.internal.cache.DiskLruCache: int redundantOpCount> = 0;

     label12:
        exitmonitor $r3;

     label13:
        return;

     label14:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label15:
        throw $r5;

     label16:
        r2 := @caughtexception;

     label17:
        $r4 = r0.<okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0>;

        $r4.<okhttp3.internal.cache.DiskLruCache: boolean mostRecentTrimFailed> = 1;

        goto label07;

     label18:
        r1 := @caughtexception;

        $r4 = r0.<okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0>;

        $r4.<okhttp3.internal.cache.DiskLruCache: boolean mostRecentRebuildFailed> = 1;

        $r4 = r0.<okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0>;

        $r6 = staticinvoke <okio.Okio: okio.Sink blackhole()>();

        $r7 = staticinvoke <okio.Okio: okio.BufferedSink buffer(okio.Sink)>($r6);

        $r4.<okhttp3.internal.cache.DiskLruCache: okio.BufferedSink journalWriter> = $r7;

     label19:
        goto label12;

        catch java.lang.Throwable from label01 to label03 with label14;
        catch java.io.IOException from label06 to label07 with label16;
        catch java.lang.Throwable from label05 to label07 with label14;
        catch java.io.IOException from label08 to label09 with label18;
        catch java.io.IOException from label10 to label11 with label18;
        catch java.lang.Throwable from label07 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch java.lang.Throwable from label17 to label19 with label14;
    }
