okhttp3.internal.cache.CacheStrategy extends java.lang.Object
public final okhttp3.Response cacheResponse
public final okhttp3.Request networkRequest
    void <init>(okhttp3.Request, okhttp3.Response)
    {
        okhttp3.internal.cache.CacheStrategy r0;
        okhttp3.Request $r1;
        okhttp3.Response $r2;

        r0 := @this: okhttp3.internal.cache.CacheStrategy;

        $r1 := @parameter0: okhttp3.Request;

        $r2 := @parameter1: okhttp3.Response;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<okhttp3.internal.cache.CacheStrategy: okhttp3.Request networkRequest> = $r1;

        r0.<okhttp3.internal.cache.CacheStrategy: okhttp3.Response cacheResponse> = $r2;

        return;
    }
    public static boolean isCacheable(okhttp3.Response, okhttp3.Request)
    {
        okhttp3.Response $r0;
        okhttp3.Request $r1;
        int $i0;
        java.lang.String $r2;
        okhttp3.CacheControl $r3;
        boolean $z0;

        $r0 := @parameter0: okhttp3.Response;

        $r1 := @parameter1: okhttp3.Request;

        $i0 = virtualinvoke $r0.<okhttp3.Response: int code()>();

        lookupswitch($i0)
        {
            case 200: goto label3;
            case 203: goto label3;
            case 204: goto label3;
            case 300: goto label3;
            case 301: goto label3;
            case 302: goto label2;
            case 307: goto label2;
            case 308: goto label3;
            case 404: goto label3;
            case 405: goto label3;
            case 410: goto label3;
            case 414: goto label3;
            case 501: goto label3;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $r2 = virtualinvoke $r0.<okhttp3.Response: java.lang.String header(java.lang.String)>("Expires");

        if $r2 != null goto label3;

        $r3 = virtualinvoke $r0.<okhttp3.Response: okhttp3.CacheControl cacheControl()>();

        $i0 = virtualinvoke $r3.<okhttp3.CacheControl: int maxAgeSeconds()>();

        if $i0 != -1 goto label3;

        $r3 = virtualinvoke $r0.<okhttp3.Response: okhttp3.CacheControl cacheControl()>();

        $z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean isPublic()>();

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke $r0.<okhttp3.Response: okhttp3.CacheControl cacheControl()>();

        $z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean isPrivate()>();

        if $z0 == 0 goto label4;

     label3:
        $r3 = virtualinvoke $r0.<okhttp3.Response: okhttp3.CacheControl cacheControl()>();

        $z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean noStore()>();

        if $z0 != 0 goto label4;

        $r3 = virtualinvoke $r1.<okhttp3.Request: okhttp3.CacheControl cacheControl()>();

        $z0 = virtualinvoke $r3.<okhttp3.CacheControl: boolean noStore()>();

        if $z0 != 0 goto label4;

        return 1;

     label4:
        return 0;
    }
