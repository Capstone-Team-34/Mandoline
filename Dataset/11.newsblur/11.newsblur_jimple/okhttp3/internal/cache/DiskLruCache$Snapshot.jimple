okhttp3.internal.cache.DiskLruCache$Snapshot extends java.lang.Object implements java.io.Closeable
private final java.lang.String key
private final long[] lengths
private final long sequenceNumber
private final okio.Source[] sources
final okhttp3.internal.cache.DiskLruCache this$0
    void <init>(okhttp3.internal.cache.DiskLruCache, java.lang.String, long, okio.Source[], long[])
    {
        okhttp3.internal.cache.DiskLruCache$Snapshot r0;
        okhttp3.internal.cache.DiskLruCache $r1;
        java.lang.String $r2;
        long $l0;
        okio.Source[] $r3;
        long[] $r4;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$Snapshot;

        $r1 := @parameter0: okhttp3.internal.cache.DiskLruCache;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r3 := @parameter3: okio.Source[];

        $r4 := @parameter4: long[];

        r0.<okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key> = $r2;

        r0.<okhttp3.internal.cache.DiskLruCache$Snapshot: long sequenceNumber> = $l0;

        r0.<okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source[] sources> = $r3;

        r0.<okhttp3.internal.cache.DiskLruCache$Snapshot: long[] lengths> = $r4;

        return;
    }
    static java.lang.String access$000(okhttp3.internal.cache.DiskLruCache$Snapshot)
    {
        okhttp3.internal.cache.DiskLruCache$Snapshot $r0;
        java.lang.String r1;

        $r0 := @parameter0: okhttp3.internal.cache.DiskLruCache$Snapshot;

        r1 = $r0.<okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key>;

        return r1;
    }
    public void close()
    {
        okhttp3.internal.cache.DiskLruCache$Snapshot r0;
        okio.Source r1;
        okio.Source[] $r2;
        int $i0, $i1;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$Snapshot;

        $r2 = r0.<okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source[] sources>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r1 = $r2[$i1];

        staticinvoke <okhttp3.internal.Util: void closeQuietly(java.io.Closeable)>(r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }
    public okhttp3.internal.cache.DiskLruCache$Editor edit() throws java.io.IOException
    {
        okhttp3.internal.cache.DiskLruCache$Snapshot r0;
        java.lang.String $r1;
        long $l0;
        okhttp3.internal.cache.DiskLruCache$Editor $r2;
        okhttp3.internal.cache.DiskLruCache $r3;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$Snapshot;

        $r3 = r0.<okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache this$0>;

        $r1 = r0.<okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key>;

        $l0 = r0.<okhttp3.internal.cache.DiskLruCache$Snapshot: long sequenceNumber>;

        $r2 = virtualinvoke $r3.<okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long)>($r1, $l0);

        return $r2;
    }
    public long getLength(int)
    {
        okhttp3.internal.cache.DiskLruCache$Snapshot r0;
        int $i0;
        long[] $r1;
        long $l1;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$Snapshot;

        $i0 := @parameter0: int;

        $r1 = r0.<okhttp3.internal.cache.DiskLruCache$Snapshot: long[] lengths>;

        $l1 = $r1[$i0];

        return $l1;
    }
    public okio.Source getSource(int)
    {
        okhttp3.internal.cache.DiskLruCache$Snapshot r0;
        int $i0;
        okio.Source[] $r1;
        okio.Source $r2;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$Snapshot;

        $i0 := @parameter0: int;

        $r1 = r0.<okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source[] sources>;

        $r2 = $r1[$i0];

        return $r2;
    }
    public java.lang.String key()
    {
        okhttp3.internal.cache.DiskLruCache$Snapshot r0;
        java.lang.String r1;

        r0 := @this: okhttp3.internal.cache.DiskLruCache$Snapshot;

        r1 = r0.<okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key>;

        return r1;
    }
