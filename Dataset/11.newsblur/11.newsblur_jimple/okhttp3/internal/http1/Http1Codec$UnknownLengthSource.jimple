okhttp3.internal.http1.Http1Codec$UnknownLengthSource extends okhttp3.internal.http1.Http1Codec$AbstractSource
private boolean inputExhausted
final okhttp3.internal.http1.Http1Codec this$0
    void <init>(okhttp3.internal.http1.Http1Codec)
    {
        okhttp3.internal.http1.Http1Codec$UnknownLengthSource r0;
        okhttp3.internal.http1.Http1Codec $r1;

        r0 := @this: okhttp3.internal.http1.Http1Codec$UnknownLengthSource;

        $r1 := @parameter0: okhttp3.internal.http1.Http1Codec;

        r0.<okhttp3.internal.http1.Http1Codec$UnknownLengthSource: okhttp3.internal.http1.Http1Codec this$0> = $r1;

        specialinvoke r0.<okhttp3.internal.http1.Http1Codec$AbstractSource: void <init>(okhttp3.internal.http1.Http1Codec,okhttp3.internal.http1.Http1Codec$1)>($r1, null);

        return;
    }
    public void close() throws java.io.IOException
    {
        okhttp3.internal.http1.Http1Codec$UnknownLengthSource r0;
        boolean $z0;

        r0 := @this: okhttp3.internal.http1.Http1Codec$UnknownLengthSource;

        $z0 = r0.<okhttp3.internal.http1.Http1Codec$UnknownLengthSource: boolean closed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = r0.<okhttp3.internal.http1.Http1Codec$UnknownLengthSource: boolean inputExhausted>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<okhttp3.internal.http1.Http1Codec$UnknownLengthSource: void endOfInput(boolean)>(0);

     label2:
        r0.<okhttp3.internal.http1.Http1Codec$UnknownLengthSource: boolean closed> = 1;

        return;
    }
    public long read(okio.Buffer, long) throws java.io.IOException
    {
        okhttp3.internal.http1.Http1Codec$UnknownLengthSource r0;
        okio.Buffer $r1;
        long $l0;
        byte $b1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        okhttp3.internal.http1.Http1Codec $r6;
        okio.BufferedSource $r7;

        r0 := @this: okhttp3.internal.http1.Http1Codec$UnknownLengthSource;

        $r1 := @parameter0: okio.Buffer;

        $l0 := @parameter1: long;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("byteCount < 0: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $z0 = r0.<okhttp3.internal.http1.Http1Codec$UnknownLengthSource: boolean closed>;

        if $z0 == 0 goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r5;

     label2:
        $z0 = r0.<okhttp3.internal.http1.Http1Codec$UnknownLengthSource: boolean inputExhausted>;

        if $z0 == 0 goto label3;

        return -1L;

     label3:
        $r6 = r0.<okhttp3.internal.http1.Http1Codec$UnknownLengthSource: okhttp3.internal.http1.Http1Codec this$0>;

        $r7 = $r6.<okhttp3.internal.http1.Http1Codec: okio.BufferedSource source>;

        $l0 = interfaceinvoke $r7.<okio.BufferedSource: long read(okio.Buffer,long)>($r1, $l0);

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label4;

        r0.<okhttp3.internal.http1.Http1Codec$UnknownLengthSource: boolean inputExhausted> = 1;

        virtualinvoke r0.<okhttp3.internal.http1.Http1Codec$UnknownLengthSource: void endOfInput(boolean)>(1);

        return -1L;

     label4:
        return $l0;
    }
