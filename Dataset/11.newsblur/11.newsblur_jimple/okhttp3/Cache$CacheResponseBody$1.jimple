okhttp3.Cache$CacheResponseBody$1 extends okio.ForwardingSource
final okhttp3.Cache$CacheResponseBody this$0
final okhttp3.internal.cache.DiskLruCache$Snapshot val$snapshot
    void <init>(okhttp3.Cache$CacheResponseBody, okio.Source, okhttp3.internal.cache.DiskLruCache$Snapshot)
    {
        okhttp3.Cache$CacheResponseBody$1 r0;
        okhttp3.Cache$CacheResponseBody $r1;
        okio.Source $r2;
        okhttp3.internal.cache.DiskLruCache$Snapshot $r3;

        r0 := @this: okhttp3.Cache$CacheResponseBody$1;

        $r1 := @parameter0: okhttp3.Cache$CacheResponseBody;

        $r2 := @parameter1: okio.Source;

        $r3 := @parameter2: okhttp3.internal.cache.DiskLruCache$Snapshot;

        r0.<okhttp3.Cache$CacheResponseBody$1: okhttp3.Cache$CacheResponseBody this$0> = $r1;

        r0.<okhttp3.Cache$CacheResponseBody$1: okhttp3.internal.cache.DiskLruCache$Snapshot val$snapshot> = $r3;

        specialinvoke r0.<okio.ForwardingSource: void <init>(okio.Source)>($r2);

        return;
    }
    public void close() throws java.io.IOException
    {
        okhttp3.Cache$CacheResponseBody$1 r0;
        okhttp3.internal.cache.DiskLruCache$Snapshot $r1;

        r0 := @this: okhttp3.Cache$CacheResponseBody$1;

        $r1 = r0.<okhttp3.Cache$CacheResponseBody$1: okhttp3.internal.cache.DiskLruCache$Snapshot val$snapshot>;

        virtualinvoke $r1.<okhttp3.internal.cache.DiskLruCache$Snapshot: void close()>();

        specialinvoke r0.<okio.ForwardingSource: void close()>();

        return;
    }
